ARM GAS  /tmp/ccFLPyPj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"pid_regulator.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
  22      04040404 
  22      3838
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
  28      00000800 
  28      0008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
  34      00000800 
  34      0000
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
  40      080A0C0E 
  40      1014
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
  46      04050607 
  46      080A
  47              		.section	.rodata.USART_PRESCALER_TAB,"a"
  48              		.align	2
  51              	USART_PRESCALER_TAB:
  52 0000 01000000 		.word	1
  53 0004 02000000 		.word	2
  54 0008 04000000 		.word	4
  55 000c 06000000 		.word	6
  56 0010 08000000 		.word	8
  57 0014 0A000000 		.word	10
  58 0018 0C000000 		.word	12
  59 001c 10000000 		.word	16
ARM GAS  /tmp/ccFLPyPj.s 			page 2


  60 0020 20000000 		.word	32
  61 0024 40000000 		.word	64
  62 0028 80000000 		.word	128
  63 002c 00010000 		.word	256
  64              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  65              		.align	2
  68              	CHANNEL_OFFSET_TAB:
  69 0000 081C3044 		.ascii	"\010\0340DXl"
  69      586C
  70              		.section	.text.PID_HandleInit,"ax",%progbits
  71              		.align	1
  72              		.weak	PID_HandleInit
  73              		.arch armv7e-m
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	PID_HandleInit:
  80              	.LFB1437:
  81              		.file 1 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @file    pid_regulator.c
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief   This file provides firmware functions that implement the features
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *          of the PID regulator component of the Motor Control SDK.
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *  The PID regulator component provides the functions needed to implement 
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * a proportional–integral–derivative controller. 
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * See @link PIDRegulator @endlink for more details.
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   ******************************************************************************
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @attention
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * All rights reserved.</center></h2>
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * This software component is licensed by ST under Ultimate Liberty license
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * the License. You may obtain a copy of the License at:
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *                             www.st.com/SLA0044
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   ******************************************************************************
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @ingroup PIDRegulator
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /* Includes ------------------------------------------------------------------*/
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #include "pid_regulator.h"
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #include "mc_type.h"
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /** @addtogroup MCSDK
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @{
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @defgroup PIDRegulator PID Regulator
ARM GAS  /tmp/ccFLPyPj.s 			page 3


  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief PID Regulator component of the Motor Control SDK
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The PID regulator component implements the following two control functions:
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * * A simple proportional-integral controller, implemented by the PI_Controller() function:
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @f[
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * r(t_k) = K_p \times \epsilon(t_k) + K_i \times \sum_{j=0}^k\epsilon(t_j)
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @f]
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * * A complete proportional–integral–derivative controller, implemented by the PID_Controller
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @f[
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * r(t_k) = K_p \times \epsilon(t_k) + K_i \times \sum_{j=0}^k\epsilon(t_j) + K_d \times (\epsilon
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @f]
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The proportional, integral and derivative gains are expressed as rational numbers, with a gain 
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * and a divisor (denominator) parameters:
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * * Proportional gain: @f$ K_{p} = K_{pg} / K_{pd} @f$
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * * Integral gain: @f$ K_{i} = K_{ig} / K_{id} @f$
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * * Derivative gain: @f$ K_{d} = K_{dg} / K_{dd} @f$
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * Each of the gain numerator and divisor parameters, @f$K_{{p}g}@f$, @f$K_{{i}g}@f$, @f$K_{{d}g}@
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @f$K_{id}@f$, @f$K_{dd}@f$, can be set, at run time and independently, via the PID_SetKP(), PID
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * PID_SetKPDivisorPOW2(), PID_SetKIDivisorPOW2() and PID_SetKDDivisorPOW2() functions, respective
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * A PID Regulator component needs to be initialized before it can be used. This is done with the 
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * function that sets the intergral term and the derivative term base (the previous value of the p
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * to 0 and that also resets the numerators of the proportional, integral and derivative gains to 
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * These default values are literally written in the code of the application, so they are set at c
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * can be retrieved with the PID_GetDefaultKP(), PID_GetDefaultKI() and PID_GetDefaultKD() functio
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The controller functions implemented by the PI_Controller() and the PID_Controller() functions 
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * integer arithmetics: the gains are expressed as fractional numbers, with 16-bit numerators and 
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * controller output values returned by these functions are also 16-bit integers. This makes it po
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * component efficiently on all STM2 MCUs. 
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * To keep the computed values within limits, the component features the possibility to constrain 
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * within a range of values bounded by the PID_SetLowerIntegralTermLimit() and PID_SetUpperIntegra
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The output valud of the controller can also be bounded between a high and a low limit thanks to
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * PID_SetLowerOutputLimit() and PID_SetUpperOutputLimit() functions.
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * Hanlding a process with a PID Controller may require some adjustment to cope with specific situ
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * PID regulator component provides functions to set the integral term (PID_SetIntegralTerm()) or 
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * previous process error (PID_SetPrevError()).
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * See the [PID chapter of the User Manual](PID_regulator_theoretical_background.md) for more deta
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * background of this regulator.
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @{
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Initializes the handle of a PID component
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle A Handle on the PID component to initialize
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The integral term and the derivative base of the PID component are 
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * set to zero. 
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
ARM GAS  /tmp/ccFLPyPj.s 			page 4


  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The numerators of the proportional, integral and derivative gains 
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * are set to their default values. These default values are the ones 
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * set to the PID_Handle_t::hDefKpGain, PID_Handle_t::hDefKiGain and
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * PID_Handle_t::hDefKdGain fields of the PID_Handle_t structure.
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_HandleInit(PID_Handle_t *pHandle)
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
  82              		.loc 1 101 1
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87 0000 80B4     		push	{r7}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              	.LCFI1:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI2:
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKpGain =  pHandle->hDefKpGain;
  98              		.loc 1 110 32
  99 0008 7B68     		ldr	r3, [r7, #4]
 100 000a B3F90020 		ldrsh	r2, [r3]
 101              		.loc 1 110 22
 102 000e 7B68     		ldr	r3, [r7, #4]
 103 0010 9A80     		strh	r2, [r3, #4]	@ movhi
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKiGain =  pHandle->hDefKiGain;
 104              		.loc 1 111 32
 105 0012 7B68     		ldr	r3, [r7, #4]
 106 0014 B3F90220 		ldrsh	r2, [r3, #2]
 107              		.loc 1 111 22
 108 0018 7B68     		ldr	r3, [r7, #4]
 109 001a DA80     		strh	r2, [r3, #6]	@ movhi
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKdGain =  pHandle->hDefKdGain;
 110              		.loc 1 112 32
 111 001c 7B68     		ldr	r3, [r7, #4]
 112 001e B3F92020 		ldrsh	r2, [r3, #32]
 113              		.loc 1 112 22
 114 0022 7B68     		ldr	r3, [r7, #4]
 115 0024 5A84     		strh	r2, [r3, #34]	@ movhi
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wIntegralTerm = 0;
 116              		.loc 1 113 28
 117 0026 7B68     		ldr	r3, [r7, #4]
 118 0028 0022     		movs	r2, #0
 119 002a 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccFLPyPj.s 			page 5


 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wPrevProcessVarError = 0;
 120              		.loc 1 114 35
 121 002c 7B68     		ldr	r3, [r7, #4]
 122 002e 0022     		movs	r2, #0
 123 0030 9A62     		str	r2, [r3, #40]
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 124              		.loc 1 118 1
 125 0032 00BF     		nop
 126 0034 0C37     		adds	r7, r7, #12
 127              	.LCFI3:
 128              		.cfi_def_cfa_offset 4
 129 0036 BD46     		mov	sp, r7
 130              	.LCFI4:
 131              		.cfi_def_cfa_register 13
 132              		@ sp needed
 133 0038 5DF8047B 		ldr	r7, [sp], #4
 134              	.LCFI5:
 135              		.cfi_restore 7
 136              		.cfi_def_cfa_offset 0
 137 003c 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE1437:
 141              		.section	.text.PID_SetKP,"ax",%progbits
 142              		.align	1
 143              		.weak	PID_SetKP
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	PID_SetKP:
 150              	.LFB1438:
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets @f$K_{pg}@f$, the numerator of the proportional gain of a PID component
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  hKpGain New @f$K_{pg}@f$ value
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetKP(PID_Handle_t *pHandle, int16_t hKpGain)
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 151              		.loc 1 126 1
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156 0000 80B4     		push	{r7}
 157              	.LCFI6:
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 7, -4
 160 0002 83B0     		sub	sp, sp, #12
 161              	.LCFI7:
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              	.LCFI8:
 165              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccFLPyPj.s 			page 6


 166 0006 7860     		str	r0, [r7, #4]
 167 0008 0B46     		mov	r3, r1
 168 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKpGain = hKpGain;
 169              		.loc 1 135 22
 170 000c 7B68     		ldr	r3, [r7, #4]
 171 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 172 0010 9A80     		strh	r2, [r3, #4]	@ movhi
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 173              		.loc 1 139 1
 174 0012 00BF     		nop
 175 0014 0C37     		adds	r7, r7, #12
 176              	.LCFI9:
 177              		.cfi_def_cfa_offset 4
 178 0016 BD46     		mov	sp, r7
 179              	.LCFI10:
 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 0018 5DF8047B 		ldr	r7, [sp], #4
 183              	.LCFI11:
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 001c 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE1438:
 190              		.section	.text.PID_SetKI,"ax",%progbits
 191              		.align	1
 192              		.weak	PID_SetKI
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	PID_SetKI:
 199              	.LFB1439:
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the @f$K_{ig}@f$, the numrerator of the integral gain of a PID component
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  hKiGain new @f$K_{ig}@f$ value
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetKI(PID_Handle_t *pHandle, int16_t hKiGain)
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 200              		.loc 1 147 1
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccFLPyPj.s 			page 7


 204              		@ link register save eliminated.
 205 0000 80B4     		push	{r7}
 206              	.LCFI12:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 0002 83B0     		sub	sp, sp, #12
 210              	.LCFI13:
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              	.LCFI14:
 214              		.cfi_def_cfa_register 7
 215 0006 7860     		str	r0, [r7, #4]
 216 0008 0B46     		mov	r3, r1
 217 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKiGain = hKiGain;
 218              		.loc 1 156 22
 219 000c 7B68     		ldr	r3, [r7, #4]
 220 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 221 0010 DA80     		strh	r2, [r3, #6]	@ movhi
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 222              		.loc 1 160 1
 223 0012 00BF     		nop
 224 0014 0C37     		adds	r7, r7, #12
 225              	.LCFI15:
 226              		.cfi_def_cfa_offset 4
 227 0016 BD46     		mov	sp, r7
 228              	.LCFI16:
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0018 5DF8047B 		ldr	r7, [sp], #4
 232              	.LCFI17:
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 001c 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE1439:
 239              		.section	.text.PID_GetKP,"ax",%progbits
 240              		.align	1
 241              		.weak	PID_GetKP
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv4-sp-d16
 247              	PID_GetKP:
 248              	.LFB1440:
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
ARM GAS  /tmp/ccFLPyPj.s 			page 8


 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns @f$K_{pg}@f$, the numerator of the proportional gain of a PID component
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PID_GetKP(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 249              		.loc 1 167 1
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              	.LCFI18:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 83B0     		sub	sp, sp, #12
 259              	.LCFI19:
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              	.LCFI20:
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0 : pHandle->hKpGain);
 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKpGain);
 265              		.loc 1 171 18
 266 0008 7B68     		ldr	r3, [r7, #4]
 267 000a B3F90430 		ldrsh	r3, [r3, #4]
 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 268              		.loc 1 173 1
 269 000e 1846     		mov	r0, r3
 270 0010 0C37     		adds	r7, r7, #12
 271              	.LCFI21:
 272              		.cfi_def_cfa_offset 4
 273 0012 BD46     		mov	sp, r7
 274              	.LCFI22:
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 0014 5DF8047B 		ldr	r7, [sp], #4
 278              	.LCFI23:
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 0018 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE1440:
 285              		.section	.text.PID_GetKI,"ax",%progbits
 286              		.align	1
 287              		.weak	PID_GetKI
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	PID_GetKI:
 294              	.LFB1441:
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
ARM GAS  /tmp/ccFLPyPj.s 			page 9


 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns @f$K_{ig}@f$, the numrerator of the integral gain of a PID component
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PID_GetKI(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 295              		.loc 1 180 1
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300 0000 80B4     		push	{r7}
 301              	.LCFI24:
 302              		.cfi_def_cfa_offset 4
 303              		.cfi_offset 7, -4
 304 0002 83B0     		sub	sp, sp, #12
 305              	.LCFI25:
 306              		.cfi_def_cfa_offset 16
 307 0004 00AF     		add	r7, sp, #0
 308              	.LCFI26:
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0 : pHandle->hKiGain);
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKiGain);
 311              		.loc 1 184 18
 312 0008 7B68     		ldr	r3, [r7, #4]
 313 000a B3F90630 		ldrsh	r3, [r3, #6]
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 314              		.loc 1 186 1
 315 000e 1846     		mov	r0, r3
 316 0010 0C37     		adds	r7, r7, #12
 317              	.LCFI27:
 318              		.cfi_def_cfa_offset 4
 319 0012 BD46     		mov	sp, r7
 320              	.LCFI28:
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0014 5DF8047B 		ldr	r7, [sp], #4
 324              	.LCFI29:
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 0018 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE1441:
 331              		.section	.text.PID_GetDefaultKP,"ax",%progbits
 332              		.align	1
 333              		.weak	PID_GetDefaultKP
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	PID_GetDefaultKP:
 340              	.LFB1442:
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
ARM GAS  /tmp/ccFLPyPj.s 			page 10


 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns the default @f$K_{pg}@f$ value, the numerator of the proportional
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         gain of a PID component
 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *  The default @f$K_{pg}@f$ value is the one that is being used at startup time,
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * when the MCU is reset or when the PID_HandleInit() function gets called. When 
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * any of the last two event occurs, any proportional gain numerator that may 
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * have been previously set with the PID_SetKP() function is replaced by this 
 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * default value.
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PID_GetDefaultKP(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 341              		.loc 1 200 1
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              	.LCFI30:
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 83B0     		sub	sp, sp, #12
 351              	.LCFI31:
 352              		.cfi_def_cfa_offset 16
 353 0004 00AF     		add	r7, sp, #0
 354              	.LCFI32:
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0 : pHandle->hDefKpGain);
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hDefKpGain);
 357              		.loc 1 204 18
 358 0008 7B68     		ldr	r3, [r7, #4]
 359 000a B3F90030 		ldrsh	r3, [r3]
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 360              		.loc 1 206 1
 361 000e 1846     		mov	r0, r3
 362 0010 0C37     		adds	r7, r7, #12
 363              	.LCFI33:
 364              		.cfi_def_cfa_offset 4
 365 0012 BD46     		mov	sp, r7
 366              	.LCFI34:
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0014 5DF8047B 		ldr	r7, [sp], #4
 370              	.LCFI35:
 371              		.cfi_restore 7
 372              		.cfi_def_cfa_offset 0
 373 0018 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE1442:
 377              		.section	.text.PID_GetDefaultKI,"ax",%progbits
 378              		.align	1
 379              		.weak	PID_GetDefaultKI
ARM GAS  /tmp/ccFLPyPj.s 			page 11


 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	PID_GetDefaultKI:
 386              	.LFB1443:
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns the default @f$K_{ig}@f$ value, the numerator of the integral
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         gain of a PID component
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *  The default @f$K_{ig}@f$ value is the one that is being used at startup time,
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * when the MCU is reset or when the PID_HandleInit() function gets called. When 
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * any of the last two event occurs, any gain that may have been previously set 
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * with the PID_SetKI() function is replaced by this default value.
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PID_GetDefaultKI(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 387              		.loc 1 219 1
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392 0000 80B4     		push	{r7}
 393              	.LCFI36:
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 83B0     		sub	sp, sp, #12
 397              	.LCFI37:
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              	.LCFI38:
 401              		.cfi_def_cfa_register 7
 402 0006 7860     		str	r0, [r7, #4]
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0 : pHandle->hDefKiGain);
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hDefKiGain);
 403              		.loc 1 223 18
 404 0008 7B68     		ldr	r3, [r7, #4]
 405 000a B3F90230 		ldrsh	r3, [r3, #2]
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 406              		.loc 1 225 1
 407 000e 1846     		mov	r0, r3
 408 0010 0C37     		adds	r7, r7, #12
 409              	.LCFI39:
 410              		.cfi_def_cfa_offset 4
 411 0012 BD46     		mov	sp, r7
 412              	.LCFI40:
 413              		.cfi_def_cfa_register 13
 414              		@ sp needed
 415 0014 5DF8047B 		ldr	r7, [sp], #4
 416              	.LCFI41:
 417              		.cfi_restore 7
 418              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccFLPyPj.s 			page 12


 419 0018 7047     		bx	lr
 420              		.cfi_endproc
 421              	.LFE1443:
 423              		.section	.text.PID_SetIntegralTerm,"ax",%progbits
 424              		.align	1
 425              		.weak	PID_SetIntegralTerm
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 429              		.fpu fpv4-sp-d16
 431              	PID_SetIntegralTerm:
 432              	.LFB1444:
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #if defined (CCMRAM)
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #if defined (__ICCARM__)
 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #pragma location = ".ccmram"
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __attribute__((section(".ccmram")))
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the value of the integral term of a PID component
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  wIntegralTermValue new integral term value multiplied by the divisor 
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *                            of the integral gain
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * If @f$T_{i}@f$ is the target integral term, the @p wIntegralTermValue term is stored
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * before the division by @f$K_{id}@f$ to maximize the available dynamics.
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @attention @p wIntegralTermValue divided by @f$K_{id}@f$ must fit in a 16-bit signed 
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * integer value.
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetIntegralTerm(PID_Handle_t *pHandle, int32_t wIntegralTermValue)
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 433              		.loc 1 247 1
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 8
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
 439              	.LCFI42:
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 0002 83B0     		sub	sp, sp, #12
 443              	.LCFI43:
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              	.LCFI44:
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 449 0008 3960     		str	r1, [r7]
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
ARM GAS  /tmp/ccFLPyPj.s 			page 13


 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wIntegralTerm = wIntegralTermValue;
 450              		.loc 1 256 28
 451 000a 7B68     		ldr	r3, [r7, #4]
 452 000c 3A68     		ldr	r2, [r7]
 453 000e 9A60     		str	r2, [r3, #8]
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return;
 454              		.loc 1 260 3
 455 0010 00BF     		nop
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 456              		.loc 1 261 1
 457 0012 0C37     		adds	r7, r7, #12
 458              	.LCFI45:
 459              		.cfi_def_cfa_offset 4
 460 0014 BD46     		mov	sp, r7
 461              	.LCFI46:
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 0016 5DF8047B 		ldr	r7, [sp], #4
 465              	.LCFI47:
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 001a 7047     		bx	lr
 469              		.cfi_endproc
 470              	.LFE1444:
 472              		.section	.text.PID_GetKPDivisor,"ax",%progbits
 473              		.align	1
 474              		.weak	PID_GetKPDivisor
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv4-sp-d16
 480              	PID_GetKPDivisor:
 481              	.LFB1445:
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns @f$K_{pd}@f$, the divisor of the proportional gain of a PID component
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @sa PID_GetKPDivisorPOW2()
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak uint16_t PID_GetKPDivisor(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 482              		.loc 1 273 1
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              	.LCFI48:
ARM GAS  /tmp/ccFLPyPj.s 			page 14


 489              		.cfi_def_cfa_offset 4
 490              		.cfi_offset 7, -4
 491 0002 83B0     		sub	sp, sp, #12
 492              	.LCFI49:
 493              		.cfi_def_cfa_offset 16
 494 0004 00AF     		add	r7, sp, #0
 495              	.LCFI50:
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0U : pHandle->hKpDivisor);
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKpDivisor);
 498              		.loc 1 277 18
 499 0008 7B68     		ldr	r3, [r7, #4]
 500 000a 1B8B     		ldrh	r3, [r3, #24]
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 501              		.loc 1 279 1
 502 000c 1846     		mov	r0, r3
 503 000e 0C37     		adds	r7, r7, #12
 504              	.LCFI51:
 505              		.cfi_def_cfa_offset 4
 506 0010 BD46     		mov	sp, r7
 507              	.LCFI52:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0012 5DF8047B 		ldr	r7, [sp], #4
 511              	.LCFI53:
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0016 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE1445:
 518              		.section	.text.PID_GetKPDivisorPOW2,"ax",%progbits
 519              		.align	1
 520              		.weak	PID_GetKPDivisorPOW2
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv4-sp-d16
 526              	PID_GetKPDivisorPOW2:
 527              	.LFB1446:
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns the power of two that makes @f$K_{pd}@f$, the divisor of the proportional 
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         gain of a PID component
 284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @sa PID_GetKPDivisor()
 290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak uint16_t PID_GetKPDivisorPOW2(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 528              		.loc 1 292 1
ARM GAS  /tmp/ccFLPyPj.s 			page 15


 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              	.LCFI54:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 7, -4
 537 0002 83B0     		sub	sp, sp, #12
 538              	.LCFI55:
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI56:
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0U : pHandle->hKpDivisorPOW2);
 295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKpDivisorPOW2);
 544              		.loc 1 296 18
 545 0008 7B68     		ldr	r3, [r7, #4]
 546 000a 9B8B     		ldrh	r3, [r3, #28]
 297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 547              		.loc 1 298 1
 548 000c 1846     		mov	r0, r3
 549 000e 0C37     		adds	r7, r7, #12
 550              	.LCFI57:
 551              		.cfi_def_cfa_offset 4
 552 0010 BD46     		mov	sp, r7
 553              	.LCFI58:
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed
 556 0012 5DF8047B 		ldr	r7, [sp], #4
 557              	.LCFI59:
 558              		.cfi_restore 7
 559              		.cfi_def_cfa_offset 0
 560 0016 7047     		bx	lr
 561              		.cfi_endproc
 562              	.LFE1446:
 564              		.section	.text.PID_SetKPDivisorPOW2,"ax",%progbits
 565              		.align	1
 566              		.weak	PID_SetKPDivisorPOW2
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	PID_SetKPDivisorPOW2:
 573              	.LFB1447:
 299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the power of two that makes @f$K_{pd}@f$, the divisor of the proportional gain
 302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         of a PID component
 303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  hKpDivisorPOW2 new @f$K_{pd}@f$ divisor value, expressed as power of 2
 305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
ARM GAS  /tmp/ccFLPyPj.s 			page 16


 307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * This function sets @f$K_{pd}@f$ to 2 to the power of @p hKpDivisorPOW2.
 310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetKPDivisorPOW2(PID_Handle_t *pHandle, uint16_t hKpDivisorPOW2)
 312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 574              		.loc 1 312 1
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              	.LCFI60:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 83B0     		sub	sp, sp, #12
 584              	.LCFI61:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI62:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 590 0008 0B46     		mov	r3, r1
 591 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKpDivisorPOW2 = hKpDivisorPOW2;
 592              		.loc 1 321 29
 593 000c 7B68     		ldr	r3, [r7, #4]
 594 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 595 0010 9A83     		strh	r2, [r3, #28]	@ movhi
 322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKpDivisor = (((uint16_t)1) << hKpDivisorPOW2);
 596              		.loc 1 322 42
 597 0012 7B88     		ldrh	r3, [r7, #2]
 598 0014 0122     		movs	r2, #1
 599 0016 02FA03F3 		lsl	r3, r2, r3
 600              		.loc 1 322 25
 601 001a 9AB2     		uxth	r2, r3
 602 001c 7B68     		ldr	r3, [r7, #4]
 603 001e 1A83     		strh	r2, [r3, #24]	@ movhi
 323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 604              		.loc 1 326 1
 605 0020 00BF     		nop
 606 0022 0C37     		adds	r7, r7, #12
 607              	.LCFI63:
 608              		.cfi_def_cfa_offset 4
 609 0024 BD46     		mov	sp, r7
 610              	.LCFI64:
ARM GAS  /tmp/ccFLPyPj.s 			page 17


 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 0026 5DF8047B 		ldr	r7, [sp], #4
 614              	.LCFI65:
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 002a 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE1447:
 621              		.section	.text.PID_GetKIDivisor,"ax",%progbits
 622              		.align	1
 623              		.weak	PID_GetKIDivisor
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	PID_GetKIDivisor:
 630              	.LFB1448:
 327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns @f$K_{id}@f$, the divisor of the integral gain of a PID component
 330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
 332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @sa PID_GetKIDivisorPOW2()
 336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak uint16_t PID_GetKIDivisor(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 631              		.loc 1 338 1
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636 0000 80B4     		push	{r7}
 637              	.LCFI66:
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 83B0     		sub	sp, sp, #12
 641              	.LCFI67:
 642              		.cfi_def_cfa_offset 16
 643 0004 00AF     		add	r7, sp, #0
 644              	.LCFI68:
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0U : pHandle->hKiDivisor);
 341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKiDivisor);
 647              		.loc 1 342 18
 648 0008 7B68     		ldr	r3, [r7, #4]
 649 000a 5B8B     		ldrh	r3, [r3, #26]
 343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 650              		.loc 1 344 1
 651 000c 1846     		mov	r0, r3
ARM GAS  /tmp/ccFLPyPj.s 			page 18


 652 000e 0C37     		adds	r7, r7, #12
 653              	.LCFI69:
 654              		.cfi_def_cfa_offset 4
 655 0010 BD46     		mov	sp, r7
 656              	.LCFI70:
 657              		.cfi_def_cfa_register 13
 658              		@ sp needed
 659 0012 5DF8047B 		ldr	r7, [sp], #4
 660              	.LCFI71:
 661              		.cfi_restore 7
 662              		.cfi_def_cfa_offset 0
 663 0016 7047     		bx	lr
 664              		.cfi_endproc
 665              	.LFE1448:
 667              		.section	.text.PID_GetKIDivisorPOW2,"ax",%progbits
 668              		.align	1
 669              		.weak	PID_GetKIDivisorPOW2
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 673              		.fpu fpv4-sp-d16
 675              	PID_GetKIDivisorPOW2:
 676              	.LFB1449:
 345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief Returns the power of two that makes @f$K_{id}@f$, the divisor of the integral 
 348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *        gain of a PID component
 349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 351:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 352:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 353:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 354:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @sa PID_GetKIDivisor()
 355:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 356:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak uint16_t PID_GetKIDivisorPOW2(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 357:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 677              		.loc 1 357 1
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              	.LCFI72:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 83B0     		sub	sp, sp, #12
 687              	.LCFI73:
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              	.LCFI74:
 691              		.cfi_def_cfa_register 7
 692 0006 7860     		str	r0, [r7, #4]
 358:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 359:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0U : pHandle->hKiDivisorPOW2);
 360:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 361:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKiDivisorPOW2);
 693              		.loc 1 361 18
ARM GAS  /tmp/ccFLPyPj.s 			page 19


 694 0008 7B68     		ldr	r3, [r7, #4]
 695 000a DB8B     		ldrh	r3, [r3, #30]
 362:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 363:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 696              		.loc 1 363 1
 697 000c 1846     		mov	r0, r3
 698 000e 0C37     		adds	r7, r7, #12
 699              	.LCFI75:
 700              		.cfi_def_cfa_offset 4
 701 0010 BD46     		mov	sp, r7
 702              	.LCFI76:
 703              		.cfi_def_cfa_register 13
 704              		@ sp needed
 705 0012 5DF8047B 		ldr	r7, [sp], #4
 706              	.LCFI77:
 707              		.cfi_restore 7
 708              		.cfi_def_cfa_offset 0
 709 0016 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE1449:
 713              		.section	.text.PID_SetKIDivisorPOW2,"ax",%progbits
 714              		.align	1
 715              		.weak	PID_SetKIDivisorPOW2
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	PID_SetKIDivisorPOW2:
 722              	.LFB1450:
 364:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 365:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 366:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the power of two that makes @f$K_{id}@f$, the divisor of the integral gain
 367:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         of a PID component
 368:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 369:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  hKiDivisorPOW2 new @f$K_{id}@f$ divisor value, expressed as power of 2
 370:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 371:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 372:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 373:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 374:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * This function sets @f$K_{id}@f$ to 2 to the power of @p hKiDivisorPOW2. 
 375:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 376:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * Note that the upper and lower limits of the integral term are also updated to
 377:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * accept any 16-bit value. If the limits of the integral term need to be different 
 378:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * use the PID_SetUpperIntegralTermLimit() and PID_SetLowerIntegralTermLimit() functions
 379:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * after this one.
 380:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 381:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetKIDivisorPOW2(PID_Handle_t *pHandle, uint16_t hKiDivisorPOW2)
 382:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 723              		.loc 1 382 1
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 16
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727 0000 80B5     		push	{r7, lr}
 728              	.LCFI78:
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFLPyPj.s 			page 20


 732 0002 84B0     		sub	sp, sp, #16
 733              	.LCFI79:
 734              		.cfi_def_cfa_offset 24
 735 0004 00AF     		add	r7, sp, #0
 736              	.LCFI80:
 737              		.cfi_def_cfa_register 7
 738 0006 7860     		str	r0, [r7, #4]
 739 0008 0B46     		mov	r3, r1
 740 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 383:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 384:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 385:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 387:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 388:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 389:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 390:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 391:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     uint32_t wKiDiv = (((uint32_t)1) << hKiDivisorPOW2);
 741              		.loc 1 391 38
 742 000c 7B88     		ldrh	r3, [r7, #2]
 743              		.loc 1 391 14
 744 000e 0122     		movs	r2, #1
 745 0010 02FA03F3 		lsl	r3, r2, r3
 746 0014 FB60     		str	r3, [r7, #12]
 392:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKiDivisorPOW2 = hKiDivisorPOW2;
 747              		.loc 1 392 29
 748 0016 7B68     		ldr	r3, [r7, #4]
 749 0018 7A88     		ldrh	r2, [r7, #2]	@ movhi
 750 001a DA83     		strh	r2, [r3, #30]	@ movhi
 393:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKiDivisor = (uint16_t)wKiDiv;
 751              		.loc 1 393 27
 752 001c FB68     		ldr	r3, [r7, #12]
 753 001e 9AB2     		uxth	r2, r3
 754              		.loc 1 393 25
 755 0020 7B68     		ldr	r3, [r7, #4]
 756 0022 5A83     		strh	r2, [r3, #26]	@ movhi
 394:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     PID_SetUpperIntegralTermLimit(pHandle, (int32_t)INT16_MAX * (int32_t)wKiDiv);
 757              		.loc 1 394 65
 758 0024 FA68     		ldr	r2, [r7, #12]
 759              		.loc 1 394 5
 760 0026 1346     		mov	r3, r2
 761 0028 DB03     		lsls	r3, r3, #15
 762 002a 9B1A     		subs	r3, r3, r2
 763 002c 1946     		mov	r1, r3
 764 002e 7868     		ldr	r0, [r7, #4]
 765 0030 FFF7FEFF 		bl	PID_SetUpperIntegralTermLimit
 395:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     PID_SetLowerIntegralTermLimit(pHandle, (int32_t)(-INT16_MAX) * (int32_t)wKiDiv);
 766              		.loc 1 395 68
 767 0034 FB68     		ldr	r3, [r7, #12]
 768              		.loc 1 395 5
 769 0036 1A46     		mov	r2, r3
 770 0038 DB03     		lsls	r3, r3, #15
 771 003a D31A     		subs	r3, r2, r3
 772 003c 1946     		mov	r1, r3
 773 003e 7868     		ldr	r0, [r7, #4]
 774 0040 FFF7FEFF 		bl	PID_SetLowerIntegralTermLimit
 396:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
ARM GAS  /tmp/ccFLPyPj.s 			page 21


 397:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 398:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 399:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 775              		.loc 1 399 1
 776 0044 00BF     		nop
 777 0046 1037     		adds	r7, r7, #16
 778              	.LCFI81:
 779              		.cfi_def_cfa_offset 8
 780 0048 BD46     		mov	sp, r7
 781              	.LCFI82:
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 004a 80BD     		pop	{r7, pc}
 785              		.cfi_endproc
 786              	.LFE1450:
 788              		.section	.text.PID_SetLowerIntegralTermLimit,"ax",%progbits
 789              		.align	1
 790              		.weak	PID_SetLowerIntegralTermLimit
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	PID_SetLowerIntegralTermLimit:
 797              	.LFB1451:
 400:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 401:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 402:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the lower limit of the integral term of a PID component
 403:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 404:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 405:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  wLowerLimit new lower integral term limit multiplied by the divisor 
 406:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *                     of the integral gain
 407:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 408:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * If @f$T_{iL}@f$ is the target lower limit, the @p wLowerLimit parameter must 
 409:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * be set to @f$T_{iL}\times K_{id}@f$. This is because the limit is checked before
 410:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * applying the divisor in the PI_Controller() and PID_Controller() controller 
 411:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * functions.
 412:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 413:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * When the PI or PID controller is executed, the value of the integral term is floored
 414:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * to this value.
 415:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 416:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @attention @p wLowerLimit divided by @f$K_{id}@f$ must fit in a 16-bit signed 
 417:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * integer value.
 418:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 419:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetLowerIntegralTermLimit(PID_Handle_t *pHandle, int32_t wLowerLimit)
 420:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 798              		.loc 1 420 1
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803 0000 80B4     		push	{r7}
 804              	.LCFI83:
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 83B0     		sub	sp, sp, #12
 808              	.LCFI84:
 809              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccFLPyPj.s 			page 22


 810 0004 00AF     		add	r7, sp, #0
 811              	.LCFI85:
 812              		.cfi_def_cfa_register 7
 813 0006 7860     		str	r0, [r7, #4]
 814 0008 3960     		str	r1, [r7]
 421:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 422:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 423:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 424:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 425:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 426:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 427:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 428:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 429:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wLowerIntegralLimit = wLowerLimit;
 815              		.loc 1 429 34
 816 000a 7B68     		ldr	r3, [r7, #4]
 817 000c 3A68     		ldr	r2, [r7]
 818 000e 1A61     		str	r2, [r3, #16]
 430:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 431:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 432:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 433:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 819              		.loc 1 433 1
 820 0010 00BF     		nop
 821 0012 0C37     		adds	r7, r7, #12
 822              	.LCFI86:
 823              		.cfi_def_cfa_offset 4
 824 0014 BD46     		mov	sp, r7
 825              	.LCFI87:
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 0016 5DF8047B 		ldr	r7, [sp], #4
 829              	.LCFI88:
 830              		.cfi_restore 7
 831              		.cfi_def_cfa_offset 0
 832 001a 7047     		bx	lr
 833              		.cfi_endproc
 834              	.LFE1451:
 836              		.section	.text.PID_SetUpperIntegralTermLimit,"ax",%progbits
 837              		.align	1
 838              		.weak	PID_SetUpperIntegralTermLimit
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu fpv4-sp-d16
 844              	PID_SetUpperIntegralTermLimit:
 845              	.LFB1452:
 434:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 435:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 436:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the upper limit of the integral term of a PID component
 437:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 438:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 439:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  wUpperLimit new upper integral term limit multiplied by the divisor 
 440:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *                     of the integral gain
 441:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 442:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * If @f$T_{iU}@f$ is the target upper limit, the @p wUpperLimit parameter must 
 443:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * be set to @f$T_{iU}\times K_{id}@f$. This is because the limit is checked before
ARM GAS  /tmp/ccFLPyPj.s 			page 23


 444:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * applying the divisor in the PI_Controller() and PID_Controller() controller 
 445:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * functions.
 446:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 447:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * When the controller is executed, the value of the integral term is capped to 
 448:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * this value.
 449:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 450:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @attention @p wUpperLimit divided by @f$K_{id}@f$ must fit in a 16-bit signed 
 451:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * integer value.
 452:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 453:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetUpperIntegralTermLimit(PID_Handle_t *pHandle, int32_t wUpperLimit)
 454:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 846              		.loc 1 454 1
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 8
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851 0000 80B4     		push	{r7}
 852              	.LCFI89:
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 7, -4
 855 0002 83B0     		sub	sp, sp, #12
 856              	.LCFI90:
 857              		.cfi_def_cfa_offset 16
 858 0004 00AF     		add	r7, sp, #0
 859              	.LCFI91:
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 862 0008 3960     		str	r1, [r7]
 455:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 456:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 457:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 458:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 459:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 460:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 461:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 462:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 463:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wUpperIntegralLimit = wUpperLimit;
 863              		.loc 1 463 34
 864 000a 7B68     		ldr	r3, [r7, #4]
 865 000c 3A68     		ldr	r2, [r7]
 866 000e DA60     		str	r2, [r3, #12]
 464:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 465:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 466:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 467:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 867              		.loc 1 467 1
 868 0010 00BF     		nop
 869 0012 0C37     		adds	r7, r7, #12
 870              	.LCFI92:
 871              		.cfi_def_cfa_offset 4
 872 0014 BD46     		mov	sp, r7
 873              	.LCFI93:
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 0016 5DF8047B 		ldr	r7, [sp], #4
 877              	.LCFI94:
 878              		.cfi_restore 7
ARM GAS  /tmp/ccFLPyPj.s 			page 24


 879              		.cfi_def_cfa_offset 0
 880 001a 7047     		bx	lr
 881              		.cfi_endproc
 882              	.LFE1452:
 884              		.section	.text.PID_SetPrevError,"ax",%progbits
 885              		.align	1
 886              		.weak	PID_SetPrevError
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	PID_SetPrevError:
 893              	.LFB1453:
 468:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 469:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 470:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the value of the previous process error of a PID component
 471:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 472:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 473:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  wPrevProcessVarError new value of the previous error variable
 474:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 475:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetPrevError(PID_Handle_t *pHandle, int32_t wPrevProcessVarError)
 476:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 894              		.loc 1 476 1
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 80B4     		push	{r7}
 900              	.LCFI95:
 901              		.cfi_def_cfa_offset 4
 902              		.cfi_offset 7, -4
 903 0002 83B0     		sub	sp, sp, #12
 904              	.LCFI96:
 905              		.cfi_def_cfa_offset 16
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI97:
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 910 0008 3960     		str	r1, [r7]
 477:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 478:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 479:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 480:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 481:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 482:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 483:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 484:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 485:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wPrevProcessVarError = wPrevProcessVarError;
 911              		.loc 1 485 35
 912 000a 7B68     		ldr	r3, [r7, #4]
 913 000c 3A68     		ldr	r2, [r7]
 914 000e 9A62     		str	r2, [r3, #40]
 486:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 487:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 488:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 489:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return;
 915              		.loc 1 489 3
ARM GAS  /tmp/ccFLPyPj.s 			page 25


 916 0010 00BF     		nop
 490:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 917              		.loc 1 490 1
 918 0012 0C37     		adds	r7, r7, #12
 919              	.LCFI98:
 920              		.cfi_def_cfa_offset 4
 921 0014 BD46     		mov	sp, r7
 922              	.LCFI99:
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 0016 5DF8047B 		ldr	r7, [sp], #4
 926              	.LCFI100:
 927              		.cfi_restore 7
 928              		.cfi_def_cfa_offset 0
 929 001a 7047     		bx	lr
 930              		.cfi_endproc
 931              	.LFE1453:
 933              		.section	.text.PID_SetKD,"ax",%progbits
 934              		.align	1
 935              		.weak	PID_SetKD
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 939              		.fpu fpv4-sp-d16
 941              	PID_SetKD:
 942              	.LFB1454:
 491:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 492:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 493:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets @f$K_{dg}@f$, the numerator of the derivative gain of a PID component
 494:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 495:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  hKpGain New @f$K_{dg}@f$ value
 496:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 497:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetKD(PID_Handle_t *pHandle, int16_t hKdGain)
 498:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 943              		.loc 1 498 1
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 8
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 80B4     		push	{r7}
 949              	.LCFI101:
 950              		.cfi_def_cfa_offset 4
 951              		.cfi_offset 7, -4
 952 0002 83B0     		sub	sp, sp, #12
 953              	.LCFI102:
 954              		.cfi_def_cfa_offset 16
 955 0004 00AF     		add	r7, sp, #0
 956              	.LCFI103:
 957              		.cfi_def_cfa_register 7
 958 0006 7860     		str	r0, [r7, #4]
 959 0008 0B46     		mov	r3, r1
 960 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 499:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 500:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 501:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 502:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 503:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
ARM GAS  /tmp/ccFLPyPj.s 			page 26


 504:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 505:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 506:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 507:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKdGain = hKdGain;
 961              		.loc 1 507 22
 962 000c 7B68     		ldr	r3, [r7, #4]
 963 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 964 0010 5A84     		strh	r2, [r3, #34]	@ movhi
 508:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 509:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 510:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 511:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 965              		.loc 1 511 1
 966 0012 00BF     		nop
 967 0014 0C37     		adds	r7, r7, #12
 968              	.LCFI104:
 969              		.cfi_def_cfa_offset 4
 970 0016 BD46     		mov	sp, r7
 971              	.LCFI105:
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0018 5DF8047B 		ldr	r7, [sp], #4
 975              	.LCFI106:
 976              		.cfi_restore 7
 977              		.cfi_def_cfa_offset 0
 978 001c 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE1454:
 982              		.section	.text.PID_GetKD,"ax",%progbits
 983              		.align	1
 984              		.weak	PID_GetKD
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	PID_GetKD:
 991              	.LFB1455:
 512:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 513:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 514:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns @f$K_{dg}@f$, the numerator of the derivative gain of a PID component
 515:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 516:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 517:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PID_GetKD(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 518:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 992              		.loc 1 518 1
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 8
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 997 0000 80B4     		push	{r7}
 998              	.LCFI107:
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 83B0     		sub	sp, sp, #12
 1002              	.LCFI108:
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccFLPyPj.s 			page 27


 1005              	.LCFI109:
 1006              		.cfi_def_cfa_register 7
 1007 0006 7860     		str	r0, [r7, #4]
 519:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 520:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0 : pHandle->hKdGain);
 521:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 522:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKdGain);
 1008              		.loc 1 522 18
 1009 0008 7B68     		ldr	r3, [r7, #4]
 1010 000a B3F92230 		ldrsh	r3, [r3, #34]
 523:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 524:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 1011              		.loc 1 524 1
 1012 000e 1846     		mov	r0, r3
 1013 0010 0C37     		adds	r7, r7, #12
 1014              	.LCFI110:
 1015              		.cfi_def_cfa_offset 4
 1016 0012 BD46     		mov	sp, r7
 1017              	.LCFI111:
 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
 1020 0014 5DF8047B 		ldr	r7, [sp], #4
 1021              	.LCFI112:
 1022              		.cfi_restore 7
 1023              		.cfi_def_cfa_offset 0
 1024 0018 7047     		bx	lr
 1025              		.cfi_endproc
 1026              	.LFE1455:
 1028              		.section	.text.PID_GetKDDivisor,"ax",%progbits
 1029              		.align	1
 1030              		.weak	PID_GetKDDivisor
 1031              		.syntax unified
 1032              		.thumb
 1033              		.thumb_func
 1034              		.fpu fpv4-sp-d16
 1036              	PID_GetKDDivisor:
 1037              	.LFB1456:
 525:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 526:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 527:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns @f$K_{dd}@f$, the divisor of the derivative gain of a PID component
 528:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 529:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *
 530:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 531:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 532:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 533:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @sa PID_GetKDDivisorPOW2()
 534:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 535:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak uint16_t PID_GetKDDivisor(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 536:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 1038              		.loc 1 536 1
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 8
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 1043 0000 80B4     		push	{r7}
 1044              	.LCFI113:
 1045              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccFLPyPj.s 			page 28


 1046              		.cfi_offset 7, -4
 1047 0002 83B0     		sub	sp, sp, #12
 1048              	.LCFI114:
 1049              		.cfi_def_cfa_offset 16
 1050 0004 00AF     		add	r7, sp, #0
 1051              	.LCFI115:
 1052              		.cfi_def_cfa_register 7
 1053 0006 7860     		str	r0, [r7, #4]
 537:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 538:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0U : pHandle->hKdDivisor);
 539:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 540:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKdDivisor);
 1054              		.loc 1 540 18
 1055 0008 7B68     		ldr	r3, [r7, #4]
 1056 000a 9B8C     		ldrh	r3, [r3, #36]
 541:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 542:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 1057              		.loc 1 542 1
 1058 000c 1846     		mov	r0, r3
 1059 000e 0C37     		adds	r7, r7, #12
 1060              	.LCFI116:
 1061              		.cfi_def_cfa_offset 4
 1062 0010 BD46     		mov	sp, r7
 1063              	.LCFI117:
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 0012 5DF8047B 		ldr	r7, [sp], #4
 1067              	.LCFI118:
 1068              		.cfi_restore 7
 1069              		.cfi_def_cfa_offset 0
 1070 0016 7047     		bx	lr
 1071              		.cfi_endproc
 1072              	.LFE1456:
 1074              		.section	.text.PID_GetKDDivisorPOW2,"ax",%progbits
 1075              		.align	1
 1076              		.weak	PID_GetKDDivisorPOW2
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1080              		.fpu fpv4-sp-d16
 1082              	PID_GetKDDivisorPOW2:
 1083              	.LFB1457:
 543:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 544:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 545:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Returns the power of two that makes @f$K_{dd}@f$, the divisor of the derivative 
 546:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         gain of a PID component
 547:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 548:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 549:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 550:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
 551:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 552:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @sa PID_GetKDDivisor()
 553:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 554:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak uint16_t PID_GetKDDivisorPOW2(PID_Handle_t *pHandle) //cstat !MISRAC2012-Rule-8.13
 555:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 1084              		.loc 1 555 1
 1085              		.cfi_startproc
ARM GAS  /tmp/ccFLPyPj.s 			page 29


 1086              		@ args = 0, pretend = 0, frame = 8
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089 0000 80B4     		push	{r7}
 1090              	.LCFI119:
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 7, -4
 1093 0002 83B0     		sub	sp, sp, #12
 1094              	.LCFI120:
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              	.LCFI121:
 1098              		.cfi_def_cfa_register 7
 1099 0006 7860     		str	r0, [r7, #4]
 556:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 557:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return ((MC_NULL == pHandle) ? 0U : pHandle->hKdDivisorPOW2);
 558:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 559:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (pHandle->hKdDivisorPOW2);
 1100              		.loc 1 559 18
 1101 0008 7B68     		ldr	r3, [r7, #4]
 1102 000a DB8C     		ldrh	r3, [r3, #38]
 560:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 561:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 1103              		.loc 1 561 1
 1104 000c 1846     		mov	r0, r3
 1105 000e 0C37     		adds	r7, r7, #12
 1106              	.LCFI122:
 1107              		.cfi_def_cfa_offset 4
 1108 0010 BD46     		mov	sp, r7
 1109              	.LCFI123:
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 0012 5DF8047B 		ldr	r7, [sp], #4
 1113              	.LCFI124:
 1114              		.cfi_restore 7
 1115              		.cfi_def_cfa_offset 0
 1116 0016 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE1457:
 1120              		.section	.text.PID_SetKDDivisorPOW2,"ax",%progbits
 1121              		.align	1
 1122              		.weak	PID_SetKDDivisorPOW2
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1126              		.fpu fpv4-sp-d16
 1128              	PID_SetKDDivisorPOW2:
 1129              	.LFB1458:
 562:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 563:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 564:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Sets the power of two that makes @f$K_{dd}@f$, the divisor of the derivative gain
 565:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         of a PID component
 566:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 567:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  hKdDivisorPOW2 new @f$K_{dd}@f$ divisor value, expressed as power of 2
 568:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 569:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The divisors that make the gains of the @ref PIDRegulator "PID regulator component" are 
 570:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * powers of two. 
ARM GAS  /tmp/ccFLPyPj.s 			page 30


 571:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 572:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * This function sets @f$K_{dd}@f$ to 2 to the power of @p hKdDivisorPOW2.
 573:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 574:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak void PID_SetKDDivisorPOW2(PID_Handle_t *pHandle, uint16_t hKdDivisorPOW2)
 575:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 1130              		.loc 1 575 1
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 8
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
 1135 0000 80B4     		push	{r7}
 1136              	.LCFI125:
 1137              		.cfi_def_cfa_offset 4
 1138              		.cfi_offset 7, -4
 1139 0002 83B0     		sub	sp, sp, #12
 1140              	.LCFI126:
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              	.LCFI127:
 1144              		.cfi_def_cfa_register 7
 1145 0006 7860     		str	r0, [r7, #4]
 1146 0008 0B46     		mov	r3, r1
 1147 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 576:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 577:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 578:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 579:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Nothing to do */
 580:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 581:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 582:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 583:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 584:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKdDivisorPOW2 = hKdDivisorPOW2;
 1148              		.loc 1 584 29
 1149 000c 7B68     		ldr	r3, [r7, #4]
 1150 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1151 0010 DA84     		strh	r2, [r3, #38]	@ movhi
 585:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->hKdDivisor = (((uint16_t)1) << hKdDivisorPOW2);
 1152              		.loc 1 585 42
 1153 0012 7B88     		ldrh	r3, [r7, #2]
 1154 0014 0122     		movs	r2, #1
 1155 0016 02FA03F3 		lsl	r3, r2, r3
 1156              		.loc 1 585 25
 1157 001a 9AB2     		uxth	r2, r3
 1158 001c 7B68     		ldr	r3, [r7, #4]
 1159 001e 9A84     		strh	r2, [r3, #36]	@ movhi
 586:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 587:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 588:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 589:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 1160              		.loc 1 589 1
 1161 0020 00BF     		nop
 1162 0022 0C37     		adds	r7, r7, #12
 1163              	.LCFI128:
 1164              		.cfi_def_cfa_offset 4
 1165 0024 BD46     		mov	sp, r7
 1166              	.LCFI129:
 1167              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccFLPyPj.s 			page 31


 1168              		@ sp needed
 1169 0026 5DF8047B 		ldr	r7, [sp], #4
 1170              	.LCFI130:
 1171              		.cfi_restore 7
 1172              		.cfi_def_cfa_offset 0
 1173 002a 7047     		bx	lr
 1174              		.cfi_endproc
 1175              	.LFE1458:
 1177              		.section	.text.PI_Controller,"ax",%progbits
 1178              		.align	1
 1179              		.weak	PI_Controller
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv4-sp-d16
 1185              	PI_Controller:
 1186              	.LFB1459:
 590:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 591:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #if defined (CCMRAM)
 592:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #if defined (__ICCARM__)
 593:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #pragma location = ".ccmram"
 594:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 595:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __attribute__((section(".ccmram")))
 596:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 597:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 598:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 599:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Computes the output of a PI Regulator component, sum of its proportional and 
 600:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         integral terms
 601:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 602:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 603:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  wProcessVarError current process variable error (the reference value minus the 
 604:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *                          present process variable value)
 605:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @retval computed PI controller output
 606:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 607:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * This function implements the proportional-integral controller function described by the 
 608:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @ref PIDRegulator "PID regulator component". The integral term is saturated by the upper 
 609:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * and lower intergral term limit values before it is added to the proportional term. 
 610:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 611:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The resulting value is then saturated by the upper and lower output limit values before 
 612:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * being returned.
 613:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 614:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PI_Controller(PID_Handle_t *pHandle, int32_t wProcessVarError)
 615:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 1187              		.loc 1 615 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 40
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 80B4     		push	{r7}
 1193              	.LCFI131:
 1194              		.cfi_def_cfa_offset 4
 1195              		.cfi_offset 7, -4
 1196 0002 8BB0     		sub	sp, sp, #44
 1197              	.LCFI132:
 1198              		.cfi_def_cfa_offset 48
 1199 0004 00AF     		add	r7, sp, #0
 1200              	.LCFI133:
ARM GAS  /tmp/ccFLPyPj.s 			page 32


 1201              		.cfi_def_cfa_register 7
 1202 0006 7860     		str	r0, [r7, #4]
 1203 0008 3960     		str	r1, [r7]
 616:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   int16_t returnValue;
 617:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 618:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 619:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 620:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     returnValue = 0;
 621:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 622:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 623:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 624:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 625:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wProportional_Term;
 626:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wIntegral_Term;
 627:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wOutput_32;
 628:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wIntegral_sum_temp;
 629:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wDischarge = 0;
 1204              		.loc 1 629 13
 1205 000a 0023     		movs	r3, #0
 1206 000c FB61     		str	r3, [r7, #28]
 630:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int16_t hUpperOutputLimit = pHandle->hUpperOutputLimit;
 1207              		.loc 1 630 13
 1208 000e 7B68     		ldr	r3, [r7, #4]
 1209 0010 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1210 0012 7B83     		strh	r3, [r7, #26]	@ movhi
 631:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int16_t hLowerOutputLimit = pHandle->hLowerOutputLimit;
 1211              		.loc 1 631 13
 1212 0014 7B68     		ldr	r3, [r7, #4]
 1213 0016 DB8A     		ldrh	r3, [r3, #22]	@ movhi
 1214 0018 3B83     		strh	r3, [r7, #24]	@ movhi
 632:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 633:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Proportional term computation*/
 634:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     wProportional_Term = pHandle->hKpGain * wProcessVarError;
 1215              		.loc 1 634 33
 1216 001a 7B68     		ldr	r3, [r7, #4]
 1217 001c B3F90430 		ldrsh	r3, [r3, #4]
 1218 0020 1A46     		mov	r2, r3
 1219              		.loc 1 634 24
 1220 0022 3B68     		ldr	r3, [r7]
 1221 0024 02FB03F3 		mul	r3, r2, r3
 1222 0028 7B61     		str	r3, [r7, #20]
 635:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 636:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* Integral term computation */
 637:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     if (0 == pHandle->hKiGain)
 1223              		.loc 1 637 21
 1224 002a 7B68     		ldr	r3, [r7, #4]
 1225 002c B3F90630 		ldrsh	r3, [r3, #6]
 1226              		.loc 1 637 8
 1227 0030 002B     		cmp	r3, #0
 1228 0032 03D1     		bne	.L37
 638:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 639:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       pHandle->wIntegralTerm = 0;
 1229              		.loc 1 639 30
 1230 0034 7B68     		ldr	r3, [r7, #4]
 1231 0036 0022     		movs	r2, #0
 1232 0038 9A60     		str	r2, [r3, #8]
 1233 003a 3AE0     		b	.L38
ARM GAS  /tmp/ccFLPyPj.s 			page 33


 1234              	.L37:
 640:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 641:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     else
 642:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 643:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wIntegral_Term = pHandle->hKiGain * wProcessVarError;
 1235              		.loc 1 643 31
 1236 003c 7B68     		ldr	r3, [r7, #4]
 1237 003e B3F90630 		ldrsh	r3, [r3, #6]
 1238 0042 1A46     		mov	r2, r3
 1239              		.loc 1 643 22
 1240 0044 3B68     		ldr	r3, [r7]
 1241 0046 02FB03F3 		mul	r3, r2, r3
 1242 004a 3B61     		str	r3, [r7, #16]
 644:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wIntegral_sum_temp = pHandle->wIntegralTerm + wIntegral_Term;
 1243              		.loc 1 644 35
 1244 004c 7B68     		ldr	r3, [r7, #4]
 1245 004e 9B68     		ldr	r3, [r3, #8]
 1246              		.loc 1 644 26
 1247 0050 3A69     		ldr	r2, [r7, #16]
 1248 0052 1344     		add	r3, r3, r2
 1249 0054 3B62     		str	r3, [r7, #32]
 645:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 646:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       if (wIntegral_sum_temp < 0)
 1250              		.loc 1 646 10
 1251 0056 3B6A     		ldr	r3, [r7, #32]
 1252 0058 002B     		cmp	r3, #0
 1253 005a 0ADA     		bge	.L39
 647:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 648:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         if (pHandle->wIntegralTerm > 0)
 1254              		.loc 1 648 20
 1255 005c 7B68     		ldr	r3, [r7, #4]
 1256 005e 9B68     		ldr	r3, [r3, #8]
 1257              		.loc 1 648 12
 1258 0060 002B     		cmp	r3, #0
 1259 0062 0FDD     		ble	.L40
 649:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         {
 650:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           if (wIntegral_Term > 0)
 1260              		.loc 1 650 14
 1261 0064 3B69     		ldr	r3, [r7, #16]
 1262 0066 002B     		cmp	r3, #0
 1263 0068 0CDD     		ble	.L40
 651:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           {
 652:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****             wIntegral_sum_temp = INT32_MAX;
 1264              		.loc 1 652 32
 1265 006a 6FF00043 		mvn	r3, #-2147483648
 1266 006e 3B62     		str	r3, [r7, #32]
 1267 0070 08E0     		b	.L40
 1268              	.L39:
 653:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           }
 654:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           else
 655:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           {
 656:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****             /* Nothing to do */
 657:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           }
 658:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         }
 659:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         else
 660:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         {
 661:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           /* Nothing to do */
ARM GAS  /tmp/ccFLPyPj.s 			page 34


 662:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         }
 663:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 664:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       else
 665:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 666:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         if (pHandle->wIntegralTerm < 0)
 1269              		.loc 1 666 20
 1270 0072 7B68     		ldr	r3, [r7, #4]
 1271 0074 9B68     		ldr	r3, [r3, #8]
 1272              		.loc 1 666 12
 1273 0076 002B     		cmp	r3, #0
 1274 0078 04DA     		bge	.L40
 667:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         {
 668:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           if (wIntegral_Term < 0)
 1275              		.loc 1 668 14
 1276 007a 3B69     		ldr	r3, [r7, #16]
 1277 007c 002B     		cmp	r3, #0
 1278 007e 01DA     		bge	.L40
 669:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           {
 670:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****             wIntegral_sum_temp = -INT32_MAX;
 1279              		.loc 1 670 32
 1280 0080 284B     		ldr	r3, .L46
 1281 0082 3B62     		str	r3, [r7, #32]
 1282              	.L40:
 671:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           }
 672:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           else
 673:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           {
 674:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****             /* Nothing to do */
 675:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           }
 676:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         }
 677:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         else
 678:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         {
 679:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****           /* Nothing to do */
 680:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         }
 681:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 682:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 683:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       if (wIntegral_sum_temp > pHandle->wUpperIntegralLimit)
 1283              		.loc 1 683 39
 1284 0084 7B68     		ldr	r3, [r7, #4]
 1285 0086 DB68     		ldr	r3, [r3, #12]
 1286              		.loc 1 683 10
 1287 0088 3A6A     		ldr	r2, [r7, #32]
 1288 008a 9A42     		cmp	r2, r3
 1289 008c 04DD     		ble	.L41
 684:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 685:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         pHandle->wIntegralTerm = pHandle->wUpperIntegralLimit;
 1290              		.loc 1 685 41
 1291 008e 7B68     		ldr	r3, [r7, #4]
 1292 0090 DA68     		ldr	r2, [r3, #12]
 1293              		.loc 1 685 32
 1294 0092 7B68     		ldr	r3, [r7, #4]
 1295 0094 9A60     		str	r2, [r3, #8]
 1296 0096 0CE0     		b	.L38
 1297              	.L41:
 686:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 687:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       else if (wIntegral_sum_temp < pHandle->wLowerIntegralLimit)
 1298              		.loc 1 687 44
 1299 0098 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFLPyPj.s 			page 35


 1300 009a 1B69     		ldr	r3, [r3, #16]
 1301              		.loc 1 687 15
 1302 009c 3A6A     		ldr	r2, [r7, #32]
 1303 009e 9A42     		cmp	r2, r3
 1304 00a0 04DA     		bge	.L42
 688:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 689:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         pHandle->wIntegralTerm = pHandle->wLowerIntegralLimit;
 1305              		.loc 1 689 41
 1306 00a2 7B68     		ldr	r3, [r7, #4]
 1307 00a4 1A69     		ldr	r2, [r3, #16]
 1308              		.loc 1 689 32
 1309 00a6 7B68     		ldr	r3, [r7, #4]
 1310 00a8 9A60     		str	r2, [r3, #8]
 1311 00aa 02E0     		b	.L38
 1312              	.L42:
 690:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 691:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       else
 692:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 693:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         pHandle->wIntegralTerm = wIntegral_sum_temp;
 1313              		.loc 1 693 32
 1314 00ac 7B68     		ldr	r3, [r7, #4]
 1315 00ae 3A6A     		ldr	r2, [r7, #32]
 1316 00b0 9A60     		str	r2, [r3, #8]
 1317              	.L38:
 694:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 695:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 696:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 697:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PID_REGULATOR
 698:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     /* WARNING: the below instruction is not MISRA compliant, user should verify
 699:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****                that Cortex-M3 assembly instruction ASR (arithmetic shift right)
 700:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****                is used by the compiler to perform the shifts (instead of LSR
 701:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****                logical shift right)*/
 702:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 703:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     wOutput_32 = (wProportional_Term >> pHandle->hKpDivisorPOW2) + (pHandle->wIntegralTerm >> pHand
 1318              		.loc 1 703 48
 1319 00b2 7B68     		ldr	r3, [r7, #4]
 1320 00b4 9B8B     		ldrh	r3, [r3, #28]
 1321 00b6 1A46     		mov	r2, r3
 1322              		.loc 1 703 38
 1323 00b8 7B69     		ldr	r3, [r7, #20]
 1324 00ba 43FA02F2 		asr	r2, r3, r2
 1325              		.loc 1 703 76
 1326 00be 7B68     		ldr	r3, [r7, #4]
 1327 00c0 9B68     		ldr	r3, [r3, #8]
 1328              		.loc 1 703 102
 1329 00c2 7968     		ldr	r1, [r7, #4]
 1330 00c4 C98B     		ldrh	r1, [r1, #30]
 1331              		.loc 1 703 92
 1332 00c6 0B41     		asrs	r3, r3, r1
 1333              		.loc 1 703 16
 1334 00c8 1344     		add	r3, r3, r2
 1335 00ca 7B62     		str	r3, [r7, #36]
 704:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 705:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     wOutput_32 = (wProportional_Term / (int32_t)pHandle->hKpDivisor)
 706:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****               + (pHandle->wIntegralTerm / (int32_t)pHandle->hKiDivisor);
 707:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 708:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
ARM GAS  /tmp/ccFLPyPj.s 			page 36


 709:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     if (wOutput_32 > hUpperOutputLimit)
 1336              		.loc 1 709 20
 1337 00cc B7F91A30 		ldrsh	r3, [r7, #26]
 1338              		.loc 1 709 8
 1339 00d0 7A6A     		ldr	r2, [r7, #36]
 1340 00d2 9A42     		cmp	r2, r3
 1341 00d4 08DD     		ble	.L43
 710:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 711:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wDischarge = hUpperOutputLimit - wOutput_32;
 1342              		.loc 1 711 38
 1343 00d6 B7F91A20 		ldrsh	r2, [r7, #26]
 1344              		.loc 1 711 18
 1345 00da 7B6A     		ldr	r3, [r7, #36]
 1346 00dc D31A     		subs	r3, r2, r3
 1347 00de FB61     		str	r3, [r7, #28]
 712:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wOutput_32 = hUpperOutputLimit;
 1348              		.loc 1 712 18
 1349 00e0 B7F91A30 		ldrsh	r3, [r7, #26]
 1350 00e4 7B62     		str	r3, [r7, #36]
 1351 00e6 0CE0     		b	.L44
 1352              	.L43:
 713:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 714:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     else if (wOutput_32 < hLowerOutputLimit)
 1353              		.loc 1 714 25
 1354 00e8 B7F91830 		ldrsh	r3, [r7, #24]
 1355              		.loc 1 714 13
 1356 00ec 7A6A     		ldr	r2, [r7, #36]
 1357 00ee 9A42     		cmp	r2, r3
 1358 00f0 07DA     		bge	.L44
 715:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 716:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wDischarge = hLowerOutputLimit - wOutput_32;
 1359              		.loc 1 716 38
 1360 00f2 B7F91820 		ldrsh	r2, [r7, #24]
 1361              		.loc 1 716 18
 1362 00f6 7B6A     		ldr	r3, [r7, #36]
 1363 00f8 D31A     		subs	r3, r2, r3
 1364 00fa FB61     		str	r3, [r7, #28]
 717:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wOutput_32 = hLowerOutputLimit;
 1365              		.loc 1 717 18
 1366 00fc B7F91830 		ldrsh	r3, [r7, #24]
 1367 0100 7B62     		str	r3, [r7, #36]
 1368              	.L44:
 718:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 719:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     else
 720:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 721:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       /* Nothing to do here */
 722:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 723:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 724:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     pHandle->wIntegralTerm += wDischarge;
 1369              		.loc 1 724 28
 1370 0102 7B68     		ldr	r3, [r7, #4]
 1371 0104 9A68     		ldr	r2, [r3, #8]
 1372 0106 FB69     		ldr	r3, [r7, #28]
 1373 0108 1A44     		add	r2, r2, r3
 1374 010a 7B68     		ldr	r3, [r7, #4]
 1375 010c 9A60     		str	r2, [r3, #8]
 725:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     returnValue = (int16_t)wOutput_32;
ARM GAS  /tmp/ccFLPyPj.s 			page 37


 1376              		.loc 1 725 17
 1377 010e 7B6A     		ldr	r3, [r7, #36]
 1378 0110 FB81     		strh	r3, [r7, #14]	@ movhi
 726:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 727:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 729:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (returnValue);
 1379              		.loc 1 729 10
 1380 0112 B7F90E30 		ldrsh	r3, [r7, #14]
 730:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 1381              		.loc 1 730 1
 1382 0116 1846     		mov	r0, r3
 1383 0118 2C37     		adds	r7, r7, #44
 1384              	.LCFI134:
 1385              		.cfi_def_cfa_offset 4
 1386 011a BD46     		mov	sp, r7
 1387              	.LCFI135:
 1388              		.cfi_def_cfa_register 13
 1389              		@ sp needed
 1390 011c 5DF8047B 		ldr	r7, [sp], #4
 1391              	.LCFI136:
 1392              		.cfi_restore 7
 1393              		.cfi_def_cfa_offset 0
 1394 0120 7047     		bx	lr
 1395              	.L47:
 1396 0122 00BF     		.align	2
 1397              	.L46:
 1398 0124 01000080 		.word	-2147483647
 1399              		.cfi_endproc
 1400              	.LFE1459:
 1402              		.section	.text.PID_Controller,"ax",%progbits
 1403              		.align	1
 1404              		.weak	PID_Controller
 1405              		.syntax unified
 1406              		.thumb
 1407              		.thumb_func
 1408              		.fpu fpv4-sp-d16
 1410              	PID_Controller:
 1411              	.LFB1460:
 731:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 732:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #if defined (CCMRAM)
 733:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #if defined (__ICCARM__)
 734:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #pragma location = ".ccmram"
 735:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 736:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __attribute__((section(".ccmram")))
 737:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 738:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 739:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** /**
 740:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @brief  Computes the output of a PID Regulator component, sum of its proportional,
 741:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *         integral and derivative terms
 742:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 743:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  pHandle Handle on the PID component
 744:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @param  wProcessVarError current process variable error (the reference value minus the 
 745:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   *                          present process variable value)
 746:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * @retval computed PID controller output
 747:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 748:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * This function implements the proportional-integral-derivative controller function described  
ARM GAS  /tmp/ccFLPyPj.s 			page 38


 749:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * by the @ref PIDRegulator "PID regulator component". The integral term is saturated by  
 750:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * the upper and lower intergral term limit values before it is added to the proportional term
 751:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * and derivative terms. 
 752:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * 
 753:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * The resulting value is then saturated by the upper and lower output limit values before 
 754:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   * being returned.
 755:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   */
 756:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** __weak int16_t PID_Controller(PID_Handle_t *pHandle, int32_t wProcessVarError)
 757:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** {
 1412              		.loc 1 757 1
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 24
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416 0000 80B5     		push	{r7, lr}
 1417              	.LCFI137:
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 86B0     		sub	sp, sp, #24
 1422              	.LCFI138:
 1423              		.cfi_def_cfa_offset 32
 1424 0004 00AF     		add	r7, sp, #0
 1425              	.LCFI139:
 1426              		.cfi_def_cfa_register 7
 1427 0006 7860     		str	r0, [r7, #4]
 1428 0008 3960     		str	r1, [r7]
 758:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   int16_t returnValue;
 759:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 760:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   if (MC_NULL == pHandle)
 761:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 762:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     returnValue = 0;
 763:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 764:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   else
 765:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   {
 766:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 767:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wDifferential_Term;
 768:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wDeltaError;
 769:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     int32_t wTemp_output;
 770:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 771:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     if (0 == pHandle->hKdGain) /* derivative terms not used */
 1429              		.loc 1 771 21
 1430 000a 7B68     		ldr	r3, [r7, #4]
 1431 000c B3F92230 		ldrsh	r3, [r3, #34]
 1432              		.loc 1 771 8
 1433 0010 002B     		cmp	r3, #0
 1434 0012 06D1     		bne	.L49
 772:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 773:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wTemp_output = PI_Controller(pHandle, wProcessVarError);
 1435              		.loc 1 773 22
 1436 0014 3968     		ldr	r1, [r7]
 1437 0016 7868     		ldr	r0, [r7, #4]
 1438 0018 FFF7FEFF 		bl	PI_Controller
 1439 001c 0346     		mov	r3, r0
 1440              		.loc 1 773 20
 1441 001e 7B61     		str	r3, [r7, #20]
 1442 0020 35E0     		b	.L50
 1443              	.L49:
ARM GAS  /tmp/ccFLPyPj.s 			page 39


 774:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 775:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     else
 776:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     {
 777:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wDeltaError = wProcessVarError - pHandle->wPrevProcessVarError;
 1444              		.loc 1 777 47
 1445 0022 7B68     		ldr	r3, [r7, #4]
 1446 0024 9B6A     		ldr	r3, [r3, #40]
 1447              		.loc 1 777 19
 1448 0026 3A68     		ldr	r2, [r7]
 1449 0028 D31A     		subs	r3, r2, r3
 1450 002a 3B61     		str	r3, [r7, #16]
 778:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wDifferential_Term = pHandle->hKdGain * wDeltaError;
 1451              		.loc 1 778 35
 1452 002c 7B68     		ldr	r3, [r7, #4]
 1453 002e B3F92230 		ldrsh	r3, [r3, #34]
 1454 0032 1A46     		mov	r2, r3
 1455              		.loc 1 778 26
 1456 0034 3B69     		ldr	r3, [r7, #16]
 1457 0036 02FB03F3 		mul	r3, r2, r3
 1458 003a FB60     		str	r3, [r7, #12]
 779:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 780:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PID_REGULATOR
 781:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       /* WARNING: the below instruction is not MISRA compliant, user should verify
 782:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****          that Cortex-M3 assembly instruction ASR (arithmetic shift right)
 783:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****          is used by the compiler to perform the shifts (instead of LSR
 784:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****          logical shift right)*/
 785:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 786:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wDifferential_Term >>= pHandle->hKdDivisorPOW2;
 1459              		.loc 1 786 37
 1460 003c 7B68     		ldr	r3, [r7, #4]
 1461 003e DB8C     		ldrh	r3, [r3, #38]
 1462 0040 1A46     		mov	r2, r3
 1463              		.loc 1 786 26
 1464 0042 FB68     		ldr	r3, [r7, #12]
 1465 0044 1341     		asrs	r3, r3, r2
 1466 0046 FB60     		str	r3, [r7, #12]
 787:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #else
 788:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wDifferential_Term /= ((int32_t)pHandle->hKdDivisor);
 789:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 790:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 791:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       pHandle->wPrevProcessVarError = wProcessVarError;
 1467              		.loc 1 791 37
 1468 0048 7B68     		ldr	r3, [r7, #4]
 1469 004a 3A68     		ldr	r2, [r7]
 1470 004c 9A62     		str	r2, [r3, #40]
 792:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 793:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       wTemp_output = PI_Controller(pHandle, wProcessVarError) + wDifferential_Term;
 1471              		.loc 1 793 22
 1472 004e 3968     		ldr	r1, [r7]
 1473 0050 7868     		ldr	r0, [r7, #4]
 1474 0052 FFF7FEFF 		bl	PI_Controller
 1475 0056 0346     		mov	r3, r0
 1476 0058 1A46     		mov	r2, r3
 1477              		.loc 1 793 20
 1478 005a FB68     		ldr	r3, [r7, #12]
 1479 005c 1344     		add	r3, r3, r2
 1480 005e 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccFLPyPj.s 			page 40


 794:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** 
 795:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       if (wTemp_output > pHandle->hUpperOutputLimit)
 1481              		.loc 1 795 33
 1482 0060 7B68     		ldr	r3, [r7, #4]
 1483 0062 B3F91430 		ldrsh	r3, [r3, #20]
 1484 0066 1A46     		mov	r2, r3
 1485              		.loc 1 795 10
 1486 0068 7B69     		ldr	r3, [r7, #20]
 1487 006a 9342     		cmp	r3, r2
 1488 006c 04DD     		ble	.L51
 796:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 797:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         wTemp_output = pHandle->hUpperOutputLimit;
 1489              		.loc 1 797 31
 1490 006e 7B68     		ldr	r3, [r7, #4]
 1491 0070 B3F91430 		ldrsh	r3, [r3, #20]
 1492              		.loc 1 797 22
 1493 0074 7B61     		str	r3, [r7, #20]
 1494 0076 0AE0     		b	.L50
 1495              	.L51:
 798:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 799:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       else if (wTemp_output < pHandle->hLowerOutputLimit)
 1496              		.loc 1 799 38
 1497 0078 7B68     		ldr	r3, [r7, #4]
 1498 007a B3F91630 		ldrsh	r3, [r3, #22]
 1499 007e 1A46     		mov	r2, r3
 1500              		.loc 1 799 15
 1501 0080 7B69     		ldr	r3, [r7, #20]
 1502 0082 9342     		cmp	r3, r2
 1503 0084 03DA     		bge	.L50
 800:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 801:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         wTemp_output = pHandle->hLowerOutputLimit;
 1504              		.loc 1 801 31
 1505 0086 7B68     		ldr	r3, [r7, #4]
 1506 0088 B3F91630 		ldrsh	r3, [r3, #22]
 1507              		.loc 1 801 22
 1508 008c 7B61     		str	r3, [r7, #20]
 1509              	.L50:
 802:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 803:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       else
 804:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       {
 805:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****         /* Nothing to do */
 806:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****       }
 807:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     }
 808:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****     returnValue = (int16_t) wTemp_output;
 1510              		.loc 1 808 17
 1511 008e 7B69     		ldr	r3, [r7, #20]
 1512 0090 7B81     		strh	r3, [r7, #10]	@ movhi
 809:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #ifdef NULL_PTR_CHECK_PID_REG
 810:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   }
 811:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** #endif
 812:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c ****   return (returnValue);
 1513              		.loc 1 812 10
 1514 0092 B7F90A30 		ldrsh	r3, [r7, #10]
 813:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/pid_regulator.c **** }
 1515              		.loc 1 813 1
 1516 0096 1846     		mov	r0, r3
 1517 0098 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccFLPyPj.s 			page 41


 1518              	.LCFI140:
 1519              		.cfi_def_cfa_offset 8
 1520 009a BD46     		mov	sp, r7
 1521              	.LCFI141:
 1522              		.cfi_def_cfa_register 13
 1523              		@ sp needed
 1524 009c 80BD     		pop	{r7, pc}
 1525              		.cfi_endproc
 1526              	.LFE1460:
 1528              		.text
 1529              	.Letext0:
 1530              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1531              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1532              		.file 4 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1533              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1534              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1535              		.file 7 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
ARM GAS  /tmp/ccFLPyPj.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pid_regulator.c
     /tmp/ccFLPyPj.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccFLPyPj.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/ccFLPyPj.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccFLPyPj.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/ccFLPyPj.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccFLPyPj.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/ccFLPyPj.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccFLPyPj.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/ccFLPyPj.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccFLPyPj.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/ccFLPyPj.s:48     .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccFLPyPj.s:51     .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB
     /tmp/ccFLPyPj.s:65     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccFLPyPj.s:68     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccFLPyPj.s:71     .text.PID_HandleInit:0000000000000000 $t
     /tmp/ccFLPyPj.s:79     .text.PID_HandleInit:0000000000000000 PID_HandleInit
     /tmp/ccFLPyPj.s:142    .text.PID_SetKP:0000000000000000 $t
     /tmp/ccFLPyPj.s:149    .text.PID_SetKP:0000000000000000 PID_SetKP
     /tmp/ccFLPyPj.s:191    .text.PID_SetKI:0000000000000000 $t
     /tmp/ccFLPyPj.s:198    .text.PID_SetKI:0000000000000000 PID_SetKI
     /tmp/ccFLPyPj.s:240    .text.PID_GetKP:0000000000000000 $t
     /tmp/ccFLPyPj.s:247    .text.PID_GetKP:0000000000000000 PID_GetKP
     /tmp/ccFLPyPj.s:286    .text.PID_GetKI:0000000000000000 $t
     /tmp/ccFLPyPj.s:293    .text.PID_GetKI:0000000000000000 PID_GetKI
     /tmp/ccFLPyPj.s:332    .text.PID_GetDefaultKP:0000000000000000 $t
     /tmp/ccFLPyPj.s:339    .text.PID_GetDefaultKP:0000000000000000 PID_GetDefaultKP
     /tmp/ccFLPyPj.s:378    .text.PID_GetDefaultKI:0000000000000000 $t
     /tmp/ccFLPyPj.s:385    .text.PID_GetDefaultKI:0000000000000000 PID_GetDefaultKI
     /tmp/ccFLPyPj.s:424    .text.PID_SetIntegralTerm:0000000000000000 $t
     /tmp/ccFLPyPj.s:431    .text.PID_SetIntegralTerm:0000000000000000 PID_SetIntegralTerm
     /tmp/ccFLPyPj.s:473    .text.PID_GetKPDivisor:0000000000000000 $t
     /tmp/ccFLPyPj.s:480    .text.PID_GetKPDivisor:0000000000000000 PID_GetKPDivisor
     /tmp/ccFLPyPj.s:519    .text.PID_GetKPDivisorPOW2:0000000000000000 $t
     /tmp/ccFLPyPj.s:526    .text.PID_GetKPDivisorPOW2:0000000000000000 PID_GetKPDivisorPOW2
     /tmp/ccFLPyPj.s:565    .text.PID_SetKPDivisorPOW2:0000000000000000 $t
     /tmp/ccFLPyPj.s:572    .text.PID_SetKPDivisorPOW2:0000000000000000 PID_SetKPDivisorPOW2
     /tmp/ccFLPyPj.s:622    .text.PID_GetKIDivisor:0000000000000000 $t
     /tmp/ccFLPyPj.s:629    .text.PID_GetKIDivisor:0000000000000000 PID_GetKIDivisor
     /tmp/ccFLPyPj.s:668    .text.PID_GetKIDivisorPOW2:0000000000000000 $t
     /tmp/ccFLPyPj.s:675    .text.PID_GetKIDivisorPOW2:0000000000000000 PID_GetKIDivisorPOW2
     /tmp/ccFLPyPj.s:714    .text.PID_SetKIDivisorPOW2:0000000000000000 $t
     /tmp/ccFLPyPj.s:721    .text.PID_SetKIDivisorPOW2:0000000000000000 PID_SetKIDivisorPOW2
     /tmp/ccFLPyPj.s:844    .text.PID_SetUpperIntegralTermLimit:0000000000000000 PID_SetUpperIntegralTermLimit
     /tmp/ccFLPyPj.s:796    .text.PID_SetLowerIntegralTermLimit:0000000000000000 PID_SetLowerIntegralTermLimit
     /tmp/ccFLPyPj.s:789    .text.PID_SetLowerIntegralTermLimit:0000000000000000 $t
     /tmp/ccFLPyPj.s:837    .text.PID_SetUpperIntegralTermLimit:0000000000000000 $t
     /tmp/ccFLPyPj.s:885    .text.PID_SetPrevError:0000000000000000 $t
     /tmp/ccFLPyPj.s:892    .text.PID_SetPrevError:0000000000000000 PID_SetPrevError
     /tmp/ccFLPyPj.s:934    .text.PID_SetKD:0000000000000000 $t
     /tmp/ccFLPyPj.s:941    .text.PID_SetKD:0000000000000000 PID_SetKD
     /tmp/ccFLPyPj.s:983    .text.PID_GetKD:0000000000000000 $t
     /tmp/ccFLPyPj.s:990    .text.PID_GetKD:0000000000000000 PID_GetKD
     /tmp/ccFLPyPj.s:1029   .text.PID_GetKDDivisor:0000000000000000 $t
     /tmp/ccFLPyPj.s:1036   .text.PID_GetKDDivisor:0000000000000000 PID_GetKDDivisor
     /tmp/ccFLPyPj.s:1075   .text.PID_GetKDDivisorPOW2:0000000000000000 $t
ARM GAS  /tmp/ccFLPyPj.s 			page 43


     /tmp/ccFLPyPj.s:1082   .text.PID_GetKDDivisorPOW2:0000000000000000 PID_GetKDDivisorPOW2
     /tmp/ccFLPyPj.s:1121   .text.PID_SetKDDivisorPOW2:0000000000000000 $t
     /tmp/ccFLPyPj.s:1128   .text.PID_SetKDDivisorPOW2:0000000000000000 PID_SetKDDivisorPOW2
     /tmp/ccFLPyPj.s:1178   .text.PI_Controller:0000000000000000 $t
     /tmp/ccFLPyPj.s:1185   .text.PI_Controller:0000000000000000 PI_Controller
     /tmp/ccFLPyPj.s:1398   .text.PI_Controller:0000000000000124 $d
     /tmp/ccFLPyPj.s:1403   .text.PID_Controller:0000000000000000 $t
     /tmp/ccFLPyPj.s:1410   .text.PID_Controller:0000000000000000 PID_Controller

NO UNDEFINED SYMBOLS
