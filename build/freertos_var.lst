ARM GAS  /tmp/ccKj2Jpz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"freertos_var.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vApplicationIdleHook,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.weak	vApplicationIdleHook
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	vApplicationIdleHook:
  28              	.LFB1872:
  29              		.file 1 "Src/freertos_var.c"
   1:Src/freertos_var.c **** /* USER CODE BEGIN Header */
   2:Src/freertos_var.c **** /**
   3:Src/freertos_var.c ****   ******************************************************************************
   4:Src/freertos_var.c ****   * File Name          : freertos.c
   5:Src/freertos_var.c ****   * Description        : Code for freertos applications
   6:Src/freertos_var.c ****   ******************************************************************************
   7:Src/freertos_var.c ****   * This notice applies to any and all portions of this file
   8:Src/freertos_var.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/freertos_var.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/freertos_var.c ****   * inserted by the user or by software development tools
  11:Src/freertos_var.c ****   * are owned by their respective copyright owners.
  12:Src/freertos_var.c ****   *
  13:Src/freertos_var.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/freertos_var.c ****   * All rights reserved.
  15:Src/freertos_var.c ****   *
  16:Src/freertos_var.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/freertos_var.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/freertos_var.c ****   *
  19:Src/freertos_var.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/freertos_var.c ****   *    this list of conditions and the following disclaimer.
  21:Src/freertos_var.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/freertos_var.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/freertos_var.c ****   *    and/or other materials provided with the distribution.
  24:Src/freertos_var.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/freertos_var.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/freertos_var.c ****   *    derived from this software without specific written permission.
  27:Src/freertos_var.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/freertos_var.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/freertos_var.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  /tmp/ccKj2Jpz.s 			page 2


  30:Src/freertos_var.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/freertos_var.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/freertos_var.c ****   *    this license. 
  33:Src/freertos_var.c ****   *
  34:Src/freertos_var.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/freertos_var.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/freertos_var.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/freertos_var.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/freertos_var.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/freertos_var.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/freertos_var.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/freertos_var.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/freertos_var.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/freertos_var.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/freertos_var.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/freertos_var.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/freertos_var.c ****   *
  47:Src/freertos_var.c ****   ******************************************************************************
  48:Src/freertos_var.c ****   */
  49:Src/freertos_var.c **** /* USER CODE END Header */
  50:Src/freertos_var.c **** 
  51:Src/freertos_var.c **** /* Includes ------------------------------------------------------------------*/
  52:Src/freertos_var.c **** #include "FreeRTOS.h"
  53:Src/freertos_var.c **** #include "task.h"
  54:Src/freertos_var.c **** #include "main.h"
  55:Src/freertos_var.c **** #include "cmsis_os.h"
  56:Src/freertos_var.c **** 
  57:Src/freertos_var.c **** /* Private includes ----------------------------------------------------------*/
  58:Src/freertos_var.c **** /* USER CODE BEGIN Includes */     
  59:Src/freertos_var.c **** #include "freertos_vars.h"
  60:Src/freertos_var.c **** 
  61:Src/freertos_var.c **** void start_uart_server(void);
  62:Src/freertos_var.c **** 
  63:Src/freertos_var.c **** int odrive_main(void);
  64:Src/freertos_var.c **** int load_configuration(void);
  65:Src/freertos_var.c **** int construct_objects(void);
  66:Src/freertos_var.c **** /* USER CODE END Includes */
  67:Src/freertos_var.c **** 
  68:Src/freertos_var.c **** /* Private typedef -----------------------------------------------------------*/
  69:Src/freertos_var.c **** /* USER CODE BEGIN PTD */
  70:Src/freertos_var.c **** 
  71:Src/freertos_var.c **** /* USER CODE END PTD */
  72:Src/freertos_var.c **** 
  73:Src/freertos_var.c **** /* Private define ------------------------------------------------------------*/
  74:Src/freertos_var.c **** /* USER CODE BEGIN PD */
  75:Src/freertos_var.c **** 
  76:Src/freertos_var.c **** /* USER CODE END PD */
  77:Src/freertos_var.c **** 
  78:Src/freertos_var.c **** /* Private macro -------------------------------------------------------------*/
  79:Src/freertos_var.c **** /* USER CODE BEGIN PM */
  80:Src/freertos_var.c **** 
  81:Src/freertos_var.c **** /* USER CODE END PM */
  82:Src/freertos_var.c **** 
  83:Src/freertos_var.c **** /* Private variables ---------------------------------------------------------*/
  84:Src/freertos_var.c **** /* USER CODE BEGIN Variables */
  85:Src/freertos_var.c **** // List of semaphores
  86:Src/freertos_var.c **** 
ARM GAS  /tmp/ccKj2Jpz.s 			page 3


  87:Src/freertos_var.c **** osSemaphoreId sem_uart_dma;
  88:Src/freertos_var.c **** 
  89:Src/freertos_var.c **** osSemaphoreId sem_can;
  90:Src/freertos_var.c **** 
  91:Src/freertos_var.c **** 
  92:Src/freertos_var.c **** 
  93:Src/freertos_var.c **** 
  94:Src/freertos_var.c **** 
  95:Src/freertos_var.c **** /* Private function prototypes -----------------------------------------------*/
  96:Src/freertos_var.c **** /* USER CODE BEGIN FunctionPrototypes */
  97:Src/freertos_var.c **** 
  98:Src/freertos_var.c **** /* USER CODE END FunctionPrototypes */
  99:Src/freertos_var.c **** 
 100:Src/freertos_var.c **** void StartDefaultTask(void * argument);
 101:Src/freertos_var.c **** 
 102:Src/freertos_var.c **** extern void MX_USB_DEVICE_Init(void);
 103:Src/freertos_var.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 104:Src/freertos_var.c **** 
 105:Src/freertos_var.c **** /* Hook prototypes */
 106:Src/freertos_var.c **** void vApplicationIdleHook(void);
 107:Src/freertos_var.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
 108:Src/freertos_var.c **** 
 109:Src/freertos_var.c **** /* USER CODE BEGIN 2 */
 110:Src/freertos_var.c **** __weak void vApplicationIdleHook( void )
 111:Src/freertos_var.c **** {
  30              		.loc 1 111 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 112:Src/freertos_var.c ****    /* vApplicationIdleHook() will only be called if configUSE_IDLE_HOOK is set
 113:Src/freertos_var.c ****    to 1 in FreeRTOSConfig.h. It will be called on each iteration of the idle
 114:Src/freertos_var.c ****    task. It is essential that code added to this hook function never attempts
 115:Src/freertos_var.c ****    to block in any way (for example, call xQueueReceive() with a block time
 116:Src/freertos_var.c ****    specified, or call vTaskDelay()). If the application makes use of the
 117:Src/freertos_var.c ****    vTaskDelete() API function (as this demo application does) then it is also
 118:Src/freertos_var.c ****    important that vApplicationIdleHook() is permitted to return to its calling
 119:Src/freertos_var.c ****    function, because it is the responsibility of the idle task to clean up
 120:Src/freertos_var.c ****    memory allocated by the kernel to any task that has since been deleted. */
 121:Src/freertos_var.c **** }
  35              		.loc 1 121 1 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1872:
  40 0002 00BF     		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.weak	vApplicationStackOverflowHook
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	vApplicationStackOverflowHook:
  50              	.LVL0:
  51              	.LFB1873:
 122:Src/freertos_var.c **** /* USER CODE END 2 */
 123:Src/freertos_var.c **** 
ARM GAS  /tmp/ccKj2Jpz.s 			page 4


 124:Src/freertos_var.c **** /* USER CODE BEGIN 4 */
 125:Src/freertos_var.c **** __weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
 126:Src/freertos_var.c **** {
  52              		.loc 1 126 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 127:Src/freertos_var.c ****    /* Run time stack overflow checking is performed if
 128:Src/freertos_var.c ****    configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
 129:Src/freertos_var.c ****    called if a stack overflow is detected. */
 130:Src/freertos_var.c **** }
  57              		.loc 1 130 1 view .LVU3
  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE1873:
  62 0002 00BF     		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  63              		.align	1
  64              		.p2align 2,,3
  65              		.global	MX_FREERTOS_Init
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MX_FREERTOS_Init:
  72              	.LFB1874:
 131:Src/freertos_var.c **** 
 132:Src/freertos_var.c **** 
 133:Src/freertos_var.c **** /* USER CODE END 4 */
 134:Src/freertos_var.c **** 
 135:Src/freertos_var.c **** /**
 136:Src/freertos_var.c ****   * @brief  FreeRTOS initialization
 137:Src/freertos_var.c ****   * @param  None
 138:Src/freertos_var.c ****   * @retval None
 139:Src/freertos_var.c ****   */
 140:Src/freertos_var.c **** void MX_FREERTOS_Init(void) {
  73              		.loc 1 140 29 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 0, uses_anonymous_args = 0
 141:Src/freertos_var.c ****   /* USER CODE BEGIN Init */
 142:Src/freertos_var.c ****        
 143:Src/freertos_var.c ****   /* USER CODE END Init */
 144:Src/freertos_var.c **** 
 145:Src/freertos_var.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 146:Src/freertos_var.c ****   /* add mutexes, ... */
 147:Src/freertos_var.c ****   /* USER CODE END RTOS_MUTEX */
 148:Src/freertos_var.c **** 
 149:Src/freertos_var.c ****   // Create a semaphore for UART DMA and remove a token
 150:Src/freertos_var.c ****   osSemaphoreDef(sem_uart_dma);
  77              		.loc 1 150 3 view .LVU5
 140:Src/freertos_var.c ****   /* USER CODE BEGIN Init */
  78              		.loc 1 140 29 is_stmt 0 view .LVU6
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
ARM GAS  /tmp/ccKj2Jpz.s 			page 5


  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 16
  87              		.loc 1 150 3 view .LVU7
  88 0004 0024     		movs	r4, #0
 151:Src/freertos_var.c ****   sem_uart_dma = osSemaphoreCreate(osSemaphore(sem_uart_dma), 1);
  89              		.loc 1 151 18 view .LVU8
  90 0006 0121     		movs	r1, #1
  91 0008 6846     		mov	r0, sp
 150:Src/freertos_var.c ****   sem_uart_dma = osSemaphoreCreate(osSemaphore(sem_uart_dma), 1);
  92              		.loc 1 150 3 view .LVU9
  93 000a 0094     		str	r4, [sp]
  94              		.loc 1 151 3 is_stmt 1 view .LVU10
  95              		.loc 1 151 18 is_stmt 0 view .LVU11
  96 000c FFF7FEFF 		bl	osSemaphoreCreate
  97              	.LVL1:
  98              		.loc 1 151 16 view .LVU12
  99 0010 094B     		ldr	r3, .L6
 152:Src/freertos_var.c **** 
 153:Src/freertos_var.c **** 
 154:Src/freertos_var.c **** 
 155:Src/freertos_var.c ****   osSemaphoreDef(sem_can);
 100              		.loc 1 155 3 view .LVU13
 101 0012 0194     		str	r4, [sp, #4]
 151:Src/freertos_var.c **** 
 102              		.loc 1 151 18 view .LVU14
 103 0014 0246     		mov	r2, r0
 156:Src/freertos_var.c ****   sem_can = osSemaphoreCreate(osSemaphore(sem_can), 1);
 104              		.loc 1 156 13 view .LVU15
 105 0016 0121     		movs	r1, #1
 106 0018 01A8     		add	r0, sp, #4
 151:Src/freertos_var.c **** 
 107              		.loc 1 151 16 view .LVU16
 108 001a 1A60     		str	r2, [r3]
 155:Src/freertos_var.c ****   sem_can = osSemaphoreCreate(osSemaphore(sem_can), 1);
 109              		.loc 1 155 3 is_stmt 1 view .LVU17
 110              		.loc 1 156 3 view .LVU18
 111              		.loc 1 156 13 is_stmt 0 view .LVU19
 112 001c FFF7FEFF 		bl	osSemaphoreCreate
 113              	.LVL2:
 114              		.loc 1 156 11 view .LVU20
 115 0020 064B     		ldr	r3, .L6+4
 157:Src/freertos_var.c ****   osSemaphoreWait(sem_can, 0);
 116              		.loc 1 157 3 view .LVU21
 117 0022 2146     		mov	r1, r4
 156:Src/freertos_var.c ****   sem_can = osSemaphoreCreate(osSemaphore(sem_can), 1);
 118              		.loc 1 156 11 view .LVU22
 119 0024 1860     		str	r0, [r3]
 120              		.loc 1 157 3 is_stmt 1 view .LVU23
 121 0026 FFF7FEFF 		bl	osSemaphoreWait
 122              	.LVL3:
 158:Src/freertos_var.c **** 
 159:Src/freertos_var.c **** 
 160:Src/freertos_var.c ****   start_uart_server();
 123              		.loc 1 160 3 view .LVU24
 124 002a FFF7FEFF 		bl	start_uart_server
ARM GAS  /tmp/ccKj2Jpz.s 			page 6


 125              	.LVL4:
 161:Src/freertos_var.c **** 
 162:Src/freertos_var.c ****   
 163:Src/freertos_var.c ****   VESC_UART_Init();
 126              		.loc 1 163 3 view .LVU25
 127 002e FFF7FEFF 		bl	VESC_UART_Init
 128              	.LVL5:
 164:Src/freertos_var.c ****   // Load persistent configuration (or defaults)
 165:Src/freertos_var.c ****   //load_configuration();
 166:Src/freertos_var.c ****   //construct_objects();
 167:Src/freertos_var.c **** 
 168:Src/freertos_var.c ****   //odrive_main();
 169:Src/freertos_var.c ****   /* USER CODE END RTOS_SEMAPHORES */
 170:Src/freertos_var.c **** 
 171:Src/freertos_var.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 172:Src/freertos_var.c ****   /* start timers, add new ones, ... */
 173:Src/freertos_var.c ****   /* USER CODE END RTOS_TIMERS */
 174:Src/freertos_var.c **** 
 175:Src/freertos_var.c ****   /* Create the thread(s) */
 176:Src/freertos_var.c ****   /* definition and creation of defaultTask */
 177:Src/freertos_var.c **** 
 178:Src/freertos_var.c **** 
 179:Src/freertos_var.c ****   /* USER CODE BEGIN RTOS_THREADS */
 180:Src/freertos_var.c **** 
 181:Src/freertos_var.c ****   /* USER CODE END RTOS_THREADS */
 182:Src/freertos_var.c **** 
 183:Src/freertos_var.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 184:Src/freertos_var.c ****   /* add queues, ... */
 185:Src/freertos_var.c ****   /* USER CODE END RTOS_QUEUES */
 186:Src/freertos_var.c **** }
 129              		.loc 1 186 1 is_stmt 0 view .LVU26
 130 0032 02B0     		add	sp, sp, #8
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 8
 133              		@ sp needed
 134 0034 10BD     		pop	{r4, pc}
 135              	.L7:
 136 0036 00BF     		.align	2
 137              	.L6:
 138 0038 00000000 		.word	.LANCHOR0
 139 003c 00000000 		.word	.LANCHOR1
 140              		.cfi_endproc
 141              	.LFE1874:
 143              		.global	sem_can
 144              		.global	sem_uart_dma
 145              		.section	.bss.sem_can,"aw",%nobits
 146              		.align	2
 147              		.set	.LANCHOR1,. + 0
 150              	sem_can:
 151 0000 00000000 		.space	4
 152              		.section	.bss.sem_uart_dma,"aw",%nobits
 153              		.align	2
 154              		.set	.LANCHOR0,. + 0
 157              	sem_uart_dma:
 158 0000 00000000 		.space	4
 159              		.text
 160              	.Letext0:
ARM GAS  /tmp/ccKj2Jpz.s 			page 7


 161              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 162              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 163              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 164              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 165              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 166              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 167              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 168              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 169              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 170              		.file 11 "Inc/freertos_vars.h"
ARM GAS  /tmp/ccKj2Jpz.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos_var.c
     /tmp/ccKj2Jpz.s:18     .text.vApplicationIdleHook:0000000000000000 $t
     /tmp/ccKj2Jpz.s:27     .text.vApplicationIdleHook:0000000000000000 vApplicationIdleHook
     /tmp/ccKj2Jpz.s:41     .text.vApplicationStackOverflowHook:0000000000000000 $t
     /tmp/ccKj2Jpz.s:49     .text.vApplicationStackOverflowHook:0000000000000000 vApplicationStackOverflowHook
     /tmp/ccKj2Jpz.s:63     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccKj2Jpz.s:71     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccKj2Jpz.s:138    .text.MX_FREERTOS_Init:0000000000000038 $d
     /tmp/ccKj2Jpz.s:150    .bss.sem_can:0000000000000000 sem_can
     /tmp/ccKj2Jpz.s:157    .bss.sem_uart_dma:0000000000000000 sem_uart_dma
     /tmp/ccKj2Jpz.s:146    .bss.sem_can:0000000000000000 $d
     /tmp/ccKj2Jpz.s:153    .bss.sem_uart_dma:0000000000000000 $d

UNDEFINED SYMBOLS
osSemaphoreCreate
osSemaphoreWait
start_uart_server
VESC_UART_Init
