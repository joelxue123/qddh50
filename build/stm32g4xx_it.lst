ARM GAS  /tmp/cchwwNvA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32g4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
  22      04040404 
  22      3838
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
  28      00000800 
  28      0008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
  34      00000800 
  34      0000
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
  40      080A0C0E 
  40      1014
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
  46      04050607 
  46      080A
  47              		.section	.rodata.USART_PRESCALER_TAB,"a"
  48              		.align	2
  51              	USART_PRESCALER_TAB:
  52 0000 01000000 		.word	1
  53 0004 02000000 		.word	2
  54 0008 04000000 		.word	4
  55 000c 06000000 		.word	6
  56 0010 08000000 		.word	8
  57 0014 0A000000 		.word	10
  58 0018 0C000000 		.word	12
  59 001c 10000000 		.word	16
ARM GAS  /tmp/cchwwNvA.s 			page 2


  60 0020 20000000 		.word	32
  61 0024 40000000 		.word	64
  62 0028 80000000 		.word	128
  63 002c 00010000 		.word	256
  64              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  65              		.align	2
  68              	CHANNEL_OFFSET_TAB:
  69 0000 081C3044 		.ascii	"\010\0340DXl"
  69      586C
  70              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
  71              		.align	1
  72              		.global	TIM6_DAC_IRQHandler
  73              		.arch armv7e-m
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	TIM6_DAC_IRQHandler:
  80              	.LFB1988:
  81              		.file 1 "Src/stm32g4xx_it.c"
   1:Src/stm32g4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g4xx_it.c **** /**
   3:Src/stm32g4xx_it.c ****   ******************************************************************************
   4:Src/stm32g4xx_it.c ****   * @file    stm32g4xx_it.c
   5:Src/stm32g4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g4xx_it.c ****   ******************************************************************************
   7:Src/stm32g4xx_it.c ****   * @attention
   8:Src/stm32g4xx_it.c ****   *
   9:Src/stm32g4xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Src/stm32g4xx_it.c ****   * All rights reserved.
  11:Src/stm32g4xx_it.c ****   *
  12:Src/stm32g4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32g4xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32g4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32g4xx_it.c ****   *
  16:Src/stm32g4xx_it.c ****   ******************************************************************************
  17:Src/stm32g4xx_it.c ****   */
  18:Src/stm32g4xx_it.c **** /* USER CODE END Header */
  19:Src/stm32g4xx_it.c **** 
  20:Src/stm32g4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32g4xx_it.c **** #include "main.h"
  22:Src/stm32g4xx_it.c **** #include "stm32g4xx_it.h"
  23:Src/stm32g4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32g4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32g4xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32g4xx_it.c **** 
  27:Src/stm32g4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32g4xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32g4xx_it.c **** 
  30:Src/stm32g4xx_it.c **** /* USER CODE END TD */
  31:Src/stm32g4xx_it.c **** 
  32:Src/stm32g4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32g4xx_it.c **** 
  35:Src/stm32g4xx_it.c **** /* USER CODE END PD */
  36:Src/stm32g4xx_it.c **** 
  37:Src/stm32g4xx_it.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/cchwwNvA.s 			page 3


  38:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32g4xx_it.c **** 
  40:Src/stm32g4xx_it.c **** /* USER CODE END PM */
  41:Src/stm32g4xx_it.c **** 
  42:Src/stm32g4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32g4xx_it.c **** 
  45:Src/stm32g4xx_it.c **** /* USER CODE END PV */
  46:Src/stm32g4xx_it.c **** 
  47:Src/stm32g4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32g4xx_it.c **** 
  50:Src/stm32g4xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32g4xx_it.c **** 
  52:Src/stm32g4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32g4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32g4xx_it.c **** 
  55:Src/stm32g4xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32g4xx_it.c **** 
  57:Src/stm32g4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32g4xx_it.c **** extern TIM_HandleTypeDef htim6;
  59:Src/stm32g4xx_it.c **** 
  60:Src/stm32g4xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32g4xx_it.c **** 
  62:Src/stm32g4xx_it.c **** /* USER CODE END EV */
  63:Src/stm32g4xx_it.c **** 
  64:Src/stm32g4xx_it.c **** /******************************************************************************/
  65:Src/stm32g4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  66:Src/stm32g4xx_it.c **** /******************************************************************************/
  67:Src/stm32g4xx_it.c **** 
  68:Src/stm32g4xx_it.c **** /******************************************************************************/
  69:Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
  70:Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  71:Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  72:Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
  73:Src/stm32g4xx_it.c **** /******************************************************************************/
  74:Src/stm32g4xx_it.c **** 
  75:Src/stm32g4xx_it.c **** /**
  76:Src/stm32g4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC3 channel underrun error interr
  77:Src/stm32g4xx_it.c ****   */
  78:Src/stm32g4xx_it.c **** void TIM6_DAC_IRQHandler(void)
  79:Src/stm32g4xx_it.c **** {
  82              		.loc 1 79 1
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 00AF     		add	r7, sp, #0
  92              	.LCFI1:
  93              		.cfi_def_cfa_register 7
  80:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
  81:Src/stm32g4xx_it.c **** 
  82:Src/stm32g4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
ARM GAS  /tmp/cchwwNvA.s 			page 4


  83:Src/stm32g4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
  94              		.loc 1 83 3
  95 0004 0248     		ldr	r0, .L2
  96 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
  84:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
  85:Src/stm32g4xx_it.c **** 
  86:Src/stm32g4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
  87:Src/stm32g4xx_it.c **** }
  97              		.loc 1 87 1
  98 000a 00BF     		nop
  99 000c 80BD     		pop	{r7, pc}
 100              	.L3:
 101 000e 00BF     		.align	2
 102              	.L2:
 103 0010 00000000 		.word	htim6
 104              		.cfi_endproc
 105              	.LFE1988:
 107              		.text
 108              	.Letext0:
 109              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 110              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 111              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 112              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 113              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 114              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 115              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 116              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 117              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
ARM GAS  /tmp/cchwwNvA.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_it.c
     /tmp/cchwwNvA.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cchwwNvA.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/cchwwNvA.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cchwwNvA.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/cchwwNvA.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cchwwNvA.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/cchwwNvA.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cchwwNvA.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/cchwwNvA.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/cchwwNvA.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/cchwwNvA.s:48     .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/cchwwNvA.s:51     .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB
     /tmp/cchwwNvA.s:65     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cchwwNvA.s:68     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/cchwwNvA.s:71     .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/cchwwNvA.s:79     .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/cchwwNvA.s:103    .text.TIM6_DAC_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim6
