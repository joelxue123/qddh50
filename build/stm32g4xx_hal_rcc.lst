ARM GAS  /tmp/ccyQqkg8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32g4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB132:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @file    stm32g4xx_hal_rcc.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       After reset the device is running from High Speed Internal oscillator
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (16 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) buses:
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
ARM GAS  /tmp/ccyQqkg8.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           derived from the System clock (USB, RNG, USART, LPUART, FDCAN, some TIMERs,
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           UCPD, I2S, I2C, LPTIM, ADC, QSPI)
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @endverbatim
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @attention
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * Copyright (c) 2019 STMicroelectronics.
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * All rights reserved.
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * the root directory of this software component.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #include "stm32g4xx_hal.h"
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @addtogroup STM32G4xx_HAL_Driver
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC RCC
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  * @{
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  */
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U                /* 2 ms (minimum Tick + 1) */
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U             /* 5 s    */
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_PIN(__RCC_MCOx__)   ((__RCC_MCOx__) & GPIO_PIN_MASK)
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_AF(__RCC_MCOx__)    (((__RCC_MCOx__) & RCC_MCO_GPIOAF_MASK) >> RCC_MCO_GPI
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyQqkg8.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_INDEX(__RCC_MCOx__) (((__RCC_MCOx__) & RCC_MCO_GPIOPORT_MASK) >> RCC_MCO_G
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_PORT(__RCC_MCOx__)  (AHB2PERIPH_BASE + ((0x00000400UL) * RCC_GET_MCO_GPIO_
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @verbatim
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****        and APB2).
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              the PLL as System clock source.
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              clock source.
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE) providing up to three independent output clocks:
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 170 MHz).
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB (48 MHz),
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 the QSPI (<= 48 MHz), the FDCAN, the SAI and the I2S.
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The third output is used to generate a clock for ADC
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyQqkg8.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              exception vector.
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output LSI, HSI, LSE, HSE,
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              main PLL clock, system clock or RC48 clock (through a configurable prescaler) on PA8 p
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              HSE and main PLL.
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              the peripherals mapped on these buses. You can use
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 divided by 2 to 31.
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 to configure this clock.
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) USB FS and RNG: USB FS requires a frequency equal to 48 MHz
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 to work correctly, while the RNG peripheral requires a frequency
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 170 MHz.
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @endverbatim
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for STM32G4xx devices
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            +----------------------------------------------------------------------------+
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            | Latency         |            HCLK clock frequency (MHz)                    |
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |----------------------------------------------------------|
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |  voltage range 1  |  voltage range 1  | voltage range 2  |
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 | boost mode 1.28 V | normal mode 1.2 V |     1.0 V        |
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|    HCLK <= 34     |    HCLK <= 30     |    HCLK <= 13    |
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|    HCLK <= 68     |    HCLK <= 60     |    HCLK <= 26    |
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|    HCLK <= 102    |    HCLK <= 90     |        -         |
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|    HCLK <= 136    |    HCLK <= 120    |        -         |
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|    HCLK <= 170    |    HCLK <= 150    |        -         |
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            +----------------------------------------------------------------------------+
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyQqkg8.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - HSE, PLL OFF
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - All interrupts disabled
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - Peripheral clocks
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HAL status
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
  29              		.loc 1 220 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  44              		.loc 1 224 15
  45 0006 FFF7FEFF 		bl	HAL_GetTick
  46 000a 7860     		str	r0, [r7, #4]
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  47              		.loc 1 227 3
  48 000c 394B     		ldr	r3, .L10
  49 000e 1B68     		ldr	r3, [r3]
  50 0010 384A     		ldr	r2, .L10
  51 0012 43F48073 		orr	r3, r3, #256
  52 0016 1360     		str	r3, [r2]
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till HSI is ready */
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
  53              		.loc 1 230 9
  54 0018 08E0     		b	.L2
  55              	.L4:
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccyQqkg8.s 			page 6


 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 232 10
  57 001a FFF7FEFF 		bl	HAL_GetTick
  58 001e 0246     		mov	r2, r0
  59              		.loc 1 232 24
  60 0020 7B68     		ldr	r3, [r7, #4]
  61 0022 D31A     		subs	r3, r2, r3
  62              		.loc 1 232 8
  63 0024 022B     		cmp	r3, #2
  64 0026 01D9     		bls	.L2
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 234 14
  66 0028 0323     		movs	r3, #3
  67 002a 5FE0     		b	.L3
  68              	.L2:
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
  69              		.loc 1 230 10
  70 002c 314B     		ldr	r3, .L10
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 03F48063 		and	r3, r3, #1024
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
  73              		.loc 1 230 9
  74 0034 002B     		cmp	r3, #0
  75 0036 F0D0     		beq	.L4
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  /* Set HSITRIM[6:0] bits to the reset value */
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->ICSCR, RCC_HSICALIBRATION_DEFAULT << RCC_ICSCR_HSITRIM_Pos);
  76              		.loc 1 239 3
  77 0038 2E4B     		ldr	r3, .L10
  78 003a 5B68     		ldr	r3, [r3, #4]
  79 003c 2D4A     		ldr	r2, .L10
  80 003e 43F08043 		orr	r3, r3, #1073741824
  81 0042 5360     		str	r3, [r2, #4]
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  82              		.loc 1 242 15
  83 0044 FFF7FEFF 		bl	HAL_GetTick
  84 0048 7860     		str	r0, [r7, #4]
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Reset CFGR register (HSI is selected as system clock source) */
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CFGR = 0x00000001u;
  85              		.loc 1 245 6
  86 004a 2A4B     		ldr	r3, .L10
  87              		.loc 1 245 13
  88 004c 0122     		movs	r2, #1
  89 004e 9A60     		str	r2, [r3, #8]
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till HSI is ready */
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
  90              		.loc 1 248 9
  91 0050 0AE0     		b	.L5
  92              	.L6:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccyQqkg8.s 			page 7


 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  93              		.loc 1 250 10
  94 0052 FFF7FEFF 		bl	HAL_GetTick
  95 0056 0246     		mov	r2, r0
  96              		.loc 1 250 24
  97 0058 7B68     		ldr	r3, [r7, #4]
  98 005a D31A     		subs	r3, r2, r3
  99              		.loc 1 250 8
 100 005c 41F28832 		movw	r2, #5000
 101 0060 9342     		cmp	r3, r2
 102 0062 01D9     		bls	.L5
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 103              		.loc 1 252 14
 104 0064 0323     		movs	r3, #3
 105 0066 41E0     		b	.L3
 106              	.L5:
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 107              		.loc 1 248 10
 108 0068 224B     		ldr	r3, .L10
 109 006a 9B68     		ldr	r3, [r3, #8]
 110 006c 03F00C03 		and	r3, r3, #12
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 111              		.loc 1 248 9
 112 0070 042B     		cmp	r3, #4
 113 0072 EED1     		bne	.L6
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 114              		.loc 1 257 19
 115 0074 204B     		ldr	r3, .L10+4
 116 0076 214A     		ldr	r2, .L10+8
 117 0078 1A60     		str	r2, [r3]
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 118              		.loc 1 260 7
 119 007a 214B     		ldr	r3, .L10+12
 120 007c 1B68     		ldr	r3, [r3]
 121 007e 1846     		mov	r0, r3
 122 0080 FFF7FEFF 		bl	HAL_InitTick
 123 0084 0346     		mov	r3, r0
 124              		.loc 1 260 6
 125 0086 002B     		cmp	r3, #0
 126 0088 01D0     		beq	.L7
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 127              		.loc 1 262 12
 128 008a 0123     		movs	r3, #1
 129 008c 2EE0     		b	.L3
 130              	.L7:
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear CR register in 2 steps: first to clear HSEON in case bypass was enabled */
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CR = RCC_CR_HSION;
ARM GAS  /tmp/ccyQqkg8.s 			page 8


 131              		.loc 1 266 6
 132 008e 194B     		ldr	r3, .L10
 133              		.loc 1 266 11
 134 0090 4FF48072 		mov	r2, #256
 135 0094 1A60     		str	r2, [r3]
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Then again to HSEBYP in case bypass was enabled */
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CR = RCC_CR_HSION;
 136              		.loc 1 269 6
 137 0096 174B     		ldr	r3, .L10
 138              		.loc 1 269 11
 139 0098 4FF48072 		mov	r2, #256
 140 009c 1A60     		str	r2, [r3]
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 141              		.loc 1 272 15
 142 009e FFF7FEFF 		bl	HAL_GetTick
 143 00a2 7860     		str	r0, [r7, #4]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till PLL is OFF */
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 144              		.loc 1 275 9
 145 00a4 08E0     		b	.L8
 146              	.L9:
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 147              		.loc 1 277 10
 148 00a6 FFF7FEFF 		bl	HAL_GetTick
 149 00aa 0246     		mov	r2, r0
 150              		.loc 1 277 24
 151 00ac 7B68     		ldr	r3, [r7, #4]
 152 00ae D31A     		subs	r3, r2, r3
 153              		.loc 1 277 8
 154 00b0 022B     		cmp	r3, #2
 155 00b2 01D9     		bls	.L8
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 156              		.loc 1 279 14
 157 00b4 0323     		movs	r3, #3
 158 00b6 19E0     		b	.L3
 159              	.L8:
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 160              		.loc 1 275 10
 161 00b8 0E4B     		ldr	r3, .L10
 162 00ba 1B68     		ldr	r3, [r3]
 163 00bc 03F00073 		and	r3, r3, #33554432
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 164              		.loc 1 275 9
 165 00c0 002B     		cmp	r3, #0
 166 00c2 F0D1     		bne	.L9
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* once PLL is OFF, reset PLLCFGR register to default value */
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLN_4;
 167              		.loc 1 284 6
ARM GAS  /tmp/ccyQqkg8.s 			page 9


 168 00c4 0B4B     		ldr	r3, .L10
 169              		.loc 1 284 16
 170 00c6 4FF48052 		mov	r2, #4096
 171 00ca DA60     		str	r2, [r3, #12]
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Disable all interrupts */
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 172              		.loc 1 287 3
 173 00cc 094B     		ldr	r3, .L10
 174 00ce 0022     		movs	r2, #0
 175 00d0 9A61     		str	r2, [r3, #24]
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 176              		.loc 1 290 3
 177 00d2 084B     		ldr	r3, .L10
 178 00d4 4FF0FF32 		mov	r2, #-1
 179 00d8 1A62     		str	r2, [r3, #32]
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear all reset flags */
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 180              		.loc 1 293 3
 181 00da 064B     		ldr	r3, .L10
 182 00dc D3F89430 		ldr	r3, [r3, #148]
 183 00e0 044A     		ldr	r2, .L10
 184 00e2 43F40003 		orr	r3, r3, #8388608
 185 00e6 C2F89430 		str	r3, [r2, #148]
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_OK;
 186              		.loc 1 295 10
 187 00ea 0023     		movs	r3, #0
 188              	.L3:
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 189              		.loc 1 296 1
 190 00ec 1846     		mov	r0, r3
 191 00ee 0837     		adds	r7, r7, #8
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 8
 194 00f0 BD46     		mov	sp, r7
 195              	.LCFI4:
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 00f2 80BD     		pop	{r7, pc}
 199              	.L11:
 200              		.align	2
 201              	.L10:
 202 00f4 00100240 		.word	1073876992
 203 00f8 00000000 		.word	SystemCoreClock
 204 00fc 0024F400 		.word	16000000
 205 0100 00000000 		.word	uwTickPrio
 206              		.cfi_endproc
 207              	.LFE132:
 209              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_RCC_OscConfig
 212              		.syntax unified
 213              		.thumb
ARM GAS  /tmp/ccyQqkg8.s 			page 10


 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	HAL_RCC_OscConfig:
 218              	.LFB133:
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HAL status
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 219              		.loc 1 313 1
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 32
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 80B5     		push	{r7, lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 88B0     		sub	sp, sp, #32
 229              	.LCFI6:
 230              		.cfi_def_cfa_offset 40
 231 0004 00AF     		add	r7, sp, #0
 232              	.LCFI7:
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t temp_sysclksrc;
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t temp_pllckcfg;
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check Null pointer */
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 235              		.loc 1 319 6
 236 0008 7B68     		ldr	r3, [r7, #4]
 237 000a 002B     		cmp	r3, #0
 238 000c 01D1     		bne	.L13
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 239              		.loc 1 321 12
 240 000e 0123     		movs	r3, #1
 241 0010 FEE2     		b	.L14
 242              	.L13:
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
ARM GAS  /tmp/ccyQqkg8.s 			page 11


 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 243              		.loc 1 328 26
 244 0012 7B68     		ldr	r3, [r7, #4]
 245 0014 1B68     		ldr	r3, [r3]
 246              		.loc 1 328 44
 247 0016 03F00103 		and	r3, r3, #1
 248              		.loc 1 328 6
 249 001a 002B     		cmp	r3, #0
 250 001c 75D0     		beq	.L15
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 251              		.loc 1 333 22
 252 001e 974B     		ldr	r3, .L80
 253 0020 9B68     		ldr	r3, [r3, #8]
 254              		.loc 1 333 20
 255 0022 03F00C03 		and	r3, r3, #12
 256 0026 BB61     		str	r3, [r7, #24]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 257              		.loc 1 334 21
 258 0028 944B     		ldr	r3, .L80
 259 002a DB68     		ldr	r3, [r3, #12]
 260              		.loc 1 334 19
 261 002c 03F00303 		and	r3, r3, #3
 262 0030 7B61     		str	r3, [r7, #20]
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSE)) || (temp_sys
 263              		.loc 1 337 8
 264 0032 BB69     		ldr	r3, [r7, #24]
 265 0034 0C2B     		cmp	r3, #12
 266 0036 02D1     		bne	.L16
 267              		.loc 1 337 47 discriminator 1
 268 0038 7B69     		ldr	r3, [r7, #20]
 269 003a 032B     		cmp	r3, #3
 270 003c 02D0     		beq	.L17
 271              	.L16:
 272              		.loc 1 337 88 discriminator 3
 273 003e BB69     		ldr	r3, [r7, #24]
 274 0040 082B     		cmp	r3, #8
 275 0042 0BD1     		bne	.L18
 276              	.L17:
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 277              		.loc 1 339 12
 278 0044 8D4B     		ldr	r3, .L80
 279 0046 1B68     		ldr	r3, [r3]
 280 0048 03F40033 		and	r3, r3, #131072
 281              		.loc 1 339 10
 282 004c 002B     		cmp	r3, #0
 283 004e 5BD0     		beq	.L78
 284              		.loc 1 339 73 discriminator 1
 285 0050 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccyQqkg8.s 			page 12


 286 0052 5B68     		ldr	r3, [r3, #4]
 287              		.loc 1 339 52 discriminator 1
 288 0054 002B     		cmp	r3, #0
 289 0056 57D1     		bne	.L78
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 290              		.loc 1 341 16
 291 0058 0123     		movs	r3, #1
 292 005a D9E2     		b	.L14
 293              	.L18:
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 294              		.loc 1 347 7
 295 005c 7B68     		ldr	r3, [r7, #4]
 296 005e 5B68     		ldr	r3, [r3, #4]
 297 0060 B3F5803F 		cmp	r3, #65536
 298 0064 06D1     		bne	.L20
 299              		.loc 1 347 7 is_stmt 0 discriminator 1
 300 0066 854B     		ldr	r3, .L80
 301 0068 1B68     		ldr	r3, [r3]
 302 006a 844A     		ldr	r2, .L80
 303 006c 43F48033 		orr	r3, r3, #65536
 304 0070 1360     		str	r3, [r2]
 305 0072 1DE0     		b	.L21
 306              	.L20:
 307              		.loc 1 347 7 discriminator 2
 308 0074 7B68     		ldr	r3, [r7, #4]
 309 0076 5B68     		ldr	r3, [r3, #4]
 310 0078 B3F5A02F 		cmp	r3, #327680
 311 007c 0CD1     		bne	.L22
 312              		.loc 1 347 7 discriminator 3
 313 007e 7F4B     		ldr	r3, .L80
 314 0080 1B68     		ldr	r3, [r3]
 315 0082 7E4A     		ldr	r2, .L80
 316 0084 43F48023 		orr	r3, r3, #262144
 317 0088 1360     		str	r3, [r2]
 318 008a 7C4B     		ldr	r3, .L80
 319 008c 1B68     		ldr	r3, [r3]
 320 008e 7B4A     		ldr	r2, .L80
 321 0090 43F48033 		orr	r3, r3, #65536
 322 0094 1360     		str	r3, [r2]
 323 0096 0BE0     		b	.L21
 324              	.L22:
 325              		.loc 1 347 7 discriminator 4
 326 0098 784B     		ldr	r3, .L80
 327 009a 1B68     		ldr	r3, [r3]
 328 009c 774A     		ldr	r2, .L80
 329 009e 23F48033 		bic	r3, r3, #65536
 330 00a2 1360     		str	r3, [r2]
 331 00a4 754B     		ldr	r3, .L80
 332 00a6 1B68     		ldr	r3, [r3]
 333 00a8 744A     		ldr	r2, .L80
 334 00aa 23F48023 		bic	r3, r3, #262144
ARM GAS  /tmp/ccyQqkg8.s 			page 13


 335 00ae 1360     		str	r3, [r2]
 336              	.L21:
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the HSE State */
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 337              		.loc 1 350 28 is_stmt 1
 338 00b0 7B68     		ldr	r3, [r7, #4]
 339 00b2 5B68     		ldr	r3, [r3, #4]
 340              		.loc 1 350 10
 341 00b4 002B     		cmp	r3, #0
 342 00b6 13D0     		beq	.L23
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 343              		.loc 1 353 21
 344 00b8 FFF7FEFF 		bl	HAL_GetTick
 345 00bc 3861     		str	r0, [r7, #16]
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 346              		.loc 1 356 15
 347 00be 08E0     		b	.L24
 348              	.L25:
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 349              		.loc 1 358 16
 350 00c0 FFF7FEFF 		bl	HAL_GetTick
 351 00c4 0246     		mov	r2, r0
 352              		.loc 1 358 30
 353 00c6 3B69     		ldr	r3, [r7, #16]
 354 00c8 D31A     		subs	r3, r2, r3
 355              		.loc 1 358 14
 356 00ca 642B     		cmp	r3, #100
 357 00cc 01D9     		bls	.L24
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 358              		.loc 1 360 20
 359 00ce 0323     		movs	r3, #3
 360 00d0 9EE2     		b	.L14
 361              	.L24:
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 362              		.loc 1 356 16
 363 00d2 6A4B     		ldr	r3, .L80
 364 00d4 1B68     		ldr	r3, [r3]
 365 00d6 03F40033 		and	r3, r3, #131072
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 366              		.loc 1 356 15
 367 00da 002B     		cmp	r3, #0
 368 00dc F0D0     		beq	.L25
 369 00de 14E0     		b	.L15
 370              	.L23:
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
ARM GAS  /tmp/ccyQqkg8.s 			page 14


 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 371              		.loc 1 367 21
 372 00e0 FFF7FEFF 		bl	HAL_GetTick
 373 00e4 3861     		str	r0, [r7, #16]
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 374              		.loc 1 370 15
 375 00e6 08E0     		b	.L26
 376              	.L27:
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 377              		.loc 1 372 16
 378 00e8 FFF7FEFF 		bl	HAL_GetTick
 379 00ec 0246     		mov	r2, r0
 380              		.loc 1 372 30
 381 00ee 3B69     		ldr	r3, [r7, #16]
 382 00f0 D31A     		subs	r3, r2, r3
 383              		.loc 1 372 14
 384 00f2 642B     		cmp	r3, #100
 385 00f4 01D9     		bls	.L26
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 386              		.loc 1 374 20
 387 00f6 0323     		movs	r3, #3
 388 00f8 8AE2     		b	.L14
 389              	.L26:
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 390              		.loc 1 370 16
 391 00fa 604B     		ldr	r3, .L80
 392 00fc 1B68     		ldr	r3, [r3]
 393 00fe 03F40033 		and	r3, r3, #131072
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 394              		.loc 1 370 15
 395 0102 002B     		cmp	r3, #0
 396 0104 F0D1     		bne	.L27
 397 0106 00E0     		b	.L15
 398              	.L78:
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 399              		.loc 1 339 10
 400 0108 00BF     		nop
 401              	.L15:
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 402              		.loc 1 381 26
 403 010a 7B68     		ldr	r3, [r7, #4]
 404 010c 1B68     		ldr	r3, [r3]
 405              		.loc 1 381 44
 406 010e 03F00203 		and	r3, r3, #2
 407              		.loc 1 381 6
 408 0112 002B     		cmp	r3, #0
 409 0114 75D0     		beq	.L28
ARM GAS  /tmp/ccyQqkg8.s 			page 15


 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 410              		.loc 1 388 22
 411 0116 594B     		ldr	r3, .L80
 412 0118 9B68     		ldr	r3, [r3, #8]
 413              		.loc 1 388 20
 414 011a 03F00C03 		and	r3, r3, #12
 415 011e BB61     		str	r3, [r7, #24]
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 416              		.loc 1 389 21
 417 0120 564B     		ldr	r3, .L80
 418 0122 DB68     		ldr	r3, [r3, #12]
 419              		.loc 1 389 19
 420 0124 03F00303 		and	r3, r3, #3
 421 0128 7B61     		str	r3, [r7, #20]
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSI)) || (temp_sys
 422              		.loc 1 390 8
 423 012a BB69     		ldr	r3, [r7, #24]
 424 012c 0C2B     		cmp	r3, #12
 425 012e 02D1     		bne	.L29
 426              		.loc 1 390 47 discriminator 1
 427 0130 7B69     		ldr	r3, [r7, #20]
 428 0132 022B     		cmp	r3, #2
 429 0134 02D0     		beq	.L30
 430              	.L29:
 431              		.loc 1 390 88 discriminator 3
 432 0136 BB69     		ldr	r3, [r7, #24]
 433 0138 042B     		cmp	r3, #4
 434 013a 1FD1     		bne	.L31
 435              	.L30:
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 436              		.loc 1 393 12
 437 013c 4F4B     		ldr	r3, .L80
 438 013e 1B68     		ldr	r3, [r3]
 439 0140 03F48063 		and	r3, r3, #1024
 440              		.loc 1 393 10
 441 0144 002B     		cmp	r3, #0
 442 0146 05D0     		beq	.L32
 443              		.loc 1 393 73 discriminator 1
 444 0148 7B68     		ldr	r3, [r7, #4]
 445 014a DB68     		ldr	r3, [r3, #12]
 446              		.loc 1 393 52 discriminator 1
 447 014c 002B     		cmp	r3, #0
 448 014e 01D1     		bne	.L32
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 449              		.loc 1 395 16
 450 0150 0123     		movs	r3, #1
 451 0152 5DE2     		b	.L14
 452              	.L32:
ARM GAS  /tmp/ccyQqkg8.s 			page 16


 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 453              		.loc 1 401 9
 454 0154 494B     		ldr	r3, .L80
 455 0156 5B68     		ldr	r3, [r3, #4]
 456 0158 23F0FE42 		bic	r2, r3, #2130706432
 457 015c 7B68     		ldr	r3, [r7, #4]
 458 015e 1B69     		ldr	r3, [r3, #16]
 459 0160 1B06     		lsls	r3, r3, #24
 460 0162 4649     		ldr	r1, .L80
 461 0164 1343     		orrs	r3, r3, r2
 462 0166 4B60     		str	r3, [r1, #4]
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adapt Systick interrupt period */
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if (HAL_InitTick(uwTickPrio) != HAL_OK)
 463              		.loc 1 404 13
 464 0168 454B     		ldr	r3, .L80+4
 465 016a 1B68     		ldr	r3, [r3]
 466 016c 1846     		mov	r0, r3
 467 016e FFF7FEFF 		bl	HAL_InitTick
 468 0172 0346     		mov	r3, r0
 469              		.loc 1 404 12
 470 0174 002B     		cmp	r3, #0
 471 0176 43D0     		beq	.L79
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 472              		.loc 1 406 18
 473 0178 0123     		movs	r3, #1
 474 017a 49E2     		b	.L14
 475              	.L31:
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the HSI State */
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 476              		.loc 1 413 28
 477 017c 7B68     		ldr	r3, [r7, #4]
 478 017e DB68     		ldr	r3, [r3, #12]
 479              		.loc 1 413 10
 480 0180 002B     		cmp	r3, #0
 481 0182 23D0     		beq	.L34
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 482              		.loc 1 416 9
 483 0184 3D4B     		ldr	r3, .L80
 484 0186 1B68     		ldr	r3, [r3]
 485 0188 3C4A     		ldr	r2, .L80
 486 018a 43F48073 		orr	r3, r3, #256
 487 018e 1360     		str	r3, [r2]
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyQqkg8.s 			page 17


 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 488              		.loc 1 419 21
 489 0190 FFF7FEFF 		bl	HAL_GetTick
 490 0194 3861     		str	r0, [r7, #16]
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 491              		.loc 1 422 15
 492 0196 08E0     		b	.L35
 493              	.L36:
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 494              		.loc 1 424 16
 495 0198 FFF7FEFF 		bl	HAL_GetTick
 496 019c 0246     		mov	r2, r0
 497              		.loc 1 424 30
 498 019e 3B69     		ldr	r3, [r7, #16]
 499 01a0 D31A     		subs	r3, r2, r3
 500              		.loc 1 424 14
 501 01a2 022B     		cmp	r3, #2
 502 01a4 01D9     		bls	.L35
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 503              		.loc 1 426 20
 504 01a6 0323     		movs	r3, #3
 505 01a8 32E2     		b	.L14
 506              	.L35:
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 507              		.loc 1 422 16
 508 01aa 344B     		ldr	r3, .L80
 509 01ac 1B68     		ldr	r3, [r3]
 510 01ae 03F48063 		and	r3, r3, #1024
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 511              		.loc 1 422 15
 512 01b2 002B     		cmp	r3, #0
 513 01b4 F0D0     		beq	.L36
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 514              		.loc 1 431 9
 515 01b6 314B     		ldr	r3, .L80
 516 01b8 5B68     		ldr	r3, [r3, #4]
 517 01ba 23F0FE42 		bic	r2, r3, #2130706432
 518 01be 7B68     		ldr	r3, [r7, #4]
 519 01c0 1B69     		ldr	r3, [r3, #16]
 520 01c2 1B06     		lsls	r3, r3, #24
 521 01c4 2D49     		ldr	r1, .L80
 522 01c6 1343     		orrs	r3, r3, r2
 523 01c8 4B60     		str	r3, [r1, #4]
 524 01ca 1AE0     		b	.L28
 525              	.L34:
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccyQqkg8.s 			page 18


 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 526              		.loc 1 436 9
 527 01cc 2B4B     		ldr	r3, .L80
 528 01ce 1B68     		ldr	r3, [r3]
 529 01d0 2A4A     		ldr	r2, .L80
 530 01d2 23F48073 		bic	r3, r3, #256
 531 01d6 1360     		str	r3, [r2]
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 532              		.loc 1 439 21
 533 01d8 FFF7FEFF 		bl	HAL_GetTick
 534 01dc 3861     		str	r0, [r7, #16]
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 535              		.loc 1 442 15
 536 01de 08E0     		b	.L37
 537              	.L38:
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 538              		.loc 1 444 16
 539 01e0 FFF7FEFF 		bl	HAL_GetTick
 540 01e4 0246     		mov	r2, r0
 541              		.loc 1 444 30
 542 01e6 3B69     		ldr	r3, [r7, #16]
 543 01e8 D31A     		subs	r3, r2, r3
 544              		.loc 1 444 14
 545 01ea 022B     		cmp	r3, #2
 546 01ec 01D9     		bls	.L37
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 547              		.loc 1 446 20
 548 01ee 0323     		movs	r3, #3
 549 01f0 0EE2     		b	.L14
 550              	.L37:
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 551              		.loc 1 442 16
 552 01f2 224B     		ldr	r3, .L80
 553 01f4 1B68     		ldr	r3, [r3]
 554 01f6 03F48063 		and	r3, r3, #1024
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 555              		.loc 1 442 15
 556 01fa 002B     		cmp	r3, #0
 557 01fc F0D1     		bne	.L38
 558 01fe 00E0     		b	.L28
 559              	.L79:
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 560              		.loc 1 393 10
 561 0200 00BF     		nop
 562              	.L28:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccyQqkg8.s 			page 19


 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 563              		.loc 1 453 26
 564 0202 7B68     		ldr	r3, [r7, #4]
 565 0204 1B68     		ldr	r3, [r3]
 566              		.loc 1 453 44
 567 0206 03F00803 		and	r3, r3, #8
 568              		.loc 1 453 6
 569 020a 002B     		cmp	r3, #0
 570 020c 41D0     		beq	.L39
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the LSI State */
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 571              		.loc 1 459 25
 572 020e 7B68     		ldr	r3, [r7, #4]
 573 0210 5B69     		ldr	r3, [r3, #20]
 574              		.loc 1 459 7
 575 0212 002B     		cmp	r3, #0
 576 0214 1CD0     		beq	.L40
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 577              		.loc 1 462 7
 578 0216 194B     		ldr	r3, .L80
 579 0218 D3F89430 		ldr	r3, [r3, #148]
 580 021c 174A     		ldr	r2, .L80
 581 021e 43F00103 		orr	r3, r3, #1
 582 0222 C2F89430 		str	r3, [r2, #148]
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 583              		.loc 1 465 19
 584 0226 FFF7FEFF 		bl	HAL_GetTick
 585 022a 3861     		str	r0, [r7, #16]
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 586              		.loc 1 468 13
 587 022c 08E0     		b	.L41
 588              	.L42:
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 589              		.loc 1 470 14
 590 022e FFF7FEFF 		bl	HAL_GetTick
 591 0232 0246     		mov	r2, r0
 592              		.loc 1 470 28
 593 0234 3B69     		ldr	r3, [r7, #16]
 594 0236 D31A     		subs	r3, r2, r3
 595              		.loc 1 470 12
 596 0238 022B     		cmp	r3, #2
 597 023a 01D9     		bls	.L41
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 598              		.loc 1 472 18
ARM GAS  /tmp/ccyQqkg8.s 			page 20


 599 023c 0323     		movs	r3, #3
 600 023e E7E1     		b	.L14
 601              	.L41:
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 602              		.loc 1 468 14
 603 0240 0E4B     		ldr	r3, .L80
 604 0242 D3F89430 		ldr	r3, [r3, #148]
 605 0246 03F00203 		and	r3, r3, #2
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 606              		.loc 1 468 13
 607 024a 002B     		cmp	r3, #0
 608 024c EFD0     		beq	.L42
 609 024e 20E0     		b	.L39
 610              	.L40:
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 611              		.loc 1 479 7
 612 0250 0A4B     		ldr	r3, .L80
 613 0252 D3F89430 		ldr	r3, [r3, #148]
 614 0256 094A     		ldr	r2, .L80
 615 0258 23F00103 		bic	r3, r3, #1
 616 025c C2F89430 		str	r3, [r2, #148]
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 617              		.loc 1 482 19
 618 0260 FFF7FEFF 		bl	HAL_GetTick
 619 0264 3861     		str	r0, [r7, #16]
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 620              		.loc 1 485 12
 621 0266 0DE0     		b	.L43
 622              	.L44:
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 623              		.loc 1 487 13
 624 0268 FFF7FEFF 		bl	HAL_GetTick
 625 026c 0246     		mov	r2, r0
 626              		.loc 1 487 27
 627 026e 3B69     		ldr	r3, [r7, #16]
 628 0270 D31A     		subs	r3, r2, r3
 629              		.loc 1 487 11
 630 0272 022B     		cmp	r3, #2
 631 0274 06D9     		bls	.L43
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 632              		.loc 1 489 18
 633 0276 0323     		movs	r3, #3
 634 0278 CAE1     		b	.L14
 635              	.L81:
 636 027a 00BF     		.align	2
ARM GAS  /tmp/ccyQqkg8.s 			page 21


 637              	.L80:
 638 027c 00100240 		.word	1073876992
 639 0280 00000000 		.word	uwTickPrio
 640              	.L43:
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 641              		.loc 1 485 13
 642 0284 8C4B     		ldr	r3, .L82
 643 0286 D3F89430 		ldr	r3, [r3, #148]
 644 028a 03F00203 		and	r3, r3, #2
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 645              		.loc 1 485 12
 646 028e 002B     		cmp	r3, #0
 647 0290 EAD1     		bne	.L44
 648              	.L39:
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 649              		.loc 1 495 26
 650 0292 7B68     		ldr	r3, [r7, #4]
 651 0294 1B68     		ldr	r3, [r3]
 652              		.loc 1 495 44
 653 0296 03F00403 		and	r3, r3, #4
 654              		.loc 1 495 6
 655 029a 002B     		cmp	r3, #0
 656 029c 00F0A680 		beq	.L45
 657              	.LBB2:
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 658              		.loc 1 497 22
 659 02a0 0023     		movs	r3, #0
 660 02a2 FB77     		strb	r3, [r7, #31]
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain if necessary */
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 661              		.loc 1 504 9
 662 02a4 844B     		ldr	r3, .L82
 663 02a6 9B6D     		ldr	r3, [r3, #88]
 664 02a8 03F08053 		and	r3, r3, #268435456
 665              		.loc 1 504 41
 666 02ac 002B     		cmp	r3, #0
 667 02ae 01D1     		bne	.L46
 668              		.loc 1 504 41 is_stmt 0 discriminator 1
 669 02b0 0123     		movs	r3, #1
 670 02b2 00E0     		b	.L47
 671              	.L46:
 672              		.loc 1 504 41 discriminator 2
 673 02b4 0023     		movs	r3, #0
 674              	.L47:
 675              		.loc 1 504 8 is_stmt 1 discriminator 4
 676 02b6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccyQqkg8.s 			page 22


 677 02b8 0DD0     		beq	.L48
 678              	.LBB3:
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 679              		.loc 1 506 7
 680 02ba 7F4B     		ldr	r3, .L82
 681 02bc 9B6D     		ldr	r3, [r3, #88]
 682 02be 7E4A     		ldr	r2, .L82
 683 02c0 43F08053 		orr	r3, r3, #268435456
 684 02c4 9365     		str	r3, [r2, #88]
 685 02c6 7C4B     		ldr	r3, .L82
 686 02c8 9B6D     		ldr	r3, [r3, #88]
 687 02ca 03F08053 		and	r3, r3, #268435456
 688 02ce FB60     		str	r3, [r7, #12]
 689 02d0 FB68     		ldr	r3, [r7, #12]
 690              	.LBE3:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pwrclkchanged = SET;
 691              		.loc 1 507 21
 692 02d2 0123     		movs	r3, #1
 693 02d4 FB77     		strb	r3, [r7, #31]
 694              	.L48:
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 695              		.loc 1 510 9
 696 02d6 794B     		ldr	r3, .L82+4
 697 02d8 1B68     		ldr	r3, [r3]
 698 02da 03F48073 		and	r3, r3, #256
 699              		.loc 1 510 8
 700 02de 002B     		cmp	r3, #0
 701 02e0 18D1     		bne	.L49
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 702              		.loc 1 513 7
 703 02e2 764B     		ldr	r3, .L82+4
 704 02e4 1B68     		ldr	r3, [r3]
 705 02e6 754A     		ldr	r2, .L82+4
 706 02e8 43F48073 		orr	r3, r3, #256
 707 02ec 1360     		str	r3, [r2]
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 708              		.loc 1 516 19
 709 02ee FFF7FEFF 		bl	HAL_GetTick
 710 02f2 3861     		str	r0, [r7, #16]
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 711              		.loc 1 518 13
 712 02f4 08E0     		b	.L50
 713              	.L51:
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 714              		.loc 1 520 14
 715 02f6 FFF7FEFF 		bl	HAL_GetTick
 716 02fa 0246     		mov	r2, r0
 717              		.loc 1 520 28
ARM GAS  /tmp/ccyQqkg8.s 			page 23


 718 02fc 3B69     		ldr	r3, [r7, #16]
 719 02fe D31A     		subs	r3, r2, r3
 720              		.loc 1 520 12
 721 0300 022B     		cmp	r3, #2
 722 0302 01D9     		bls	.L50
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 723              		.loc 1 522 18
 724 0304 0323     		movs	r3, #3
 725 0306 83E1     		b	.L14
 726              	.L50:
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 727              		.loc 1 518 14
 728 0308 6C4B     		ldr	r3, .L82+4
 729 030a 1B68     		ldr	r3, [r3]
 730 030c 03F48073 		and	r3, r3, #256
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 731              		.loc 1 518 13
 732 0310 002B     		cmp	r3, #0
 733 0312 F0D0     		beq	.L51
 734              	.L49:
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 735              		.loc 1 528 5
 736 0314 7B68     		ldr	r3, [r7, #4]
 737 0316 9B68     		ldr	r3, [r3, #8]
 738 0318 012B     		cmp	r3, #1
 739 031a 08D1     		bne	.L52
 740              		.loc 1 528 5 is_stmt 0 discriminator 1
 741 031c 664B     		ldr	r3, .L82
 742 031e D3F89030 		ldr	r3, [r3, #144]
 743 0322 654A     		ldr	r2, .L82
 744 0324 43F00103 		orr	r3, r3, #1
 745 0328 C2F89030 		str	r3, [r2, #144]
 746 032c 24E0     		b	.L53
 747              	.L52:
 748              		.loc 1 528 5 discriminator 2
 749 032e 7B68     		ldr	r3, [r7, #4]
 750 0330 9B68     		ldr	r3, [r3, #8]
 751 0332 052B     		cmp	r3, #5
 752 0334 10D1     		bne	.L54
 753              		.loc 1 528 5 discriminator 3
 754 0336 604B     		ldr	r3, .L82
 755 0338 D3F89030 		ldr	r3, [r3, #144]
 756 033c 5E4A     		ldr	r2, .L82
 757 033e 43F00403 		orr	r3, r3, #4
 758 0342 C2F89030 		str	r3, [r2, #144]
 759 0346 5C4B     		ldr	r3, .L82
 760 0348 D3F89030 		ldr	r3, [r3, #144]
 761 034c 5A4A     		ldr	r2, .L82
 762 034e 43F00103 		orr	r3, r3, #1
 763 0352 C2F89030 		str	r3, [r2, #144]
 764 0356 0FE0     		b	.L53
ARM GAS  /tmp/ccyQqkg8.s 			page 24


 765              	.L54:
 766              		.loc 1 528 5 discriminator 4
 767 0358 574B     		ldr	r3, .L82
 768 035a D3F89030 		ldr	r3, [r3, #144]
 769 035e 564A     		ldr	r2, .L82
 770 0360 23F00103 		bic	r3, r3, #1
 771 0364 C2F89030 		str	r3, [r2, #144]
 772 0368 534B     		ldr	r3, .L82
 773 036a D3F89030 		ldr	r3, [r3, #144]
 774 036e 524A     		ldr	r2, .L82
 775 0370 23F00403 		bic	r3, r3, #4
 776 0374 C2F89030 		str	r3, [r2, #144]
 777              	.L53:
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the LSE State */
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 778              		.loc 1 531 26 is_stmt 1
 779 0378 7B68     		ldr	r3, [r7, #4]
 780 037a 9B68     		ldr	r3, [r3, #8]
 781              		.loc 1 531 8
 782 037c 002B     		cmp	r3, #0
 783 037e 16D0     		beq	.L55
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 784              		.loc 1 534 19
 785 0380 FFF7FEFF 		bl	HAL_GetTick
 786 0384 3861     		str	r0, [r7, #16]
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 787              		.loc 1 537 13
 788 0386 0AE0     		b	.L56
 789              	.L57:
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 790              		.loc 1 539 13
 791 0388 FFF7FEFF 		bl	HAL_GetTick
 792 038c 0246     		mov	r2, r0
 793              		.loc 1 539 27
 794 038e 3B69     		ldr	r3, [r7, #16]
 795 0390 D31A     		subs	r3, r2, r3
 796              		.loc 1 539 11
 797 0392 41F28832 		movw	r2, #5000
 798 0396 9342     		cmp	r3, r2
 799 0398 01D9     		bls	.L56
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 800              		.loc 1 541 18
 801 039a 0323     		movs	r3, #3
 802 039c 38E1     		b	.L14
 803              	.L56:
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 804              		.loc 1 537 14
 805 039e 464B     		ldr	r3, .L82
 806 03a0 D3F89030 		ldr	r3, [r3, #144]
 807 03a4 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccyQqkg8.s 			page 25


 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 808              		.loc 1 537 13
 809 03a8 002B     		cmp	r3, #0
 810 03aa EDD0     		beq	.L57
 811 03ac 15E0     		b	.L58
 812              	.L55:
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 813              		.loc 1 548 19
 814 03ae FFF7FEFF 		bl	HAL_GetTick
 815 03b2 3861     		str	r0, [r7, #16]
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 816              		.loc 1 551 13
 817 03b4 0AE0     		b	.L59
 818              	.L60:
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 819              		.loc 1 553 13
 820 03b6 FFF7FEFF 		bl	HAL_GetTick
 821 03ba 0246     		mov	r2, r0
 822              		.loc 1 553 27
 823 03bc 3B69     		ldr	r3, [r7, #16]
 824 03be D31A     		subs	r3, r2, r3
 825              		.loc 1 553 11
 826 03c0 41F28832 		movw	r2, #5000
 827 03c4 9342     		cmp	r3, r2
 828 03c6 01D9     		bls	.L59
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 829              		.loc 1 555 18
 830 03c8 0323     		movs	r3, #3
 831 03ca 21E1     		b	.L14
 832              	.L59:
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 833              		.loc 1 551 14
 834 03cc 3A4B     		ldr	r3, .L82
 835 03ce D3F89030 		ldr	r3, [r3, #144]
 836 03d2 03F00203 		and	r3, r3, #2
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 837              		.loc 1 551 13
 838 03d6 002B     		cmp	r3, #0
 839 03d8 EDD1     		bne	.L60
 840              	.L58:
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 841              		.loc 1 561 8
ARM GAS  /tmp/ccyQqkg8.s 			page 26


 842 03da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 843 03dc 012B     		cmp	r3, #1
 844 03de 05D1     		bne	.L45
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 845              		.loc 1 563 7
 846 03e0 354B     		ldr	r3, .L82
 847 03e2 9B6D     		ldr	r3, [r3, #88]
 848 03e4 344A     		ldr	r2, .L82
 849 03e6 23F08053 		bic	r3, r3, #268435456
 850 03ea 9365     		str	r3, [r2, #88]
 851              	.L45:
 852              	.LBE2:
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 853              		.loc 1 568 25
 854 03ec 7B68     		ldr	r3, [r7, #4]
 855 03ee 1B68     		ldr	r3, [r3]
 856              		.loc 1 568 43
 857 03f0 03F02003 		and	r3, r3, #32
 858              		.loc 1 568 5
 859 03f4 002B     		cmp	r3, #0
 860 03f6 3CD0     		beq	.L61
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the HSI48 State */
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 861              		.loc 1 574 25
 862 03f8 7B68     		ldr	r3, [r7, #4]
 863 03fa 9B69     		ldr	r3, [r3, #24]
 864              		.loc 1 574 7
 865 03fc 002B     		cmp	r3, #0
 866 03fe 1CD0     		beq	.L62
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 867              		.loc 1 577 7
 868 0400 2D4B     		ldr	r3, .L82
 869 0402 D3F89830 		ldr	r3, [r3, #152]
 870 0406 2C4A     		ldr	r2, .L82
 871 0408 43F00103 		orr	r3, r3, #1
 872 040c C2F89830 		str	r3, [r2, #152]
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 873              		.loc 1 580 19
 874 0410 FFF7FEFF 		bl	HAL_GetTick
 875 0414 3861     		str	r0, [r7, #16]
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 876              		.loc 1 583 12
ARM GAS  /tmp/ccyQqkg8.s 			page 27


 877 0416 08E0     		b	.L63
 878              	.L64:
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 879              		.loc 1 585 13
 880 0418 FFF7FEFF 		bl	HAL_GetTick
 881 041c 0246     		mov	r2, r0
 882              		.loc 1 585 27
 883 041e 3B69     		ldr	r3, [r7, #16]
 884 0420 D31A     		subs	r3, r2, r3
 885              		.loc 1 585 11
 886 0422 022B     		cmp	r3, #2
 887 0424 01D9     		bls	.L63
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 888              		.loc 1 587 18
 889 0426 0323     		movs	r3, #3
 890 0428 F2E0     		b	.L14
 891              	.L63:
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 892              		.loc 1 583 13
 893 042a 234B     		ldr	r3, .L82
 894 042c D3F89830 		ldr	r3, [r3, #152]
 895 0430 03F00203 		and	r3, r3, #2
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 896              		.loc 1 583 12
 897 0434 002B     		cmp	r3, #0
 898 0436 EFD0     		beq	.L64
 899 0438 1BE0     		b	.L61
 900              	.L62:
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 901              		.loc 1 594 7
 902 043a 1F4B     		ldr	r3, .L82
 903 043c D3F89830 		ldr	r3, [r3, #152]
 904 0440 1D4A     		ldr	r2, .L82
 905 0442 23F00103 		bic	r3, r3, #1
 906 0446 C2F89830 		str	r3, [r2, #152]
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 907              		.loc 1 597 19
 908 044a FFF7FEFF 		bl	HAL_GetTick
 909 044e 3861     		str	r0, [r7, #16]
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 910              		.loc 1 600 12
 911 0450 08E0     		b	.L65
 912              	.L66:
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
ARM GAS  /tmp/ccyQqkg8.s 			page 28


 913              		.loc 1 602 13
 914 0452 FFF7FEFF 		bl	HAL_GetTick
 915 0456 0246     		mov	r2, r0
 916              		.loc 1 602 27
 917 0458 3B69     		ldr	r3, [r7, #16]
 918 045a D31A     		subs	r3, r2, r3
 919              		.loc 1 602 11
 920 045c 022B     		cmp	r3, #2
 921 045e 01D9     		bls	.L65
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 922              		.loc 1 604 18
 923 0460 0323     		movs	r3, #3
 924 0462 D5E0     		b	.L14
 925              	.L65:
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 926              		.loc 1 600 13
 927 0464 144B     		ldr	r3, .L82
 928 0466 D3F89830 		ldr	r3, [r3, #152]
 929 046a 03F00203 		and	r3, r3, #2
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 930              		.loc 1 600 12
 931 046e 002B     		cmp	r3, #0
 932 0470 EFD1     		bne	.L66
 933              	.L61:
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 934              		.loc 1 614 29
 935 0472 7B68     		ldr	r3, [r7, #4]
 936 0474 DB69     		ldr	r3, [r3, #28]
 937              		.loc 1 614 6
 938 0476 002B     		cmp	r3, #0
 939 0478 00F0C980 		beq	.L67
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 940              		.loc 1 617 9
 941 047c 0E4B     		ldr	r3, .L82
 942 047e 9B68     		ldr	r3, [r3, #8]
 943 0480 03F00C03 		and	r3, r3, #12
 944              		.loc 1 617 8
 945 0484 0C2B     		cmp	r3, #12
 946 0486 00F08380 		beq	.L68
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 947              		.loc 1 619 33
 948 048a 7B68     		ldr	r3, [r7, #4]
 949 048c DB69     		ldr	r3, [r3, #28]
 950              		.loc 1 619 10
ARM GAS  /tmp/ccyQqkg8.s 			page 29


 951 048e 022B     		cmp	r3, #2
 952 0490 5ED1     		bne	.L69
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the parameters */
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the main PLL. */
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 953              		.loc 1 630 9
 954 0492 094B     		ldr	r3, .L82
 955 0494 1B68     		ldr	r3, [r3]
 956 0496 084A     		ldr	r2, .L82
 957 0498 23F08073 		bic	r3, r3, #16777216
 958 049c 1360     		str	r3, [r2]
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 959              		.loc 1 633 21
 960 049e FFF7FEFF 		bl	HAL_GetTick
 961 04a2 3861     		str	r0, [r7, #16]
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 962              		.loc 1 636 15
 963 04a4 0CE0     		b	.L70
 964              	.L71:
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 965              		.loc 1 638 16
 966 04a6 FFF7FEFF 		bl	HAL_GetTick
 967 04aa 0246     		mov	r2, r0
 968              		.loc 1 638 30
 969 04ac 3B69     		ldr	r3, [r7, #16]
 970 04ae D31A     		subs	r3, r2, r3
 971              		.loc 1 638 14
 972 04b0 022B     		cmp	r3, #2
 973 04b2 05D9     		bls	.L70
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 974              		.loc 1 640 20
 975 04b4 0323     		movs	r3, #3
 976 04b6 ABE0     		b	.L14
 977              	.L83:
 978              		.align	2
 979              	.L82:
 980 04b8 00100240 		.word	1073876992
 981 04bc 00700040 		.word	1073770496
 982              	.L70:
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 983              		.loc 1 636 16
 984 04c0 554B     		ldr	r3, .L84
 985 04c2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccyQqkg8.s 			page 30


 986 04c4 03F00073 		and	r3, r3, #33554432
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 987              		.loc 1 636 15
 988 04c8 002B     		cmp	r3, #0
 989 04ca ECD1     		bne	.L71
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 990              		.loc 1 645 9
 991 04cc 524B     		ldr	r3, .L84
 992 04ce DA68     		ldr	r2, [r3, #12]
 993 04d0 524B     		ldr	r3, .L84+4
 994 04d2 1340     		ands	r3, r3, r2
 995 04d4 7A68     		ldr	r2, [r7, #4]
 996 04d6 116A     		ldr	r1, [r2, #32]
 997 04d8 7A68     		ldr	r2, [r7, #4]
 998 04da 526A     		ldr	r2, [r2, #36]
 999 04dc 013A     		subs	r2, r2, #1
 1000 04de 1201     		lsls	r2, r2, #4
 1001 04e0 1143     		orrs	r1, r1, r2
 1002 04e2 7A68     		ldr	r2, [r7, #4]
 1003 04e4 926A     		ldr	r2, [r2, #40]
 1004 04e6 1202     		lsls	r2, r2, #8
 1005 04e8 1143     		orrs	r1, r1, r2
 1006 04ea 7A68     		ldr	r2, [r7, #4]
 1007 04ec 126B     		ldr	r2, [r2, #48]
 1008 04ee 5208     		lsrs	r2, r2, #1
 1009 04f0 013A     		subs	r2, r2, #1
 1010 04f2 5205     		lsls	r2, r2, #21
 1011 04f4 1143     		orrs	r1, r1, r2
 1012 04f6 7A68     		ldr	r2, [r7, #4]
 1013 04f8 526B     		ldr	r2, [r2, #52]
 1014 04fa 5208     		lsrs	r2, r2, #1
 1015 04fc 013A     		subs	r2, r2, #1
 1016 04fe 5206     		lsls	r2, r2, #25
 1017 0500 1143     		orrs	r1, r1, r2
 1018 0502 7A68     		ldr	r2, [r7, #4]
 1019 0504 D26A     		ldr	r2, [r2, #44]
 1020 0506 D206     		lsls	r2, r2, #27
 1021 0508 0A43     		orrs	r2, r2, r1
 1022 050a 4349     		ldr	r1, .L84
 1023 050c 1343     		orrs	r3, r3, r2
 1024 050e CB60     		str	r3, [r1, #12]
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable the main PLL. */
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1025              		.loc 1 653 9
 1026 0510 414B     		ldr	r3, .L84
 1027 0512 1B68     		ldr	r3, [r3]
 1028 0514 404A     		ldr	r2, .L84
ARM GAS  /tmp/ccyQqkg8.s 			page 31


 1029 0516 43F08073 		orr	r3, r3, #16777216
 1030 051a 1360     		str	r3, [r2]
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1031              		.loc 1 656 10
 1032 051c 3E4B     		ldr	r3, .L84
 1033 051e DB68     		ldr	r3, [r3, #12]
 1034 0520 3D4A     		ldr	r2, .L84
 1035 0522 43F08073 		orr	r3, r3, #16777216
 1036 0526 D360     		str	r3, [r2, #12]
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1037              		.loc 1 659 21
 1038 0528 FFF7FEFF 		bl	HAL_GetTick
 1039 052c 3861     		str	r0, [r7, #16]
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1040              		.loc 1 662 15
 1041 052e 08E0     		b	.L72
 1042              	.L73:
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1043              		.loc 1 664 16
 1044 0530 FFF7FEFF 		bl	HAL_GetTick
 1045 0534 0246     		mov	r2, r0
 1046              		.loc 1 664 30
 1047 0536 3B69     		ldr	r3, [r7, #16]
 1048 0538 D31A     		subs	r3, r2, r3
 1049              		.loc 1 664 14
 1050 053a 022B     		cmp	r3, #2
 1051 053c 01D9     		bls	.L72
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1052              		.loc 1 666 20
 1053 053e 0323     		movs	r3, #3
 1054 0540 66E0     		b	.L14
 1055              	.L72:
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1056              		.loc 1 662 16
 1057 0542 354B     		ldr	r3, .L84
 1058 0544 1B68     		ldr	r3, [r3]
 1059 0546 03F00073 		and	r3, r3, #33554432
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1060              		.loc 1 662 15
 1061 054a 002B     		cmp	r3, #0
 1062 054c F0D0     		beq	.L73
 1063 054e 5EE0     		b	.L67
 1064              	.L69:
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the main PLL. */
ARM GAS  /tmp/ccyQqkg8.s 			page 32


 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1065              		.loc 1 673 9
 1066 0550 314B     		ldr	r3, .L84
 1067 0552 1B68     		ldr	r3, [r3]
 1068 0554 304A     		ldr	r2, .L84
 1069 0556 23F08073 		bic	r3, r3, #16777216
 1070 055a 1360     		str	r3, [r2]
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1071              		.loc 1 676 21
 1072 055c FFF7FEFF 		bl	HAL_GetTick
 1073 0560 3861     		str	r0, [r7, #16]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1074              		.loc 1 679 15
 1075 0562 08E0     		b	.L74
 1076              	.L75:
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1077              		.loc 1 681 16
 1078 0564 FFF7FEFF 		bl	HAL_GetTick
 1079 0568 0246     		mov	r2, r0
 1080              		.loc 1 681 30
 1081 056a 3B69     		ldr	r3, [r7, #16]
 1082 056c D31A     		subs	r3, r2, r3
 1083              		.loc 1 681 14
 1084 056e 022B     		cmp	r3, #2
 1085 0570 01D9     		bls	.L74
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1086              		.loc 1 683 20
 1087 0572 0323     		movs	r3, #3
 1088 0574 4CE0     		b	.L14
 1089              	.L74:
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1090              		.loc 1 679 16
 1091 0576 284B     		ldr	r3, .L84
 1092 0578 1B68     		ldr	r3, [r3]
 1093 057a 03F00073 		and	r3, r3, #33554432
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1094              		.loc 1 679 15
 1095 057e 002B     		cmp	r3, #0
 1096 0580 F0D1     		bne	.L75
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Unselect PLL clock source and disable outputs to save power */
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_ADCCLK);
 1097              		.loc 1 688 22
 1098 0582 254B     		ldr	r3, .L84
 1099 0584 DA68     		ldr	r2, [r3, #12]
 1100 0586 2449     		ldr	r1, .L84
 1101 0588 254B     		ldr	r3, .L84+8
 1102 058a 1340     		ands	r3, r3, r2
 1103 058c CB60     		str	r3, [r1, #12]
ARM GAS  /tmp/ccyQqkg8.s 			page 33


 1104 058e 3EE0     		b	.L67
 1105              	.L68:
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1106              		.loc 1 694 33
 1107 0590 7B68     		ldr	r3, [r7, #4]
 1108 0592 DB69     		ldr	r3, [r3, #28]
 1109              		.loc 1 694 9
 1110 0594 012B     		cmp	r3, #1
 1111 0596 01D1     		bne	.L76
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1112              		.loc 1 696 16
 1113 0598 0123     		movs	r3, #1
 1114 059a 39E0     		b	.L14
 1115              	.L76:
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Do not return HAL_ERROR if request repeats the current configuration */
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       temp_pllckcfg = RCC->PLLCFGR;
 1116              		.loc 1 701 26
 1117 059c 1E4B     		ldr	r3, .L84
 1118              		.loc 1 701 21
 1119 059e DB68     		ldr	r3, [r3, #12]
 1120 05a0 7B61     		str	r3, [r7, #20]
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1121              		.loc 1 702 11
 1122 05a2 7B69     		ldr	r3, [r7, #20]
 1123 05a4 03F00302 		and	r2, r3, #3
 1124              		.loc 1 702 80
 1125 05a8 7B68     		ldr	r3, [r7, #4]
 1126 05aa 1B6A     		ldr	r3, [r3, #32]
 1127              		.loc 1 702 9
 1128 05ac 9A42     		cmp	r2, r3
 1129 05ae 2CD1     		bne	.L77
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != (((RCC_OscInitStruct->PLL.PLLM) - 1U) << RCC
 1130              		.loc 1 703 11 discriminator 1
 1131 05b0 7B69     		ldr	r3, [r7, #20]
 1132 05b2 03F0F002 		and	r2, r3, #240
 1133              		.loc 1 703 81 discriminator 1
 1134 05b6 7B68     		ldr	r3, [r7, #4]
 1135 05b8 5B6A     		ldr	r3, [r3, #36]
 1136              		.loc 1 703 88 discriminator 1
 1137 05ba 013B     		subs	r3, r3, #1
 1138              		.loc 1 703 94 discriminator 1
 1139 05bc 1B01     		lsls	r3, r3, #4
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1140              		.loc 1 702 92 discriminator 1
 1141 05be 9A42     		cmp	r2, r3
 1142 05c0 23D1     		bne	.L77
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != ((RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFG
 1143              		.loc 1 704 11
ARM GAS  /tmp/ccyQqkg8.s 			page 34


 1144 05c2 7B69     		ldr	r3, [r7, #20]
 1145 05c4 03F4FE42 		and	r2, r3, #32512
 1146              		.loc 1 704 80
 1147 05c8 7B68     		ldr	r3, [r7, #4]
 1148 05ca 9B6A     		ldr	r3, [r3, #40]
 1149              		.loc 1 704 87
 1150 05cc 1B02     		lsls	r3, r3, #8
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != (((RCC_OscInitStruct->PLL.PLLM) - 1U) << RCC
 1151              		.loc 1 703 120
 1152 05ce 9A42     		cmp	r2, r3
 1153 05d0 1BD1     		bne	.L77
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLPDIV) != ((RCC_OscInitStruct->PLL.PLLP) << RCC_PLL
 1154              		.loc 1 705 11
 1155 05d2 7B69     		ldr	r3, [r7, #20]
 1156 05d4 03F07842 		and	r2, r3, #-134217728
 1157              		.loc 1 705 83
 1158 05d8 7B68     		ldr	r3, [r7, #4]
 1159 05da DB6A     		ldr	r3, [r3, #44]
 1160              		.loc 1 705 90
 1161 05dc DB06     		lsls	r3, r3, #27
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != ((RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFG
 1162              		.loc 1 704 113
 1163 05de 9A42     		cmp	r2, r3
 1164 05e0 13D1     		bne	.L77
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1165              		.loc 1 706 11
 1166 05e2 7B69     		ldr	r3, [r7, #20]
 1167 05e4 03F4C002 		and	r2, r3, #6291456
 1168              		.loc 1 706 82
 1169 05e8 7B68     		ldr	r3, [r7, #4]
 1170 05ea 1B6B     		ldr	r3, [r3, #48]
 1171              		.loc 1 706 89
 1172 05ec 5B08     		lsrs	r3, r3, #1
 1173              		.loc 1 706 96
 1174 05ee 013B     		subs	r3, r3, #1
 1175              		.loc 1 706 102
 1176 05f0 5B05     		lsls	r3, r3, #21
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLPDIV) != ((RCC_OscInitStruct->PLL.PLLP) << RCC_PLL
 1177              		.loc 1 705 119
 1178 05f2 9A42     		cmp	r2, r3
 1179 05f4 09D1     		bne	.L77
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1180              		.loc 1 707 11
 1181 05f6 7B69     		ldr	r3, [r7, #20]
 1182 05f8 03F0C062 		and	r2, r3, #100663296
 1183              		.loc 1 707 82
 1184 05fc 7B68     		ldr	r3, [r7, #4]
 1185 05fe 5B6B     		ldr	r3, [r3, #52]
 1186              		.loc 1 707 89
 1187 0600 5B08     		lsrs	r3, r3, #1
 1188              		.loc 1 707 96
 1189 0602 013B     		subs	r3, r3, #1
 1190              		.loc 1 707 102
 1191 0604 5B06     		lsls	r3, r3, #25
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1192              		.loc 1 706 128
 1193 0606 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccyQqkg8.s 			page 35


 1194 0608 01D0     		beq	.L67
 1195              	.L77:
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1196              		.loc 1 709 16
 1197 060a 0123     		movs	r3, #1
 1198 060c 00E0     		b	.L14
 1199              	.L67:
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_OK;
 1200              		.loc 1 715 10
 1201 060e 0023     		movs	r3, #0
 1202              	.L14:
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1203              		.loc 1 716 1
 1204 0610 1846     		mov	r0, r3
 1205 0612 2037     		adds	r7, r7, #32
 1206              	.LCFI8:
 1207              		.cfi_def_cfa_offset 8
 1208 0614 BD46     		mov	sp, r7
 1209              	.LCFI9:
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 0616 80BD     		pop	{r7, pc}
 1213              	.L85:
 1214              		.align	2
 1215              	.L84:
 1216 0618 00100240 		.word	1073876992
 1217 061c 0C809F01 		.word	27230220
 1218 0620 FCFFEEFE 		.word	-17891332
 1219              		.cfi_endproc
 1220              	.LFE133:
 1222              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1223              		.align	1
 1224              		.global	HAL_RCC_ClockConfig
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu fpv4-sp-d16
 1230              	HAL_RCC_ClockConfig:
 1231              	.LFB134:
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB buses clocks according to the specified
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
ARM GAS  /tmp/ccyQqkg8.s 			page 36


 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The HSI is used by default as system clock source after
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the HSI frequency is set to its default value 16 MHz.
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         occur when the clock source is ready.
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         currently used as system clock source.
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1232              		.loc 1 767 1
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 24
 1235              		@ frame_needed = 1, uses_anonymous_args = 0
 1236 0000 80B5     		push	{r7, lr}
 1237              	.LCFI10:
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 86B0     		sub	sp, sp, #24
 1242              	.LCFI11:
 1243              		.cfi_def_cfa_offset 32
 1244 0004 00AF     		add	r7, sp, #0
 1245              	.LCFI12:
 1246              		.cfi_def_cfa_register 7
 1247 0006 7860     		str	r0, [r7, #4]
 1248 0008 3960     		str	r1, [r7]
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccyQqkg8.s 			page 37


 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllfreq;
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
 1249              		.loc 1 770 12
 1250 000a 0023     		movs	r3, #0
 1251 000c 7B61     		str	r3, [r7, #20]
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check Null pointer */
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 1252              		.loc 1 773 6
 1253 000e 7B68     		ldr	r3, [r7, #4]
 1254 0010 002B     		cmp	r3, #0
 1255 0012 01D1     		bne	.L87
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 1256              		.loc 1 775 12
 1257 0014 0123     		movs	r3, #1
 1258 0016 1EE1     		b	.L88
 1259              	.L87:
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 1260              		.loc 1 787 18
 1261 0018 914B     		ldr	r3, .L108
 1262 001a 1B68     		ldr	r3, [r3]
 1263 001c 03F00F03 		and	r3, r3, #15
 1264              		.loc 1 787 6
 1265 0020 3A68     		ldr	r2, [r7]
 1266 0022 9A42     		cmp	r2, r3
 1267 0024 10D9     		bls	.L89
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1268              		.loc 1 790 5
 1269 0026 8E4B     		ldr	r3, .L108
 1270 0028 1B68     		ldr	r3, [r3]
 1271 002a 23F00F02 		bic	r2, r3, #15
 1272 002e 8C49     		ldr	r1, .L108
 1273 0030 3B68     		ldr	r3, [r7]
 1274 0032 1343     		orrs	r3, r3, r2
 1275 0034 0B60     		str	r3, [r1]
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1276              		.loc 1 794 9
 1277 0036 8A4B     		ldr	r3, .L108
 1278 0038 1B68     		ldr	r3, [r3]
 1279 003a 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccyQqkg8.s 			page 38


 1280              		.loc 1 794 8
 1281 003e 3A68     		ldr	r2, [r7]
 1282 0040 9A42     		cmp	r2, r3
 1283 0042 01D0     		beq	.L89
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_ERROR;
 1284              		.loc 1 796 14
 1285 0044 0123     		movs	r3, #1
 1286 0046 06E1     		b	.L88
 1287              	.L89:
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1288              		.loc 1 801 25
 1289 0048 7B68     		ldr	r3, [r7, #4]
 1290 004a 1B68     		ldr	r3, [r3]
 1291              		.loc 1 801 38
 1292 004c 03F00103 		and	r3, r3, #1
 1293              		.loc 1 801 5
 1294 0050 002B     		cmp	r3, #0
 1295 0052 73D0     		beq	.L90
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1296              		.loc 1 806 26
 1297 0054 7B68     		ldr	r3, [r7, #4]
 1298 0056 5B68     		ldr	r3, [r3, #4]
 1299              		.loc 1 806 8
 1300 0058 032B     		cmp	r3, #3
 1301 005a 29D1     		bne	.L91
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1302              		.loc 1 809 11
 1303 005c 814B     		ldr	r3, .L108+4
 1304 005e 1B68     		ldr	r3, [r3]
 1305 0060 03F00073 		and	r3, r3, #33554432
 1306              		.loc 1 809 10
 1307 0064 002B     		cmp	r3, #0
 1308 0066 01D1     		bne	.L92
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1309              		.loc 1 811 16
 1310 0068 0123     		movs	r3, #1
 1311 006a F4E0     		b	.L88
 1312              	.L92:
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllfreq = RCC_GetSysClockFreqFromPLLSource();
 1313              		.loc 1 815 17
 1314 006c FFF7FEFF 		bl	RCC_GetSysClockFreqFromPLLSource
 1315 0070 3861     		str	r0, [r7, #16]
ARM GAS  /tmp/ccyQqkg8.s 			page 39


 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
 1316              		.loc 1 818 9
 1317 0072 3B69     		ldr	r3, [r7, #16]
 1318 0074 7C4A     		ldr	r2, .L108+8
 1319 0076 9342     		cmp	r3, r2
 1320 0078 3FD9     		bls	.L93
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if (((READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)) ||
 1321              		.loc 1 820 15
 1322 007a 7A4B     		ldr	r3, .L108+4
 1323 007c 9B68     		ldr	r3, [r3, #8]
 1324 007e 03F0F003 		and	r3, r3, #240
 1325              		.loc 1 820 12
 1326 0082 002B     		cmp	r3, #0
 1327 0084 09D0     		beq	.L94
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1328              		.loc 1 821 35 discriminator 1
 1329 0086 7B68     		ldr	r3, [r7, #4]
 1330 0088 1B68     		ldr	r3, [r3]
 1331              		.loc 1 821 48 discriminator 1
 1332 008a 03F00203 		and	r3, r3, #2
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1333              		.loc 1 820 71 discriminator 1
 1334 008e 002B     		cmp	r3, #0
 1335 0090 33D0     		beq	.L93
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****               (RCC_ClkInitStruct->AHBCLKDivider == RCC_SYSCLK_DIV1))))
 1336              		.loc 1 822 33
 1337 0092 7B68     		ldr	r3, [r7, #4]
 1338 0094 9B68     		ldr	r3, [r3, #8]
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1339              		.loc 1 821 93
 1340 0096 002B     		cmp	r3, #0
 1341 0098 2FD1     		bne	.L93
 1342              	.L94:
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 1343              		.loc 1 824 11
 1344 009a 724B     		ldr	r3, .L108+4
 1345 009c 9B68     		ldr	r3, [r3, #8]
 1346 009e 23F0F003 		bic	r3, r3, #240
 1347 00a2 704A     		ldr	r2, .L108+4
 1348 00a4 43F08003 		orr	r3, r3, #128
 1349 00a8 9360     		str	r3, [r2, #8]
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
 1350              		.loc 1 825 16
 1351 00aa 8023     		movs	r3, #128
 1352 00ac 7B61     		str	r3, [r7, #20]
 1353 00ae 24E0     		b	.L93
 1354              	.L91:
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
ARM GAS  /tmp/ccyQqkg8.s 			page 40


 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1355              		.loc 1 832 28
 1356 00b0 7B68     		ldr	r3, [r7, #4]
 1357 00b2 5B68     		ldr	r3, [r3, #4]
 1358              		.loc 1 832 10
 1359 00b4 022B     		cmp	r3, #2
 1360 00b6 07D1     		bne	.L95
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the HSE ready flag */
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 1361              		.loc 1 835 12
 1362 00b8 6A4B     		ldr	r3, .L108+4
 1363 00ba 1B68     		ldr	r3, [r3]
 1364 00bc 03F40033 		and	r3, r3, #131072
 1365              		.loc 1 835 11
 1366 00c0 002B     		cmp	r3, #0
 1367 00c2 09D1     		bne	.L96
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 1368              		.loc 1 837 18
 1369 00c4 0123     		movs	r3, #1
 1370 00c6 C6E0     		b	.L88
 1371              	.L95:
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the HSI ready flag */
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 1372              		.loc 1 844 12
 1373 00c8 664B     		ldr	r3, .L108+4
 1374 00ca 1B68     		ldr	r3, [r3]
 1375 00cc 03F48063 		and	r3, r3, #1024
 1376              		.loc 1 844 11
 1377 00d0 002B     		cmp	r3, #0
 1378 00d2 01D1     		bne	.L96
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 1379              		.loc 1 846 18
 1380 00d4 0123     		movs	r3, #1
 1381 00d6 BEE0     		b	.L88
 1382              	.L96:
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllfreq = HAL_RCC_GetSysClockFreq();
 1383              		.loc 1 850 17
 1384 00d8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1385 00dc 3861     		str	r0, [r7, #16]
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
 1386              		.loc 1 853 9
 1387 00de 3B69     		ldr	r3, [r7, #16]
 1388 00e0 614A     		ldr	r2, .L108+8
 1389 00e2 9342     		cmp	r3, r2
ARM GAS  /tmp/ccyQqkg8.s 			page 41


 1390 00e4 09D9     		bls	.L93
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 1391              		.loc 1 855 9
 1392 00e6 5F4B     		ldr	r3, .L108+4
 1393 00e8 9B68     		ldr	r3, [r3, #8]
 1394 00ea 23F0F003 		bic	r3, r3, #240
 1395 00ee 5D4A     		ldr	r2, .L108+4
 1396 00f0 43F08003 		orr	r3, r3, #128
 1397 00f4 9360     		str	r3, [r2, #8]
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
 1398              		.loc 1 856 14
 1399 00f6 8023     		movs	r3, #128
 1400 00f8 7B61     		str	r3, [r7, #20]
 1401              	.L93:
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1402              		.loc 1 861 5
 1403 00fa 5A4B     		ldr	r3, .L108+4
 1404 00fc 9B68     		ldr	r3, [r3, #8]
 1405 00fe 23F00302 		bic	r2, r3, #3
 1406 0102 7B68     		ldr	r3, [r7, #4]
 1407 0104 5B68     		ldr	r3, [r3, #4]
 1408 0106 5749     		ldr	r1, .L108+4
 1409 0108 1343     		orrs	r3, r3, r2
 1410 010a 8B60     		str	r3, [r1, #8]
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Get Start Tick*/
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1411              		.loc 1 864 17
 1412 010c FFF7FEFF 		bl	HAL_GetTick
 1413 0110 F860     		str	r0, [r7, #12]
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1414              		.loc 1 866 11
 1415 0112 0AE0     		b	.L97
 1416              	.L98:
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1417              		.loc 1 868 12
 1418 0114 FFF7FEFF 		bl	HAL_GetTick
 1419 0118 0246     		mov	r2, r0
 1420              		.loc 1 868 26
 1421 011a FB68     		ldr	r3, [r7, #12]
 1422 011c D31A     		subs	r3, r2, r3
 1423              		.loc 1 868 10
 1424 011e 41F28832 		movw	r2, #5000
 1425 0122 9342     		cmp	r3, r2
 1426 0124 01D9     		bls	.L97
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1427              		.loc 1 870 16
 1428 0126 0323     		movs	r3, #3
 1429 0128 95E0     		b	.L88
ARM GAS  /tmp/ccyQqkg8.s 			page 42


 1430              	.L97:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1431              		.loc 1 866 12
 1432 012a 4E4B     		ldr	r3, .L108+4
 1433 012c 9B68     		ldr	r3, [r3, #8]
 1434 012e 03F00C02 		and	r2, r3, #12
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1435              		.loc 1 866 63
 1436 0132 7B68     		ldr	r3, [r7, #4]
 1437 0134 5B68     		ldr	r3, [r3, #4]
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1438              		.loc 1 866 78
 1439 0136 9B00     		lsls	r3, r3, #2
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1440              		.loc 1 866 11
 1441 0138 9A42     		cmp	r2, r3
 1442 013a EBD1     		bne	.L98
 1443              	.L90:
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1444              		.loc 1 876 26
 1445 013c 7B68     		ldr	r3, [r7, #4]
 1446 013e 1B68     		ldr	r3, [r3]
 1447              		.loc 1 876 39
 1448 0140 03F00203 		and	r3, r3, #2
 1449              		.loc 1 876 6
 1450 0144 002B     		cmp	r3, #0
 1451 0146 23D0     		beq	.L99
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the highest APB divider in order to ensure that we do not go through
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1452              		.loc 1 880 28
 1453 0148 7B68     		ldr	r3, [r7, #4]
 1454 014a 1B68     		ldr	r3, [r3]
 1455              		.loc 1 880 41
 1456 014c 03F00403 		and	r3, r3, #4
 1457              		.loc 1 880 8
 1458 0150 002B     		cmp	r3, #0
 1459 0152 05D0     		beq	.L100
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1460              		.loc 1 882 7
 1461 0154 434B     		ldr	r3, .L108+4
 1462 0156 9B68     		ldr	r3, [r3, #8]
 1463 0158 424A     		ldr	r2, .L108+4
 1464 015a 43F4E063 		orr	r3, r3, #1792
 1465 015e 9360     		str	r3, [r2, #8]
 1466              	.L100:
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1467              		.loc 1 884 28
 1468 0160 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccyQqkg8.s 			page 43


 1469 0162 1B68     		ldr	r3, [r3]
 1470              		.loc 1 884 41
 1471 0164 03F00803 		and	r3, r3, #8
 1472              		.loc 1 884 8
 1473 0168 002B     		cmp	r3, #0
 1474 016a 07D0     		beq	.L101
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, RCC_HCLK_DIV16);
 1475              		.loc 1 886 7
 1476 016c 3D4B     		ldr	r3, .L108+4
 1477 016e 9B68     		ldr	r3, [r3, #8]
 1478 0170 23F47C53 		bic	r3, r3, #16128
 1479 0174 3B4A     		ldr	r2, .L108+4
 1480 0176 43F4E063 		orr	r3, r3, #1792
 1481 017a 9360     		str	r3, [r2, #8]
 1482              	.L101:
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1483              		.loc 1 891 5
 1484 017c 394B     		ldr	r3, .L108+4
 1485 017e 9B68     		ldr	r3, [r3, #8]
 1486 0180 23F0F002 		bic	r2, r3, #240
 1487 0184 7B68     		ldr	r3, [r7, #4]
 1488 0186 9B68     		ldr	r3, [r3, #8]
 1489 0188 3649     		ldr	r1, .L108+4
 1490 018a 1343     		orrs	r3, r3, r2
 1491 018c 8B60     		str	r3, [r1, #8]
 1492 018e 08E0     		b	.L102
 1493              	.L99:
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
 1494              		.loc 1 896 7
 1495 0190 7B69     		ldr	r3, [r7, #20]
 1496 0192 802B     		cmp	r3, #128
 1497 0194 05D1     		bne	.L102
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
 1498              		.loc 1 898 7
 1499 0196 334B     		ldr	r3, .L108+4
 1500 0198 9B68     		ldr	r3, [r3, #8]
 1501 019a 324A     		ldr	r2, .L108+4
 1502 019c 23F0F003 		bic	r3, r3, #240
 1503 01a0 9360     		str	r3, [r2, #8]
 1504              	.L102:
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 1505              		.loc 1 903 18
 1506 01a2 2F4B     		ldr	r3, .L108
ARM GAS  /tmp/ccyQqkg8.s 			page 44


 1507 01a4 1B68     		ldr	r3, [r3]
 1508 01a6 03F00F03 		and	r3, r3, #15
 1509              		.loc 1 903 6
 1510 01aa 3A68     		ldr	r2, [r7]
 1511 01ac 9A42     		cmp	r2, r3
 1512 01ae 1DD2     		bcs	.L103
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1513              		.loc 1 906 5
 1514 01b0 2B4B     		ldr	r3, .L108
 1515 01b2 1B68     		ldr	r3, [r3]
 1516 01b4 23F00F02 		bic	r2, r3, #15
 1517 01b8 2949     		ldr	r1, .L108
 1518 01ba 3B68     		ldr	r3, [r7]
 1519 01bc 1343     		orrs	r3, r3, r2
 1520 01be 0B60     		str	r3, [r1]
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     memory by polling the FLASH_ACR register */
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1521              		.loc 1 910 17
 1522 01c0 FFF7FEFF 		bl	HAL_GetTick
 1523 01c4 F860     		str	r0, [r7, #12]
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     while (__HAL_FLASH_GET_LATENCY() != FLatency)
 1524              		.loc 1 912 11
 1525 01c6 0AE0     		b	.L104
 1526              	.L105:
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1527              		.loc 1 914 12
 1528 01c8 FFF7FEFF 		bl	HAL_GetTick
 1529 01cc 0246     		mov	r2, r0
 1530              		.loc 1 914 26
 1531 01ce FB68     		ldr	r3, [r7, #12]
 1532 01d0 D31A     		subs	r3, r2, r3
 1533              		.loc 1 914 10
 1534 01d2 41F28832 		movw	r2, #5000
 1535 01d6 9342     		cmp	r3, r2
 1536 01d8 01D9     		bls	.L104
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1537              		.loc 1 916 16
 1538 01da 0323     		movs	r3, #3
 1539 01dc 3BE0     		b	.L88
 1540              	.L104:
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1541              		.loc 1 912 12
 1542 01de 204B     		ldr	r3, .L108
 1543 01e0 1B68     		ldr	r3, [r3]
 1544 01e2 03F00F03 		and	r3, r3, #15
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1545              		.loc 1 912 11
 1546 01e6 3A68     		ldr	r2, [r7]
 1547 01e8 9A42     		cmp	r2, r3
 1548 01ea EDD1     		bne	.L105
ARM GAS  /tmp/ccyQqkg8.s 			page 45


 1549              	.L103:
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1550              		.loc 1 922 26
 1551 01ec 7B68     		ldr	r3, [r7, #4]
 1552 01ee 1B68     		ldr	r3, [r3]
 1553              		.loc 1 922 39
 1554 01f0 03F00403 		and	r3, r3, #4
 1555              		.loc 1 922 6
 1556 01f4 002B     		cmp	r3, #0
 1557 01f6 08D0     		beq	.L106
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1558              		.loc 1 925 5
 1559 01f8 1A4B     		ldr	r3, .L108+4
 1560 01fa 9B68     		ldr	r3, [r3, #8]
 1561 01fc 23F4E062 		bic	r2, r3, #1792
 1562 0200 7B68     		ldr	r3, [r7, #4]
 1563 0202 DB68     		ldr	r3, [r3, #12]
 1564 0204 1749     		ldr	r1, .L108+4
 1565 0206 1343     		orrs	r3, r3, r2
 1566 0208 8B60     		str	r3, [r1, #8]
 1567              	.L106:
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1568              		.loc 1 929 25
 1569 020a 7B68     		ldr	r3, [r7, #4]
 1570 020c 1B68     		ldr	r3, [r3]
 1571              		.loc 1 929 38
 1572 020e 03F00803 		and	r3, r3, #8
 1573              		.loc 1 929 5
 1574 0212 002B     		cmp	r3, #0
 1575 0214 09D0     		beq	.L107
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1576              		.loc 1 932 5
 1577 0216 134B     		ldr	r3, .L108+4
 1578 0218 9B68     		ldr	r3, [r3, #8]
 1579 021a 23F46052 		bic	r2, r3, #14336
 1580 021e 7B68     		ldr	r3, [r7, #4]
 1581 0220 1B69     		ldr	r3, [r3, #16]
 1582 0222 DB00     		lsls	r3, r3, #3
 1583 0224 0F49     		ldr	r1, .L108+4
 1584 0226 1343     		orrs	r3, r3, r2
 1585 0228 8B60     		str	r3, [r1, #8]
 1586              	.L107:
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
ARM GAS  /tmp/ccyQqkg8.s 			page 46


 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
 1587              		.loc 1 936 21
 1588 022a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1589 022e 0246     		mov	r2, r0
 1590              		.loc 1 936 65
 1591 0230 0C4B     		ldr	r3, .L108+4
 1592 0232 9B68     		ldr	r3, [r3, #8]
 1593              		.loc 1 936 100
 1594 0234 1B09     		lsrs	r3, r3, #4
 1595 0236 03F00F03 		and	r3, r3, #15
 1596              		.loc 1 936 64
 1597 023a 0C49     		ldr	r1, .L108+12
 1598 023c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1599              		.loc 1 936 122
 1600 023e 03F01F03 		and	r3, r3, #31
 1601              		.loc 1 936 47
 1602 0242 22FA03F3 		lsr	r3, r2, r3
 1603              		.loc 1 936 19
 1604 0246 0A4A     		ldr	r2, .L108+16
 1605 0248 1360     		str	r3, [r2]
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_InitTick(uwTickPrio);
 1606              		.loc 1 939 10
 1607 024a 0A4B     		ldr	r3, .L108+20
 1608 024c 1B68     		ldr	r3, [r3]
 1609 024e 1846     		mov	r0, r3
 1610 0250 FFF7FEFF 		bl	HAL_InitTick
 1611 0254 0346     		mov	r3, r0
 1612              	.L88:
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1613              		.loc 1 940 1
 1614 0256 1846     		mov	r0, r3
 1615 0258 1837     		adds	r7, r7, #24
 1616              	.LCFI13:
 1617              		.cfi_def_cfa_offset 8
 1618 025a BD46     		mov	sp, r7
 1619              	.LCFI14:
 1620              		.cfi_def_cfa_register 13
 1621              		@ sp needed
 1622 025c 80BD     		pop	{r7, pc}
 1623              	.L109:
 1624 025e 00BF     		.align	2
 1625              	.L108:
 1626 0260 00200240 		.word	1073881088
 1627 0264 00100240 		.word	1073876992
 1628 0268 00B4C404 		.word	80000000
 1629 026c 00000000 		.word	AHBPrescTable
 1630 0270 00000000 		.word	SystemCoreClock
 1631 0274 00000000 		.word	uwTickPrio
 1632              		.cfi_endproc
 1633              	.LFE134:
 1635              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1636              		.align	1
 1637              		.global	HAL_RCC_MCOConfig
 1638              		.syntax unified
 1639              		.thumb
ARM GAS  /tmp/ccyQqkg8.s 			page 47


 1640              		.thumb_func
 1641              		.fpu fpv4-sp-d16
 1643              	HAL_RCC_MCOConfig:
 1644              	.LFB135:
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  *
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** @verbatim
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Output clock to MCO pin.
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** @endverbatim
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8/PG10).
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   PA8/PG10 should be configured in alternate function mode.
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The default configuration of the GPIOG pin 10 (PG10) is set to reset mode (NRST pin)
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and user shall set the NRST_MODE Bit in the FLASH OPTR register to be able to use it 
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         as an MCO pin.
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         The @ref HAL_FLASHEx_OBProgram() API can be used to configure the NRST_MODE Bit value.
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          For STM32G4xx family this parameter can have only one value:
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO_PA8  Clock source to output on MCO1 pin(PA8).
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO_PG10  Clock source to output on MCO1 pin(PG10).
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO source
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccyQqkg8.s 			page 48


 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1645              		.loc 1 995 1
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 48
 1648              		@ frame_needed = 1, uses_anonymous_args = 0
 1649 0000 80B5     		push	{r7, lr}
 1650              	.LCFI15:
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 8CB0     		sub	sp, sp, #48
 1655              	.LCFI16:
 1656              		.cfi_def_cfa_offset 56
 1657 0004 00AF     		add	r7, sp, #0
 1658              	.LCFI17:
 1659              		.cfi_def_cfa_register 7
 1660 0006 F860     		str	r0, [r7, #12]
 1661 0008 B960     		str	r1, [r7, #8]
 1662 000a 7A60     		str	r2, [r7, #4]
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitTypeDef gpio_initstruct;
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t mcoindex;
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t mco_gpio_index;
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_TypeDef * mco_gpio_port;
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Common GPIO init parameters */
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Mode      = GPIO_MODE_AF_PP;
 1663              		.loc 1 1005 29
 1664 000c 0223     		movs	r3, #2
 1665 000e 7B61     		str	r3, [r7, #20]
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 1666              		.loc 1 1006 29
 1667 0010 0323     		movs	r3, #3
 1668 0012 FB61     		str	r3, [r7, #28]
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Pull      = GPIO_NOPULL;
 1669              		.loc 1 1007 29
 1670 0014 0023     		movs	r3, #0
 1671 0016 BB61     		str	r3, [r7, #24]
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get MCOx selection */
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   mcoindex = RCC_MCOx & RCC_MCO_INDEX_MASK;
 1672              		.loc 1 1010 12
 1673 0018 FB68     		ldr	r3, [r7, #12]
 1674 001a 03F08053 		and	r3, r3, #268435456
 1675 001e FB62     		str	r3, [r7, #44]
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get MCOx GPIO Port */
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   mco_gpio_port = (GPIO_TypeDef *) RCC_GET_MCO_GPIO_PORT(RCC_MCOx);
 1676              		.loc 1 1013 36
 1677 0020 FB68     		ldr	r3, [r7, #12]
 1678 0022 1B0C     		lsrs	r3, r3, #16
 1679 0024 03F00F03 		and	r3, r3, #15
 1680 0028 03F59013 		add	r3, r3, #1179648
 1681 002c 9B02     		lsls	r3, r3, #10
ARM GAS  /tmp/ccyQqkg8.s 			page 49


 1682              		.loc 1 1013 17
 1683 002e BB62     		str	r3, [r7, #40]
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* MCOx Clock Enable */
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   mco_gpio_index = RCC_GET_MCO_GPIO_INDEX(RCC_MCOx);
 1684              		.loc 1 1016 20
 1685 0030 FB68     		ldr	r3, [r7, #12]
 1686 0032 1B0C     		lsrs	r3, r3, #16
 1687              		.loc 1 1016 18
 1688 0034 03F00F03 		and	r3, r3, #15
 1689 0038 7B62     		str	r3, [r7, #36]
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->AHB2ENR, (1UL << mco_gpio_index ));
 1690              		.loc 1 1017 3
 1691 003a 134B     		ldr	r3, .L113
 1692 003c DA6C     		ldr	r2, [r3, #76]
 1693 003e 0121     		movs	r1, #1
 1694 0040 7B6A     		ldr	r3, [r7, #36]
 1695 0042 01FA03F3 		lsl	r3, r1, r3
 1696 0046 1049     		ldr	r1, .L113
 1697 0048 1343     		orrs	r3, r3, r2
 1698 004a CB64     		str	r3, [r1, #76]
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Configure the MCOx pin in alternate function mode */
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Pin = RCC_GET_MCO_GPIO_PIN(RCC_MCOx);
 1699              		.loc 1 1020 25
 1700 004c FB68     		ldr	r3, [r7, #12]
 1701 004e 9BB2     		uxth	r3, r3
 1702              		.loc 1 1020 23
 1703 0050 3B61     		str	r3, [r7, #16]
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Alternate = RCC_GET_MCO_GPIO_AF(RCC_MCOx);
 1704              		.loc 1 1021 31
 1705 0052 FB68     		ldr	r3, [r7, #12]
 1706 0054 1B0D     		lsrs	r3, r3, #20
 1707 0056 DBB2     		uxtb	r3, r3
 1708              		.loc 1 1021 29
 1709 0058 3B62     		str	r3, [r7, #32]
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   HAL_GPIO_Init(mco_gpio_port, &gpio_initstruct);
 1710              		.loc 1 1022 3
 1711 005a 07F11003 		add	r3, r7, #16
 1712 005e 1946     		mov	r1, r3
 1713 0060 B86A     		ldr	r0, [r7, #40]
 1714 0062 FFF7FEFF 		bl	HAL_GPIO_Init
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    if (mcoindex == RCC_MCO1_INDEX)
 1715              		.loc 1 1024 7
 1716 0066 FB6A     		ldr	r3, [r7, #44]
 1717 0068 002B     		cmp	r3, #0
 1718 006a 09D1     		bne	.L112
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Mask MCOSEL[] and MCOPRE[] bits then set MCO clock source and prescaler */
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv));
 1719              		.loc 1 1029 5
 1720 006c 064B     		ldr	r3, .L113
 1721 006e 9B68     		ldr	r3, [r3, #8]
 1722 0070 23F0FE42 		bic	r2, r3, #2130706432
ARM GAS  /tmp/ccyQqkg8.s 			page 50


 1723 0074 B968     		ldr	r1, [r7, #8]
 1724 0076 7B68     		ldr	r3, [r7, #4]
 1725 0078 0B43     		orrs	r3, r3, r1
 1726 007a 0349     		ldr	r1, .L113
 1727 007c 1343     		orrs	r3, r3, r2
 1728 007e 8B60     		str	r3, [r1, #8]
 1729              	.L112:
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1730              		.loc 1 1031 1
 1731 0080 00BF     		nop
 1732 0082 3037     		adds	r7, r7, #48
 1733              	.LCFI18:
 1734              		.cfi_def_cfa_offset 8
 1735 0084 BD46     		mov	sp, r7
 1736              	.LCFI19:
 1737              		.cfi_def_cfa_register 13
 1738              		@ sp needed
 1739 0086 80BD     		pop	{r7, pc}
 1740              	.L114:
 1741              		.align	2
 1742              	.L113:
 1743 0088 00100240 		.word	1073876992
 1744              		.cfi_endproc
 1745              	.LFE135:
 1747              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1748              		.align	1
 1749              		.global	HAL_RCC_GetSysClockFreq
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1753              		.fpu fpv4-sp-d16
 1755              	HAL_RCC_GetSysClockFreq:
 1756              	.LFB136:
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         constant and the selected clock source:
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           HSI_VALUE(*) Value multiplied/divided by the PLL factors.
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32g4xx_hal_conf.h file (default value
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *               in voltage and temperature.
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32g4xx_hal_conf.h file (default value
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                have wrong result.
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         value for HSE crystal.
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
ARM GAS  /tmp/ccyQqkg8.s 			page 51


1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1757              		.loc 1 1064 1
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 24
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
 1762 0000 80B4     		push	{r7}
 1763              	.LCFI20:
 1764              		.cfi_def_cfa_offset 4
 1765              		.cfi_offset 7, -4
 1766 0002 87B0     		sub	sp, sp, #28
 1767              	.LCFI21:
 1768              		.cfi_def_cfa_offset 32
 1769 0004 00AF     		add	r7, sp, #0
 1770              	.LCFI22:
 1771              		.cfi_def_cfa_register 7
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t sysclockfreq;
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 1772              		.loc 1 1068 7
 1773 0006 2C4B     		ldr	r3, .L123
 1774 0008 9B68     		ldr	r3, [r3, #8]
 1775 000a 03F00C03 		and	r3, r3, #12
 1776              		.loc 1 1068 6
 1777 000e 042B     		cmp	r3, #4
 1778 0010 02D1     		bne	.L116
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* HSI used as system clock source */
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
 1779              		.loc 1 1071 18
 1780 0012 2A4B     		ldr	r3, .L123+4
 1781 0014 3B61     		str	r3, [r7, #16]
 1782 0016 47E0     		b	.L117
 1783              	.L116:
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 1784              		.loc 1 1073 12
 1785 0018 274B     		ldr	r3, .L123
 1786 001a 9B68     		ldr	r3, [r3, #8]
 1787 001c 03F00C03 		and	r3, r3, #12
 1788              		.loc 1 1073 11
 1789 0020 082B     		cmp	r3, #8
 1790 0022 02D1     		bne	.L118
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* HSE used as system clock source */
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 1791              		.loc 1 1076 18
ARM GAS  /tmp/ccyQqkg8.s 			page 52


 1792 0024 264B     		ldr	r3, .L123+8
 1793 0026 3B61     		str	r3, [r7, #16]
 1794 0028 3EE0     		b	.L117
 1795              	.L118:
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL)
 1796              		.loc 1 1078 12
 1797 002a 234B     		ldr	r3, .L123
 1798 002c 9B68     		ldr	r3, [r3, #8]
 1799 002e 03F00C03 		and	r3, r3, #12
 1800              		.loc 1 1078 11
 1801 0032 0C2B     		cmp	r3, #12
 1802 0034 36D1     		bne	.L119
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL_VCO = ((HSE_VALUE or HSI_VALUE)/ PLLM) * PLLN
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     */
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 1803              		.loc 1 1085 17
 1804 0036 204B     		ldr	r3, .L123
 1805 0038 DB68     		ldr	r3, [r3, #12]
 1806              		.loc 1 1085 15
 1807 003a 03F00303 		and	r3, r3, #3
 1808 003e FB60     		str	r3, [r7, #12]
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 1809              		.loc 1 1086 13
 1810 0040 1D4B     		ldr	r3, .L123
 1811 0042 DB68     		ldr	r3, [r3, #12]
 1812              		.loc 1 1086 54
 1813 0044 1B09     		lsrs	r3, r3, #4
 1814 0046 03F00F03 		and	r3, r3, #15
 1815              		.loc 1 1086 10
 1816 004a 0133     		adds	r3, r3, #1
 1817 004c BB60     		str	r3, [r7, #8]
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     switch (pllsource)
 1818              		.loc 1 1088 5
 1819 004e FB68     		ldr	r3, [r7, #12]
 1820 0050 032B     		cmp	r3, #3
 1821 0052 0CD1     		bne	.L120
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
 1822              		.loc 1 1091 27
 1823 0054 1A4A     		ldr	r2, .L123+8
 1824 0056 BB68     		ldr	r3, [r7, #8]
 1825 0058 B2FBF3F3 		udiv	r3, r2, r3
 1826              		.loc 1 1091 38
 1827 005c 164A     		ldr	r2, .L123
 1828 005e D268     		ldr	r2, [r2, #12]
 1829              		.loc 1 1091 79
 1830 0060 120A     		lsrs	r2, r2, #8
 1831 0062 02F07F02 		and	r2, r2, #127
 1832              		.loc 1 1091 14
 1833 0066 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/ccyQqkg8.s 			page 53


 1834 006a 7B61     		str	r3, [r7, #20]
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       break;
 1835              		.loc 1 1092 7
 1836 006c 0CE0     		b	.L121
 1837              	.L120:
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     default:
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
 1838              		.loc 1 1096 27
 1839 006e 134A     		ldr	r2, .L123+4
 1840 0070 BB68     		ldr	r3, [r7, #8]
 1841 0072 B2FBF3F3 		udiv	r3, r2, r3
 1842              		.loc 1 1096 38
 1843 0076 104A     		ldr	r2, .L123
 1844 0078 D268     		ldr	r2, [r2, #12]
 1845              		.loc 1 1096 79
 1846 007a 120A     		lsrs	r2, r2, #8
 1847 007c 02F07F02 		and	r2, r2, #127
 1848              		.loc 1 1096 14
 1849 0080 02FB03F3 		mul	r3, r2, r3
 1850 0084 7B61     		str	r3, [r7, #20]
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       break;
 1851              		.loc 1 1097 7
 1852 0086 00BF     		nop
 1853              	.L121:
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 1854              		.loc 1 1099 14
 1855 0088 0B4B     		ldr	r3, .L123
 1856 008a DB68     		ldr	r3, [r3, #12]
 1857              		.loc 1 1099 55
 1858 008c 5B0E     		lsrs	r3, r3, #25
 1859 008e 03F00303 		and	r3, r3, #3
 1860              		.loc 1 1099 80
 1861 0092 0133     		adds	r3, r3, #1
 1862              		.loc 1 1099 10
 1863 0094 5B00     		lsls	r3, r3, #1
 1864 0096 7B60     		str	r3, [r7, #4]
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 1865              		.loc 1 1100 18
 1866 0098 7A69     		ldr	r2, [r7, #20]
 1867 009a 7B68     		ldr	r3, [r7, #4]
 1868 009c B2FBF3F3 		udiv	r3, r2, r3
 1869 00a0 3B61     		str	r3, [r7, #16]
 1870 00a2 01E0     		b	.L117
 1871              	.L119:
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = 0U;
 1872              		.loc 1 1104 18
 1873 00a4 0023     		movs	r3, #0
 1874 00a6 3B61     		str	r3, [r7, #16]
 1875              	.L117:
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyQqkg8.s 			page 54


1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return sysclockfreq;
 1876              		.loc 1 1107 10
 1877 00a8 3B69     		ldr	r3, [r7, #16]
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1878              		.loc 1 1108 1
 1879 00aa 1846     		mov	r0, r3
 1880 00ac 1C37     		adds	r7, r7, #28
 1881              	.LCFI23:
 1882              		.cfi_def_cfa_offset 4
 1883 00ae BD46     		mov	sp, r7
 1884              	.LCFI24:
 1885              		.cfi_def_cfa_register 13
 1886              		@ sp needed
 1887 00b0 5DF8047B 		ldr	r7, [sp], #4
 1888              	.LCFI25:
 1889              		.cfi_restore 7
 1890              		.cfi_def_cfa_offset 0
 1891 00b4 7047     		bx	lr
 1892              	.L124:
 1893 00b6 00BF     		.align	2
 1894              	.L123:
 1895 00b8 00100240 		.word	1073876992
 1896 00bc 0024F400 		.word	16000000
 1897 00c0 00127A00 		.word	8000000
 1898              		.cfi_endproc
 1899              	.LFE136:
 1901              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1902              		.align	1
 1903              		.global	HAL_RCC_GetHCLKFreq
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu fpv4-sp-d16
 1909              	HAL_RCC_GetHCLKFreq:
 1910              	.LFB137:
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1911              		.loc 1 1119 1
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 1, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
 1916 0000 80B4     		push	{r7}
 1917              	.LCFI26:
 1918              		.cfi_def_cfa_offset 4
 1919              		.cfi_offset 7, -4
 1920 0002 00AF     		add	r7, sp, #0
 1921              	.LCFI27:
ARM GAS  /tmp/ccyQqkg8.s 			page 55


 1922              		.cfi_def_cfa_register 7
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return SystemCoreClock;
 1923              		.loc 1 1120 10
 1924 0004 034B     		ldr	r3, .L127
 1925 0006 1B68     		ldr	r3, [r3]
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1926              		.loc 1 1121 1
 1927 0008 1846     		mov	r0, r3
 1928 000a BD46     		mov	sp, r7
 1929              	.LCFI28:
 1930              		.cfi_def_cfa_register 13
 1931              		@ sp needed
 1932 000c 5DF8047B 		ldr	r7, [sp], #4
 1933              	.LCFI29:
 1934              		.cfi_restore 7
 1935              		.cfi_def_cfa_offset 0
 1936 0010 7047     		bx	lr
 1937              	.L128:
 1938 0012 00BF     		.align	2
 1939              	.L127:
 1940 0014 00000000 		.word	SystemCoreClock
 1941              		.cfi_endproc
 1942              	.LFE137:
 1944              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1945              		.align	1
 1946              		.global	HAL_RCC_GetPCLK1Freq
 1947              		.syntax unified
 1948              		.thumb
 1949              		.thumb_func
 1950              		.fpu fpv4-sp-d16
 1952              	HAL_RCC_GetPCLK1Freq:
 1953              	.LFB138:
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1954              		.loc 1 1130 1
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958 0000 80B5     		push	{r7, lr}
 1959              	.LCFI30:
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 7, -8
 1962              		.cfi_offset 14, -4
 1963 0002 00AF     		add	r7, sp, #0
 1964              	.LCFI31:
 1965              		.cfi_def_cfa_register 7
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
 1966              		.loc 1 1132 11
 1967 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/ccyQqkg8.s 			page 56


 1968 0008 0246     		mov	r2, r0
 1969              		.loc 1 1132 51
 1970 000a 064B     		ldr	r3, .L131
 1971 000c 9B68     		ldr	r3, [r3, #8]
 1972              		.loc 1 1132 87
 1973 000e 1B0A     		lsrs	r3, r3, #8
 1974 0010 03F00703 		and	r3, r3, #7
 1975              		.loc 1 1132 50
 1976 0014 0449     		ldr	r1, .L131+4
 1977 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1978              		.loc 1 1132 110
 1979 0018 03F01F03 		and	r3, r3, #31
 1980              		.loc 1 1132 33
 1981 001c 22FA03F3 		lsr	r3, r2, r3
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1982              		.loc 1 1133 1
 1983 0020 1846     		mov	r0, r3
 1984 0022 80BD     		pop	{r7, pc}
 1985              	.L132:
 1986              		.align	2
 1987              	.L131:
 1988 0024 00100240 		.word	1073876992
 1989 0028 00000000 		.word	APBPrescTable
 1990              		.cfi_endproc
 1991              	.LFE138:
 1993              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1994              		.align	1
 1995              		.global	HAL_RCC_GetPCLK2Freq
 1996              		.syntax unified
 1997              		.thumb
 1998              		.thumb_func
 1999              		.fpu fpv4-sp-d16
 2001              	HAL_RCC_GetPCLK2Freq:
 2002              	.LFB139:
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2003              		.loc 1 1142 1
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 0
 2006              		@ frame_needed = 1, uses_anonymous_args = 0
 2007 0000 80B5     		push	{r7, lr}
 2008              	.LCFI32:
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 7, -8
 2011              		.cfi_offset 14, -4
 2012 0002 00AF     		add	r7, sp, #0
 2013              	.LCFI33:
 2014              		.cfi_def_cfa_register 7
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
ARM GAS  /tmp/ccyQqkg8.s 			page 57


 2015              		.loc 1 1144 11
 2016 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2017 0008 0246     		mov	r2, r0
 2018              		.loc 1 1144 50
 2019 000a 064B     		ldr	r3, .L135
 2020 000c 9B68     		ldr	r3, [r3, #8]
 2021              		.loc 1 1144 86
 2022 000e DB0A     		lsrs	r3, r3, #11
 2023 0010 03F00703 		and	r3, r3, #7
 2024              		.loc 1 1144 49
 2025 0014 0449     		ldr	r1, .L135+4
 2026 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2027              		.loc 1 1144 109
 2028 0018 03F01F03 		and	r3, r3, #31
 2029              		.loc 1 1144 32
 2030 001c 22FA03F3 		lsr	r3, r2, r3
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2031              		.loc 1 1145 1
 2032 0020 1846     		mov	r0, r3
 2033 0022 80BD     		pop	{r7, pc}
 2034              	.L136:
 2035              		.align	2
 2036              	.L135:
 2037 0024 00100240 		.word	1073876992
 2038 0028 00000000 		.word	APBPrescTable
 2039              		.cfi_endproc
 2040              	.LFE139:
 2042              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2043              		.align	1
 2044              		.global	HAL_RCC_GetOscConfig
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2048              		.fpu fpv4-sp-d16
 2050              	HAL_RCC_GetOscConfig:
 2051              	.LFB140:
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC configuration registers.
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         will be configured.
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2052              		.loc 1 1155 1
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 8
 2055              		@ frame_needed = 1, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
 2057 0000 80B4     		push	{r7}
 2058              	.LCFI34:
 2059              		.cfi_def_cfa_offset 4
 2060              		.cfi_offset 7, -4
 2061 0002 83B0     		sub	sp, sp, #12
 2062              	.LCFI35:
ARM GAS  /tmp/ccyQqkg8.s 			page 58


 2063              		.cfi_def_cfa_offset 16
 2064 0004 00AF     		add	r7, sp, #0
 2065              	.LCFI36:
 2066              		.cfi_def_cfa_register 7
 2067 0006 7860     		str	r0, [r7, #4]
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | \
 2068              		.loc 1 1160 37
 2069 0008 7B68     		ldr	r3, [r7, #4]
 2070 000a 2F22     		movs	r2, #47
 2071 000c 1A60     		str	r2, [r3]
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2072              		.loc 1 1164 6
 2073 000e 544B     		ldr	r3, .L152
 2074 0010 1B68     		ldr	r3, [r3]
 2075 0012 03F48023 		and	r3, r3, #262144
 2076              		.loc 1 1164 5
 2077 0016 B3F5802F 		cmp	r3, #262144
 2078 001a 04D1     		bne	.L138
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2079              		.loc 1 1166 33
 2080 001c 7B68     		ldr	r3, [r7, #4]
 2081 001e 4FF4A022 		mov	r2, #327680
 2082 0022 5A60     		str	r2, [r3, #4]
 2083 0024 0EE0     		b	.L139
 2084              	.L138:
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
 2085              		.loc 1 1168 11
 2086 0026 4E4B     		ldr	r3, .L152
 2087 0028 1B68     		ldr	r3, [r3]
 2088 002a 03F48033 		and	r3, r3, #65536
 2089              		.loc 1 1168 10
 2090 002e B3F5803F 		cmp	r3, #65536
 2091 0032 04D1     		bne	.L140
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2092              		.loc 1 1170 33
 2093 0034 7B68     		ldr	r3, [r7, #4]
 2094 0036 4FF48032 		mov	r2, #65536
 2095 003a 5A60     		str	r2, [r3, #4]
 2096 003c 02E0     		b	.L139
 2097              	.L140:
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2098              		.loc 1 1174 33
 2099 003e 7B68     		ldr	r3, [r7, #4]
 2100 0040 0022     		movs	r2, #0
ARM GAS  /tmp/ccyQqkg8.s 			page 59


 2101 0042 5A60     		str	r2, [r3, #4]
 2102              	.L139:
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
 2103              		.loc 1 1178 6
 2104 0044 464B     		ldr	r3, .L152
 2105 0046 1B68     		ldr	r3, [r3]
 2106 0048 03F48073 		and	r3, r3, #256
 2107              		.loc 1 1178 5
 2108 004c B3F5807F 		cmp	r3, #256
 2109 0050 04D1     		bne	.L141
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2110              		.loc 1 1180 33
 2111 0052 7B68     		ldr	r3, [r7, #4]
 2112 0054 4FF48072 		mov	r2, #256
 2113 0058 DA60     		str	r2, [r3, #12]
 2114 005a 02E0     		b	.L142
 2115              	.L141:
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2116              		.loc 1 1184 33
 2117 005c 7B68     		ldr	r3, [r7, #4]
 2118 005e 0022     		movs	r2, #0
 2119 0060 DA60     		str	r2, [r3, #12]
 2120              	.L142:
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
 2121              		.loc 1 1187 44
 2122 0062 3F4B     		ldr	r3, .L152
 2123 0064 5B68     		ldr	r3, [r3, #4]
 2124              		.loc 1 1187 84
 2125 0066 1B0E     		lsrs	r3, r3, #24
 2126 0068 03F07F02 		and	r2, r3, #127
 2127              		.loc 1 1187 42
 2128 006c 7B68     		ldr	r3, [r7, #4]
 2129 006e 1A61     		str	r2, [r3, #16]
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2130              		.loc 1 1190 6
 2131 0070 3B4B     		ldr	r3, .L152
 2132 0072 D3F89030 		ldr	r3, [r3, #144]
 2133 0076 03F00403 		and	r3, r3, #4
 2134              		.loc 1 1190 5
 2135 007a 042B     		cmp	r3, #4
 2136 007c 03D1     		bne	.L143
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2137              		.loc 1 1192 33
 2138 007e 7B68     		ldr	r3, [r7, #4]
 2139 0080 0522     		movs	r2, #5
ARM GAS  /tmp/ccyQqkg8.s 			page 60


 2140 0082 9A60     		str	r2, [r3, #8]
 2141 0084 0DE0     		b	.L144
 2142              	.L143:
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2143              		.loc 1 1194 11
 2144 0086 364B     		ldr	r3, .L152
 2145 0088 D3F89030 		ldr	r3, [r3, #144]
 2146 008c 03F00103 		and	r3, r3, #1
 2147              		.loc 1 1194 10
 2148 0090 012B     		cmp	r3, #1
 2149 0092 03D1     		bne	.L145
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2150              		.loc 1 1196 33
 2151 0094 7B68     		ldr	r3, [r7, #4]
 2152 0096 0122     		movs	r2, #1
 2153 0098 9A60     		str	r2, [r3, #8]
 2154 009a 02E0     		b	.L144
 2155              	.L145:
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2156              		.loc 1 1200 33
 2157 009c 7B68     		ldr	r3, [r7, #4]
 2158 009e 0022     		movs	r2, #0
 2159 00a0 9A60     		str	r2, [r3, #8]
 2160              	.L144:
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
 2161              		.loc 1 1204 6
 2162 00a2 2F4B     		ldr	r3, .L152
 2163 00a4 D3F89430 		ldr	r3, [r3, #148]
 2164 00a8 03F00103 		and	r3, r3, #1
 2165              		.loc 1 1204 5
 2166 00ac 012B     		cmp	r3, #1
 2167 00ae 03D1     		bne	.L146
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2168              		.loc 1 1206 33
 2169 00b0 7B68     		ldr	r3, [r7, #4]
 2170 00b2 0122     		movs	r2, #1
 2171 00b4 5A61     		str	r2, [r3, #20]
 2172 00b6 02E0     		b	.L147
 2173              	.L146:
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2174              		.loc 1 1210 33
 2175 00b8 7B68     		ldr	r3, [r7, #4]
 2176 00ba 0022     		movs	r2, #0
 2177 00bc 5A61     		str	r2, [r3, #20]
 2178              	.L147:
ARM GAS  /tmp/ccyQqkg8.s 			page 61


1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
 2179              		.loc 1 1214 6
 2180 00be 284B     		ldr	r3, .L152
 2181 00c0 D3F89830 		ldr	r3, [r3, #152]
 2182 00c4 03F00103 		and	r3, r3, #1
 2183              		.loc 1 1214 5
 2184 00c8 012B     		cmp	r3, #1
 2185 00ca 03D1     		bne	.L148
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2186              		.loc 1 1216 35
 2187 00cc 7B68     		ldr	r3, [r7, #4]
 2188 00ce 0122     		movs	r2, #1
 2189 00d0 9A61     		str	r2, [r3, #24]
 2190 00d2 02E0     		b	.L149
 2191              	.L148:
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 2192              		.loc 1 1220 35
 2193 00d4 7B68     		ldr	r3, [r7, #4]
 2194 00d6 0022     		movs	r2, #0
 2195 00d8 9A61     		str	r2, [r3, #24]
 2196              	.L149:
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
 2197              		.loc 1 1224 6
 2198 00da 214B     		ldr	r3, .L152
 2199 00dc 1B68     		ldr	r3, [r3]
 2200 00de 03F08073 		and	r3, r3, #16777216
 2201              		.loc 1 1224 5
 2202 00e2 B3F1807F 		cmp	r3, #16777216
 2203 00e6 03D1     		bne	.L150
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2204              		.loc 1 1226 37
 2205 00e8 7B68     		ldr	r3, [r7, #4]
 2206 00ea 0222     		movs	r2, #2
 2207 00ec DA61     		str	r2, [r3, #28]
 2208 00ee 02E0     		b	.L151
 2209              	.L150:
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2210              		.loc 1 1230 37
 2211 00f0 7B68     		ldr	r3, [r7, #4]
 2212 00f2 0122     		movs	r2, #1
 2213 00f4 DA61     		str	r2, [r3, #28]
 2214              	.L151:
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccyQqkg8.s 			page 62


1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2215              		.loc 1 1232 38
 2216 00f6 1A4B     		ldr	r3, .L152
 2217 00f8 DB68     		ldr	r3, [r3, #12]
 2218 00fa 03F00302 		and	r2, r3, #3
 2219              		.loc 1 1232 36
 2220 00fe 7B68     		ldr	r3, [r7, #4]
 2221 0100 1A62     		str	r2, [r3, #32]
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2222              		.loc 1 1233 34
 2223 0102 174B     		ldr	r3, .L152
 2224 0104 DB68     		ldr	r3, [r3, #12]
 2225              		.loc 1 1233 75
 2226 0106 1B09     		lsrs	r3, r3, #4
 2227 0108 03F00F03 		and	r3, r3, #15
 2228              		.loc 1 1233 100
 2229 010c 5A1C     		adds	r2, r3, #1
 2230              		.loc 1 1233 31
 2231 010e 7B68     		ldr	r3, [r7, #4]
 2232 0110 5A62     		str	r2, [r3, #36]
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2233              		.loc 1 1234 33
 2234 0112 134B     		ldr	r3, .L152
 2235 0114 DB68     		ldr	r3, [r3, #12]
 2236              		.loc 1 1234 74
 2237 0116 1B0A     		lsrs	r3, r3, #8
 2238 0118 03F07F02 		and	r2, r3, #127
 2239              		.loc 1 1234 31
 2240 011c 7B68     		ldr	r3, [r7, #4]
 2241 011e 9A62     		str	r2, [r3, #40]
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2242              		.loc 1 1235 36
 2243 0120 0F4B     		ldr	r3, .L152
 2244 0122 DB68     		ldr	r3, [r3, #12]
 2245              		.loc 1 1235 77
 2246 0124 5B0D     		lsrs	r3, r3, #21
 2247 0126 03F00303 		and	r3, r3, #3
 2248              		.loc 1 1235 102
 2249 012a 0133     		adds	r3, r3, #1
 2250              		.loc 1 1235 108
 2251 012c 5A00     		lsls	r2, r3, #1
 2252              		.loc 1 1235 31
 2253 012e 7B68     		ldr	r3, [r7, #4]
 2254 0130 1A63     		str	r2, [r3, #48]
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2255              		.loc 1 1236 36
 2256 0132 0B4B     		ldr	r3, .L152
 2257 0134 DB68     		ldr	r3, [r3, #12]
 2258              		.loc 1 1236 77
 2259 0136 5B0E     		lsrs	r3, r3, #25
 2260 0138 03F00303 		and	r3, r3, #3
 2261              		.loc 1 1236 102
 2262 013c 0133     		adds	r3, r3, #1
 2263              		.loc 1 1236 108
 2264 013e 5A00     		lsls	r2, r3, #1
 2265              		.loc 1 1236 31
 2266 0140 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccyQqkg8.s 			page 63


 2267 0142 5A63     		str	r2, [r3, #52]
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
 2268              		.loc 1 1237 33
 2269 0144 064B     		ldr	r3, .L152
 2270 0146 DB68     		ldr	r3, [r3, #12]
 2271              		.loc 1 1237 77
 2272 0148 DB0E     		lsrs	r3, r3, #27
 2273 014a 03F01F02 		and	r2, r3, #31
 2274              		.loc 1 1237 31
 2275 014e 7B68     		ldr	r3, [r7, #4]
 2276 0150 DA62     		str	r2, [r3, #44]
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2277              		.loc 1 1238 1
 2278 0152 00BF     		nop
 2279 0154 0C37     		adds	r7, r7, #12
 2280              	.LCFI37:
 2281              		.cfi_def_cfa_offset 4
 2282 0156 BD46     		mov	sp, r7
 2283              	.LCFI38:
 2284              		.cfi_def_cfa_register 13
 2285              		@ sp needed
 2286 0158 5DF8047B 		ldr	r7, [sp], #4
 2287              	.LCFI39:
 2288              		.cfi_restore 7
 2289              		.cfi_def_cfa_offset 0
 2290 015c 7047     		bx	lr
 2291              	.L153:
 2292 015e 00BF     		.align	2
 2293              	.L152:
 2294 0160 00100240 		.word	1073876992
 2295              		.cfi_endproc
 2296              	.LFE140:
 2298              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2299              		.align	1
 2300              		.global	HAL_RCC_GetClockConfig
 2301              		.syntax unified
 2302              		.thumb
 2303              		.thumb_func
 2304              		.fpu fpv4-sp-d16
 2306              	HAL_RCC_GetClockConfig:
 2307              	.LFB141:
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC configuration registers.
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         will be configured.
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2308              		.loc 1 1249 1
 2309              		.cfi_startproc
 2310              		@ args = 0, pretend = 0, frame = 8
 2311              		@ frame_needed = 1, uses_anonymous_args = 0
 2312              		@ link register save eliminated.
ARM GAS  /tmp/ccyQqkg8.s 			page 64


 2313 0000 80B4     		push	{r7}
 2314              	.LCFI40:
 2315              		.cfi_def_cfa_offset 4
 2316              		.cfi_offset 7, -4
 2317 0002 83B0     		sub	sp, sp, #12
 2318              	.LCFI41:
 2319              		.cfi_def_cfa_offset 16
 2320 0004 00AF     		add	r7, sp, #0
 2321              	.LCFI42:
 2322              		.cfi_def_cfa_register 7
 2323 0006 7860     		str	r0, [r7, #4]
 2324 0008 3960     		str	r1, [r7]
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2325              		.loc 1 1255 32
 2326 000a 7B68     		ldr	r3, [r7, #4]
 2327 000c 0F22     		movs	r2, #15
 2328 000e 1A60     		str	r2, [r3]
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 2329              		.loc 1 1258 37
 2330 0010 124B     		ldr	r3, .L155
 2331 0012 9B68     		ldr	r3, [r3, #8]
 2332 0014 03F00302 		and	r2, r3, #3
 2333              		.loc 1 1258 35
 2334 0018 7B68     		ldr	r3, [r7, #4]
 2335 001a 5A60     		str	r2, [r3, #4]
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 2336              		.loc 1 1261 38
 2337 001c 0F4B     		ldr	r3, .L155
 2338 001e 9B68     		ldr	r3, [r3, #8]
 2339 0020 03F0F002 		and	r2, r3, #240
 2340              		.loc 1 1261 36
 2341 0024 7B68     		ldr	r3, [r7, #4]
 2342 0026 9A60     		str	r2, [r3, #8]
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 2343              		.loc 1 1264 39
 2344 0028 0C4B     		ldr	r3, .L155
 2345 002a 9B68     		ldr	r3, [r3, #8]
 2346 002c 03F4E062 		and	r2, r3, #1792
 2347              		.loc 1 1264 37
 2348 0030 7B68     		ldr	r3, [r7, #4]
 2349 0032 DA60     		str	r2, [r3, #12]
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 2350              		.loc 1 1267 40
 2351 0034 094B     		ldr	r3, .L155
ARM GAS  /tmp/ccyQqkg8.s 			page 65


 2352 0036 9B68     		ldr	r3, [r3, #8]
 2353              		.loc 1 1267 76
 2354 0038 DB08     		lsrs	r3, r3, #3
 2355 003a 03F4E062 		and	r2, r3, #1792
 2356              		.loc 1 1267 37
 2357 003e 7B68     		ldr	r3, [r7, #4]
 2358 0040 1A61     		str	r2, [r3, #16]
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
 2359              		.loc 1 1270 16
 2360 0042 074B     		ldr	r3, .L155+4
 2361 0044 1B68     		ldr	r3, [r3]
 2362 0046 03F00F02 		and	r2, r3, #15
 2363              		.loc 1 1270 14
 2364 004a 3B68     		ldr	r3, [r7]
 2365 004c 1A60     		str	r2, [r3]
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2366              		.loc 1 1271 1
 2367 004e 00BF     		nop
 2368 0050 0C37     		adds	r7, r7, #12
 2369              	.LCFI43:
 2370              		.cfi_def_cfa_offset 4
 2371 0052 BD46     		mov	sp, r7
 2372              	.LCFI44:
 2373              		.cfi_def_cfa_register 13
 2374              		@ sp needed
 2375 0054 5DF8047B 		ldr	r7, [sp], #4
 2376              	.LCFI45:
 2377              		.cfi_restore 7
 2378              		.cfi_def_cfa_offset 0
 2379 0058 7047     		bx	lr
 2380              	.L156:
 2381 005a 00BF     		.align	2
 2382              	.L155:
 2383 005c 00100240 		.word	1073876992
 2384 0060 00200240 		.word	1073881088
 2385              		.cfi_endproc
 2386              	.LFE141:
 2388              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2389              		.align	1
 2390              		.global	HAL_RCC_EnableCSS
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2394              		.fpu fpv4-sp-d16
 2396              	HAL_RCC_EnableCSS:
 2397              	.LFB142:
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
ARM GAS  /tmp/ccyQqkg8.s 			page 66


1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2398              		.loc 1 1284 1
 2399              		.cfi_startproc
 2400              		@ args = 0, pretend = 0, frame = 0
 2401              		@ frame_needed = 1, uses_anonymous_args = 0
 2402              		@ link register save eliminated.
 2403 0000 80B4     		push	{r7}
 2404              	.LCFI46:
 2405              		.cfi_def_cfa_offset 4
 2406              		.cfi_offset 7, -4
 2407 0002 00AF     		add	r7, sp, #0
 2408              	.LCFI47:
 2409              		.cfi_def_cfa_register 7
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2410              		.loc 1 1285 3
 2411 0004 054B     		ldr	r3, .L158
 2412 0006 1B68     		ldr	r3, [r3]
 2413 0008 044A     		ldr	r2, .L158
 2414 000a 43F40023 		orr	r3, r3, #524288
 2415 000e 1360     		str	r3, [r2]
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2416              		.loc 1 1286 1
 2417 0010 00BF     		nop
 2418 0012 BD46     		mov	sp, r7
 2419              	.LCFI48:
 2420              		.cfi_def_cfa_register 13
 2421              		@ sp needed
 2422 0014 5DF8047B 		ldr	r7, [sp], #4
 2423              	.LCFI49:
 2424              		.cfi_restore 7
 2425              		.cfi_def_cfa_offset 0
 2426 0018 7047     		bx	lr
 2427              	.L159:
 2428 001a 00BF     		.align	2
 2429              	.L158:
 2430 001c 00100240 		.word	1073876992
 2431              		.cfi_endproc
 2432              	.LFE142:
 2434              		.section	.text.HAL_RCC_EnableLSECSS,"ax",%progbits
 2435              		.align	1
 2436              		.global	HAL_RCC_EnableLSECSS
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2440              		.fpu fpv4-sp-d16
 2442              	HAL_RCC_EnableLSECSS:
 2443              	.LFB143:
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Enable the LSE Clock Security System.
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   If a failure is detected on the external 32 kHz oscillator,
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the LSE clock is no longer supplied to the RTC but no hardware action
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         is made to the registers. If enabled, an interrupt will be generated
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and handle through @ref RCCEx_EXTI_LINE_LSECSS
ARM GAS  /tmp/ccyQqkg8.s 			page 67


1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset or after a LSE failure detection
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_EnableLSECSS(void)
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2444              		.loc 1 1298 1
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 1, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
 2449 0000 80B4     		push	{r7}
 2450              	.LCFI50:
 2451              		.cfi_def_cfa_offset 4
 2452              		.cfi_offset 7, -4
 2453 0002 00AF     		add	r7, sp, #0
 2454              	.LCFI51:
 2455              		.cfi_def_cfa_register 7
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2456              		.loc 1 1299 3
 2457 0004 064B     		ldr	r3, .L161
 2458 0006 D3F89030 		ldr	r3, [r3, #144]
 2459 000a 054A     		ldr	r2, .L161
 2460 000c 43F02003 		orr	r3, r3, #32
 2461 0010 C2F89030 		str	r3, [r2, #144]
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2462              		.loc 1 1300 1
 2463 0014 00BF     		nop
 2464 0016 BD46     		mov	sp, r7
 2465              	.LCFI52:
 2466              		.cfi_def_cfa_register 13
 2467              		@ sp needed
 2468 0018 5DF8047B 		ldr	r7, [sp], #4
 2469              	.LCFI53:
 2470              		.cfi_restore 7
 2471              		.cfi_def_cfa_offset 0
 2472 001c 7047     		bx	lr
 2473              	.L162:
 2474 001e 00BF     		.align	2
 2475              	.L161:
 2476 0020 00100240 		.word	1073876992
 2477              		.cfi_endproc
 2478              	.LFE143:
 2480              		.section	.text.HAL_RCC_DisableLSECSS,"ax",%progbits
 2481              		.align	1
 2482              		.global	HAL_RCC_DisableLSECSS
 2483              		.syntax unified
 2484              		.thumb
 2485              		.thumb_func
 2486              		.fpu fpv4-sp-d16
 2488              	HAL_RCC_DisableLSECSS:
 2489              	.LFB144:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Disable the LSE Clock Security System.
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   After LSE failure detection, the software must disable LSECSSON
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset otherwise.
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
ARM GAS  /tmp/ccyQqkg8.s 			page 68


1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_DisableLSECSS(void)
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2490              		.loc 1 1309 1
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494              		@ link register save eliminated.
 2495 0000 80B4     		push	{r7}
 2496              	.LCFI54:
 2497              		.cfi_def_cfa_offset 4
 2498              		.cfi_offset 7, -4
 2499 0002 00AF     		add	r7, sp, #0
 2500              	.LCFI55:
 2501              		.cfi_def_cfa_register 7
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2502              		.loc 1 1310 3
 2503 0004 064B     		ldr	r3, .L164
 2504 0006 D3F89030 		ldr	r3, [r3, #144]
 2505 000a 054A     		ldr	r2, .L164
 2506 000c 23F02003 		bic	r3, r3, #32
 2507 0010 C2F89030 		str	r3, [r2, #144]
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2508              		.loc 1 1311 1
 2509 0014 00BF     		nop
 2510 0016 BD46     		mov	sp, r7
 2511              	.LCFI56:
 2512              		.cfi_def_cfa_register 13
 2513              		@ sp needed
 2514 0018 5DF8047B 		ldr	r7, [sp], #4
 2515              	.LCFI57:
 2516              		.cfi_restore 7
 2517              		.cfi_def_cfa_offset 0
 2518 001c 7047     		bx	lr
 2519              	.L165:
 2520 001e 00BF     		.align	2
 2521              	.L164:
 2522 0020 00100240 		.word	1073876992
 2523              		.cfi_endproc
 2524              	.LFE144:
 2526              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2527              		.align	1
 2528              		.global	HAL_RCC_NMI_IRQHandler
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu fpv4-sp-d16
 2534              	HAL_RCC_NMI_IRQHandler:
 2535              	.LFB145:
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccyQqkg8.s 			page 69


 2536              		.loc 1 1319 1
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 0
 2539              		@ frame_needed = 1, uses_anonymous_args = 0
 2540 0000 80B5     		push	{r7, lr}
 2541              	.LCFI58:
 2542              		.cfi_def_cfa_offset 8
 2543              		.cfi_offset 7, -8
 2544              		.cfi_offset 14, -4
 2545 0002 00AF     		add	r7, sp, #0
 2546              	.LCFI59:
 2547              		.cfi_def_cfa_register 7
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2548              		.loc 1 1321 6
 2549 0004 074B     		ldr	r3, .L169
 2550 0006 DB69     		ldr	r3, [r3, #28]
 2551 0008 03F48073 		and	r3, r3, #256
 2552              		.loc 1 1321 5
 2553 000c B3F5807F 		cmp	r3, #256
 2554 0010 05D1     		bne	.L168
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2555              		.loc 1 1324 5
 2556 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2557              		.loc 1 1327 5
 2558 0016 034B     		ldr	r3, .L169
 2559 0018 4FF48072 		mov	r2, #256
 2560 001c 1A62     		str	r2, [r3, #32]
 2561              	.L168:
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2562              		.loc 1 1329 1
 2563 001e 00BF     		nop
 2564 0020 80BD     		pop	{r7, pc}
 2565              	.L170:
 2566 0022 00BF     		.align	2
 2567              	.L169:
 2568 0024 00100240 		.word	1073876992
 2569              		.cfi_endproc
 2570              	.LFE145:
 2572              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2573              		.align	1
 2574              		.weak	HAL_RCC_CSSCallback
 2575              		.syntax unified
 2576              		.thumb
 2577              		.thumb_func
 2578              		.fpu fpv4-sp-d16
 2580              	HAL_RCC_CSSCallback:
 2581              	.LFB146:
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
ARM GAS  /tmp/ccyQqkg8.s 			page 70


1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval none
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2582              		.loc 1 1336 1
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 0
 2585              		@ frame_needed = 1, uses_anonymous_args = 0
 2586              		@ link register save eliminated.
 2587 0000 80B4     		push	{r7}
 2588              	.LCFI60:
 2589              		.cfi_def_cfa_offset 4
 2590              		.cfi_offset 7, -4
 2591 0002 00AF     		add	r7, sp, #0
 2592              	.LCFI61:
 2593              		.cfi_def_cfa_register 7
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    */
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2594              		.loc 1 1340 1
 2595 0004 00BF     		nop
 2596 0006 BD46     		mov	sp, r7
 2597              	.LCFI62:
 2598              		.cfi_def_cfa_register 13
 2599              		@ sp needed
 2600 0008 5DF8047B 		ldr	r7, [sp], #4
 2601              	.LCFI63:
 2602              		.cfi_restore 7
 2603              		.cfi_def_cfa_offset 0
 2604 000c 7047     		bx	lr
 2605              		.cfi_endproc
 2606              	.LFE146:
 2608              		.section	.text.RCC_GetSysClockFreqFromPLLSource,"ax",%progbits
 2609              		.align	1
 2610              		.syntax unified
 2611              		.thumb
 2612              		.thumb_func
 2613              		.fpu fpv4-sp-d16
 2615              	RCC_GetSysClockFreqFromPLLSource:
 2616              	.LFB147:
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Compute SYSCLK frequency based on PLL SYSCLK source.
ARM GAS  /tmp/ccyQqkg8.s 			page 71


1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** static uint32_t RCC_GetSysClockFreqFromPLLSource(void)
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2617              		.loc 1 1360 1
 2618              		.cfi_startproc
 2619              		@ args = 0, pretend = 0, frame = 24
 2620              		@ frame_needed = 1, uses_anonymous_args = 0
 2621              		@ link register save eliminated.
 2622 0000 80B4     		push	{r7}
 2623              	.LCFI64:
 2624              		.cfi_def_cfa_offset 4
 2625              		.cfi_offset 7, -4
 2626 0002 87B0     		sub	sp, sp, #28
 2627              	.LCFI65:
 2628              		.cfi_def_cfa_offset 32
 2629 0004 00AF     		add	r7, sp, #0
 2630              	.LCFI66:
 2631              		.cfi_def_cfa_register 7
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t sysclockfreq;
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* PLL_VCO = (HSE_VALUE or HSI_VALUE/ PLLM) * PLLN
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****      SYSCLK = PLL_VCO / PLLR
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    */
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2632              		.loc 1 1367 15
 2633 0006 1E4B     		ldr	r3, .L176
 2634 0008 DB68     		ldr	r3, [r3, #12]
 2635              		.loc 1 1367 13
 2636 000a 03F00303 		and	r3, r3, #3
 2637 000e 3B61     		str	r3, [r7, #16]
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 2638              		.loc 1 1368 11
 2639 0010 1B4B     		ldr	r3, .L176
 2640 0012 DB68     		ldr	r3, [r3, #12]
 2641              		.loc 1 1368 52
 2642 0014 1B09     		lsrs	r3, r3, #4
 2643 0016 03F00F03 		and	r3, r3, #15
 2644              		.loc 1 1368 8
 2645 001a 0133     		adds	r3, r3, #1
 2646 001c FB60     		str	r3, [r7, #12]
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   switch (pllsource)
 2647              		.loc 1 1370 3
 2648 001e 3B69     		ldr	r3, [r7, #16]
 2649 0020 032B     		cmp	r3, #3
 2650 0022 0CD1     		bne	.L173
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos
 2651              		.loc 1 1373 25
 2652 0024 174A     		ldr	r2, .L176+4
 2653 0026 FB68     		ldr	r3, [r7, #12]
 2654 0028 B2FBF3F3 		udiv	r3, r2, r3
 2655              		.loc 1 1373 36
 2656 002c 144A     		ldr	r2, .L176
ARM GAS  /tmp/ccyQqkg8.s 			page 72


 2657 002e D268     		ldr	r2, [r2, #12]
 2658              		.loc 1 1373 77
 2659 0030 120A     		lsrs	r2, r2, #8
 2660 0032 02F07F02 		and	r2, r2, #127
 2661              		.loc 1 1373 12
 2662 0036 02FB03F3 		mul	r3, r2, r3
 2663 003a 7B61     		str	r3, [r7, #20]
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     break;
 2664              		.loc 1 1374 5
 2665 003c 0CE0     		b	.L174
 2666              	.L173:
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   default:
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos
 2667              		.loc 1 1378 25
 2668 003e 124A     		ldr	r2, .L176+8
 2669 0040 FB68     		ldr	r3, [r7, #12]
 2670 0042 B2FBF3F3 		udiv	r3, r2, r3
 2671              		.loc 1 1378 36
 2672 0046 0E4A     		ldr	r2, .L176
 2673 0048 D268     		ldr	r2, [r2, #12]
 2674              		.loc 1 1378 77
 2675 004a 120A     		lsrs	r2, r2, #8
 2676 004c 02F07F02 		and	r2, r2, #127
 2677              		.loc 1 1378 12
 2678 0050 02FB03F3 		mul	r3, r2, r3
 2679 0054 7B61     		str	r3, [r7, #20]
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     break;
 2680              		.loc 1 1379 5
 2681 0056 00BF     		nop
 2682              	.L174:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 2683              		.loc 1 1382 12
 2684 0058 094B     		ldr	r3, .L176
 2685 005a DB68     		ldr	r3, [r3, #12]
 2686              		.loc 1 1382 53
 2687 005c 5B0E     		lsrs	r3, r3, #25
 2688 005e 03F00303 		and	r3, r3, #3
 2689              		.loc 1 1382 78
 2690 0062 0133     		adds	r3, r3, #1
 2691              		.loc 1 1382 8
 2692 0064 5B00     		lsls	r3, r3, #1
 2693 0066 BB60     		str	r3, [r7, #8]
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   sysclockfreq = pllvco/pllr;
 2694              		.loc 1 1383 16
 2695 0068 7A69     		ldr	r2, [r7, #20]
 2696 006a BB68     		ldr	r3, [r7, #8]
 2697 006c B2FBF3F3 		udiv	r3, r2, r3
 2698 0070 7B60     		str	r3, [r7, #4]
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return sysclockfreq;
 2699              		.loc 1 1385 10
 2700 0072 7B68     		ldr	r3, [r7, #4]
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
ARM GAS  /tmp/ccyQqkg8.s 			page 73


 2701              		.loc 1 1386 1
 2702 0074 1846     		mov	r0, r3
 2703 0076 1C37     		adds	r7, r7, #28
 2704              	.LCFI67:
 2705              		.cfi_def_cfa_offset 4
 2706 0078 BD46     		mov	sp, r7
 2707              	.LCFI68:
 2708              		.cfi_def_cfa_register 13
 2709              		@ sp needed
 2710 007a 5DF8047B 		ldr	r7, [sp], #4
 2711              	.LCFI69:
 2712              		.cfi_restore 7
 2713              		.cfi_def_cfa_offset 0
 2714 007e 7047     		bx	lr
 2715              	.L177:
 2716              		.align	2
 2717              	.L176:
 2718 0080 00100240 		.word	1073876992
 2719 0084 00127A00 		.word	8000000
 2720 0088 0024F400 		.word	16000000
 2721              		.cfi_endproc
 2722              	.LFE147:
 2724              		.text
 2725              	.Letext0:
 2726              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 2727              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2728              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 2729              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 2730              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2731              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2732              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 2733              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 2734              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccyQqkg8.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_rcc.c
     /tmp/ccyQqkg8.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccyQqkg8.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccyQqkg8.s:202    .text.HAL_RCC_DeInit:00000000000000f4 $d
     /tmp/ccyQqkg8.s:210    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccyQqkg8.s:217    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccyQqkg8.s:638    .text.HAL_RCC_OscConfig:000000000000027c $d
     /tmp/ccyQqkg8.s:642    .text.HAL_RCC_OscConfig:0000000000000284 $t
     /tmp/ccyQqkg8.s:980    .text.HAL_RCC_OscConfig:00000000000004b8 $d
     /tmp/ccyQqkg8.s:984    .text.HAL_RCC_OscConfig:00000000000004c0 $t
     /tmp/ccyQqkg8.s:1216   .text.HAL_RCC_OscConfig:0000000000000618 $d
     /tmp/ccyQqkg8.s:1223   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccyQqkg8.s:1230   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccyQqkg8.s:2615   .text.RCC_GetSysClockFreqFromPLLSource:0000000000000000 RCC_GetSysClockFreqFromPLLSource
     /tmp/ccyQqkg8.s:1755   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccyQqkg8.s:1626   .text.HAL_RCC_ClockConfig:0000000000000260 $d
     /tmp/ccyQqkg8.s:1636   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccyQqkg8.s:1643   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccyQqkg8.s:1743   .text.HAL_RCC_MCOConfig:0000000000000088 $d
     /tmp/ccyQqkg8.s:1748   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccyQqkg8.s:1895   .text.HAL_RCC_GetSysClockFreq:00000000000000b8 $d
     /tmp/ccyQqkg8.s:1902   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccyQqkg8.s:1909   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccyQqkg8.s:1940   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccyQqkg8.s:1945   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccyQqkg8.s:1952   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccyQqkg8.s:1988   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccyQqkg8.s:1994   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccyQqkg8.s:2001   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccyQqkg8.s:2037   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccyQqkg8.s:2043   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccyQqkg8.s:2050   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccyQqkg8.s:2294   .text.HAL_RCC_GetOscConfig:0000000000000160 $d
     /tmp/ccyQqkg8.s:2299   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccyQqkg8.s:2306   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccyQqkg8.s:2383   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccyQqkg8.s:2389   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccyQqkg8.s:2396   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccyQqkg8.s:2430   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/ccyQqkg8.s:2435   .text.HAL_RCC_EnableLSECSS:0000000000000000 $t
     /tmp/ccyQqkg8.s:2442   .text.HAL_RCC_EnableLSECSS:0000000000000000 HAL_RCC_EnableLSECSS
     /tmp/ccyQqkg8.s:2476   .text.HAL_RCC_EnableLSECSS:0000000000000020 $d
     /tmp/ccyQqkg8.s:2481   .text.HAL_RCC_DisableLSECSS:0000000000000000 $t
     /tmp/ccyQqkg8.s:2488   .text.HAL_RCC_DisableLSECSS:0000000000000000 HAL_RCC_DisableLSECSS
     /tmp/ccyQqkg8.s:2522   .text.HAL_RCC_DisableLSECSS:0000000000000020 $d
     /tmp/ccyQqkg8.s:2527   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccyQqkg8.s:2534   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccyQqkg8.s:2580   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccyQqkg8.s:2568   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/ccyQqkg8.s:2573   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccyQqkg8.s:2609   .text.RCC_GetSysClockFreqFromPLLSource:0000000000000000 $t
     /tmp/ccyQqkg8.s:2718   .text.RCC_GetSysClockFreqFromPLLSource:0000000000000080 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
ARM GAS  /tmp/ccyQqkg8.s 			page 75


SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
