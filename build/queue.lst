ARM GAS  /tmp/ccW8mGL0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	xQueueRegistry
  18              		.section	.bss.xQueueRegistry,"aw",%nobits
  19              		.align	2
  22              	xQueueRegistry:
  23 0000 00000000 		.space	64
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.text.xQueueGenericReset,"ax",%progbits
  25              		.align	1
  26              		.global	xQueueGenericReset
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	xQueueGenericReset:
  34              	.LFB5:
  35              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
ARM GAS  /tmp/ccW8mGL0.s 			page 2


  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccW8mGL0.s 			page 3


  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
ARM GAS  /tmp/ccW8mGL0.s 			page 4


 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
ARM GAS  /tmp/ccW8mGL0.s 			page 5


 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
ARM GAS  /tmp/ccW8mGL0.s 			page 6


 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  36              		.loc 1 256 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 16
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  52 0008 3960     		str	r1, [r7]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
  53              		.loc 1 257 17
  54 000a 7B68     		ldr	r3, [r7, #4]
  55 000c FB60     		str	r3, [r7, #12]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
  56              		.loc 1 259 2
  57 000e FB68     		ldr	r3, [r7, #12]
  58 0010 002B     		cmp	r3, #0
  59 0012 0AD1     		bne	.L2
  60              	.LBB93:
  61              	.LBB94:
  62              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
ARM GAS  /tmp/ccW8mGL0.s 			page 7


  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccW8mGL0.s 			page 8


  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
ARM GAS  /tmp/ccW8mGL0.s 			page 9


 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
ARM GAS  /tmp/ccW8mGL0.s 			page 10


 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  63              		.loc 2 195 2
  64              		.syntax unified
  65              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  66 0014 4FF05003 			mov r3, #80												
  67 0018 83F31188 		msr basepri, r3											
  68 001c BFF36F8F 		isb														
  69 0020 BFF34F8F 		dsb														
  70              	
  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74 0024 BB60     		str	r3, [r7, #8]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  75              		.loc 2 203 1
  76 0026 00BF     		nop
  77              	.L3:
  78              	.LBE94:
  79              	.LBE93:
  80              		.loc 1 259 2 discriminator 1
  81 0028 FEE7     		b	.L3
  82              	.L2:
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  83              		.loc 1 261 2
  84 002a FFF7FEFF 		bl	vPortEnterCritical
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
  85              		.loc 1 263 37
  86 002e FB68     		ldr	r3, [r7, #12]
  87 0030 1A68     		ldr	r2, [r3]
  88              		.loc 1 263 57
  89 0032 FB68     		ldr	r3, [r7, #12]
  90 0034 DB6B     		ldr	r3, [r3, #60]
  91              		.loc 1 263 77
  92 0036 F968     		ldr	r1, [r7, #12]
  93 0038 096C     		ldr	r1, [r1, #64]
  94              		.loc 1 263 68
  95 003a 01FB03F3 		mul	r3, r1, r3
  96              		.loc 1 263 46
  97 003e 1A44     		add	r2, r2, r3
  98              		.loc 1 263 28
  99 0040 FB68     		ldr	r3, [r7, #12]
 100 0042 9A60     		str	r2, [r3, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 101              		.loc 1 264 30
 102 0044 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccW8mGL0.s 			page 11


 103 0046 0022     		movs	r2, #0
 104 0048 9A63     		str	r2, [r3, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 105              		.loc 1 265 31
 106 004a FB68     		ldr	r3, [r7, #12]
 107 004c 1A68     		ldr	r2, [r3]
 108              		.loc 1 265 22
 109 004e FB68     		ldr	r3, [r7, #12]
 110 0050 5A60     		str	r2, [r3, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 111              		.loc 1 266 41
 112 0052 FB68     		ldr	r3, [r7, #12]
 113 0054 1A68     		ldr	r2, [r3]
 114              		.loc 1 266 63
 115 0056 FB68     		ldr	r3, [r7, #12]
 116 0058 DB6B     		ldr	r3, [r3, #60]
 117              		.loc 1 266 74
 118 005a 013B     		subs	r3, r3, #1
 119              		.loc 1 266 90
 120 005c F968     		ldr	r1, [r7, #12]
 121 005e 096C     		ldr	r1, [r1, #64]
 122              		.loc 1 266 81
 123 0060 01FB03F3 		mul	r3, r1, r3
 124              		.loc 1 266 50
 125 0064 1A44     		add	r2, r2, r3
 126              		.loc 1 266 32
 127 0066 FB68     		ldr	r3, [r7, #12]
 128 0068 DA60     		str	r2, [r3, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 129              		.loc 1 267 20
 130 006a FB68     		ldr	r3, [r7, #12]
 131 006c FF22     		movs	r2, #255
 132 006e 83F84420 		strb	r2, [r3, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 133              		.loc 1 268 20
 134 0072 FB68     		ldr	r3, [r7, #12]
 135 0074 FF22     		movs	r2, #255
 136 0076 83F84520 		strb	r2, [r3, #69]
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 137              		.loc 1 270 5
 138 007a 3B68     		ldr	r3, [r7]
 139 007c 002B     		cmp	r3, #0
 140 007e 14D1     		bne	.L4
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 141              		.loc 1 277 8
 142 0080 FB68     		ldr	r3, [r7, #12]
 143 0082 1B69     		ldr	r3, [r3, #16]
 144              		.loc 1 277 6
 145 0084 002B     		cmp	r3, #0
 146 0086 1AD0     		beq	.L5
ARM GAS  /tmp/ccW8mGL0.s 			page 12


 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 147              		.loc 1 279 35
 148 0088 FB68     		ldr	r3, [r7, #12]
 149 008a 1033     		adds	r3, r3, #16
 150              		.loc 1 279 9
 151 008c 1846     		mov	r0, r3
 152 008e FFF7FEFF 		bl	xTaskRemoveFromEventList
 153 0092 0346     		mov	r3, r0
 154              		.loc 1 279 7
 155 0094 002B     		cmp	r3, #0
 156 0096 12D0     		beq	.L5
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 157              		.loc 1 281 6
 158 0098 0C4B     		ldr	r3, .L7
 159 009a 4FF08052 		mov	r2, #268435456
 160 009e 1A60     		str	r2, [r3]
 161              		.syntax unified
 162              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 163 00a0 BFF34F8F 		dsb
 164              	@ 0 "" 2
 165              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 166 00a4 BFF36F8F 		isb
 167              	@ 0 "" 2
 168              		.thumb
 169              		.syntax unified
 170 00a8 09E0     		b	.L5
 171              	.L4:
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 172              		.loc 1 296 4
 173 00aa FB68     		ldr	r3, [r7, #12]
 174 00ac 1033     		adds	r3, r3, #16
 175 00ae 1846     		mov	r0, r3
 176 00b0 FFF7FEFF 		bl	vListInitialise
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 177              		.loc 1 297 4
 178 00b4 FB68     		ldr	r3, [r7, #12]
 179 00b6 2433     		adds	r3, r3, #36
 180 00b8 1846     		mov	r0, r3
 181 00ba FFF7FEFF 		bl	vListInitialise
 182              	.L5:
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccW8mGL0.s 			page 13


 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 183              		.loc 1 300 2
 184 00be FFF7FEFF 		bl	vPortExitCritical
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 185              		.loc 1 304 9
 186 00c2 0123     		movs	r3, #1
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 187              		.loc 1 305 1
 188 00c4 1846     		mov	r0, r3
 189 00c6 1037     		adds	r7, r7, #16
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192 00c8 BD46     		mov	sp, r7
 193              	.LCFI4:
 194              		.cfi_def_cfa_register 13
 195              		@ sp needed
 196 00ca 80BD     		pop	{r7, pc}
 197              	.L8:
 198              		.align	2
 199              	.L7:
 200 00cc 04ED00E0 		.word	-536810236
 201              		.cfi_endproc
 202              	.LFE5:
 204              		.section	.text.xQueueGenericCreate,"ax",%progbits
 205              		.align	1
 206              		.global	xQueueGenericCreate
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	xQueueGenericCreate:
 213              	.LFB6:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccW8mGL0.s 			page 14


 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 214              		.loc 1 369 2
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 32
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              	.LCFI5:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 8AB0     		sub	sp, sp, #40
 224              	.LCFI6:
 225              		.cfi_def_cfa_offset 48
 226 0004 02AF     		add	r7, sp, #8
 227              	.LCFI7:
ARM GAS  /tmp/ccW8mGL0.s 			page 15


 228              		.cfi_def_cfa 7, 40
 229 0006 F860     		str	r0, [r7, #12]
 230 0008 B960     		str	r1, [r7, #8]
 231 000a 1346     		mov	r3, r2
 232 000c FB71     		strb	r3, [r7, #7]
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 233              		.loc 1 374 3
 234 000e FB68     		ldr	r3, [r7, #12]
 235 0010 002B     		cmp	r3, #0
 236 0012 0AD1     		bne	.L10
 237              	.LBB95:
 238              	.LBB96:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 239              		.loc 2 195 2
 240              		.syntax unified
 241              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 242 0014 4FF05003 			mov r3, #80												
 243 0018 83F31188 		msr basepri, r3											
 244 001c BFF36F8F 		isb														
 245 0020 BFF34F8F 		dsb														
 246              	
 247              	@ 0 "" 2
 248              		.thumb
 249              		.syntax unified
 250 0024 3B61     		str	r3, [r7, #16]
 251              		.loc 2 203 1
 252 0026 00BF     		nop
 253              	.L11:
 254              	.LBE96:
 255              	.LBE95:
 256              		.loc 1 374 3 discriminator 1
 257 0028 FEE7     		b	.L11
 258              	.L10:
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate enough space to hold the maximum number of items that
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		can be in the queue at any time.  It is valid for uxItemSize to be
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		zero in the case the queue is used as a semaphore. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as th
 259              		.loc 1 379 21
 260 002a FB68     		ldr	r3, [r7, #12]
 261 002c BA68     		ldr	r2, [r7, #8]
 262 002e 02FB03F3 		mul	r3, r2, r3
 263 0032 FB61     		str	r3, [r7, #28]
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
ARM GAS  /tmp/ccW8mGL0.s 			page 16


 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 264              		.loc 1 390 30
 265 0034 FB69     		ldr	r3, [r7, #28]
 266 0036 4833     		adds	r3, r3, #72
 267 0038 1846     		mov	r0, r3
 268 003a FFF7FEFF 		bl	pvPortMalloc
 269 003e B861     		str	r0, [r7, #24]
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 270              		.loc 1 392 5
 271 0040 BB69     		ldr	r3, [r7, #24]
 272 0042 002B     		cmp	r3, #0
 273 0044 0DD0     		beq	.L12
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 274              		.loc 1 396 20
 275 0046 BB69     		ldr	r3, [r7, #24]
 276 0048 7B61     		str	r3, [r7, #20]
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 277              		.loc 1 397 20
 278 004a 7B69     		ldr	r3, [r7, #20]
 279 004c 4833     		adds	r3, r3, #72
 280 004e 7B61     		str	r3, [r7, #20]
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 281              		.loc 1 408 4
 282 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 283 0052 BB69     		ldr	r3, [r7, #24]
 284 0054 0093     		str	r3, [sp]
 285 0056 1346     		mov	r3, r2
 286 0058 7A69     		ldr	r2, [r7, #20]
 287 005a B968     		ldr	r1, [r7, #8]
 288 005c F868     		ldr	r0, [r7, #12]
 289 005e FFF7FEFF 		bl	prvInitialiseNewQueue
 290              	.L12:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 291              		.loc 1 416 10
 292 0062 BB69     		ldr	r3, [r7, #24]
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccW8mGL0.s 			page 17


 293              		.loc 1 417 2
 294 0064 1846     		mov	r0, r3
 295 0066 2037     		adds	r7, r7, #32
 296              	.LCFI8:
 297              		.cfi_def_cfa_offset 8
 298 0068 BD46     		mov	sp, r7
 299              	.LCFI9:
 300              		.cfi_def_cfa_register 13
 301              		@ sp needed
 302 006a 80BD     		pop	{r7, pc}
 303              		.cfi_endproc
 304              	.LFE6:
 306              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 307              		.align	1
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	prvInitialiseNewQueue:
 314              	.LFB7:
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 315              		.loc 1 423 1
 316              		.cfi_startproc
 317              		@ args = 4, pretend = 0, frame = 16
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              	.LCFI10:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 7, -8
 323              		.cfi_offset 14, -4
 324 0002 84B0     		sub	sp, sp, #16
 325              	.LCFI11:
 326              		.cfi_def_cfa_offset 24
 327 0004 00AF     		add	r7, sp, #0
 328              	.LCFI12:
 329              		.cfi_def_cfa_register 7
 330 0006 F860     		str	r0, [r7, #12]
 331 0008 B960     		str	r1, [r7, #8]
 332 000a 7A60     		str	r2, [r7, #4]
 333 000c FB70     		strb	r3, [r7, #3]
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 334              		.loc 1 428 4
 335 000e BB68     		ldr	r3, [r7, #8]
 336 0010 002B     		cmp	r3, #0
 337 0012 03D1     		bne	.L15
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
ARM GAS  /tmp/ccW8mGL0.s 			page 18


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 338              		.loc 1 434 22
 339 0014 BB69     		ldr	r3, [r7, #24]
 340 0016 BA69     		ldr	r2, [r7, #24]
 341 0018 1A60     		str	r2, [r3]
 342 001a 02E0     		b	.L16
 343              	.L15:
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 344              		.loc 1 439 22
 345 001c BB69     		ldr	r3, [r7, #24]
 346 001e 7A68     		ldr	r2, [r7, #4]
 347 0020 1A60     		str	r2, [r3]
 348              	.L16:
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 349              		.loc 1 444 23
 350 0022 BB69     		ldr	r3, [r7, #24]
 351 0024 FA68     		ldr	r2, [r7, #12]
 352 0026 DA63     		str	r2, [r3, #60]
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 353              		.loc 1 445 25
 354 0028 BB69     		ldr	r3, [r7, #24]
 355 002a BA68     		ldr	r2, [r7, #8]
 356 002c 1A64     		str	r2, [r3, #64]
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 357              		.loc 1 446 11
 358 002e 0121     		movs	r1, #1
 359 0030 B869     		ldr	r0, [r7, #24]
 360 0032 FFF7FEFF 		bl	xQueueGenericReset
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 361              		.loc 1 461 1
 362 0036 00BF     		nop
 363 0038 1037     		adds	r7, r7, #16
 364              	.LCFI13:
ARM GAS  /tmp/ccW8mGL0.s 			page 19


 365              		.cfi_def_cfa_offset 8
 366 003a BD46     		mov	sp, r7
 367              	.LCFI14:
 368              		.cfi_def_cfa_register 13
 369              		@ sp needed
 370 003c 80BD     		pop	{r7, pc}
 371              		.cfi_endproc
 372              	.LFE7:
 374              		.section	.text.prvInitialiseMutex,"ax",%progbits
 375              		.align	1
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv4-sp-d16
 381              	prvInitialiseMutex:
 382              	.LFB8:
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 383              		.loc 1 467 2
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              	.LCFI15:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 82B0     		sub	sp, sp, #8
 393              	.LCFI16:
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              	.LCFI17:
 397              		.cfi_def_cfa_register 7
 398 0006 7860     		str	r0, [r7, #4]
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 399              		.loc 1 468 5
 400 0008 7B68     		ldr	r3, [r7, #4]
 401 000a 002B     		cmp	r3, #0
 402 000c 0ED0     		beq	.L19
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 403              		.loc 1 474 42
 404 000e 7B68     		ldr	r3, [r7, #4]
 405 0010 0022     		movs	r2, #0
 406 0012 9A60     		str	r2, [r3, #8]
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 407              		.loc 1 475 28
 408 0014 7B68     		ldr	r3, [r7, #4]
 409 0016 0022     		movs	r2, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 20


 410 0018 1A60     		str	r2, [r3]
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 411              		.loc 1 478 50
 412 001a 7B68     		ldr	r3, [r7, #4]
 413 001c 0022     		movs	r2, #0
 414 001e DA60     		str	r2, [r3, #12]
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 415              		.loc 1 483 13
 416 0020 0023     		movs	r3, #0
 417 0022 0022     		movs	r2, #0
 418 0024 0021     		movs	r1, #0
 419 0026 7868     		ldr	r0, [r7, #4]
 420 0028 FFF7FEFF 		bl	xQueueGenericSend
 421              	.L19:
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422              		.loc 1 489 2
 423 002c 00BF     		nop
 424 002e 0837     		adds	r7, r7, #8
 425              	.LCFI18:
 426              		.cfi_def_cfa_offset 8
 427 0030 BD46     		mov	sp, r7
 428              	.LCFI19:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 0032 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE8:
 435              		.section	.text.xQueueCreateMutex,"ax",%progbits
 436              		.align	1
 437              		.global	xQueueCreateMutex
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	xQueueCreateMutex:
 444              	.LFB9:
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 445              		.loc 1 497 2
 446              		.cfi_startproc
ARM GAS  /tmp/ccW8mGL0.s 			page 21


 447              		@ args = 0, pretend = 0, frame = 24
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI20:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 86B0     		sub	sp, sp, #24
 455              	.LCFI21:
 456              		.cfi_def_cfa_offset 32
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI22:
 459              		.cfi_def_cfa_register 7
 460 0006 0346     		mov	r3, r0
 461 0008 FB71     		strb	r3, [r7, #7]
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 462              		.loc 1 499 20
 463 000a 0123     		movs	r3, #1
 464 000c 7B61     		str	r3, [r7, #20]
 465              		.loc 1 499 55
 466 000e 0023     		movs	r3, #0
 467 0010 3B61     		str	r3, [r7, #16]
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 468              		.loc 1 501 15
 469 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 470 0014 1A46     		mov	r2, r3
 471 0016 3969     		ldr	r1, [r7, #16]
 472 0018 7869     		ldr	r0, [r7, #20]
 473 001a FFF7FEFF 		bl	xQueueGenericCreate
 474 001e F860     		str	r0, [r7, #12]
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 475              		.loc 1 502 3
 476 0020 F868     		ldr	r0, [r7, #12]
 477 0022 FFF7FEFF 		bl	prvInitialiseMutex
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 478              		.loc 1 504 10
 479 0026 FB68     		ldr	r3, [r7, #12]
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 480              		.loc 1 505 2
 481 0028 1846     		mov	r0, r3
 482 002a 1837     		adds	r7, r7, #24
 483              	.LCFI23:
 484              		.cfi_def_cfa_offset 8
 485 002c BD46     		mov	sp, r7
 486              	.LCFI24:
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 002e 80BD     		pop	{r7, pc}
 490              		.cfi_endproc
 491              	.LFE9:
 493              		.section	.text.xQueueGenericSend,"ax",%progbits
 494              		.align	1
 495              		.global	xQueueGenericSend
 496              		.syntax unified
ARM GAS  /tmp/ccW8mGL0.s 			page 22


 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	xQueueGenericSend:
 502              	.LFB10:
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccW8mGL0.s 			page 23


 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccW8mGL0.s 			page 24


 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccW8mGL0.s 			page 25


 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccW8mGL0.s 			page 26


 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 503              		.loc 1 741 1
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 56
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507 0000 80B5     		push	{r7, lr}
 508              	.LCFI25:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 8EB0     		sub	sp, sp, #56
 513              	.LCFI26:
 514              		.cfi_def_cfa_offset 64
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI27:
 517              		.cfi_def_cfa_register 7
 518 0006 F860     		str	r0, [r7, #12]
 519 0008 B960     		str	r1, [r7, #8]
 520 000a 7A60     		str	r2, [r7, #4]
 521 000c 3B60     		str	r3, [r7]
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 522              		.loc 1 742 12
 523 000e 0023     		movs	r3, #0
 524 0010 7B63     		str	r3, [r7, #52]
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 525              		.loc 1 744 17
 526 0012 FB68     		ldr	r3, [r7, #12]
 527 0014 3B63     		str	r3, [r7, #48]
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 528              		.loc 1 746 2
 529 0016 3B6B     		ldr	r3, [r7, #48]
 530 0018 002B     		cmp	r3, #0
 531 001a 0AD1     		bne	.L23
 532              	.LBB97:
 533              	.LBB98:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 534              		.loc 2 195 2
 535              		.syntax unified
 536              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 537 001c 4FF05003 			mov r3, #80												
 538 0020 83F31188 		msr basepri, r3											
 539 0024 BFF36F8F 		isb														
 540 0028 BFF34F8F 		dsb														
ARM GAS  /tmp/ccW8mGL0.s 			page 27


 541              	
 542              	@ 0 "" 2
 543              		.thumb
 544              		.syntax unified
 545 002c BB62     		str	r3, [r7, #40]
 546              		.loc 2 203 1
 547 002e 00BF     		nop
 548              	.L24:
 549              	.LBE98:
 550              	.LBE97:
 551              		.loc 1 746 2 discriminator 1
 552 0030 FEE7     		b	.L24
 553              	.L23:
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 554              		.loc 1 747 2
 555 0032 BB68     		ldr	r3, [r7, #8]
 556 0034 002B     		cmp	r3, #0
 557 0036 03D1     		bne	.L25
 558              		.loc 1 747 2 is_stmt 0 discriminator 2
 559 0038 3B6B     		ldr	r3, [r7, #48]
 560 003a 1B6C     		ldr	r3, [r3, #64]
 561 003c 002B     		cmp	r3, #0
 562 003e 01D1     		bne	.L26
 563              	.L25:
 564              		.loc 1 747 2 discriminator 3
 565 0040 0123     		movs	r3, #1
 566 0042 00E0     		b	.L27
 567              	.L26:
 568              		.loc 1 747 2 discriminator 4
 569 0044 0023     		movs	r3, #0
 570              	.L27:
 571              		.loc 1 747 2 discriminator 6
 572 0046 002B     		cmp	r3, #0
 573 0048 0AD1     		bne	.L28
 574              	.LBB99:
 575              	.LBB100:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 576              		.loc 2 195 2 is_stmt 1
 577              		.syntax unified
 578              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 579 004a 4FF05003 			mov r3, #80												
 580 004e 83F31188 		msr basepri, r3											
 581 0052 BFF36F8F 		isb														
 582 0056 BFF34F8F 		dsb														
 583              	
 584              	@ 0 "" 2
 585              		.thumb
 586              		.syntax unified
 587 005a 7B62     		str	r3, [r7, #36]
 588              		.loc 2 203 1
 589 005c 00BF     		nop
 590              	.L29:
 591              	.LBE100:
 592              	.LBE99:
 593              		.loc 1 747 2 discriminator 2
 594 005e FEE7     		b	.L29
 595              	.L28:
ARM GAS  /tmp/ccW8mGL0.s 			page 28


 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 596              		.loc 1 748 2
 597 0060 3B68     		ldr	r3, [r7]
 598 0062 022B     		cmp	r3, #2
 599 0064 03D1     		bne	.L30
 600              		.loc 1 748 2 is_stmt 0 discriminator 2
 601 0066 3B6B     		ldr	r3, [r7, #48]
 602 0068 DB6B     		ldr	r3, [r3, #60]
 603 006a 012B     		cmp	r3, #1
 604 006c 01D1     		bne	.L31
 605              	.L30:
 606              		.loc 1 748 2 discriminator 3
 607 006e 0123     		movs	r3, #1
 608 0070 00E0     		b	.L32
 609              	.L31:
 610              		.loc 1 748 2 discriminator 4
 611 0072 0023     		movs	r3, #0
 612              	.L32:
 613              		.loc 1 748 2 discriminator 6
 614 0074 002B     		cmp	r3, #0
 615 0076 0AD1     		bne	.L33
 616              	.LBB101:
 617              	.LBB102:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 618              		.loc 2 195 2 is_stmt 1
 619              		.syntax unified
 620              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 621 0078 4FF05003 			mov r3, #80												
 622 007c 83F31188 		msr basepri, r3											
 623 0080 BFF36F8F 		isb														
 624 0084 BFF34F8F 		dsb														
 625              	
 626              	@ 0 "" 2
 627              		.thumb
 628              		.syntax unified
 629 0088 3B62     		str	r3, [r7, #32]
 630              		.loc 2 203 1
 631 008a 00BF     		nop
 632              	.L34:
 633              	.LBE102:
 634              	.LBE101:
 635              		.loc 1 748 2 discriminator 3
 636 008c FEE7     		b	.L34
 637              	.L33:
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 638              		.loc 1 751 3
 639 008e FFF7FEFF 		bl	xTaskGetSchedulerState
 640 0092 0346     		mov	r3, r0
 641 0094 002B     		cmp	r3, #0
 642 0096 02D1     		bne	.L35
 643              		.loc 1 751 3 is_stmt 0 discriminator 2
 644 0098 7B68     		ldr	r3, [r7, #4]
 645 009a 002B     		cmp	r3, #0
 646 009c 01D1     		bne	.L36
 647              	.L35:
ARM GAS  /tmp/ccW8mGL0.s 			page 29


 648              		.loc 1 751 3 discriminator 3
 649 009e 0123     		movs	r3, #1
 650 00a0 00E0     		b	.L37
 651              	.L36:
 652              		.loc 1 751 3 discriminator 4
 653 00a2 0023     		movs	r3, #0
 654              	.L37:
 655              		.loc 1 751 3 discriminator 6
 656 00a4 002B     		cmp	r3, #0
 657 00a6 0AD1     		bne	.L38
 658              	.LBB103:
 659              	.LBB104:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 660              		.loc 2 195 2 is_stmt 1
 661              		.syntax unified
 662              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 663 00a8 4FF05003 			mov r3, #80												
 664 00ac 83F31188 		msr basepri, r3											
 665 00b0 BFF36F8F 		isb														
 666 00b4 BFF34F8F 		dsb														
 667              	
 668              	@ 0 "" 2
 669              		.thumb
 670              		.syntax unified
 671 00b8 FB61     		str	r3, [r7, #28]
 672              		.loc 2 203 1
 673 00ba 00BF     		nop
 674              	.L39:
 675              	.LBE104:
 676              	.LBE103:
 677              		.loc 1 751 3 discriminator 4
 678 00bc FEE7     		b	.L39
 679              	.L38:
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 680              		.loc 1 761 3
 681 00be FFF7FEFF 		bl	vPortEnterCritical
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 682              		.loc 1 767 17
 683 00c2 3B6B     		ldr	r3, [r7, #48]
 684 00c4 9A6B     		ldr	r2, [r3, #56]
 685              		.loc 1 767 46
 686 00c6 3B6B     		ldr	r3, [r7, #48]
 687 00c8 DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccW8mGL0.s 			page 30


 688              		.loc 1 767 6
 689 00ca 9A42     		cmp	r2, r3
 690 00cc 02D3     		bcc	.L40
 691              		.loc 1 767 59 discriminator 1
 692 00ce 3B68     		ldr	r3, [r7]
 693 00d0 022B     		cmp	r3, #2
 694 00d2 29D1     		bne	.L41
 695              	.L40:
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  /tmp/ccW8mGL0.s 			page 31


 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 696              		.loc 1 833 23
 697 00d4 3A68     		ldr	r2, [r7]
 698 00d6 B968     		ldr	r1, [r7, #8]
 699 00d8 386B     		ldr	r0, [r7, #48]
 700 00da FFF7FEFF 		bl	prvCopyDataToQueue
 701 00de F862     		str	r0, [r7, #44]
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 702              		.loc 1 837 10
 703 00e0 3B6B     		ldr	r3, [r7, #48]
 704 00e2 5B6A     		ldr	r3, [r3, #36]
 705              		.loc 1 837 8
 706 00e4 002B     		cmp	r3, #0
 707 00e6 10D0     		beq	.L42
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 708              		.loc 1 839 37
 709 00e8 3B6B     		ldr	r3, [r7, #48]
 710 00ea 2433     		adds	r3, r3, #36
 711              		.loc 1 839 11
 712 00ec 1846     		mov	r0, r3
 713 00ee FFF7FEFF 		bl	xTaskRemoveFromEventList
 714 00f2 0346     		mov	r3, r0
 715              		.loc 1 839 9
 716 00f4 002B     		cmp	r3, #0
 717 00f6 13D0     		beq	.L43
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 718              		.loc 1 845 8
 719 00f8 3F4B     		ldr	r3, .L53
 720 00fa 4FF08052 		mov	r2, #268435456
 721 00fe 1A60     		str	r2, [r3]
 722              		.syntax unified
 723              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
ARM GAS  /tmp/ccW8mGL0.s 			page 32


 724 0100 BFF34F8F 		dsb
 725              	@ 0 "" 2
 726              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 727 0104 BFF36F8F 		isb
 728              	@ 0 "" 2
 729              		.thumb
 730              		.syntax unified
 731 0108 0AE0     		b	.L43
 732              	.L42:
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 733              		.loc 1 852 13
 734 010a FB6A     		ldr	r3, [r7, #44]
 735 010c 002B     		cmp	r3, #0
 736 010e 07D0     		beq	.L43
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 737              		.loc 1 858 7
 738 0110 394B     		ldr	r3, .L53
 739 0112 4FF08052 		mov	r2, #268435456
 740 0116 1A60     		str	r2, [r3]
 741              		.syntax unified
 742              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 743 0118 BFF34F8F 		dsb
 744              	@ 0 "" 2
 745              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 746 011c BFF36F8F 		isb
 747              	@ 0 "" 2
 748              		.thumb
 749              		.syntax unified
 750              	.L43:
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 751              		.loc 1 867 5
 752 0120 FFF7FEFF 		bl	vPortExitCritical
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 753              		.loc 1 868 12
 754 0124 0123     		movs	r3, #1
 755 0126 63E0     		b	.L52
 756              	.L41:
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccW8mGL0.s 			page 33


 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 757              		.loc 1 872 22
 758 0128 7B68     		ldr	r3, [r7, #4]
 759              		.loc 1 872 7
 760 012a 002B     		cmp	r3, #0
 761 012c 03D1     		bne	.L45
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 762              		.loc 1 876 6
 763 012e FFF7FEFF 		bl	vPortExitCritical
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 764              		.loc 1 881 13
 765 0132 0023     		movs	r3, #0
 766 0134 5CE0     		b	.L52
 767              	.L45:
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 768              		.loc 1 883 12
 769 0136 7B6B     		ldr	r3, [r7, #52]
 770 0138 002B     		cmp	r3, #0
 771 013a 06D1     		bne	.L46
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 772              		.loc 1 887 6
 773 013c 07F11403 		add	r3, r7, #20
 774 0140 1846     		mov	r0, r3
 775 0142 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 776              		.loc 1 888 20
 777 0146 0123     		movs	r3, #1
 778 0148 7B63     		str	r3, [r7, #52]
 779              	.L46:
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 780              		.loc 1 897 3
 781 014a FFF7FEFF 		bl	vPortExitCritical
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccW8mGL0.s 			page 34


 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 782              		.loc 1 902 3
 783 014e FFF7FEFF 		bl	vTaskSuspendAll
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 784              		.loc 1 903 3
 785 0152 FFF7FEFF 		bl	vPortEnterCritical
 786 0156 3B6B     		ldr	r3, [r7, #48]
 787 0158 93F84430 		ldrb	r3, [r3, #68]
 788 015c 5BB2     		sxtb	r3, r3
 789 015e B3F1FF3F 		cmp	r3, #-1
 790 0162 03D1     		bne	.L47
 791              		.loc 1 903 3 is_stmt 0 discriminator 1
 792 0164 3B6B     		ldr	r3, [r7, #48]
 793 0166 0022     		movs	r2, #0
 794 0168 83F84420 		strb	r2, [r3, #68]
 795              	.L47:
 796              		.loc 1 903 3 discriminator 3
 797 016c 3B6B     		ldr	r3, [r7, #48]
 798 016e 93F84530 		ldrb	r3, [r3, #69]
 799 0172 5BB2     		sxtb	r3, r3
 800 0174 B3F1FF3F 		cmp	r3, #-1
 801 0178 03D1     		bne	.L48
 802              		.loc 1 903 3 discriminator 4
 803 017a 3B6B     		ldr	r3, [r7, #48]
 804 017c 0022     		movs	r2, #0
 805 017e 83F84520 		strb	r2, [r3, #69]
 806              	.L48:
 807              		.loc 1 903 3 discriminator 6
 808 0182 FFF7FEFF 		bl	vPortExitCritical
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 809              		.loc 1 906 7 is_stmt 1 discriminator 6
 810 0186 3A1D     		adds	r2, r7, #4
 811 0188 07F11403 		add	r3, r7, #20
 812 018c 1146     		mov	r1, r2
 813 018e 1846     		mov	r0, r3
 814 0190 FFF7FEFF 		bl	xTaskCheckForTimeOut
 815 0194 0346     		mov	r3, r0
 816              		.loc 1 906 5 discriminator 6
 817 0196 002B     		cmp	r3, #0
 818 0198 24D1     		bne	.L49
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 819              		.loc 1 908 8
 820 019a 386B     		ldr	r0, [r7, #48]
 821 019c FFF7FEFF 		bl	prvIsQueueFull
 822 01a0 0346     		mov	r3, r0
 823              		.loc 1 908 6
 824 01a2 002B     		cmp	r3, #0
 825 01a4 18D0     		beq	.L50
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 826              		.loc 1 911 5
 827 01a6 3B6B     		ldr	r3, [r7, #48]
 828 01a8 1033     		adds	r3, r3, #16
ARM GAS  /tmp/ccW8mGL0.s 			page 35


 829 01aa 7A68     		ldr	r2, [r7, #4]
 830 01ac 1146     		mov	r1, r2
 831 01ae 1846     		mov	r0, r3
 832 01b0 FFF7FEFF 		bl	vTaskPlaceOnEventList
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 833              		.loc 1 918 5
 834 01b4 386B     		ldr	r0, [r7, #48]
 835 01b6 FFF7FEFF 		bl	prvUnlockQueue
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 836              		.loc 1 925 9
 837 01ba FFF7FEFF 		bl	xTaskResumeAll
 838 01be 0346     		mov	r3, r0
 839              		.loc 1 925 7
 840 01c0 002B     		cmp	r3, #0
 841 01c2 7FF47CAF 		bne	.L38
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 842              		.loc 1 927 6
 843 01c6 0C4B     		ldr	r3, .L53
 844 01c8 4FF08052 		mov	r2, #268435456
 845 01cc 1A60     		str	r2, [r3]
 846              		.syntax unified
 847              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 848 01ce BFF34F8F 		dsb
 849              	@ 0 "" 2
 850              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 851 01d2 BFF36F8F 		isb
 852              	@ 0 "" 2
 853              		.thumb
 854              		.syntax unified
 855 01d6 72E7     		b	.L38
 856              	.L50:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 857              		.loc 1 933 5
 858 01d8 386B     		ldr	r0, [r7, #48]
 859 01da FFF7FEFF 		bl	prvUnlockQueue
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 860              		.loc 1 934 14
 861 01de FFF7FEFF 		bl	xTaskResumeAll
 862 01e2 6CE7     		b	.L38
ARM GAS  /tmp/ccW8mGL0.s 			page 36


 863              	.L49:
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 864              		.loc 1 940 4
 865 01e4 386B     		ldr	r0, [r7, #48]
 866 01e6 FFF7FEFF 		bl	prvUnlockQueue
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 867              		.loc 1 941 13
 868 01ea FFF7FEFF 		bl	xTaskResumeAll
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 869              		.loc 1 944 11
 870 01ee 0023     		movs	r3, #0
 871              	.L52:
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 872              		.loc 1 947 1 discriminator 7
 873 01f0 1846     		mov	r0, r3
 874 01f2 3837     		adds	r7, r7, #56
 875              	.LCFI28:
 876              		.cfi_def_cfa_offset 8
 877 01f4 BD46     		mov	sp, r7
 878              	.LCFI29:
 879              		.cfi_def_cfa_register 13
 880              		@ sp needed
 881 01f6 80BD     		pop	{r7, pc}
 882              	.L54:
 883              		.align	2
 884              	.L53:
 885 01f8 04ED00E0 		.word	-536810236
 886              		.cfi_endproc
 887              	.LFE10:
 889              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 890              		.align	1
 891              		.global	xQueueGenericSendFromISR
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv4-sp-d16
 897              	xQueueGenericSendFromISR:
 898              	.LFB11:
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 899              		.loc 1 951 1
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 64
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              	.LCFI30:
ARM GAS  /tmp/ccW8mGL0.s 			page 37


 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 7, -8
 907              		.cfi_offset 14, -4
 908 0002 90B0     		sub	sp, sp, #64
 909              	.LCFI31:
 910              		.cfi_def_cfa_offset 72
 911 0004 00AF     		add	r7, sp, #0
 912              	.LCFI32:
 913              		.cfi_def_cfa_register 7
 914 0006 F860     		str	r0, [r7, #12]
 915 0008 B960     		str	r1, [r7, #8]
 916 000a 7A60     		str	r2, [r7, #4]
 917 000c 3B60     		str	r3, [r7]
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 918              		.loc 1 954 17
 919 000e FB68     		ldr	r3, [r7, #12]
 920 0010 BB63     		str	r3, [r7, #56]
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 921              		.loc 1 956 2
 922 0012 BB6B     		ldr	r3, [r7, #56]
 923 0014 002B     		cmp	r3, #0
 924 0016 0AD1     		bne	.L56
 925              	.LBB105:
 926              	.LBB106:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 927              		.loc 2 195 2
 928              		.syntax unified
 929              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 930 0018 4FF05003 			mov r3, #80												
 931 001c 83F31188 		msr basepri, r3											
 932 0020 BFF36F8F 		isb														
 933 0024 BFF34F8F 		dsb														
 934              	
 935              	@ 0 "" 2
 936              		.thumb
 937              		.syntax unified
 938 0028 BB62     		str	r3, [r7, #40]
 939              		.loc 2 203 1
 940 002a 00BF     		nop
 941              	.L57:
 942              	.LBE106:
 943              	.LBE105:
 944              		.loc 1 956 2 discriminator 1
 945 002c FEE7     		b	.L57
 946              	.L56:
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 947              		.loc 1 957 2
 948 002e BB68     		ldr	r3, [r7, #8]
 949 0030 002B     		cmp	r3, #0
 950 0032 03D1     		bne	.L58
 951              		.loc 1 957 2 is_stmt 0 discriminator 2
 952 0034 BB6B     		ldr	r3, [r7, #56]
 953 0036 1B6C     		ldr	r3, [r3, #64]
 954 0038 002B     		cmp	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 38


 955 003a 01D1     		bne	.L59
 956              	.L58:
 957              		.loc 1 957 2 discriminator 3
 958 003c 0123     		movs	r3, #1
 959 003e 00E0     		b	.L60
 960              	.L59:
 961              		.loc 1 957 2 discriminator 4
 962 0040 0023     		movs	r3, #0
 963              	.L60:
 964              		.loc 1 957 2 discriminator 6
 965 0042 002B     		cmp	r3, #0
 966 0044 0AD1     		bne	.L61
 967              	.LBB107:
 968              	.LBB108:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 969              		.loc 2 195 2 is_stmt 1
 970              		.syntax unified
 971              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 972 0046 4FF05003 			mov r3, #80												
 973 004a 83F31188 		msr basepri, r3											
 974 004e BFF36F8F 		isb														
 975 0052 BFF34F8F 		dsb														
 976              	
 977              	@ 0 "" 2
 978              		.thumb
 979              		.syntax unified
 980 0056 7B62     		str	r3, [r7, #36]
 981              		.loc 2 203 1
 982 0058 00BF     		nop
 983              	.L62:
 984              	.LBE108:
 985              	.LBE107:
 986              		.loc 1 957 2 discriminator 2
 987 005a FEE7     		b	.L62
 988              	.L61:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 989              		.loc 1 958 2
 990 005c 3B68     		ldr	r3, [r7]
 991 005e 022B     		cmp	r3, #2
 992 0060 03D1     		bne	.L63
 993              		.loc 1 958 2 is_stmt 0 discriminator 2
 994 0062 BB6B     		ldr	r3, [r7, #56]
 995 0064 DB6B     		ldr	r3, [r3, #60]
 996 0066 012B     		cmp	r3, #1
 997 0068 01D1     		bne	.L64
 998              	.L63:
 999              		.loc 1 958 2 discriminator 3
 1000 006a 0123     		movs	r3, #1
 1001 006c 00E0     		b	.L65
 1002              	.L64:
 1003              		.loc 1 958 2 discriminator 4
 1004 006e 0023     		movs	r3, #0
 1005              	.L65:
 1006              		.loc 1 958 2 discriminator 6
 1007 0070 002B     		cmp	r3, #0
 1008 0072 0AD1     		bne	.L66
 1009              	.LBB109:
ARM GAS  /tmp/ccW8mGL0.s 			page 39


 1010              	.LBB110:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1011              		.loc 2 195 2 is_stmt 1
 1012              		.syntax unified
 1013              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1014 0074 4FF05003 			mov r3, #80												
 1015 0078 83F31188 		msr basepri, r3											
 1016 007c BFF36F8F 		isb														
 1017 0080 BFF34F8F 		dsb														
 1018              	
 1019              	@ 0 "" 2
 1020              		.thumb
 1021              		.syntax unified
 1022 0084 3B62     		str	r3, [r7, #32]
 1023              		.loc 2 203 1
 1024 0086 00BF     		nop
 1025              	.L67:
 1026              	.LBE110:
 1027              	.LBE109:
 1028              		.loc 1 958 2 discriminator 3
 1029 0088 FEE7     		b	.L67
 1030              	.L66:
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1031              		.loc 1 974 2
 1032 008a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1033              	.LBB111:
 1034              	.LBB112:
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1035              		.loc 2 211 2
 1036              		.syntax unified
 1037              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1038 008e EFF31182 			mrs r2, basepri											
 1039 0092 4FF05003 		mov r3, #80												
 1040 0096 83F31188 		msr basepri, r3											
 1041 009a BFF36F8F 		isb														
ARM GAS  /tmp/ccW8mGL0.s 			page 40


 1042 009e BFF34F8F 		dsb														
 1043              	
 1044              	@ 0 "" 2
 1045              		.thumb
 1046              		.syntax unified
 1047 00a2 FA61     		str	r2, [r7, #28]
 1048 00a4 BB61     		str	r3, [r7, #24]
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1049              		.loc 2 223 9
 1050 00a6 FB69     		ldr	r3, [r7, #28]
 1051              	.LBE112:
 1052              	.LBE111:
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1053              		.loc 1 981 27
 1054 00a8 7B63     		str	r3, [r7, #52]
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 1055              		.loc 1 983 16
 1056 00aa BB6B     		ldr	r3, [r7, #56]
 1057 00ac 9A6B     		ldr	r2, [r3, #56]
 1058              		.loc 1 983 45
 1059 00ae BB6B     		ldr	r3, [r7, #56]
 1060 00b0 DB6B     		ldr	r3, [r3, #60]
 1061              		.loc 1 983 5
 1062 00b2 9A42     		cmp	r2, r3
 1063 00b4 02D3     		bcc	.L69
 1064              		.loc 1 983 58 discriminator 1
 1065 00b6 3B68     		ldr	r3, [r7]
 1066 00b8 022B     		cmp	r3, #2
 1067 00ba 2FD1     		bne	.L70
 1068              	.L69:
 1069              	.LBB113:
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1070              		.loc 1 985 17
 1071 00bc BB6B     		ldr	r3, [r7, #56]
 1072 00be 93F84530 		ldrb	r3, [r3, #69]
 1073 00c2 87F83330 		strb	r3, [r7, #51]
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1074              		.loc 1 986 22
ARM GAS  /tmp/ccW8mGL0.s 			page 41


 1075 00c6 BB6B     		ldr	r3, [r7, #56]
 1076 00c8 9B6B     		ldr	r3, [r3, #56]
 1077 00ca FB62     		str	r3, [r7, #44]
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1078              		.loc 1 995 13
 1079 00cc 3A68     		ldr	r2, [r7]
 1080 00ce B968     		ldr	r1, [r7, #8]
 1081 00d0 B86B     		ldr	r0, [r7, #56]
 1082 00d2 FFF7FEFF 		bl	prvCopyDataToQueue
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1083              		.loc 1 999 6
 1084 00d6 97F93330 		ldrsb	r3, [r7, #51]
 1085 00da B3F1FF3F 		cmp	r3, #-1
 1086 00de 12D1     		bne	.L71
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
ARM GAS  /tmp/ccW8mGL0.s 			page 42


1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1087              		.loc 1 1061 10
 1088 00e0 BB6B     		ldr	r3, [r7, #56]
 1089 00e2 5B6A     		ldr	r3, [r3, #36]
 1090              		.loc 1 1061 8
 1091 00e4 002B     		cmp	r3, #0
 1092 00e6 16D0     		beq	.L72
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1093              		.loc 1 1063 37
 1094 00e8 BB6B     		ldr	r3, [r7, #56]
 1095 00ea 2433     		adds	r3, r3, #36
 1096              		.loc 1 1063 11
 1097 00ec 1846     		mov	r0, r3
 1098 00ee FFF7FEFF 		bl	xTaskRemoveFromEventList
 1099 00f2 0346     		mov	r3, r0
 1100              		.loc 1 1063 9
 1101 00f4 002B     		cmp	r3, #0
 1102 00f6 0ED0     		beq	.L72
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1103              		.loc 1 1067 10
 1104 00f8 7B68     		ldr	r3, [r7, #4]
 1105 00fa 002B     		cmp	r3, #0
 1106 00fc 0BD0     		beq	.L72
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
ARM GAS  /tmp/ccW8mGL0.s 			page 43


1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1107              		.loc 1 1069 36
 1108 00fe 7B68     		ldr	r3, [r7, #4]
 1109 0100 0122     		movs	r2, #1
 1110 0102 1A60     		str	r2, [r3]
 1111 0104 07E0     		b	.L72
 1112              	.L71:
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Not used in this path. */
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					( void ) uxPreviousMessagesWaiting;
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1113              		.loc 1 1095 45
 1114 0106 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1115 010a 0133     		adds	r3, r3, #1
 1116 010c DBB2     		uxtb	r3, r3
 1117              		.loc 1 1095 24
 1118 010e 5AB2     		sxtb	r2, r3
 1119              		.loc 1 1095 22
 1120 0110 BB6B     		ldr	r3, [r7, #56]
 1121 0112 83F84520 		strb	r2, [r3, #69]
 1122              	.L72:
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1123              		.loc 1 1098 12
 1124 0116 0123     		movs	r3, #1
 1125 0118 FB63     		str	r3, [r7, #60]
 1126              	.LBE113:
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1127              		.loc 1 984 3
 1128 011a 01E0     		b	.L73
 1129              	.L70:
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccW8mGL0.s 			page 44


1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1130              		.loc 1 1103 12
 1131 011c 0023     		movs	r3, #0
 1132 011e FB63     		str	r3, [r7, #60]
 1133              	.L73:
 1134 0120 7B6B     		ldr	r3, [r7, #52]
 1135 0122 7B61     		str	r3, [r7, #20]
 1136              	.LBB114:
 1137              	.LBB115:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1138              		.loc 2 229 2
 1139 0124 7B69     		ldr	r3, [r7, #20]
 1140              		.syntax unified
 1141              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1142 0126 83F31188 			msr basepri, r3	
 1143              	@ 0 "" 2
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1144              		.loc 2 233 1
 1145              		.thumb
 1146              		.syntax unified
 1147 012a 00BF     		nop
 1148              	.LBE115:
 1149              	.LBE114:
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1150              		.loc 1 1108 9
 1151 012c FB6B     		ldr	r3, [r7, #60]
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1152              		.loc 1 1109 1
 1153 012e 1846     		mov	r0, r3
 1154 0130 4037     		adds	r7, r7, #64
 1155              	.LCFI33:
 1156              		.cfi_def_cfa_offset 8
 1157 0132 BD46     		mov	sp, r7
 1158              	.LCFI34:
 1159              		.cfi_def_cfa_register 13
 1160              		@ sp needed
 1161 0134 80BD     		pop	{r7, pc}
 1162              		.cfi_endproc
 1163              	.LFE11:
 1165              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1166              		.align	1
 1167              		.global	xQueueGiveFromISR
 1168              		.syntax unified
 1169              		.thumb
ARM GAS  /tmp/ccW8mGL0.s 			page 45


 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1173              	xQueueGiveFromISR:
 1174              	.LFB12:
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1175              		.loc 1 1113 1
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 56
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179 0000 80B5     		push	{r7, lr}
 1180              	.LCFI35:
 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 8EB0     		sub	sp, sp, #56
 1185              	.LCFI36:
 1186              		.cfi_def_cfa_offset 64
 1187 0004 00AF     		add	r7, sp, #0
 1188              	.LCFI37:
 1189              		.cfi_def_cfa_register 7
 1190 0006 7860     		str	r0, [r7, #4]
 1191 0008 3960     		str	r1, [r7]
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1192              		.loc 1 1116 17
 1193 000a 7B68     		ldr	r3, [r7, #4]
 1194 000c 3B63     		str	r3, [r7, #48]
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 1195              		.loc 1 1124 2
 1196 000e 3B6B     		ldr	r3, [r7, #48]
 1197 0010 002B     		cmp	r3, #0
 1198 0012 0AD1     		bne	.L76
 1199              	.LBB116:
 1200              	.LBB117:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1201              		.loc 2 195 2
 1202              		.syntax unified
 1203              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1204 0014 4FF05003 			mov r3, #80												
 1205 0018 83F31188 		msr basepri, r3											
 1206 001c BFF36F8F 		isb														
 1207 0020 BFF34F8F 		dsb														
 1208              	
 1209              	@ 0 "" 2
 1210              		.thumb
 1211              		.syntax unified
ARM GAS  /tmp/ccW8mGL0.s 			page 46


 1212 0024 3B62     		str	r3, [r7, #32]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1213              		.loc 2 203 1
 1214 0026 00BF     		nop
 1215              	.L77:
 1216              	.LBE117:
 1217              	.LBE116:
 1218              		.loc 1 1124 2 discriminator 1
 1219 0028 FEE7     		b	.L77
 1220              	.L76:
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 1221              		.loc 1 1128 2
 1222 002a 3B6B     		ldr	r3, [r7, #48]
 1223 002c 1B6C     		ldr	r3, [r3, #64]
 1224 002e 002B     		cmp	r3, #0
 1225 0030 0AD0     		beq	.L78
 1226              	.LBB118:
 1227              	.LBB119:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1228              		.loc 2 195 2
 1229              		.syntax unified
 1230              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1231 0032 4FF05003 			mov r3, #80												
 1232 0036 83F31188 		msr basepri, r3											
 1233 003a BFF36F8F 		isb														
 1234 003e BFF34F8F 		dsb														
 1235              	
 1236              	@ 0 "" 2
 1237              		.thumb
 1238              		.syntax unified
 1239 0042 FB61     		str	r3, [r7, #28]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1240              		.loc 2 203 1
 1241 0044 00BF     		nop
 1242              	.L79:
 1243              	.LBE119:
 1244              	.LBE118:
 1245              		.loc 1 1128 2 discriminator 2
 1246 0046 FEE7     		b	.L79
 1247              	.L78:
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
 1248              		.loc 1 1133 2
 1249 0048 3B6B     		ldr	r3, [r7, #48]
 1250 004a 1B68     		ldr	r3, [r3]
 1251 004c 002B     		cmp	r3, #0
 1252 004e 03D1     		bne	.L80
 1253              		.loc 1 1133 2 is_stmt 0 discriminator 2
 1254 0050 3B6B     		ldr	r3, [r7, #48]
 1255 0052 9B68     		ldr	r3, [r3, #8]
 1256 0054 002B     		cmp	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 47


 1257 0056 01D1     		bne	.L81
 1258              	.L80:
 1259              		.loc 1 1133 2 discriminator 3
 1260 0058 0123     		movs	r3, #1
 1261 005a 00E0     		b	.L82
 1262              	.L81:
 1263              		.loc 1 1133 2 discriminator 4
 1264 005c 0023     		movs	r3, #0
 1265              	.L82:
 1266              		.loc 1 1133 2 discriminator 6
 1267 005e 002B     		cmp	r3, #0
 1268 0060 0AD1     		bne	.L83
 1269              	.LBB120:
 1270              	.LBB121:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1271              		.loc 2 195 2 is_stmt 1
 1272              		.syntax unified
 1273              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1274 0062 4FF05003 			mov r3, #80												
 1275 0066 83F31188 		msr basepri, r3											
 1276 006a BFF36F8F 		isb														
 1277 006e BFF34F8F 		dsb														
 1278              	
 1279              	@ 0 "" 2
 1280              		.thumb
 1281              		.syntax unified
 1282 0072 BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1283              		.loc 2 203 1
 1284 0074 00BF     		nop
 1285              	.L84:
 1286              	.LBE121:
 1287              	.LBE120:
 1288              		.loc 1 1133 2 discriminator 3
 1289 0076 FEE7     		b	.L84
 1290              	.L83:
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1291              		.loc 1 1149 2
 1292 0078 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1293              	.LBB122:
 1294              	.LBB123:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccW8mGL0.s 			page 48


 1295              		.loc 2 211 2
 1296              		.syntax unified
 1297              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1298 007c EFF31182 			mrs r2, basepri											
 1299 0080 4FF05003 		mov r3, #80												
 1300 0084 83F31188 		msr basepri, r3											
 1301 0088 BFF36F8F 		isb														
 1302 008c BFF34F8F 		dsb														
 1303              	
 1304              	@ 0 "" 2
 1305              		.thumb
 1306              		.syntax unified
 1307 0090 7A61     		str	r2, [r7, #20]
 1308 0092 3B61     		str	r3, [r7, #16]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1309              		.loc 2 223 9
 1310 0094 7B69     		ldr	r3, [r7, #20]
 1311              	.LBE123:
 1312              	.LBE122:
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1313              		.loc 1 1151 27
 1314 0096 FB62     		str	r3, [r7, #44]
 1315              	.LBB124:
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1316              		.loc 1 1153 21
 1317 0098 3B6B     		ldr	r3, [r7, #48]
 1318 009a 9B6B     		ldr	r3, [r3, #56]
 1319 009c BB62     		str	r3, [r7, #40]
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
 1320              		.loc 1 1158 34
 1321 009e 3B6B     		ldr	r3, [r7, #48]
 1322 00a0 DB6B     		ldr	r3, [r3, #60]
 1323              		.loc 1 1158 5
 1324 00a2 BA6A     		ldr	r2, [r7, #40]
 1325 00a4 9A42     		cmp	r2, r3
 1326 00a6 2BD2     		bcs	.L86
 1327              	.LBB125:
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1328              		.loc 1 1160 17
 1329 00a8 3B6B     		ldr	r3, [r7, #48]
 1330 00aa 93F84530 		ldrb	r3, [r3, #69]
 1331 00ae 87F82730 		strb	r3, [r7, #39]
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
ARM GAS  /tmp/ccW8mGL0.s 			page 49


1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 1332              		.loc 1 1170 51
 1333 00b2 BB6A     		ldr	r3, [r7, #40]
 1334 00b4 5A1C     		adds	r2, r3, #1
 1335              		.loc 1 1170 31
 1336 00b6 3B6B     		ldr	r3, [r7, #48]
 1337 00b8 9A63     		str	r2, [r3, #56]
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1338              		.loc 1 1174 6
 1339 00ba 97F92730 		ldrsb	r3, [r7, #39]
 1340 00be B3F1FF3F 		cmp	r3, #-1
 1341 00c2 12D1     		bne	.L87
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
ARM GAS  /tmp/ccW8mGL0.s 			page 50


1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1342              		.loc 1 1229 10
 1343 00c4 3B6B     		ldr	r3, [r7, #48]
 1344 00c6 5B6A     		ldr	r3, [r3, #36]
 1345              		.loc 1 1229 8
 1346 00c8 002B     		cmp	r3, #0
 1347 00ca 16D0     		beq	.L88
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1348              		.loc 1 1231 37
 1349 00cc 3B6B     		ldr	r3, [r7, #48]
 1350 00ce 2433     		adds	r3, r3, #36
 1351              		.loc 1 1231 11
 1352 00d0 1846     		mov	r0, r3
 1353 00d2 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1354 00d6 0346     		mov	r3, r0
 1355              		.loc 1 1231 9
 1356 00d8 002B     		cmp	r3, #0
 1357 00da 0ED0     		beq	.L88
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1358              		.loc 1 1235 10
 1359 00dc 3B68     		ldr	r3, [r7]
 1360 00de 002B     		cmp	r3, #0
 1361 00e0 0BD0     		beq	.L88
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1362              		.loc 1 1237 36
 1363 00e2 3B68     		ldr	r3, [r7]
 1364 00e4 0122     		movs	r2, #1
 1365 00e6 1A60     		str	r2, [r3]
 1366 00e8 07E0     		b	.L88
 1367              	.L87:
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccW8mGL0.s 			page 51


1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1368              		.loc 1 1260 45
 1369 00ea 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1370 00ee 0133     		adds	r3, r3, #1
 1371 00f0 DBB2     		uxtb	r3, r3
 1372              		.loc 1 1260 24
 1373 00f2 5AB2     		sxtb	r2, r3
 1374              		.loc 1 1260 22
 1375 00f4 3B6B     		ldr	r3, [r7, #48]
 1376 00f6 83F84520 		strb	r2, [r3, #69]
 1377              	.L88:
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1378              		.loc 1 1263 12
 1379 00fa 0123     		movs	r3, #1
 1380 00fc 7B63     		str	r3, [r7, #52]
 1381              	.LBE125:
 1382 00fe 01E0     		b	.L89
 1383              	.L86:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1384              		.loc 1 1268 12
 1385 0100 0023     		movs	r3, #0
 1386 0102 7B63     		str	r3, [r7, #52]
 1387              	.L89:
 1388 0104 FB6A     		ldr	r3, [r7, #44]
 1389 0106 FB60     		str	r3, [r7, #12]
 1390              	.LBE124:
 1391              	.LBB126:
 1392              	.LBB127:
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1393              		.loc 2 229 2
 1394 0108 FB68     		ldr	r3, [r7, #12]
 1395              		.syntax unified
 1396              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1397 010a 83F31188 			msr basepri, r3	
 1398              	@ 0 "" 2
 1399              		.loc 2 233 1
 1400              		.thumb
 1401              		.syntax unified
ARM GAS  /tmp/ccW8mGL0.s 			page 52


 1402 010e 00BF     		nop
 1403              	.LBE127:
 1404              	.LBE126:
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1405              		.loc 1 1273 9
 1406 0110 7B6B     		ldr	r3, [r7, #52]
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1407              		.loc 1 1274 1
 1408 0112 1846     		mov	r0, r3
 1409 0114 3837     		adds	r7, r7, #56
 1410              	.LCFI38:
 1411              		.cfi_def_cfa_offset 8
 1412 0116 BD46     		mov	sp, r7
 1413              	.LCFI39:
 1414              		.cfi_def_cfa_register 13
 1415              		@ sp needed
 1416 0118 80BD     		pop	{r7, pc}
 1417              		.cfi_endproc
 1418              	.LFE12:
 1420              		.section	.text.xQueueReceive,"ax",%progbits
 1421              		.align	1
 1422              		.global	xQueueReceive
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	xQueueReceive:
 1429              	.LFB13:
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1430              		.loc 1 1278 1
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 48
 1433              		@ frame_needed = 1, uses_anonymous_args = 0
 1434 0000 80B5     		push	{r7, lr}
 1435              	.LCFI40:
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 8CB0     		sub	sp, sp, #48
 1440              	.LCFI41:
 1441              		.cfi_def_cfa_offset 56
 1442 0004 00AF     		add	r7, sp, #0
 1443              	.LCFI42:
 1444              		.cfi_def_cfa_register 7
 1445 0006 F860     		str	r0, [r7, #12]
 1446 0008 B960     		str	r1, [r7, #8]
 1447 000a 7A60     		str	r2, [r7, #4]
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1448              		.loc 1 1279 12
 1449 000c 0023     		movs	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 53


 1450 000e FB62     		str	r3, [r7, #44]
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1451              		.loc 1 1281 17
 1452 0010 FB68     		ldr	r3, [r7, #12]
 1453 0012 BB62     		str	r3, [r7, #40]
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
 1454              		.loc 1 1284 2
 1455 0014 BB6A     		ldr	r3, [r7, #40]
 1456 0016 002B     		cmp	r3, #0
 1457 0018 0AD1     		bne	.L92
 1458              	.LBB128:
 1459              	.LBB129:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1460              		.loc 2 195 2
 1461              		.syntax unified
 1462              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1463 001a 4FF05003 			mov r3, #80												
 1464 001e 83F31188 		msr basepri, r3											
 1465 0022 BFF36F8F 		isb														
 1466 0026 BFF34F8F 		dsb														
 1467              	
 1468              	@ 0 "" 2
 1469              		.thumb
 1470              		.syntax unified
 1471 002a 3B62     		str	r3, [r7, #32]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1472              		.loc 2 203 1
 1473 002c 00BF     		nop
 1474              	.L93:
 1475              	.LBE129:
 1476              	.LBE128:
 1477              		.loc 1 1284 2 discriminator 1
 1478 002e FEE7     		b	.L93
 1479              	.L92:
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1480              		.loc 1 1288 2
 1481 0030 BB68     		ldr	r3, [r7, #8]
 1482 0032 002B     		cmp	r3, #0
 1483 0034 03D1     		bne	.L94
 1484              		.loc 1 1288 2 is_stmt 0 discriminator 2
 1485 0036 BB6A     		ldr	r3, [r7, #40]
 1486 0038 1B6C     		ldr	r3, [r3, #64]
 1487 003a 002B     		cmp	r3, #0
 1488 003c 01D1     		bne	.L95
 1489              	.L94:
 1490              		.loc 1 1288 2 discriminator 3
 1491 003e 0123     		movs	r3, #1
 1492 0040 00E0     		b	.L96
 1493              	.L95:
 1494              		.loc 1 1288 2 discriminator 4
 1495 0042 0023     		movs	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 54


 1496              	.L96:
 1497              		.loc 1 1288 2 discriminator 6
 1498 0044 002B     		cmp	r3, #0
 1499 0046 0AD1     		bne	.L97
 1500              	.LBB130:
 1501              	.LBB131:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1502              		.loc 2 195 2 is_stmt 1
 1503              		.syntax unified
 1504              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1505 0048 4FF05003 			mov r3, #80												
 1506 004c 83F31188 		msr basepri, r3											
 1507 0050 BFF36F8F 		isb														
 1508 0054 BFF34F8F 		dsb														
 1509              	
 1510              	@ 0 "" 2
 1511              		.thumb
 1512              		.syntax unified
 1513 0058 FB61     		str	r3, [r7, #28]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1514              		.loc 2 203 1
 1515 005a 00BF     		nop
 1516              	.L98:
 1517              	.LBE131:
 1518              	.LBE130:
 1519              		.loc 1 1288 2 discriminator 2
 1520 005c FEE7     		b	.L98
 1521              	.L97:
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 1522              		.loc 1 1293 3
 1523 005e FFF7FEFF 		bl	xTaskGetSchedulerState
 1524 0062 0346     		mov	r3, r0
 1525 0064 002B     		cmp	r3, #0
 1526 0066 02D1     		bne	.L99
 1527              		.loc 1 1293 3 is_stmt 0 discriminator 2
 1528 0068 7B68     		ldr	r3, [r7, #4]
 1529 006a 002B     		cmp	r3, #0
 1530 006c 01D1     		bne	.L100
 1531              	.L99:
 1532              		.loc 1 1293 3 discriminator 3
 1533 006e 0123     		movs	r3, #1
 1534 0070 00E0     		b	.L101
 1535              	.L100:
 1536              		.loc 1 1293 3 discriminator 4
 1537 0072 0023     		movs	r3, #0
 1538              	.L101:
 1539              		.loc 1 1293 3 discriminator 6
 1540 0074 002B     		cmp	r3, #0
 1541 0076 0AD1     		bne	.L102
 1542              	.LBB132:
 1543              	.LBB133:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1544              		.loc 2 195 2 is_stmt 1
ARM GAS  /tmp/ccW8mGL0.s 			page 55


 1545              		.syntax unified
 1546              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1547 0078 4FF05003 			mov r3, #80												
 1548 007c 83F31188 		msr basepri, r3											
 1549 0080 BFF36F8F 		isb														
 1550 0084 BFF34F8F 		dsb														
 1551              	
 1552              	@ 0 "" 2
 1553              		.thumb
 1554              		.syntax unified
 1555 0088 BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1556              		.loc 2 203 1
 1557 008a 00BF     		nop
 1558              	.L103:
 1559              	.LBE133:
 1560              	.LBE132:
 1561              		.loc 1 1293 3 discriminator 3
 1562 008c FEE7     		b	.L103
 1563              	.L102:
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 1564              		.loc 1 1303 3
 1565 008e FFF7FEFF 		bl	vPortEnterCritical
 1566              	.LBB134:
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1567              		.loc 1 1305 22
 1568 0092 BB6A     		ldr	r3, [r7, #40]
 1569 0094 9B6B     		ldr	r3, [r3, #56]
 1570 0096 7B62     		str	r3, [r7, #36]
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 1571              		.loc 1 1309 6
 1572 0098 7B6A     		ldr	r3, [r7, #36]
 1573 009a 002B     		cmp	r3, #0
 1574 009c 1FD0     		beq	.L104
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1575              		.loc 1 1312 5
 1576 009e B968     		ldr	r1, [r7, #8]
 1577 00a0 B86A     		ldr	r0, [r7, #40]
 1578 00a2 FFF7FEFF 		bl	prvCopyDataFromQueue
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 1579              		.loc 1 1314 52
ARM GAS  /tmp/ccW8mGL0.s 			page 56


 1580 00a6 7B6A     		ldr	r3, [r7, #36]
 1581 00a8 5A1E     		subs	r2, r3, #1
 1582              		.loc 1 1314 32
 1583 00aa BB6A     		ldr	r3, [r7, #40]
 1584 00ac 9A63     		str	r2, [r3, #56]
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1585              		.loc 1 1319 9
 1586 00ae BB6A     		ldr	r3, [r7, #40]
 1587 00b0 1B69     		ldr	r3, [r3, #16]
 1588              		.loc 1 1319 7
 1589 00b2 002B     		cmp	r3, #0
 1590 00b4 0FD0     		beq	.L105
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1591              		.loc 1 1321 36
 1592 00b6 BB6A     		ldr	r3, [r7, #40]
 1593 00b8 1033     		adds	r3, r3, #16
 1594              		.loc 1 1321 10
 1595 00ba 1846     		mov	r0, r3
 1596 00bc FFF7FEFF 		bl	xTaskRemoveFromEventList
 1597 00c0 0346     		mov	r3, r0
 1598              		.loc 1 1321 8
 1599 00c2 002B     		cmp	r3, #0
 1600 00c4 07D0     		beq	.L105
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 1601              		.loc 1 1323 7
 1602 00c6 3D4B     		ldr	r3, .L115
 1603 00c8 4FF08052 		mov	r2, #268435456
 1604 00cc 1A60     		str	r2, [r3]
 1605              		.syntax unified
 1606              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1607 00ce BFF34F8F 		dsb
 1608              	@ 0 "" 2
 1609              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1610 00d2 BFF36F8F 		isb
 1611              	@ 0 "" 2
 1612              		.thumb
 1613              		.syntax unified
 1614              	.L105:
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 1615              		.loc 1 1335 5
ARM GAS  /tmp/ccW8mGL0.s 			page 57


 1616 00d6 FFF7FEFF 		bl	vPortExitCritical
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1617              		.loc 1 1336 12
 1618 00da 0123     		movs	r3, #1
 1619 00dc 69E0     		b	.L114
 1620              	.L104:
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 1621              		.loc 1 1340 22
 1622 00de 7B68     		ldr	r3, [r7, #4]
 1623              		.loc 1 1340 7
 1624 00e0 002B     		cmp	r3, #0
 1625 00e2 03D1     		bne	.L107
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 1626              		.loc 1 1344 6
 1627 00e4 FFF7FEFF 		bl	vPortExitCritical
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 1628              		.loc 1 1346 13
 1629 00e8 0023     		movs	r3, #0
 1630 00ea 62E0     		b	.L114
 1631              	.L107:
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1632              		.loc 1 1348 12
 1633 00ec FB6A     		ldr	r3, [r7, #44]
 1634 00ee 002B     		cmp	r3, #0
 1635 00f0 06D1     		bne	.L108
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 1636              		.loc 1 1352 6
 1637 00f2 07F11003 		add	r3, r7, #16
 1638 00f6 1846     		mov	r0, r3
 1639 00f8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1640              		.loc 1 1353 20
 1641 00fc 0123     		movs	r3, #1
 1642 00fe FB62     		str	r3, [r7, #44]
 1643              	.L108:
 1644              	.LBE134:
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 1645              		.loc 1 1362 3
ARM GAS  /tmp/ccW8mGL0.s 			page 58


 1646 0100 FFF7FEFF 		bl	vPortExitCritical
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 1647              		.loc 1 1367 3
 1648 0104 FFF7FEFF 		bl	vTaskSuspendAll
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1649              		.loc 1 1368 3
 1650 0108 FFF7FEFF 		bl	vPortEnterCritical
 1651 010c BB6A     		ldr	r3, [r7, #40]
 1652 010e 93F84430 		ldrb	r3, [r3, #68]
 1653 0112 5BB2     		sxtb	r3, r3
 1654 0114 B3F1FF3F 		cmp	r3, #-1
 1655 0118 03D1     		bne	.L109
 1656              		.loc 1 1368 3 is_stmt 0 discriminator 1
 1657 011a BB6A     		ldr	r3, [r7, #40]
 1658 011c 0022     		movs	r2, #0
 1659 011e 83F84420 		strb	r2, [r3, #68]
 1660              	.L109:
 1661              		.loc 1 1368 3 discriminator 3
 1662 0122 BB6A     		ldr	r3, [r7, #40]
 1663 0124 93F84530 		ldrb	r3, [r3, #69]
 1664 0128 5BB2     		sxtb	r3, r3
 1665 012a B3F1FF3F 		cmp	r3, #-1
 1666 012e 03D1     		bne	.L110
 1667              		.loc 1 1368 3 discriminator 4
 1668 0130 BB6A     		ldr	r3, [r7, #40]
 1669 0132 0022     		movs	r2, #0
 1670 0134 83F84520 		strb	r2, [r3, #69]
 1671              	.L110:
 1672              		.loc 1 1368 3 discriminator 6
 1673 0138 FFF7FEFF 		bl	vPortExitCritical
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1674              		.loc 1 1371 7 is_stmt 1 discriminator 6
 1675 013c 3A1D     		adds	r2, r7, #4
 1676 013e 07F11003 		add	r3, r7, #16
 1677 0142 1146     		mov	r1, r2
 1678 0144 1846     		mov	r0, r3
 1679 0146 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1680 014a 0346     		mov	r3, r0
 1681              		.loc 1 1371 5 discriminator 6
 1682 014c 002B     		cmp	r3, #0
 1683 014e 23D1     		bne	.L111
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1684              		.loc 1 1375 8
 1685 0150 B86A     		ldr	r0, [r7, #40]
 1686 0152 FFF7FEFF 		bl	prvIsQueueEmpty
 1687 0156 0346     		mov	r3, r0
 1688              		.loc 1 1375 6
 1689 0158 002B     		cmp	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 59


 1690 015a 17D0     		beq	.L112
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1691              		.loc 1 1378 5
 1692 015c BB6A     		ldr	r3, [r7, #40]
 1693 015e 2433     		adds	r3, r3, #36
 1694 0160 7A68     		ldr	r2, [r7, #4]
 1695 0162 1146     		mov	r1, r2
 1696 0164 1846     		mov	r0, r3
 1697 0166 FFF7FEFF 		bl	vTaskPlaceOnEventList
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1698              		.loc 1 1379 5
 1699 016a B86A     		ldr	r0, [r7, #40]
 1700 016c FFF7FEFF 		bl	prvUnlockQueue
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1701              		.loc 1 1380 9
 1702 0170 FFF7FEFF 		bl	xTaskResumeAll
 1703 0174 0346     		mov	r3, r0
 1704              		.loc 1 1380 7
 1705 0176 002B     		cmp	r3, #0
 1706 0178 89D1     		bne	.L102
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 1707              		.loc 1 1382 6
 1708 017a 104B     		ldr	r3, .L115
 1709 017c 4FF08052 		mov	r2, #268435456
 1710 0180 1A60     		str	r2, [r3]
 1711              		.syntax unified
 1712              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1713 0182 BFF34F8F 		dsb
 1714              	@ 0 "" 2
 1715              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1716 0186 BFF36F8F 		isb
 1717              	@ 0 "" 2
 1718              		.thumb
 1719              		.syntax unified
 1720 018a 80E7     		b	.L102
 1721              	.L112:
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1722              		.loc 1 1393 5
 1723 018c B86A     		ldr	r0, [r7, #40]
 1724 018e FFF7FEFF 		bl	prvUnlockQueue
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1725              		.loc 1 1394 14
 1726 0192 FFF7FEFF 		bl	xTaskResumeAll
 1727 0196 7AE7     		b	.L102
ARM GAS  /tmp/ccW8mGL0.s 			page 60


 1728              	.L111:
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 1729              		.loc 1 1401 4
 1730 0198 B86A     		ldr	r0, [r7, #40]
 1731 019a FFF7FEFF 		bl	prvUnlockQueue
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1732              		.loc 1 1402 13
 1733 019e FFF7FEFF 		bl	xTaskResumeAll
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1734              		.loc 1 1404 8
 1735 01a2 B86A     		ldr	r0, [r7, #40]
 1736 01a4 FFF7FEFF 		bl	prvIsQueueEmpty
 1737 01a8 0346     		mov	r3, r0
 1738              		.loc 1 1404 6
 1739 01aa 002B     		cmp	r3, #0
 1740 01ac 3FF46FAF 		beq	.L102
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 1741              		.loc 1 1407 12
 1742 01b0 0023     		movs	r3, #0
 1743              	.L114:
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1744              		.loc 1 1415 1 discriminator 6
 1745 01b2 1846     		mov	r0, r3
 1746 01b4 3037     		adds	r7, r7, #48
 1747              	.LCFI43:
 1748              		.cfi_def_cfa_offset 8
 1749 01b6 BD46     		mov	sp, r7
 1750              	.LCFI44:
 1751              		.cfi_def_cfa_register 13
 1752              		@ sp needed
 1753 01b8 80BD     		pop	{r7, pc}
 1754              	.L116:
 1755 01ba 00BF     		.align	2
 1756              	.L115:
 1757 01bc 04ED00E0 		.word	-536810236
 1758              		.cfi_endproc
 1759              	.LFE13:
 1761              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1762              		.align	1
 1763              		.global	xQueueSemaphoreTake
 1764              		.syntax unified
ARM GAS  /tmp/ccW8mGL0.s 			page 61


 1765              		.thumb
 1766              		.thumb_func
 1767              		.fpu fpv4-sp-d16
 1769              	xQueueSemaphoreTake:
 1770              	.LFB14:
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1771              		.loc 1 1419 1
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 56
 1774              		@ frame_needed = 1, uses_anonymous_args = 0
 1775 0000 80B5     		push	{r7, lr}
 1776              	.LCFI45:
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 8EB0     		sub	sp, sp, #56
 1781              	.LCFI46:
 1782              		.cfi_def_cfa_offset 64
 1783 0004 00AF     		add	r7, sp, #0
 1784              	.LCFI47:
 1785              		.cfi_def_cfa_register 7
 1786 0006 7860     		str	r0, [r7, #4]
 1787 0008 3960     		str	r1, [r7]
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1788              		.loc 1 1420 12
 1789 000a 0023     		movs	r3, #0
 1790 000c 7B63     		str	r3, [r7, #52]
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1791              		.loc 1 1422 17
 1792 000e 7B68     		ldr	r3, [r7, #4]
 1793 0010 FB62     		str	r3, [r7, #44]
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
 1794              		.loc 1 1425 13
 1795 0012 0023     		movs	r3, #0
 1796 0014 3B63     		str	r3, [r7, #48]
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
 1797              		.loc 1 1429 2
 1798 0016 FB6A     		ldr	r3, [r7, #44]
 1799 0018 002B     		cmp	r3, #0
 1800 001a 0AD1     		bne	.L118
 1801              	.LBB135:
 1802              	.LBB136:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1803              		.loc 2 195 2
 1804              		.syntax unified
 1805              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1806 001c 4FF05003 			mov r3, #80												
 1807 0020 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccW8mGL0.s 			page 62


 1808 0024 BFF36F8F 		isb														
 1809 0028 BFF34F8F 		dsb														
 1810              	
 1811              	@ 0 "" 2
 1812              		.thumb
 1813              		.syntax unified
 1814 002c 3B62     		str	r3, [r7, #32]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1815              		.loc 2 203 1
 1816 002e 00BF     		nop
 1817              	.L119:
 1818              	.LBE136:
 1819              	.LBE135:
 1820              		.loc 1 1429 2 discriminator 1
 1821 0030 FEE7     		b	.L119
 1822              	.L118:
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 1823              		.loc 1 1433 2
 1824 0032 FB6A     		ldr	r3, [r7, #44]
 1825 0034 1B6C     		ldr	r3, [r3, #64]
 1826 0036 002B     		cmp	r3, #0
 1827 0038 0AD0     		beq	.L120
 1828              	.LBB137:
 1829              	.LBB138:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1830              		.loc 2 195 2
 1831              		.syntax unified
 1832              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1833 003a 4FF05003 			mov r3, #80												
 1834 003e 83F31188 		msr basepri, r3											
 1835 0042 BFF36F8F 		isb														
 1836 0046 BFF34F8F 		dsb														
 1837              	
 1838              	@ 0 "" 2
 1839              		.thumb
 1840              		.syntax unified
 1841 004a FB61     		str	r3, [r7, #28]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1842              		.loc 2 203 1
 1843 004c 00BF     		nop
 1844              	.L121:
 1845              	.LBE138:
 1846              	.LBE137:
 1847              		.loc 1 1433 2 discriminator 2
 1848 004e FEE7     		b	.L121
 1849              	.L120:
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 1850              		.loc 1 1438 3
 1851 0050 FFF7FEFF 		bl	xTaskGetSchedulerState
 1852 0054 0346     		mov	r3, r0
ARM GAS  /tmp/ccW8mGL0.s 			page 63


 1853 0056 002B     		cmp	r3, #0
 1854 0058 02D1     		bne	.L122
 1855              		.loc 1 1438 3 is_stmt 0 discriminator 2
 1856 005a 3B68     		ldr	r3, [r7]
 1857 005c 002B     		cmp	r3, #0
 1858 005e 01D1     		bne	.L123
 1859              	.L122:
 1860              		.loc 1 1438 3 discriminator 3
 1861 0060 0123     		movs	r3, #1
 1862 0062 00E0     		b	.L124
 1863              	.L123:
 1864              		.loc 1 1438 3 discriminator 4
 1865 0064 0023     		movs	r3, #0
 1866              	.L124:
 1867              		.loc 1 1438 3 discriminator 6
 1868 0066 002B     		cmp	r3, #0
 1869 0068 0AD1     		bne	.L125
 1870              	.LBB139:
 1871              	.LBB140:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1872              		.loc 2 195 2 is_stmt 1
 1873              		.syntax unified
 1874              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1875 006a 4FF05003 			mov r3, #80												
 1876 006e 83F31188 		msr basepri, r3											
 1877 0072 BFF36F8F 		isb														
 1878 0076 BFF34F8F 		dsb														
 1879              	
 1880              	@ 0 "" 2
 1881              		.thumb
 1882              		.syntax unified
 1883 007a BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1884              		.loc 2 203 1
 1885 007c 00BF     		nop
 1886              	.L126:
 1887              	.LBE140:
 1888              	.LBE139:
 1889              		.loc 1 1438 3 discriminator 3
 1890 007e FEE7     		b	.L126
 1891              	.L125:
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 1892              		.loc 1 1448 3
 1893 0080 FFF7FEFF 		bl	vPortEnterCritical
 1894              	.LBB141:
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
ARM GAS  /tmp/ccW8mGL0.s 			page 64


1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 1895              		.loc 1 1452 22
 1896 0084 FB6A     		ldr	r3, [r7, #44]
 1897 0086 9B6B     		ldr	r3, [r3, #56]
 1898 0088 BB62     		str	r3, [r7, #40]
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 1899              		.loc 1 1456 6
 1900 008a BB6A     		ldr	r3, [r7, #40]
 1901 008c 002B     		cmp	r3, #0
 1902 008e 24D0     		beq	.L127
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 1903              		.loc 1 1462 51
 1904 0090 BB6A     		ldr	r3, [r7, #40]
 1905 0092 5A1E     		subs	r2, r3, #1
 1906              		.loc 1 1462 32
 1907 0094 FB6A     		ldr	r3, [r7, #44]
 1908 0096 9A63     		str	r2, [r3, #56]
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1909              		.loc 1 1466 17
 1910 0098 FB6A     		ldr	r3, [r7, #44]
 1911 009a 1B68     		ldr	r3, [r3]
 1912              		.loc 1 1466 8
 1913 009c 002B     		cmp	r3, #0
 1914 009e 04D1     		bne	.L128
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 1915              		.loc 1 1470 44
 1916 00a0 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1917 00a4 0246     		mov	r2, r0
 1918              		.loc 1 1470 42
 1919 00a6 FB6A     		ldr	r3, [r7, #44]
 1920 00a8 9A60     		str	r2, [r3, #8]
 1921              	.L128:
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
ARM GAS  /tmp/ccW8mGL0.s 			page 65


 1922              		.loc 1 1481 9
 1923 00aa FB6A     		ldr	r3, [r7, #44]
 1924 00ac 1B69     		ldr	r3, [r3, #16]
 1925              		.loc 1 1481 7
 1926 00ae 002B     		cmp	r3, #0
 1927 00b0 0FD0     		beq	.L129
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1928              		.loc 1 1483 36
 1929 00b2 FB6A     		ldr	r3, [r7, #44]
 1930 00b4 1033     		adds	r3, r3, #16
 1931              		.loc 1 1483 10
 1932 00b6 1846     		mov	r0, r3
 1933 00b8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1934 00bc 0346     		mov	r3, r0
 1935              		.loc 1 1483 8
 1936 00be 002B     		cmp	r3, #0
 1937 00c0 07D0     		beq	.L129
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 1938              		.loc 1 1485 7
 1939 00c2 544B     		ldr	r3, .L143
 1940 00c4 4FF08052 		mov	r2, #268435456
 1941 00c8 1A60     		str	r2, [r3]
 1942              		.syntax unified
 1943              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1944 00ca BFF34F8F 		dsb
 1945              	@ 0 "" 2
 1946              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1947 00ce BFF36F8F 		isb
 1948              	@ 0 "" 2
 1949              		.thumb
 1950              		.syntax unified
 1951              	.L129:
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 1952              		.loc 1 1497 5
 1953 00d2 FFF7FEFF 		bl	vPortExitCritical
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1954              		.loc 1 1498 12
 1955 00d6 0123     		movs	r3, #1
 1956 00d8 97E0     		b	.L142
 1957              	.L127:
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
ARM GAS  /tmp/ccW8mGL0.s 			page 66


 1958              		.loc 1 1502 22
 1959 00da 3B68     		ldr	r3, [r7]
 1960              		.loc 1 1502 7
 1961 00dc 002B     		cmp	r3, #0
 1962 00de 11D1     		bne	.L131
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
 1963              		.loc 1 1509 7
 1964 00e0 3B6B     		ldr	r3, [r7, #48]
 1965 00e2 002B     		cmp	r3, #0
 1966 00e4 0AD0     		beq	.L132
 1967              	.LBB142:
 1968              	.LBB143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1969              		.loc 2 195 2
 1970              		.syntax unified
 1971              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1972 00e6 4FF05003 			mov r3, #80												
 1973 00ea 83F31188 		msr basepri, r3											
 1974 00ee BFF36F8F 		isb														
 1975 00f2 BFF34F8F 		dsb														
 1976              	
 1977              	@ 0 "" 2
 1978              		.thumb
 1979              		.syntax unified
 1980 00f6 7B61     		str	r3, [r7, #20]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1981              		.loc 2 203 1
 1982 00f8 00BF     		nop
 1983              	.L133:
 1984              	.LBE143:
 1985              	.LBE142:
 1986              		.loc 1 1509 7 discriminator 4
 1987 00fa FEE7     		b	.L133
 1988              	.L132:
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 1989              		.loc 1 1515 6
 1990 00fc FFF7FEFF 		bl	vPortExitCritical
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 1991              		.loc 1 1517 13
 1992 0100 0023     		movs	r3, #0
 1993 0102 82E0     		b	.L142
 1994              	.L131:
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1995              		.loc 1 1519 12
ARM GAS  /tmp/ccW8mGL0.s 			page 67


 1996 0104 7B6B     		ldr	r3, [r7, #52]
 1997 0106 002B     		cmp	r3, #0
 1998 0108 06D1     		bne	.L134
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 1999              		.loc 1 1523 6
 2000 010a 07F10C03 		add	r3, r7, #12
 2001 010e 1846     		mov	r0, r3
 2002 0110 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2003              		.loc 1 1524 20
 2004 0114 0123     		movs	r3, #1
 2005 0116 7B63     		str	r3, [r7, #52]
 2006              	.L134:
 2007              	.LBE141:
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 2008              		.loc 1 1533 3
 2009 0118 FFF7FEFF 		bl	vPortExitCritical
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 2010              		.loc 1 1538 3
 2011 011c FFF7FEFF 		bl	vTaskSuspendAll
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2012              		.loc 1 1539 3
 2013 0120 FFF7FEFF 		bl	vPortEnterCritical
 2014 0124 FB6A     		ldr	r3, [r7, #44]
 2015 0126 93F84430 		ldrb	r3, [r3, #68]
 2016 012a 5BB2     		sxtb	r3, r3
 2017 012c B3F1FF3F 		cmp	r3, #-1
 2018 0130 03D1     		bne	.L135
 2019              		.loc 1 1539 3 is_stmt 0 discriminator 1
 2020 0132 FB6A     		ldr	r3, [r7, #44]
 2021 0134 0022     		movs	r2, #0
 2022 0136 83F84420 		strb	r2, [r3, #68]
 2023              	.L135:
 2024              		.loc 1 1539 3 discriminator 3
 2025 013a FB6A     		ldr	r3, [r7, #44]
 2026 013c 93F84530 		ldrb	r3, [r3, #69]
 2027 0140 5BB2     		sxtb	r3, r3
 2028 0142 B3F1FF3F 		cmp	r3, #-1
 2029 0146 03D1     		bne	.L136
 2030              		.loc 1 1539 3 discriminator 4
 2031 0148 FB6A     		ldr	r3, [r7, #44]
 2032 014a 0022     		movs	r2, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 68


 2033 014c 83F84520 		strb	r2, [r3, #69]
 2034              	.L136:
 2035              		.loc 1 1539 3 discriminator 6
 2036 0150 FFF7FEFF 		bl	vPortExitCritical
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 2037              		.loc 1 1542 7 is_stmt 1 discriminator 6
 2038 0154 3A46     		mov	r2, r7
 2039 0156 07F10C03 		add	r3, r7, #12
 2040 015a 1146     		mov	r1, r2
 2041 015c 1846     		mov	r0, r3
 2042 015e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2043 0162 0346     		mov	r3, r0
 2044              		.loc 1 1542 5 discriminator 6
 2045 0164 002B     		cmp	r3, #0
 2046 0166 32D1     		bne	.L137
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2047              		.loc 1 1548 8
 2048 0168 F86A     		ldr	r0, [r7, #44]
 2049 016a FFF7FEFF 		bl	prvIsQueueEmpty
 2050 016e 0346     		mov	r3, r0
 2051              		.loc 1 1548 6
 2052 0170 002B     		cmp	r3, #0
 2053 0172 26D0     		beq	.L138
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2054              		.loc 1 1554 17
 2055 0174 FB6A     		ldr	r3, [r7, #44]
 2056 0176 1B68     		ldr	r3, [r3]
 2057              		.loc 1 1554 8
 2058 0178 002B     		cmp	r3, #0
 2059 017a 09D1     		bne	.L139
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
 2060              		.loc 1 1556 7
 2061 017c FFF7FEFF 		bl	vPortEnterCritical
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 2062              		.loc 1 1558 31
 2063 0180 FB6A     		ldr	r3, [r7, #44]
 2064 0182 9B68     		ldr	r3, [r3, #8]
 2065 0184 1846     		mov	r0, r3
 2066 0186 FFF7FEFF 		bl	xTaskPriorityInherit
 2067 018a 3863     		str	r0, [r7, #48]
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
 2068              		.loc 1 1560 7
ARM GAS  /tmp/ccW8mGL0.s 			page 69


 2069 018c FFF7FEFF 		bl	vPortExitCritical
 2070              	.L139:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2071              		.loc 1 1569 5
 2072 0190 FB6A     		ldr	r3, [r7, #44]
 2073 0192 2433     		adds	r3, r3, #36
 2074 0194 3A68     		ldr	r2, [r7]
 2075 0196 1146     		mov	r1, r2
 2076 0198 1846     		mov	r0, r3
 2077 019a FFF7FEFF 		bl	vTaskPlaceOnEventList
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2078              		.loc 1 1570 5
 2079 019e F86A     		ldr	r0, [r7, #44]
 2080 01a0 FFF7FEFF 		bl	prvUnlockQueue
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2081              		.loc 1 1571 9
 2082 01a4 FFF7FEFF 		bl	xTaskResumeAll
 2083 01a8 0346     		mov	r3, r0
 2084              		.loc 1 1571 7
 2085 01aa 002B     		cmp	r3, #0
 2086 01ac 7FF468AF 		bne	.L125
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 2087              		.loc 1 1573 6
 2088 01b0 184B     		ldr	r3, .L143
 2089 01b2 4FF08052 		mov	r2, #268435456
 2090 01b6 1A60     		str	r2, [r3]
 2091              		.syntax unified
 2092              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2093 01b8 BFF34F8F 		dsb
 2094              	@ 0 "" 2
 2095              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2096 01bc BFF36F8F 		isb
 2097              	@ 0 "" 2
 2098              		.thumb
 2099              		.syntax unified
 2100 01c0 5EE7     		b	.L125
 2101              	.L138:
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  /tmp/ccW8mGL0.s 			page 70


 2102              		.loc 1 1584 5
 2103 01c2 F86A     		ldr	r0, [r7, #44]
 2104 01c4 FFF7FEFF 		bl	prvUnlockQueue
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2105              		.loc 1 1585 14
 2106 01c8 FFF7FEFF 		bl	xTaskResumeAll
 2107 01cc 58E7     		b	.L125
 2108              	.L137:
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 2109              		.loc 1 1591 4
 2110 01ce F86A     		ldr	r0, [r7, #44]
 2111 01d0 FFF7FEFF 		bl	prvUnlockQueue
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2112              		.loc 1 1592 13
 2113 01d4 FFF7FEFF 		bl	xTaskResumeAll
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2114              		.loc 1 1598 8
 2115 01d8 F86A     		ldr	r0, [r7, #44]
 2116 01da FFF7FEFF 		bl	prvIsQueueEmpty
 2117 01de 0346     		mov	r3, r0
 2118              		.loc 1 1598 6
 2119 01e0 002B     		cmp	r3, #0
 2120 01e2 3FF44DAF 		beq	.L125
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
 2121              		.loc 1 1605 8
 2122 01e6 3B6B     		ldr	r3, [r7, #48]
 2123 01e8 002B     		cmp	r3, #0
 2124 01ea 0DD0     		beq	.L141
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
 2125              		.loc 1 1607 7
 2126 01ec FFF7FEFF 		bl	vPortEnterCritical
 2127              	.LBB144:
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
ARM GAS  /tmp/ccW8mGL0.s 			page 71


1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 2128              		.loc 1 1616 35
 2129 01f0 F86A     		ldr	r0, [r7, #44]
 2130 01f2 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2131 01f6 7862     		str	r0, [r7, #36]
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2132              		.loc 1 1617 8
 2133 01f8 FB6A     		ldr	r3, [r7, #44]
 2134 01fa 9B68     		ldr	r3, [r3, #8]
 2135 01fc 796A     		ldr	r1, [r7, #36]
 2136 01fe 1846     		mov	r0, r3
 2137 0200 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2138              	.LBE144:
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
 2139              		.loc 1 1619 7
 2140 0204 FFF7FEFF 		bl	vPortExitCritical
 2141              	.L141:
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 2142              		.loc 1 1625 12
 2143 0208 0023     		movs	r3, #0
 2144              	.L142:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2145              		.loc 1 1633 1 discriminator 7
 2146 020a 1846     		mov	r0, r3
 2147 020c 3837     		adds	r7, r7, #56
 2148              	.LCFI48:
 2149              		.cfi_def_cfa_offset 8
 2150 020e BD46     		mov	sp, r7
 2151              	.LCFI49:
 2152              		.cfi_def_cfa_register 13
 2153              		@ sp needed
 2154 0210 80BD     		pop	{r7, pc}
 2155              	.L144:
 2156 0212 00BF     		.align	2
 2157              	.L143:
 2158 0214 04ED00E0 		.word	-536810236
 2159              		.cfi_endproc
 2160              	.LFE14:
 2162              		.section	.text.xQueuePeek,"ax",%progbits
 2163              		.align	1
 2164              		.global	xQueuePeek
 2165              		.syntax unified
 2166              		.thumb
 2167              		.thumb_func
ARM GAS  /tmp/ccW8mGL0.s 			page 72


 2168              		.fpu fpv4-sp-d16
 2170              	xQueuePeek:
 2171              	.LFB15:
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2172              		.loc 1 1637 1
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 56
 2175              		@ frame_needed = 1, uses_anonymous_args = 0
 2176 0000 80B5     		push	{r7, lr}
 2177              	.LCFI50:
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 7, -8
 2180              		.cfi_offset 14, -4
 2181 0002 8EB0     		sub	sp, sp, #56
 2182              	.LCFI51:
 2183              		.cfi_def_cfa_offset 64
 2184 0004 00AF     		add	r7, sp, #0
 2185              	.LCFI52:
 2186              		.cfi_def_cfa_register 7
 2187 0006 F860     		str	r0, [r7, #12]
 2188 0008 B960     		str	r1, [r7, #8]
 2189 000a 7A60     		str	r2, [r7, #4]
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2190              		.loc 1 1638 12
 2191 000c 0023     		movs	r3, #0
 2192 000e 7B63     		str	r3, [r7, #52]
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2193              		.loc 1 1641 17
 2194 0010 FB68     		ldr	r3, [r7, #12]
 2195 0012 3B63     		str	r3, [r7, #48]
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
 2196              		.loc 1 1644 2
 2197 0014 3B6B     		ldr	r3, [r7, #48]
 2198 0016 002B     		cmp	r3, #0
 2199 0018 0AD1     		bne	.L146
 2200              	.LBB145:
 2201              	.LBB146:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2202              		.loc 2 195 2
 2203              		.syntax unified
 2204              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2205 001a 4FF05003 			mov r3, #80												
 2206 001e 83F31188 		msr basepri, r3											
 2207 0022 BFF36F8F 		isb														
 2208 0026 BFF34F8F 		dsb														
 2209              	
 2210              	@ 0 "" 2
 2211              		.thumb
 2212              		.syntax unified
 2213 002a 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccW8mGL0.s 			page 73


 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2214              		.loc 2 203 1
 2215 002c 00BF     		nop
 2216              	.L147:
 2217              	.LBE146:
 2218              	.LBE145:
 2219              		.loc 1 1644 2 discriminator 1
 2220 002e FEE7     		b	.L147
 2221              	.L146:
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2222              		.loc 1 1648 2
 2223 0030 BB68     		ldr	r3, [r7, #8]
 2224 0032 002B     		cmp	r3, #0
 2225 0034 03D1     		bne	.L148
 2226              		.loc 1 1648 2 is_stmt 0 discriminator 2
 2227 0036 3B6B     		ldr	r3, [r7, #48]
 2228 0038 1B6C     		ldr	r3, [r3, #64]
 2229 003a 002B     		cmp	r3, #0
 2230 003c 01D1     		bne	.L149
 2231              	.L148:
 2232              		.loc 1 1648 2 discriminator 3
 2233 003e 0123     		movs	r3, #1
 2234 0040 00E0     		b	.L150
 2235              	.L149:
 2236              		.loc 1 1648 2 discriminator 4
 2237 0042 0023     		movs	r3, #0
 2238              	.L150:
 2239              		.loc 1 1648 2 discriminator 6
 2240 0044 002B     		cmp	r3, #0
 2241 0046 0AD1     		bne	.L151
 2242              	.LBB147:
 2243              	.LBB148:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2244              		.loc 2 195 2 is_stmt 1
 2245              		.syntax unified
 2246              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2247 0048 4FF05003 			mov r3, #80												
 2248 004c 83F31188 		msr basepri, r3											
 2249 0050 BFF36F8F 		isb														
 2250 0054 BFF34F8F 		dsb														
 2251              	
 2252              	@ 0 "" 2
 2253              		.thumb
 2254              		.syntax unified
 2255 0058 3B62     		str	r3, [r7, #32]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2256              		.loc 2 203 1
 2257 005a 00BF     		nop
 2258              	.L152:
 2259              	.LBE148:
 2260              	.LBE147:
 2261              		.loc 1 1648 2 discriminator 2
 2262 005c FEE7     		b	.L152
 2263              	.L151:
ARM GAS  /tmp/ccW8mGL0.s 			page 74


1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 2264              		.loc 1 1653 3
 2265 005e FFF7FEFF 		bl	xTaskGetSchedulerState
 2266 0062 0346     		mov	r3, r0
 2267 0064 002B     		cmp	r3, #0
 2268 0066 02D1     		bne	.L153
 2269              		.loc 1 1653 3 is_stmt 0 discriminator 2
 2270 0068 7B68     		ldr	r3, [r7, #4]
 2271 006a 002B     		cmp	r3, #0
 2272 006c 01D1     		bne	.L154
 2273              	.L153:
 2274              		.loc 1 1653 3 discriminator 3
 2275 006e 0123     		movs	r3, #1
 2276 0070 00E0     		b	.L155
 2277              	.L154:
 2278              		.loc 1 1653 3 discriminator 4
 2279 0072 0023     		movs	r3, #0
 2280              	.L155:
 2281              		.loc 1 1653 3 discriminator 6
 2282 0074 002B     		cmp	r3, #0
 2283 0076 0AD1     		bne	.L156
 2284              	.LBB149:
 2285              	.LBB150:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2286              		.loc 2 195 2 is_stmt 1
 2287              		.syntax unified
 2288              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2289 0078 4FF05003 			mov r3, #80												
 2290 007c 83F31188 		msr basepri, r3											
 2291 0080 BFF36F8F 		isb														
 2292 0084 BFF34F8F 		dsb														
 2293              	
 2294              	@ 0 "" 2
 2295              		.thumb
 2296              		.syntax unified
 2297 0088 FB61     		str	r3, [r7, #28]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2298              		.loc 2 203 1
 2299 008a 00BF     		nop
 2300              	.L157:
 2301              	.LBE150:
 2302              	.LBE149:
 2303              		.loc 1 1653 3 discriminator 3
 2304 008c FEE7     		b	.L157
 2305              	.L156:
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
ARM GAS  /tmp/ccW8mGL0.s 			page 75


1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 2306              		.loc 1 1663 3
 2307 008e FFF7FEFF 		bl	vPortEnterCritical
 2308              	.LBB151:
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 2309              		.loc 1 1665 22
 2310 0092 3B6B     		ldr	r3, [r7, #48]
 2311 0094 9B6B     		ldr	r3, [r3, #56]
 2312 0096 FB62     		str	r3, [r7, #44]
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 2313              		.loc 1 1669 6
 2314 0098 FB6A     		ldr	r3, [r7, #44]
 2315 009a 002B     		cmp	r3, #0
 2316 009c 21D0     		beq	.L158
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
 2317              		.loc 1 1674 28
 2318 009e 3B6B     		ldr	r3, [r7, #48]
 2319 00a0 DB68     		ldr	r3, [r3, #12]
 2320 00a2 BB62     		str	r3, [r7, #40]
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 2321              		.loc 1 1676 5
 2322 00a4 B968     		ldr	r1, [r7, #8]
 2323 00a6 386B     		ldr	r0, [r7, #48]
 2324 00a8 FFF7FEFF 		bl	prvCopyDataFromQueue
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 2325              		.loc 1 1680 34
 2326 00ac 3B6B     		ldr	r3, [r7, #48]
 2327 00ae BA6A     		ldr	r2, [r7, #40]
 2328 00b0 DA60     		str	r2, [r3, #12]
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2329              		.loc 1 1684 9
 2330 00b2 3B6B     		ldr	r3, [r7, #48]
 2331 00b4 5B6A     		ldr	r3, [r3, #36]
 2332              		.loc 1 1684 7
 2333 00b6 002B     		cmp	r3, #0
 2334 00b8 0FD0     		beq	.L159
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2335              		.loc 1 1686 36
 2336 00ba 3B6B     		ldr	r3, [r7, #48]
 2337 00bc 2433     		adds	r3, r3, #36
ARM GAS  /tmp/ccW8mGL0.s 			page 76


 2338              		.loc 1 1686 10
 2339 00be 1846     		mov	r0, r3
 2340 00c0 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2341 00c4 0346     		mov	r3, r0
 2342              		.loc 1 1686 8
 2343 00c6 002B     		cmp	r3, #0
 2344 00c8 07D0     		beq	.L159
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 2345              		.loc 1 1689 7
 2346 00ca 3D4B     		ldr	r3, .L169
 2347 00cc 4FF08052 		mov	r2, #268435456
 2348 00d0 1A60     		str	r2, [r3]
 2349              		.syntax unified
 2350              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2351 00d2 BFF34F8F 		dsb
 2352              	@ 0 "" 2
 2353              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2354 00d6 BFF36F8F 		isb
 2355              	@ 0 "" 2
 2356              		.thumb
 2357              		.syntax unified
 2358              	.L159:
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 2359              		.loc 1 1701 5
 2360 00da FFF7FEFF 		bl	vPortExitCritical
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2361              		.loc 1 1702 12
 2362 00de 0123     		movs	r3, #1
 2363 00e0 69E0     		b	.L168
 2364              	.L158:
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 2365              		.loc 1 1706 22
 2366 00e2 7B68     		ldr	r3, [r7, #4]
 2367              		.loc 1 1706 7
 2368 00e4 002B     		cmp	r3, #0
 2369 00e6 03D1     		bne	.L161
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 2370              		.loc 1 1710 6
ARM GAS  /tmp/ccW8mGL0.s 			page 77


 2371 00e8 FFF7FEFF 		bl	vPortExitCritical
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2372              		.loc 1 1712 13
 2373 00ec 0023     		movs	r3, #0
 2374 00ee 62E0     		b	.L168
 2375              	.L161:
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 2376              		.loc 1 1714 12
 2377 00f0 7B6B     		ldr	r3, [r7, #52]
 2378 00f2 002B     		cmp	r3, #0
 2379 00f4 06D1     		bne	.L162
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 2380              		.loc 1 1719 6
 2381 00f6 07F11403 		add	r3, r7, #20
 2382 00fa 1846     		mov	r0, r3
 2383 00fc FFF7FEFF 		bl	vTaskInternalSetTimeOutState
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2384              		.loc 1 1720 20
 2385 0100 0123     		movs	r3, #1
 2386 0102 7B63     		str	r3, [r7, #52]
 2387              	.L162:
 2388              	.LBE151:
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 2389              		.loc 1 1729 3
 2390 0104 FFF7FEFF 		bl	vPortExitCritical
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 2391              		.loc 1 1734 3
 2392 0108 FFF7FEFF 		bl	vTaskSuspendAll
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2393              		.loc 1 1735 3
 2394 010c FFF7FEFF 		bl	vPortEnterCritical
 2395 0110 3B6B     		ldr	r3, [r7, #48]
 2396 0112 93F84430 		ldrb	r3, [r3, #68]
 2397 0116 5BB2     		sxtb	r3, r3
 2398 0118 B3F1FF3F 		cmp	r3, #-1
 2399 011c 03D1     		bne	.L163
 2400              		.loc 1 1735 3 is_stmt 0 discriminator 1
 2401 011e 3B6B     		ldr	r3, [r7, #48]
 2402 0120 0022     		movs	r2, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 78


 2403 0122 83F84420 		strb	r2, [r3, #68]
 2404              	.L163:
 2405              		.loc 1 1735 3 discriminator 3
 2406 0126 3B6B     		ldr	r3, [r7, #48]
 2407 0128 93F84530 		ldrb	r3, [r3, #69]
 2408 012c 5BB2     		sxtb	r3, r3
 2409 012e B3F1FF3F 		cmp	r3, #-1
 2410 0132 03D1     		bne	.L164
 2411              		.loc 1 1735 3 discriminator 4
 2412 0134 3B6B     		ldr	r3, [r7, #48]
 2413 0136 0022     		movs	r2, #0
 2414 0138 83F84520 		strb	r2, [r3, #69]
 2415              	.L164:
 2416              		.loc 1 1735 3 discriminator 6
 2417 013c FFF7FEFF 		bl	vPortExitCritical
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 2418              		.loc 1 1738 7 is_stmt 1 discriminator 6
 2419 0140 3A1D     		adds	r2, r7, #4
 2420 0142 07F11403 		add	r3, r7, #20
 2421 0146 1146     		mov	r1, r2
 2422 0148 1846     		mov	r0, r3
 2423 014a FFF7FEFF 		bl	xTaskCheckForTimeOut
 2424 014e 0346     		mov	r3, r0
 2425              		.loc 1 1738 5 discriminator 6
 2426 0150 002B     		cmp	r3, #0
 2427 0152 23D1     		bne	.L165
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2428              		.loc 1 1742 8
 2429 0154 386B     		ldr	r0, [r7, #48]
 2430 0156 FFF7FEFF 		bl	prvIsQueueEmpty
 2431 015a 0346     		mov	r3, r0
 2432              		.loc 1 1742 6
 2433 015c 002B     		cmp	r3, #0
 2434 015e 17D0     		beq	.L166
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2435              		.loc 1 1745 5
 2436 0160 3B6B     		ldr	r3, [r7, #48]
 2437 0162 2433     		adds	r3, r3, #36
 2438 0164 7A68     		ldr	r2, [r7, #4]
 2439 0166 1146     		mov	r1, r2
 2440 0168 1846     		mov	r0, r3
 2441 016a FFF7FEFF 		bl	vTaskPlaceOnEventList
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2442              		.loc 1 1746 5
 2443 016e 386B     		ldr	r0, [r7, #48]
 2444 0170 FFF7FEFF 		bl	prvUnlockQueue
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2445              		.loc 1 1747 9
 2446 0174 FFF7FEFF 		bl	xTaskResumeAll
 2447 0178 0346     		mov	r3, r0
ARM GAS  /tmp/ccW8mGL0.s 			page 79


 2448              		.loc 1 1747 7
 2449 017a 002B     		cmp	r3, #0
 2450 017c 87D1     		bne	.L156
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 2451              		.loc 1 1749 6
 2452 017e 104B     		ldr	r3, .L169
 2453 0180 4FF08052 		mov	r2, #268435456
 2454 0184 1A60     		str	r2, [r3]
 2455              		.syntax unified
 2456              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2457 0186 BFF34F8F 		dsb
 2458              	@ 0 "" 2
 2459              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2460 018a BFF36F8F 		isb
 2461              	@ 0 "" 2
 2462              		.thumb
 2463              		.syntax unified
 2464 018e 7EE7     		b	.L156
 2465              	.L166:
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2466              		.loc 1 1760 5
 2467 0190 386B     		ldr	r0, [r7, #48]
 2468 0192 FFF7FEFF 		bl	prvUnlockQueue
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2469              		.loc 1 1761 14
 2470 0196 FFF7FEFF 		bl	xTaskResumeAll
 2471 019a 78E7     		b	.L156
 2472              	.L165:
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 2473              		.loc 1 1768 4
 2474 019c 386B     		ldr	r0, [r7, #48]
 2475 019e FFF7FEFF 		bl	prvUnlockQueue
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2476              		.loc 1 1769 13
 2477 01a2 FFF7FEFF 		bl	xTaskResumeAll
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2478              		.loc 1 1771 8
 2479 01a6 386B     		ldr	r0, [r7, #48]
 2480 01a8 FFF7FEFF 		bl	prvIsQueueEmpty
ARM GAS  /tmp/ccW8mGL0.s 			page 80


 2481 01ac 0346     		mov	r3, r0
 2482              		.loc 1 1771 6
 2483 01ae 002B     		cmp	r3, #0
 2484 01b0 3FF46DAF 		beq	.L156
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 2485              		.loc 1 1774 12
 2486 01b4 0023     		movs	r3, #0
 2487              	.L168:
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2488              		.loc 1 1782 1 discriminator 6
 2489 01b6 1846     		mov	r0, r3
 2490 01b8 3837     		adds	r7, r7, #56
 2491              	.LCFI53:
 2492              		.cfi_def_cfa_offset 8
 2493 01ba BD46     		mov	sp, r7
 2494              	.LCFI54:
 2495              		.cfi_def_cfa_register 13
 2496              		@ sp needed
 2497 01bc 80BD     		pop	{r7, pc}
 2498              	.L170:
 2499 01be 00BF     		.align	2
 2500              	.L169:
 2501 01c0 04ED00E0 		.word	-536810236
 2502              		.cfi_endproc
 2503              	.LFE15:
 2505              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2506              		.align	1
 2507              		.global	xQueueReceiveFromISR
 2508              		.syntax unified
 2509              		.thumb
 2510              		.thumb_func
 2511              		.fpu fpv4-sp-d16
 2513              	xQueueReceiveFromISR:
 2514              	.LFB16:
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2515              		.loc 1 1786 1
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 56
 2518              		@ frame_needed = 1, uses_anonymous_args = 0
 2519 0000 80B5     		push	{r7, lr}
 2520              	.LCFI55:
 2521              		.cfi_def_cfa_offset 8
 2522              		.cfi_offset 7, -8
 2523              		.cfi_offset 14, -4
 2524 0002 8EB0     		sub	sp, sp, #56
ARM GAS  /tmp/ccW8mGL0.s 			page 81


 2525              	.LCFI56:
 2526              		.cfi_def_cfa_offset 64
 2527 0004 00AF     		add	r7, sp, #0
 2528              	.LCFI57:
 2529              		.cfi_def_cfa_register 7
 2530 0006 F860     		str	r0, [r7, #12]
 2531 0008 B960     		str	r1, [r7, #8]
 2532 000a 7A60     		str	r2, [r7, #4]
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2533              		.loc 1 1789 17
 2534 000c FB68     		ldr	r3, [r7, #12]
 2535 000e 3B63     		str	r3, [r7, #48]
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 2536              		.loc 1 1791 2
 2537 0010 3B6B     		ldr	r3, [r7, #48]
 2538 0012 002B     		cmp	r3, #0
 2539 0014 0AD1     		bne	.L172
 2540              	.LBB152:
 2541              	.LBB153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2542              		.loc 2 195 2
 2543              		.syntax unified
 2544              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2545 0016 4FF05003 			mov r3, #80												
 2546 001a 83F31188 		msr basepri, r3											
 2547 001e BFF36F8F 		isb														
 2548 0022 BFF34F8F 		dsb														
 2549              	
 2550              	@ 0 "" 2
 2551              		.thumb
 2552              		.syntax unified
 2553 0026 3B62     		str	r3, [r7, #32]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2554              		.loc 2 203 1
 2555 0028 00BF     		nop
 2556              	.L173:
 2557              	.LBE153:
 2558              	.LBE152:
 2559              		.loc 1 1791 2 discriminator 1
 2560 002a FEE7     		b	.L173
 2561              	.L172:
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2562              		.loc 1 1792 2
 2563 002c BB68     		ldr	r3, [r7, #8]
 2564 002e 002B     		cmp	r3, #0
 2565 0030 03D1     		bne	.L174
 2566              		.loc 1 1792 2 is_stmt 0 discriminator 2
 2567 0032 3B6B     		ldr	r3, [r7, #48]
 2568 0034 1B6C     		ldr	r3, [r3, #64]
 2569 0036 002B     		cmp	r3, #0
 2570 0038 01D1     		bne	.L175
 2571              	.L174:
 2572              		.loc 1 1792 2 discriminator 3
 2573 003a 0123     		movs	r3, #1
ARM GAS  /tmp/ccW8mGL0.s 			page 82


 2574 003c 00E0     		b	.L176
 2575              	.L175:
 2576              		.loc 1 1792 2 discriminator 4
 2577 003e 0023     		movs	r3, #0
 2578              	.L176:
 2579              		.loc 1 1792 2 discriminator 6
 2580 0040 002B     		cmp	r3, #0
 2581 0042 0AD1     		bne	.L177
 2582              	.LBB154:
 2583              	.LBB155:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2584              		.loc 2 195 2 is_stmt 1
 2585              		.syntax unified
 2586              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2587 0044 4FF05003 			mov r3, #80												
 2588 0048 83F31188 		msr basepri, r3											
 2589 004c BFF36F8F 		isb														
 2590 0050 BFF34F8F 		dsb														
 2591              	
 2592              	@ 0 "" 2
 2593              		.thumb
 2594              		.syntax unified
 2595 0054 FB61     		str	r3, [r7, #28]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2596              		.loc 2 203 1
 2597 0056 00BF     		nop
 2598              	.L178:
 2599              	.LBE155:
 2600              	.LBE154:
 2601              		.loc 1 1792 2 discriminator 2
 2602 0058 FEE7     		b	.L178
 2603              	.L177:
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2604              		.loc 1 1808 2
 2605 005a FFF7FEFF 		bl	vPortValidateInterruptPriority
 2606              	.LBB156:
 2607              	.LBB157:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2608              		.loc 2 211 2
 2609              		.syntax unified
 2610              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2611 005e EFF31182 			mrs r2, basepri											
ARM GAS  /tmp/ccW8mGL0.s 			page 83


 2612 0062 4FF05003 		mov r3, #80												
 2613 0066 83F31188 		msr basepri, r3											
 2614 006a BFF36F8F 		isb														
 2615 006e BFF34F8F 		dsb														
 2616              	
 2617              	@ 0 "" 2
 2618              		.thumb
 2619              		.syntax unified
 2620 0072 BA61     		str	r2, [r7, #24]
 2621 0074 7B61     		str	r3, [r7, #20]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2622              		.loc 2 223 9
 2623 0076 BB69     		ldr	r3, [r7, #24]
 2624              	.LBE157:
 2625              	.LBE156:
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2626              		.loc 1 1810 27
 2627 0078 FB62     		str	r3, [r7, #44]
 2628              	.LBB158:
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 2629              		.loc 1 1812 21
 2630 007a 3B6B     		ldr	r3, [r7, #48]
 2631 007c 9B6B     		ldr	r3, [r3, #56]
 2632 007e BB62     		str	r3, [r7, #40]
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 2633              		.loc 1 1815 5
 2634 0080 BB6A     		ldr	r3, [r7, #40]
 2635 0082 002B     		cmp	r3, #0
 2636 0084 2FD0     		beq	.L180
 2637              	.LBB159:
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
 2638              		.loc 1 1817 17
 2639 0086 3B6B     		ldr	r3, [r7, #48]
 2640 0088 93F84430 		ldrb	r3, [r3, #68]
 2641 008c 87F82730 		strb	r3, [r7, #39]
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2642              		.loc 1 1821 4
 2643 0090 B968     		ldr	r1, [r7, #8]
 2644 0092 386B     		ldr	r0, [r7, #48]
 2645 0094 FFF7FEFF 		bl	prvCopyDataFromQueue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2646              		.loc 1 1822 51
 2647 0098 BB6A     		ldr	r3, [r7, #40]
 2648 009a 5A1E     		subs	r2, r3, #1
 2649              		.loc 1 1822 31
 2650 009c 3B6B     		ldr	r3, [r7, #48]
 2651 009e 9A63     		str	r2, [r3, #56]
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
ARM GAS  /tmp/ccW8mGL0.s 			page 84


1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
 2652              		.loc 1 1828 6
 2653 00a0 97F92730 		ldrsb	r3, [r7, #39]
 2654 00a4 B3F1FF3F 		cmp	r3, #-1
 2655 00a8 12D1     		bne	.L181
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2656              		.loc 1 1830 9
 2657 00aa 3B6B     		ldr	r3, [r7, #48]
 2658 00ac 1B69     		ldr	r3, [r3, #16]
 2659              		.loc 1 1830 7
 2660 00ae 002B     		cmp	r3, #0
 2661 00b0 16D0     		beq	.L182
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2662              		.loc 1 1832 36
 2663 00b2 3B6B     		ldr	r3, [r7, #48]
 2664 00b4 1033     		adds	r3, r3, #16
 2665              		.loc 1 1832 10
 2666 00b6 1846     		mov	r0, r3
 2667 00b8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2668 00bc 0346     		mov	r3, r0
 2669              		.loc 1 1832 8
 2670 00be 002B     		cmp	r3, #0
 2671 00c0 0ED0     		beq	.L182
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 2672              		.loc 1 1836 9
 2673 00c2 7B68     		ldr	r3, [r7, #4]
 2674 00c4 002B     		cmp	r3, #0
 2675 00c6 0BD0     		beq	.L182
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 2676              		.loc 1 1838 35
 2677 00c8 7B68     		ldr	r3, [r7, #4]
 2678 00ca 0122     		movs	r2, #1
 2679 00cc 1A60     		str	r2, [r3]
 2680 00ce 07E0     		b	.L182
 2681              	.L181:
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccW8mGL0.s 			page 85


1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 2682              		.loc 1 1859 45
 2683 00d0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 2684 00d4 0133     		adds	r3, r3, #1
 2685 00d6 DBB2     		uxtb	r3, r3
 2686              		.loc 1 1859 24
 2687 00d8 5AB2     		sxtb	r2, r3
 2688              		.loc 1 1859 22
 2689 00da 3B6B     		ldr	r3, [r7, #48]
 2690 00dc 83F84420 		strb	r2, [r3, #68]
 2691              	.L182:
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2692              		.loc 1 1862 12
 2693 00e0 0123     		movs	r3, #1
 2694 00e2 7B63     		str	r3, [r7, #52]
 2695              	.LBE159:
 2696 00e4 01E0     		b	.L183
 2697              	.L180:
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 2698              		.loc 1 1866 12
 2699 00e6 0023     		movs	r3, #0
 2700 00e8 7B63     		str	r3, [r7, #52]
 2701              	.L183:
 2702 00ea FB6A     		ldr	r3, [r7, #44]
 2703 00ec 3B61     		str	r3, [r7, #16]
 2704              	.LBE158:
 2705              	.LBB160:
 2706              	.LBB161:
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2707              		.loc 2 229 2
 2708 00ee 3B69     		ldr	r3, [r7, #16]
 2709              		.syntax unified
 2710              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2711 00f0 83F31188 			msr basepri, r3	
 2712              	@ 0 "" 2
 2713              		.loc 2 233 1
 2714              		.thumb
 2715              		.syntax unified
 2716 00f4 00BF     		nop
 2717              	.LBE161:
 2718              	.LBE160:
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
ARM GAS  /tmp/ccW8mGL0.s 			page 86


1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 2719              		.loc 1 1872 9
 2720 00f6 7B6B     		ldr	r3, [r7, #52]
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2721              		.loc 1 1873 1
 2722 00f8 1846     		mov	r0, r3
 2723 00fa 3837     		adds	r7, r7, #56
 2724              	.LCFI58:
 2725              		.cfi_def_cfa_offset 8
 2726 00fc BD46     		mov	sp, r7
 2727              	.LCFI59:
 2728              		.cfi_def_cfa_register 13
 2729              		@ sp needed
 2730 00fe 80BD     		pop	{r7, pc}
 2731              		.cfi_endproc
 2732              	.LFE16:
 2734              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2735              		.align	1
 2736              		.global	xQueuePeekFromISR
 2737              		.syntax unified
 2738              		.thumb
 2739              		.thumb_func
 2740              		.fpu fpv4-sp-d16
 2742              	xQueuePeekFromISR:
 2743              	.LFB17:
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2744              		.loc 1 1877 1
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 48
 2747              		@ frame_needed = 1, uses_anonymous_args = 0
 2748 0000 80B5     		push	{r7, lr}
 2749              	.LCFI60:
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 7, -8
 2752              		.cfi_offset 14, -4
 2753 0002 8CB0     		sub	sp, sp, #48
 2754              	.LCFI61:
 2755              		.cfi_def_cfa_offset 56
 2756 0004 00AF     		add	r7, sp, #0
 2757              	.LCFI62:
 2758              		.cfi_def_cfa_register 7
 2759 0006 7860     		str	r0, [r7, #4]
 2760 0008 3960     		str	r1, [r7]
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2761              		.loc 1 1881 17
 2762 000a 7B68     		ldr	r3, [r7, #4]
 2763 000c BB62     		str	r3, [r7, #40]
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 2764              		.loc 1 1883 2
ARM GAS  /tmp/ccW8mGL0.s 			page 87


 2765 000e BB6A     		ldr	r3, [r7, #40]
 2766 0010 002B     		cmp	r3, #0
 2767 0012 0AD1     		bne	.L186
 2768              	.LBB162:
 2769              	.LBB163:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2770              		.loc 2 195 2
 2771              		.syntax unified
 2772              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2773 0014 4FF05003 			mov r3, #80												
 2774 0018 83F31188 		msr basepri, r3											
 2775 001c BFF36F8F 		isb														
 2776 0020 BFF34F8F 		dsb														
 2777              	
 2778              	@ 0 "" 2
 2779              		.thumb
 2780              		.syntax unified
 2781 0024 FB61     		str	r3, [r7, #28]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2782              		.loc 2 203 1
 2783 0026 00BF     		nop
 2784              	.L187:
 2785              	.LBE163:
 2786              	.LBE162:
 2787              		.loc 1 1883 2 discriminator 1
 2788 0028 FEE7     		b	.L187
 2789              	.L186:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2790              		.loc 1 1884 2
 2791 002a 3B68     		ldr	r3, [r7]
 2792 002c 002B     		cmp	r3, #0
 2793 002e 03D1     		bne	.L188
 2794              		.loc 1 1884 2 is_stmt 0 discriminator 2
 2795 0030 BB6A     		ldr	r3, [r7, #40]
 2796 0032 1B6C     		ldr	r3, [r3, #64]
 2797 0034 002B     		cmp	r3, #0
 2798 0036 01D1     		bne	.L189
 2799              	.L188:
 2800              		.loc 1 1884 2 discriminator 3
 2801 0038 0123     		movs	r3, #1
 2802 003a 00E0     		b	.L190
 2803              	.L189:
 2804              		.loc 1 1884 2 discriminator 4
 2805 003c 0023     		movs	r3, #0
 2806              	.L190:
 2807              		.loc 1 1884 2 discriminator 6
 2808 003e 002B     		cmp	r3, #0
 2809 0040 0AD1     		bne	.L191
 2810              	.LBB164:
 2811              	.LBB165:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2812              		.loc 2 195 2 is_stmt 1
 2813              		.syntax unified
 2814              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2815 0042 4FF05003 			mov r3, #80												
 2816 0046 83F31188 		msr basepri, r3											
 2817 004a BFF36F8F 		isb														
ARM GAS  /tmp/ccW8mGL0.s 			page 88


 2818 004e BFF34F8F 		dsb														
 2819              	
 2820              	@ 0 "" 2
 2821              		.thumb
 2822              		.syntax unified
 2823 0052 BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2824              		.loc 2 203 1
 2825 0054 00BF     		nop
 2826              	.L192:
 2827              	.LBE165:
 2828              	.LBE164:
 2829              		.loc 1 1884 2 discriminator 2
 2830 0056 FEE7     		b	.L192
 2831              	.L191:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2832              		.loc 1 1885 2
 2833 0058 BB6A     		ldr	r3, [r7, #40]
 2834 005a 1B6C     		ldr	r3, [r3, #64]
 2835 005c 002B     		cmp	r3, #0
 2836 005e 0AD1     		bne	.L193
 2837              	.LBB166:
 2838              	.LBB167:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2839              		.loc 2 195 2
 2840              		.syntax unified
 2841              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2842 0060 4FF05003 			mov r3, #80												
 2843 0064 83F31188 		msr basepri, r3											
 2844 0068 BFF36F8F 		isb														
 2845 006c BFF34F8F 		dsb														
 2846              	
 2847              	@ 0 "" 2
 2848              		.thumb
 2849              		.syntax unified
 2850 0070 7B61     		str	r3, [r7, #20]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2851              		.loc 2 203 1
 2852 0072 00BF     		nop
 2853              	.L194:
 2854              	.LBE167:
 2855              	.LBE166:
 2856              		.loc 1 1885 2 discriminator 3
 2857 0074 FEE7     		b	.L194
 2858              	.L193:
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
ARM GAS  /tmp/ccW8mGL0.s 			page 89


1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2859              		.loc 1 1901 2
 2860 0076 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2861              	.LBB168:
 2862              	.LBB169:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2863              		.loc 2 211 2
 2864              		.syntax unified
 2865              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2866 007a EFF31182 			mrs r2, basepri											
 2867 007e 4FF05003 		mov r3, #80												
 2868 0082 83F31188 		msr basepri, r3											
 2869 0086 BFF36F8F 		isb														
 2870 008a BFF34F8F 		dsb														
 2871              	
 2872              	@ 0 "" 2
 2873              		.thumb
 2874              		.syntax unified
 2875 008e 3A61     		str	r2, [r7, #16]
 2876 0090 FB60     		str	r3, [r7, #12]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2877              		.loc 2 223 9
 2878 0092 3B69     		ldr	r3, [r7, #16]
 2879              	.LBE169:
 2880              	.LBE168:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2881              		.loc 1 1903 27
 2882 0094 7B62     		str	r3, [r7, #36]
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 2883              		.loc 1 1906 14
 2884 0096 BB6A     		ldr	r3, [r7, #40]
 2885 0098 9B6B     		ldr	r3, [r3, #56]
 2886              		.loc 1 1906 5
 2887 009a 002B     		cmp	r3, #0
 2888 009c 0CD0     		beq	.L196
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
 2889              		.loc 1 1912 27
 2890 009e BB6A     		ldr	r3, [r7, #40]
 2891 00a0 DB68     		ldr	r3, [r3, #12]
 2892 00a2 3B62     		str	r3, [r7, #32]
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2893              		.loc 1 1913 4
 2894 00a4 3968     		ldr	r1, [r7]
 2895 00a6 B86A     		ldr	r0, [r7, #40]
 2896 00a8 FFF7FEFF 		bl	prvCopyDataFromQueue
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
ARM GAS  /tmp/ccW8mGL0.s 			page 90


 2897              		.loc 1 1914 33
 2898 00ac BB6A     		ldr	r3, [r7, #40]
 2899 00ae 3A6A     		ldr	r2, [r7, #32]
 2900 00b0 DA60     		str	r2, [r3, #12]
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2901              		.loc 1 1916 12
 2902 00b2 0123     		movs	r3, #1
 2903 00b4 FB62     		str	r3, [r7, #44]
 2904 00b6 01E0     		b	.L197
 2905              	.L196:
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 2906              		.loc 1 1920 12
 2907 00b8 0023     		movs	r3, #0
 2908 00ba FB62     		str	r3, [r7, #44]
 2909              	.L197:
 2910 00bc 7B6A     		ldr	r3, [r7, #36]
 2911 00be BB60     		str	r3, [r7, #8]
 2912              	.LBB170:
 2913              	.LBB171:
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2914              		.loc 2 229 2
 2915 00c0 BB68     		ldr	r3, [r7, #8]
 2916              		.syntax unified
 2917              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2918 00c2 83F31188 			msr basepri, r3	
 2919              	@ 0 "" 2
 2920              		.loc 2 233 1
 2921              		.thumb
 2922              		.syntax unified
 2923 00c6 00BF     		nop
 2924              	.LBE171:
 2925              	.LBE170:
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 2926              		.loc 1 1926 9
 2927 00c8 FB6A     		ldr	r3, [r7, #44]
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2928              		.loc 1 1927 1
 2929 00ca 1846     		mov	r0, r3
 2930 00cc 3037     		adds	r7, r7, #48
 2931              	.LCFI63:
 2932              		.cfi_def_cfa_offset 8
 2933 00ce BD46     		mov	sp, r7
 2934              	.LCFI64:
 2935              		.cfi_def_cfa_register 13
 2936              		@ sp needed
 2937 00d0 80BD     		pop	{r7, pc}
 2938              		.cfi_endproc
 2939              	.LFE17:
ARM GAS  /tmp/ccW8mGL0.s 			page 91


 2941              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2942              		.align	1
 2943              		.global	uxQueueMessagesWaiting
 2944              		.syntax unified
 2945              		.thumb
 2946              		.thumb_func
 2947              		.fpu fpv4-sp-d16
 2949              	uxQueueMessagesWaiting:
 2950              	.LFB18:
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2951              		.loc 1 1931 1
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 16
 2954              		@ frame_needed = 1, uses_anonymous_args = 0
 2955 0000 80B5     		push	{r7, lr}
 2956              	.LCFI65:
 2957              		.cfi_def_cfa_offset 8
 2958              		.cfi_offset 7, -8
 2959              		.cfi_offset 14, -4
 2960 0002 84B0     		sub	sp, sp, #16
 2961              	.LCFI66:
 2962              		.cfi_def_cfa_offset 24
 2963 0004 00AF     		add	r7, sp, #0
 2964              	.LCFI67:
 2965              		.cfi_def_cfa_register 7
 2966 0006 7860     		str	r0, [r7, #4]
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2967              		.loc 1 1934 2
 2968 0008 7B68     		ldr	r3, [r7, #4]
 2969 000a 002B     		cmp	r3, #0
 2970 000c 0AD1     		bne	.L200
 2971              	.LBB172:
 2972              	.LBB173:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2973              		.loc 2 195 2
 2974              		.syntax unified
 2975              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2976 000e 4FF05003 			mov r3, #80												
 2977 0012 83F31188 		msr basepri, r3											
 2978 0016 BFF36F8F 		isb														
 2979 001a BFF34F8F 		dsb														
 2980              	
 2981              	@ 0 "" 2
 2982              		.thumb
 2983              		.syntax unified
 2984 001e BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2985              		.loc 2 203 1
 2986 0020 00BF     		nop
 2987              	.L201:
 2988              	.LBE173:
 2989              	.LBE172:
ARM GAS  /tmp/ccW8mGL0.s 			page 92


 2990              		.loc 1 1934 2 discriminator 1
 2991 0022 FEE7     		b	.L201
 2992              	.L200:
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 2993              		.loc 1 1936 2
 2994 0024 FFF7FEFF 		bl	vPortEnterCritical
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 2995              		.loc 1 1938 12
 2996 0028 7B68     		ldr	r3, [r7, #4]
 2997 002a 9B6B     		ldr	r3, [r3, #56]
 2998 002c FB60     		str	r3, [r7, #12]
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 2999              		.loc 1 1940 2
 3000 002e FFF7FEFF 		bl	vPortExitCritical
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 3001              		.loc 1 1942 9
 3002 0032 FB68     		ldr	r3, [r7, #12]
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3003              		.loc 1 1943 1
 3004 0034 1846     		mov	r0, r3
 3005 0036 1037     		adds	r7, r7, #16
 3006              	.LCFI68:
 3007              		.cfi_def_cfa_offset 8
 3008 0038 BD46     		mov	sp, r7
 3009              	.LCFI69:
 3010              		.cfi_def_cfa_register 13
 3011              		@ sp needed
 3012 003a 80BD     		pop	{r7, pc}
 3013              		.cfi_endproc
 3014              	.LFE18:
 3016              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3017              		.align	1
 3018              		.global	uxQueueSpacesAvailable
 3019              		.syntax unified
 3020              		.thumb
 3021              		.thumb_func
 3022              		.fpu fpv4-sp-d16
 3024              	uxQueueSpacesAvailable:
 3025              	.LFB19:
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3026              		.loc 1 1947 1
 3027              		.cfi_startproc
 3028              		@ args = 0, pretend = 0, frame = 24
 3029              		@ frame_needed = 1, uses_anonymous_args = 0
 3030 0000 80B5     		push	{r7, lr}
 3031              	.LCFI70:
 3032              		.cfi_def_cfa_offset 8
 3033              		.cfi_offset 7, -8
 3034              		.cfi_offset 14, -4
 3035 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccW8mGL0.s 			page 93


 3036              	.LCFI71:
 3037              		.cfi_def_cfa_offset 32
 3038 0004 00AF     		add	r7, sp, #0
 3039              	.LCFI72:
 3040              		.cfi_def_cfa_register 7
 3041 0006 7860     		str	r0, [r7, #4]
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3042              		.loc 1 1949 17
 3043 0008 7B68     		ldr	r3, [r7, #4]
 3044 000a 7B61     		str	r3, [r7, #20]
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3045              		.loc 1 1951 2
 3046 000c 7B69     		ldr	r3, [r7, #20]
 3047 000e 002B     		cmp	r3, #0
 3048 0010 0AD1     		bne	.L204
 3049              	.LBB174:
 3050              	.LBB175:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3051              		.loc 2 195 2
 3052              		.syntax unified
 3053              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3054 0012 4FF05003 			mov r3, #80												
 3055 0016 83F31188 		msr basepri, r3											
 3056 001a BFF36F8F 		isb														
 3057 001e BFF34F8F 		dsb														
 3058              	
 3059              	@ 0 "" 2
 3060              		.thumb
 3061              		.syntax unified
 3062 0022 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3063              		.loc 2 203 1
 3064 0024 00BF     		nop
 3065              	.L205:
 3066              	.LBE175:
 3067              	.LBE174:
 3068              		.loc 1 1951 2 discriminator 1
 3069 0026 FEE7     		b	.L205
 3070              	.L204:
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3071              		.loc 1 1953 2
 3072 0028 FFF7FEFF 		bl	vPortEnterCritical
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 3073              		.loc 1 1955 21
 3074 002c 7B69     		ldr	r3, [r7, #20]
 3075 002e DA6B     		ldr	r2, [r3, #60]
 3076              		.loc 1 1955 41
 3077 0030 7B69     		ldr	r3, [r7, #20]
 3078 0032 9B6B     		ldr	r3, [r3, #56]
 3079              		.loc 1 1955 12
 3080 0034 D31A     		subs	r3, r2, r3
 3081 0036 3B61     		str	r3, [r7, #16]
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccW8mGL0.s 			page 94


1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3082              		.loc 1 1957 2
 3083 0038 FFF7FEFF 		bl	vPortExitCritical
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 3084              		.loc 1 1959 9
 3085 003c 3B69     		ldr	r3, [r7, #16]
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3086              		.loc 1 1960 1
 3087 003e 1846     		mov	r0, r3
 3088 0040 1837     		adds	r7, r7, #24
 3089              	.LCFI73:
 3090              		.cfi_def_cfa_offset 8
 3091 0042 BD46     		mov	sp, r7
 3092              	.LCFI74:
 3093              		.cfi_def_cfa_register 13
 3094              		@ sp needed
 3095 0044 80BD     		pop	{r7, pc}
 3096              		.cfi_endproc
 3097              	.LFE19:
 3099              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3100              		.align	1
 3101              		.global	uxQueueMessagesWaitingFromISR
 3102              		.syntax unified
 3103              		.thumb
 3104              		.thumb_func
 3105              		.fpu fpv4-sp-d16
 3107              	uxQueueMessagesWaitingFromISR:
 3108              	.LFB20:
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3109              		.loc 1 1964 1
 3110              		.cfi_startproc
 3111              		@ args = 0, pretend = 0, frame = 24
 3112              		@ frame_needed = 1, uses_anonymous_args = 0
 3113              		@ link register save eliminated.
 3114 0000 80B4     		push	{r7}
 3115              	.LCFI75:
 3116              		.cfi_def_cfa_offset 4
 3117              		.cfi_offset 7, -4
 3118 0002 87B0     		sub	sp, sp, #28
 3119              	.LCFI76:
 3120              		.cfi_def_cfa_offset 32
 3121 0004 00AF     		add	r7, sp, #0
 3122              	.LCFI77:
 3123              		.cfi_def_cfa_register 7
 3124 0006 7860     		str	r0, [r7, #4]
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3125              		.loc 1 1966 17
 3126 0008 7B68     		ldr	r3, [r7, #4]
 3127 000a 7B61     		str	r3, [r7, #20]
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3128              		.loc 1 1968 2
ARM GAS  /tmp/ccW8mGL0.s 			page 95


 3129 000c 7B69     		ldr	r3, [r7, #20]
 3130 000e 002B     		cmp	r3, #0
 3131 0010 0AD1     		bne	.L208
 3132              	.LBB176:
 3133              	.LBB177:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3134              		.loc 2 195 2
 3135              		.syntax unified
 3136              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3137 0012 4FF05003 			mov r3, #80												
 3138 0016 83F31188 		msr basepri, r3											
 3139 001a BFF36F8F 		isb														
 3140 001e BFF34F8F 		dsb														
 3141              	
 3142              	@ 0 "" 2
 3143              		.thumb
 3144              		.syntax unified
 3145 0022 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3146              		.loc 2 203 1
 3147 0024 00BF     		nop
 3148              	.L209:
 3149              	.LBE177:
 3150              	.LBE176:
 3151              		.loc 1 1968 2 discriminator 1
 3152 0026 FEE7     		b	.L209
 3153              	.L208:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3154              		.loc 1 1969 11
 3155 0028 7B69     		ldr	r3, [r7, #20]
 3156 002a 9B6B     		ldr	r3, [r3, #56]
 3157 002c 3B61     		str	r3, [r7, #16]
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 3158              		.loc 1 1971 9
 3159 002e 3B69     		ldr	r3, [r7, #16]
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3160              		.loc 1 1972 1
 3161 0030 1846     		mov	r0, r3
 3162 0032 1C37     		adds	r7, r7, #28
 3163              	.LCFI78:
 3164              		.cfi_def_cfa_offset 4
 3165 0034 BD46     		mov	sp, r7
 3166              	.LCFI79:
 3167              		.cfi_def_cfa_register 13
 3168              		@ sp needed
 3169 0036 5DF8047B 		ldr	r7, [sp], #4
 3170              	.LCFI80:
 3171              		.cfi_restore 7
 3172              		.cfi_def_cfa_offset 0
 3173 003a 7047     		bx	lr
 3174              		.cfi_endproc
 3175              	.LFE20:
 3177              		.section	.text.vQueueDelete,"ax",%progbits
 3178              		.align	1
 3179              		.global	vQueueDelete
 3180              		.syntax unified
ARM GAS  /tmp/ccW8mGL0.s 			page 96


 3181              		.thumb
 3182              		.thumb_func
 3183              		.fpu fpv4-sp-d16
 3185              	vQueueDelete:
 3186              	.LFB21:
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3187              		.loc 1 1976 1
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 16
 3190              		@ frame_needed = 1, uses_anonymous_args = 0
 3191 0000 80B5     		push	{r7, lr}
 3192              	.LCFI81:
 3193              		.cfi_def_cfa_offset 8
 3194              		.cfi_offset 7, -8
 3195              		.cfi_offset 14, -4
 3196 0002 84B0     		sub	sp, sp, #16
 3197              	.LCFI82:
 3198              		.cfi_def_cfa_offset 24
 3199 0004 00AF     		add	r7, sp, #0
 3200              	.LCFI83:
 3201              		.cfi_def_cfa_register 7
 3202 0006 7860     		str	r0, [r7, #4]
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3203              		.loc 1 1977 17
 3204 0008 7B68     		ldr	r3, [r7, #4]
 3205 000a FB60     		str	r3, [r7, #12]
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3206              		.loc 1 1979 2
 3207 000c FB68     		ldr	r3, [r7, #12]
 3208 000e 002B     		cmp	r3, #0
 3209 0010 0AD1     		bne	.L212
 3210              	.LBB178:
 3211              	.LBB179:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3212              		.loc 2 195 2
 3213              		.syntax unified
 3214              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3215 0012 4FF05003 			mov r3, #80												
 3216 0016 83F31188 		msr basepri, r3											
 3217 001a BFF36F8F 		isb														
 3218 001e BFF34F8F 		dsb														
 3219              	
 3220              	@ 0 "" 2
 3221              		.thumb
 3222              		.syntax unified
 3223 0022 BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3224              		.loc 2 203 1
 3225 0024 00BF     		nop
 3226              	.L213:
 3227              	.LBE179:
 3228              	.LBE178:
 3229              		.loc 1 1979 2 discriminator 1
ARM GAS  /tmp/ccW8mGL0.s 			page 97


 3230 0026 FEE7     		b	.L213
 3231              	.L212:
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 3232              		.loc 1 1984 3
 3233 0028 F868     		ldr	r0, [r7, #12]
 3234 002a FFF7FEFF 		bl	vQueueUnregisterQueue
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
 3235              		.loc 1 1992 3
 3236 002e F868     		ldr	r0, [r7, #12]
 3237 0030 FFF7FEFF 		bl	vPortFree
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3238              		.loc 1 2014 1
 3239 0034 00BF     		nop
 3240 0036 1037     		adds	r7, r7, #16
 3241              	.LCFI84:
 3242              		.cfi_def_cfa_offset 8
 3243 0038 BD46     		mov	sp, r7
 3244              	.LCFI85:
 3245              		.cfi_def_cfa_register 13
 3246              		@ sp needed
 3247 003a 80BD     		pop	{r7, pc}
 3248              		.cfi_endproc
 3249              	.LFE21:
 3251              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
 3252              		.align	1
ARM GAS  /tmp/ccW8mGL0.s 			page 98


 3253              		.syntax unified
 3254              		.thumb
 3255              		.thumb_func
 3256              		.fpu fpv4-sp-d16
 3258              	prvGetDisinheritPriorityAfterTimeout:
 3259              	.LFB22:
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3260              		.loc 1 2050 2
 3261              		.cfi_startproc
 3262              		@ args = 0, pretend = 0, frame = 16
 3263              		@ frame_needed = 1, uses_anonymous_args = 0
 3264              		@ link register save eliminated.
 3265 0000 80B4     		push	{r7}
 3266              	.LCFI86:
 3267              		.cfi_def_cfa_offset 4
 3268              		.cfi_offset 7, -4
 3269 0002 85B0     		sub	sp, sp, #20
 3270              	.LCFI87:
 3271              		.cfi_def_cfa_offset 24
 3272 0004 00AF     		add	r7, sp, #0
 3273              	.LCFI88:
 3274              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccW8mGL0.s 			page 99


 3275 0006 7860     		str	r0, [r7, #4]
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 3276              		.loc 1 2059 7
 3277 0008 7B68     		ldr	r3, [r7, #4]
 3278 000a 5B6A     		ldr	r3, [r3, #36]
 3279              		.loc 1 2059 5
 3280 000c 002B     		cmp	r3, #0
 3281 000e 06D0     		beq	.L215
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
 3282              		.loc 1 2061 93
 3283 0010 7B68     		ldr	r3, [r7, #4]
 3284 0012 1B6B     		ldr	r3, [r3, #48]
 3285 0014 1B68     		ldr	r3, [r3]
 3286              		.loc 1 2061 36
 3287 0016 C3F10703 		rsb	r3, r3, #7
 3288 001a FB60     		str	r3, [r7, #12]
 3289 001c 01E0     		b	.L216
 3290              	.L215:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
 3291              		.loc 1 2065 36
 3292 001e 0023     		movs	r3, #0
 3293 0020 FB60     		str	r3, [r7, #12]
 3294              	.L216:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
 3295              		.loc 1 2068 10
 3296 0022 FB68     		ldr	r3, [r7, #12]
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3297              		.loc 1 2069 2
 3298 0024 1846     		mov	r0, r3
 3299 0026 1437     		adds	r7, r7, #20
 3300              	.LCFI89:
 3301              		.cfi_def_cfa_offset 4
 3302 0028 BD46     		mov	sp, r7
 3303              	.LCFI90:
 3304              		.cfi_def_cfa_register 13
 3305              		@ sp needed
 3306 002a 5DF8047B 		ldr	r7, [sp], #4
 3307              	.LCFI91:
 3308              		.cfi_restore 7
 3309              		.cfi_def_cfa_offset 0
 3310 002e 7047     		bx	lr
 3311              		.cfi_endproc
 3312              	.LFE22:
ARM GAS  /tmp/ccW8mGL0.s 			page 100


 3314              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 3315              		.align	1
 3316              		.syntax unified
 3317              		.thumb
 3318              		.thumb_func
 3319              		.fpu fpv4-sp-d16
 3321              	prvCopyDataToQueue:
 3322              	.LFB23:
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3323              		.loc 1 2075 1
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 24
 3326              		@ frame_needed = 1, uses_anonymous_args = 0
 3327 0000 80B5     		push	{r7, lr}
 3328              	.LCFI92:
 3329              		.cfi_def_cfa_offset 8
 3330              		.cfi_offset 7, -8
 3331              		.cfi_offset 14, -4
 3332 0002 86B0     		sub	sp, sp, #24
 3333              	.LCFI93:
 3334              		.cfi_def_cfa_offset 32
 3335 0004 00AF     		add	r7, sp, #0
 3336              	.LCFI94:
 3337              		.cfi_def_cfa_register 7
 3338 0006 F860     		str	r0, [r7, #12]
 3339 0008 B960     		str	r1, [r7, #8]
 3340 000a 7A60     		str	r2, [r7, #4]
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 3341              		.loc 1 2076 12
 3342 000c 0023     		movs	r3, #0
 3343 000e 7B61     		str	r3, [r7, #20]
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 3344              		.loc 1 2081 20
 3345 0010 FB68     		ldr	r3, [r7, #12]
 3346 0012 9B6B     		ldr	r3, [r3, #56]
 3347 0014 3B61     		str	r3, [r7, #16]
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 3348              		.loc 1 2083 13
 3349 0016 FB68     		ldr	r3, [r7, #12]
 3350 0018 1B6C     		ldr	r3, [r3, #64]
 3351              		.loc 1 2083 4
 3352 001a 002B     		cmp	r3, #0
 3353 001c 0DD1     		bne	.L219
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
ARM GAS  /tmp/ccW8mGL0.s 			page 101


 3354              		.loc 1 2087 15
 3355 001e FB68     		ldr	r3, [r7, #12]
 3356 0020 1B68     		ldr	r3, [r3]
 3357              		.loc 1 2087 6
 3358 0022 002B     		cmp	r3, #0
 3359 0024 4DD1     		bne	.L220
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 3360              		.loc 1 2090 15
 3361 0026 FB68     		ldr	r3, [r7, #12]
 3362 0028 9B68     		ldr	r3, [r3, #8]
 3363 002a 1846     		mov	r0, r3
 3364 002c FFF7FEFF 		bl	xTaskPriorityDisinherit
 3365 0030 7861     		str	r0, [r7, #20]
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 3366              		.loc 1 2091 40
 3367 0032 FB68     		ldr	r3, [r7, #12]
 3368 0034 0022     		movs	r2, #0
 3369 0036 9A60     		str	r2, [r3, #8]
 3370 0038 43E0     		b	.L220
 3371              	.L219:
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 3372              		.loc 1 2100 9
 3373 003a 7B68     		ldr	r3, [r7, #4]
 3374 003c 002B     		cmp	r3, #0
 3375 003e 19D1     		bne	.L221
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 3376              		.loc 1 2102 38
 3377 0040 FB68     		ldr	r3, [r7, #12]
 3378 0042 5868     		ldr	r0, [r3, #4]
 3379              		.loc 1 2102 84
 3380 0044 FB68     		ldr	r3, [r7, #12]
 3381 0046 1B6C     		ldr	r3, [r3, #64]
 3382              		.loc 1 2102 12
 3383 0048 1A46     		mov	r2, r3
 3384 004a B968     		ldr	r1, [r7, #8]
 3385 004c FFF7FEFF 		bl	memcpy
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 3386              		.loc 1 2103 22
 3387 0050 FB68     		ldr	r3, [r7, #12]
 3388 0052 5A68     		ldr	r2, [r3, #4]
 3389              		.loc 1 2103 32
 3390 0054 FB68     		ldr	r3, [r7, #12]
 3391 0056 1B6C     		ldr	r3, [r3, #64]
 3392              		.loc 1 2103 22
 3393 0058 1A44     		add	r2, r2, r3
 3394 005a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccW8mGL0.s 			page 102


 3395 005c 5A60     		str	r2, [r3, #4]
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 3396              		.loc 1 2104 14
 3397 005e FB68     		ldr	r3, [r7, #12]
 3398 0060 5A68     		ldr	r2, [r3, #4]
 3399              		.loc 1 2104 46
 3400 0062 FB68     		ldr	r3, [r7, #12]
 3401 0064 9B68     		ldr	r3, [r3, #8]
 3402              		.loc 1 2104 5
 3403 0066 9A42     		cmp	r2, r3
 3404 0068 2BD3     		bcc	.L220
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 3405              		.loc 1 2106 32
 3406 006a FB68     		ldr	r3, [r7, #12]
 3407 006c 1A68     		ldr	r2, [r3]
 3408              		.loc 1 2106 23
 3409 006e FB68     		ldr	r3, [r7, #12]
 3410 0070 5A60     		str	r2, [r3, #4]
 3411 0072 26E0     		b	.L220
 3412              	.L221:
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
 3413              		.loc 1 2115 48
 3414 0074 FB68     		ldr	r3, [r7, #12]
 3415 0076 D868     		ldr	r0, [r3, #12]
 3416              		.loc 1 2115 94
 3417 0078 FB68     		ldr	r3, [r7, #12]
 3418 007a 1B6C     		ldr	r3, [r3, #64]
 3419              		.loc 1 2115 12
 3420 007c 1A46     		mov	r2, r3
 3421 007e B968     		ldr	r1, [r7, #8]
 3422 0080 FFF7FEFF 		bl	memcpy
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 3423              		.loc 1 2116 32
 3424 0084 FB68     		ldr	r3, [r7, #12]
 3425 0086 DA68     		ldr	r2, [r3, #12]
 3426              		.loc 1 2116 42
 3427 0088 FB68     		ldr	r3, [r7, #12]
 3428 008a 1B6C     		ldr	r3, [r3, #64]
 3429              		.loc 1 2116 32
 3430 008c 5B42     		rsbs	r3, r3, #0
 3431 008e 1A44     		add	r2, r2, r3
 3432 0090 FB68     		ldr	r3, [r7, #12]
 3433 0092 DA60     		str	r2, [r3, #12]
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 3434              		.loc 1 2117 24
 3435 0094 FB68     		ldr	r3, [r7, #12]
 3436 0096 DA68     		ldr	r2, [r3, #12]
 3437              		.loc 1 2117 45
ARM GAS  /tmp/ccW8mGL0.s 			page 103


 3438 0098 FB68     		ldr	r3, [r7, #12]
 3439 009a 1B68     		ldr	r3, [r3]
 3440              		.loc 1 2117 5
 3441 009c 9A42     		cmp	r2, r3
 3442 009e 07D2     		bcs	.L222
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 3443              		.loc 1 2119 54
 3444 00a0 FB68     		ldr	r3, [r7, #12]
 3445 00a2 9A68     		ldr	r2, [r3, #8]
 3446              		.loc 1 2119 71
 3447 00a4 FB68     		ldr	r3, [r7, #12]
 3448 00a6 1B6C     		ldr	r3, [r3, #64]
 3449              		.loc 1 2119 62
 3450 00a8 5B42     		rsbs	r3, r3, #0
 3451 00aa 1A44     		add	r2, r2, r3
 3452              		.loc 1 2119 33
 3453 00ac FB68     		ldr	r3, [r7, #12]
 3454 00ae DA60     		str	r2, [r3, #12]
 3455              	.L222:
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
 3456              		.loc 1 2126 5
 3457 00b0 7B68     		ldr	r3, [r7, #4]
 3458 00b2 022B     		cmp	r3, #2
 3459 00b4 05D1     		bne	.L220
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 3460              		.loc 1 2128 6
 3461 00b6 3B69     		ldr	r3, [r7, #16]
 3462 00b8 002B     		cmp	r3, #0
 3463 00ba 02D0     		beq	.L220
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
 3464              		.loc 1 2134 5
 3465 00bc 3B69     		ldr	r3, [r7, #16]
 3466 00be 013B     		subs	r3, r3, #1
 3467 00c0 3B61     		str	r3, [r7, #16]
 3468              	.L220:
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccW8mGL0.s 			page 104


2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 3469              		.loc 1 2147 49
 3470 00c2 3B69     		ldr	r3, [r7, #16]
 3471 00c4 5A1C     		adds	r2, r3, #1
 3472              		.loc 1 2147 29
 3473 00c6 FB68     		ldr	r3, [r7, #12]
 3474 00c8 9A63     		str	r2, [r3, #56]
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3475              		.loc 1 2149 9
 3476 00ca 7B69     		ldr	r3, [r7, #20]
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3477              		.loc 1 2150 1
 3478 00cc 1846     		mov	r0, r3
 3479 00ce 1837     		adds	r7, r7, #24
 3480              	.LCFI95:
 3481              		.cfi_def_cfa_offset 8
 3482 00d0 BD46     		mov	sp, r7
 3483              	.LCFI96:
 3484              		.cfi_def_cfa_register 13
 3485              		@ sp needed
 3486 00d2 80BD     		pop	{r7, pc}
 3487              		.cfi_endproc
 3488              	.LFE23:
 3490              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 3491              		.align	1
 3492              		.syntax unified
 3493              		.thumb
 3494              		.thumb_func
 3495              		.fpu fpv4-sp-d16
 3497              	prvCopyDataFromQueue:
 3498              	.LFB24:
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3499              		.loc 1 2154 1
 3500              		.cfi_startproc
 3501              		@ args = 0, pretend = 0, frame = 8
 3502              		@ frame_needed = 1, uses_anonymous_args = 0
 3503 0000 80B5     		push	{r7, lr}
 3504              	.LCFI97:
 3505              		.cfi_def_cfa_offset 8
 3506              		.cfi_offset 7, -8
 3507              		.cfi_offset 14, -4
 3508 0002 82B0     		sub	sp, sp, #8
 3509              	.LCFI98:
 3510              		.cfi_def_cfa_offset 16
 3511 0004 00AF     		add	r7, sp, #0
 3512              	.LCFI99:
 3513              		.cfi_def_cfa_register 7
 3514 0006 7860     		str	r0, [r7, #4]
 3515 0008 3960     		str	r1, [r7]
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccW8mGL0.s 			page 105


 3516              		.loc 1 2155 13
 3517 000a 7B68     		ldr	r3, [r7, #4]
 3518 000c 1B6C     		ldr	r3, [r3, #64]
 3519              		.loc 1 2155 4
 3520 000e 002B     		cmp	r3, #0
 3521 0010 18D0     		beq	.L227
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
 3522              		.loc 1 2157 32
 3523 0012 7B68     		ldr	r3, [r7, #4]
 3524 0014 DA68     		ldr	r2, [r3, #12]
 3525              		.loc 1 2157 42
 3526 0016 7B68     		ldr	r3, [r7, #4]
 3527 0018 1B6C     		ldr	r3, [r3, #64]
 3528              		.loc 1 2157 32
 3529 001a 1A44     		add	r2, r2, r3
 3530 001c 7B68     		ldr	r3, [r7, #4]
 3531 001e DA60     		str	r2, [r3, #12]
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 3532              		.loc 1 2158 24
 3533 0020 7B68     		ldr	r3, [r7, #4]
 3534 0022 DA68     		ldr	r2, [r3, #12]
 3535              		.loc 1 2158 56
 3536 0024 7B68     		ldr	r3, [r7, #4]
 3537 0026 9B68     		ldr	r3, [r3, #8]
 3538              		.loc 1 2158 5
 3539 0028 9A42     		cmp	r2, r3
 3540 002a 03D3     		bcc	.L226
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 3541              		.loc 1 2160 42
 3542 002c 7B68     		ldr	r3, [r7, #4]
 3543 002e 1A68     		ldr	r2, [r3]
 3544              		.loc 1 2160 33
 3545 0030 7B68     		ldr	r3, [r7, #4]
 3546 0032 DA60     		str	r2, [r3, #12]
 3547              	.L226:
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
 3548              		.loc 1 2166 69
 3549 0034 7B68     		ldr	r3, [r7, #4]
 3550 0036 D968     		ldr	r1, [r3, #12]
 3551              		.loc 1 2166 100
 3552 0038 7B68     		ldr	r3, [r7, #4]
 3553 003a 1B6C     		ldr	r3, [r3, #64]
 3554              		.loc 1 2166 12
 3555 003c 1A46     		mov	r2, r3
 3556 003e 3868     		ldr	r0, [r7]
 3557 0040 FFF7FEFF 		bl	memcpy
 3558              	.L227:
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3559              		.loc 1 2168 1
ARM GAS  /tmp/ccW8mGL0.s 			page 106


 3560 0044 00BF     		nop
 3561 0046 0837     		adds	r7, r7, #8
 3562              	.LCFI100:
 3563              		.cfi_def_cfa_offset 8
 3564 0048 BD46     		mov	sp, r7
 3565              	.LCFI101:
 3566              		.cfi_def_cfa_register 13
 3567              		@ sp needed
 3568 004a 80BD     		pop	{r7, pc}
 3569              		.cfi_endproc
 3570              	.LFE24:
 3572              		.section	.text.prvUnlockQueue,"ax",%progbits
 3573              		.align	1
 3574              		.syntax unified
 3575              		.thumb
 3576              		.thumb_func
 3577              		.fpu fpv4-sp-d16
 3579              	prvUnlockQueue:
 3580              	.LFB25:
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3581              		.loc 1 2172 1
 3582              		.cfi_startproc
 3583              		@ args = 0, pretend = 0, frame = 16
 3584              		@ frame_needed = 1, uses_anonymous_args = 0
 3585 0000 80B5     		push	{r7, lr}
 3586              	.LCFI102:
 3587              		.cfi_def_cfa_offset 8
 3588              		.cfi_offset 7, -8
 3589              		.cfi_offset 14, -4
 3590 0002 84B0     		sub	sp, sp, #16
 3591              	.LCFI103:
 3592              		.cfi_def_cfa_offset 24
 3593 0004 00AF     		add	r7, sp, #0
 3594              	.LCFI104:
 3595              		.cfi_def_cfa_register 7
 3596 0006 7860     		str	r0, [r7, #4]
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3597              		.loc 1 2179 2
 3598 0008 FFF7FEFF 		bl	vPortEnterCritical
 3599              	.LBB180:
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
 3600              		.loc 1 2181 10
 3601 000c 7B68     		ldr	r3, [r7, #4]
 3602 000e 93F84530 		ldrb	r3, [r3, #69]
 3603 0012 FB73     		strb	r3, [r7, #15]
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
ARM GAS  /tmp/ccW8mGL0.s 			page 107


2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
 3604              		.loc 1 2184 8
 3605 0014 11E0     		b	.L229
 3606              	.L233:
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 3607              		.loc 1 2232 9
 3608 0016 7B68     		ldr	r3, [r7, #4]
 3609 0018 5B6A     		ldr	r3, [r3, #36]
 3610              		.loc 1 2232 7
 3611 001a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 108


 3612 001c 12D0     		beq	.L239
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 3613              		.loc 1 2234 36
 3614 001e 7B68     		ldr	r3, [r7, #4]
 3615 0020 2433     		adds	r3, r3, #36
 3616              		.loc 1 2234 10
 3617 0022 1846     		mov	r0, r3
 3618 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3619 0028 0346     		mov	r3, r0
 3620              		.loc 1 2234 8
 3621 002a 002B     		cmp	r3, #0
 3622 002c 01D0     		beq	.L231
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
 3623              		.loc 1 2238 7
 3624 002e FFF7FEFF 		bl	vTaskMissedYield
 3625              	.L231:
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
 3626              		.loc 1 2252 4
 3627 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3628 0034 013B     		subs	r3, r3, #1
 3629 0036 DBB2     		uxtb	r3, r3
 3630 0038 FB73     		strb	r3, [r7, #15]
 3631              	.L229:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3632              		.loc 1 2184 8
 3633 003a 97F90F30 		ldrsb	r3, [r7, #15]
 3634 003e 002B     		cmp	r3, #0
 3635 0040 E9DC     		bgt	.L233
 3636 0042 00E0     		b	.L232
 3637              	.L239:
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3638              		.loc 1 2247 6
 3639 0044 00BF     		nop
 3640              	.L232:
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 3641              		.loc 1 2255 20
 3642 0046 7B68     		ldr	r3, [r7, #4]
 3643 0048 FF22     		movs	r2, #255
ARM GAS  /tmp/ccW8mGL0.s 			page 109


 3644 004a 83F84520 		strb	r2, [r3, #69]
 3645              	.LBE180:
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3646              		.loc 1 2257 2
 3647 004e FFF7FEFF 		bl	vPortExitCritical
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3648              		.loc 1 2260 2
 3649 0052 FFF7FEFF 		bl	vPortEnterCritical
 3650              	.LBB181:
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
 3651              		.loc 1 2262 10
 3652 0056 7B68     		ldr	r3, [r7, #4]
 3653 0058 93F84430 		ldrb	r3, [r3, #68]
 3654 005c BB73     		strb	r3, [r7, #14]
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
 3655              		.loc 1 2264 8
 3656 005e 11E0     		b	.L234
 3657              	.L238:
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 3658              		.loc 1 2266 8
 3659 0060 7B68     		ldr	r3, [r7, #4]
 3660 0062 1B69     		ldr	r3, [r3, #16]
 3661              		.loc 1 2266 6
 3662 0064 002B     		cmp	r3, #0
 3663 0066 12D0     		beq	.L240
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 3664              		.loc 1 2268 35
 3665 0068 7B68     		ldr	r3, [r7, #4]
 3666 006a 1033     		adds	r3, r3, #16
 3667              		.loc 1 2268 9
 3668 006c 1846     		mov	r0, r3
 3669 006e FFF7FEFF 		bl	xTaskRemoveFromEventList
 3670 0072 0346     		mov	r3, r0
 3671              		.loc 1 2268 7
 3672 0074 002B     		cmp	r3, #0
 3673 0076 01D0     		beq	.L236
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
 3674              		.loc 1 2270 6
 3675 0078 FFF7FEFF 		bl	vTaskMissedYield
 3676              	.L236:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
 3677              		.loc 1 2277 5
 3678 007c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccW8mGL0.s 			page 110


 3679 007e 013B     		subs	r3, r3, #1
 3680 0080 DBB2     		uxtb	r3, r3
 3681 0082 BB73     		strb	r3, [r7, #14]
 3682              	.L234:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3683              		.loc 1 2264 8
 3684 0084 97F90E30 		ldrsb	r3, [r7, #14]
 3685 0088 002B     		cmp	r3, #0
 3686 008a E9DC     		bgt	.L238
 3687 008c 00E0     		b	.L237
 3688              	.L240:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3689              		.loc 1 2281 5
 3690 008e 00BF     		nop
 3691              	.L237:
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 3692              		.loc 1 2285 20
 3693 0090 7B68     		ldr	r3, [r7, #4]
 3694 0092 FF22     		movs	r2, #255
 3695 0094 83F84420 		strb	r2, [r3, #68]
 3696              	.LBE181:
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3697              		.loc 1 2287 2
 3698 0098 FFF7FEFF 		bl	vPortExitCritical
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3699              		.loc 1 2288 1
 3700 009c 00BF     		nop
 3701 009e 1037     		adds	r7, r7, #16
 3702              	.LCFI105:
 3703              		.cfi_def_cfa_offset 8
 3704 00a0 BD46     		mov	sp, r7
 3705              	.LCFI106:
 3706              		.cfi_def_cfa_register 13
 3707              		@ sp needed
 3708 00a2 80BD     		pop	{r7, pc}
 3709              		.cfi_endproc
 3710              	.LFE25:
 3712              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 3713              		.align	1
 3714              		.syntax unified
 3715              		.thumb
 3716              		.thumb_func
 3717              		.fpu fpv4-sp-d16
 3719              	prvIsQueueEmpty:
 3720              	.LFB26:
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3721              		.loc 1 2292 1
ARM GAS  /tmp/ccW8mGL0.s 			page 111


 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 16
 3724              		@ frame_needed = 1, uses_anonymous_args = 0
 3725 0000 80B5     		push	{r7, lr}
 3726              	.LCFI107:
 3727              		.cfi_def_cfa_offset 8
 3728              		.cfi_offset 7, -8
 3729              		.cfi_offset 14, -4
 3730 0002 84B0     		sub	sp, sp, #16
 3731              	.LCFI108:
 3732              		.cfi_def_cfa_offset 24
 3733 0004 00AF     		add	r7, sp, #0
 3734              	.LCFI109:
 3735              		.cfi_def_cfa_register 7
 3736 0006 7860     		str	r0, [r7, #4]
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3737              		.loc 1 2295 2
 3738 0008 FFF7FEFF 		bl	vPortEnterCritical
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 3739              		.loc 1 2297 14
 3740 000c 7B68     		ldr	r3, [r7, #4]
 3741 000e 9B6B     		ldr	r3, [r3, #56]
 3742              		.loc 1 2297 5
 3743 0010 002B     		cmp	r3, #0
 3744 0012 02D1     		bne	.L242
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
 3745              		.loc 1 2299 12
 3746 0014 0123     		movs	r3, #1
 3747 0016 FB60     		str	r3, [r7, #12]
 3748 0018 01E0     		b	.L243
 3749              	.L242:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
 3750              		.loc 1 2303 12
 3751 001a 0023     		movs	r3, #0
 3752 001c FB60     		str	r3, [r7, #12]
 3753              	.L243:
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3754              		.loc 1 2306 2
 3755 001e FFF7FEFF 		bl	vPortExitCritical
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3756              		.loc 1 2308 9
 3757 0022 FB68     		ldr	r3, [r7, #12]
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3758              		.loc 1 2309 1
 3759 0024 1846     		mov	r0, r3
 3760 0026 1037     		adds	r7, r7, #16
 3761              	.LCFI110:
ARM GAS  /tmp/ccW8mGL0.s 			page 112


 3762              		.cfi_def_cfa_offset 8
 3763 0028 BD46     		mov	sp, r7
 3764              	.LCFI111:
 3765              		.cfi_def_cfa_register 13
 3766              		@ sp needed
 3767 002a 80BD     		pop	{r7, pc}
 3768              		.cfi_endproc
 3769              	.LFE26:
 3771              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3772              		.align	1
 3773              		.global	xQueueIsQueueEmptyFromISR
 3774              		.syntax unified
 3775              		.thumb
 3776              		.thumb_func
 3777              		.fpu fpv4-sp-d16
 3779              	xQueueIsQueueEmptyFromISR:
 3780              	.LFB27:
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3781              		.loc 1 2313 1
 3782              		.cfi_startproc
 3783              		@ args = 0, pretend = 0, frame = 24
 3784              		@ frame_needed = 1, uses_anonymous_args = 0
 3785              		@ link register save eliminated.
 3786 0000 80B4     		push	{r7}
 3787              	.LCFI112:
 3788              		.cfi_def_cfa_offset 4
 3789              		.cfi_offset 7, -4
 3790 0002 87B0     		sub	sp, sp, #28
 3791              	.LCFI113:
 3792              		.cfi_def_cfa_offset 32
 3793 0004 00AF     		add	r7, sp, #0
 3794              	.LCFI114:
 3795              		.cfi_def_cfa_register 7
 3796 0006 7860     		str	r0, [r7, #4]
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3797              		.loc 1 2315 17
 3798 0008 7B68     		ldr	r3, [r7, #4]
 3799 000a 3B61     		str	r3, [r7, #16]
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3800              		.loc 1 2317 2
 3801 000c 3B69     		ldr	r3, [r7, #16]
 3802 000e 002B     		cmp	r3, #0
 3803 0010 0AD1     		bne	.L246
 3804              	.LBB182:
 3805              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3806              		.loc 2 195 2
 3807              		.syntax unified
 3808              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3809 0012 4FF05003 			mov r3, #80												
 3810 0016 83F31188 		msr basepri, r3											
 3811 001a BFF36F8F 		isb														
ARM GAS  /tmp/ccW8mGL0.s 			page 113


 3812 001e BFF34F8F 		dsb														
 3813              	
 3814              	@ 0 "" 2
 3815              		.thumb
 3816              		.syntax unified
 3817 0022 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3818              		.loc 2 203 1
 3819 0024 00BF     		nop
 3820              	.L247:
 3821              	.LBE183:
 3822              	.LBE182:
 3823              		.loc 1 2317 2 discriminator 1
 3824 0026 FEE7     		b	.L247
 3825              	.L246:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3826              		.loc 1 2318 13
 3827 0028 3B69     		ldr	r3, [r7, #16]
 3828 002a 9B6B     		ldr	r3, [r3, #56]
 3829              		.loc 1 2318 4
 3830 002c 002B     		cmp	r3, #0
 3831 002e 02D1     		bne	.L248
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3832              		.loc 1 2320 11
 3833 0030 0123     		movs	r3, #1
 3834 0032 7B61     		str	r3, [r7, #20]
 3835 0034 01E0     		b	.L249
 3836              	.L248:
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3837              		.loc 1 2324 11
 3838 0036 0023     		movs	r3, #0
 3839 0038 7B61     		str	r3, [r7, #20]
 3840              	.L249:
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3841              		.loc 1 2327 9
 3842 003a 7B69     		ldr	r3, [r7, #20]
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3843              		.loc 1 2328 1
 3844 003c 1846     		mov	r0, r3
 3845 003e 1C37     		adds	r7, r7, #28
 3846              	.LCFI115:
 3847              		.cfi_def_cfa_offset 4
 3848 0040 BD46     		mov	sp, r7
 3849              	.LCFI116:
 3850              		.cfi_def_cfa_register 13
 3851              		@ sp needed
 3852 0042 5DF8047B 		ldr	r7, [sp], #4
 3853              	.LCFI117:
 3854              		.cfi_restore 7
 3855              		.cfi_def_cfa_offset 0
 3856 0046 7047     		bx	lr
ARM GAS  /tmp/ccW8mGL0.s 			page 114


 3857              		.cfi_endproc
 3858              	.LFE27:
 3860              		.section	.text.prvIsQueueFull,"ax",%progbits
 3861              		.align	1
 3862              		.syntax unified
 3863              		.thumb
 3864              		.thumb_func
 3865              		.fpu fpv4-sp-d16
 3867              	prvIsQueueFull:
 3868              	.LFB28:
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3869              		.loc 1 2332 1
 3870              		.cfi_startproc
 3871              		@ args = 0, pretend = 0, frame = 16
 3872              		@ frame_needed = 1, uses_anonymous_args = 0
 3873 0000 80B5     		push	{r7, lr}
 3874              	.LCFI118:
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 7, -8
 3877              		.cfi_offset 14, -4
 3878 0002 84B0     		sub	sp, sp, #16
 3879              	.LCFI119:
 3880              		.cfi_def_cfa_offset 24
 3881 0004 00AF     		add	r7, sp, #0
 3882              	.LCFI120:
 3883              		.cfi_def_cfa_register 7
 3884 0006 7860     		str	r0, [r7, #4]
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3885              		.loc 1 2335 2
 3886 0008 FFF7FEFF 		bl	vPortEnterCritical
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3887              		.loc 1 2337 14
 3888 000c 7B68     		ldr	r3, [r7, #4]
 3889 000e 9A6B     		ldr	r2, [r3, #56]
 3890              		.loc 1 2337 44
 3891 0010 7B68     		ldr	r3, [r7, #4]
 3892 0012 DB6B     		ldr	r3, [r3, #60]
 3893              		.loc 1 2337 5
 3894 0014 9A42     		cmp	r2, r3
 3895 0016 02D1     		bne	.L252
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
 3896              		.loc 1 2339 12
 3897 0018 0123     		movs	r3, #1
 3898 001a FB60     		str	r3, [r7, #12]
 3899 001c 01E0     		b	.L253
 3900              	.L252:
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
ARM GAS  /tmp/ccW8mGL0.s 			page 115


 3901              		.loc 1 2343 12
 3902 001e 0023     		movs	r3, #0
 3903 0020 FB60     		str	r3, [r7, #12]
 3904              	.L253:
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3905              		.loc 1 2346 2
 3906 0022 FFF7FEFF 		bl	vPortExitCritical
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3907              		.loc 1 2348 9
 3908 0026 FB68     		ldr	r3, [r7, #12]
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3909              		.loc 1 2349 1
 3910 0028 1846     		mov	r0, r3
 3911 002a 1037     		adds	r7, r7, #16
 3912              	.LCFI121:
 3913              		.cfi_def_cfa_offset 8
 3914 002c BD46     		mov	sp, r7
 3915              	.LCFI122:
 3916              		.cfi_def_cfa_register 13
 3917              		@ sp needed
 3918 002e 80BD     		pop	{r7, pc}
 3919              		.cfi_endproc
 3920              	.LFE28:
 3922              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3923              		.align	1
 3924              		.global	xQueueIsQueueFullFromISR
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv4-sp-d16
 3930              	xQueueIsQueueFullFromISR:
 3931              	.LFB29:
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3932              		.loc 1 2353 1
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 24
 3935              		@ frame_needed = 1, uses_anonymous_args = 0
 3936              		@ link register save eliminated.
 3937 0000 80B4     		push	{r7}
 3938              	.LCFI123:
 3939              		.cfi_def_cfa_offset 4
 3940              		.cfi_offset 7, -4
 3941 0002 87B0     		sub	sp, sp, #28
 3942              	.LCFI124:
 3943              		.cfi_def_cfa_offset 32
 3944 0004 00AF     		add	r7, sp, #0
 3945              	.LCFI125:
 3946              		.cfi_def_cfa_register 7
 3947 0006 7860     		str	r0, [r7, #4]
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
ARM GAS  /tmp/ccW8mGL0.s 			page 116


 3948              		.loc 1 2355 17
 3949 0008 7B68     		ldr	r3, [r7, #4]
 3950 000a 3B61     		str	r3, [r7, #16]
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3951              		.loc 1 2357 2
 3952 000c 3B69     		ldr	r3, [r7, #16]
 3953 000e 002B     		cmp	r3, #0
 3954 0010 0AD1     		bne	.L256
 3955              	.LBB184:
 3956              	.LBB185:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3957              		.loc 2 195 2
 3958              		.syntax unified
 3959              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3960 0012 4FF05003 			mov r3, #80												
 3961 0016 83F31188 		msr basepri, r3											
 3962 001a BFF36F8F 		isb														
 3963 001e BFF34F8F 		dsb														
 3964              	
 3965              	@ 0 "" 2
 3966              		.thumb
 3967              		.syntax unified
 3968 0022 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3969              		.loc 2 203 1
 3970 0024 00BF     		nop
 3971              	.L257:
 3972              	.LBE185:
 3973              	.LBE184:
 3974              		.loc 1 2357 2 discriminator 1
 3975 0026 FEE7     		b	.L257
 3976              	.L256:
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3977              		.loc 1 2358 13
 3978 0028 3B69     		ldr	r3, [r7, #16]
 3979 002a 9A6B     		ldr	r2, [r3, #56]
 3980              		.loc 1 2358 43
 3981 002c 3B69     		ldr	r3, [r7, #16]
 3982 002e DB6B     		ldr	r3, [r3, #60]
 3983              		.loc 1 2358 4
 3984 0030 9A42     		cmp	r2, r3
 3985 0032 02D1     		bne	.L258
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3986              		.loc 1 2360 11
 3987 0034 0123     		movs	r3, #1
 3988 0036 7B61     		str	r3, [r7, #20]
 3989 0038 01E0     		b	.L259
 3990              	.L258:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3991              		.loc 1 2364 11
 3992 003a 0023     		movs	r3, #0
 3993 003c 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccW8mGL0.s 			page 117


 3994              	.L259:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3995              		.loc 1 2367 9
 3996 003e 7B69     		ldr	r3, [r7, #20]
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3997              		.loc 1 2368 1
 3998 0040 1846     		mov	r0, r3
 3999 0042 1C37     		adds	r7, r7, #28
 4000              	.LCFI126:
 4001              		.cfi_def_cfa_offset 4
 4002 0044 BD46     		mov	sp, r7
 4003              	.LCFI127:
 4004              		.cfi_def_cfa_register 13
 4005              		@ sp needed
 4006 0046 5DF8047B 		ldr	r7, [sp], #4
 4007              	.LCFI128:
 4008              		.cfi_restore 7
 4009              		.cfi_def_cfa_offset 0
 4010 004a 7047     		bx	lr
 4011              		.cfi_endproc
 4012              	.LFE29:
 4014              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 4015              		.align	1
 4016              		.global	vQueueAddToRegistry
 4017              		.syntax unified
 4018              		.thumb
 4019              		.thumb_func
 4020              		.fpu fpv4-sp-d16
 4022              	vQueueAddToRegistry:
 4023              	.LFB30:
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
ARM GAS  /tmp/ccW8mGL0.s 			page 118


2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
ARM GAS  /tmp/ccW8mGL0.s 			page 119


2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
ARM GAS  /tmp/ccW8mGL0.s 			page 120


2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccW8mGL0.s 			page 121


2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccW8mGL0.s 			page 122


2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4024              		.loc 1 2649 2
 4025              		.cfi_startproc
 4026              		@ args = 0, pretend = 0, frame = 16
 4027              		@ frame_needed = 1, uses_anonymous_args = 0
 4028              		@ link register save eliminated.
 4029 0000 80B4     		push	{r7}
 4030              	.LCFI129:
 4031              		.cfi_def_cfa_offset 4
 4032              		.cfi_offset 7, -4
 4033 0002 85B0     		sub	sp, sp, #20
 4034              	.LCFI130:
 4035              		.cfi_def_cfa_offset 24
 4036 0004 00AF     		add	r7, sp, #0
 4037              	.LCFI131:
 4038              		.cfi_def_cfa_register 7
 4039 0006 7860     		str	r0, [r7, #4]
 4040 0008 3960     		str	r1, [r7]
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4041              		.loc 1 2654 11
 4042 000a 0023     		movs	r3, #0
 4043 000c FB60     		str	r3, [r7, #12]
 4044              		.loc 1 2654 3
 4045 000e 14E0     		b	.L262
 4046              	.L265:
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccW8mGL0.s 			page 123


2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 4047              		.loc 1 2656 28
 4048 0010 0F4A     		ldr	r2, .L266
 4049 0012 FB68     		ldr	r3, [r7, #12]
 4050 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]
 4051              		.loc 1 2656 6
 4052 0018 002B     		cmp	r3, #0
 4053 001a 0BD1     		bne	.L263
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 4054              		.loc 1 2659 38
 4055 001c 0C49     		ldr	r1, .L266
 4056 001e FB68     		ldr	r3, [r7, #12]
 4057 0020 3A68     		ldr	r2, [r7]
 4058 0022 41F83320 		str	r2, [r1, r3, lsl #3]
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 4059              		.loc 1 2660 34
 4060 0026 0A4A     		ldr	r2, .L266
 4061 0028 FB68     		ldr	r3, [r7, #12]
 4062 002a DB00     		lsls	r3, r3, #3
 4063 002c 1344     		add	r3, r3, r2
 4064 002e 7A68     		ldr	r2, [r7, #4]
 4065 0030 5A60     		str	r2, [r3, #4]
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4066              		.loc 1 2663 5
 4067 0032 06E0     		b	.L264
 4068              	.L263:
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4069              		.loc 1 2654 83 discriminator 2
 4070 0034 FB68     		ldr	r3, [r7, #12]
 4071 0036 0133     		adds	r3, r3, #1
 4072 0038 FB60     		str	r3, [r7, #12]
 4073              	.L262:
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4074              		.loc 1 2654 3 discriminator 1
 4075 003a FB68     		ldr	r3, [r7, #12]
 4076 003c 072B     		cmp	r3, #7
 4077 003e E7D9     		bls	.L265
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4078              		.loc 1 2670 2
 4079 0040 00BF     		nop
 4080              	.L264:
 4081 0042 00BF     		nop
 4082 0044 1437     		adds	r7, r7, #20
 4083              	.LCFI132:
 4084              		.cfi_def_cfa_offset 4
 4085 0046 BD46     		mov	sp, r7
 4086              	.LCFI133:
ARM GAS  /tmp/ccW8mGL0.s 			page 124


 4087              		.cfi_def_cfa_register 13
 4088              		@ sp needed
 4089 0048 5DF8047B 		ldr	r7, [sp], #4
 4090              	.LCFI134:
 4091              		.cfi_restore 7
 4092              		.cfi_def_cfa_offset 0
 4093 004c 7047     		bx	lr
 4094              	.L267:
 4095 004e 00BF     		.align	2
 4096              	.L266:
 4097 0050 00000000 		.word	xQueueRegistry
 4098              		.cfi_endproc
 4099              	.LFE30:
 4101              		.section	.text.pcQueueGetName,"ax",%progbits
 4102              		.align	1
 4103              		.global	pcQueueGetName
 4104              		.syntax unified
 4105              		.thumb
 4106              		.thumb_func
 4107              		.fpu fpv4-sp-d16
 4109              	pcQueueGetName:
 4110              	.LFB31:
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4111              		.loc 1 2678 2
 4112              		.cfi_startproc
 4113              		@ args = 0, pretend = 0, frame = 16
 4114              		@ frame_needed = 1, uses_anonymous_args = 0
 4115              		@ link register save eliminated.
 4116 0000 80B4     		push	{r7}
 4117              	.LCFI135:
 4118              		.cfi_def_cfa_offset 4
 4119              		.cfi_offset 7, -4
 4120 0002 85B0     		sub	sp, sp, #20
 4121              	.LCFI136:
 4122              		.cfi_def_cfa_offset 24
 4123 0004 00AF     		add	r7, sp, #0
 4124              	.LCFI137:
 4125              		.cfi_def_cfa_register 7
 4126 0006 7860     		str	r0, [r7, #4]
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 4127              		.loc 1 2680 14
 4128 0008 0023     		movs	r3, #0
 4129 000a BB60     		str	r3, [r7, #8]
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4130              		.loc 1 2684 11
 4131 000c 0023     		movs	r3, #0
ARM GAS  /tmp/ccW8mGL0.s 			page 125


 4132 000e FB60     		str	r3, [r7, #12]
 4133              		.loc 1 2684 3
 4134 0010 10E0     		b	.L269
 4135              	.L272:
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4136              		.loc 1 2686 28
 4137 0012 0D4A     		ldr	r2, .L274
 4138 0014 FB68     		ldr	r3, [r7, #12]
 4139 0016 DB00     		lsls	r3, r3, #3
 4140 0018 1344     		add	r3, r3, r2
 4141 001a 5B68     		ldr	r3, [r3, #4]
 4142              		.loc 1 2686 6
 4143 001c 7A68     		ldr	r2, [r7, #4]
 4144 001e 9A42     		cmp	r2, r3
 4145 0020 05D1     		bne	.L270
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 4146              		.loc 1 2688 14
 4147 0022 094A     		ldr	r2, .L274
 4148 0024 FB68     		ldr	r3, [r7, #12]
 4149 0026 52F83330 		ldr	r3, [r2, r3, lsl #3]
 4150 002a BB60     		str	r3, [r7, #8]
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4151              		.loc 1 2689 5
 4152 002c 05E0     		b	.L271
 4153              	.L270:
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4154              		.loc 1 2684 83 discriminator 2
 4155 002e FB68     		ldr	r3, [r7, #12]
 4156 0030 0133     		adds	r3, r3, #1
 4157 0032 FB60     		str	r3, [r7, #12]
 4158              	.L269:
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4159              		.loc 1 2684 3 discriminator 1
 4160 0034 FB68     		ldr	r3, [r7, #12]
 4161 0036 072B     		cmp	r3, #7
 4162 0038 EBD9     		bls	.L272
 4163              	.L271:
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
 4164              		.loc 1 2697 10
 4165 003a BB68     		ldr	r3, [r7, #8]
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4166              		.loc 1 2698 2
 4167 003c 1846     		mov	r0, r3
 4168 003e 1437     		adds	r7, r7, #20
 4169              	.LCFI138:
 4170              		.cfi_def_cfa_offset 4
 4171 0040 BD46     		mov	sp, r7
 4172              	.LCFI139:
ARM GAS  /tmp/ccW8mGL0.s 			page 126


 4173              		.cfi_def_cfa_register 13
 4174              		@ sp needed
 4175 0042 5DF8047B 		ldr	r7, [sp], #4
 4176              	.LCFI140:
 4177              		.cfi_restore 7
 4178              		.cfi_def_cfa_offset 0
 4179 0046 7047     		bx	lr
 4180              	.L275:
 4181              		.align	2
 4182              	.L274:
 4183 0048 00000000 		.word	xQueueRegistry
 4184              		.cfi_endproc
 4185              	.LFE31:
 4187              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4188              		.align	1
 4189              		.global	vQueueUnregisterQueue
 4190              		.syntax unified
 4191              		.thumb
 4192              		.thumb_func
 4193              		.fpu fpv4-sp-d16
 4195              	vQueueUnregisterQueue:
 4196              	.LFB32:
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4197              		.loc 1 2706 2
 4198              		.cfi_startproc
 4199              		@ args = 0, pretend = 0, frame = 16
 4200              		@ frame_needed = 1, uses_anonymous_args = 0
 4201              		@ link register save eliminated.
 4202 0000 80B4     		push	{r7}
 4203              	.LCFI141:
 4204              		.cfi_def_cfa_offset 4
 4205              		.cfi_offset 7, -4
 4206 0002 85B0     		sub	sp, sp, #20
 4207              	.LCFI142:
 4208              		.cfi_def_cfa_offset 24
 4209 0004 00AF     		add	r7, sp, #0
 4210              	.LCFI143:
 4211              		.cfi_def_cfa_register 7
 4212 0006 7860     		str	r0, [r7, #4]
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4213              		.loc 1 2711 11
 4214 0008 0023     		movs	r3, #0
 4215 000a FB60     		str	r3, [r7, #12]
 4216              		.loc 1 2711 3
 4217 000c 16E0     		b	.L277
 4218              	.L280:
ARM GAS  /tmp/ccW8mGL0.s 			page 127


2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4219              		.loc 1 2713 28
 4220 000e 104A     		ldr	r2, .L281
 4221 0010 FB68     		ldr	r3, [r7, #12]
 4222 0012 DB00     		lsls	r3, r3, #3
 4223 0014 1344     		add	r3, r3, r2
 4224 0016 5B68     		ldr	r3, [r3, #4]
 4225              		.loc 1 2713 6
 4226 0018 7A68     		ldr	r2, [r7, #4]
 4227 001a 9A42     		cmp	r2, r3
 4228 001c 0BD1     		bne	.L278
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4229              		.loc 1 2716 38
 4230 001e 0C4A     		ldr	r2, .L281
 4231 0020 FB68     		ldr	r3, [r7, #12]
 4232 0022 0021     		movs	r1, #0
 4233 0024 42F83310 		str	r1, [r2, r3, lsl #3]
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 4234              		.loc 1 2721 34
 4235 0028 094A     		ldr	r2, .L281
 4236 002a FB68     		ldr	r3, [r7, #12]
 4237 002c DB00     		lsls	r3, r3, #3
 4238 002e 1344     		add	r3, r3, r2
 4239 0030 0022     		movs	r2, #0
 4240 0032 5A60     		str	r2, [r3, #4]
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4241              		.loc 1 2722 5
 4242 0034 06E0     		b	.L279
 4243              	.L278:
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4244              		.loc 1 2711 83 discriminator 2
 4245 0036 FB68     		ldr	r3, [r7, #12]
 4246 0038 0133     		adds	r3, r3, #1
 4247 003a FB60     		str	r3, [r7, #12]
 4248              	.L277:
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4249              		.loc 1 2711 3 discriminator 1
 4250 003c FB68     		ldr	r3, [r7, #12]
 4251 003e 072B     		cmp	r3, #7
 4252 0040 E5D9     		bls	.L280
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4253              		.loc 1 2730 2
 4254 0042 00BF     		nop
ARM GAS  /tmp/ccW8mGL0.s 			page 128


 4255              	.L279:
 4256 0044 00BF     		nop
 4257 0046 1437     		adds	r7, r7, #20
 4258              	.LCFI144:
 4259              		.cfi_def_cfa_offset 4
 4260 0048 BD46     		mov	sp, r7
 4261              	.LCFI145:
 4262              		.cfi_def_cfa_register 13
 4263              		@ sp needed
 4264 004a 5DF8047B 		ldr	r7, [sp], #4
 4265              	.LCFI146:
 4266              		.cfi_restore 7
 4267              		.cfi_def_cfa_offset 0
 4268 004e 7047     		bx	lr
 4269              	.L282:
 4270              		.align	2
 4271              	.L281:
 4272 0050 00000000 		.word	xQueueRegistry
 4273              		.cfi_endproc
 4274              	.LFE32:
 4276              		.text
 4277              	.Letext0:
 4278              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 4279              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 4280              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 4281              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4282              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4283              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
ARM GAS  /tmp/ccW8mGL0.s 			page 129


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccW8mGL0.s:22     .bss.xQueueRegistry:0000000000000000 xQueueRegistry
     /tmp/ccW8mGL0.s:19     .bss.xQueueRegistry:0000000000000000 $d
     /tmp/ccW8mGL0.s:25     .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccW8mGL0.s:33     .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccW8mGL0.s:200    .text.xQueueGenericReset:00000000000000cc $d
     /tmp/ccW8mGL0.s:205    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccW8mGL0.s:212    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccW8mGL0.s:313    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccW8mGL0.s:307    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccW8mGL0.s:375    .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccW8mGL0.s:381    .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccW8mGL0.s:501    .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccW8mGL0.s:436    .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccW8mGL0.s:443    .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccW8mGL0.s:494    .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccW8mGL0.s:3321   .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccW8mGL0.s:3867   .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccW8mGL0.s:3579   .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccW8mGL0.s:885    .text.xQueueGenericSend:00000000000001f8 $d
     /tmp/ccW8mGL0.s:890    .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:897    .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccW8mGL0.s:1166   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:1173   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccW8mGL0.s:1421   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccW8mGL0.s:1428   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccW8mGL0.s:3497   .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccW8mGL0.s:3719   .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccW8mGL0.s:1757   .text.xQueueReceive:00000000000001bc $d
     /tmp/ccW8mGL0.s:1762   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccW8mGL0.s:1769   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccW8mGL0.s:3258   .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccW8mGL0.s:2158   .text.xQueueSemaphoreTake:0000000000000214 $d
     /tmp/ccW8mGL0.s:2163   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccW8mGL0.s:2170   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccW8mGL0.s:2501   .text.xQueuePeek:00000000000001c0 $d
     /tmp/ccW8mGL0.s:2506   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:2513   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccW8mGL0.s:2735   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:2742   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccW8mGL0.s:2942   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccW8mGL0.s:2949   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccW8mGL0.s:3017   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccW8mGL0.s:3024   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccW8mGL0.s:3100   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:3107   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccW8mGL0.s:3178   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccW8mGL0.s:3185   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccW8mGL0.s:4195   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccW8mGL0.s:3252   .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccW8mGL0.s:3315   .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccW8mGL0.s:3491   .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccW8mGL0.s:3573   .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccW8mGL0.s:3713   .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccW8mGL0.s:3772   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:3779   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
ARM GAS  /tmp/ccW8mGL0.s 			page 130


     /tmp/ccW8mGL0.s:3861   .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccW8mGL0.s:3923   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccW8mGL0.s:3930   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccW8mGL0.s:4015   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccW8mGL0.s:4022   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccW8mGL0.s:4097   .text.vQueueAddToRegistry:0000000000000050 $d
     /tmp/ccW8mGL0.s:4102   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccW8mGL0.s:4109   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccW8mGL0.s:4183   .text.pcQueueGetName:0000000000000048 $d
     /tmp/ccW8mGL0.s:4188   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccW8mGL0.s:4272   .text.vQueueUnregisterQueue:0000000000000050 $d

UNDEFINED SYMBOLS
vPortEnterCritical
xTaskRemoveFromEventList
vListInitialise
vPortExitCritical
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
