ARM GAS  /tmp/ccpsiOt9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvTaskIsTaskSuspended:
  26              	.LVL0:
  27              	.LFB14:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  /tmp/ccpsiOt9.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  /tmp/ccpsiOt9.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  /tmp/ccpsiOt9.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  /tmp/ccpsiOt9.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccpsiOt9.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
ARM GAS  /tmp/ccpsiOt9.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/ccpsiOt9.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/ccpsiOt9.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  /tmp/ccpsiOt9.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/ccpsiOt9.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  /tmp/ccpsiOt9.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccpsiOt9.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/ccpsiOt9.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  /tmp/ccpsiOt9.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
ARM GAS  /tmp/ccpsiOt9.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
ARM GAS  /tmp/ccpsiOt9.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
ARM GAS  /tmp/ccpsiOt9.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
ARM GAS  /tmp/ccpsiOt9.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/ccpsiOt9.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  /tmp/ccpsiOt9.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
ARM GAS  /tmp/ccpsiOt9.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  /tmp/ccpsiOt9.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  /tmp/ccpsiOt9.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
ARM GAS  /tmp/ccpsiOt9.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  /tmp/ccpsiOt9.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccpsiOt9.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
ARM GAS  /tmp/ccpsiOt9.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccpsiOt9.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccpsiOt9.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1806 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1807 2 view .LVU1
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1808 2 view .LVU2
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1814 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L7
  38              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1817 3 discriminator 2 view .LVU5
  40              		.loc 1 1817 5 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42 0004 0B4A     		ldr	r2, .L9
  43 0006 9142     		cmp	r1, r2
  44 0008 0AD0     		beq	.L8
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  45              		.loc 1 1807 13 view .LVU7
  46 000a 0020     		movs	r0, #0
  47              	.LVL1:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  48              		.loc 1 1807 13 view .LVU8
  49 000c 7047     		bx	lr
  50              	.LVL2:
  51              	.L7:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  52              		.loc 1 1814 3 is_stmt 1 view .LVU9
  53              	.LBB100:
  54              	.LBI100:
  55              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  /tmp/ccpsiOt9.s 			page 34


   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
ARM GAS  /tmp/ccpsiOt9.s 			page 35


  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 36


 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  /tmp/ccpsiOt9.s 			page 37


 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  56              		.loc 2 191 30 view .LVU10
  57              	.LBB101:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  58              		.loc 2 193 1 view .LVU11
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  59              		.loc 2 195 2 view .LVU12
  60              		.syntax unified
  61              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  62 000e 4FF05003 			mov r3, #80												
  63 0012 83F31188 		msr basepri, r3											
  64 0016 BFF36F8F 		isb														
  65 001a BFF34F8F 		dsb														
  66              	
  67              	@ 0 "" 2
  68              	.LVL3:
  69              		.thumb
  70              		.syntax unified
  71              	.L3:
  72              		.loc 2 195 2 is_stmt 0 view .LVU13
  73              	.LBE101:
  74              	.LBE100:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  75              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU14
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1814 3 discriminator 1 view .LVU15
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  77              		.loc 1 1814 3 discriminator 1 view .LVU16
  78 001e FEE7     		b	.L3
  79              	.L8:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  80              		.loc 1 1820 4 view .LVU17
  81              		.loc 1 1820 8 is_stmt 0 view .LVU18
  82 0020 806A     		ldr	r0, [r0, #40]
  83              	.LVL4:
  84              		.loc 1 1820 6 view .LVU19
  85 0022 054B     		ldr	r3, .L9+4
  86 0024 9842     		cmp	r0, r3
  87 0026 03D0     		beq	.L6
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
ARM GAS  /tmp/ccpsiOt9.s 			page 38


1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  88              		.loc 1 1824 5 is_stmt 1 view .LVU20
  89              		.loc 1 1824 7 is_stmt 0 view .LVU21
  90 0028 B0FA80F0 		clz	r0, r0
  91 002c 4009     		lsrs	r0, r0, #5
  92 002e 7047     		bx	lr
  93              	.L6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  94              		.loc 1 1807 13 view .LVU22
  95 0030 0020     		movs	r0, #0
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
  96              		.loc 1 1840 28 is_stmt 1 view .LVU23
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
  97              		.loc 1 1843 3 view .LVU24
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  98              		.loc 1 1844 2 is_stmt 0 view .LVU25
  99 0032 7047     		bx	lr
 100              	.L10:
 101              		.align	2
 102              	.L9:
 103 0034 00000000 		.word	.LANCHOR0
 104 0038 00000000 		.word	.LANCHOR1
 105              		.cfi_endproc
 106              	.LFE14:
 108              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	prvResetNextTaskUnblockTime:
 116              	.LFB40:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
ARM GAS  /tmp/ccpsiOt9.s 			page 39


1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
ARM GAS  /tmp/ccpsiOt9.s 			page 40


1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccpsiOt9.s 			page 41


1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
ARM GAS  /tmp/ccpsiOt9.s 			page 42


2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 43


2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
ARM GAS  /tmp/ccpsiOt9.s 			page 44


2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 45


2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
ARM GAS  /tmp/ccpsiOt9.s 			page 46


2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 47


2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
ARM GAS  /tmp/ccpsiOt9.s 			page 48


2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
ARM GAS  /tmp/ccpsiOt9.s 			page 49


2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccpsiOt9.s 			page 50


2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 51


2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
ARM GAS  /tmp/ccpsiOt9.s 			page 52


2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
ARM GAS  /tmp/ccpsiOt9.s 			page 53


2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 54


2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
ARM GAS  /tmp/ccpsiOt9.s 			page 55


2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
ARM GAS  /tmp/ccpsiOt9.s 			page 56


2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccpsiOt9.s 			page 57


2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
ARM GAS  /tmp/ccpsiOt9.s 			page 58


2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
ARM GAS  /tmp/ccpsiOt9.s 			page 59


2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 60


3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
ARM GAS  /tmp/ccpsiOt9.s 			page 61


3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
ARM GAS  /tmp/ccpsiOt9.s 			page 62


3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
ARM GAS  /tmp/ccpsiOt9.s 			page 63


3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
ARM GAS  /tmp/ccpsiOt9.s 			page 64


3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
ARM GAS  /tmp/ccpsiOt9.s 			page 65


3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
ARM GAS  /tmp/ccpsiOt9.s 			page 66


3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
ARM GAS  /tmp/ccpsiOt9.s 			page 67


3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
ARM GAS  /tmp/ccpsiOt9.s 			page 68


3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
ARM GAS  /tmp/ccpsiOt9.s 			page 69


3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
ARM GAS  /tmp/ccpsiOt9.s 			page 70


3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
ARM GAS  /tmp/ccpsiOt9.s 			page 71


3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccpsiOt9.s 			page 72


3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 73


3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 74


3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 75


3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 117              		.loc 1 3944 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 122              		.loc 1 3945 1 view .LVU27
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 123              		.loc 1 3947 2 view .LVU28
 124              		.loc 1 3947 6 is_stmt 0 view .LVU29
 125 0000 084B     		ldr	r3, .L14
 126 0002 1B68     		ldr	r3, [r3]
 127 0004 1B68     		ldr	r3, [r3]
 128              		.loc 1 3947 4 view .LVU30
 129 0006 23B9     		cbnz	r3, .L12
ARM GAS  /tmp/ccpsiOt9.s 			page 76


3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 130              		.loc 1 3953 3 is_stmt 1 view .LVU31
 131              		.loc 1 3953 24 is_stmt 0 view .LVU32
 132 0008 074B     		ldr	r3, .L14+4
 133 000a 4FF0FF32 		mov	r2, #-1
 134 000e 1A60     		str	r2, [r3]
 135 0010 7047     		bx	lr
 136              	.L12:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 137              		.loc 1 3961 3 is_stmt 1 view .LVU33
 138              		.loc 1 3961 15 is_stmt 0 view .LVU34
 139 0012 044B     		ldr	r3, .L14
 140 0014 1B68     		ldr	r3, [r3]
 141              	.LVL5:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 142              		.loc 1 3962 3 is_stmt 1 view .LVU35
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 143              		.loc 1 3961 13 is_stmt 0 view .LVU36
 144 0016 DB68     		ldr	r3, [r3, #12]
 145              	.LVL6:
 146              		.loc 1 3962 26 view .LVU37
 147 0018 DB68     		ldr	r3, [r3, #12]
 148              	.LVL7:
 149              		.loc 1 3962 26 view .LVU38
 150 001a 5A68     		ldr	r2, [r3, #4]
 151              		.loc 1 3962 24 view .LVU39
 152 001c 024B     		ldr	r3, .L14+4
 153              	.LVL8:
 154              		.loc 1 3962 24 view .LVU40
 155 001e 1A60     		str	r2, [r3]
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 156              		.loc 1 3964 1 view .LVU41
 157 0020 7047     		bx	lr
 158              	.L15:
 159 0022 00BF     		.align	2
 160              	.L14:
 161 0024 00000000 		.word	.LANCHOR2
 162 0028 00000000 		.word	.LANCHOR3
 163              		.cfi_endproc
 164              	.LFE40:
 166              		.section	.text.prvIdleTask,"ax",%progbits
 167              		.align	1
 168              		.syntax unified
 169              		.thumb
ARM GAS  /tmp/ccpsiOt9.s 			page 77


 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	prvIdleTask:
 174              	.LVL9:
 175              	.LFB36:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 176              		.loc 1 3393 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ Volatile: function does not return.
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 181              		.loc 1 3393 1 is_stmt 0 view .LVU43
 182 0000 80B5     		push	{r7, lr}
 183              	.LCFI0:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187              	.LBB107:
 188              	.LBB108:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 189              		.loc 1 3650 39 view .LVU44
 190 0002 174D     		ldr	r5, .L24
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 191              		.loc 1 3654 13 view .LVU45
 192 0004 174F     		ldr	r7, .L24+4
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 193              		.loc 1 3656 5 view .LVU46
 194 0006 184E     		ldr	r6, .L24+8
 195              	.LBE108:
 196              	.LBE107:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 197              		.loc 1 3432 8 view .LVU47
 198 0008 DFF86080 		ldr	r8, .L24+12
 199              	.LVL10:
 200              	.L19:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201              		.loc 1 3395 2 is_stmt 1 view .LVU48
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 202              		.loc 1 3403 64 view .LVU49
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 203              		.loc 1 3405 2 view .LVU50
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 204              		.loc 1 3409 3 view .LVU51
 205              	.LBB112:
 206              	.LBI107:
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 207              		.loc 1 3639 13 view .LVU52
 208              	.LBB111:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209              		.loc 1 3646 3 view .LVU53
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 210              		.loc 1 3650 3 view .LVU54
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 211              		.loc 1 3650 8 view .LVU55
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 212              		.loc 1 3650 39 is_stmt 0 view .LVU56
ARM GAS  /tmp/ccpsiOt9.s 			page 78


 213 000c 2B68     		ldr	r3, [r5]
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 214              		.loc 1 3650 8 view .LVU57
 215 000e BBB1     		cbz	r3, .L17
 216              	.L18:
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 217              		.loc 1 3652 4 is_stmt 1 view .LVU58
 218 0010 FFF7FEFF 		bl	vPortEnterCritical
 219              	.LVL11:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 220              		.loc 1 3654 5 view .LVU59
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 221              		.loc 1 3654 11 is_stmt 0 view .LVU60
 222 0014 FB68     		ldr	r3, [r7, #12]
 223 0016 DC68     		ldr	r4, [r3, #12]
 224              	.LVL12:
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 225              		.loc 1 3655 5 is_stmt 1 view .LVU61
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 226              		.loc 1 3655 14 is_stmt 0 view .LVU62
 227 0018 201D     		adds	r0, r4, #4
 228 001a FFF7FEFF 		bl	uxListRemove
 229              	.LVL13:
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 230              		.loc 1 3656 5 is_stmt 1 view .LVU63
 231 001e 3368     		ldr	r3, [r6]
 232 0020 013B     		subs	r3, r3, #1
 233 0022 3360     		str	r3, [r6]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 234              		.loc 1 3657 5 view .LVU64
 235 0024 2B68     		ldr	r3, [r5]
 236 0026 013B     		subs	r3, r3, #1
 237 0028 2B60     		str	r3, [r5]
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 238              		.loc 1 3659 4 view .LVU65
 239 002a FFF7FEFF 		bl	vPortExitCritical
 240              	.LVL14:
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 241              		.loc 1 3661 4 view .LVU66
 242              	.LBB109:
 243              	.LBI109:
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 244              		.loc 1 3887 14 view .LVU67
 245              	.LBB110:
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 246              		.loc 1 3892 3 view .LVU68
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 247              		.loc 1 3908 4 view .LVU69
 248 002e 206B     		ldr	r0, [r4, #48]
 249 0030 FFF7FEFF 		bl	vPortFree
 250              	.LVL15:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 251              		.loc 1 3909 4 view .LVU70
 252 0034 2046     		mov	r0, r4
 253 0036 FFF7FEFF 		bl	vPortFree
 254              	.LVL16:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccpsiOt9.s 			page 79


 255              		.loc 1 3909 4 is_stmt 0 view .LVU71
 256              	.LBE110:
 257              	.LBE109:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 258              		.loc 1 3650 8 is_stmt 1 view .LVU72
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 259              		.loc 1 3650 39 is_stmt 0 view .LVU73
 260 003a 2B68     		ldr	r3, [r5]
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 261              		.loc 1 3650 8 view .LVU74
 262 003c 002B     		cmp	r3, #0
 263 003e E7D1     		bne	.L18
 264              	.LVL17:
 265              	.L17:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 266              		.loc 1 3650 8 view .LVU75
 267              	.LBE111:
 268              	.LBE112:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 269              		.loc 1 3432 4 is_stmt 1 view .LVU76
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 270              		.loc 1 3432 8 is_stmt 0 view .LVU77
 271 0040 D8F80030 		ldr	r3, [r8]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 272              		.loc 1 3432 6 view .LVU78
 273 0044 012B     		cmp	r3, #1
 274 0046 E1D9     		bls	.L19
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 275              		.loc 1 3434 5 is_stmt 1 view .LVU79
 276 0048 4FF0E023 		mov	r3, #-536813568
 277 004c 4FF08052 		mov	r2, #268435456
 278 0050 C3F8042D 		str	r2, [r3, #3332]
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 279              		.loc 1 3434 5 view .LVU80
 280              		.syntax unified
 281              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 282 0054 BFF34F8F 		dsb
 283              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 284              		.loc 1 3434 5 view .LVU81
 285              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 286 0058 BFF36F8F 		isb
 287              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 288              		.loc 1 3434 16 view .LVU82
 289              		.thumb
 290              		.syntax unified
 291 005c D6E7     		b	.L19
 292              	.L25:
 293 005e 00BF     		.align	2
 294              	.L24:
 295 0060 00000000 		.word	.LANCHOR4
 296 0064 00000000 		.word	.LANCHOR5
 297 0068 00000000 		.word	.LANCHOR6
 298 006c 00000000 		.word	.LANCHOR7
 299              		.cfi_endproc
 300              	.LFE36:
ARM GAS  /tmp/ccpsiOt9.s 			page 80


 302              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 303              		.align	1
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv4-sp-d16
 309              	prvAddCurrentTaskToDelayedList:
 310              	.LVL18:
 311              	.LFB55:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
ARM GAS  /tmp/ccpsiOt9.s 			page 81


4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
ARM GAS  /tmp/ccpsiOt9.s 			page 82


4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
ARM GAS  /tmp/ccpsiOt9.s 			page 83


4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 84


4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 85


4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
ARM GAS  /tmp/ccpsiOt9.s 			page 86


4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
ARM GAS  /tmp/ccpsiOt9.s 			page 87


4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 88


4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccpsiOt9.s 			page 89


4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 90


4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccpsiOt9.s 			page 91


4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/ccpsiOt9.s 			page 92


4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccpsiOt9.s 			page 93


4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 94


4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
ARM GAS  /tmp/ccpsiOt9.s 			page 95


4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
ARM GAS  /tmp/ccpsiOt9.s 			page 96


4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
ARM GAS  /tmp/ccpsiOt9.s 			page 97


4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
ARM GAS  /tmp/ccpsiOt9.s 			page 98


4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
ARM GAS  /tmp/ccpsiOt9.s 			page 99


5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
ARM GAS  /tmp/ccpsiOt9.s 			page 100


5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/ccpsiOt9.s 			page 101


5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 312              		.loc 1 5178 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		.loc 1 5178 1 is_stmt 0 view .LVU84
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI1:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 0446     		mov	r4, r0
 325 0004 0D46     		mov	r5, r1
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 326              		.loc 1 5179 1 is_stmt 1 view .LVU85
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 327              		.loc 1 5180 1 view .LVU86
 328              		.loc 1 5180 18 is_stmt 0 view .LVU87
 329 0006 1D4B     		ldr	r3, .L33
 330 0008 1E68     		ldr	r6, [r3]
 331              	.LVL19:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccpsiOt9.s 			page 102


5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 332              		.loc 1 5193 2 is_stmt 1 view .LVU88
 333              		.loc 1 5193 35 is_stmt 0 view .LVU89
 334 000a 1D4B     		ldr	r3, .L33+4
 335 000c 1868     		ldr	r0, [r3]
 336              	.LVL20:
 337              		.loc 1 5193 6 view .LVU90
 338 000e 0430     		adds	r0, r0, #4
 339 0010 FFF7FEFF 		bl	uxListRemove
 340              	.LVL21:
 341              		.loc 1 5193 4 view .LVU91
 342 0014 48B9     		cbnz	r0, .L27
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 343              		.loc 1 5197 3 is_stmt 1 view .LVU92
 344 0016 1A4B     		ldr	r3, .L33+4
 345 0018 1A68     		ldr	r2, [r3]
 346 001a 1A49     		ldr	r1, .L33+8
 347 001c 0B68     		ldr	r3, [r1]
 348 001e D06A     		ldr	r0, [r2, #44]
 349 0020 0122     		movs	r2, #1
 350 0022 8240     		lsls	r2, r2, r0
 351 0024 23EA0203 		bic	r3, r3, r2
 352 0028 0B60     		str	r3, [r1]
 353              	.L27:
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 354              		.loc 1 5201 27 view .LVU93
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 355              		.loc 1 5206 3 view .LVU94
 356              		.loc 1 5206 5 is_stmt 0 view .LVU95
 357 002a B4F1FF3F 		cmp	r4, #-1
 358 002e 0DD0     		beq	.L32
 359              	.L28:
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
ARM GAS  /tmp/ccpsiOt9.s 			page 103


 360              		.loc 1 5218 4 is_stmt 1 view .LVU96
 361              		.loc 1 5218 16 is_stmt 0 view .LVU97
 362 0030 3444     		add	r4, r4, r6
 363              	.LVL22:
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 364              		.loc 1 5221 4 is_stmt 1 view .LVU98
 365 0032 134B     		ldr	r3, .L33+4
 366 0034 1B68     		ldr	r3, [r3]
 367 0036 5C60     		str	r4, [r3, #4]
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 368              		.loc 1 5223 4 view .LVU99
 369              		.loc 1 5223 6 is_stmt 0 view .LVU100
 370 0038 A642     		cmp	r6, r4
 371 003a 10D9     		bls	.L30
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 372              		.loc 1 5227 5 is_stmt 1 view .LVU101
 373 003c 124B     		ldr	r3, .L33+12
 374 003e 1868     		ldr	r0, [r3]
 375              		.loc 1 5227 60 is_stmt 0 view .LVU102
 376 0040 0F4B     		ldr	r3, .L33+4
 377 0042 1968     		ldr	r1, [r3]
 378              		.loc 1 5227 5 view .LVU103
 379 0044 0431     		adds	r1, r1, #4
 380 0046 FFF7FEFF 		bl	vListInsert
 381              	.LVL23:
 382              	.L26:
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
ARM GAS  /tmp/ccpsiOt9.s 			page 104


5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 383              		.loc 1 5286 1 view .LVU104
 384 004a 70BD     		pop	{r4, r5, r6, pc}
 385              	.LVL24:
 386              	.L32:
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 387              		.loc 1 5206 41 discriminator 1 view .LVU105
 388 004c 002D     		cmp	r5, #0
 389 004e EFD0     		beq	.L28
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 390              		.loc 1 5211 4 is_stmt 1 view .LVU106
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 391              		.loc 1 5211 56 is_stmt 0 view .LVU107
 392 0050 0B4B     		ldr	r3, .L33+4
 393 0052 1968     		ldr	r1, [r3]
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 394              		.loc 1 5211 4 view .LVU108
 395 0054 0431     		adds	r1, r1, #4
 396 0056 0D48     		ldr	r0, .L33+16
 397 0058 FFF7FEFF 		bl	vListInsertEnd
 398              	.LVL25:
 399 005c F5E7     		b	.L26
 400              	.LVL26:
 401              	.L30:
ARM GAS  /tmp/ccpsiOt9.s 			page 105


5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402              		.loc 1 5233 5 is_stmt 1 view .LVU109
 403 005e 0C4B     		ldr	r3, .L33+20
 404 0060 1868     		ldr	r0, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 405              		.loc 1 5233 52 is_stmt 0 view .LVU110
 406 0062 074B     		ldr	r3, .L33+4
 407 0064 1968     		ldr	r1, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 408              		.loc 1 5233 5 view .LVU111
 409 0066 0431     		adds	r1, r1, #4
 410 0068 FFF7FEFF 		bl	vListInsert
 411              	.LVL27:
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 412              		.loc 1 5238 5 is_stmt 1 view .LVU112
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 413              		.loc 1 5238 21 is_stmt 0 view .LVU113
 414 006c 094B     		ldr	r3, .L33+24
 415 006e 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 416              		.loc 1 5238 7 view .LVU114
 417 0070 A342     		cmp	r3, r4
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 418              		.loc 1 5240 6 is_stmt 1 view .LVU115
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 419              		.loc 1 5240 27 is_stmt 0 view .LVU116
 420 0072 84BF     		itt	hi
 421 0074 074B     		ldrhi	r3, .L33+24
 422 0076 1C60     		strhi	r4, [r3]
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 423              		.loc 1 5244 30 is_stmt 1 view .LVU117
 424              		.loc 1 5286 1 is_stmt 0 view .LVU118
 425 0078 E7E7     		b	.L26
 426              	.L34:
 427 007a 00BF     		.align	2
 428              	.L33:
 429 007c 00000000 		.word	.LANCHOR8
 430 0080 00000000 		.word	.LANCHOR9
 431 0084 00000000 		.word	.LANCHOR10
 432 0088 00000000 		.word	.LANCHOR11
 433 008c 00000000 		.word	.LANCHOR0
 434 0090 00000000 		.word	.LANCHOR2
 435 0094 00000000 		.word	.LANCHOR3
 436              		.cfi_endproc
 437              	.LFE55:
 439              		.section	.text.xTaskCreate,"ax",%progbits
 440              		.align	1
 441              		.global	xTaskCreate
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv4-sp-d16
 447              	xTaskCreate:
 448              	.LVL28:
 449              	.LFB5:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 450              		.loc 1 739 2 is_stmt 1 view -0
ARM GAS  /tmp/ccpsiOt9.s 			page 106


 451              		.cfi_startproc
 452              		@ args = 8, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 454              		.loc 1 739 2 is_stmt 0 view .LVU120
 455 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 456              	.LCFI2:
 457              		.cfi_def_cfa_offset 40
 458              		.cfi_offset 3, -40
 459              		.cfi_offset 4, -36
 460              		.cfi_offset 5, -32
 461              		.cfi_offset 6, -28
 462              		.cfi_offset 7, -24
 463              		.cfi_offset 8, -20
 464              		.cfi_offset 9, -16
 465              		.cfi_offset 10, -12
 466              		.cfi_offset 11, -8
 467              		.cfi_offset 14, -4
 468 0004 8046     		mov	r8, r0
 469 0006 0D46     		mov	r5, r1
 470 0008 9946     		mov	r9, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 471              		.loc 1 740 2 is_stmt 1 view .LVU121
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 472              		.loc 1 741 2 view .LVU122
 473              	.LBB120:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 474              		.loc 1 770 3 view .LVU123
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475              		.loc 1 773 4 view .LVU124
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 476              		.loc 1 773 14 is_stmt 0 view .LVU125
 477 000a 9700     		lsls	r7, r2, #2
 478 000c 3846     		mov	r0, r7
 479              	.LVL29:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 480              		.loc 1 773 14 view .LVU126
 481 000e FFF7FEFF 		bl	pvPortMalloc
 482              	.LVL30:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 483              		.loc 1 775 4 is_stmt 1 view .LVU127
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 484              		.loc 1 775 6 is_stmt 0 view .LVU128
 485 0012 0028     		cmp	r0, #0
 486 0014 00F0AF80 		beq	.L47
 487 0018 8246     		mov	r10, r0
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 488              		.loc 1 778 5 is_stmt 1 view .LVU129
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 489              		.loc 1 778 28 is_stmt 0 view .LVU130
 490 001a 5420     		movs	r0, #84
 491              	.LVL31:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 492              		.loc 1 778 28 view .LVU131
 493 001c FFF7FEFF 		bl	pvPortMalloc
 494              	.LVL32:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccpsiOt9.s 			page 107


 495              		.loc 1 780 5 is_stmt 1 view .LVU132
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 496              		.loc 1 780 7 is_stmt 0 view .LVU133
 497 0020 0446     		mov	r4, r0
 498 0022 0028     		cmp	r0, #0
 499 0024 79D0     		beq	.L37
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 500              		.loc 1 783 6 is_stmt 1 view .LVU134
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 501              		.loc 1 783 24 is_stmt 0 view .LVU135
 502 0026 C0F830A0 		str	r10, [r0, #48]
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 503              		.loc 1 783 24 view .LVU136
 504              	.LBE120:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 505              		.loc 1 799 3 is_stmt 1 view .LVU137
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 506              		.loc 1 809 4 view .LVU138
 507              	.LVL33:
 508              	.LBB121:
 509              	.LBI121:
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 510              		.loc 1 824 13 view .LVU139
 511              	.LBB122:
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 512              		.loc 1 833 1 view .LVU140
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 513              		.loc 1 834 1 view .LVU141
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 514              		.loc 1 864 3 view .LVU142
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 515              		.loc 1 865 3 view .LVU143
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516              		.loc 1 868 3 view .LVU144
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517              		.loc 1 868 124 view .LVU145
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 518              		.loc 1 892 2 view .LVU146
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 519              		.loc 1 892 4 is_stmt 0 view .LVU147
 520 002a 002D     		cmp	r5, #0
 521 002c 7BD0     		beq	.L54
 522 002e 05F1FF3C 		add	ip, r5, #-1
 523 0032 00F13303 		add	r3, r0, #51
 524 0036 0F35     		adds	r5, r5, #15
 525              	.LVL34:
 526              	.L41:
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527              		.loc 1 896 4 is_stmt 1 view .LVU148
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528              		.loc 1 896 38 is_stmt 0 view .LVU149
 529 0038 1CF8016F 		ldrb	r6, [ip, #1]!	@ zero_extendqisi2
 530              	.LVL35:
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531              		.loc 1 896 30 view .LVU150
 532 003c 03F8016F 		strb	r6, [r3, #1]!
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccpsiOt9.s 			page 108


 533              		.loc 1 901 4 is_stmt 1 view .LVU151
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 534              		.loc 1 901 6 is_stmt 0 view .LVU152
 535 0040 0EB1     		cbz	r6, .L40
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 536              		.loc 1 907 29 is_stmt 1 view .LVU153
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 537              		.loc 1 894 76 view .LVU154
 538              	.LVL36:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 539              		.loc 1 894 31 view .LVU155
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 540              		.loc 1 894 3 is_stmt 0 view .LVU156
 541 0042 AC45     		cmp	ip, r5
 542 0044 F8D1     		bne	.L41
 543              	.LVL37:
 544              	.L40:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 545              		.loc 1 913 3 is_stmt 1 view .LVU157
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 546              		.loc 1 913 55 is_stmt 0 view .LVU158
 547 0046 0023     		movs	r3, #0
 548 0048 84F84330 		strb	r3, [r4, #67]
 549              	.LVL38:
 550              	.L42:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 551              		.loc 1 924 2 is_stmt 1 view .LVU159
 552 004c 0A9E     		ldr	r6, [sp, #40]
 553 004e 062E     		cmp	r6, #6
 554 0050 28BF     		it	cs
 555 0052 0626     		movcs	r6, #6
 556              	.LVL39:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 557              		.loc 1 930 27 view .LVU160
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 558              		.loc 1 933 2 view .LVU161
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 559              		.loc 1 933 23 is_stmt 0 view .LVU162
 560 0054 E662     		str	r6, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 561              		.loc 1 936 3 is_stmt 1 view .LVU163
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 562              		.loc 1 936 28 is_stmt 0 view .LVU164
 563 0056 6664     		str	r6, [r4, #68]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 564              		.loc 1 937 3 is_stmt 1 view .LVU165
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 565              		.loc 1 937 27 is_stmt 0 view .LVU166
 566 0058 4FF0000B 		mov	fp, #0
 567 005c C4F848B0 		str	fp, [r4, #72]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 568              		.loc 1 941 2 is_stmt 1 view .LVU167
 569 0060 251D     		adds	r5, r4, #4
 570 0062 2846     		mov	r0, r5
 571              	.LVL40:
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 572              		.loc 1 941 2 is_stmt 0 view .LVU168
ARM GAS  /tmp/ccpsiOt9.s 			page 109


 573 0064 FFF7FEFF 		bl	vListInitialiseItem
 574              	.LVL41:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575              		.loc 1 942 2 is_stmt 1 view .LVU169
 576 0068 04F11800 		add	r0, r4, #24
 577 006c FFF7FEFF 		bl	vListInitialiseItem
 578              	.LVL42:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579              		.loc 1 946 2 view .LVU170
 580 0070 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 581              		.loc 1 949 2 view .LVU171
 582 0072 C6F10706 		rsb	r6, r6, #7
 583              	.LVL43:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 584              		.loc 1 949 2 is_stmt 0 view .LVU172
 585 0076 A661     		str	r6, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586              		.loc 1 950 2 is_stmt 1 view .LVU173
 587 0078 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 588              		.loc 1 977 3 view .LVU174
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 589              		.loc 1 992 3 view .LVU175
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 590              		.loc 1 992 29 is_stmt 0 view .LVU176
 591 007a C4F84CB0 		str	fp, [r4, #76]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 592              		.loc 1 993 3 is_stmt 1 view .LVU177
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 593              		.loc 1 993 27 is_stmt 0 view .LVU178
 594 007e 84F850B0 		strb	fp, [r4, #80]
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 595              		.loc 1 1058 4 is_stmt 1 view .LVU179
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 596              		.loc 1 864 38 is_stmt 0 view .LVU180
 597 0082 043F     		subs	r7, r7, #4
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 598              		.loc 1 864 16 view .LVU181
 599 0084 5744     		add	r7, r7, r10
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 600              		.loc 1 1058 29 view .LVU182
 601 0086 4A46     		mov	r2, r9
 602 0088 4146     		mov	r1, r8
 603 008a 27F00700 		bic	r0, r7, #7
 604 008e FFF7FEFF 		bl	pxPortInitialiseStack
 605              	.LVL44:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 606              		.loc 1 1058 27 view .LVU183
 607 0092 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 608              		.loc 1 1064 2 is_stmt 1 view .LVU184
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 609              		.loc 1 1064 4 is_stmt 0 view .LVU185
 610 0094 0B9B     		ldr	r3, [sp, #44]
 611 0096 03B1     		cbz	r3, .L43
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccpsiOt9.s 			page 110


 612              		.loc 1 1068 3 is_stmt 1 view .LVU186
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 613              		.loc 1 1068 18 is_stmt 0 view .LVU187
 614 0098 1C60     		str	r4, [r3]
 615              	.L43:
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 616              		.loc 1 1072 27 is_stmt 1 view .LVU188
 617              	.LVL45:
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 618              		.loc 1 1072 27 is_stmt 0 view .LVU189
 619              	.LBE122:
 620              	.LBE121:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 621              		.loc 1 810 4 is_stmt 1 view .LVU190
 622              	.LBB124:
 623              	.LBI124:
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 624              		.loc 1 1077 13 view .LVU191
 625              	.LBB125:
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 626              		.loc 1 1081 2 view .LVU192
 627 009a FFF7FEFF 		bl	vPortEnterCritical
 628              	.LVL46:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 629              		.loc 1 1083 3 view .LVU193
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 630              		.loc 1 1083 25 is_stmt 0 view .LVU194
 631 009e 3A4A     		ldr	r2, .L56
 632 00a0 1368     		ldr	r3, [r2]
 633 00a2 0133     		adds	r3, r3, #1
 634 00a4 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 635              		.loc 1 1084 3 is_stmt 1 view .LVU195
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 636              		.loc 1 1084 20 is_stmt 0 view .LVU196
 637 00a6 394B     		ldr	r3, .L56+4
 638 00a8 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 639              		.loc 1 1084 5 view .LVU197
 640 00aa 002B     		cmp	r3, #0
 641 00ac 3FD0     		beq	.L55
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 642              		.loc 1 1107 4 is_stmt 1 view .LVU198
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 643              		.loc 1 1107 26 is_stmt 0 view .LVU199
 644 00ae 384B     		ldr	r3, .L56+8
 645 00b0 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 646              		.loc 1 1107 6 view .LVU200
 647 00b2 3BB9     		cbnz	r3, .L45
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 648              		.loc 1 1109 5 is_stmt 1 view .LVU201
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 649              		.loc 1 1109 21 is_stmt 0 view .LVU202
 650 00b4 354B     		ldr	r3, .L56+4
 651 00b6 1B68     		ldr	r3, [r3]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccpsiOt9.s 			page 111


 652              		.loc 1 1109 7 view .LVU203
 653 00b8 DA6A     		ldr	r2, [r3, #44]
 654 00ba E36A     		ldr	r3, [r4, #44]
 655 00bc 9A42     		cmp	r2, r3
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 656              		.loc 1 1111 6 is_stmt 1 view .LVU204
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 657              		.loc 1 1111 19 is_stmt 0 view .LVU205
 658 00be 9CBF     		itt	ls
 659 00c0 324B     		ldrls	r3, .L56+4
 660 00c2 1C60     		strls	r4, [r3]
 661              	.L45:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662              		.loc 1 1120 29 is_stmt 1 view .LVU206
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 663              		.loc 1 1124 3 view .LVU207
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664              		.loc 1 1124 15 is_stmt 0 view .LVU208
 665 00c4 334A     		ldr	r2, .L56+12
 666 00c6 1368     		ldr	r3, [r2]
 667 00c8 0133     		adds	r3, r3, #1
 668 00ca 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669              		.loc 1 1132 31 is_stmt 1 view .LVU209
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 670              		.loc 1 1134 3 view .LVU210
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 671              		.loc 1 1134 3 view .LVU211
 672 00cc E06A     		ldr	r0, [r4, #44]
 673 00ce 324A     		ldr	r2, .L56+16
 674 00d0 1168     		ldr	r1, [r2]
 675 00d2 0123     		movs	r3, #1
 676 00d4 8340     		lsls	r3, r3, r0
 677 00d6 0B43     		orrs	r3, r3, r1
 678 00d8 1360     		str	r3, [r2]
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679              		.loc 1 1134 3 view .LVU212
 680 00da 00EB8000 		add	r0, r0, r0, lsl #2
 681 00de 2946     		mov	r1, r5
 682 00e0 2E4B     		ldr	r3, .L56+20
 683 00e2 03EB8000 		add	r0, r3, r0, lsl #2
 684 00e6 FFF7FEFF 		bl	vListInsertEnd
 685              	.LVL47:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 686              		.loc 1 1134 36 view .LVU213
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 687              		.loc 1 1136 3 view .LVU214
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 688              		.loc 1 1138 2 view .LVU215
 689 00ea FFF7FEFF 		bl	vPortExitCritical
 690              	.LVL48:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 691              		.loc 1 1140 2 view .LVU216
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 692              		.loc 1 1140 24 is_stmt 0 view .LVU217
 693 00ee 284B     		ldr	r3, .L56+8
 694 00f0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccpsiOt9.s 			page 112


1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 695              		.loc 1 1140 4 view .LVU218
 696 00f2 002B     		cmp	r3, #0
 697 00f4 43D0     		beq	.L48
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 698              		.loc 1 1144 3 is_stmt 1 view .LVU219
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 699              		.loc 1 1144 19 is_stmt 0 view .LVU220
 700 00f6 254B     		ldr	r3, .L56+4
 701 00f8 1B68     		ldr	r3, [r3]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 702              		.loc 1 1144 5 view .LVU221
 703 00fa DA6A     		ldr	r2, [r3, #44]
 704 00fc E36A     		ldr	r3, [r4, #44]
 705 00fe 9A42     		cmp	r2, r3
 706 0100 3FD2     		bcs	.L49
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 707              		.loc 1 1146 4 is_stmt 1 view .LVU222
 708 0102 4FF0E023 		mov	r3, #-536813568
 709 0106 4FF08052 		mov	r2, #268435456
 710 010a C3F8042D 		str	r2, [r3, #3332]
 711              	.LVL49:
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 712              		.loc 1 1146 4 view .LVU223
 713              		.syntax unified
 714              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 715 010e BFF34F8F 		dsb
 716              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 717              		.loc 1 1146 4 view .LVU224
 718              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 719 0112 BFF36F8F 		isb
 720              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 721              		.loc 1 1146 35 view .LVU225
 722              		.thumb
 723              		.syntax unified
 724              	.LBE125:
 725              	.LBE124:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 726              		.loc 1 811 12 is_stmt 0 view .LVU226
 727 0116 0120     		movs	r0, #1
 728              	.LBB130:
 729              	.LBB128:
 730 0118 2FE0     		b	.L35
 731              	.LVL50:
 732              	.L37:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 733              		.loc 1 811 12 view .LVU227
 734              	.LBE128:
 735              	.LBE130:
 736              	.LBB131:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 737              		.loc 1 789 6 is_stmt 1 view .LVU228
 738 011a 5046     		mov	r0, r10
 739              	.LVL51:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccpsiOt9.s 			page 113


 740              		.loc 1 789 6 is_stmt 0 view .LVU229
 741 011c FFF7FEFF 		bl	vPortFree
 742              	.LVL52:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 743              		.loc 1 789 6 view .LVU230
 744              	.LBE131:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 745              		.loc 1 799 3 is_stmt 1 view .LVU231
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 746              		.loc 1 815 12 is_stmt 0 view .LVU232
 747 0120 4FF0FF30 		mov	r0, #-1
 748 0124 29E0     		b	.L35
 749              	.LVL53:
 750              	.L54:
 751              	.LBB132:
 752              	.LBB123:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 753              		.loc 1 919 3 is_stmt 1 view .LVU233
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 754              		.loc 1 919 29 is_stmt 0 view .LVU234
 755 0126 0023     		movs	r3, #0
 756 0128 80F83430 		strb	r3, [r0, #52]
 757 012c 8EE7     		b	.L42
 758              	.LVL54:
 759              	.L55:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 760              		.loc 1 919 29 view .LVU235
 761              	.LBE123:
 762              	.LBE132:
 763              	.LBB133:
 764              	.LBB129:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765              		.loc 1 1088 4 is_stmt 1 view .LVU236
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 766              		.loc 1 1088 17 is_stmt 0 view .LVU237
 767 012e 174B     		ldr	r3, .L56+4
 768 0130 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 769              		.loc 1 1090 4 is_stmt 1 view .LVU238
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770              		.loc 1 1090 31 is_stmt 0 view .LVU239
 771 0132 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 772              		.loc 1 1090 6 view .LVU240
 773 0134 012B     		cmp	r3, #1
 774 0136 C5D1     		bne	.L45
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 775              		.loc 1 1090 6 view .LVU241
 776 0138 184E     		ldr	r6, .L56+20
 777 013a 06F18C07 		add	r7, r6, #140
 778              	.L46:
 779              	.LBB126:
 780              	.LBB127:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 781              		.loc 1 3613 3 is_stmt 1 view .LVU242
 782 013e 3046     		mov	r0, r6
 783 0140 FFF7FEFF 		bl	vListInitialise
ARM GAS  /tmp/ccpsiOt9.s 			page 114


 784              	.LVL55:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 785              		.loc 1 3611 91 view .LVU243
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 786              		.loc 1 3611 40 view .LVU244
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 787              		.loc 1 3611 2 is_stmt 0 view .LVU245
 788 0144 1436     		adds	r6, r6, #20
 789 0146 B742     		cmp	r7, r6
 790 0148 F9D1     		bne	.L46
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 791              		.loc 1 3616 2 is_stmt 1 view .LVU246
 792 014a 154F     		ldr	r7, .L56+24
 793 014c 3846     		mov	r0, r7
 794 014e FFF7FEFF 		bl	vListInitialise
 795              	.LVL56:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 796              		.loc 1 3617 2 view .LVU247
 797 0152 144E     		ldr	r6, .L56+28
 798 0154 3046     		mov	r0, r6
 799 0156 FFF7FEFF 		bl	vListInitialise
 800              	.LVL57:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 801              		.loc 1 3618 2 view .LVU248
 802 015a 1348     		ldr	r0, .L56+32
 803 015c FFF7FEFF 		bl	vListInitialise
 804              	.LVL58:
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 805              		.loc 1 3622 3 view .LVU249
 806 0160 1248     		ldr	r0, .L56+36
 807 0162 FFF7FEFF 		bl	vListInitialise
 808              	.LVL59:
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 809              		.loc 1 3628 3 view .LVU250
 810 0166 1248     		ldr	r0, .L56+40
 811 0168 FFF7FEFF 		bl	vListInitialise
 812              	.LVL60:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 813              		.loc 1 3634 2 view .LVU251
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 814              		.loc 1 3634 20 is_stmt 0 view .LVU252
 815 016c 114B     		ldr	r3, .L56+44
 816 016e 1F60     		str	r7, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 817              		.loc 1 3635 2 is_stmt 1 view .LVU253
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 818              		.loc 1 3635 28 is_stmt 0 view .LVU254
 819 0170 114B     		ldr	r3, .L56+48
 820 0172 1E60     		str	r6, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 821              		.loc 1 3636 1 view .LVU255
 822 0174 A6E7     		b	.L45
 823              	.LVL61:
 824              	.L47:
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 825              		.loc 1 3636 1 view .LVU256
 826              	.LBE127:
ARM GAS  /tmp/ccpsiOt9.s 			page 115


 827              	.LBE126:
 828              	.LBE129:
 829              	.LBE133:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 830              		.loc 1 815 12 view .LVU257
 831 0176 4FF0FF30 		mov	r0, #-1
 832              	.LVL62:
 833              	.L35:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 834              		.loc 1 819 2 view .LVU258
 835 017a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 836              	.LVL63:
 837              	.L48:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 838              		.loc 1 811 12 view .LVU259
 839 017e 0120     		movs	r0, #1
 840 0180 FBE7     		b	.L35
 841              	.L49:
 842 0182 0120     		movs	r0, #1
 843              	.LVL64:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 844              		.loc 1 818 3 is_stmt 1 view .LVU260
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 845              		.loc 1 818 10 is_stmt 0 view .LVU261
 846 0184 F9E7     		b	.L35
 847              	.L57:
 848 0186 00BF     		.align	2
 849              	.L56:
 850 0188 00000000 		.word	.LANCHOR6
 851 018c 00000000 		.word	.LANCHOR9
 852 0190 00000000 		.word	.LANCHOR14
 853 0194 00000000 		.word	.LANCHOR15
 854 0198 00000000 		.word	.LANCHOR10
 855 019c 00000000 		.word	.LANCHOR7
 856 01a0 00000000 		.word	.LANCHOR12
 857 01a4 00000000 		.word	.LANCHOR13
 858 01a8 00000000 		.word	.LANCHOR1
 859 01ac 00000000 		.word	.LANCHOR5
 860 01b0 00000000 		.word	.LANCHOR0
 861 01b4 00000000 		.word	.LANCHOR2
 862 01b8 00000000 		.word	.LANCHOR11
 863              		.cfi_endproc
 864              	.LFE5:
 866              		.section	.text.vTaskDelete,"ax",%progbits
 867              		.align	1
 868              		.global	vTaskDelete
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	vTaskDelete:
 875              	.LVL65:
 876              	.LFB8:
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 877              		.loc 1 1163 2 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccpsiOt9.s 			page 116


 880              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 881              		.loc 1 1163 2 is_stmt 0 view .LVU263
 882 0000 38B5     		push	{r3, r4, r5, lr}
 883              	.LCFI3:
 884              		.cfi_def_cfa_offset 16
 885              		.cfi_offset 3, -16
 886              		.cfi_offset 4, -12
 887              		.cfi_offset 5, -8
 888              		.cfi_offset 14, -4
 889 0002 0446     		mov	r4, r0
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 890              		.loc 1 1164 2 is_stmt 1 view .LVU264
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 891              		.loc 1 1166 3 view .LVU265
 892 0004 FFF7FEFF 		bl	vPortEnterCritical
 893              	.LVL66:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 894              		.loc 1 1170 4 view .LVU266
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 895              		.loc 1 1170 12 is_stmt 0 view .LVU267
 896 0008 002C     		cmp	r4, #0
 897 000a 37D0     		beq	.L68
 898              	.LVL67:
 899              	.L59:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 900              		.loc 1 1173 4 is_stmt 1 discriminator 4 view .LVU268
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 901              		.loc 1 1173 8 is_stmt 0 discriminator 4 view .LVU269
 902 000c 251D     		adds	r5, r4, #4
 903 000e 2846     		mov	r0, r5
 904 0010 FFF7FEFF 		bl	uxListRemove
 905              	.LVL68:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 906              		.loc 1 1173 6 discriminator 4 view .LVU270
 907 0014 70B9     		cbnz	r0, .L60
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 908              		.loc 1 1175 5 is_stmt 1 view .LVU271
 909 0016 E26A     		ldr	r2, [r4, #44]
 910 0018 02EB8203 		add	r3, r2, r2, lsl #2
 911 001c 9B00     		lsls	r3, r3, #2
 912 001e 2949     		ldr	r1, .L71
 913 0020 CB58     		ldr	r3, [r1, r3]
 914 0022 3BB9     		cbnz	r3, .L60
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 915              		.loc 1 1175 5 discriminator 1 view .LVU272
 916 0024 2848     		ldr	r0, .L71+4
 917 0026 0368     		ldr	r3, [r0]
 918 0028 0121     		movs	r1, #1
 919 002a 01FA02F2 		lsl	r2, r1, r2
 920 002e 23EA0202 		bic	r2, r3, r2
 921 0032 0260     		str	r2, [r0]
 922              	.L60:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 923              		.loc 1 1179 29 view .LVU273
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 924              		.loc 1 1183 4 view .LVU274
ARM GAS  /tmp/ccpsiOt9.s 			page 117


1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 925              		.loc 1 1183 6 is_stmt 0 view .LVU275
 926 0034 A36A     		ldr	r3, [r4, #40]
 927 0036 1BB1     		cbz	r3, .L61
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 928              		.loc 1 1185 5 is_stmt 1 view .LVU276
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 929              		.loc 1 1185 14 is_stmt 0 view .LVU277
 930 0038 04F11800 		add	r0, r4, #24
 931 003c FFF7FEFF 		bl	uxListRemove
 932              	.LVL69:
 933              	.L61:
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 934              		.loc 1 1189 29 is_stmt 1 view .LVU278
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 935              		.loc 1 1196 4 view .LVU279
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936              		.loc 1 1196 16 is_stmt 0 view .LVU280
 937 0040 224A     		ldr	r2, .L71+8
 938 0042 1368     		ldr	r3, [r2]
 939 0044 0133     		adds	r3, r3, #1
 940 0046 1360     		str	r3, [r2]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 941              		.loc 1 1198 4 is_stmt 1 view .LVU281
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 942              		.loc 1 1198 14 is_stmt 0 view .LVU282
 943 0048 214B     		ldr	r3, .L71+12
 944 004a 1B68     		ldr	r3, [r3]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 945              		.loc 1 1198 6 view .LVU283
 946 004c A342     		cmp	r3, r4
 947 004e 18D0     		beq	.L69
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 948              		.loc 1 1225 5 is_stmt 1 view .LVU284
 949 0050 204A     		ldr	r2, .L71+16
 950 0052 1368     		ldr	r3, [r2]
 951 0054 013B     		subs	r3, r3, #1
 952 0056 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 953              		.loc 1 1226 30 view .LVU285
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954              		.loc 1 1227 5 view .LVU286
 955              	.LVL70:
 956              	.LBB138:
 957              	.LBI138:
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 958              		.loc 1 3887 14 view .LVU287
 959              	.LBB139:
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 960              		.loc 1 3892 3 view .LVU288
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 961              		.loc 1 3908 4 view .LVU289
 962 0058 206B     		ldr	r0, [r4, #48]
 963 005a FFF7FEFF 		bl	vPortFree
 964              	.LVL71:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 965              		.loc 1 3909 4 view .LVU290
ARM GAS  /tmp/ccpsiOt9.s 			page 118


 966 005e 2046     		mov	r0, r4
 967 0060 FFF7FEFF 		bl	vPortFree
 968              	.LVL72:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 969              		.loc 1 3909 4 is_stmt 0 view .LVU291
 970              	.LBE139:
 971              	.LBE138:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 972              		.loc 1 1231 5 is_stmt 1 view .LVU292
 973 0064 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 974              	.LVL73:
 975              	.L63:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 976              		.loc 1 1234 3 view .LVU293
 977 0068 FFF7FEFF 		bl	vPortExitCritical
 978              	.LVL74:
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 979              		.loc 1 1238 3 view .LVU294
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 980              		.loc 1 1238 25 is_stmt 0 view .LVU295
 981 006c 1A4B     		ldr	r3, .L71+20
 982 006e 1B68     		ldr	r3, [r3]
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 983              		.loc 1 1238 5 view .LVU296
 984 0070 1BB1     		cbz	r3, .L58
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 985              		.loc 1 1240 4 is_stmt 1 view .LVU297
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 986              		.loc 1 1240 14 is_stmt 0 view .LVU298
 987 0072 174B     		ldr	r3, .L71+12
 988 0074 1B68     		ldr	r3, [r3]
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 989              		.loc 1 1240 6 view .LVU299
 990 0076 A342     		cmp	r3, r4
 991 0078 0CD0     		beq	.L70
 992              	.L58:
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 993              		.loc 1 1250 2 view .LVU300
 994 007a 38BD     		pop	{r3, r4, r5, pc}
 995              	.LVL75:
 996              	.L68:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997              		.loc 1 1170 12 discriminator 1 view .LVU301
 998 007c 144B     		ldr	r3, .L71+12
 999 007e 1C68     		ldr	r4, [r3]
 1000              	.LVL76:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1001              		.loc 1 1170 12 discriminator 1 view .LVU302
 1002 0080 C4E7     		b	.L59
 1003              	.LVL77:
 1004              	.L69:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1005              		.loc 1 1205 5 is_stmt 1 view .LVU303
 1006 0082 2946     		mov	r1, r5
 1007 0084 1548     		ldr	r0, .L71+24
 1008 0086 FFF7FEFF 		bl	vListInsertEnd
 1009              	.LVL78:
ARM GAS  /tmp/ccpsiOt9.s 			page 119


1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1010              		.loc 1 1210 5 view .LVU304
 1011 008a 154A     		ldr	r2, .L71+28
 1012 008c 1368     		ldr	r3, [r2]
 1013 008e 0133     		adds	r3, r3, #1
 1014 0090 1360     		str	r3, [r2]
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1015              		.loc 1 1214 30 view .LVU305
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1016              		.loc 1 1221 54 view .LVU306
 1017 0092 E9E7     		b	.L63
 1018              	.L70:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1019              		.loc 1 1242 5 view .LVU307
 1020 0094 134B     		ldr	r3, .L71+32
 1021 0096 1B68     		ldr	r3, [r3]
 1022 0098 43B1     		cbz	r3, .L65
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1023              		.loc 1 1242 5 view .LVU308
 1024              	.LBB140:
 1025              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1026              		.loc 2 191 30 view .LVU309
 1027              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1028              		.loc 2 193 1 view .LVU310
 1029              		.loc 2 195 2 view .LVU311
 1030              		.syntax unified
 1031              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1032 009a 4FF05003 			mov r3, #80												
 1033 009e 83F31188 		msr basepri, r3											
 1034 00a2 BFF36F8F 		isb														
 1035 00a6 BFF34F8F 		dsb														
 1036              	
 1037              	@ 0 "" 2
 1038              	.LVL79:
 1039              		.thumb
 1040              		.syntax unified
 1041              	.L66:
 1042              		.loc 2 195 2 is_stmt 0 view .LVU312
 1043              	.LBE141:
 1044              	.LBE140:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1045              		.loc 1 1242 5 is_stmt 1 discriminator 1 view .LVU313
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1046              		.loc 1 1242 5 discriminator 1 view .LVU314
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1047              		.loc 1 1242 5 discriminator 1 view .LVU315
 1048 00aa FEE7     		b	.L66
 1049              	.L65:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1050              		.loc 1 1242 46 discriminator 2 view .LVU316
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1051              		.loc 1 1243 5 discriminator 2 view .LVU317
 1052 00ac 4FF0E023 		mov	r3, #-536813568
 1053 00b0 4FF08052 		mov	r2, #268435456
 1054 00b4 C3F8042D 		str	r2, [r3, #3332]
ARM GAS  /tmp/ccpsiOt9.s 			page 120


1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1055              		.loc 1 1243 5 discriminator 2 view .LVU318
 1056              		.syntax unified
 1057              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1058 00b8 BFF34F8F 		dsb
 1059              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1060              		.loc 1 1243 5 discriminator 2 view .LVU319
 1061              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1062 00bc BFF36F8F 		isb
 1063              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1064              		.loc 1 1243 27 discriminator 2 view .LVU320
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1065              		.loc 1 1247 29 discriminator 2 view .LVU321
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1066              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU322
 1067              		.thumb
 1068              		.syntax unified
 1069 00c0 DBE7     		b	.L58
 1070              	.L72:
 1071 00c2 00BF     		.align	2
 1072              	.L71:
 1073 00c4 00000000 		.word	.LANCHOR7
 1074 00c8 00000000 		.word	.LANCHOR10
 1075 00cc 00000000 		.word	.LANCHOR15
 1076 00d0 00000000 		.word	.LANCHOR9
 1077 00d4 00000000 		.word	.LANCHOR6
 1078 00d8 00000000 		.word	.LANCHOR14
 1079 00dc 00000000 		.word	.LANCHOR5
 1080 00e0 00000000 		.word	.LANCHOR4
 1081 00e4 00000000 		.word	.LANCHOR16
 1082              		.cfi_endproc
 1083              	.LFE8:
 1085              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1086              		.align	1
 1087              		.global	uxTaskPriorityGet
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv4-sp-d16
 1093              	uxTaskPriorityGet:
 1094              	.LVL80:
 1095              	.LFB10:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1096              		.loc 1 1479 2 is_stmt 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1100              		.loc 1 1479 2 is_stmt 0 view .LVU324
 1101 0000 10B5     		push	{r4, lr}
 1102              	.LCFI4:
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 4, -8
 1105              		.cfi_offset 14, -4
 1106 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccpsiOt9.s 			page 121


1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1107              		.loc 1 1480 2 is_stmt 1 view .LVU325
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1108              		.loc 1 1481 2 view .LVU326
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1109              		.loc 1 1483 3 view .LVU327
 1110 0004 FFF7FEFF 		bl	vPortEnterCritical
 1111              	.LVL81:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1112              		.loc 1 1487 4 view .LVU328
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1113              		.loc 1 1487 12 is_stmt 0 view .LVU329
 1114 0008 24B1     		cbz	r4, .L76
 1115              	.LVL82:
 1116              	.L74:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1117              		.loc 1 1488 4 is_stmt 1 discriminator 4 view .LVU330
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1118              		.loc 1 1488 13 is_stmt 0 discriminator 4 view .LVU331
 1119 000a E46A     		ldr	r4, [r4, #44]
 1120              	.LVL83:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1121              		.loc 1 1490 3 is_stmt 1 discriminator 4 view .LVU332
 1122 000c FFF7FEFF 		bl	vPortExitCritical
 1123              	.LVL84:
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1124              		.loc 1 1492 3 discriminator 4 view .LVU333
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1125              		.loc 1 1493 2 is_stmt 0 discriminator 4 view .LVU334
 1126 0010 2046     		mov	r0, r4
 1127 0012 10BD     		pop	{r4, pc}
 1128              	.LVL85:
 1129              	.L76:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1130              		.loc 1 1487 12 discriminator 1 view .LVU335
 1131 0014 014B     		ldr	r3, .L77
 1132 0016 1C68     		ldr	r4, [r3]
 1133              	.LVL86:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1134              		.loc 1 1487 12 discriminator 1 view .LVU336
 1135 0018 F7E7     		b	.L74
 1136              	.L78:
 1137 001a 00BF     		.align	2
 1138              	.L77:
 1139 001c 00000000 		.word	.LANCHOR9
 1140              		.cfi_endproc
 1141              	.LFE10:
 1143              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1144              		.align	1
 1145              		.global	uxTaskPriorityGetFromISR
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1149              		.fpu fpv4-sp-d16
 1151              	uxTaskPriorityGetFromISR:
 1152              	.LVL87:
 1153              	.LFB11:
ARM GAS  /tmp/ccpsiOt9.s 			page 122


1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1154              		.loc 1 1501 2 is_stmt 1 view -0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1158              		.loc 1 1501 2 is_stmt 0 view .LVU338
 1159 0000 10B5     		push	{r4, lr}
 1160              	.LCFI5:
 1161              		.cfi_def_cfa_offset 8
 1162              		.cfi_offset 4, -8
 1163              		.cfi_offset 14, -4
 1164 0002 0446     		mov	r4, r0
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1165              		.loc 1 1502 2 is_stmt 1 view .LVU339
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1166              		.loc 1 1503 2 view .LVU340
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1167              		.loc 1 1521 3 view .LVU341
 1168 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1169              	.LVL88:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1170              		.loc 1 1523 3 view .LVU342
 1171              	.LBB142:
 1172              	.LBI142:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1173              		.loc 2 207 34 view .LVU343
 1174              	.LBB143:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1175              		.loc 2 209 1 view .LVU344
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1176              		.loc 2 211 2 view .LVU345
 1177              		.syntax unified
 1178              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1179 0008 EFF31183 			mrs r3, basepri											
 1180 000c 4FF05002 		mov r2, #80												
 1181 0010 82F31188 		msr basepri, r2											
 1182 0014 BFF36F8F 		isb														
 1183 0018 BFF34F8F 		dsb														
 1184              	
 1185              	@ 0 "" 2
 1186              	.LVL89:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
ARM GAS  /tmp/ccpsiOt9.s 			page 123


 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1187              		.loc 2 223 2 view .LVU346
 1188              		.loc 2 223 2 is_stmt 0 view .LVU347
 1189              		.thumb
 1190              		.syntax unified
 1191              	.LBE143:
 1192              	.LBE142:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1193              		.loc 1 1527 4 is_stmt 1 view .LVU348
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1194              		.loc 1 1527 12 is_stmt 0 view .LVU349
 1195 001c 1CB1     		cbz	r4, .L82
 1196              	.LVL90:
 1197              	.L80:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1198              		.loc 1 1528 4 is_stmt 1 discriminator 4 view .LVU350
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1199              		.loc 1 1528 13 is_stmt 0 discriminator 4 view .LVU351
 1200 001e E06A     		ldr	r0, [r4, #44]
 1201              	.LVL91:
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1202              		.loc 1 1530 3 is_stmt 1 discriminator 4 view .LVU352
 1203              	.LBB144:
 1204              	.LBI144:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1205              		.loc 2 227 30 discriminator 4 view .LVU353
 1206              	.LBB145:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1207              		.loc 2 229 2 discriminator 4 view .LVU354
 1208              		.syntax unified
 1209              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1210 0020 83F31188 			msr basepri, r3	
 1211              	@ 0 "" 2
 1212              	.LVL92:
 1213              		.loc 2 229 2 is_stmt 0 discriminator 4 view .LVU355
 1214              		.thumb
 1215              		.syntax unified
 1216              	.LBE145:
 1217              	.LBE144:
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1218              		.loc 1 1532 3 is_stmt 1 discriminator 4 view .LVU356
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1219              		.loc 1 1533 2 is_stmt 0 discriminator 4 view .LVU357
 1220 0024 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccpsiOt9.s 			page 124


 1221              	.LVL93:
 1222              	.L82:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1223              		.loc 1 1527 12 discriminator 1 view .LVU358
 1224 0026 014A     		ldr	r2, .L83
 1225 0028 1468     		ldr	r4, [r2]
 1226              	.LVL94:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1227              		.loc 1 1527 12 discriminator 1 view .LVU359
 1228 002a F8E7     		b	.L80
 1229              	.L84:
 1230              		.align	2
 1231              	.L83:
 1232 002c 00000000 		.word	.LANCHOR9
 1233              		.cfi_endproc
 1234              	.LFE11:
 1236              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1237              		.align	1
 1238              		.global	vTaskPrioritySet
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu fpv4-sp-d16
 1244              	vTaskPrioritySet:
 1245              	.LVL95:
 1246              	.LFB12:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1247              		.loc 1 1541 2 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1251              		.loc 1 1541 2 is_stmt 0 view .LVU361
 1252 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1253              	.LCFI6:
 1254              		.cfi_def_cfa_offset 24
 1255              		.cfi_offset 3, -24
 1256              		.cfi_offset 4, -20
 1257              		.cfi_offset 5, -16
 1258              		.cfi_offset 6, -12
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1261              		.loc 1 1542 2 is_stmt 1 view .LVU362
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1262              		.loc 1 1543 2 view .LVU363
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1263              		.loc 1 1544 2 view .LVU364
 1264              	.LVL96:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1265              		.loc 1 1546 3 view .LVU365
 1266 0002 0629     		cmp	r1, #6
 1267 0004 08D9     		bls	.L86
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1268              		.loc 1 1546 3 view .LVU366
 1269              	.LBB146:
 1270              	.LBI146:
ARM GAS  /tmp/ccpsiOt9.s 			page 125


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1271              		.loc 2 191 30 view .LVU367
 1272              	.LBB147:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1273              		.loc 2 193 1 view .LVU368
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1274              		.loc 2 195 2 view .LVU369
 1275              		.syntax unified
 1276              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1277 0006 4FF05003 			mov r3, #80												
 1278 000a 83F31188 		msr basepri, r3											
 1279 000e BFF36F8F 		isb														
 1280 0012 BFF34F8F 		dsb														
 1281              	
 1282              	@ 0 "" 2
 1283              	.LVL97:
 1284              		.thumb
 1285              		.syntax unified
 1286              	.L87:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1287              		.loc 2 195 2 is_stmt 0 view .LVU370
 1288              	.LBE147:
 1289              	.LBE146:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1546 3 is_stmt 1 discriminator 1 view .LVU371
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1291              		.loc 1 1546 3 discriminator 1 view .LVU372
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1292              		.loc 1 1546 3 discriminator 1 view .LVU373
 1293 0016 FEE7     		b	.L87
 1294              	.L86:
 1295 0018 0546     		mov	r5, r0
 1296 001a 0C46     		mov	r4, r1
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1297              		.loc 1 1546 59 view .LVU374
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1298              		.loc 1 1549 3 view .LVU375
 1299              	.LVL98:
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1300              		.loc 1 1555 28 view .LVU376
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1301              		.loc 1 1558 3 view .LVU377
 1302 001c FFF7FEFF 		bl	vPortEnterCritical
 1303              	.LVL99:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1304              		.loc 1 1562 4 view .LVU378
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1305              		.loc 1 1562 12 is_stmt 0 view .LVU379
 1306 0020 7DB1     		cbz	r5, .L98
 1307              	.LVL100:
 1308              	.L88:
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1309              		.loc 1 1564 50 is_stmt 1 discriminator 4 view .LVU380
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1310              		.loc 1 1568 5 discriminator 4 view .LVU381
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1311              		.loc 1 1568 27 is_stmt 0 discriminator 4 view .LVU382
ARM GAS  /tmp/ccpsiOt9.s 			page 126


 1312 0022 6B6C     		ldr	r3, [r5, #68]
 1313              	.LVL101:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1314              		.loc 1 1576 4 is_stmt 1 discriminator 4 view .LVU383
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1315              		.loc 1 1576 6 is_stmt 0 discriminator 4 view .LVU384
 1316 0024 9C42     		cmp	r4, r3
 1317 0026 33D0     		beq	.L89
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1318              		.loc 1 1580 5 is_stmt 1 view .LVU385
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1319              		.loc 1 1580 7 is_stmt 0 view .LVU386
 1320 0028 0ED9     		bls	.L90
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1321              		.loc 1 1582 6 is_stmt 1 view .LVU387
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1322              		.loc 1 1582 16 is_stmt 0 view .LVU388
 1323 002a 2A4A     		ldr	r2, .L100
 1324 002c 1268     		ldr	r2, [r2]
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1325              		.loc 1 1582 8 view .LVU389
 1326 002e AA42     		cmp	r2, r5
 1327 0030 31D0     		beq	.L96
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1328              		.loc 1 1587 7 is_stmt 1 view .LVU390
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1329              		.loc 1 1587 40 is_stmt 0 view .LVU391
 1330 0032 284A     		ldr	r2, .L100
 1331 0034 1268     		ldr	r2, [r2]
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1332              		.loc 1 1587 9 view .LVU392
 1333 0036 D76A     		ldr	r7, [r2, #44]
 1334 0038 A742     		cmp	r7, r4
 1335 003a 8CBF     		ite	hi
 1336 003c 0027     		movhi	r7, #0
 1337 003e 0127     		movls	r7, #1
 1338 0040 08E0     		b	.L91
 1339              	.LVL102:
 1340              	.L98:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1341              		.loc 1 1562 12 discriminator 1 view .LVU393
 1342 0042 244B     		ldr	r3, .L100
 1343 0044 1D68     		ldr	r5, [r3]
 1344              	.LVL103:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1345              		.loc 1 1562 12 discriminator 1 view .LVU394
 1346 0046 ECE7     		b	.L88
 1347              	.LVL104:
 1348              	.L90:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1349              		.loc 1 1603 10 is_stmt 1 view .LVU395
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1350              		.loc 1 1603 20 is_stmt 0 view .LVU396
 1351 0048 224A     		ldr	r2, .L100
 1352 004a 1768     		ldr	r7, [r2]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1353              		.loc 1 1603 12 view .LVU397
ARM GAS  /tmp/ccpsiOt9.s 			page 127


 1354 004c AF42     		cmp	r7, r5
 1355 004e 14BF     		ite	ne
 1356 0050 0027     		movne	r7, #0
 1357 0052 0127     		moveq	r7, #1
 1358              	.L91:
 1359              	.LVL105:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1360              		.loc 1 1615 5 is_stmt 1 view .LVU398
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1361              		.loc 1 1620 5 view .LVU399
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1362              		.loc 1 1620 27 is_stmt 0 view .LVU400
 1363 0054 EE6A     		ldr	r6, [r5, #44]
 1364              	.LVL106:
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1365              		.loc 1 1626 6 is_stmt 1 view .LVU401
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1366              		.loc 1 1626 8 is_stmt 0 view .LVU402
 1367 0056 B342     		cmp	r3, r6
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1368              		.loc 1 1628 7 is_stmt 1 view .LVU403
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1369              		.loc 1 1628 25 is_stmt 0 view .LVU404
 1370 0058 08BF     		it	eq
 1371 005a EC62     		streq	r4, [r5, #44]
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1372              		.loc 1 1632 31 is_stmt 1 view .LVU405
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1373              		.loc 1 1636 6 view .LVU406
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1374              		.loc 1 1636 28 is_stmt 0 view .LVU407
 1375 005c 6C64     		str	r4, [r5, #68]
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1376              		.loc 1 1646 5 is_stmt 1 view .LVU408
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1377              		.loc 1 1646 7 is_stmt 0 view .LVU409
 1378 005e AB69     		ldr	r3, [r5, #24]
 1379              	.LVL107:
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1380              		.loc 1 1646 7 view .LVU410
 1381 0060 002B     		cmp	r3, #0
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1382              		.loc 1 1648 6 is_stmt 1 view .LVU411
 1383 0062 A4BF     		itt	ge
 1384 0064 C4F10704 		rsbge	r4, r4, #7
 1385              	.LVL108:
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1386              		.loc 1 1648 6 is_stmt 0 view .LVU412
 1387 0068 AC61     		strge	r4, [r5, #24]
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1388              		.loc 1 1652 30 is_stmt 1 view .LVU413
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1389              		.loc 1 1659 5 view .LVU414
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1390              		.loc 1 1659 9 is_stmt 0 view .LVU415
 1391 006a 06EB8602 		add	r2, r6, r6, lsl #2
 1392 006e 1A4B     		ldr	r3, .L100+4
ARM GAS  /tmp/ccpsiOt9.s 			page 128


 1393 0070 03EB8203 		add	r3, r3, r2, lsl #2
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1394              		.loc 1 1659 7 view .LVU416
 1395 0074 6A69     		ldr	r2, [r5, #20]
 1396 0076 9A42     		cmp	r2, r3
 1397 0078 0FD0     		beq	.L99
 1398              	.LVL109:
 1399              	.L94:
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1400              		.loc 1 1679 30 is_stmt 1 view .LVU417
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1401              		.loc 1 1682 5 view .LVU418
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1402              		.loc 1 1682 7 is_stmt 0 view .LVU419
 1403 007a 4FB1     		cbz	r7, .L89
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1404              		.loc 1 1684 6 is_stmt 1 view .LVU420
 1405 007c 4FF0E023 		mov	r3, #-536813568
 1406 0080 4FF08052 		mov	r2, #268435456
 1407 0084 C3F8042D 		str	r2, [r3, #3332]
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1408              		.loc 1 1684 6 view .LVU421
 1409              		.syntax unified
 1410              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1411 0088 BFF34F8F 		dsb
 1412              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1413              		.loc 1 1684 6 view .LVU422
 1414              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1415 008c BFF36F8F 		isb
 1416              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1417              		.loc 1 1684 37 view .LVU423
 1418              	.LVL110:
 1419              		.thumb
 1420              		.syntax unified
 1421              	.L89:
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1422              		.loc 1 1688 30 view .LVU424
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1423              		.loc 1 1693 5 view .LVU425
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1424              		.loc 1 1696 3 view .LVU426
 1425 0090 FFF7FEFF 		bl	vPortExitCritical
 1426              	.LVL111:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1427              		.loc 1 1697 2 is_stmt 0 view .LVU427
 1428 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1429              	.LVL112:
 1430              	.L96:
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1431              		.loc 1 1544 13 view .LVU428
 1432 0096 0027     		movs	r7, #0
 1433 0098 DCE7     		b	.L91
 1434              	.LVL113:
 1435              	.L99:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccpsiOt9.s 			page 129


 1436              		.loc 1 1664 6 is_stmt 1 view .LVU429
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1437              		.loc 1 1664 10 is_stmt 0 view .LVU430
 1438 009a 2C1D     		adds	r4, r5, #4
 1439 009c 2046     		mov	r0, r4
 1440 009e FFF7FEFF 		bl	uxListRemove
 1441              	.LVL114:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1442              		.loc 1 1664 8 view .LVU431
 1443 00a2 38B9     		cbnz	r0, .L95
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1444              		.loc 1 1669 7 is_stmt 1 view .LVU432
 1445 00a4 0D49     		ldr	r1, .L100+8
 1446 00a6 0B68     		ldr	r3, [r1]
 1447 00a8 0122     		movs	r2, #1
 1448 00aa 02FA06F6 		lsl	r6, r2, r6
 1449              	.LVL115:
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1450              		.loc 1 1669 7 is_stmt 0 view .LVU433
 1451 00ae 23EA0603 		bic	r3, r3, r6
 1452 00b2 0B60     		str	r3, [r1]
 1453              	.L95:
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1454              		.loc 1 1673 31 is_stmt 1 view .LVU434
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1455              		.loc 1 1675 6 view .LVU435
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1456              		.loc 1 1675 6 view .LVU436
 1457 00b4 E86A     		ldr	r0, [r5, #44]
 1458 00b6 094A     		ldr	r2, .L100+8
 1459 00b8 1168     		ldr	r1, [r2]
 1460 00ba 0123     		movs	r3, #1
 1461 00bc 8340     		lsls	r3, r3, r0
 1462 00be 0B43     		orrs	r3, r3, r1
 1463 00c0 1360     		str	r3, [r2]
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1464              		.loc 1 1675 6 view .LVU437
 1465 00c2 00EB8000 		add	r0, r0, r0, lsl #2
 1466 00c6 2146     		mov	r1, r4
 1467 00c8 034B     		ldr	r3, .L100+4
 1468 00ca 03EB8000 		add	r0, r3, r0, lsl #2
 1469 00ce FFF7FEFF 		bl	vListInsertEnd
 1470              	.LVL116:
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1471              		.loc 1 1675 36 view .LVU438
 1472 00d2 D2E7     		b	.L94
 1473              	.L101:
 1474              		.align	2
 1475              	.L100:
 1476 00d4 00000000 		.word	.LANCHOR9
 1477 00d8 00000000 		.word	.LANCHOR7
 1478 00dc 00000000 		.word	.LANCHOR10
 1479              		.cfi_endproc
 1480              	.LFE12:
 1482              		.section	.text.vTaskResume,"ax",%progbits
 1483              		.align	1
 1484              		.global	vTaskResume
ARM GAS  /tmp/ccpsiOt9.s 			page 130


 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
 1488              		.fpu fpv4-sp-d16
 1490              	vTaskResume:
 1491              	.LVL117:
 1492              	.LFB15:
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1493              		.loc 1 1852 2 view -0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1497              		.loc 1 1852 2 is_stmt 0 view .LVU440
 1498 0000 38B5     		push	{r3, r4, r5, lr}
 1499              	.LCFI7:
 1500              		.cfi_def_cfa_offset 16
 1501              		.cfi_offset 3, -16
 1502              		.cfi_offset 4, -12
 1503              		.cfi_offset 5, -8
 1504              		.cfi_offset 14, -4
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1505              		.loc 1 1853 2 is_stmt 1 view .LVU441
 1506              	.LVL118:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1507              		.loc 1 1856 3 view .LVU442
 1508 0002 68B1     		cbz	r0, .L108
 1509 0004 0446     		mov	r4, r0
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1510              		.loc 1 1856 32 discriminator 2 view .LVU443
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1511              		.loc 1 1860 3 discriminator 2 view .LVU444
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1512              		.loc 1 1860 15 is_stmt 0 discriminator 2 view .LVU445
 1513 0006 1D4B     		ldr	r3, .L110
 1514 0008 1B68     		ldr	r3, [r3]
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1515              		.loc 1 1860 5 discriminator 2 view .LVU446
 1516 000a 8342     		cmp	r3, r0
 1517 000c 07D0     		beq	.L102
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1518              		.loc 1 1862 4 is_stmt 1 view .LVU447
 1519 000e FFF7FEFF 		bl	vPortEnterCritical
 1520              	.LVL119:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1521              		.loc 1 1864 5 view .LVU448
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1522              		.loc 1 1864 9 is_stmt 0 view .LVU449
 1523 0012 2046     		mov	r0, r4
 1524 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1525              	.LVL120:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1526              		.loc 1 1864 7 view .LVU450
 1527 0018 58B9     		cbnz	r0, .L109
 1528              	.L106:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1529              		.loc 1 1888 30 is_stmt 1 view .LVU451
ARM GAS  /tmp/ccpsiOt9.s 			page 131


1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1530              		.loc 1 1891 4 view .LVU452
 1531 001a FFF7FEFF 		bl	vPortExitCritical
 1532              	.LVL121:
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1533              		.loc 1 1895 28 view .LVU453
 1534              	.L102:
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1535              		.loc 1 1897 2 is_stmt 0 view .LVU454
 1536 001e 38BD     		pop	{r3, r4, r5, pc}
 1537              	.LVL122:
 1538              	.L108:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1539              		.loc 1 1856 3 is_stmt 1 view .LVU455
 1540              	.LBB148:
 1541              	.LBI148:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1542              		.loc 2 191 30 view .LVU456
 1543              	.LBB149:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1544              		.loc 2 193 1 view .LVU457
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1545              		.loc 2 195 2 view .LVU458
 1546              		.syntax unified
 1547              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1548 0020 4FF05003 			mov r3, #80												
 1549 0024 83F31188 		msr basepri, r3											
 1550 0028 BFF36F8F 		isb														
 1551 002c BFF34F8F 		dsb														
 1552              	
 1553              	@ 0 "" 2
 1554              	.LVL123:
 1555              		.thumb
 1556              		.syntax unified
 1557              	.L104:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1558              		.loc 2 195 2 is_stmt 0 view .LVU459
 1559              	.LBE149:
 1560              	.LBE148:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1561              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU460
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1562              		.loc 1 1856 3 discriminator 1 view .LVU461
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1563              		.loc 1 1856 3 discriminator 1 view .LVU462
 1564 0030 FEE7     		b	.L104
 1565              	.LVL124:
 1566              	.L109:
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1567              		.loc 1 1866 31 view .LVU463
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1568              		.loc 1 1870 6 view .LVU464
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1569              		.loc 1 1870 15 is_stmt 0 view .LVU465
 1570 0032 251D     		adds	r5, r4, #4
 1571 0034 2846     		mov	r0, r5
 1572 0036 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccpsiOt9.s 			page 132


 1573              	.LVL125:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1574              		.loc 1 1871 6 is_stmt 1 view .LVU466
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1575              		.loc 1 1871 6 view .LVU467
 1576 003a E06A     		ldr	r0, [r4, #44]
 1577 003c 104A     		ldr	r2, .L110+4
 1578 003e 1168     		ldr	r1, [r2]
 1579 0040 0123     		movs	r3, #1
 1580 0042 8340     		lsls	r3, r3, r0
 1581 0044 0B43     		orrs	r3, r3, r1
 1582 0046 1360     		str	r3, [r2]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1583              		.loc 1 1871 6 view .LVU468
 1584 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1585 004c 2946     		mov	r1, r5
 1586 004e 0D4B     		ldr	r3, .L110+8
 1587 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1588 0054 FFF7FEFF 		bl	vListInsertEnd
 1589              	.LVL126:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1590              		.loc 1 1871 36 view .LVU469
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1591              		.loc 1 1874 6 view .LVU470
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1592              		.loc 1 1874 43 is_stmt 0 view .LVU471
 1593 0058 084B     		ldr	r3, .L110
 1594 005a 1B68     		ldr	r3, [r3]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1595              		.loc 1 1874 8 view .LVU472
 1596 005c E26A     		ldr	r2, [r4, #44]
 1597 005e DB6A     		ldr	r3, [r3, #44]
 1598 0060 9A42     		cmp	r2, r3
 1599 0062 DAD3     		bcc	.L106
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1600              		.loc 1 1879 7 is_stmt 1 view .LVU473
 1601 0064 4FF0E023 		mov	r3, #-536813568
 1602 0068 4FF08052 		mov	r2, #268435456
 1603 006c C3F8042D 		str	r2, [r3, #3332]
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1604              		.loc 1 1879 7 view .LVU474
 1605              		.syntax unified
 1606              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1607 0070 BFF34F8F 		dsb
 1608              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1609              		.loc 1 1879 7 view .LVU475
 1610              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1611 0074 BFF36F8F 		isb
 1612              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1613              		.loc 1 1879 38 view .LVU476
 1614              		.thumb
 1615              		.syntax unified
 1616 0078 CFE7     		b	.L106
 1617              	.L111:
 1618 007a 00BF     		.align	2
ARM GAS  /tmp/ccpsiOt9.s 			page 133


 1619              	.L110:
 1620 007c 00000000 		.word	.LANCHOR9
 1621 0080 00000000 		.word	.LANCHOR10
 1622 0084 00000000 		.word	.LANCHOR7
 1623              		.cfi_endproc
 1624              	.LFE15:
 1626              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1627              		.align	1
 1628              		.global	xTaskResumeFromISR
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu fpv4-sp-d16
 1634              	xTaskResumeFromISR:
 1635              	.LVL127:
 1636              	.LFB16:
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1637              		.loc 1 1906 2 view -0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1641              		.loc 1 1906 2 is_stmt 0 view .LVU478
 1642 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1643              	.LCFI8:
 1644              		.cfi_def_cfa_offset 24
 1645              		.cfi_offset 3, -24
 1646              		.cfi_offset 4, -20
 1647              		.cfi_offset 5, -16
 1648              		.cfi_offset 6, -12
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1651              		.loc 1 1907 2 is_stmt 1 view .LVU479
 1652              	.LVL128:
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1653              		.loc 1 1908 2 view .LVU480
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1654              		.loc 1 1909 2 view .LVU481
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1655              		.loc 1 1911 3 view .LVU482
 1656 0002 0028     		cmp	r0, #0
 1657 0004 33D0     		beq	.L118
 1658 0006 0446     		mov	r4, r0
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1659              		.loc 1 1911 32 discriminator 2 view .LVU483
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1660              		.loc 1 1929 3 discriminator 2 view .LVU484
 1661 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1662              	.LVL129:
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1663              		.loc 1 1931 3 discriminator 2 view .LVU485
 1664              	.LBB150:
 1665              	.LBI150:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1666              		.loc 2 207 34 discriminator 2 view .LVU486
 1667              	.LBB151:
ARM GAS  /tmp/ccpsiOt9.s 			page 134


 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1668              		.loc 2 209 1 discriminator 2 view .LVU487
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1669              		.loc 2 211 2 discriminator 2 view .LVU488
 1670              		.syntax unified
 1671              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1672 000c EFF31186 			mrs r6, basepri											
 1673 0010 4FF05003 		mov r3, #80												
 1674 0014 83F31188 		msr basepri, r3											
 1675 0018 BFF36F8F 		isb														
 1676 001c BFF34F8F 		dsb														
 1677              	
 1678              	@ 0 "" 2
 1679              	.LVL130:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1680              		.loc 2 223 2 discriminator 2 view .LVU489
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1681              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU490
 1682              		.thumb
 1683              		.syntax unified
 1684              	.LBE151:
 1685              	.LBE150:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1686              		.loc 1 1933 4 is_stmt 1 discriminator 2 view .LVU491
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1687              		.loc 1 1933 8 is_stmt 0 discriminator 2 view .LVU492
 1688 0020 2046     		mov	r0, r4
 1689 0022 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1690              	.LVL131:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1691              		.loc 1 1933 6 discriminator 2 view .LVU493
 1692 0026 0546     		mov	r5, r0
 1693 0028 E8B1     		cbz	r0, .L115
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1694              		.loc 1 1935 39 is_stmt 1 view .LVU494
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1695              		.loc 1 1938 5 view .LVU495
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1696              		.loc 1 1938 30 is_stmt 0 view .LVU496
 1697 002a 194B     		ldr	r3, .L119
 1698 002c 1B68     		ldr	r3, [r3]
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1699              		.loc 1 1938 7 view .LVU497
 1700 002e 3BBB     		cbnz	r3, .L116
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1701              		.loc 1 1942 6 is_stmt 1 view .LVU498
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1702              		.loc 1 1942 43 is_stmt 0 view .LVU499
 1703 0030 184B     		ldr	r3, .L119+4
 1704 0032 1B68     		ldr	r3, [r3]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1705              		.loc 1 1942 8 view .LVU500
 1706 0034 E56A     		ldr	r5, [r4, #44]
 1707 0036 DB6A     		ldr	r3, [r3, #44]
 1708 0038 9D42     		cmp	r5, r3
 1709 003a 34BF     		ite	cc
 1710 003c 0025     		movcc	r5, #0
ARM GAS  /tmp/ccpsiOt9.s 			page 135


 1711 003e 0125     		movcs	r5, #1
 1712              	.LVL132:
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1713              		.loc 1 1948 31 is_stmt 1 view .LVU501
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1714              		.loc 1 1951 6 view .LVU502
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1715              		.loc 1 1951 15 is_stmt 0 view .LVU503
 1716 0040 271D     		adds	r7, r4, #4
 1717 0042 3846     		mov	r0, r7
 1718 0044 FFF7FEFF 		bl	uxListRemove
 1719              	.LVL133:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1720              		.loc 1 1952 6 is_stmt 1 view .LVU504
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1721              		.loc 1 1952 6 view .LVU505
 1722 0048 E06A     		ldr	r0, [r4, #44]
 1723 004a 134A     		ldr	r2, .L119+8
 1724 004c 1168     		ldr	r1, [r2]
 1725 004e 0123     		movs	r3, #1
 1726 0050 8340     		lsls	r3, r3, r0
 1727 0052 0B43     		orrs	r3, r3, r1
 1728 0054 1360     		str	r3, [r2]
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1729              		.loc 1 1952 6 view .LVU506
 1730 0056 00EB8000 		add	r0, r0, r0, lsl #2
 1731 005a 3946     		mov	r1, r7
 1732 005c 0F4B     		ldr	r3, .L119+12
 1733 005e 03EB8000 		add	r0, r3, r0, lsl #2
 1734 0062 FFF7FEFF 		bl	vListInsertEnd
 1735              	.LVL134:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1736              		.loc 1 1952 36 view .LVU507
 1737              	.L115:
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1738              		.loc 1 1964 29 view .LVU508
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1739              		.loc 1 1967 3 view .LVU509
 1740              	.LBB152:
 1741              	.LBI152:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1742              		.loc 2 227 30 view .LVU510
 1743              	.LBB153:
 1744              		.loc 2 229 2 view .LVU511
 1745              		.syntax unified
 1746              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1747 0066 86F31188 			msr basepri, r6	
 1748              	@ 0 "" 2
 1749              	.LVL135:
 1750              		.loc 2 229 2 is_stmt 0 view .LVU512
 1751              		.thumb
 1752              		.syntax unified
 1753              	.LBE153:
 1754              	.LBE152:
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1755              		.loc 1 1969 3 is_stmt 1 view .LVU513
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 136


 1756              		.loc 1 1970 2 is_stmt 0 view .LVU514
 1757 006a 2846     		mov	r0, r5
 1758 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1759              	.LVL136:
 1760              	.L118:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1761              		.loc 1 1911 3 is_stmt 1 view .LVU515
 1762              	.LBB154:
 1763              	.LBI154:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1764              		.loc 2 191 30 view .LVU516
 1765              	.LBB155:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1766              		.loc 2 193 1 view .LVU517
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1767              		.loc 2 195 2 view .LVU518
 1768              		.syntax unified
 1769              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1770 006e 4FF05003 			mov r3, #80												
 1771 0072 83F31188 		msr basepri, r3											
 1772 0076 BFF36F8F 		isb														
 1773 007a BFF34F8F 		dsb														
 1774              	
 1775              	@ 0 "" 2
 1776              	.LVL137:
 1777              		.thumb
 1778              		.syntax unified
 1779              	.L114:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1780              		.loc 2 195 2 is_stmt 0 view .LVU519
 1781              	.LBE155:
 1782              	.LBE154:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1783              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU520
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1784              		.loc 1 1911 3 discriminator 1 view .LVU521
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1785              		.loc 1 1911 3 discriminator 1 view .LVU522
 1786 007e FEE7     		b	.L114
 1787              	.LVL138:
 1788              	.L116:
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1789              		.loc 1 1959 6 view .LVU523
 1790 0080 04F11801 		add	r1, r4, #24
 1791 0084 0648     		ldr	r0, .L119+16
 1792 0086 FFF7FEFF 		bl	vListInsertEnd
 1793              	.LVL139:
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1794              		.loc 1 1907 13 is_stmt 0 view .LVU524
 1795 008a 0025     		movs	r5, #0
 1796 008c EBE7     		b	.L115
 1797              	.L120:
 1798 008e 00BF     		.align	2
 1799              	.L119:
 1800 0090 00000000 		.word	.LANCHOR16
 1801 0094 00000000 		.word	.LANCHOR9
 1802 0098 00000000 		.word	.LANCHOR10
ARM GAS  /tmp/ccpsiOt9.s 			page 137


 1803 009c 00000000 		.word	.LANCHOR7
 1804 00a0 00000000 		.word	.LANCHOR1
 1805              		.cfi_endproc
 1806              	.LFE16:
 1808              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 1809              		.align	2
 1810              	.LC0:
 1811 0000 49444C45 		.ascii	"IDLE\000"
 1811      00
 1812              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1813              		.align	1
 1814              		.global	vTaskStartScheduler
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	vTaskStartScheduler:
 1821              	.LFB17:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 1822              		.loc 1 1976 1 is_stmt 1 view -0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826 0000 00B5     		push	{lr}
 1827              	.LCFI9:
 1828              		.cfi_def_cfa_offset 4
 1829              		.cfi_offset 14, -4
 1830 0002 83B0     		sub	sp, sp, #12
 1831              	.LCFI10:
 1832              		.cfi_def_cfa_offset 16
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1833              		.loc 1 1977 1 view .LVU526
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
 1834              		.loc 1 2009 3 view .LVU527
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
 1835              		.loc 1 2009 13 is_stmt 0 view .LVU528
 1836 0004 174B     		ldr	r3, .L128
 1837 0006 0193     		str	r3, [sp, #4]
 1838 0008 0023     		movs	r3, #0
 1839 000a 0093     		str	r3, [sp]
 1840 000c 4FF48072 		mov	r2, #256
 1841 0010 1549     		ldr	r1, .L128+4
 1842 0012 1648     		ldr	r0, .L128+8
 1843 0014 FFF7FEFF 		bl	xTaskCreate
 1844              	.LVL140:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1845              		.loc 1 2031 2 is_stmt 1 view .LVU529
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1846              		.loc 1 2031 4 is_stmt 0 view .LVU530
 1847 0018 0128     		cmp	r0, #1
 1848 001a 05D0     		beq	.L126
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1849              		.loc 1 2090 3 is_stmt 1 view .LVU531
 1850 001c B0F1FF3F 		cmp	r0, #-1
 1851 0020 17D0     		beq	.L127
 1852              	.LVL141:
 1853              	.L121:
ARM GAS  /tmp/ccpsiOt9.s 			page 138


2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1854              		.loc 1 2096 1 is_stmt 0 view .LVU532
 1855 0022 03B0     		add	sp, sp, #12
 1856              	.LCFI11:
 1857              		.cfi_remember_state
 1858              		.cfi_def_cfa_offset 4
 1859              		@ sp needed
 1860 0024 5DF804FB 		ldr	pc, [sp], #4
 1861              	.LVL142:
 1862              	.L126:
 1863              	.LCFI12:
 1864              		.cfi_restore_state
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1865              		.loc 1 2047 3 is_stmt 1 view .LVU533
 1866              	.LBB156:
 1867              	.LBI156:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1868              		.loc 2 191 30 view .LVU534
 1869              	.LBB157:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1870              		.loc 2 193 1 view .LVU535
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1871              		.loc 2 195 2 view .LVU536
 1872              		.syntax unified
 1873              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1874 0028 4FF05003 			mov r3, #80												
 1875 002c 83F31188 		msr basepri, r3											
 1876 0030 BFF36F8F 		isb														
 1877 0034 BFF34F8F 		dsb														
 1878              	
 1879              	@ 0 "" 2
 1880              		.thumb
 1881              		.syntax unified
 1882              	.LBE157:
 1883              	.LBE156:
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1884              		.loc 1 2059 3 view .LVU537
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1885              		.loc 1 2059 24 is_stmt 0 view .LVU538
 1886 0038 0D4B     		ldr	r3, .L128+12
 1887 003a 4FF0FF32 		mov	r2, #-1
 1888 003e 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 1889              		.loc 1 2060 3 is_stmt 1 view .LVU539
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 1890              		.loc 1 2060 21 is_stmt 0 view .LVU540
 1891 0040 0C4B     		ldr	r3, .L128+16
 1892 0042 0122     		movs	r2, #1
 1893 0044 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1894              		.loc 1 2061 3 is_stmt 1 view .LVU541
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1895              		.loc 1 2061 14 is_stmt 0 view .LVU542
 1896 0046 0C4B     		ldr	r3, .L128+20
 1897 0048 0022     		movs	r2, #0
 1898 004a 1A60     		str	r2, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 139


 1899              		.loc 1 2069 43 is_stmt 1 view .LVU543
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1900              		.loc 1 2071 26 view .LVU544
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1901              		.loc 1 2075 3 view .LVU545
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1902              		.loc 1 2075 7 is_stmt 0 view .LVU546
 1903 004c FFF7FEFF 		bl	xPortStartScheduler
 1904              	.LVL143:
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1905              		.loc 1 2075 7 view .LVU547
 1906 0050 E7E7     		b	.L121
 1907              	.LVL144:
 1908              	.L127:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1909              		.loc 1 2090 3 is_stmt 1 view .LVU548
 1910              	.LBB158:
 1911              	.LBI158:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1912              		.loc 2 191 30 view .LVU549
 1913              	.LBB159:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1914              		.loc 2 193 1 view .LVU550
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1915              		.loc 2 195 2 view .LVU551
 1916              		.syntax unified
 1917              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1918 0052 4FF05003 			mov r3, #80												
 1919 0056 83F31188 		msr basepri, r3											
 1920 005a BFF36F8F 		isb														
 1921 005e BFF34F8F 		dsb														
 1922              	
 1923              	@ 0 "" 2
 1924              	.LVL145:
 1925              		.thumb
 1926              		.syntax unified
 1927              	.L124:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1928              		.loc 2 195 2 is_stmt 0 view .LVU552
 1929              	.LBE159:
 1930              	.LBE158:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1931              		.loc 1 2090 3 is_stmt 1 discriminator 2 view .LVU553
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1932              		.loc 1 2090 3 discriminator 2 view .LVU554
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1933              		.loc 1 2090 3 discriminator 2 view .LVU555
 1934 0062 FEE7     		b	.L124
 1935              	.L129:
 1936              		.align	2
 1937              	.L128:
 1938 0064 00000000 		.word	.LANCHOR17
 1939 0068 00000000 		.word	.LC0
 1940 006c 00000000 		.word	prvIdleTask
 1941 0070 00000000 		.word	.LANCHOR3
 1942 0074 00000000 		.word	.LANCHOR14
 1943 0078 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccpsiOt9.s 			page 140


 1944              		.cfi_endproc
 1945              	.LFE17:
 1947              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1948              		.align	1
 1949              		.global	vTaskEndScheduler
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu fpv4-sp-d16
 1955              	vTaskEndScheduler:
 1956              	.LFB18:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1957              		.loc 1 2100 1 view -0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961 0000 08B5     		push	{r3, lr}
 1962              	.LCFI13:
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 3, -8
 1965              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1966              		.loc 1 2104 2 view .LVU557
 1967              	.LBB160:
 1968              	.LBI160:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1969              		.loc 2 191 30 view .LVU558
 1970              	.LBB161:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1971              		.loc 2 193 1 view .LVU559
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1972              		.loc 2 195 2 view .LVU560
 1973              		.syntax unified
 1974              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1975 0002 4FF05003 			mov r3, #80												
 1976 0006 83F31188 		msr basepri, r3											
 1977 000a BFF36F8F 		isb														
 1978 000e BFF34F8F 		dsb														
 1979              	
 1980              	@ 0 "" 2
 1981              		.thumb
 1982              		.syntax unified
 1983              	.LBE161:
 1984              	.LBE160:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1985              		.loc 1 2105 2 view .LVU561
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1986              		.loc 1 2105 20 is_stmt 0 view .LVU562
 1987 0012 034B     		ldr	r3, .L132
 1988 0014 0022     		movs	r2, #0
 1989 0016 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1990              		.loc 1 2106 2 is_stmt 1 view .LVU563
 1991 0018 FFF7FEFF 		bl	vPortEndScheduler
 1992              	.LVL146:
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1993              		.loc 1 2107 1 is_stmt 0 view .LVU564
ARM GAS  /tmp/ccpsiOt9.s 			page 141


 1994 001c 08BD     		pop	{r3, pc}
 1995              	.L133:
 1996 001e 00BF     		.align	2
 1997              	.L132:
 1998 0020 00000000 		.word	.LANCHOR14
 1999              		.cfi_endproc
 2000              	.LFE18:
 2002              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2003              		.align	1
 2004              		.global	vTaskSuspendAll
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	vTaskSuspendAll:
 2011              	.LFB19:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2012              		.loc 1 2111 1 is_stmt 1 view -0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2017              		.loc 1 2119 24 view .LVU566
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2018              		.loc 1 2123 2 view .LVU567
 2019 0000 024A     		ldr	r2, .L135
 2020 0002 1368     		ldr	r3, [r2]
 2021 0004 0133     		adds	r3, r3, #1
 2022 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2023              		.loc 1 2127 2 view .LVU568
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2024              		.loc 1 2128 1 is_stmt 0 view .LVU569
 2025 0008 7047     		bx	lr
 2026              	.L136:
 2027 000a 00BF     		.align	2
 2028              	.L135:
 2029 000c 00000000 		.word	.LANCHOR16
 2030              		.cfi_endproc
 2031              	.LFE19:
 2033              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2034              		.align	1
 2035              		.global	xTaskGetTickCount
 2036              		.syntax unified
 2037              		.thumb
 2038              		.thumb_func
 2039              		.fpu fpv4-sp-d16
 2041              	xTaskGetTickCount:
 2042              	.LFB21:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2043              		.loc 1 2305 1 is_stmt 1 view -0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 0
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 142


 2048              		.loc 1 2306 1 view .LVU571
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2049              		.loc 1 2309 32 view .LVU572
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2050              		.loc 1 2311 3 view .LVU573
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2051              		.loc 1 2311 10 is_stmt 0 view .LVU574
 2052 0000 014B     		ldr	r3, .L138
 2053 0002 1868     		ldr	r0, [r3]
 2054              	.LVL147:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2055              		.loc 1 2313 31 is_stmt 1 view .LVU575
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2056              		.loc 1 2315 2 view .LVU576
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2057              		.loc 1 2316 1 is_stmt 0 view .LVU577
 2058 0004 7047     		bx	lr
 2059              	.L139:
 2060 0006 00BF     		.align	2
 2061              	.L138:
 2062 0008 00000000 		.word	.LANCHOR8
 2063              		.cfi_endproc
 2064              	.LFE21:
 2066              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2067              		.align	1
 2068              		.global	xTaskGetTickCountFromISR
 2069              		.syntax unified
 2070              		.thumb
 2071              		.thumb_func
 2072              		.fpu fpv4-sp-d16
 2074              	xTaskGetTickCountFromISR:
 2075              	.LFB22:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2076              		.loc 1 2320 1 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080 0000 08B5     		push	{r3, lr}
 2081              	.LCFI14:
 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 3, -8
 2084              		.cfi_offset 14, -4
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2085              		.loc 1 2321 1 view .LVU579
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2086              		.loc 1 2322 1 view .LVU580
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2087              		.loc 1 2338 2 view .LVU581
 2088 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2089              	.LVL148:
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2090              		.loc 1 2340 2 view .LVU582
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2091              		.loc 1 2342 3 view .LVU583
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2092              		.loc 1 2342 11 is_stmt 0 view .LVU584
 2093 0006 014B     		ldr	r3, .L142
ARM GAS  /tmp/ccpsiOt9.s 			page 143


 2094 0008 1868     		ldr	r0, [r3]
 2095              	.LVL149:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2096              		.loc 1 2344 2 is_stmt 1 view .LVU585
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2097              		.loc 1 2346 2 view .LVU586
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2098              		.loc 1 2347 1 is_stmt 0 view .LVU587
 2099 000a 08BD     		pop	{r3, pc}
 2100              	.L143:
 2101              		.align	2
 2102              	.L142:
 2103 000c 00000000 		.word	.LANCHOR8
 2104              		.cfi_endproc
 2105              	.LFE22:
 2107              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2108              		.align	1
 2109              		.global	uxTaskGetNumberOfTasks
 2110              		.syntax unified
 2111              		.thumb
 2112              		.thumb_func
 2113              		.fpu fpv4-sp-d16
 2115              	uxTaskGetNumberOfTasks:
 2116              	.LFB23:
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2117              		.loc 1 2351 1 is_stmt 1 view -0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
 2121              		@ link register save eliminated.
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2122              		.loc 1 2354 2 view .LVU589
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2123              		.loc 1 2354 9 is_stmt 0 view .LVU590
 2124 0000 014B     		ldr	r3, .L145
 2125 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2126              		.loc 1 2355 1 view .LVU591
 2127 0004 7047     		bx	lr
 2128              	.L146:
 2129 0006 00BF     		.align	2
 2130              	.L145:
 2131 0008 00000000 		.word	.LANCHOR6
 2132              		.cfi_endproc
 2133              	.LFE23:
 2135              		.section	.text.pcTaskGetName,"ax",%progbits
 2136              		.align	1
 2137              		.global	pcTaskGetName
 2138              		.syntax unified
 2139              		.thumb
 2140              		.thumb_func
 2141              		.fpu fpv4-sp-d16
 2143              	pcTaskGetName:
 2144              	.LVL150:
 2145              	.LFB24:
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2146              		.loc 1 2359 1 is_stmt 1 view -0
ARM GAS  /tmp/ccpsiOt9.s 			page 144


 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2151              		.loc 1 2360 1 view .LVU593
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2152              		.loc 1 2364 2 view .LVU594
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2153              		.loc 1 2364 10 is_stmt 0 view .LVU595
 2154 0000 0346     		mov	r3, r0
 2155 0002 10B1     		cbz	r0, .L150
 2156              	.LVL151:
 2157              	.L148:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2158              		.loc 1 2365 23 is_stmt 1 discriminator 2 view .LVU596
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2159              		.loc 1 2366 2 discriminator 2 view .LVU597
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2160              		.loc 1 2367 1 is_stmt 0 discriminator 2 view .LVU598
 2161 0004 03F13400 		add	r0, r3, #52
 2162 0008 7047     		bx	lr
 2163              	.LVL152:
 2164              	.L150:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2165              		.loc 1 2364 10 discriminator 1 view .LVU599
 2166 000a 064B     		ldr	r3, .L151
 2167 000c 1B68     		ldr	r3, [r3]
 2168              	.LVL153:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2169              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU600
 2170 000e 002B     		cmp	r3, #0
 2171 0010 F8D1     		bne	.L148
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2172              		.loc 1 2365 2 view .LVU601
 2173              	.LBB162:
 2174              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2175              		.loc 2 191 30 view .LVU602
 2176              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2177              		.loc 2 193 1 view .LVU603
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2178              		.loc 2 195 2 view .LVU604
 2179              		.syntax unified
 2180              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2181 0012 4FF05003 			mov r3, #80												
 2182 0016 83F31188 		msr basepri, r3											
 2183 001a BFF36F8F 		isb														
 2184 001e BFF34F8F 		dsb														
 2185              	
 2186              	@ 0 "" 2
 2187              	.LVL154:
 2188              		.thumb
 2189              		.syntax unified
 2190              	.L149:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccpsiOt9.s 			page 145


 2191              		.loc 2 195 2 is_stmt 0 view .LVU605
 2192              	.LBE163:
 2193              	.LBE162:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2194              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU606
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2195              		.loc 1 2365 2 discriminator 1 view .LVU607
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2196              		.loc 1 2365 2 discriminator 1 view .LVU608
 2197 0022 FEE7     		b	.L149
 2198              	.L152:
 2199              		.align	2
 2200              	.L151:
 2201 0024 00000000 		.word	.LANCHOR9
 2202              		.cfi_endproc
 2203              	.LFE24:
 2205              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2206              		.align	1
 2207              		.global	xTaskIncrementTick
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2211              		.fpu fpv4-sp-d16
 2213              	xTaskIncrementTick:
 2214              	.LFB26:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2215              		.loc 1 2708 1 view -0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
 2219 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2220              	.LCFI15:
 2221              		.cfi_def_cfa_offset 32
 2222              		.cfi_offset 4, -32
 2223              		.cfi_offset 5, -28
 2224              		.cfi_offset 6, -24
 2225              		.cfi_offset 7, -20
 2226              		.cfi_offset 8, -16
 2227              		.cfi_offset 9, -12
 2228              		.cfi_offset 10, -8
 2229              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2230              		.loc 1 2709 1 view .LVU610
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2231              		.loc 1 2710 1 view .LVU611
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2232              		.loc 1 2711 1 view .LVU612
 2233              	.LVL155:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2234              		.loc 1 2716 40 view .LVU613
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2235              		.loc 1 2717 2 view .LVU614
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2236              		.loc 1 2717 27 is_stmt 0 view .LVU615
 2237 0004 414B     		ldr	r3, .L171
 2238 0006 1B68     		ldr	r3, [r3]
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccpsiOt9.s 			page 146


 2239              		.loc 1 2717 4 view .LVU616
 2240 0008 002B     		cmp	r3, #0
 2241 000a 76D1     		bne	.L154
 2242              	.LBB164:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2243              		.loc 1 2721 3 is_stmt 1 view .LVU617
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2244              		.loc 1 2721 49 is_stmt 0 view .LVU618
 2245 000c 404B     		ldr	r3, .L171+4
 2246 000e 1E68     		ldr	r6, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2247              		.loc 1 2721 20 view .LVU619
 2248 0010 0136     		adds	r6, r6, #1
 2249              	.LVL156:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2250              		.loc 1 2725 3 is_stmt 1 view .LVU620
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2251              		.loc 1 2725 14 is_stmt 0 view .LVU621
 2252 0012 1E60     		str	r6, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2253              		.loc 1 2727 3 is_stmt 1 view .LVU622
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2254              		.loc 1 2727 5 is_stmt 0 view .LVU623
 2255 0014 C6B9     		cbnz	r6, .L155
 2256              	.LBB165:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2257              		.loc 1 2729 4 is_stmt 1 view .LVU624
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2258              		.loc 1 2729 4 view .LVU625
 2259 0016 3F4B     		ldr	r3, .L171+8
 2260 0018 1B68     		ldr	r3, [r3]
 2261 001a 1B68     		ldr	r3, [r3]
 2262 001c 43B1     		cbz	r3, .L156
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2263              		.loc 1 2729 4 view .LVU626
 2264              	.LBB166:
 2265              	.LBI166:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2266              		.loc 2 191 30 view .LVU627
 2267              	.LBB167:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2268              		.loc 2 193 1 view .LVU628
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2269              		.loc 2 195 2 view .LVU629
 2270              		.syntax unified
 2271              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2272 001e 4FF05003 			mov r3, #80												
 2273 0022 83F31188 		msr basepri, r3											
 2274 0026 BFF36F8F 		isb														
 2275 002a BFF34F8F 		dsb														
 2276              	
 2277              	@ 0 "" 2
 2278              	.LVL157:
 2279              		.thumb
 2280              		.syntax unified
 2281              	.L157:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccpsiOt9.s 			page 147


 2282              		.loc 2 195 2 is_stmt 0 view .LVU630
 2283              	.LBE167:
 2284              	.LBE166:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2285              		.loc 1 2729 4 is_stmt 1 discriminator 1 view .LVU631
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2286              		.loc 1 2729 4 discriminator 1 view .LVU632
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2287              		.loc 1 2729 4 discriminator 1 view .LVU633
 2288 002e FEE7     		b	.L157
 2289              	.L156:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2290              		.loc 1 2729 4 discriminator 2 view .LVU634
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2291              		.loc 1 2729 4 discriminator 2 view .LVU635
 2292 0030 384A     		ldr	r2, .L171+8
 2293 0032 1168     		ldr	r1, [r2]
 2294              	.LVL158:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2295              		.loc 1 2729 4 discriminator 2 view .LVU636
 2296 0034 384B     		ldr	r3, .L171+12
 2297 0036 1868     		ldr	r0, [r3]
 2298 0038 1060     		str	r0, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2299              		.loc 1 2729 4 discriminator 2 view .LVU637
 2300 003a 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2301              		.loc 1 2729 4 discriminator 2 view .LVU638
 2302 003c 374A     		ldr	r2, .L171+16
 2303 003e 1368     		ldr	r3, [r2]
 2304 0040 0133     		adds	r3, r3, #1
 2305 0042 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2306              		.loc 1 2729 4 discriminator 2 view .LVU639
 2307 0044 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2308              	.LVL159:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2309              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU640
 2310              	.LBE165:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2311              		.loc 1 2729 30 is_stmt 1 discriminator 2 view .LVU641
 2312              	.L155:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2313              		.loc 1 2733 28 view .LVU642
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2314              		.loc 1 2740 3 view .LVU643
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2315              		.loc 1 2740 23 is_stmt 0 view .LVU644
 2316 0048 354B     		ldr	r3, .L171+20
 2317 004a 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2318              		.loc 1 2740 5 view .LVU645
 2319 004c B342     		cmp	r3, r6
 2320 004e 42D8     		bhi	.L166
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2321              		.loc 1 2742 4 is_stmt 1 view .LVU646
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccpsiOt9.s 			page 148


 2322              		.loc 1 2744 5 view .LVU647
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2323              		.loc 1 2744 9 is_stmt 0 view .LVU648
 2324 0050 304B     		ldr	r3, .L171+8
 2325 0052 1B68     		ldr	r3, [r3]
 2326 0054 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2327              		.loc 1 2744 7 view .LVU649
 2328 0056 3BB1     		cbz	r3, .L167
 2329              	.LBE164:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2330              		.loc 1 2711 12 view .LVU650
 2331 0058 0025     		movs	r5, #0
 2332              	.LBB168:
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2333              		.loc 1 2760 14 view .LVU651
 2334 005a DFF8B880 		ldr	r8, .L171+8
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2335              		.loc 1 2794 6 view .LVU652
 2336 005e DFF8D490 		ldr	r9, .L171+40
 2337 0062 DFF8C4A0 		ldr	r10, .L171+28
 2338 0066 23E0     		b	.L160
 2339              	.L167:
 2340              	.LBE168:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2341              		.loc 1 2711 12 view .LVU653
 2342 0068 0025     		movs	r5, #0
 2343              	.LVL160:
 2344              	.L159:
 2345              	.LBB169:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2346              		.loc 1 2751 6 is_stmt 1 view .LVU654
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2347              		.loc 1 2751 27 is_stmt 0 view .LVU655
 2348 006a 2D4B     		ldr	r3, .L171+20
 2349 006c 4FF0FF32 		mov	r2, #-1
 2350 0070 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2351              		.loc 1 2752 6 is_stmt 1 view .LVU656
 2352 0072 31E0     		b	.L158
 2353              	.LVL161:
 2354              	.L170:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2355              		.loc 1 2770 7 view .LVU657
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2356              		.loc 1 2770 28 is_stmt 0 view .LVU658
 2357 0074 2A4A     		ldr	r2, .L171+20
 2358 0076 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2359              		.loc 1 2771 7 is_stmt 1 view .LVU659
 2360 0078 2EE0     		b	.L158
 2361              	.LVL162:
 2362              	.L162:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2363              		.loc 1 2789 31 view .LVU660
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2364              		.loc 1 2794 6 view .LVU661
ARM GAS  /tmp/ccpsiOt9.s 			page 149


2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2365              		.loc 1 2794 6 view .LVU662
 2366 007a E06A     		ldr	r0, [r4, #44]
 2367 007c D9F80020 		ldr	r2, [r9]
 2368 0080 0123     		movs	r3, #1
 2369 0082 8340     		lsls	r3, r3, r0
 2370 0084 1343     		orrs	r3, r3, r2
 2371 0086 C9F80030 		str	r3, [r9]
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2372              		.loc 1 2794 6 view .LVU663
 2373 008a 00EB8000 		add	r0, r0, r0, lsl #2
 2374 008e 3946     		mov	r1, r7
 2375 0090 0AEB8000 		add	r0, r10, r0, lsl #2
 2376 0094 FFF7FEFF 		bl	vListInsertEnd
 2377              	.LVL163:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2378              		.loc 1 2794 36 view .LVU664
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2379              		.loc 1 2804 7 view .LVU665
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2380              		.loc 1 2804 44 is_stmt 0 view .LVU666
 2381 0098 224B     		ldr	r3, .L171+24
 2382 009a 1B68     		ldr	r3, [r3]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2383              		.loc 1 2804 9 view .LVU667
 2384 009c E26A     		ldr	r2, [r4, #44]
 2385 009e DB6A     		ldr	r3, [r3, #44]
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2386              		.loc 1 2806 24 view .LVU668
 2387 00a0 9A42     		cmp	r2, r3
 2388 00a2 28BF     		it	cs
 2389 00a4 0125     		movcs	r5, #1
 2390              	.LVL164:
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2391              		.loc 1 2742 4 is_stmt 1 view .LVU669
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2392              		.loc 1 2744 5 view .LVU670
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2393              		.loc 1 2744 9 is_stmt 0 view .LVU671
 2394 00a6 D8F80030 		ldr	r3, [r8]
 2395 00aa 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2396              		.loc 1 2744 7 view .LVU672
 2397 00ac 002B     		cmp	r3, #0
 2398 00ae DCD0     		beq	.L159
 2399              	.LVL165:
 2400              	.L160:
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2401              		.loc 1 2760 6 is_stmt 1 view .LVU673
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2402              		.loc 1 2760 14 is_stmt 0 view .LVU674
 2403 00b0 D8F80030 		ldr	r3, [r8]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2404              		.loc 1 2760 12 view .LVU675
 2405 00b4 DB68     		ldr	r3, [r3, #12]
 2406 00b6 DC68     		ldr	r4, [r3, #12]
 2407              	.LVL166:
ARM GAS  /tmp/ccpsiOt9.s 			page 150


2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2408              		.loc 1 2761 6 is_stmt 1 view .LVU676
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2409              		.loc 1 2761 17 is_stmt 0 view .LVU677
 2410 00b8 6368     		ldr	r3, [r4, #4]
 2411              	.LVL167:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2412              		.loc 1 2763 6 is_stmt 1 view .LVU678
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2413              		.loc 1 2763 8 is_stmt 0 view .LVU679
 2414 00ba 9E42     		cmp	r6, r3
 2415 00bc DAD3     		bcc	.L170
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2416              		.loc 1 2775 31 is_stmt 1 view .LVU680
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2417              		.loc 1 2779 6 view .LVU681
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2418              		.loc 1 2779 15 is_stmt 0 view .LVU682
 2419 00be 271D     		adds	r7, r4, #4
 2420 00c0 3846     		mov	r0, r7
 2421 00c2 FFF7FEFF 		bl	uxListRemove
 2422              	.LVL168:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2423              		.loc 1 2783 6 is_stmt 1 view .LVU683
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2424              		.loc 1 2783 8 is_stmt 0 view .LVU684
 2425 00c6 A36A     		ldr	r3, [r4, #40]
 2426 00c8 002B     		cmp	r3, #0
 2427 00ca D6D0     		beq	.L162
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2428              		.loc 1 2785 7 is_stmt 1 view .LVU685
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2429              		.loc 1 2785 16 is_stmt 0 view .LVU686
 2430 00cc 04F11800 		add	r0, r4, #24
 2431 00d0 FFF7FEFF 		bl	uxListRemove
 2432              	.LVL169:
 2433 00d4 D1E7     		b	.L162
 2434              	.LVL170:
 2435              	.L166:
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2436              		.loc 1 2785 16 view .LVU687
 2437              	.LBE169:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2438              		.loc 1 2711 12 view .LVU688
 2439 00d6 0025     		movs	r5, #0
 2440              	.LVL171:
 2441              	.L158:
 2442              	.LBB170:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2443              		.loc 1 2823 4 is_stmt 1 view .LVU689
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2444              		.loc 1 2823 8 is_stmt 0 view .LVU690
 2445 00d8 124B     		ldr	r3, .L171+24
 2446 00da 1B68     		ldr	r3, [r3]
 2447 00dc DB6A     		ldr	r3, [r3, #44]
 2448 00de 03EB8303 		add	r3, r3, r3, lsl #2
 2449 00e2 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccpsiOt9.s 			page 151


 2450 00e4 104A     		ldr	r2, .L171+28
 2451 00e6 D358     		ldr	r3, [r2, r3]
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2452              		.loc 1 2825 21 view .LVU691
 2453 00e8 022B     		cmp	r3, #2
 2454 00ea 28BF     		it	cs
 2455 00ec 0125     		movcs	r5, #1
 2456              	.LVL172:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2457              		.loc 1 2829 29 is_stmt 1 view .LVU692
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2458              		.loc 1 2851 4 view .LVU693
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2459              		.loc 1 2851 22 is_stmt 0 view .LVU694
 2460 00ee 0F4B     		ldr	r3, .L171+32
 2461 00f0 1B68     		ldr	r3, [r3]
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2462              		.loc 1 2853 21 view .LVU695
 2463 00f2 002B     		cmp	r3, #0
 2464 00f4 18BF     		it	ne
 2465 00f6 0125     		movne	r5, #1
 2466              	.LVL173:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2467              		.loc 1 2853 21 view .LVU696
 2468 00f8 04E0     		b	.L153
 2469              	.LVL174:
 2470              	.L154:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2471              		.loc 1 2853 21 view .LVU697
 2472              	.LBE170:
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2473              		.loc 1 2864 3 is_stmt 1 view .LVU698
 2474 00fa 0D4A     		ldr	r2, .L171+36
 2475 00fc 1368     		ldr	r3, [r2]
 2476 00fe 0133     		adds	r3, r3, #1
 2477 0100 1360     		str	r3, [r2]
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2478              		.loc 1 2711 12 is_stmt 0 view .LVU699
 2479 0102 0025     		movs	r5, #0
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2480              		.loc 1 2875 2 is_stmt 1 view .LVU700
 2481              	.LVL175:
 2482              	.L153:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2483              		.loc 1 2876 1 is_stmt 0 view .LVU701
 2484 0104 2846     		mov	r0, r5
 2485 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2486              	.L172:
 2487 010a 00BF     		.align	2
 2488              	.L171:
 2489 010c 00000000 		.word	.LANCHOR16
 2490 0110 00000000 		.word	.LANCHOR8
 2491 0114 00000000 		.word	.LANCHOR2
 2492 0118 00000000 		.word	.LANCHOR11
 2493 011c 00000000 		.word	.LANCHOR18
 2494 0120 00000000 		.word	.LANCHOR3
 2495 0124 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccpsiOt9.s 			page 152


 2496 0128 00000000 		.word	.LANCHOR7
 2497 012c 00000000 		.word	.LANCHOR19
 2498 0130 00000000 		.word	.LANCHOR20
 2499 0134 00000000 		.word	.LANCHOR10
 2500              		.cfi_endproc
 2501              	.LFE26:
 2503              		.section	.text.xTaskResumeAll,"ax",%progbits
 2504              		.align	1
 2505              		.global	xTaskResumeAll
 2506              		.syntax unified
 2507              		.thumb
 2508              		.thumb_func
 2509              		.fpu fpv4-sp-d16
 2511              	xTaskResumeAll:
 2512              	.LFB20:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2513              		.loc 1 2195 1 is_stmt 1 view -0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2517              		.loc 1 2196 1 view .LVU703
 2518              	.LVL176:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2519              		.loc 1 2197 1 view .LVU704
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2520              		.loc 1 2201 2 view .LVU705
 2521 0000 394B     		ldr	r3, .L194
 2522 0002 1B68     		ldr	r3, [r3]
 2523 0004 43B9     		cbnz	r3, .L174
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2524              		.loc 1 2201 2 view .LVU706
 2525              	.LBB171:
 2526              	.LBI171:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2527              		.loc 2 191 30 view .LVU707
 2528              	.LBB172:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2529              		.loc 2 193 1 view .LVU708
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2530              		.loc 2 195 2 view .LVU709
 2531              		.syntax unified
 2532              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2533 0006 4FF05003 			mov r3, #80												
 2534 000a 83F31188 		msr basepri, r3											
 2535 000e BFF36F8F 		isb														
 2536 0012 BFF34F8F 		dsb														
 2537              	
 2538              	@ 0 "" 2
 2539              	.LVL177:
 2540              		.thumb
 2541              		.syntax unified
 2542              	.L175:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2543              		.loc 2 195 2 is_stmt 0 view .LVU710
 2544              	.LBE172:
 2545              	.LBE171:
ARM GAS  /tmp/ccpsiOt9.s 			page 153


2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2546              		.loc 1 2201 2 is_stmt 1 discriminator 1 view .LVU711
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2547              		.loc 1 2201 2 discriminator 1 view .LVU712
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2548              		.loc 1 2201 2 discriminator 1 view .LVU713
 2549 0016 FEE7     		b	.L175
 2550              	.L174:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2551              		.loc 1 2195 1 is_stmt 0 discriminator 2 view .LVU714
 2552 0018 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2553              	.LCFI16:
 2554              		.cfi_def_cfa_offset 24
 2555              		.cfi_offset 4, -24
 2556              		.cfi_offset 5, -20
 2557              		.cfi_offset 6, -16
 2558              		.cfi_offset 7, -12
 2559              		.cfi_offset 8, -8
 2560              		.cfi_offset 14, -4
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2561              		.loc 1 2201 38 is_stmt 1 discriminator 2 view .LVU715
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2562              		.loc 1 2208 2 discriminator 2 view .LVU716
 2563 001c FFF7FEFF 		bl	vPortEnterCritical
 2564              	.LVL178:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2565              		.loc 1 2210 3 discriminator 2 view .LVU717
 2566 0020 314B     		ldr	r3, .L194
 2567 0022 1A68     		ldr	r2, [r3]
 2568 0024 013A     		subs	r2, r2, #1
 2569 0026 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2570              		.loc 1 2212 3 discriminator 2 view .LVU718
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2571              		.loc 1 2212 28 is_stmt 0 discriminator 2 view .LVU719
 2572 0028 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2573              		.loc 1 2212 5 discriminator 2 view .LVU720
 2574 002a 002B     		cmp	r3, #0
 2575 002c 4AD1     		bne	.L184
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2576              		.loc 1 2214 4 is_stmt 1 view .LVU721
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2577              		.loc 1 2214 31 is_stmt 0 view .LVU722
 2578 002e 2F4B     		ldr	r3, .L194+4
 2579 0030 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2580              		.loc 1 2214 6 view .LVU723
 2581 0032 002B     		cmp	r3, #0
 2582 0034 4CD0     		beq	.L185
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2583              		.loc 1 2233 31 is_stmt 1 view .LVU724
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2584              		.loc 1 2218 10 view .LVU725
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2585              		.loc 1 2218 12 is_stmt 0 view .LVU726
 2586 0036 2E4B     		ldr	r3, .L194+8
ARM GAS  /tmp/ccpsiOt9.s 			page 154


 2587 0038 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2588              		.loc 1 2218 10 view .LVU727
 2589 003a 002B     		cmp	r3, #0
 2590 003c 4CD0     		beq	.L177
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2591              		.loc 1 2220 14 view .LVU728
 2592 003e 2C4F     		ldr	r7, .L194+8
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2593              		.loc 1 2223 6 view .LVU729
 2594 0040 2C4E     		ldr	r6, .L194+12
 2595 0042 DFF8C080 		ldr	r8, .L194+28
 2596 0046 02E0     		b	.L179
 2597              	.LVL179:
 2598              	.L178:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2599              		.loc 1 2233 31 is_stmt 1 view .LVU730
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2600              		.loc 1 2218 10 view .LVU731
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2601              		.loc 1 2218 12 is_stmt 0 view .LVU732
 2602 0048 3B68     		ldr	r3, [r7]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2603              		.loc 1 2218 10 view .LVU733
 2604 004a 002B     		cmp	r3, #0
 2605 004c 42D0     		beq	.L192
 2606              	.LVL180:
 2607              	.L179:
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2608              		.loc 1 2220 6 is_stmt 1 view .LVU734
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2609              		.loc 1 2220 12 is_stmt 0 view .LVU735
 2610 004e FB68     		ldr	r3, [r7, #12]
 2611 0050 DC68     		ldr	r4, [r3, #12]
 2612              	.LVL181:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2613              		.loc 1 2221 6 is_stmt 1 view .LVU736
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2614              		.loc 1 2221 15 is_stmt 0 view .LVU737
 2615 0052 04F11800 		add	r0, r4, #24
 2616 0056 FFF7FEFF 		bl	uxListRemove
 2617              	.LVL182:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2618              		.loc 1 2222 6 is_stmt 1 view .LVU738
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2619              		.loc 1 2222 15 is_stmt 0 view .LVU739
 2620 005a 251D     		adds	r5, r4, #4
 2621 005c 2846     		mov	r0, r5
 2622 005e FFF7FEFF 		bl	uxListRemove
 2623              	.LVL183:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2624              		.loc 1 2223 6 is_stmt 1 view .LVU740
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2625              		.loc 1 2223 6 view .LVU741
 2626 0062 E06A     		ldr	r0, [r4, #44]
 2627 0064 3268     		ldr	r2, [r6]
 2628 0066 0123     		movs	r3, #1
ARM GAS  /tmp/ccpsiOt9.s 			page 155


 2629 0068 8340     		lsls	r3, r3, r0
 2630 006a 1343     		orrs	r3, r3, r2
 2631 006c 3360     		str	r3, [r6]
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2632              		.loc 1 2223 6 view .LVU742
 2633 006e 00EB8000 		add	r0, r0, r0, lsl #2
 2634 0072 2946     		mov	r1, r5
 2635 0074 08EB8000 		add	r0, r8, r0, lsl #2
 2636 0078 FFF7FEFF 		bl	vListInsertEnd
 2637              	.LVL184:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2638              		.loc 1 2223 36 view .LVU743
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2639              		.loc 1 2227 6 view .LVU744
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2640              		.loc 1 2227 43 is_stmt 0 view .LVU745
 2641 007c 1E4B     		ldr	r3, .L194+16
 2642 007e 1B68     		ldr	r3, [r3]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2643              		.loc 1 2227 8 view .LVU746
 2644 0080 E26A     		ldr	r2, [r4, #44]
 2645 0082 DB6A     		ldr	r3, [r3, #44]
 2646 0084 9A42     		cmp	r2, r3
 2647 0086 DFD3     		bcc	.L178
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2648              		.loc 1 2229 7 is_stmt 1 view .LVU747
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2649              		.loc 1 2229 21 is_stmt 0 view .LVU748
 2650 0088 1C4B     		ldr	r3, .L194+20
 2651 008a 0122     		movs	r2, #1
 2652 008c 1A60     		str	r2, [r3]
 2653 008e DBE7     		b	.L178
 2654              	.LVL185:
 2655              	.L182:
 2656              	.LBB173:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2657              		.loc 1 2265 33 is_stmt 1 view .LVU749
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 2658              		.loc 1 2267 8 view .LVU750
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2659              		.loc 1 2268 14 view .LVU751
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2660              		.loc 1 2268 7 is_stmt 0 view .LVU752
 2661 0090 013C     		subs	r4, r4, #1
 2662              	.LVL186:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2663              		.loc 1 2268 7 view .LVU753
 2664 0092 05D0     		beq	.L193
 2665              	.L183:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2666              		.loc 1 2257 7 is_stmt 1 view .LVU754
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2667              		.loc 1 2259 8 view .LVU755
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2668              		.loc 1 2259 12 is_stmt 0 view .LVU756
 2669 0094 FFF7FEFF 		bl	xTaskIncrementTick
 2670              	.LVL187:
ARM GAS  /tmp/ccpsiOt9.s 			page 156


2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2671              		.loc 1 2259 10 view .LVU757
 2672 0098 0028     		cmp	r0, #0
 2673 009a F9D0     		beq	.L182
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2674              		.loc 1 2261 9 is_stmt 1 view .LVU758
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2675              		.loc 1 2261 23 is_stmt 0 view .LVU759
 2676 009c 3560     		str	r5, [r6]
 2677 009e F7E7     		b	.L182
 2678              	.L193:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2679              		.loc 1 2270 7 is_stmt 1 view .LVU760
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2680              		.loc 1 2270 20 is_stmt 0 view .LVU761
 2681 00a0 174B     		ldr	r3, .L194+24
 2682 00a2 0022     		movs	r2, #0
 2683 00a4 1A60     		str	r2, [r3]
 2684              	.L181:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2685              		.loc 1 2274 31 is_stmt 1 view .LVU762
 2686              	.LBE173:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2687              		.loc 1 2278 5 view .LVU763
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2688              		.loc 1 2278 23 is_stmt 0 view .LVU764
 2689 00a6 154B     		ldr	r3, .L194+20
 2690 00a8 1C68     		ldr	r4, [r3]
 2691              	.LVL188:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2692              		.loc 1 2278 7 view .LVU765
 2693 00aa 64B1     		cbz	r4, .L176
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2694              		.loc 1 2282 7 is_stmt 1 view .LVU766
 2695              	.LVL189:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2696              		.loc 1 2285 6 view .LVU767
 2697 00ac 4FF0E023 		mov	r3, #-536813568
 2698 00b0 4FF08052 		mov	r2, #268435456
 2699 00b4 C3F8042D 		str	r2, [r3, #3332]
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2700              		.loc 1 2285 6 view .LVU768
 2701              		.syntax unified
 2702              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2703 00b8 BFF34F8F 		dsb
 2704              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2705              		.loc 1 2285 6 view .LVU769
 2706              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2707 00bc BFF36F8F 		isb
 2708              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2709              		.loc 1 2285 37 view .LVU770
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2710              		.loc 1 2282 23 is_stmt 0 view .LVU771
 2711              		.thumb
 2712              		.syntax unified
ARM GAS  /tmp/ccpsiOt9.s 			page 157


 2713 00c0 0124     		movs	r4, #1
 2714 00c2 00E0     		b	.L176
 2715              	.LVL190:
 2716              	.L184:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2717              		.loc 1 2197 12 view .LVU772
 2718 00c4 0024     		movs	r4, #0
 2719              	.LVL191:
 2720              	.L176:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2721              		.loc 1 2295 28 is_stmt 1 view .LVU773
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2722              		.loc 1 2298 2 view .LVU774
 2723 00c6 FFF7FEFF 		bl	vPortExitCritical
 2724              	.LVL192:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2725              		.loc 1 2300 2 view .LVU775
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2726              		.loc 1 2301 1 is_stmt 0 view .LVU776
 2727 00ca 2046     		mov	r0, r4
 2728 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2729              	.LVL193:
 2730              	.L185:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2731              		.loc 1 2197 12 view .LVU777
 2732 00d0 0024     		movs	r4, #0
 2733 00d2 F8E7     		b	.L176
 2734              	.LVL194:
 2735              	.L192:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2736              		.loc 1 2237 5 is_stmt 1 view .LVU778
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2737              		.loc 1 2245 6 view .LVU779
 2738 00d4 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2739              	.LVL195:
 2740              	.L177:
 2741              	.LBB174:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2742              		.loc 1 2253 6 view .LVU780
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2743              		.loc 1 2253 17 is_stmt 0 view .LVU781
 2744 00d8 094B     		ldr	r3, .L194+24
 2745 00da 1C68     		ldr	r4, [r3]
 2746              	.LVL196:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2747              		.loc 1 2255 6 is_stmt 1 view .LVU782
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2748              		.loc 1 2255 8 is_stmt 0 view .LVU783
 2749 00dc 002C     		cmp	r4, #0
 2750 00de E2D0     		beq	.L181
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2751              		.loc 1 2261 23 view .LVU784
 2752 00e0 064E     		ldr	r6, .L194+20
 2753 00e2 0125     		movs	r5, #1
 2754 00e4 D6E7     		b	.L183
 2755              	.L195:
 2756 00e6 00BF     		.align	2
ARM GAS  /tmp/ccpsiOt9.s 			page 158


 2757              	.L194:
 2758 00e8 00000000 		.word	.LANCHOR16
 2759 00ec 00000000 		.word	.LANCHOR6
 2760 00f0 00000000 		.word	.LANCHOR1
 2761 00f4 00000000 		.word	.LANCHOR10
 2762 00f8 00000000 		.word	.LANCHOR9
 2763 00fc 00000000 		.word	.LANCHOR19
 2764 0100 00000000 		.word	.LANCHOR20
 2765 0104 00000000 		.word	.LANCHOR7
 2766              	.LBE174:
 2767              		.cfi_endproc
 2768              	.LFE20:
 2770              		.section	.text.vTaskDelay,"ax",%progbits
 2771              		.align	1
 2772              		.global	vTaskDelay
 2773              		.syntax unified
 2774              		.thumb
 2775              		.thumb_func
 2776              		.fpu fpv4-sp-d16
 2778              	vTaskDelay:
 2779              	.LVL197:
 2780              	.LFB9:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2781              		.loc 1 1342 2 is_stmt 1 view -0
 2782              		.cfi_startproc
 2783              		@ args = 0, pretend = 0, frame = 0
 2784              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2785              		.loc 1 1342 2 is_stmt 0 view .LVU786
 2786 0000 10B5     		push	{r4, lr}
 2787              	.LCFI17:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 4, -8
 2790              		.cfi_offset 14, -4
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2791              		.loc 1 1343 2 is_stmt 1 view .LVU787
 2792              	.LVL198:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2793              		.loc 1 1346 3 view .LVU788
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2794              		.loc 1 1346 5 is_stmt 0 view .LVU789
 2795 0002 A8B1     		cbz	r0, .L197
 2796 0004 0446     		mov	r4, r0
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2797              		.loc 1 1348 4 is_stmt 1 view .LVU790
 2798 0006 104B     		ldr	r3, .L202
 2799 0008 1B68     		ldr	r3, [r3]
 2800 000a 43B1     		cbz	r3, .L198
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2801              		.loc 1 1348 4 view .LVU791
 2802              	.LBB175:
 2803              	.LBI175:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2804              		.loc 2 191 30 view .LVU792
 2805              	.LBB176:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2806              		.loc 2 193 1 view .LVU793
ARM GAS  /tmp/ccpsiOt9.s 			page 159


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2807              		.loc 2 195 2 view .LVU794
 2808              		.syntax unified
 2809              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2810 000c 4FF05003 			mov r3, #80												
 2811 0010 83F31188 		msr basepri, r3											
 2812 0014 BFF36F8F 		isb														
 2813 0018 BFF34F8F 		dsb														
 2814              	
 2815              	@ 0 "" 2
 2816              	.LVL199:
 2817              		.thumb
 2818              		.syntax unified
 2819              	.L199:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2820              		.loc 2 195 2 is_stmt 0 view .LVU795
 2821              	.LBE176:
 2822              	.LBE175:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2823              		.loc 1 1348 4 is_stmt 1 discriminator 1 view .LVU796
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2824              		.loc 1 1348 4 discriminator 1 view .LVU797
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2825              		.loc 1 1348 4 discriminator 1 view .LVU798
 2826 001c FEE7     		b	.L199
 2827              	.L198:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2828              		.loc 1 1348 45 discriminator 2 view .LVU799
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2829              		.loc 1 1349 4 discriminator 2 view .LVU800
 2830 001e FFF7FEFF 		bl	vTaskSuspendAll
 2831              	.LVL200:
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2832              		.loc 1 1351 22 discriminator 2 view .LVU801
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2833              		.loc 1 1360 5 discriminator 2 view .LVU802
 2834 0022 0021     		movs	r1, #0
 2835 0024 2046     		mov	r0, r4
 2836 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2837              	.LVL201:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2838              		.loc 1 1362 4 discriminator 2 view .LVU803
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2839              		.loc 1 1362 22 is_stmt 0 discriminator 2 view .LVU804
 2840 002a FFF7FEFF 		bl	xTaskResumeAll
 2841              	.LVL202:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2842              		.loc 1 1366 28 is_stmt 1 discriminator 2 view .LVU805
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2843              		.loc 1 1371 3 discriminator 2 view .LVU806
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2844              		.loc 1 1371 5 is_stmt 0 discriminator 2 view .LVU807
 2845 002e 48B9     		cbnz	r0, .L196
 2846              	.LVL203:
 2847              	.L197:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2848              		.loc 1 1373 4 is_stmt 1 view .LVU808
ARM GAS  /tmp/ccpsiOt9.s 			page 160


 2849 0030 4FF0E023 		mov	r3, #-536813568
 2850 0034 4FF08052 		mov	r2, #268435456
 2851 0038 C3F8042D 		str	r2, [r3, #3332]
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2852              		.loc 1 1373 4 view .LVU809
 2853              		.syntax unified
 2854              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2855 003c BFF34F8F 		dsb
 2856              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2857              		.loc 1 1373 4 view .LVU810
 2858              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2859 0040 BFF36F8F 		isb
 2860              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2861              		.loc 1 1373 26 view .LVU811
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2862              		.loc 1 1377 28 view .LVU812
 2863              		.thumb
 2864              		.syntax unified
 2865              	.L196:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2866              		.loc 1 1379 2 is_stmt 0 view .LVU813
 2867 0044 10BD     		pop	{r4, pc}
 2868              	.L203:
 2869 0046 00BF     		.align	2
 2870              	.L202:
 2871 0048 00000000 		.word	.LANCHOR16
 2872              		.cfi_endproc
 2873              	.LFE9:
 2875              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 2876              		.align	1
 2877              		.global	xTaskCatchUpTicks
 2878              		.syntax unified
 2879              		.thumb
 2880              		.thumb_func
 2881              		.fpu fpv4-sp-d16
 2883              	xTaskCatchUpTicks:
 2884              	.LVL204:
 2885              	.LFB25:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 2886              		.loc 1 2610 1 is_stmt 1 view -0
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 0, uses_anonymous_args = 0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2890              		.loc 1 2611 1 view .LVU815
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2891              		.loc 1 2615 2 view .LVU816
 2892 0000 0B4B     		ldr	r3, .L209
 2893 0002 1B68     		ldr	r3, [r3]
 2894 0004 43B1     		cbz	r3, .L205
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2895              		.loc 1 2615 2 view .LVU817
 2896              	.LBB177:
 2897              	.LBI177:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/ccpsiOt9.s 			page 161


 2898              		.loc 2 191 30 view .LVU818
 2899              	.LBB178:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2900              		.loc 2 193 1 view .LVU819
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2901              		.loc 2 195 2 view .LVU820
 2902              		.syntax unified
 2903              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2904 0006 4FF05003 			mov r3, #80												
 2905 000a 83F31188 		msr basepri, r3											
 2906 000e BFF36F8F 		isb														
 2907 0012 BFF34F8F 		dsb														
 2908              	
 2909              	@ 0 "" 2
 2910              	.LVL205:
 2911              		.thumb
 2912              		.syntax unified
 2913              	.L206:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2914              		.loc 2 195 2 is_stmt 0 view .LVU821
 2915              	.LBE178:
 2916              	.LBE177:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2917              		.loc 1 2615 2 is_stmt 1 discriminator 1 view .LVU822
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2918              		.loc 1 2615 2 discriminator 1 view .LVU823
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2919              		.loc 1 2615 2 discriminator 1 view .LVU824
 2920 0016 FEE7     		b	.L206
 2921              	.L205:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 2922              		.loc 1 2610 1 is_stmt 0 discriminator 2 view .LVU825
 2923 0018 10B5     		push	{r4, lr}
 2924              	.LCFI18:
 2925              		.cfi_def_cfa_offset 8
 2926              		.cfi_offset 4, -8
 2927              		.cfi_offset 14, -4
 2928 001a 0446     		mov	r4, r0
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2929              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU826
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 2930              		.loc 1 2619 2 discriminator 2 view .LVU827
 2931 001c FFF7FEFF 		bl	vTaskSuspendAll
 2932              	.LVL206:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 2933              		.loc 1 2620 2 discriminator 2 view .LVU828
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 2934              		.loc 1 2620 15 is_stmt 0 discriminator 2 view .LVU829
 2935 0020 044B     		ldr	r3, .L209+4
 2936 0022 1868     		ldr	r0, [r3]
 2937 0024 2044     		add	r0, r0, r4
 2938 0026 1860     		str	r0, [r3]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2939              		.loc 1 2621 2 is_stmt 1 discriminator 2 view .LVU830
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2940              		.loc 1 2621 19 is_stmt 0 discriminator 2 view .LVU831
 2941 0028 FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  /tmp/ccpsiOt9.s 			page 162


 2942              	.LVL207:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2943              		.loc 1 2623 2 is_stmt 1 discriminator 2 view .LVU832
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2944              		.loc 1 2624 1 is_stmt 0 discriminator 2 view .LVU833
 2945 002c 10BD     		pop	{r4, pc}
 2946              	.LVL208:
 2947              	.L210:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2948              		.loc 1 2624 1 discriminator 2 view .LVU834
 2949 002e 00BF     		.align	2
 2950              	.L209:
 2951 0030 00000000 		.word	.LANCHOR16
 2952 0034 00000000 		.word	.LANCHOR20
 2953              		.cfi_endproc
 2954              	.LFE25:
 2956              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2957              		.align	1
 2958              		.global	vTaskSwitchContext
 2959              		.syntax unified
 2960              		.thumb
 2961              		.thumb_func
 2962              		.fpu fpv4-sp-d16
 2964              	vTaskSwitchContext:
 2965              	.LFB27:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2966              		.loc 1 2990 1 is_stmt 1 view -0
 2967              		.cfi_startproc
 2968              		@ args = 0, pretend = 0, frame = 0
 2969              		@ frame_needed = 0, uses_anonymous_args = 0
 2970              		@ link register save eliminated.
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2971              		.loc 1 2991 2 view .LVU836
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2972              		.loc 1 2991 27 is_stmt 0 view .LVU837
 2973 0000 1F4B     		ldr	r3, .L218
 2974 0002 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2975              		.loc 1 2991 4 view .LVU838
 2976 0004 1BB1     		cbz	r3, .L212
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2977              		.loc 1 2995 3 is_stmt 1 view .LVU839
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2978              		.loc 1 2995 17 is_stmt 0 view .LVU840
 2979 0006 1F4B     		ldr	r3, .L218+4
 2980 0008 0122     		movs	r2, #1
 2981 000a 1A60     		str	r2, [r3]
 2982 000c 7047     		bx	lr
 2983              	.L212:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2984              		.loc 1 2999 3 is_stmt 1 view .LVU841
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2985              		.loc 1 2999 17 is_stmt 0 view .LVU842
 2986 000e 1D4B     		ldr	r3, .L218+4
 2987 0010 0022     		movs	r2, #0
 2988 0012 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 163


 2989              		.loc 1 3000 27 is_stmt 1 view .LVU843
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2990              		.loc 1 3030 33 view .LVU844
 2991              	.LBB179:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2992              		.loc 1 3041 3 view .LVU845
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2993              		.loc 1 3041 3 view .LVU846
 2994 0014 1C4B     		ldr	r3, .L218+8
 2995 0016 1B68     		ldr	r3, [r3]
 2996              	.LVL209:
 2997              	.LBB180:
 2998              	.LBI180:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 2999              		.loc 2 130 59 view .LVU847
 3000              	.LBB181:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3001              		.loc 2 132 2 view .LVU848
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3002              		.loc 2 134 3 view .LVU849
 3003              		.syntax unified
 3004              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3005 0018 B3FA83F3 		clz r3, r3
 3006              	@ 0 "" 2
 3007              	.LVL210:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3008              		.loc 2 134 3 is_stmt 0 view .LVU850
 3009              		.thumb
 3010              		.syntax unified
 3011 001c DBB2     		uxtb	r3, r3
 3012              	.LVL211:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3013              		.loc 2 135 3 is_stmt 1 view .LVU851
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3014              		.loc 2 135 3 is_stmt 0 view .LVU852
 3015              	.LBE181:
 3016              	.LBE180:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3017              		.loc 1 3041 3 view .LVU853
 3018 001e C3F11F03 		rsb	r3, r3, #31
 3019              	.LVL212:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3020              		.loc 1 3041 3 is_stmt 1 view .LVU854
 3021 0022 03EB8302 		add	r2, r3, r3, lsl #2
 3022 0026 9200     		lsls	r2, r2, #2
 3023 0028 1849     		ldr	r1, .L218+12
 3024 002a 8A58     		ldr	r2, [r1, r2]
 3025 002c 42B9     		cbnz	r2, .L214
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3026              		.loc 1 3041 3 view .LVU855
 3027              	.LBB182:
 3028              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3029              		.loc 2 191 30 view .LVU856
 3030              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3031              		.loc 2 193 1 view .LVU857
ARM GAS  /tmp/ccpsiOt9.s 			page 164


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3032              		.loc 2 195 2 view .LVU858
 3033              		.syntax unified
 3034              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3035 002e 4FF05003 			mov r3, #80												
 3036 0032 83F31188 		msr basepri, r3											
 3037 0036 BFF36F8F 		isb														
 3038 003a BFF34F8F 		dsb														
 3039              	
 3040              	@ 0 "" 2
 3041              	.LVL213:
 3042              		.thumb
 3043              		.syntax unified
 3044              	.L215:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3045              		.loc 2 195 2 is_stmt 0 view .LVU859
 3046              	.LBE183:
 3047              	.LBE182:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3048              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU860
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3049              		.loc 1 3041 3 discriminator 1 view .LVU861
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3050              		.loc 1 3041 3 discriminator 1 view .LVU862
 3051 003e FEE7     		b	.L215
 3052              	.LVL214:
 3053              	.L214:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3054              		.loc 1 3041 3 discriminator 2 view .LVU863
 3055              	.LBB184:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3056              		.loc 1 3041 3 discriminator 2 view .LVU864
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3057              		.loc 1 3041 3 discriminator 2 view .LVU865
 3058 0040 124A     		ldr	r2, .L218+12
 3059 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3060 0046 02EB8101 		add	r1, r2, r1, lsl #2
 3061 004a 4868     		ldr	r0, [r1, #4]
 3062 004c 4068     		ldr	r0, [r0, #4]
 3063 004e 4860     		str	r0, [r1, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3064              		.loc 1 3041 3 discriminator 2 view .LVU866
 3065 0050 03EB8301 		add	r1, r3, r3, lsl #2
 3066 0054 02EB8102 		add	r2, r2, r1, lsl #2
 3067 0058 0832     		adds	r2, r2, #8
 3068 005a 9042     		cmp	r0, r2
 3069 005c 09D0     		beq	.L217
 3070              	.L216:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3071              		.loc 1 3041 3 discriminator 6 view .LVU867
 3072 005e 03EB8303 		add	r3, r3, r3, lsl #2
 3073              	.LVL215:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3074              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU868
 3075 0062 0A4A     		ldr	r2, .L218+12
 3076 0064 02EB8303 		add	r3, r2, r3, lsl #2
 3077 0068 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccpsiOt9.s 			page 165


 3078 006a DA68     		ldr	r2, [r3, #12]
 3079 006c 084B     		ldr	r3, .L218+16
 3080 006e 1A60     		str	r2, [r3]
 3081              	.LBE184:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3082              		.loc 1 3041 3 is_stmt 1 discriminator 6 view .LVU869
 3083              	.LBE179:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3084              		.loc 1 3041 37 discriminator 6 view .LVU870
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3085              		.loc 1 3042 26 discriminator 6 view .LVU871
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3086              		.loc 1 3061 1 is_stmt 0 discriminator 6 view .LVU872
 3087 0070 7047     		bx	lr
 3088              	.LVL216:
 3089              	.L217:
 3090              	.LBB186:
 3091              	.LBB185:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3092              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU873
 3093 0072 4068     		ldr	r0, [r0, #4]
 3094 0074 054A     		ldr	r2, .L218+12
 3095 0076 02EB8102 		add	r2, r2, r1, lsl #2
 3096 007a 5060     		str	r0, [r2, #4]
 3097 007c EFE7     		b	.L216
 3098              	.L219:
 3099 007e 00BF     		.align	2
 3100              	.L218:
 3101 0080 00000000 		.word	.LANCHOR16
 3102 0084 00000000 		.word	.LANCHOR19
 3103 0088 00000000 		.word	.LANCHOR10
 3104 008c 00000000 		.word	.LANCHOR7
 3105 0090 00000000 		.word	.LANCHOR9
 3106              	.LBE185:
 3107              	.LBE186:
 3108              		.cfi_endproc
 3109              	.LFE27:
 3111              		.section	.text.vTaskSuspend,"ax",%progbits
 3112              		.align	1
 3113              		.global	vTaskSuspend
 3114              		.syntax unified
 3115              		.thumb
 3116              		.thumb_func
 3117              		.fpu fpv4-sp-d16
 3119              	vTaskSuspend:
 3120              	.LVL217:
 3121              	.LFB13:
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3122              		.loc 1 1705 2 view -0
 3123              		.cfi_startproc
 3124              		@ args = 0, pretend = 0, frame = 0
 3125              		@ frame_needed = 0, uses_anonymous_args = 0
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3126              		.loc 1 1705 2 is_stmt 0 view .LVU875
 3127 0000 38B5     		push	{r3, r4, r5, lr}
 3128              	.LCFI19:
 3129              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccpsiOt9.s 			page 166


 3130              		.cfi_offset 3, -16
 3131              		.cfi_offset 4, -12
 3132              		.cfi_offset 5, -8
 3133              		.cfi_offset 14, -4
 3134 0002 0446     		mov	r4, r0
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3135              		.loc 1 1706 2 is_stmt 1 view .LVU876
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3136              		.loc 1 1708 3 view .LVU877
 3137 0004 FFF7FEFF 		bl	vPortEnterCritical
 3138              	.LVL218:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3139              		.loc 1 1712 4 view .LVU878
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3140              		.loc 1 1712 12 is_stmt 0 view .LVU879
 3141 0008 7CB3     		cbz	r4, .L232
 3142              	.LVL219:
 3143              	.L221:
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3144              		.loc 1 1714 30 is_stmt 1 discriminator 4 view .LVU880
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3145              		.loc 1 1718 4 discriminator 4 view .LVU881
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3146              		.loc 1 1718 8 is_stmt 0 discriminator 4 view .LVU882
 3147 000a 251D     		adds	r5, r4, #4
 3148 000c 2846     		mov	r0, r5
 3149 000e FFF7FEFF 		bl	uxListRemove
 3150              	.LVL220:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3151              		.loc 1 1718 6 discriminator 4 view .LVU883
 3152 0012 70B9     		cbnz	r0, .L222
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3153              		.loc 1 1720 5 is_stmt 1 view .LVU884
 3154 0014 E26A     		ldr	r2, [r4, #44]
 3155 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3156 001a 9B00     		lsls	r3, r3, #2
 3157 001c 2B49     		ldr	r1, .L235
 3158 001e CB58     		ldr	r3, [r1, r3]
 3159 0020 3BB9     		cbnz	r3, .L222
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3160              		.loc 1 1720 5 discriminator 1 view .LVU885
 3161 0022 2B48     		ldr	r0, .L235+4
 3162 0024 0368     		ldr	r3, [r0]
 3163 0026 0121     		movs	r1, #1
 3164 0028 01FA02F2 		lsl	r2, r1, r2
 3165 002c 23EA0202 		bic	r2, r3, r2
 3166 0030 0260     		str	r2, [r0]
 3167              	.L222:
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3168              		.loc 1 1724 29 view .LVU886
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3169              		.loc 1 1728 4 view .LVU887
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3170              		.loc 1 1728 6 is_stmt 0 view .LVU888
 3171 0032 A36A     		ldr	r3, [r4, #40]
 3172 0034 1BB1     		cbz	r3, .L223
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccpsiOt9.s 			page 167


 3173              		.loc 1 1730 5 is_stmt 1 view .LVU889
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3174              		.loc 1 1730 14 is_stmt 0 view .LVU890
 3175 0036 04F11800 		add	r0, r4, #24
 3176 003a FFF7FEFF 		bl	uxListRemove
 3177              	.LVL221:
 3178              	.L223:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3179              		.loc 1 1734 29 is_stmt 1 view .LVU891
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3180              		.loc 1 1737 4 view .LVU892
 3181 003e 2946     		mov	r1, r5
 3182 0040 2448     		ldr	r0, .L235+8
 3183 0042 FFF7FEFF 		bl	vListInsertEnd
 3184              	.LVL222:
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3185              		.loc 1 1741 5 view .LVU893
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3186              		.loc 1 1741 14 is_stmt 0 view .LVU894
 3187 0046 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3188 004a DBB2     		uxtb	r3, r3
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3189              		.loc 1 1741 7 view .LVU895
 3190 004c 012B     		cmp	r3, #1
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3191              		.loc 1 1745 6 is_stmt 1 view .LVU896
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3192              		.loc 1 1745 27 is_stmt 0 view .LVU897
 3193 004e 04BF     		itt	eq
 3194 0050 0023     		moveq	r3, #0
 3195 0052 84F85030 		strbeq	r3, [r4, #80]
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3196              		.loc 1 1750 3 is_stmt 1 view .LVU898
 3197 0056 FFF7FEFF 		bl	vPortExitCritical
 3198              	.LVL223:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3199              		.loc 1 1752 3 view .LVU899
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3200              		.loc 1 1752 25 is_stmt 0 view .LVU900
 3201 005a 1F4B     		ldr	r3, .L235+12
 3202 005c 1B68     		ldr	r3, [r3]
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3203              		.loc 1 1752 5 view .LVU901
 3204 005e 3BB9     		cbnz	r3, .L233
 3205              	.L225:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3206              		.loc 1 1764 28 is_stmt 1 view .LVU902
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3207              		.loc 1 1767 3 view .LVU903
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3208              		.loc 1 1767 13 is_stmt 0 view .LVU904
 3209 0060 1E4B     		ldr	r3, .L235+16
 3210 0062 1B68     		ldr	r3, [r3]
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3211              		.loc 1 1767 5 view .LVU905
 3212 0064 A342     		cmp	r3, r4
 3213 0066 0AD0     		beq	.L234
ARM GAS  /tmp/ccpsiOt9.s 			page 168


 3214              	.L220:
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3215              		.loc 1 1798 2 view .LVU906
 3216 0068 38BD     		pop	{r3, r4, r5, pc}
 3217              	.LVL224:
 3218              	.L232:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3219              		.loc 1 1712 12 discriminator 1 view .LVU907
 3220 006a 1C4B     		ldr	r3, .L235+16
 3221 006c 1C68     		ldr	r4, [r3]
 3222              	.LVL225:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3223              		.loc 1 1712 12 discriminator 1 view .LVU908
 3224 006e CCE7     		b	.L221
 3225              	.LVL226:
 3226              	.L233:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3227              		.loc 1 1756 4 is_stmt 1 view .LVU909
 3228 0070 FFF7FEFF 		bl	vPortEnterCritical
 3229              	.LVL227:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3230              		.loc 1 1758 5 view .LVU910
 3231 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3232              	.LVL228:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3233              		.loc 1 1760 4 view .LVU911
 3234 0078 FFF7FEFF 		bl	vPortExitCritical
 3235              	.LVL229:
 3236 007c F0E7     		b	.L225
 3237              	.L234:
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3238              		.loc 1 1769 4 view .LVU912
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3239              		.loc 1 1769 26 is_stmt 0 view .LVU913
 3240 007e 164B     		ldr	r3, .L235+12
 3241 0080 1B68     		ldr	r3, [r3]
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3242              		.loc 1 1769 6 view .LVU914
 3243 0082 B3B1     		cbz	r3, .L227
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3244              		.loc 1 1772 5 is_stmt 1 view .LVU915
 3245 0084 164B     		ldr	r3, .L235+20
 3246 0086 1B68     		ldr	r3, [r3]
 3247 0088 43B1     		cbz	r3, .L228
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3248              		.loc 1 1772 5 view .LVU916
 3249              	.LBB187:
 3250              	.LBI187:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3251              		.loc 2 191 30 view .LVU917
 3252              	.LBB188:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3253              		.loc 2 193 1 view .LVU918
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3254              		.loc 2 195 2 view .LVU919
 3255              		.syntax unified
 3256              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccpsiOt9.s 			page 169


 3257 008a 4FF05003 			mov r3, #80												
 3258 008e 83F31188 		msr basepri, r3											
 3259 0092 BFF36F8F 		isb														
 3260 0096 BFF34F8F 		dsb														
 3261              	
 3262              	@ 0 "" 2
 3263              	.LVL230:
 3264              		.thumb
 3265              		.syntax unified
 3266              	.L229:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3267              		.loc 2 195 2 is_stmt 0 view .LVU920
 3268              	.LBE188:
 3269              	.LBE187:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3270              		.loc 1 1772 5 is_stmt 1 discriminator 1 view .LVU921
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3271              		.loc 1 1772 5 discriminator 1 view .LVU922
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3272              		.loc 1 1772 5 discriminator 1 view .LVU923
 3273 009a FEE7     		b	.L229
 3274              	.L228:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3275              		.loc 1 1772 46 discriminator 2 view .LVU924
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3276              		.loc 1 1773 5 discriminator 2 view .LVU925
 3277 009c 4FF0E023 		mov	r3, #-536813568
 3278 00a0 4FF08052 		mov	r2, #268435456
 3279 00a4 C3F8042D 		str	r2, [r3, #3332]
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3280              		.loc 1 1773 5 discriminator 2 view .LVU926
 3281              		.syntax unified
 3282              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3283 00a8 BFF34F8F 		dsb
 3284              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3285              		.loc 1 1773 5 discriminator 2 view .LVU927
 3286              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3287 00ac BFF36F8F 		isb
 3288              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3289              		.loc 1 1773 27 discriminator 2 view .LVU928
 3290              		.thumb
 3291              		.syntax unified
 3292 00b0 DAE7     		b	.L220
 3293              	.L227:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3294              		.loc 1 1780 5 view .LVU929
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3295              		.loc 1 1780 9 is_stmt 0 view .LVU930
 3296 00b2 084B     		ldr	r3, .L235+8
 3297 00b4 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3298              		.loc 1 1780 56 view .LVU931
 3299 00b6 0B4B     		ldr	r3, .L235+24
 3300 00b8 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccpsiOt9.s 			page 170


 3301              		.loc 1 1780 7 view .LVU932
 3302 00ba 9A42     		cmp	r2, r3
 3303 00bc 03D1     		bne	.L230
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3304              		.loc 1 1786 6 is_stmt 1 view .LVU933
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3305              		.loc 1 1786 19 is_stmt 0 view .LVU934
 3306 00be 074B     		ldr	r3, .L235+16
 3307 00c0 0022     		movs	r2, #0
 3308 00c2 1A60     		str	r2, [r3]
 3309 00c4 D0E7     		b	.L220
 3310              	.L230:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3311              		.loc 1 1790 6 is_stmt 1 view .LVU935
 3312 00c6 FFF7FEFF 		bl	vTaskSwitchContext
 3313              	.LVL231:
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3314              		.loc 1 1796 28 view .LVU936
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3315              		.loc 1 1798 2 is_stmt 0 view .LVU937
 3316 00ca CDE7     		b	.L220
 3317              	.L236:
 3318              		.align	2
 3319              	.L235:
 3320 00cc 00000000 		.word	.LANCHOR7
 3321 00d0 00000000 		.word	.LANCHOR10
 3322 00d4 00000000 		.word	.LANCHOR0
 3323 00d8 00000000 		.word	.LANCHOR14
 3324 00dc 00000000 		.word	.LANCHOR9
 3325 00e0 00000000 		.word	.LANCHOR16
 3326 00e4 00000000 		.word	.LANCHOR6
 3327              		.cfi_endproc
 3328              	.LFE13:
 3330              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3331              		.align	1
 3332              		.global	vTaskPlaceOnEventList
 3333              		.syntax unified
 3334              		.thumb
 3335              		.thumb_func
 3336              		.fpu fpv4-sp-d16
 3338              	vTaskPlaceOnEventList:
 3339              	.LVL232:
 3340              	.LFB28:
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3341              		.loc 1 3065 1 is_stmt 1 view -0
 3342              		.cfi_startproc
 3343              		@ args = 0, pretend = 0, frame = 0
 3344              		@ frame_needed = 0, uses_anonymous_args = 0
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3345              		.loc 1 3066 2 view .LVU939
 3346 0000 58B1     		cbz	r0, .L242
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3347              		.loc 1 3065 1 is_stmt 0 discriminator 2 view .LVU940
 3348 0002 10B5     		push	{r4, lr}
 3349              	.LCFI20:
 3350              		.cfi_def_cfa_offset 8
 3351              		.cfi_offset 4, -8
ARM GAS  /tmp/ccpsiOt9.s 			page 171


 3352              		.cfi_offset 14, -4
 3353 0004 0C46     		mov	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3354              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU941
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3355              		.loc 1 3075 2 discriminator 2 view .LVU942
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3356              		.loc 1 3075 43 is_stmt 0 discriminator 2 view .LVU943
 3357 0006 094A     		ldr	r2, .L243
 3358 0008 1168     		ldr	r1, [r2]
 3359              	.LVL233:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3360              		.loc 1 3075 2 discriminator 2 view .LVU944
 3361 000a 1831     		adds	r1, r1, #24
 3362 000c FFF7FEFF 		bl	vListInsert
 3363              	.LVL234:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3364              		.loc 1 3077 2 is_stmt 1 discriminator 2 view .LVU945
 3365 0010 0121     		movs	r1, #1
 3366 0012 2046     		mov	r0, r4
 3367 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3368              	.LVL235:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3369              		.loc 1 3078 1 is_stmt 0 discriminator 2 view .LVU946
 3370 0018 10BD     		pop	{r4, pc}
 3371              	.LVL236:
 3372              	.L242:
 3373              	.LCFI21:
 3374              		.cfi_def_cfa_offset 0
 3375              		.cfi_restore 4
 3376              		.cfi_restore 14
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3377              		.loc 1 3066 2 is_stmt 1 view .LVU947
 3378              	.LBB189:
 3379              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3380              		.loc 2 191 30 view .LVU948
 3381              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3382              		.loc 2 193 1 view .LVU949
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3383              		.loc 2 195 2 view .LVU950
 3384              		.syntax unified
 3385              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3386 001a 4FF05003 			mov r3, #80												
 3387 001e 83F31188 		msr basepri, r3											
 3388 0022 BFF36F8F 		isb														
 3389 0026 BFF34F8F 		dsb														
 3390              	
 3391              	@ 0 "" 2
 3392              	.LVL237:
 3393              		.thumb
 3394              		.syntax unified
 3395              	.L239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3396              		.loc 2 195 2 is_stmt 0 view .LVU951
 3397              	.LBE190:
ARM GAS  /tmp/ccpsiOt9.s 			page 172


 3398              	.LBE189:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3399              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU952
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3400              		.loc 1 3066 2 discriminator 1 view .LVU953
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3401              		.loc 1 3066 2 discriminator 1 view .LVU954
 3402 002a FEE7     		b	.L239
 3403              	.L244:
 3404              		.align	2
 3405              	.L243:
 3406 002c 00000000 		.word	.LANCHOR9
 3407              		.cfi_endproc
 3408              	.LFE28:
 3410              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3411              		.align	1
 3412              		.global	vTaskPlaceOnUnorderedEventList
 3413              		.syntax unified
 3414              		.thumb
 3415              		.thumb_func
 3416              		.fpu fpv4-sp-d16
 3418              	vTaskPlaceOnUnorderedEventList:
 3419              	.LVL238:
 3420              	.LFB29:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3421              		.loc 1 3082 1 view -0
 3422              		.cfi_startproc
 3423              		@ args = 0, pretend = 0, frame = 0
 3424              		@ frame_needed = 0, uses_anonymous_args = 0
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3425              		.loc 1 3083 2 view .LVU956
 3426 0000 70B1     		cbz	r0, .L252
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3427              		.loc 1 3082 1 is_stmt 0 discriminator 2 view .LVU957
 3428 0002 10B5     		push	{r4, lr}
 3429              	.LCFI22:
 3430              		.cfi_def_cfa_offset 8
 3431              		.cfi_offset 4, -8
 3432              		.cfi_offset 14, -4
 3433 0004 1446     		mov	r4, r2
 3434 0006 0246     		mov	r2, r0
 3435              	.LVL239:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3436              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU958
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3437              		.loc 1 3087 2 discriminator 2 view .LVU959
 3438 0008 114B     		ldr	r3, .L253
 3439 000a 1B68     		ldr	r3, [r3]
 3440 000c 8BB9     		cbnz	r3, .L248
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3441              		.loc 1 3087 2 view .LVU960
 3442              	.LBB191:
 3443              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3444              		.loc 2 191 30 view .LVU961
 3445              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 173


 3446              		.loc 2 193 1 view .LVU962
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3447              		.loc 2 195 2 view .LVU963
 3448              		.syntax unified
 3449              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3450 000e 4FF05003 			mov r3, #80												
 3451 0012 83F31188 		msr basepri, r3											
 3452 0016 BFF36F8F 		isb														
 3453 001a BFF34F8F 		dsb														
 3454              	
 3455              	@ 0 "" 2
 3456              	.LVL240:
 3457              		.thumb
 3458              		.syntax unified
 3459              	.L249:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3460              		.loc 2 195 2 is_stmt 0 view .LVU964
 3461              	.LBE192:
 3462              	.LBE191:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3463              		.loc 1 3087 2 is_stmt 1 discriminator 2 view .LVU965
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3464              		.loc 1 3087 2 discriminator 2 view .LVU966
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3465              		.loc 1 3087 2 discriminator 2 view .LVU967
 3466 001e FEE7     		b	.L249
 3467              	.LVL241:
 3468              	.L252:
 3469              	.LCFI23:
 3470              		.cfi_def_cfa_offset 0
 3471              		.cfi_restore 4
 3472              		.cfi_restore 14
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3473              		.loc 1 3083 2 view .LVU968
 3474              	.LBB193:
 3475              	.LBI193:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3476              		.loc 2 191 30 view .LVU969
 3477              	.LBB194:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3478              		.loc 2 193 1 view .LVU970
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3479              		.loc 2 195 2 view .LVU971
 3480              		.syntax unified
 3481              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3482 0020 4FF05003 			mov r3, #80												
 3483 0024 83F31188 		msr basepri, r3											
 3484 0028 BFF36F8F 		isb														
 3485 002c BFF34F8F 		dsb														
 3486              	
 3487              	@ 0 "" 2
 3488              	.LVL242:
 3489              		.thumb
 3490              		.syntax unified
 3491              	.L247:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3492              		.loc 2 195 2 is_stmt 0 view .LVU972
ARM GAS  /tmp/ccpsiOt9.s 			page 174


 3493              	.LBE194:
 3494              	.LBE193:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3495              		.loc 1 3083 2 is_stmt 1 discriminator 1 view .LVU973
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3496              		.loc 1 3083 2 discriminator 1 view .LVU974
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3497              		.loc 1 3083 2 discriminator 1 view .LVU975
 3498 0030 FEE7     		b	.L247
 3499              	.LVL243:
 3500              	.L248:
 3501              	.LCFI24:
 3502              		.cfi_def_cfa_offset 8
 3503              		.cfi_offset 4, -8
 3504              		.cfi_offset 14, -4
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3505              		.loc 1 3087 43 discriminator 2 view .LVU976
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3506              		.loc 1 3092 2 discriminator 2 view .LVU977
 3507 0032 084B     		ldr	r3, .L253+4
 3508 0034 1868     		ldr	r0, [r3]
 3509              	.LVL244:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3510              		.loc 1 3092 2 is_stmt 0 discriminator 2 view .LVU978
 3511 0036 41F00041 		orr	r1, r1, #-2147483648
 3512              	.LVL245:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3513              		.loc 1 3092 2 discriminator 2 view .LVU979
 3514 003a 8161     		str	r1, [r0, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3515              		.loc 1 3099 2 is_stmt 1 discriminator 2 view .LVU980
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3516              		.loc 1 3099 46 is_stmt 0 discriminator 2 view .LVU981
 3517 003c 1968     		ldr	r1, [r3]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3518              		.loc 1 3099 2 discriminator 2 view .LVU982
 3519 003e 1831     		adds	r1, r1, #24
 3520 0040 1046     		mov	r0, r2
 3521 0042 FFF7FEFF 		bl	vListInsertEnd
 3522              	.LVL246:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3523              		.loc 1 3101 2 is_stmt 1 discriminator 2 view .LVU983
 3524 0046 0121     		movs	r1, #1
 3525 0048 2046     		mov	r0, r4
 3526 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3527              	.LVL247:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3528              		.loc 1 3102 1 is_stmt 0 discriminator 2 view .LVU984
 3529 004e 10BD     		pop	{r4, pc}
 3530              	.LVL248:
 3531              	.L254:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3532              		.loc 1 3102 1 discriminator 2 view .LVU985
 3533              		.align	2
 3534              	.L253:
 3535 0050 00000000 		.word	.LANCHOR16
 3536 0054 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccpsiOt9.s 			page 175


 3537              		.cfi_endproc
 3538              	.LFE29:
 3540              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3541              		.align	1
 3542              		.global	xTaskRemoveFromEventList
 3543              		.syntax unified
 3544              		.thumb
 3545              		.thumb_func
 3546              		.fpu fpv4-sp-d16
 3548              	xTaskRemoveFromEventList:
 3549              	.LVL249:
 3550              	.LFB30:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3551              		.loc 1 3139 1 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3555              		.loc 1 3139 1 is_stmt 0 view .LVU987
 3556 0000 38B5     		push	{r3, r4, r5, lr}
 3557              	.LCFI25:
 3558              		.cfi_def_cfa_offset 16
 3559              		.cfi_offset 3, -16
 3560              		.cfi_offset 4, -12
 3561              		.cfi_offset 5, -8
 3562              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3563              		.loc 1 3140 1 is_stmt 1 view .LVU988
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3564              		.loc 1 3141 1 view .LVU989
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3565              		.loc 1 3156 2 view .LVU990
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3566              		.loc 1 3156 17 is_stmt 0 view .LVU991
 3567 0002 C368     		ldr	r3, [r0, #12]
 3568 0004 DC68     		ldr	r4, [r3, #12]
 3569              	.LVL250:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3570              		.loc 1 3157 2 is_stmt 1 view .LVU992
 3571 0006 2CB3     		cbz	r4, .L263
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3572              		.loc 1 3157 32 discriminator 2 view .LVU993
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3573              		.loc 1 3158 2 discriminator 2 view .LVU994
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3574              		.loc 1 3158 11 is_stmt 0 discriminator 2 view .LVU995
 3575 0008 04F11805 		add	r5, r4, #24
 3576 000c 2846     		mov	r0, r5
 3577              	.LVL251:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3578              		.loc 1 3158 11 discriminator 2 view .LVU996
 3579 000e FFF7FEFF 		bl	uxListRemove
 3580              	.LVL252:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3581              		.loc 1 3160 2 is_stmt 1 discriminator 2 view .LVU997
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3582              		.loc 1 3160 27 is_stmt 0 discriminator 2 view .LVU998
ARM GAS  /tmp/ccpsiOt9.s 			page 176


 3583 0012 174B     		ldr	r3, .L264
 3584 0014 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3585              		.loc 1 3160 4 discriminator 2 view .LVU999
 3586 0016 33BB     		cbnz	r3, .L258
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3587              		.loc 1 3162 3 is_stmt 1 view .LVU1000
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3588              		.loc 1 3162 12 is_stmt 0 view .LVU1001
 3589 0018 251D     		adds	r5, r4, #4
 3590 001a 2846     		mov	r0, r5
 3591 001c FFF7FEFF 		bl	uxListRemove
 3592              	.LVL253:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3593              		.loc 1 3163 3 is_stmt 1 view .LVU1002
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3594              		.loc 1 3163 3 view .LVU1003
 3595 0020 E06A     		ldr	r0, [r4, #44]
 3596 0022 144A     		ldr	r2, .L264+4
 3597 0024 1168     		ldr	r1, [r2]
 3598 0026 0123     		movs	r3, #1
 3599 0028 8340     		lsls	r3, r3, r0
 3600 002a 0B43     		orrs	r3, r3, r1
 3601 002c 1360     		str	r3, [r2]
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3602              		.loc 1 3163 3 view .LVU1004
 3603 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3604 0032 2946     		mov	r1, r5
 3605 0034 104B     		ldr	r3, .L264+8
 3606 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3607 003a FFF7FEFF 		bl	vListInsertEnd
 3608              	.LVL254:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3609              		.loc 1 3163 42 view .LVU1005
 3610              	.L259:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3611              		.loc 1 3186 2 view .LVU1006
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3612              		.loc 1 3186 47 is_stmt 0 view .LVU1007
 3613 003e 0F4B     		ldr	r3, .L264+12
 3614 0040 1B68     		ldr	r3, [r3]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3615              		.loc 1 3186 4 view .LVU1008
 3616 0042 E26A     		ldr	r2, [r4, #44]
 3617 0044 DB6A     		ldr	r3, [r3, #44]
 3618 0046 9A42     		cmp	r2, r3
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3619              		.loc 1 3191 3 is_stmt 1 view .LVU1009
 3620              	.LVL255:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3621              		.loc 1 3195 3 view .LVU1010
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3622              		.loc 1 3195 17 is_stmt 0 view .LVU1011
 3623 0048 83BF     		ittte	hi
 3624 004a 0120     		movhi	r0, #1
 3625 004c 0C4B     		ldrhi	r3, .L264+16
 3626 004e 1860     		strhi	r0, [r3]
ARM GAS  /tmp/ccpsiOt9.s 			page 177


3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3627              		.loc 1 3199 11 view .LVU1012
 3628 0050 0020     		movls	r0, #0
 3629              	.LVL256:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3630              		.loc 1 3202 2 is_stmt 1 view .LVU1013
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3631              		.loc 1 3203 1 is_stmt 0 view .LVU1014
 3632 0052 38BD     		pop	{r3, r4, r5, pc}
 3633              	.LVL257:
 3634              	.L263:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3635              		.loc 1 3157 2 is_stmt 1 view .LVU1015
 3636              	.LBB195:
 3637              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3638              		.loc 2 191 30 view .LVU1016
 3639              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3640              		.loc 2 193 1 view .LVU1017
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3641              		.loc 2 195 2 view .LVU1018
 3642              		.syntax unified
 3643              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3644 0054 4FF05003 			mov r3, #80												
 3645 0058 83F31188 		msr basepri, r3											
 3646 005c BFF36F8F 		isb														
 3647 0060 BFF34F8F 		dsb														
 3648              	
 3649              	@ 0 "" 2
 3650              	.LVL258:
 3651              		.thumb
 3652              		.syntax unified
 3653              	.L257:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3654              		.loc 2 195 2 is_stmt 0 view .LVU1019
 3655              	.LBE196:
 3656              	.LBE195:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3657              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1020
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3658              		.loc 1 3157 2 discriminator 1 view .LVU1021
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3659              		.loc 1 3157 2 discriminator 1 view .LVU1022
 3660 0064 FEE7     		b	.L257
 3661              	.LVL259:
 3662              	.L258:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3663              		.loc 1 3183 3 view .LVU1023
 3664 0066 2946     		mov	r1, r5
 3665 0068 0648     		ldr	r0, .L264+20
 3666 006a FFF7FEFF 		bl	vListInsertEnd
 3667              	.LVL260:
 3668 006e E6E7     		b	.L259
 3669              	.L265:
 3670              		.align	2
 3671              	.L264:
ARM GAS  /tmp/ccpsiOt9.s 			page 178


 3672 0070 00000000 		.word	.LANCHOR16
 3673 0074 00000000 		.word	.LANCHOR10
 3674 0078 00000000 		.word	.LANCHOR7
 3675 007c 00000000 		.word	.LANCHOR9
 3676 0080 00000000 		.word	.LANCHOR19
 3677 0084 00000000 		.word	.LANCHOR1
 3678              		.cfi_endproc
 3679              	.LFE30:
 3681              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3682              		.align	1
 3683              		.global	vTaskRemoveFromUnorderedEventList
 3684              		.syntax unified
 3685              		.thumb
 3686              		.thumb_func
 3687              		.fpu fpv4-sp-d16
 3689              	vTaskRemoveFromUnorderedEventList:
 3690              	.LVL261:
 3691              	.LFB31:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3692              		.loc 1 3207 1 view -0
 3693              		.cfi_startproc
 3694              		@ args = 0, pretend = 0, frame = 0
 3695              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3696              		.loc 1 3207 1 is_stmt 0 view .LVU1025
 3697 0000 38B5     		push	{r3, r4, r5, lr}
 3698              	.LCFI26:
 3699              		.cfi_def_cfa_offset 16
 3700              		.cfi_offset 3, -16
 3701              		.cfi_offset 4, -12
 3702              		.cfi_offset 5, -8
 3703              		.cfi_offset 14, -4
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3704              		.loc 1 3208 1 is_stmt 1 view .LVU1026
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3705              		.loc 1 3212 2 view .LVU1027
 3706 0002 1C4B     		ldr	r3, .L274
 3707 0004 1B68     		ldr	r3, [r3]
 3708 0006 43B9     		cbnz	r3, .L267
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3709              		.loc 1 3212 2 view .LVU1028
 3710              	.LBB197:
 3711              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3712              		.loc 2 191 30 view .LVU1029
 3713              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3714              		.loc 2 193 1 view .LVU1030
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3715              		.loc 2 195 2 view .LVU1031
 3716              		.syntax unified
 3717              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3718 0008 4FF05003 			mov r3, #80												
 3719 000c 83F31188 		msr basepri, r3											
 3720 0010 BFF36F8F 		isb														
 3721 0014 BFF34F8F 		dsb														
 3722              	
ARM GAS  /tmp/ccpsiOt9.s 			page 179


 3723              	@ 0 "" 2
 3724              	.LVL262:
 3725              		.thumb
 3726              		.syntax unified
 3727              	.L268:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3728              		.loc 2 195 2 is_stmt 0 view .LVU1032
 3729              	.LBE198:
 3730              	.LBE197:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3731              		.loc 1 3212 2 is_stmt 1 discriminator 1 view .LVU1033
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3732              		.loc 1 3212 2 discriminator 1 view .LVU1034
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3733              		.loc 1 3212 2 discriminator 1 view .LVU1035
 3734 0018 FEE7     		b	.L268
 3735              	.L267:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3736              		.loc 1 3212 49 discriminator 2 view .LVU1036
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3737              		.loc 1 3215 2 discriminator 2 view .LVU1037
 3738 001a 41F00041 		orr	r1, r1, #-2147483648
 3739              	.LVL263:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3740              		.loc 1 3215 2 is_stmt 0 discriminator 2 view .LVU1038
 3741 001e 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3742              		.loc 1 3219 2 is_stmt 1 discriminator 2 view .LVU1039
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3743              		.loc 1 3219 17 is_stmt 0 discriminator 2 view .LVU1040
 3744 0020 C468     		ldr	r4, [r0, #12]
 3745              	.LVL264:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3746              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1041
 3747 0022 F4B1     		cbz	r4, .L273
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3748              		.loc 1 3220 32 discriminator 2 view .LVU1042
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3749              		.loc 1 3221 2 discriminator 2 view .LVU1043
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3750              		.loc 1 3221 11 is_stmt 0 discriminator 2 view .LVU1044
 3751 0024 FFF7FEFF 		bl	uxListRemove
 3752              	.LVL265:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3753              		.loc 1 3240 2 is_stmt 1 discriminator 2 view .LVU1045
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3754              		.loc 1 3240 11 is_stmt 0 discriminator 2 view .LVU1046
 3755 0028 251D     		adds	r5, r4, #4
 3756 002a 2846     		mov	r0, r5
 3757 002c FFF7FEFF 		bl	uxListRemove
 3758              	.LVL266:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3759              		.loc 1 3241 2 is_stmt 1 discriminator 2 view .LVU1047
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3760              		.loc 1 3241 2 discriminator 2 view .LVU1048
 3761 0030 E06A     		ldr	r0, [r4, #44]
 3762 0032 114A     		ldr	r2, .L274+4
ARM GAS  /tmp/ccpsiOt9.s 			page 180


 3763 0034 1168     		ldr	r1, [r2]
 3764 0036 0123     		movs	r3, #1
 3765 0038 8340     		lsls	r3, r3, r0
 3766 003a 0B43     		orrs	r3, r3, r1
 3767 003c 1360     		str	r3, [r2]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3768              		.loc 1 3241 2 discriminator 2 view .LVU1049
 3769 003e 00EB8000 		add	r0, r0, r0, lsl #2
 3770 0042 2946     		mov	r1, r5
 3771 0044 0D4B     		ldr	r3, .L274+8
 3772 0046 03EB8000 		add	r0, r3, r0, lsl #2
 3773 004a FFF7FEFF 		bl	vListInsertEnd
 3774              	.LVL267:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3775              		.loc 1 3241 41 discriminator 2 view .LVU1050
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3776              		.loc 1 3243 2 discriminator 2 view .LVU1051
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3777              		.loc 1 3243 47 is_stmt 0 discriminator 2 view .LVU1052
 3778 004e 0C4B     		ldr	r3, .L274+12
 3779 0050 1B68     		ldr	r3, [r3]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3780              		.loc 1 3243 4 discriminator 2 view .LVU1053
 3781 0052 E26A     		ldr	r2, [r4, #44]
 3782 0054 DB6A     		ldr	r3, [r3, #44]
 3783 0056 9A42     		cmp	r2, r3
 3784 0058 02D9     		bls	.L266
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3785              		.loc 1 3249 3 is_stmt 1 view .LVU1054
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3786              		.loc 1 3249 17 is_stmt 0 view .LVU1055
 3787 005a 0A4B     		ldr	r3, .L274+16
 3788 005c 0122     		movs	r2, #1
 3789 005e 1A60     		str	r2, [r3]
 3790              	.L266:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3791              		.loc 1 3251 1 view .LVU1056
 3792 0060 38BD     		pop	{r3, r4, r5, pc}
 3793              	.LVL268:
 3794              	.L273:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3795              		.loc 1 3220 2 is_stmt 1 view .LVU1057
 3796              	.LBB199:
 3797              	.LBI199:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3798              		.loc 2 191 30 view .LVU1058
 3799              	.LBB200:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3800              		.loc 2 193 1 view .LVU1059
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3801              		.loc 2 195 2 view .LVU1060
 3802              		.syntax unified
 3803              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3804 0062 4FF05003 			mov r3, #80												
 3805 0066 83F31188 		msr basepri, r3											
 3806 006a BFF36F8F 		isb														
 3807 006e BFF34F8F 		dsb														
ARM GAS  /tmp/ccpsiOt9.s 			page 181


 3808              	
 3809              	@ 0 "" 2
 3810              	.LVL269:
 3811              		.thumb
 3812              		.syntax unified
 3813              	.L270:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3814              		.loc 2 195 2 is_stmt 0 view .LVU1061
 3815              	.LBE200:
 3816              	.LBE199:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3817              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1062
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3818              		.loc 1 3220 2 discriminator 2 view .LVU1063
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3819              		.loc 1 3220 2 discriminator 2 view .LVU1064
 3820 0072 FEE7     		b	.L270
 3821              	.L275:
 3822              		.align	2
 3823              	.L274:
 3824 0074 00000000 		.word	.LANCHOR16
 3825 0078 00000000 		.word	.LANCHOR10
 3826 007c 00000000 		.word	.LANCHOR7
 3827 0080 00000000 		.word	.LANCHOR9
 3828 0084 00000000 		.word	.LANCHOR19
 3829              		.cfi_endproc
 3830              	.LFE31:
 3832              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3833              		.align	1
 3834              		.global	vTaskSetTimeOutState
 3835              		.syntax unified
 3836              		.thumb
 3837              		.thumb_func
 3838              		.fpu fpv4-sp-d16
 3840              	vTaskSetTimeOutState:
 3841              	.LVL270:
 3842              	.LFB32:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3843              		.loc 1 3255 1 view -0
 3844              		.cfi_startproc
 3845              		@ args = 0, pretend = 0, frame = 0
 3846              		@ frame_needed = 0, uses_anonymous_args = 0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3847              		.loc 1 3256 2 view .LVU1066
 3848 0000 60B1     		cbz	r0, .L281
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3849              		.loc 1 3255 1 is_stmt 0 discriminator 2 view .LVU1067
 3850 0002 10B5     		push	{r4, lr}
 3851              	.LCFI27:
 3852              		.cfi_def_cfa_offset 8
 3853              		.cfi_offset 4, -8
 3854              		.cfi_offset 14, -4
 3855 0004 0446     		mov	r4, r0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3856              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1068
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3857              		.loc 1 3257 2 discriminator 2 view .LVU1069
ARM GAS  /tmp/ccpsiOt9.s 			page 182


 3858 0006 FFF7FEFF 		bl	vPortEnterCritical
 3859              	.LVL271:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3860              		.loc 1 3259 3 discriminator 2 view .LVU1070
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3861              		.loc 1 3259 29 is_stmt 0 discriminator 2 view .LVU1071
 3862 000a 094B     		ldr	r3, .L282
 3863 000c 1B68     		ldr	r3, [r3]
 3864 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3865              		.loc 1 3260 3 is_stmt 1 discriminator 2 view .LVU1072
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3866              		.loc 1 3260 30 is_stmt 0 discriminator 2 view .LVU1073
 3867 0010 084B     		ldr	r3, .L282+4
 3868 0012 1B68     		ldr	r3, [r3]
 3869 0014 6360     		str	r3, [r4, #4]
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3870              		.loc 1 3262 2 is_stmt 1 discriminator 2 view .LVU1074
 3871 0016 FFF7FEFF 		bl	vPortExitCritical
 3872              	.LVL272:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3873              		.loc 1 3263 1 is_stmt 0 discriminator 2 view .LVU1075
 3874 001a 10BD     		pop	{r4, pc}
 3875              	.LVL273:
 3876              	.L281:
 3877              	.LCFI28:
 3878              		.cfi_def_cfa_offset 0
 3879              		.cfi_restore 4
 3880              		.cfi_restore 14
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3881              		.loc 1 3256 2 is_stmt 1 view .LVU1076
 3882              	.LBB201:
 3883              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3884              		.loc 2 191 30 view .LVU1077
 3885              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3886              		.loc 2 193 1 view .LVU1078
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3887              		.loc 2 195 2 view .LVU1079
 3888              		.syntax unified
 3889              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3890 001c 4FF05003 			mov r3, #80												
 3891 0020 83F31188 		msr basepri, r3											
 3892 0024 BFF36F8F 		isb														
 3893 0028 BFF34F8F 		dsb														
 3894              	
 3895              	@ 0 "" 2
 3896              	.LVL274:
 3897              		.thumb
 3898              		.syntax unified
 3899              	.L278:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3900              		.loc 2 195 2 is_stmt 0 view .LVU1080
 3901              	.LBE202:
 3902              	.LBE201:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
ARM GAS  /tmp/ccpsiOt9.s 			page 183


 3903              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1081
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3904              		.loc 1 3256 2 discriminator 1 view .LVU1082
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3905              		.loc 1 3256 2 discriminator 1 view .LVU1083
 3906 002c FEE7     		b	.L278
 3907              	.L283:
 3908 002e 00BF     		.align	2
 3909              	.L282:
 3910 0030 00000000 		.word	.LANCHOR18
 3911 0034 00000000 		.word	.LANCHOR8
 3912              		.cfi_endproc
 3913              	.LFE32:
 3915              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3916              		.align	1
 3917              		.global	vTaskInternalSetTimeOutState
 3918              		.syntax unified
 3919              		.thumb
 3920              		.thumb_func
 3921              		.fpu fpv4-sp-d16
 3923              	vTaskInternalSetTimeOutState:
 3924              	.LVL275:
 3925              	.LFB33:
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3926              		.loc 1 3267 1 view -0
 3927              		.cfi_startproc
 3928              		@ args = 0, pretend = 0, frame = 0
 3929              		@ frame_needed = 0, uses_anonymous_args = 0
 3930              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3931              		.loc 1 3269 2 view .LVU1085
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3932              		.loc 1 3269 28 is_stmt 0 view .LVU1086
 3933 0000 034B     		ldr	r3, .L285
 3934 0002 1B68     		ldr	r3, [r3]
 3935 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3936              		.loc 1 3270 2 is_stmt 1 view .LVU1087
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3937              		.loc 1 3270 29 is_stmt 0 view .LVU1088
 3938 0006 034B     		ldr	r3, .L285+4
 3939 0008 1B68     		ldr	r3, [r3]
 3940 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3941              		.loc 1 3271 1 view .LVU1089
 3942 000c 7047     		bx	lr
 3943              	.L286:
 3944 000e 00BF     		.align	2
 3945              	.L285:
 3946 0010 00000000 		.word	.LANCHOR18
 3947 0014 00000000 		.word	.LANCHOR8
 3948              		.cfi_endproc
 3949              	.LFE33:
 3951              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3952              		.align	1
 3953              		.global	xTaskCheckForTimeOut
 3954              		.syntax unified
ARM GAS  /tmp/ccpsiOt9.s 			page 184


 3955              		.thumb
 3956              		.thumb_func
 3957              		.fpu fpv4-sp-d16
 3959              	xTaskCheckForTimeOut:
 3960              	.LVL276:
 3961              	.LFB34:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3962              		.loc 1 3275 1 is_stmt 1 view -0
 3963              		.cfi_startproc
 3964              		@ args = 0, pretend = 0, frame = 0
 3965              		@ frame_needed = 0, uses_anonymous_args = 0
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3966              		.loc 1 3276 1 view .LVU1091
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3967              		.loc 1 3278 2 view .LVU1092
 3968 0000 D0B1     		cbz	r0, .L299
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3969              		.loc 1 3275 1 is_stmt 0 discriminator 2 view .LVU1093
 3970 0002 70B5     		push	{r4, r5, r6, lr}
 3971              	.LCFI29:
 3972              		.cfi_def_cfa_offset 16
 3973              		.cfi_offset 4, -16
 3974              		.cfi_offset 5, -12
 3975              		.cfi_offset 6, -8
 3976              		.cfi_offset 14, -4
 3977 0004 0C46     		mov	r4, r1
 3978 0006 0546     		mov	r5, r0
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3979              		.loc 1 3278 27 is_stmt 1 discriminator 2 view .LVU1094
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3980              		.loc 1 3279 2 discriminator 2 view .LVU1095
 3981 0008 F9B1     		cbz	r1, .L300
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3982              		.loc 1 3279 31 discriminator 2 view .LVU1096
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3983              		.loc 1 3281 2 discriminator 2 view .LVU1097
 3984 000a FFF7FEFF 		bl	vPortEnterCritical
 3985              	.LVL277:
 3986              	.LBB203:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3987              		.loc 1 3284 3 discriminator 2 view .LVU1098
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3988              		.loc 1 3284 20 is_stmt 0 discriminator 2 view .LVU1099
 3989 000e 1B4B     		ldr	r3, .L302
 3990 0010 1A68     		ldr	r2, [r3]
 3991              	.LVL278:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3992              		.loc 1 3285 3 is_stmt 1 discriminator 2 view .LVU1100
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3993              		.loc 1 3299 4 discriminator 2 view .LVU1101
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3994              		.loc 1 3299 8 is_stmt 0 discriminator 2 view .LVU1102
 3995 0012 2368     		ldr	r3, [r4]
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3996              		.loc 1 3299 6 discriminator 2 view .LVU1103
 3997 0014 B3F1FF3F 		cmp	r3, #-1
 3998 0018 28D0     		beq	.L295
ARM GAS  /tmp/ccpsiOt9.s 			page 185


3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3999              		.loc 1 3285 62 view .LVU1104
 4000 001a 6968     		ldr	r1, [r5, #4]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4001              		.loc 1 3309 3 is_stmt 1 view .LVU1105
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4002              		.loc 1 3309 25 is_stmt 0 view .LVU1106
 4003 001c 1848     		ldr	r0, .L302+4
 4004 001e 0068     		ldr	r0, [r0]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4005              		.loc 1 3309 5 view .LVU1107
 4006 0020 2E68     		ldr	r6, [r5]
 4007 0022 8642     		cmp	r6, r0
 4008 0024 01D0     		beq	.L293
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4009              		.loc 1 3309 56 discriminator 1 view .LVU1108
 4010 0026 9142     		cmp	r1, r2
 4011 0028 25D9     		bls	.L296
 4012              	.L293:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4013              		.loc 1 3318 8 is_stmt 1 view .LVU1109
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4014              		.loc 1 3285 20 is_stmt 0 view .LVU1110
 4015 002a 501A     		subs	r0, r2, r1
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4016              		.loc 1 3318 10 view .LVU1111
 4017 002c 8342     		cmp	r3, r0
 4018 002e 15D8     		bhi	.L301
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4019              		.loc 1 3327 4 is_stmt 1 view .LVU1112
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4020              		.loc 1 3327 19 is_stmt 0 view .LVU1113
 4021 0030 0023     		movs	r3, #0
 4022 0032 2360     		str	r3, [r4]
 4023              	.LVL279:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4024              		.loc 1 3328 4 is_stmt 1 view .LVU1114
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4025              		.loc 1 3328 12 is_stmt 0 view .LVU1115
 4026 0034 0124     		movs	r4, #1
 4027              	.LVL280:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4028              		.loc 1 3328 12 view .LVU1116
 4029 0036 1AE0     		b	.L292
 4030              	.LVL281:
 4031              	.L299:
 4032              	.LCFI30:
 4033              		.cfi_def_cfa_offset 0
 4034              		.cfi_restore 4
 4035              		.cfi_restore 5
 4036              		.cfi_restore 6
 4037              		.cfi_restore 14
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4038              		.loc 1 3328 12 view .LVU1117
 4039              	.LBE203:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4040              		.loc 1 3278 2 is_stmt 1 view .LVU1118
ARM GAS  /tmp/ccpsiOt9.s 			page 186


 4041              	.LBB204:
 4042              	.LBI204:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4043              		.loc 2 191 30 view .LVU1119
 4044              	.LBB205:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4045              		.loc 2 193 1 view .LVU1120
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4046              		.loc 2 195 2 view .LVU1121
 4047              		.syntax unified
 4048              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4049 0038 4FF05003 			mov r3, #80												
 4050 003c 83F31188 		msr basepri, r3											
 4051 0040 BFF36F8F 		isb														
 4052 0044 BFF34F8F 		dsb														
 4053              	
 4054              	@ 0 "" 2
 4055              	.LVL282:
 4056              		.thumb
 4057              		.syntax unified
 4058              	.L289:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4059              		.loc 2 195 2 is_stmt 0 view .LVU1122
 4060              	.LBE205:
 4061              	.LBE204:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4062              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1123
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4063              		.loc 1 3278 2 discriminator 1 view .LVU1124
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4064              		.loc 1 3278 2 discriminator 1 view .LVU1125
 4065 0048 FEE7     		b	.L289
 4066              	.L300:
 4067              	.LCFI31:
 4068              		.cfi_def_cfa_offset 16
 4069              		.cfi_offset 4, -16
 4070              		.cfi_offset 5, -12
 4071              		.cfi_offset 6, -8
 4072              		.cfi_offset 14, -4
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4073              		.loc 1 3279 2 view .LVU1126
 4074              	.LBB206:
 4075              	.LBI206:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4076              		.loc 2 191 30 view .LVU1127
 4077              	.LBB207:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4078              		.loc 2 193 1 view .LVU1128
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4079              		.loc 2 195 2 view .LVU1129
 4080              		.syntax unified
 4081              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4082 004a 4FF05003 			mov r3, #80												
 4083 004e 83F31188 		msr basepri, r3											
 4084 0052 BFF36F8F 		isb														
 4085 0056 BFF34F8F 		dsb														
 4086              	
ARM GAS  /tmp/ccpsiOt9.s 			page 187


 4087              	@ 0 "" 2
 4088              	.LVL283:
 4089              		.thumb
 4090              		.syntax unified
 4091              	.L291:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4092              		.loc 2 195 2 is_stmt 0 view .LVU1130
 4093              	.LBE207:
 4094              	.LBE206:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4095              		.loc 1 3279 2 is_stmt 1 discriminator 2 view .LVU1131
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4096              		.loc 1 3279 2 discriminator 2 view .LVU1132
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4097              		.loc 1 3279 2 discriminator 2 view .LVU1133
 4098 005a FEE7     		b	.L291
 4099              	.LVL284:
 4100              	.L301:
 4101              	.LBB208:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4102              		.loc 1 3321 4 view .LVU1134
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4103              		.loc 1 3321 19 is_stmt 0 view .LVU1135
 4104 005c 9B1A     		subs	r3, r3, r2
 4105 005e 0B44     		add	r3, r3, r1
 4106 0060 2360     		str	r3, [r4]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4107              		.loc 1 3322 4 is_stmt 1 view .LVU1136
 4108 0062 2846     		mov	r0, r5
 4109 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4110              	.LVL285:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4111              		.loc 1 3323 4 view .LVU1137
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4112              		.loc 1 3323 12 is_stmt 0 view .LVU1138
 4113 0068 0024     		movs	r4, #0
 4114              	.LVL286:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4115              		.loc 1 3323 12 view .LVU1139
 4116 006a 00E0     		b	.L292
 4117              	.LVL287:
 4118              	.L295:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4119              		.loc 1 3304 13 view .LVU1140
 4120 006c 0024     		movs	r4, #0
 4121              	.LVL288:
 4122              	.L292:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4123              		.loc 1 3304 13 view .LVU1141
 4124              	.LBE208:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4125              		.loc 1 3331 2 is_stmt 1 view .LVU1142
 4126 006e FFF7FEFF 		bl	vPortExitCritical
 4127              	.LVL289:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4128              		.loc 1 3333 2 view .LVU1143
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccpsiOt9.s 			page 188


 4129              		.loc 1 3334 1 is_stmt 0 view .LVU1144
 4130 0072 2046     		mov	r0, r4
 4131 0074 70BD     		pop	{r4, r5, r6, pc}
 4132              	.LVL290:
 4133              	.L296:
 4134              	.LBB209:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4135              		.loc 1 3316 12 view .LVU1145
 4136 0076 0124     		movs	r4, #1
 4137              	.LVL291:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4138              		.loc 1 3316 12 view .LVU1146
 4139 0078 F9E7     		b	.L292
 4140              	.L303:
 4141 007a 00BF     		.align	2
 4142              	.L302:
 4143 007c 00000000 		.word	.LANCHOR8
 4144 0080 00000000 		.word	.LANCHOR18
 4145              	.LBE209:
 4146              		.cfi_endproc
 4147              	.LFE34:
 4149              		.section	.text.vTaskMissedYield,"ax",%progbits
 4150              		.align	1
 4151              		.global	vTaskMissedYield
 4152              		.syntax unified
 4153              		.thumb
 4154              		.thumb_func
 4155              		.fpu fpv4-sp-d16
 4157              	vTaskMissedYield:
 4158              	.LFB35:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4159              		.loc 1 3338 1 is_stmt 1 view -0
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 0
 4162              		@ frame_needed = 0, uses_anonymous_args = 0
 4163              		@ link register save eliminated.
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4164              		.loc 1 3339 2 view .LVU1148
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4165              		.loc 1 3339 16 is_stmt 0 view .LVU1149
 4166 0000 014B     		ldr	r3, .L305
 4167 0002 0122     		movs	r2, #1
 4168 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4169              		.loc 1 3340 1 view .LVU1150
 4170 0006 7047     		bx	lr
 4171              	.L306:
 4172              		.align	2
 4173              	.L305:
 4174 0008 00000000 		.word	.LANCHOR19
 4175              		.cfi_endproc
 4176              	.LFE35:
 4178              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4179              		.align	1
 4180              		.global	xTaskGetCurrentTaskHandle
 4181              		.syntax unified
 4182              		.thumb
ARM GAS  /tmp/ccpsiOt9.s 			page 189


 4183              		.thumb_func
 4184              		.fpu fpv4-sp-d16
 4186              	xTaskGetCurrentTaskHandle:
 4187              	.LFB41:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4188              		.loc 1 3970 2 is_stmt 1 view -0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 0
 4191              		@ frame_needed = 0, uses_anonymous_args = 0
 4192              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4193              		.loc 1 3971 2 view .LVU1152
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4194              		.loc 1 3976 3 view .LVU1153
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4195              		.loc 1 3976 11 is_stmt 0 view .LVU1154
 4196 0000 014B     		ldr	r3, .L308
 4197 0002 1868     		ldr	r0, [r3]
 4198              	.LVL292:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4199              		.loc 1 3978 3 is_stmt 1 view .LVU1155
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4200              		.loc 1 3979 2 is_stmt 0 view .LVU1156
 4201 0004 7047     		bx	lr
 4202              	.L309:
 4203 0006 00BF     		.align	2
 4204              	.L308:
 4205 0008 00000000 		.word	.LANCHOR9
 4206              		.cfi_endproc
 4207              	.LFE41:
 4209              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4210              		.align	1
 4211              		.global	xTaskGetSchedulerState
 4212              		.syntax unified
 4213              		.thumb
 4214              		.thumb_func
 4215              		.fpu fpv4-sp-d16
 4217              	xTaskGetSchedulerState:
 4218              	.LFB42:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4219              		.loc 1 3987 2 is_stmt 1 view -0
 4220              		.cfi_startproc
 4221              		@ args = 0, pretend = 0, frame = 0
 4222              		@ frame_needed = 0, uses_anonymous_args = 0
 4223              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4224              		.loc 1 3988 2 view .LVU1158
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4225              		.loc 1 3990 3 view .LVU1159
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4226              		.loc 1 3990 25 is_stmt 0 view .LVU1160
 4227 0000 054B     		ldr	r3, .L314
 4228 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4229              		.loc 1 3990 5 view .LVU1161
 4230 0004 33B1     		cbz	r3, .L312
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccpsiOt9.s 			page 190


 4231              		.loc 1 3996 4 is_stmt 1 view .LVU1162
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4232              		.loc 1 3996 29 is_stmt 0 view .LVU1163
 4233 0006 054B     		ldr	r3, .L314+4
 4234 0008 1B68     		ldr	r3, [r3]
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4235              		.loc 1 4002 13 view .LVU1164
 4236 000a 002B     		cmp	r3, #0
 4237 000c 0CBF     		ite	eq
 4238 000e 0220     		moveq	r0, #2
 4239 0010 0020     		movne	r0, #0
 4240 0012 7047     		bx	lr
 4241              	.L312:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4242              		.loc 1 3992 12 view .LVU1165
 4243 0014 0120     		movs	r0, #1
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4244              		.loc 1 4007 2 view .LVU1166
 4245 0016 7047     		bx	lr
 4246              	.L315:
 4247              		.align	2
 4248              	.L314:
 4249 0018 00000000 		.word	.LANCHOR14
 4250 001c 00000000 		.word	.LANCHOR16
 4251              		.cfi_endproc
 4252              	.LFE42:
 4254              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4255              		.align	1
 4256              		.global	xTaskPriorityInherit
 4257              		.syntax unified
 4258              		.thumb
 4259              		.thumb_func
 4260              		.fpu fpv4-sp-d16
 4262              	xTaskPriorityInherit:
 4263              	.LVL293:
 4264              	.LFB43:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4265              		.loc 1 4015 2 is_stmt 1 view -0
 4266              		.cfi_startproc
 4267              		@ args = 0, pretend = 0, frame = 0
 4268              		@ frame_needed = 0, uses_anonymous_args = 0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4269              		.loc 1 4016 2 view .LVU1168
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4270              		.loc 1 4017 2 view .LVU1169
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4271              		.loc 1 4022 3 view .LVU1170
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4272              		.loc 1 4022 5 is_stmt 0 view .LVU1171
 4273 0000 0028     		cmp	r0, #0
 4274 0002 49D0     		beq	.L322
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4275              		.loc 1 4015 2 view .LVU1172
 4276 0004 38B5     		push	{r3, r4, r5, lr}
 4277              	.LCFI32:
 4278              		.cfi_def_cfa_offset 16
 4279              		.cfi_offset 3, -16
ARM GAS  /tmp/ccpsiOt9.s 			page 191


 4280              		.cfi_offset 4, -12
 4281              		.cfi_offset 5, -8
 4282              		.cfi_offset 14, -4
 4283 0006 0446     		mov	r4, r0
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4284              		.loc 1 4027 4 is_stmt 1 view .LVU1173
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4285              		.loc 1 4027 24 is_stmt 0 view .LVU1174
 4286 0008 C36A     		ldr	r3, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4287              		.loc 1 4027 51 view .LVU1175
 4288 000a 244A     		ldr	r2, .L328
 4289 000c 1268     		ldr	r2, [r2]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4290              		.loc 1 4027 6 view .LVU1176
 4291 000e D26A     		ldr	r2, [r2, #44]
 4292 0010 9342     		cmp	r3, r2
 4293 0012 38D2     		bcs	.L318
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4294              		.loc 1 4032 5 is_stmt 1 view .LVU1177
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4295              		.loc 1 4032 7 is_stmt 0 view .LVU1178
 4296 0014 8269     		ldr	r2, [r0, #24]
 4297 0016 002A     		cmp	r2, #0
 4298 0018 05DB     		blt	.L319
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4299              		.loc 1 4034 6 is_stmt 1 view .LVU1179
 4300 001a 204A     		ldr	r2, .L328
 4301 001c 1268     		ldr	r2, [r2]
 4302 001e D26A     		ldr	r2, [r2, #44]
 4303 0020 C2F10702 		rsb	r2, r2, #7
 4304 0024 8261     		str	r2, [r0, #24]
 4305              	.L319:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4306              		.loc 1 4038 30 view .LVU1180
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4307              		.loc 1 4043 5 view .LVU1181
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4308              		.loc 1 4043 9 is_stmt 0 view .LVU1182
 4309 0026 03EB8303 		add	r3, r3, r3, lsl #2
 4310 002a 1D4A     		ldr	r2, .L328+4
 4311 002c 02EB8303 		add	r3, r2, r3, lsl #2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4312              		.loc 1 4043 7 view .LVU1183
 4313 0030 6269     		ldr	r2, [r4, #20]
 4314 0032 9A42     		cmp	r2, r3
 4315 0034 05D0     		beq	.L327
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4316              		.loc 1 4064 6 is_stmt 1 view .LVU1184
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4317              		.loc 1 4064 49 is_stmt 0 view .LVU1185
 4318 0036 194B     		ldr	r3, .L328
 4319 0038 1B68     		ldr	r3, [r3]
 4320 003a DB6A     		ldr	r3, [r3, #44]
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4321              		.loc 1 4064 35 view .LVU1186
 4322 003c E362     		str	r3, [r4, #44]
ARM GAS  /tmp/ccpsiOt9.s 			page 192


4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4323              		.loc 1 4070 13 view .LVU1187
 4324 003e 0120     		movs	r0, #1
 4325              	.LVL294:
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4326              		.loc 1 4070 13 view .LVU1188
 4327 0040 29E0     		b	.L316
 4328              	.LVL295:
 4329              	.L327:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4330              		.loc 1 4045 6 is_stmt 1 view .LVU1189
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4331              		.loc 1 4045 10 is_stmt 0 view .LVU1190
 4332 0042 251D     		adds	r5, r4, #4
 4333 0044 2846     		mov	r0, r5
 4334              	.LVL296:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4335              		.loc 1 4045 10 view .LVU1191
 4336 0046 FFF7FEFF 		bl	uxListRemove
 4337              	.LVL297:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4338              		.loc 1 4045 8 view .LVU1192
 4339 004a 38B9     		cbnz	r0, .L321
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4340              		.loc 1 4050 7 is_stmt 1 view .LVU1193
 4341 004c 1549     		ldr	r1, .L328+8
 4342 004e 0B68     		ldr	r3, [r1]
 4343 0050 E06A     		ldr	r0, [r4, #44]
 4344 0052 0122     		movs	r2, #1
 4345 0054 8240     		lsls	r2, r2, r0
 4346 0056 23EA0203 		bic	r3, r3, r2
 4347 005a 0B60     		str	r3, [r1]
 4348              	.L321:
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4349              		.loc 1 4054 31 view .LVU1194
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4350              		.loc 1 4058 6 view .LVU1195
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4351              		.loc 1 4058 49 is_stmt 0 view .LVU1196
 4352 005c 0F4B     		ldr	r3, .L328
 4353 005e 1B68     		ldr	r3, [r3]
 4354 0060 D86A     		ldr	r0, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4355              		.loc 1 4058 35 view .LVU1197
 4356 0062 E062     		str	r0, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4357              		.loc 1 4059 6 is_stmt 1 view .LVU1198
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4358              		.loc 1 4059 6 view .LVU1199
 4359 0064 0F4A     		ldr	r2, .L328+8
 4360 0066 1168     		ldr	r1, [r2]
 4361 0068 0124     		movs	r4, #1
 4362              	.LVL298:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4363              		.loc 1 4059 6 is_stmt 0 view .LVU1200
 4364 006a 04FA00F3 		lsl	r3, r4, r0
 4365 006e 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccpsiOt9.s 			page 193


 4366 0070 1360     		str	r3, [r2]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4367              		.loc 1 4059 6 is_stmt 1 view .LVU1201
 4368 0072 00EB8000 		add	r0, r0, r0, lsl #2
 4369 0076 2946     		mov	r1, r5
 4370 0078 094B     		ldr	r3, .L328+4
 4371 007a 03EB8000 		add	r0, r3, r0, lsl #2
 4372 007e FFF7FEFF 		bl	vListInsertEnd
 4373              	.LVL299:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4374              		.loc 1 4059 47 view .LVU1202
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4375              		.loc 1 4070 13 is_stmt 0 view .LVU1203
 4376 0082 2046     		mov	r0, r4
 4377 0084 07E0     		b	.L316
 4378              	.LVL300:
 4379              	.L318:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4380              		.loc 1 4074 5 is_stmt 1 view .LVU1204
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4381              		.loc 1 4074 56 is_stmt 0 view .LVU1205
 4382 0086 054B     		ldr	r3, .L328
 4383 0088 1B68     		ldr	r3, [r3]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4384              		.loc 1 4074 7 view .LVU1206
 4385 008a 406C     		ldr	r0, [r0, #68]
 4386              	.LVL301:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4387              		.loc 1 4074 7 view .LVU1207
 4388 008c DB6A     		ldr	r3, [r3, #44]
 4389 008e 9842     		cmp	r0, r3
 4390 0090 2CBF     		ite	cs
 4391 0092 0020     		movcs	r0, #0
 4392 0094 0120     		movcc	r0, #1
 4393              	.LVL302:
 4394              	.L316:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4395              		.loc 1 4097 2 view .LVU1208
 4396 0096 38BD     		pop	{r3, r4, r5, pc}
 4397              	.LVL303:
 4398              	.L322:
 4399              	.LCFI33:
 4400              		.cfi_def_cfa_offset 0
 4401              		.cfi_restore 3
 4402              		.cfi_restore 4
 4403              		.cfi_restore 5
 4404              		.cfi_restore 14
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4405              		.loc 1 4017 13 view .LVU1209
 4406 0098 0020     		movs	r0, #0
 4407              	.LVL304:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4408              		.loc 1 4093 28 is_stmt 1 view .LVU1210
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4409              		.loc 1 4096 3 view .LVU1211
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4410              		.loc 1 4097 2 is_stmt 0 view .LVU1212
ARM GAS  /tmp/ccpsiOt9.s 			page 194


 4411 009a 7047     		bx	lr
 4412              	.L329:
 4413              		.align	2
 4414              	.L328:
 4415 009c 00000000 		.word	.LANCHOR9
 4416 00a0 00000000 		.word	.LANCHOR7
 4417 00a4 00000000 		.word	.LANCHOR10
 4418              		.cfi_endproc
 4419              	.LFE43:
 4421              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4422              		.align	1
 4423              		.global	xTaskPriorityDisinherit
 4424              		.syntax unified
 4425              		.thumb
 4426              		.thumb_func
 4427              		.fpu fpv4-sp-d16
 4429              	xTaskPriorityDisinherit:
 4430              	.LVL305:
 4431              	.LFB44:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4432              		.loc 1 4105 2 is_stmt 1 view -0
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 0
 4435              		@ frame_needed = 0, uses_anonymous_args = 0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4436              		.loc 1 4106 2 view .LVU1214
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4437              		.loc 1 4107 2 view .LVU1215
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4438              		.loc 1 4109 3 view .LVU1216
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4439              		.loc 1 4109 5 is_stmt 0 view .LVU1217
 4440 0000 0028     		cmp	r0, #0
 4441 0002 4BD0     		beq	.L337
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4442              		.loc 1 4105 2 view .LVU1218
 4443 0004 38B5     		push	{r3, r4, r5, lr}
 4444              	.LCFI34:
 4445              		.cfi_def_cfa_offset 16
 4446              		.cfi_offset 3, -16
 4447              		.cfi_offset 4, -12
 4448              		.cfi_offset 5, -8
 4449              		.cfi_offset 14, -4
 4450 0006 0446     		mov	r4, r0
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4451              		.loc 1 4115 4 is_stmt 1 view .LVU1219
 4452 0008 264B     		ldr	r3, .L345
 4453 000a 1B68     		ldr	r3, [r3]
 4454 000c 8342     		cmp	r3, r0
 4455 000e 08D0     		beq	.L332
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4456              		.loc 1 4115 4 view .LVU1220
 4457              	.LBB210:
 4458              	.LBI210:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4459              		.loc 2 191 30 view .LVU1221
 4460              	.LBB211:
ARM GAS  /tmp/ccpsiOt9.s 			page 195


 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4461              		.loc 2 193 1 view .LVU1222
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4462              		.loc 2 195 2 view .LVU1223
 4463              		.syntax unified
 4464              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4465 0010 4FF05003 			mov r3, #80												
 4466 0014 83F31188 		msr basepri, r3											
 4467 0018 BFF36F8F 		isb														
 4468 001c BFF34F8F 		dsb														
 4469              	
 4470              	@ 0 "" 2
 4471              	.LVL306:
 4472              		.thumb
 4473              		.syntax unified
 4474              	.L333:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4475              		.loc 2 195 2 is_stmt 0 view .LVU1224
 4476              	.LBE211:
 4477              	.LBE210:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4478              		.loc 1 4115 4 is_stmt 1 discriminator 1 view .LVU1225
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4479              		.loc 1 4115 4 discriminator 1 view .LVU1226
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4480              		.loc 1 4115 4 discriminator 1 view .LVU1227
 4481 0020 FEE7     		b	.L333
 4482              	.L332:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4483              		.loc 1 4115 41 discriminator 2 view .LVU1228
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4484              		.loc 1 4116 4 discriminator 2 view .LVU1229
 4485 0022 836C     		ldr	r3, [r0, #72]
 4486 0024 43B9     		cbnz	r3, .L334
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4487              		.loc 1 4116 4 view .LVU1230
 4488              	.LBB212:
 4489              	.LBI212:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4490              		.loc 2 191 30 view .LVU1231
 4491              	.LBB213:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4492              		.loc 2 193 1 view .LVU1232
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4493              		.loc 2 195 2 view .LVU1233
 4494              		.syntax unified
 4495              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4496 0026 4FF05003 			mov r3, #80												
 4497 002a 83F31188 		msr basepri, r3											
 4498 002e BFF36F8F 		isb														
 4499 0032 BFF34F8F 		dsb														
 4500              	
 4501              	@ 0 "" 2
 4502              	.LVL307:
 4503              		.thumb
 4504              		.syntax unified
 4505              	.L335:
ARM GAS  /tmp/ccpsiOt9.s 			page 196


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4506              		.loc 2 195 2 is_stmt 0 view .LVU1234
 4507              	.LBE213:
 4508              	.LBE212:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4509              		.loc 1 4116 4 is_stmt 1 discriminator 2 view .LVU1235
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4510              		.loc 1 4116 4 discriminator 2 view .LVU1236
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4511              		.loc 1 4116 4 discriminator 2 view .LVU1237
 4512 0036 FEE7     		b	.L335
 4513              	.L334:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4514              		.loc 1 4116 40 discriminator 2 view .LVU1238
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4515              		.loc 1 4117 4 discriminator 2 view .LVU1239
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4516              		.loc 1 4117 28 is_stmt 0 discriminator 2 view .LVU1240
 4517 0038 013B     		subs	r3, r3, #1
 4518 003a 8364     		str	r3, [r0, #72]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4519              		.loc 1 4121 4 is_stmt 1 discriminator 2 view .LVU1241
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4520              		.loc 1 4121 6 is_stmt 0 discriminator 2 view .LVU1242
 4521 003c C16A     		ldr	r1, [r0, #44]
 4522 003e 426C     		ldr	r2, [r0, #68]
 4523 0040 9142     		cmp	r1, r2
 4524 0042 2DD0     		beq	.L338
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4525              		.loc 1 4124 5 is_stmt 1 view .LVU1243
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4526              		.loc 1 4124 7 is_stmt 0 view .LVU1244
 4527 0044 0BB1     		cbz	r3, .L344
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4528              		.loc 1 4107 13 view .LVU1245
 4529 0046 0020     		movs	r0, #0
 4530              	.LVL308:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4531              		.loc 1 4173 28 is_stmt 1 view .LVU1246
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4532              		.loc 1 4176 3 view .LVU1247
 4533              	.L330:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4534              		.loc 1 4177 2 is_stmt 0 view .LVU1248
 4535 0048 38BD     		pop	{r3, r4, r5, pc}
 4536              	.LVL309:
 4537              	.L344:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4538              		.loc 1 4131 6 is_stmt 1 view .LVU1249
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4539              		.loc 1 4131 10 is_stmt 0 view .LVU1250
 4540 004a 051D     		adds	r5, r0, #4
 4541 004c 2846     		mov	r0, r5
 4542              	.LVL310:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4543              		.loc 1 4131 10 view .LVU1251
 4544 004e FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccpsiOt9.s 			page 197


 4545              	.LVL311:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4546              		.loc 1 4131 8 view .LVU1252
 4547 0052 68B9     		cbnz	r0, .L336
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4548              		.loc 1 4133 7 is_stmt 1 view .LVU1253
 4549 0054 E16A     		ldr	r1, [r4, #44]
 4550 0056 01EB8103 		add	r3, r1, r1, lsl #2
 4551 005a 9B00     		lsls	r3, r3, #2
 4552 005c 124A     		ldr	r2, .L345+4
 4553 005e D358     		ldr	r3, [r2, r3]
 4554 0060 33B9     		cbnz	r3, .L336
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4555              		.loc 1 4133 7 discriminator 1 view .LVU1254
 4556 0062 1248     		ldr	r0, .L345+8
 4557 0064 0368     		ldr	r3, [r0]
 4558 0066 0122     		movs	r2, #1
 4559 0068 8A40     		lsls	r2, r2, r1
 4560 006a 23EA0203 		bic	r3, r3, r2
 4561 006e 0360     		str	r3, [r0]
 4562              	.L336:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4563              		.loc 1 4137 31 view .LVU1255
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4564              		.loc 1 4142 67 view .LVU1256
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4565              		.loc 1 4143 6 view .LVU1257
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4566              		.loc 1 4143 31 is_stmt 0 view .LVU1258
 4567 0070 606C     		ldr	r0, [r4, #68]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4568              		.loc 1 4143 24 view .LVU1259
 4569 0072 E062     		str	r0, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4570              		.loc 1 4148 6 is_stmt 1 view .LVU1260
 4571 0074 C0F10703 		rsb	r3, r0, #7
 4572 0078 A361     		str	r3, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4573              		.loc 1 4149 6 view .LVU1261
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4574              		.loc 1 4149 6 view .LVU1262
 4575 007a 0C4A     		ldr	r2, .L345+8
 4576 007c 1168     		ldr	r1, [r2]
 4577 007e 0124     		movs	r4, #1
 4578              	.LVL312:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4579              		.loc 1 4149 6 is_stmt 0 view .LVU1263
 4580 0080 04FA00F3 		lsl	r3, r4, r0
 4581 0084 0B43     		orrs	r3, r3, r1
 4582 0086 1360     		str	r3, [r2]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4583              		.loc 1 4149 6 is_stmt 1 view .LVU1264
 4584 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4585 008c 2946     		mov	r1, r5
 4586 008e 064B     		ldr	r3, .L345+4
 4587 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4588 0094 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccpsiOt9.s 			page 198


 4589              	.LVL313:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4590              		.loc 1 4149 36 view .LVU1265
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4591              		.loc 1 4159 6 view .LVU1266
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4592              		.loc 1 4159 14 is_stmt 0 view .LVU1267
 4593 0098 2046     		mov	r0, r4
 4594 009a D5E7     		b	.L330
 4595              	.LVL314:
 4596              	.L337:
 4597              	.LCFI35:
 4598              		.cfi_def_cfa_offset 0
 4599              		.cfi_restore 3
 4600              		.cfi_restore 4
 4601              		.cfi_restore 5
 4602              		.cfi_restore 14
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4603              		.loc 1 4107 13 view .LVU1268
 4604 009c 0020     		movs	r0, #0
 4605              	.LVL315:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4606              		.loc 1 4177 2 view .LVU1269
 4607 009e 7047     		bx	lr
 4608              	.LVL316:
 4609              	.L338:
 4610              	.LCFI36:
 4611              		.cfi_def_cfa_offset 16
 4612              		.cfi_offset 3, -16
 4613              		.cfi_offset 4, -12
 4614              		.cfi_offset 5, -8
 4615              		.cfi_offset 14, -4
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4616              		.loc 1 4107 13 view .LVU1270
 4617 00a0 0020     		movs	r0, #0
 4618              	.LVL317:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4619              		.loc 1 4107 13 view .LVU1271
 4620 00a2 D1E7     		b	.L330
 4621              	.L346:
 4622              		.align	2
 4623              	.L345:
 4624 00a4 00000000 		.word	.LANCHOR9
 4625 00a8 00000000 		.word	.LANCHOR7
 4626 00ac 00000000 		.word	.LANCHOR10
 4627              		.cfi_endproc
 4628              	.LFE44:
 4630              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4631              		.align	1
 4632              		.global	vTaskPriorityDisinheritAfterTimeout
 4633              		.syntax unified
 4634              		.thumb
 4635              		.thumb_func
 4636              		.fpu fpv4-sp-d16
 4638              	vTaskPriorityDisinheritAfterTimeout:
 4639              	.LVL318:
 4640              	.LFB45:
ARM GAS  /tmp/ccpsiOt9.s 			page 199


4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4641              		.loc 1 4185 2 is_stmt 1 view -0
 4642              		.cfi_startproc
 4643              		@ args = 0, pretend = 0, frame = 0
 4644              		@ frame_needed = 0, uses_anonymous_args = 0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4645              		.loc 1 4186 2 view .LVU1273
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4646              		.loc 1 4187 2 view .LVU1274
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4647              		.loc 1 4188 2 view .LVU1275
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4648              		.loc 1 4190 3 view .LVU1276
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4649              		.loc 1 4190 5 is_stmt 0 view .LVU1277
 4650 0000 0028     		cmp	r0, #0
 4651 0002 4FD0     		beq	.L356
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4652              		.loc 1 4185 2 view .LVU1278
 4653 0004 38B5     		push	{r3, r4, r5, lr}
 4654              	.LCFI37:
 4655              		.cfi_def_cfa_offset 16
 4656              		.cfi_offset 3, -16
 4657              		.cfi_offset 4, -12
 4658              		.cfi_offset 5, -8
 4659              		.cfi_offset 14, -4
 4660 0006 0446     		mov	r4, r0
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4661              		.loc 1 4194 4 is_stmt 1 view .LVU1279
 4662 0008 836C     		ldr	r3, [r0, #72]
 4663 000a 43B9     		cbnz	r3, .L349
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4664              		.loc 1 4194 4 view .LVU1280
 4665              	.LBB214:
 4666              	.LBI214:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4667              		.loc 2 191 30 view .LVU1281
 4668              	.LBB215:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4669              		.loc 2 193 1 view .LVU1282
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4670              		.loc 2 195 2 view .LVU1283
 4671              		.syntax unified
 4672              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4673 000c 4FF05003 			mov r3, #80												
 4674 0010 83F31188 		msr basepri, r3											
 4675 0014 BFF36F8F 		isb														
 4676 0018 BFF34F8F 		dsb														
 4677              	
 4678              	@ 0 "" 2
 4679              	.LVL319:
 4680              		.thumb
 4681              		.syntax unified
 4682              	.L350:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4683              		.loc 2 195 2 is_stmt 0 view .LVU1284
 4684              	.LBE215:
ARM GAS  /tmp/ccpsiOt9.s 			page 200


 4685              	.LBE214:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4686              		.loc 1 4194 4 is_stmt 1 discriminator 1 view .LVU1285
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4687              		.loc 1 4194 4 discriminator 1 view .LVU1286
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4688              		.loc 1 4194 4 discriminator 1 view .LVU1287
 4689 001c FEE7     		b	.L350
 4690              	.L349:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4691              		.loc 1 4194 40 discriminator 2 view .LVU1288
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4692              		.loc 1 4200 4 discriminator 2 view .LVU1289
 4693 001e 426C     		ldr	r2, [r0, #68]
 4694 0020 9142     		cmp	r1, r2
 4695 0022 38BF     		it	cc
 4696 0024 1146     		movcc	r1, r2
 4697              	.LVL320:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4698              		.loc 1 4210 4 discriminator 2 view .LVU1290
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4699              		.loc 1 4210 13 is_stmt 0 discriminator 2 view .LVU1291
 4700 0026 C26A     		ldr	r2, [r0, #44]
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4701              		.loc 1 4210 6 discriminator 2 view .LVU1292
 4702 0028 8A42     		cmp	r2, r1
 4703 002a 01D0     		beq	.L347
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4704              		.loc 1 4216 5 is_stmt 1 view .LVU1293
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4705              		.loc 1 4216 7 is_stmt 0 view .LVU1294
 4706 002c 012B     		cmp	r3, #1
 4707 002e 00D0     		beq	.L359
 4708              	.LVL321:
 4709              	.L347:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4710              		.loc 1 4282 2 view .LVU1295
 4711 0030 38BD     		pop	{r3, r4, r5, pc}
 4712              	.LVL322:
 4713              	.L359:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4714              		.loc 1 4221 6 is_stmt 1 view .LVU1296
 4715 0032 1D4B     		ldr	r3, .L361
 4716 0034 1B68     		ldr	r3, [r3]
 4717 0036 8342     		cmp	r3, r0
 4718 0038 2BD0     		beq	.L360
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4719              		.loc 1 4221 43 discriminator 2 view .LVU1297
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4720              		.loc 1 4226 67 discriminator 2 view .LVU1298
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4721              		.loc 1 4227 6 discriminator 2 view .LVU1299
 4722              	.LVL323:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4723              		.loc 1 4228 6 discriminator 2 view .LVU1300
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4724              		.loc 1 4228 24 is_stmt 0 discriminator 2 view .LVU1301
ARM GAS  /tmp/ccpsiOt9.s 			page 201


 4725 003a C162     		str	r1, [r0, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4726              		.loc 1 4232 6 is_stmt 1 discriminator 2 view .LVU1302
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4727              		.loc 1 4232 8 is_stmt 0 discriminator 2 view .LVU1303
 4728 003c 8369     		ldr	r3, [r0, #24]
 4729 003e 002B     		cmp	r3, #0
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4730              		.loc 1 4234 7 is_stmt 1 discriminator 2 view .LVU1304
 4731 0040 A4BF     		itt	ge
 4732 0042 C1F10701 		rsbge	r1, r1, #7
 4733              	.LVL324:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4734              		.loc 1 4234 7 is_stmt 0 discriminator 2 view .LVU1305
 4735 0046 8161     		strge	r1, [r0, #24]
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4736              		.loc 1 4238 31 is_stmt 1 discriminator 2 view .LVU1306
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4737              		.loc 1 4247 6 discriminator 2 view .LVU1307
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4738              		.loc 1 4247 10 is_stmt 0 discriminator 2 view .LVU1308
 4739 0048 02EB8202 		add	r2, r2, r2, lsl #2
 4740              	.LVL325:
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4741              		.loc 1 4247 10 discriminator 2 view .LVU1309
 4742 004c 174B     		ldr	r3, .L361+4
 4743 004e 03EB8202 		add	r2, r3, r2, lsl #2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4744              		.loc 1 4247 8 discriminator 2 view .LVU1310
 4745 0052 4369     		ldr	r3, [r0, #20]
 4746 0054 9342     		cmp	r3, r2
 4747 0056 EBD1     		bne	.L347
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4748              		.loc 1 4249 7 is_stmt 1 view .LVU1311
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4749              		.loc 1 4249 11 is_stmt 0 view .LVU1312
 4750 0058 051D     		adds	r5, r0, #4
 4751 005a 2846     		mov	r0, r5
 4752              	.LVL326:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4753              		.loc 1 4249 11 view .LVU1313
 4754 005c FFF7FEFF 		bl	uxListRemove
 4755              	.LVL327:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4756              		.loc 1 4249 9 view .LVU1314
 4757 0060 38B9     		cbnz	r0, .L354
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4758              		.loc 1 4254 8 is_stmt 1 view .LVU1315
 4759 0062 1349     		ldr	r1, .L361+8
 4760 0064 0B68     		ldr	r3, [r1]
 4761 0066 E06A     		ldr	r0, [r4, #44]
 4762 0068 0122     		movs	r2, #1
 4763 006a 8240     		lsls	r2, r2, r0
 4764 006c 23EA0203 		bic	r3, r3, r2
 4765 0070 0B60     		str	r3, [r1]
 4766              	.L354:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/ccpsiOt9.s 			page 202


 4767              		.loc 1 4258 32 view .LVU1316
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4768              		.loc 1 4261 7 view .LVU1317
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4769              		.loc 1 4261 7 view .LVU1318
 4770 0072 E06A     		ldr	r0, [r4, #44]
 4771 0074 0E4A     		ldr	r2, .L361+8
 4772 0076 1168     		ldr	r1, [r2]
 4773 0078 0123     		movs	r3, #1
 4774 007a 8340     		lsls	r3, r3, r0
 4775 007c 0B43     		orrs	r3, r3, r1
 4776 007e 1360     		str	r3, [r2]
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4777              		.loc 1 4261 7 view .LVU1319
 4778 0080 00EB8000 		add	r0, r0, r0, lsl #2
 4779 0084 2946     		mov	r1, r5
 4780 0086 094B     		ldr	r3, .L361+4
 4781 0088 03EB8000 		add	r0, r3, r0, lsl #2
 4782 008c FFF7FEFF 		bl	vListInsertEnd
 4783              	.LVL328:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4784              		.loc 1 4261 37 view .LVU1320
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4785              		.loc 1 4280 28 view .LVU1321
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4786              		.loc 1 4282 2 is_stmt 0 view .LVU1322
 4787 0090 CEE7     		b	.L347
 4788              	.LVL329:
 4789              	.L360:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4790              		.loc 1 4221 6 is_stmt 1 view .LVU1323
 4791              	.LBB216:
 4792              	.LBI216:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4793              		.loc 2 191 30 view .LVU1324
 4794              	.LBB217:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4795              		.loc 2 193 1 view .LVU1325
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4796              		.loc 2 195 2 view .LVU1326
 4797              		.syntax unified
 4798              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4799 0092 4FF05003 			mov r3, #80												
 4800 0096 83F31188 		msr basepri, r3											
 4801 009a BFF36F8F 		isb														
 4802 009e BFF34F8F 		dsb														
 4803              	
 4804              	@ 0 "" 2
 4805              	.LVL330:
 4806              		.thumb
 4807              		.syntax unified
 4808              	.L352:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4809              		.loc 2 195 2 is_stmt 0 view .LVU1327
 4810              	.LBE217:
 4811              	.LBE216:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 203


 4812              		.loc 1 4221 6 is_stmt 1 discriminator 2 view .LVU1328
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4813              		.loc 1 4221 6 discriminator 2 view .LVU1329
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4814              		.loc 1 4221 6 discriminator 2 view .LVU1330
 4815 00a2 FEE7     		b	.L352
 4816              	.LVL331:
 4817              	.L356:
 4818              	.LCFI38:
 4819              		.cfi_def_cfa_offset 0
 4820              		.cfi_restore 3
 4821              		.cfi_restore 4
 4822              		.cfi_restore 5
 4823              		.cfi_restore 14
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4824              		.loc 1 4221 6 is_stmt 0 discriminator 2 view .LVU1331
 4825 00a4 7047     		bx	lr
 4826              	.L362:
 4827 00a6 00BF     		.align	2
 4828              	.L361:
 4829 00a8 00000000 		.word	.LANCHOR9
 4830 00ac 00000000 		.word	.LANCHOR7
 4831 00b0 00000000 		.word	.LANCHOR10
 4832              		.cfi_endproc
 4833              	.LFE45:
 4835              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4836              		.align	1
 4837              		.global	uxTaskResetEventItemValue
 4838              		.syntax unified
 4839              		.thumb
 4840              		.thumb_func
 4841              		.fpu fpv4-sp-d16
 4843              	uxTaskResetEventItemValue:
 4844              	.LFB46:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 4845              		.loc 1 4603 1 is_stmt 1 view -0
 4846              		.cfi_startproc
 4847              		@ args = 0, pretend = 0, frame = 0
 4848              		@ frame_needed = 0, uses_anonymous_args = 0
 4849              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4850              		.loc 1 4604 1 view .LVU1333
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4851              		.loc 1 4606 2 view .LVU1334
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4852              		.loc 1 4606 13 is_stmt 0 view .LVU1335
 4853 0000 044B     		ldr	r3, .L364
 4854 0002 1A68     		ldr	r2, [r3]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4855              		.loc 1 4606 11 view .LVU1336
 4856 0004 9069     		ldr	r0, [r2, #24]
 4857              	.LVL332:
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4858              		.loc 1 4610 2 is_stmt 1 view .LVU1337
 4859 0006 1968     		ldr	r1, [r3]
 4860 0008 1A68     		ldr	r2, [r3]
 4861 000a CB6A     		ldr	r3, [r1, #44]
ARM GAS  /tmp/ccpsiOt9.s 			page 204


 4862 000c C3F10703 		rsb	r3, r3, #7
 4863 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4864              		.loc 1 4612 2 view .LVU1338
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4865              		.loc 1 4613 1 is_stmt 0 view .LVU1339
 4866 0012 7047     		bx	lr
 4867              	.L365:
 4868              		.align	2
 4869              	.L364:
 4870 0014 00000000 		.word	.LANCHOR9
 4871              		.cfi_endproc
 4872              	.LFE46:
 4874              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4875              		.align	1
 4876              		.global	pvTaskIncrementMutexHeldCount
 4877              		.syntax unified
 4878              		.thumb
 4879              		.thumb_func
 4880              		.fpu fpv4-sp-d16
 4882              	pvTaskIncrementMutexHeldCount:
 4883              	.LFB47:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4884              		.loc 1 4619 2 is_stmt 1 view -0
 4885              		.cfi_startproc
 4886              		@ args = 0, pretend = 0, frame = 0
 4887              		@ frame_needed = 0, uses_anonymous_args = 0
 4888              		@ link register save eliminated.
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4889              		.loc 1 4622 3 view .LVU1341
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4890              		.loc 1 4622 20 is_stmt 0 view .LVU1342
 4891 0000 054B     		ldr	r3, .L368
 4892 0002 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4893              		.loc 1 4622 5 view .LVU1343
 4894 0004 23B1     		cbz	r3, .L367
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4895              		.loc 1 4624 4 is_stmt 1 view .LVU1344
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4896              		.loc 1 4624 18 is_stmt 0 view .LVU1345
 4897 0006 044B     		ldr	r3, .L368
 4898 0008 1A68     		ldr	r2, [r3]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4899              		.loc 1 4624 35 view .LVU1346
 4900 000a 936C     		ldr	r3, [r2, #72]
 4901 000c 0133     		adds	r3, r3, #1
 4902 000e 9364     		str	r3, [r2, #72]
 4903              	.L367:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4904              		.loc 1 4627 3 is_stmt 1 view .LVU1347
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4905              		.loc 1 4627 10 is_stmt 0 view .LVU1348
 4906 0010 014B     		ldr	r3, .L368
 4907 0012 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4908              		.loc 1 4628 2 view .LVU1349
ARM GAS  /tmp/ccpsiOt9.s 			page 205


 4909 0014 7047     		bx	lr
 4910              	.L369:
 4911 0016 00BF     		.align	2
 4912              	.L368:
 4913 0018 00000000 		.word	.LANCHOR9
 4914              		.cfi_endproc
 4915              	.LFE47:
 4917              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4918              		.align	1
 4919              		.global	ulTaskNotifyTake
 4920              		.syntax unified
 4921              		.thumb
 4922              		.thumb_func
 4923              		.fpu fpv4-sp-d16
 4925              	ulTaskNotifyTake:
 4926              	.LVL333:
 4927              	.LFB48:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4928              		.loc 1 4636 2 is_stmt 1 view -0
 4929              		.cfi_startproc
 4930              		@ args = 0, pretend = 0, frame = 0
 4931              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4932              		.loc 1 4636 2 is_stmt 0 view .LVU1351
 4933 0000 38B5     		push	{r3, r4, r5, lr}
 4934              	.LCFI39:
 4935              		.cfi_def_cfa_offset 16
 4936              		.cfi_offset 3, -16
 4937              		.cfi_offset 4, -12
 4938              		.cfi_offset 5, -8
 4939              		.cfi_offset 14, -4
 4940 0002 0546     		mov	r5, r0
 4941 0004 0C46     		mov	r4, r1
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4942              		.loc 1 4637 2 is_stmt 1 view .LVU1352
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4943              		.loc 1 4639 3 view .LVU1353
 4944 0006 FFF7FEFF 		bl	vPortEnterCritical
 4945              	.LVL334:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4946              		.loc 1 4642 4 view .LVU1354
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4947              		.loc 1 4642 20 is_stmt 0 view .LVU1355
 4948 000a 1A4B     		ldr	r3, .L376
 4949 000c 1B68     		ldr	r3, [r3]
 4950 000e DB6C     		ldr	r3, [r3, #76]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4951              		.loc 1 4642 6 view .LVU1356
 4952 0010 2BB9     		cbnz	r3, .L371
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4953              		.loc 1 4645 5 is_stmt 1 view .LVU1357
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4954              		.loc 1 4645 17 is_stmt 0 view .LVU1358
 4955 0012 184B     		ldr	r3, .L376
 4956 0014 1B68     		ldr	r3, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4957              		.loc 1 4645 33 view .LVU1359
ARM GAS  /tmp/ccpsiOt9.s 			page 206


 4958 0016 0122     		movs	r2, #1
 4959 0018 83F85020 		strb	r2, [r3, #80]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4960              		.loc 1 4647 5 is_stmt 1 view .LVU1360
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4961              		.loc 1 4647 7 is_stmt 0 view .LVU1361
 4962 001c ACB9     		cbnz	r4, .L375
 4963              	.L371:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4964              		.loc 1 4665 29 is_stmt 1 view .LVU1362
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4965              		.loc 1 4668 3 view .LVU1363
 4966 001e FFF7FEFF 		bl	vPortExitCritical
 4967              	.LVL335:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4968              		.loc 1 4670 3 view .LVU1364
 4969 0022 FFF7FEFF 		bl	vPortEnterCritical
 4970              	.LVL336:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4971              		.loc 1 4672 27 view .LVU1365
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4972              		.loc 1 4673 4 view .LVU1366
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4973              		.loc 1 4673 27 is_stmt 0 view .LVU1367
 4974 0026 134B     		ldr	r3, .L376
 4975 0028 1B68     		ldr	r3, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4976              		.loc 1 4673 13 view .LVU1368
 4977 002a DC6C     		ldr	r4, [r3, #76]
 4978              	.LVL337:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4979              		.loc 1 4675 4 is_stmt 1 view .LVU1369
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4980              		.loc 1 4675 6 is_stmt 0 view .LVU1370
 4981 002c 24B1     		cbz	r4, .L372
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4982              		.loc 1 4677 5 is_stmt 1 view .LVU1371
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4983              		.loc 1 4677 7 is_stmt 0 view .LVU1372
 4984 002e DDB1     		cbz	r5, .L373
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4985              		.loc 1 4679 6 is_stmt 1 view .LVU1373
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4986              		.loc 1 4679 18 is_stmt 0 view .LVU1374
 4987 0030 104B     		ldr	r3, .L376
 4988 0032 1B68     		ldr	r3, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4989              		.loc 1 4679 36 view .LVU1375
 4990 0034 0022     		movs	r2, #0
 4991 0036 DA64     		str	r2, [r3, #76]
 4992              	.L372:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4993              		.loc 1 4688 29 is_stmt 1 view .LVU1376
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4994              		.loc 1 4691 4 view .LVU1377
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4995              		.loc 1 4691 16 is_stmt 0 view .LVU1378
ARM GAS  /tmp/ccpsiOt9.s 			page 207


 4996 0038 0E4B     		ldr	r3, .L376
 4997 003a 1B68     		ldr	r3, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4998              		.loc 1 4691 32 view .LVU1379
 4999 003c 0022     		movs	r2, #0
 5000 003e 83F85020 		strb	r2, [r3, #80]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5001              		.loc 1 4693 3 is_stmt 1 view .LVU1380
 5002 0042 FFF7FEFF 		bl	vPortExitCritical
 5003              	.LVL338:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5004              		.loc 1 4695 3 view .LVU1381
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5005              		.loc 1 4696 2 is_stmt 0 view .LVU1382
 5006 0046 2046     		mov	r0, r4
 5007 0048 38BD     		pop	{r3, r4, r5, pc}
 5008              	.LVL339:
 5009              	.L375:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5010              		.loc 1 4649 6 is_stmt 1 view .LVU1383
 5011 004a 1146     		mov	r1, r2
 5012 004c 2046     		mov	r0, r4
 5013 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5014              	.LVL340:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5015              		.loc 1 4650 35 view .LVU1384
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5016              		.loc 1 4656 6 view .LVU1385
 5017 0052 4FF0E023 		mov	r3, #-536813568
 5018 0056 4FF08052 		mov	r2, #268435456
 5019 005a C3F8042D 		str	r2, [r3, #3332]
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5020              		.loc 1 4656 6 view .LVU1386
 5021              		.syntax unified
 5022              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5023 005e BFF34F8F 		dsb
 5024              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5025              		.loc 1 4656 6 view .LVU1387
 5026              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5027 0062 BFF36F8F 		isb
 5028              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5029              		.loc 1 4656 28 view .LVU1388
 5030              		.thumb
 5031              		.syntax unified
 5032 0066 DAE7     		b	.L371
 5033              	.LVL341:
 5034              	.L373:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5035              		.loc 1 4683 6 view .LVU1389
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5036              		.loc 1 4683 18 is_stmt 0 view .LVU1390
 5037 0068 024B     		ldr	r3, .L376
 5038 006a 1B68     		ldr	r3, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5039              		.loc 1 4683 47 view .LVU1391
ARM GAS  /tmp/ccpsiOt9.s 			page 208


 5040 006c 621E     		subs	r2, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5041              		.loc 1 4683 36 view .LVU1392
 5042 006e DA64     		str	r2, [r3, #76]
 5043 0070 E2E7     		b	.L372
 5044              	.L377:
 5045 0072 00BF     		.align	2
 5046              	.L376:
 5047 0074 00000000 		.word	.LANCHOR9
 5048              		.cfi_endproc
 5049              	.LFE48:
 5051              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5052              		.align	1
 5053              		.global	xTaskNotifyWait
 5054              		.syntax unified
 5055              		.thumb
 5056              		.thumb_func
 5057              		.fpu fpv4-sp-d16
 5059              	xTaskNotifyWait:
 5060              	.LVL342:
 5061              	.LFB49:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5062              		.loc 1 4704 2 is_stmt 1 view -0
 5063              		.cfi_startproc
 5064              		@ args = 0, pretend = 0, frame = 0
 5065              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5066              		.loc 1 4704 2 is_stmt 0 view .LVU1394
 5067 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5068              	.LCFI40:
 5069              		.cfi_def_cfa_offset 24
 5070              		.cfi_offset 3, -24
 5071              		.cfi_offset 4, -20
 5072              		.cfi_offset 5, -16
 5073              		.cfi_offset 6, -12
 5074              		.cfi_offset 7, -8
 5075              		.cfi_offset 14, -4
 5076 0002 0646     		mov	r6, r0
 5077 0004 0F46     		mov	r7, r1
 5078 0006 1446     		mov	r4, r2
 5079 0008 1D46     		mov	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5080              		.loc 1 4705 2 is_stmt 1 view .LVU1395
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5081              		.loc 1 4707 3 view .LVU1396
 5082 000a FFF7FEFF 		bl	vPortEnterCritical
 5083              	.LVL343:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5084              		.loc 1 4710 4 view .LVU1397
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5085              		.loc 1 4710 20 is_stmt 0 view .LVU1398
 5086 000e 214B     		ldr	r3, .L386
 5087 0010 1B68     		ldr	r3, [r3]
 5088 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5089 0016 D2B2     		uxtb	r2, r2
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5090              		.loc 1 4710 6 view .LVU1399
ARM GAS  /tmp/ccpsiOt9.s 			page 209


 5091 0018 022A     		cmp	r2, #2
 5092 001a 0AD0     		beq	.L379
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5093              		.loc 1 4715 5 is_stmt 1 view .LVU1400
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5094              		.loc 1 4715 35 is_stmt 0 view .LVU1401
 5095 001c 1D4B     		ldr	r3, .L386
 5096 001e 1A68     		ldr	r2, [r3]
 5097 0020 D06C     		ldr	r0, [r2, #76]
 5098 0022 20EA0606 		bic	r6, r0, r6
 5099              	.LVL344:
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5100              		.loc 1 4715 35 view .LVU1402
 5101 0026 D664     		str	r6, [r2, #76]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5102              		.loc 1 4718 5 is_stmt 1 view .LVU1403
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5103              		.loc 1 4718 17 is_stmt 0 view .LVU1404
 5104 0028 1B68     		ldr	r3, [r3]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5105              		.loc 1 4718 33 view .LVU1405
 5106 002a 0122     		movs	r2, #1
 5107 002c 83F85020 		strb	r2, [r3, #80]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5108              		.loc 1 4720 5 is_stmt 1 view .LVU1406
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5109              		.loc 1 4720 7 is_stmt 0 view .LVU1407
 5110 0030 CDB9     		cbnz	r5, .L384
 5111              	.L379:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5112              		.loc 1 4738 29 is_stmt 1 view .LVU1408
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5113              		.loc 1 4741 3 view .LVU1409
 5114 0032 FFF7FEFF 		bl	vPortExitCritical
 5115              	.LVL345:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5116              		.loc 1 4743 3 view .LVU1410
 5117 0036 FFF7FEFF 		bl	vPortEnterCritical
 5118              	.LVL346:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5119              		.loc 1 4745 27 view .LVU1411
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5120              		.loc 1 4747 4 view .LVU1412
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5121              		.loc 1 4747 6 is_stmt 0 view .LVU1413
 5122 003a 1CB1     		cbz	r4, .L380
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5123              		.loc 1 4751 5 is_stmt 1 view .LVU1414
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5124              		.loc 1 4751 41 is_stmt 0 view .LVU1415
 5125 003c 154B     		ldr	r3, .L386
 5126 003e 1B68     		ldr	r3, [r3]
 5127 0040 DB6C     		ldr	r3, [r3, #76]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5128              		.loc 1 4751 27 view .LVU1416
 5129 0042 2360     		str	r3, [r4]
 5130              	.L380:
ARM GAS  /tmp/ccpsiOt9.s 			page 210


4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5131              		.loc 1 4758 4 is_stmt 1 view .LVU1417
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5132              		.loc 1 4758 20 is_stmt 0 view .LVU1418
 5133 0044 134B     		ldr	r3, .L386
 5134 0046 1B68     		ldr	r3, [r3]
 5135 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5136 004c DBB2     		uxtb	r3, r3
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5137              		.loc 1 4758 6 view .LVU1419
 5138 004e 022B     		cmp	r3, #2
 5139 0050 18D0     		beq	.L385
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5140              		.loc 1 4761 13 view .LVU1420
 5141 0052 0024     		movs	r4, #0
 5142              	.LVL347:
 5143              	.L381:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5144              		.loc 1 4771 4 is_stmt 1 view .LVU1421
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5145              		.loc 1 4771 16 is_stmt 0 view .LVU1422
 5146 0054 0F4B     		ldr	r3, .L386
 5147 0056 1B68     		ldr	r3, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5148              		.loc 1 4771 32 view .LVU1423
 5149 0058 0022     		movs	r2, #0
 5150 005a 83F85020 		strb	r2, [r3, #80]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5151              		.loc 1 4773 3 is_stmt 1 view .LVU1424
 5152 005e FFF7FEFF 		bl	vPortExitCritical
 5153              	.LVL348:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5154              		.loc 1 4775 3 view .LVU1425
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5155              		.loc 1 4776 2 is_stmt 0 view .LVU1426
 5156 0062 2046     		mov	r0, r4
 5157 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5158              	.LVL349:
 5159              	.L384:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5160              		.loc 1 4722 6 is_stmt 1 view .LVU1427
 5161 0066 1146     		mov	r1, r2
 5162 0068 2846     		mov	r0, r5
 5163 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5164              	.LVL350:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5165              		.loc 1 4723 35 view .LVU1428
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5166              		.loc 1 4729 6 view .LVU1429
 5167 006e 4FF0E023 		mov	r3, #-536813568
 5168 0072 4FF08052 		mov	r2, #268435456
 5169 0076 C3F8042D 		str	r2, [r3, #3332]
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5170              		.loc 1 4729 6 view .LVU1430
 5171              		.syntax unified
 5172              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5173 007a BFF34F8F 		dsb
ARM GAS  /tmp/ccpsiOt9.s 			page 211


 5174              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5175              		.loc 1 4729 6 view .LVU1431
 5176              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5177 007e BFF36F8F 		isb
 5178              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5179              		.loc 1 4729 28 view .LVU1432
 5180              		.thumb
 5181              		.syntax unified
 5182 0082 D6E7     		b	.L379
 5183              	.L385:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5184              		.loc 1 4767 5 view .LVU1433
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5185              		.loc 1 4767 35 is_stmt 0 view .LVU1434
 5186 0084 034B     		ldr	r3, .L386
 5187 0086 1B68     		ldr	r3, [r3]
 5188 0088 D96C     		ldr	r1, [r3, #76]
 5189 008a 21EA0707 		bic	r7, r1, r7
 5190              	.LVL351:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5191              		.loc 1 4767 35 view .LVU1435
 5192 008e DF64     		str	r7, [r3, #76]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5193              		.loc 1 4768 5 is_stmt 1 view .LVU1436
 5194              	.LVL352:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5195              		.loc 1 4768 13 is_stmt 0 view .LVU1437
 5196 0090 0124     		movs	r4, #1
 5197              	.LVL353:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5198              		.loc 1 4768 13 view .LVU1438
 5199 0092 DFE7     		b	.L381
 5200              	.L387:
 5201              		.align	2
 5202              	.L386:
 5203 0094 00000000 		.word	.LANCHOR9
 5204              		.cfi_endproc
 5205              	.LFE49:
 5207              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5208              		.align	1
 5209              		.global	xTaskGenericNotify
 5210              		.syntax unified
 5211              		.thumb
 5212              		.thumb_func
 5213              		.fpu fpv4-sp-d16
 5215              	xTaskGenericNotify:
 5216              	.LVL354:
 5217              	.LFB50:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5218              		.loc 1 4784 2 is_stmt 1 view -0
 5219              		.cfi_startproc
 5220              		@ args = 0, pretend = 0, frame = 0
 5221              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5222              		.loc 1 4784 2 is_stmt 0 view .LVU1440
ARM GAS  /tmp/ccpsiOt9.s 			page 212


 5223 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5224              	.LCFI41:
 5225              		.cfi_def_cfa_offset 24
 5226              		.cfi_offset 3, -24
 5227              		.cfi_offset 4, -20
 5228              		.cfi_offset 5, -16
 5229              		.cfi_offset 6, -12
 5230              		.cfi_offset 7, -8
 5231              		.cfi_offset 14, -4
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5232              		.loc 1 4785 2 is_stmt 1 view .LVU1441
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5233              		.loc 1 4786 2 view .LVU1442
 5234              	.LVL355:
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5235              		.loc 1 4787 2 view .LVU1443
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5236              		.loc 1 4789 3 view .LVU1444
 5237 0002 A8B1     		cbz	r0, .L407
 5238 0004 0F46     		mov	r7, r1
 5239 0006 1446     		mov	r4, r2
 5240 0008 1D46     		mov	r5, r3
 5241 000a 0646     		mov	r6, r0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5242              		.loc 1 4789 32 discriminator 2 view .LVU1445
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5243              		.loc 1 4790 3 discriminator 2 view .LVU1446
 5244              	.LVL356:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5245              		.loc 1 4792 3 discriminator 2 view .LVU1447
 5246 000c FFF7FEFF 		bl	vPortEnterCritical
 5247              	.LVL357:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5248              		.loc 1 4794 4 discriminator 2 view .LVU1448
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5249              		.loc 1 4794 6 is_stmt 0 discriminator 2 view .LVU1449
 5250 0010 0DB1     		cbz	r5, .L391
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5251              		.loc 1 4796 5 is_stmt 1 view .LVU1450
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5252              		.loc 1 4796 42 is_stmt 0 view .LVU1451
 5253 0012 F36C     		ldr	r3, [r6, #76]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5254              		.loc 1 4796 35 view .LVU1452
 5255 0014 2B60     		str	r3, [r5]
 5256              	.L391:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5257              		.loc 1 4799 4 is_stmt 1 view .LVU1453
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5258              		.loc 1 4799 26 is_stmt 0 view .LVU1454
 5259 0016 96F85030 		ldrb	r3, [r6, #80]	@ zero_extendqisi2
 5260 001a DBB2     		uxtb	r3, r3
 5261              	.LVL358:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5262              		.loc 1 4801 4 is_stmt 1 view .LVU1455
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5263              		.loc 1 4801 25 is_stmt 0 view .LVU1456
ARM GAS  /tmp/ccpsiOt9.s 			page 213


 5264 001c 0222     		movs	r2, #2
 5265 001e 86F85020 		strb	r2, [r6, #80]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5266              		.loc 1 4803 4 is_stmt 1 view .LVU1457
 5267 0022 042C     		cmp	r4, #4
 5268 0024 21D8     		bhi	.L392
 5269 0026 DFE804F0 		tbb	[pc, r4]
 5270              	.L394:
 5271 002a 0F       		.byte	(.L398-.L394)/2
 5272 002b 0C       		.byte	(.L397-.L394)/2
 5273 002c 16       		.byte	(.L396-.L394)/2
 5274 002d 1A       		.byte	(.L395-.L394)/2
 5275 002e 1C       		.byte	(.L393-.L394)/2
 5276              	.LVL359:
 5277 002f 00       		.p2align 1
 5278              	.L407:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5279              		.loc 1 4789 3 view .LVU1458
 5280              	.LBB218:
 5281              	.LBI218:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5282              		.loc 2 191 30 view .LVU1459
 5283              	.LBB219:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5284              		.loc 2 193 1 view .LVU1460
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5285              		.loc 2 195 2 view .LVU1461
 5286              		.syntax unified
 5287              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5288 0030 4FF05003 			mov r3, #80												
 5289 0034 83F31188 		msr basepri, r3											
 5290 0038 BFF36F8F 		isb														
 5291 003c BFF34F8F 		dsb														
 5292              	
 5293              	@ 0 "" 2
 5294              	.LVL360:
 5295              		.thumb
 5296              		.syntax unified
 5297              	.L390:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5298              		.loc 2 195 2 is_stmt 0 view .LVU1462
 5299              	.LBE219:
 5300              	.LBE218:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5301              		.loc 1 4789 3 is_stmt 1 discriminator 1 view .LVU1463
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5302              		.loc 1 4789 3 discriminator 1 view .LVU1464
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5303              		.loc 1 4789 3 discriminator 1 view .LVU1465
 5304 0040 FEE7     		b	.L390
 5305              	.LVL361:
 5306              	.L397:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5307              		.loc 1 4806 6 view .LVU1466
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5308              		.loc 1 4806 29 is_stmt 0 view .LVU1467
 5309 0042 F26C     		ldr	r2, [r6, #76]
ARM GAS  /tmp/ccpsiOt9.s 			page 214


 5310 0044 1743     		orrs	r7, r7, r2
 5311              	.LVL362:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5312              		.loc 1 4806 29 view .LVU1468
 5313 0046 F764     		str	r7, [r6, #76]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5314              		.loc 1 4807 6 is_stmt 1 view .LVU1469
 5315              	.L398:
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5316              		.loc 1 4843 22 view .LVU1470
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5317              		.loc 1 4847 4 view .LVU1471
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5318              		.loc 1 4847 6 is_stmt 0 view .LVU1472
 5319 0048 012B     		cmp	r3, #1
 5320 004a 1BD0     		beq	.L408
 5321 004c 0124     		movs	r4, #1
 5322              	.LVL363:
 5323              	.L399:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5324              		.loc 1 4884 29 is_stmt 1 view .LVU1473
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5325              		.loc 1 4887 3 view .LVU1474
 5326 004e FFF7FEFF 		bl	vPortExitCritical
 5327              	.LVL364:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5328              		.loc 1 4889 3 view .LVU1475
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5329              		.loc 1 4890 2 is_stmt 0 view .LVU1476
 5330 0052 2046     		mov	r0, r4
 5331 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5332              	.LVL365:
 5333              	.L396:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5334              		.loc 1 4810 6 is_stmt 1 view .LVU1477
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5335              		.loc 1 4810 13 is_stmt 0 view .LVU1478
 5336 0056 F26C     		ldr	r2, [r6, #76]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5337              		.loc 1 4810 32 view .LVU1479
 5338 0058 0132     		adds	r2, r2, #1
 5339 005a F264     		str	r2, [r6, #76]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5340              		.loc 1 4811 6 is_stmt 1 view .LVU1480
 5341 005c F4E7     		b	.L398
 5342              	.L395:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5343              		.loc 1 4814 6 view .LVU1481
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5344              		.loc 1 4814 29 is_stmt 0 view .LVU1482
 5345 005e F764     		str	r7, [r6, #76]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5346              		.loc 1 4815 6 is_stmt 1 view .LVU1483
 5347 0060 F2E7     		b	.L398
 5348              	.L393:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5349              		.loc 1 4818 6 view .LVU1484
ARM GAS  /tmp/ccpsiOt9.s 			page 215


4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5350              		.loc 1 4818 8 is_stmt 0 view .LVU1485
 5351 0062 022B     		cmp	r3, #2
 5352 0064 3ED0     		beq	.L403
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5353              		.loc 1 4820 7 is_stmt 1 view .LVU1486
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5354              		.loc 1 4820 30 is_stmt 0 view .LVU1487
 5355 0066 F764     		str	r7, [r6, #76]
 5356 0068 EEE7     		b	.L398
 5357              	.L392:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5358              		.loc 1 4838 6 is_stmt 1 view .LVU1488
 5359 006a F26C     		ldr	r2, [r6, #76]
 5360 006c B2F1FF3F 		cmp	r2, #-1
 5361 0070 EAD0     		beq	.L398
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5362              		.loc 1 4838 6 view .LVU1489
 5363              	.LBB220:
 5364              	.LBI220:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5365              		.loc 2 191 30 view .LVU1490
 5366              	.LBB221:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5367              		.loc 2 193 1 view .LVU1491
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5368              		.loc 2 195 2 view .LVU1492
 5369              		.syntax unified
 5370              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5371 0072 4FF05003 			mov r3, #80												
 5372 0076 83F31188 		msr basepri, r3											
 5373 007a BFF36F8F 		isb														
 5374 007e BFF34F8F 		dsb														
 5375              	
 5376              	@ 0 "" 2
 5377              	.LVL366:
 5378              		.thumb
 5379              		.syntax unified
 5380              	.L400:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5381              		.loc 2 195 2 is_stmt 0 view .LVU1493
 5382              	.LBE221:
 5383              	.LBE220:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5384              		.loc 1 4838 6 is_stmt 1 discriminator 2 view .LVU1494
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5385              		.loc 1 4838 6 discriminator 2 view .LVU1495
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5386              		.loc 1 4838 6 discriminator 2 view .LVU1496
 5387 0082 FEE7     		b	.L400
 5388              	.LVL367:
 5389              	.L408:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5390              		.loc 1 4849 5 view .LVU1497
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5391              		.loc 1 4849 14 is_stmt 0 view .LVU1498
 5392 0084 341D     		adds	r4, r6, #4
ARM GAS  /tmp/ccpsiOt9.s 			page 216


 5393 0086 2046     		mov	r0, r4
 5394 0088 FFF7FEFF 		bl	uxListRemove
 5395              	.LVL368:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5396              		.loc 1 4850 5 is_stmt 1 view .LVU1499
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5397              		.loc 1 4850 5 view .LVU1500
 5398 008c F06A     		ldr	r0, [r6, #44]
 5399 008e 174A     		ldr	r2, .L409
 5400 0090 1168     		ldr	r1, [r2]
 5401 0092 0123     		movs	r3, #1
 5402 0094 8340     		lsls	r3, r3, r0
 5403 0096 0B43     		orrs	r3, r3, r1
 5404 0098 1360     		str	r3, [r2]
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5405              		.loc 1 4850 5 view .LVU1501
 5406 009a 00EB8000 		add	r0, r0, r0, lsl #2
 5407 009e 2146     		mov	r1, r4
 5408 00a0 134B     		ldr	r3, .L409+4
 5409 00a2 03EB8000 		add	r0, r3, r0, lsl #2
 5410 00a6 FFF7FEFF 		bl	vListInsertEnd
 5411              	.LVL369:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5412              		.loc 1 4850 35 view .LVU1502
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5413              		.loc 1 4853 5 view .LVU1503
 5414 00aa B36A     		ldr	r3, [r6, #40]
 5415 00ac 43B1     		cbz	r3, .L401
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5416              		.loc 1 4853 5 view .LVU1504
 5417              	.LBB222:
 5418              	.LBI222:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5419              		.loc 2 191 30 view .LVU1505
 5420              	.LBB223:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5421              		.loc 2 193 1 view .LVU1506
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5422              		.loc 2 195 2 view .LVU1507
 5423              		.syntax unified
 5424              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5425 00ae 4FF05003 			mov r3, #80												
 5426 00b2 83F31188 		msr basepri, r3											
 5427 00b6 BFF36F8F 		isb														
 5428 00ba BFF34F8F 		dsb														
 5429              	
 5430              	@ 0 "" 2
 5431              	.LVL370:
 5432              		.thumb
 5433              		.syntax unified
 5434              	.L402:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5435              		.loc 2 195 2 is_stmt 0 view .LVU1508
 5436              	.LBE223:
 5437              	.LBE222:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5438              		.loc 1 4853 5 is_stmt 1 discriminator 3 view .LVU1509
ARM GAS  /tmp/ccpsiOt9.s 			page 217


4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5439              		.loc 1 4853 5 discriminator 3 view .LVU1510
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5440              		.loc 1 4853 5 discriminator 3 view .LVU1511
 5441 00be FEE7     		b	.L402
 5442              	.L401:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5443              		.loc 1 4853 82 discriminator 2 view .LVU1512
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5444              		.loc 1 4871 5 discriminator 2 view .LVU1513
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5445              		.loc 1 4871 41 is_stmt 0 discriminator 2 view .LVU1514
 5446 00c0 0C4B     		ldr	r3, .L409+8
 5447 00c2 1B68     		ldr	r3, [r3]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5448              		.loc 1 4871 7 discriminator 2 view .LVU1515
 5449 00c4 F26A     		ldr	r2, [r6, #44]
 5450 00c6 DB6A     		ldr	r3, [r3, #44]
 5451 00c8 9A42     		cmp	r2, r3
 5452 00ca 0DD9     		bls	.L405
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5453              		.loc 1 4875 6 is_stmt 1 view .LVU1516
 5454 00cc 4FF0E023 		mov	r3, #-536813568
 5455 00d0 4FF08052 		mov	r2, #268435456
 5456 00d4 C3F8042D 		str	r2, [r3, #3332]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5457              		.loc 1 4875 6 view .LVU1517
 5458              		.syntax unified
 5459              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5460 00d8 BFF34F8F 		dsb
 5461              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5462              		.loc 1 4875 6 view .LVU1518
 5463              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5464 00dc BFF36F8F 		isb
 5465              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5466              		.loc 1 4875 37 view .LVU1519
 5467              		.thumb
 5468              		.syntax unified
 5469 00e0 0124     		movs	r4, #1
 5470 00e2 B4E7     		b	.L399
 5471              	.LVL371:
 5472              	.L403:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5473              		.loc 1 4825 15 is_stmt 0 view .LVU1520
 5474 00e4 0024     		movs	r4, #0
 5475 00e6 B2E7     		b	.L399
 5476              	.LVL372:
 5477              	.L405:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5478              		.loc 1 4825 15 view .LVU1521
 5479 00e8 0124     		movs	r4, #1
 5480 00ea B0E7     		b	.L399
 5481              	.L410:
 5482              		.align	2
 5483              	.L409:
ARM GAS  /tmp/ccpsiOt9.s 			page 218


 5484 00ec 00000000 		.word	.LANCHOR10
 5485 00f0 00000000 		.word	.LANCHOR7
 5486 00f4 00000000 		.word	.LANCHOR9
 5487              		.cfi_endproc
 5488              	.LFE50:
 5490              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5491              		.align	1
 5492              		.global	xTaskGenericNotifyFromISR
 5493              		.syntax unified
 5494              		.thumb
 5495              		.thumb_func
 5496              		.fpu fpv4-sp-d16
 5498              	xTaskGenericNotifyFromISR:
 5499              	.LVL373:
 5500              	.LFB51:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5501              		.loc 1 4898 2 is_stmt 1 view -0
 5502              		.cfi_startproc
 5503              		@ args = 4, pretend = 0, frame = 0
 5504              		@ frame_needed = 0, uses_anonymous_args = 0
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5505              		.loc 1 4899 2 view .LVU1523
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5506              		.loc 1 4900 2 view .LVU1524
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5507              		.loc 1 4901 2 view .LVU1525
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5508              		.loc 1 4902 2 view .LVU1526
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5509              		.loc 1 4904 3 view .LVU1527
 5510 0000 08B3     		cbz	r0, .L434
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5511              		.loc 1 4898 2 is_stmt 0 discriminator 2 view .LVU1528
 5512 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5513              	.LCFI42:
 5514              		.cfi_def_cfa_offset 24
 5515              		.cfi_offset 4, -24
 5516              		.cfi_offset 5, -20
 5517              		.cfi_offset 6, -16
 5518              		.cfi_offset 7, -12
 5519              		.cfi_offset 8, -8
 5520              		.cfi_offset 14, -4
 5521 0006 0E46     		mov	r6, r1
 5522 0008 1446     		mov	r4, r2
 5523 000a 1D46     		mov	r5, r3
 5524 000c 0746     		mov	r7, r0
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5525              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1529
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 4922 3 discriminator 2 view .LVU1530
 5527 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5528              	.LVL374:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5529              		.loc 1 4924 3 discriminator 2 view .LVU1531
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5530              		.loc 1 4926 3 discriminator 2 view .LVU1532
 5531              	.LBB224:
ARM GAS  /tmp/ccpsiOt9.s 			page 219


 5532              	.LBI224:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5533              		.loc 2 207 34 discriminator 2 view .LVU1533
 5534              	.LBB225:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5535              		.loc 2 209 1 discriminator 2 view .LVU1534
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5536              		.loc 2 211 2 discriminator 2 view .LVU1535
 5537              		.syntax unified
 5538              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5539 0012 EFF31188 			mrs r8, basepri											
 5540 0016 4FF05003 		mov r3, #80												
 5541 001a 83F31188 		msr basepri, r3											
 5542 001e BFF36F8F 		isb														
 5543 0022 BFF34F8F 		dsb														
 5544              	
 5545              	@ 0 "" 2
 5546              	.LVL375:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5547              		.loc 2 223 2 discriminator 2 view .LVU1536
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5548              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1537
 5549              		.thumb
 5550              		.syntax unified
 5551              	.LBE225:
 5552              	.LBE224:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5553              		.loc 1 4928 4 is_stmt 1 discriminator 2 view .LVU1538
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5554              		.loc 1 4928 6 is_stmt 0 discriminator 2 view .LVU1539
 5555 0026 0DB1     		cbz	r5, .L414
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5556              		.loc 1 4930 5 is_stmt 1 view .LVU1540
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5557              		.loc 1 4930 42 is_stmt 0 view .LVU1541
 5558 0028 FB6C     		ldr	r3, [r7, #76]
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5559              		.loc 1 4930 35 view .LVU1542
 5560 002a 2B60     		str	r3, [r5]
 5561              	.L414:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5562              		.loc 1 4933 4 is_stmt 1 view .LVU1543
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5563              		.loc 1 4933 26 is_stmt 0 view .LVU1544
 5564 002c 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
 5565 0030 DBB2     		uxtb	r3, r3
 5566              	.LVL376:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5567              		.loc 1 4934 4 is_stmt 1 view .LVU1545
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5568              		.loc 1 4934 25 is_stmt 0 view .LVU1546
 5569 0032 0222     		movs	r2, #2
 5570 0034 87F85020 		strb	r2, [r7, #80]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5571              		.loc 1 4936 4 is_stmt 1 view .LVU1547
 5572 0038 042C     		cmp	r4, #4
 5573 003a 21D8     		bhi	.L415
ARM GAS  /tmp/ccpsiOt9.s 			page 220


 5574 003c DFE804F0 		tbb	[pc, r4]
 5575              	.L417:
 5576 0040 0F       		.byte	(.L421-.L417)/2
 5577 0041 0C       		.byte	(.L420-.L417)/2
 5578 0042 16       		.byte	(.L419-.L417)/2
 5579 0043 1A       		.byte	(.L418-.L417)/2
 5580 0044 1C       		.byte	(.L416-.L417)/2
 5581              	.LVL377:
 5582 0045 00       		.p2align 1
 5583              	.L434:
 5584              	.LCFI43:
 5585              		.cfi_def_cfa_offset 0
 5586              		.cfi_restore 4
 5587              		.cfi_restore 5
 5588              		.cfi_restore 6
 5589              		.cfi_restore 7
 5590              		.cfi_restore 8
 5591              		.cfi_restore 14
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5592              		.loc 1 4904 3 view .LVU1548
 5593              	.LBB226:
 5594              	.LBI226:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5595              		.loc 2 191 30 view .LVU1549
 5596              	.LBB227:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5597              		.loc 2 193 1 view .LVU1550
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5598              		.loc 2 195 2 view .LVU1551
 5599              		.syntax unified
 5600              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5601 0046 4FF05003 			mov r3, #80												
 5602 004a 83F31188 		msr basepri, r3											
 5603 004e BFF36F8F 		isb														
 5604 0052 BFF34F8F 		dsb														
 5605              	
 5606              	@ 0 "" 2
 5607              	.LVL378:
 5608              		.thumb
 5609              		.syntax unified
 5610              	.L413:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5611              		.loc 2 195 2 is_stmt 0 view .LVU1552
 5612              	.LBE227:
 5613              	.LBE226:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5614              		.loc 1 4904 3 is_stmt 1 discriminator 1 view .LVU1553
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5615              		.loc 1 4904 3 discriminator 1 view .LVU1554
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5616              		.loc 1 4904 3 discriminator 1 view .LVU1555
 5617 0056 FEE7     		b	.L413
 5618              	.LVL379:
 5619              	.L420:
 5620              	.LCFI44:
 5621              		.cfi_def_cfa_offset 24
 5622              		.cfi_offset 4, -24
ARM GAS  /tmp/ccpsiOt9.s 			page 221


 5623              		.cfi_offset 5, -20
 5624              		.cfi_offset 6, -16
 5625              		.cfi_offset 7, -12
 5626              		.cfi_offset 8, -8
 5627              		.cfi_offset 14, -4
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5628              		.loc 1 4939 6 view .LVU1556
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5629              		.loc 1 4939 29 is_stmt 0 view .LVU1557
 5630 0058 FA6C     		ldr	r2, [r7, #76]
 5631 005a 1643     		orrs	r6, r6, r2
 5632              	.LVL380:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5633              		.loc 1 4939 29 view .LVU1558
 5634 005c FE64     		str	r6, [r7, #76]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5635              		.loc 1 4940 6 is_stmt 1 view .LVU1559
 5636              	.L421:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5637              		.loc 1 4975 31 view .LVU1560
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5638              		.loc 1 4979 4 view .LVU1561
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5639              		.loc 1 4979 6 is_stmt 0 view .LVU1562
 5640 005e 012B     		cmp	r3, #1
 5641 0060 1BD0     		beq	.L435
 5642 0062 0120     		movs	r0, #1
 5643              	.LVL381:
 5644              	.L422:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5645              		.loc 1 5012 30 is_stmt 1 view .LVU1563
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5646              		.loc 1 5016 3 view .LVU1564
 5647              	.LBB228:
 5648              	.LBI228:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5649              		.loc 2 227 30 view .LVU1565
 5650              	.LBB229:
 5651              		.loc 2 229 2 view .LVU1566
 5652              		.syntax unified
 5653              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5654 0064 88F31188 			msr basepri, r8	
 5655              	@ 0 "" 2
 5656              	.LVL382:
 5657              		.loc 2 229 2 is_stmt 0 view .LVU1567
 5658              		.thumb
 5659              		.syntax unified
 5660              	.LBE229:
 5661              	.LBE228:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5662              		.loc 1 5018 3 is_stmt 1 view .LVU1568
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5663              		.loc 1 5019 2 is_stmt 0 view .LVU1569
 5664 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5665              	.LVL383:
 5666              	.L419:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
ARM GAS  /tmp/ccpsiOt9.s 			page 222


 5667              		.loc 1 4943 6 is_stmt 1 view .LVU1570
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5668              		.loc 1 4943 13 is_stmt 0 view .LVU1571
 5669 006c FA6C     		ldr	r2, [r7, #76]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5670              		.loc 1 4943 32 view .LVU1572
 5671 006e 0132     		adds	r2, r2, #1
 5672 0070 FA64     		str	r2, [r7, #76]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5673              		.loc 1 4944 6 is_stmt 1 view .LVU1573
 5674 0072 F4E7     		b	.L421
 5675              	.L418:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5676              		.loc 1 4947 6 view .LVU1574
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5677              		.loc 1 4947 29 is_stmt 0 view .LVU1575
 5678 0074 FE64     		str	r6, [r7, #76]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5679              		.loc 1 4948 6 is_stmt 1 view .LVU1576
 5680 0076 F2E7     		b	.L421
 5681              	.L416:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5682              		.loc 1 4951 6 view .LVU1577
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5683              		.loc 1 4951 8 is_stmt 0 view .LVU1578
 5684 0078 022B     		cmp	r3, #2
 5685 007a 44D0     		beq	.L429
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5686              		.loc 1 4953 7 is_stmt 1 view .LVU1579
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5687              		.loc 1 4953 30 is_stmt 0 view .LVU1580
 5688 007c FE64     		str	r6, [r7, #76]
 5689 007e EEE7     		b	.L421
 5690              	.L415:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5691              		.loc 1 4971 6 is_stmt 1 view .LVU1581
 5692 0080 FA6C     		ldr	r2, [r7, #76]
 5693 0082 B2F1FF3F 		cmp	r2, #-1
 5694 0086 EAD0     		beq	.L421
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5695              		.loc 1 4971 6 view .LVU1582
 5696              	.LBB230:
 5697              	.LBI230:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5698              		.loc 2 191 30 view .LVU1583
 5699              	.LBB231:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5700              		.loc 2 193 1 view .LVU1584
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5701              		.loc 2 195 2 view .LVU1585
 5702              		.syntax unified
 5703              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5704 0088 4FF05003 			mov r3, #80												
 5705 008c 83F31188 		msr basepri, r3											
 5706 0090 BFF36F8F 		isb														
 5707 0094 BFF34F8F 		dsb														
 5708              	
ARM GAS  /tmp/ccpsiOt9.s 			page 223


 5709              	@ 0 "" 2
 5710              	.LVL384:
 5711              		.thumb
 5712              		.syntax unified
 5713              	.L423:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5714              		.loc 2 195 2 is_stmt 0 view .LVU1586
 5715              	.LBE231:
 5716              	.LBE230:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5717              		.loc 1 4971 6 is_stmt 1 discriminator 2 view .LVU1587
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5718              		.loc 1 4971 6 discriminator 2 view .LVU1588
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5719              		.loc 1 4971 6 discriminator 2 view .LVU1589
 5720 0098 FEE7     		b	.L423
 5721              	.LVL385:
 5722              	.L435:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5723              		.loc 1 4982 5 view .LVU1590
 5724 009a BB6A     		ldr	r3, [r7, #40]
 5725              	.LVL386:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5726              		.loc 1 4982 5 is_stmt 0 view .LVU1591
 5727 009c 43B1     		cbz	r3, .L424
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5728              		.loc 1 4982 5 is_stmt 1 view .LVU1592
 5729              	.LBB232:
 5730              	.LBI232:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5731              		.loc 2 191 30 view .LVU1593
 5732              	.LBB233:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5733              		.loc 2 193 1 view .LVU1594
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5734              		.loc 2 195 2 view .LVU1595
 5735              		.syntax unified
 5736              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5737 009e 4FF05003 			mov r3, #80												
 5738 00a2 83F31188 		msr basepri, r3											
 5739 00a6 BFF36F8F 		isb														
 5740 00aa BFF34F8F 		dsb														
 5741              	
 5742              	@ 0 "" 2
 5743              	.LVL387:
 5744              		.thumb
 5745              		.syntax unified
 5746              	.L425:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5747              		.loc 2 195 2 is_stmt 0 view .LVU1596
 5748              	.LBE233:
 5749              	.LBE232:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5750              		.loc 1 4982 5 is_stmt 1 discriminator 3 view .LVU1597
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5751              		.loc 1 4982 5 discriminator 3 view .LVU1598
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccpsiOt9.s 			page 224


 5752              		.loc 1 4982 5 discriminator 3 view .LVU1599
 5753 00ae FEE7     		b	.L425
 5754              	.L424:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5755              		.loc 1 4982 82 discriminator 2 view .LVU1600
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5756              		.loc 1 4984 5 discriminator 2 view .LVU1601
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5757              		.loc 1 4984 30 is_stmt 0 discriminator 2 view .LVU1602
 5758 00b0 174B     		ldr	r3, .L436
 5759 00b2 1B68     		ldr	r3, [r3]
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5760              		.loc 1 4984 7 discriminator 2 view .LVU1603
 5761 00b4 0BBB     		cbnz	r3, .L426
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5762              		.loc 1 4986 6 is_stmt 1 view .LVU1604
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5763              		.loc 1 4986 15 is_stmt 0 view .LVU1605
 5764 00b6 3C1D     		adds	r4, r7, #4
 5765 00b8 2046     		mov	r0, r4
 5766 00ba FFF7FEFF 		bl	uxListRemove
 5767              	.LVL388:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5768              		.loc 1 4987 6 is_stmt 1 view .LVU1606
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5769              		.loc 1 4987 6 view .LVU1607
 5770 00be F86A     		ldr	r0, [r7, #44]
 5771 00c0 144A     		ldr	r2, .L436+4
 5772 00c2 1168     		ldr	r1, [r2]
 5773 00c4 0123     		movs	r3, #1
 5774 00c6 8340     		lsls	r3, r3, r0
 5775 00c8 0B43     		orrs	r3, r3, r1
 5776 00ca 1360     		str	r3, [r2]
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5777              		.loc 1 4987 6 view .LVU1608
 5778 00cc 00EB8000 		add	r0, r0, r0, lsl #2
 5779 00d0 2146     		mov	r1, r4
 5780 00d2 114B     		ldr	r3, .L436+8
 5781 00d4 03EB8000 		add	r0, r3, r0, lsl #2
 5782 00d8 FFF7FEFF 		bl	vListInsertEnd
 5783              	.LVL389:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5784              		.loc 1 4987 36 view .LVU1609
 5785              	.L427:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5786              		.loc 1 4996 5 view .LVU1610
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5787              		.loc 1 4996 41 is_stmt 0 view .LVU1611
 5788 00dc 0F4B     		ldr	r3, .L436+12
 5789 00de 1B68     		ldr	r3, [r3]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5790              		.loc 1 4996 7 view .LVU1612
 5791 00e0 FA6A     		ldr	r2, [r7, #44]
 5792 00e2 DB6A     		ldr	r3, [r3, #44]
 5793 00e4 9A42     		cmp	r2, r3
 5794 00e6 10D9     		bls	.L431
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccpsiOt9.s 			page 225


 5795              		.loc 1 5000 6 is_stmt 1 view .LVU1613
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5796              		.loc 1 5000 8 is_stmt 0 view .LVU1614
 5797 00e8 069B     		ldr	r3, [sp, #24]
 5798 00ea 13B1     		cbz	r3, .L428
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5799              		.loc 1 5002 7 is_stmt 1 view .LVU1615
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5800              		.loc 1 5002 34 is_stmt 0 view .LVU1616
 5801 00ec 0123     		movs	r3, #1
 5802 00ee 069A     		ldr	r2, [sp, #24]
 5803 00f0 1360     		str	r3, [r2]
 5804              	.L428:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5805              		.loc 1 5008 6 is_stmt 1 view .LVU1617
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5806              		.loc 1 5008 20 is_stmt 0 view .LVU1618
 5807 00f2 0120     		movs	r0, #1
 5808 00f4 0A4B     		ldr	r3, .L436+16
 5809 00f6 1860     		str	r0, [r3]
 5810 00f8 B4E7     		b	.L422
 5811              	.L426:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5812              		.loc 1 4993 6 is_stmt 1 view .LVU1619
 5813 00fa 07F11801 		add	r1, r7, #24
 5814 00fe 0948     		ldr	r0, .L436+20
 5815 0100 FFF7FEFF 		bl	vListInsertEnd
 5816              	.LVL390:
 5817 0104 EAE7     		b	.L427
 5818              	.LVL391:
 5819              	.L429:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5820              		.loc 1 4958 15 is_stmt 0 view .LVU1620
 5821 0106 0020     		movs	r0, #0
 5822 0108 ACE7     		b	.L422
 5823              	.LVL392:
 5824              	.L431:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5825              		.loc 1 4958 15 view .LVU1621
 5826 010a 0120     		movs	r0, #1
 5827 010c AAE7     		b	.L422
 5828              	.L437:
 5829 010e 00BF     		.align	2
 5830              	.L436:
 5831 0110 00000000 		.word	.LANCHOR16
 5832 0114 00000000 		.word	.LANCHOR10
 5833 0118 00000000 		.word	.LANCHOR7
 5834 011c 00000000 		.word	.LANCHOR9
 5835 0120 00000000 		.word	.LANCHOR19
 5836 0124 00000000 		.word	.LANCHOR1
 5837              		.cfi_endproc
 5838              	.LFE51:
 5840              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5841              		.align	1
 5842              		.global	vTaskNotifyGiveFromISR
 5843              		.syntax unified
 5844              		.thumb
ARM GAS  /tmp/ccpsiOt9.s 			page 226


 5845              		.thumb_func
 5846              		.fpu fpv4-sp-d16
 5848              	vTaskNotifyGiveFromISR:
 5849              	.LVL393:
 5850              	.LFB52:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5851              		.loc 1 5027 2 is_stmt 1 view -0
 5852              		.cfi_startproc
 5853              		@ args = 0, pretend = 0, frame = 0
 5854              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5855              		.loc 1 5027 2 is_stmt 0 view .LVU1623
 5856 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5857              	.LCFI45:
 5858              		.cfi_def_cfa_offset 24
 5859              		.cfi_offset 3, -24
 5860              		.cfi_offset 4, -20
 5861              		.cfi_offset 5, -16
 5862              		.cfi_offset 6, -12
 5863              		.cfi_offset 7, -8
 5864              		.cfi_offset 14, -4
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5865              		.loc 1 5028 2 is_stmt 1 view .LVU1624
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5866              		.loc 1 5029 2 view .LVU1625
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5867              		.loc 1 5030 2 view .LVU1626
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5868              		.loc 1 5032 3 view .LVU1627
 5869 0002 D8B1     		cbz	r0, .L448
 5870 0004 0D46     		mov	r5, r1
 5871 0006 0446     		mov	r4, r0
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5872              		.loc 1 5032 32 discriminator 2 view .LVU1628
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5873              		.loc 1 5050 3 discriminator 2 view .LVU1629
 5874 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5875              	.LVL394:
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5876              		.loc 1 5052 3 discriminator 2 view .LVU1630
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5877              		.loc 1 5054 3 discriminator 2 view .LVU1631
 5878              	.LBB234:
 5879              	.LBI234:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5880              		.loc 2 207 34 discriminator 2 view .LVU1632
 5881              	.LBB235:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5882              		.loc 2 209 1 discriminator 2 view .LVU1633
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5883              		.loc 2 211 2 discriminator 2 view .LVU1634
 5884              		.syntax unified
 5885              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5886 000c EFF31186 			mrs r6, basepri											
 5887 0010 4FF05003 		mov r3, #80												
 5888 0014 83F31188 		msr basepri, r3											
 5889 0018 BFF36F8F 		isb														
ARM GAS  /tmp/ccpsiOt9.s 			page 227


 5890 001c BFF34F8F 		dsb														
 5891              	
 5892              	@ 0 "" 2
 5893              	.LVL395:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5894              		.loc 2 223 2 discriminator 2 view .LVU1635
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5895              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1636
 5896              		.thumb
 5897              		.syntax unified
 5898              	.LBE235:
 5899              	.LBE234:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5900              		.loc 1 5056 4 is_stmt 1 discriminator 2 view .LVU1637
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5901              		.loc 1 5056 26 is_stmt 0 discriminator 2 view .LVU1638
 5902 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5903 0024 DBB2     		uxtb	r3, r3
 5904              	.LVL396:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5905              		.loc 1 5057 4 is_stmt 1 discriminator 2 view .LVU1639
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5906              		.loc 1 5057 25 is_stmt 0 discriminator 2 view .LVU1640
 5907 0026 0222     		movs	r2, #2
 5908 0028 84F85020 		strb	r2, [r4, #80]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5909              		.loc 1 5061 4 is_stmt 1 discriminator 2 view .LVU1641
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5910              		.loc 1 5061 11 is_stmt 0 discriminator 2 view .LVU1642
 5911 002c E26C     		ldr	r2, [r4, #76]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5912              		.loc 1 5061 30 discriminator 2 view .LVU1643
 5913 002e 0132     		adds	r2, r2, #1
 5914 0030 E264     		str	r2, [r4, #76]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5915              		.loc 1 5063 36 is_stmt 1 discriminator 2 view .LVU1644
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5916              		.loc 1 5067 4 discriminator 2 view .LVU1645
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5917              		.loc 1 5067 6 is_stmt 0 discriminator 2 view .LVU1646
 5918 0032 012B     		cmp	r3, #1
 5919 0034 0BD0     		beq	.L449
 5920              	.LVL397:
 5921              	.L441:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5922              		.loc 1 5100 30 is_stmt 1 view .LVU1647
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5923              		.loc 1 5104 3 view .LVU1648
 5924              	.LBB236:
 5925              	.LBI236:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5926              		.loc 2 227 30 view .LVU1649
 5927              	.LBB237:
 5928              		.loc 2 229 2 view .LVU1650
 5929              		.syntax unified
 5930              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5931 0036 86F31188 			msr basepri, r6	
ARM GAS  /tmp/ccpsiOt9.s 			page 228


 5932              	@ 0 "" 2
 5933              	.LVL398:
 5934              		.loc 2 229 2 is_stmt 0 view .LVU1651
 5935              		.thumb
 5936              		.syntax unified
 5937              	.LBE237:
 5938              	.LBE236:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5939              		.loc 1 5105 2 view .LVU1652
 5940 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5941              	.LVL399:
 5942              	.L448:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5943              		.loc 1 5032 3 is_stmt 1 view .LVU1653
 5944              	.LBB238:
 5945              	.LBI238:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5946              		.loc 2 191 30 view .LVU1654
 5947              	.LBB239:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5948              		.loc 2 193 1 view .LVU1655
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5949              		.loc 2 195 2 view .LVU1656
 5950              		.syntax unified
 5951              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5952 003c 4FF05003 			mov r3, #80												
 5953 0040 83F31188 		msr basepri, r3											
 5954 0044 BFF36F8F 		isb														
 5955 0048 BFF34F8F 		dsb														
 5956              	
 5957              	@ 0 "" 2
 5958              	.LVL400:
 5959              		.thumb
 5960              		.syntax unified
 5961              	.L440:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5962              		.loc 2 195 2 is_stmt 0 view .LVU1657
 5963              	.LBE239:
 5964              	.LBE238:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5965              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1658
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5966              		.loc 1 5032 3 discriminator 1 view .LVU1659
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5967              		.loc 1 5032 3 discriminator 1 view .LVU1660
 5968 004c FEE7     		b	.L440
 5969              	.LVL401:
 5970              	.L449:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5971              		.loc 1 5070 5 view .LVU1661
 5972 004e A36A     		ldr	r3, [r4, #40]
 5973              	.LVL402:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5974              		.loc 1 5070 5 is_stmt 0 view .LVU1662
 5975 0050 43B1     		cbz	r3, .L442
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5976              		.loc 1 5070 5 is_stmt 1 view .LVU1663
ARM GAS  /tmp/ccpsiOt9.s 			page 229


 5977              	.LBB240:
 5978              	.LBI240:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5979              		.loc 2 191 30 view .LVU1664
 5980              	.LBB241:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5981              		.loc 2 193 1 view .LVU1665
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5982              		.loc 2 195 2 view .LVU1666
 5983              		.syntax unified
 5984              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5985 0052 4FF05003 			mov r3, #80												
 5986 0056 83F31188 		msr basepri, r3											
 5987 005a BFF36F8F 		isb														
 5988 005e BFF34F8F 		dsb														
 5989              	
 5990              	@ 0 "" 2
 5991              	.LVL403:
 5992              		.thumb
 5993              		.syntax unified
 5994              	.L443:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5995              		.loc 2 195 2 is_stmt 0 view .LVU1667
 5996              	.LBE241:
 5997              	.LBE240:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5998              		.loc 1 5070 5 is_stmt 1 discriminator 2 view .LVU1668
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5999              		.loc 1 5070 5 discriminator 2 view .LVU1669
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6000              		.loc 1 5070 5 discriminator 2 view .LVU1670
 6001 0062 FEE7     		b	.L443
 6002              	.L442:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6003              		.loc 1 5070 82 discriminator 2 view .LVU1671
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6004              		.loc 1 5072 5 discriminator 2 view .LVU1672
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6005              		.loc 1 5072 30 is_stmt 0 discriminator 2 view .LVU1673
 6006 0064 144B     		ldr	r3, .L450
 6007 0066 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6008              		.loc 1 5072 7 discriminator 2 view .LVU1674
 6009 0068 FBB9     		cbnz	r3, .L444
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6010              		.loc 1 5074 6 is_stmt 1 view .LVU1675
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6011              		.loc 1 5074 15 is_stmt 0 view .LVU1676
 6012 006a 271D     		adds	r7, r4, #4
 6013 006c 3846     		mov	r0, r7
 6014 006e FFF7FEFF 		bl	uxListRemove
 6015              	.LVL404:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6016              		.loc 1 5075 6 is_stmt 1 view .LVU1677
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6017              		.loc 1 5075 6 view .LVU1678
 6018 0072 E06A     		ldr	r0, [r4, #44]
ARM GAS  /tmp/ccpsiOt9.s 			page 230


 6019 0074 114A     		ldr	r2, .L450+4
 6020 0076 1168     		ldr	r1, [r2]
 6021 0078 0123     		movs	r3, #1
 6022 007a 8340     		lsls	r3, r3, r0
 6023 007c 0B43     		orrs	r3, r3, r1
 6024 007e 1360     		str	r3, [r2]
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6025              		.loc 1 5075 6 view .LVU1679
 6026 0080 00EB8000 		add	r0, r0, r0, lsl #2
 6027 0084 3946     		mov	r1, r7
 6028 0086 0E4B     		ldr	r3, .L450+8
 6029 0088 03EB8000 		add	r0, r3, r0, lsl #2
 6030 008c FFF7FEFF 		bl	vListInsertEnd
 6031              	.LVL405:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6032              		.loc 1 5075 36 view .LVU1680
 6033              	.L445:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6034              		.loc 1 5084 5 view .LVU1681
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6035              		.loc 1 5084 41 is_stmt 0 view .LVU1682
 6036 0090 0C4B     		ldr	r3, .L450+12
 6037 0092 1B68     		ldr	r3, [r3]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6038              		.loc 1 5084 7 view .LVU1683
 6039 0094 E26A     		ldr	r2, [r4, #44]
 6040 0096 DB6A     		ldr	r3, [r3, #44]
 6041 0098 9A42     		cmp	r2, r3
 6042 009a CCD9     		bls	.L441
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6043              		.loc 1 5088 6 is_stmt 1 view .LVU1684
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6044              		.loc 1 5088 8 is_stmt 0 view .LVU1685
 6045 009c 0DB1     		cbz	r5, .L446
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6046              		.loc 1 5090 7 is_stmt 1 view .LVU1686
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6047              		.loc 1 5090 34 is_stmt 0 view .LVU1687
 6048 009e 0123     		movs	r3, #1
 6049 00a0 2B60     		str	r3, [r5]
 6050              	.L446:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6051              		.loc 1 5096 6 is_stmt 1 view .LVU1688
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6052              		.loc 1 5096 20 is_stmt 0 view .LVU1689
 6053 00a2 094B     		ldr	r3, .L450+16
 6054 00a4 0122     		movs	r2, #1
 6055 00a6 1A60     		str	r2, [r3]
 6056 00a8 C5E7     		b	.L441
 6057              	.L444:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6058              		.loc 1 5081 6 is_stmt 1 view .LVU1690
 6059 00aa 04F11801 		add	r1, r4, #24
 6060 00ae 0748     		ldr	r0, .L450+20
 6061 00b0 FFF7FEFF 		bl	vListInsertEnd
 6062              	.LVL406:
 6063 00b4 ECE7     		b	.L445
ARM GAS  /tmp/ccpsiOt9.s 			page 231


 6064              	.L451:
 6065 00b6 00BF     		.align	2
 6066              	.L450:
 6067 00b8 00000000 		.word	.LANCHOR16
 6068 00bc 00000000 		.word	.LANCHOR10
 6069 00c0 00000000 		.word	.LANCHOR7
 6070 00c4 00000000 		.word	.LANCHOR9
 6071 00c8 00000000 		.word	.LANCHOR19
 6072 00cc 00000000 		.word	.LANCHOR1
 6073              		.cfi_endproc
 6074              	.LFE52:
 6076              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6077              		.align	1
 6078              		.global	xTaskNotifyStateClear
 6079              		.syntax unified
 6080              		.thumb
 6081              		.thumb_func
 6082              		.fpu fpv4-sp-d16
 6084              	xTaskNotifyStateClear:
 6085              	.LVL407:
 6086              	.LFB53:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6087              		.loc 1 5113 2 view -0
 6088              		.cfi_startproc
 6089              		@ args = 0, pretend = 0, frame = 0
 6090              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6091              		.loc 1 5113 2 is_stmt 0 view .LVU1692
 6092 0000 10B5     		push	{r4, lr}
 6093              	.LCFI46:
 6094              		.cfi_def_cfa_offset 8
 6095              		.cfi_offset 4, -8
 6096              		.cfi_offset 14, -4
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6097              		.loc 1 5114 2 is_stmt 1 view .LVU1693
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6098              		.loc 1 5115 2 view .LVU1694
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6099              		.loc 1 5119 3 view .LVU1695
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6100              		.loc 1 5119 11 is_stmt 0 view .LVU1696
 6101 0002 0446     		mov	r4, r0
 6102 0004 78B1     		cbz	r0, .L457
 6103              	.LVL408:
 6104              	.L453:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6105              		.loc 1 5121 3 is_stmt 1 discriminator 4 view .LVU1697
 6106 0006 FFF7FEFF 		bl	vPortEnterCritical
 6107              	.LVL409:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6108              		.loc 1 5123 4 discriminator 4 view .LVU1698
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6109              		.loc 1 5123 13 is_stmt 0 discriminator 4 view .LVU1699
 6110 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6111 000e DBB2     		uxtb	r3, r3
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6112              		.loc 1 5123 6 discriminator 4 view .LVU1700
ARM GAS  /tmp/ccpsiOt9.s 			page 232


 6113 0010 022B     		cmp	r3, #2
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6114              		.loc 1 5125 5 is_stmt 1 discriminator 4 view .LVU1701
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6115              		.loc 1 5125 26 is_stmt 0 discriminator 4 view .LVU1702
 6116 0012 03BF     		ittte	eq
 6117 0014 0023     		moveq	r3, #0
 6118 0016 84F85030 		strbeq	r3, [r4, #80]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6119              		.loc 1 5126 5 is_stmt 1 discriminator 4 view .LVU1703
 6120              	.LVL410:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6121              		.loc 1 5126 13 is_stmt 0 discriminator 4 view .LVU1704
 6122 001a 0124     		moveq	r4, #1
 6123              	.LVL411:
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6124              		.loc 1 5130 13 discriminator 4 view .LVU1705
 6125 001c 0024     		movne	r4, #0
 6126              	.LVL412:
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6127              		.loc 1 5133 3 is_stmt 1 discriminator 4 view .LVU1706
 6128 001e FFF7FEFF 		bl	vPortExitCritical
 6129              	.LVL413:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6130              		.loc 1 5135 3 discriminator 4 view .LVU1707
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6131              		.loc 1 5136 2 is_stmt 0 discriminator 4 view .LVU1708
 6132 0022 2046     		mov	r0, r4
 6133 0024 10BD     		pop	{r4, pc}
 6134              	.LVL414:
 6135              	.L457:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6136              		.loc 1 5119 11 discriminator 1 view .LVU1709
 6137 0026 014B     		ldr	r3, .L458
 6138 0028 1C68     		ldr	r4, [r3]
 6139              	.LVL415:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6140              		.loc 1 5119 11 discriminator 1 view .LVU1710
 6141 002a ECE7     		b	.L453
 6142              	.L459:
 6143              		.align	2
 6144              	.L458:
 6145 002c 00000000 		.word	.LANCHOR9
 6146              		.cfi_endproc
 6147              	.LFE53:
 6149              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 6150              		.align	1
 6151              		.global	ulTaskNotifyValueClear
 6152              		.syntax unified
 6153              		.thumb
 6154              		.thumb_func
 6155              		.fpu fpv4-sp-d16
 6157              	ulTaskNotifyValueClear:
 6158              	.LVL416:
 6159              	.LFB54:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6160              		.loc 1 5144 2 is_stmt 1 view -0
ARM GAS  /tmp/ccpsiOt9.s 			page 233


 6161              		.cfi_startproc
 6162              		@ args = 0, pretend = 0, frame = 0
 6163              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6164              		.loc 1 5144 2 is_stmt 0 view .LVU1712
 6165 0000 70B5     		push	{r4, r5, r6, lr}
 6166              	.LCFI47:
 6167              		.cfi_def_cfa_offset 16
 6168              		.cfi_offset 4, -16
 6169              		.cfi_offset 5, -12
 6170              		.cfi_offset 6, -8
 6171              		.cfi_offset 14, -4
 6172 0002 0C46     		mov	r4, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6173              		.loc 1 5145 2 is_stmt 1 view .LVU1713
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6174              		.loc 1 5146 2 view .LVU1714
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6175              		.loc 1 5150 3 view .LVU1715
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6176              		.loc 1 5150 11 is_stmt 0 view .LVU1716
 6177 0004 0546     		mov	r5, r0
 6178 0006 60B1     		cbz	r0, .L463
 6179              	.LVL417:
 6180              	.L461:
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6181              		.loc 1 5152 3 is_stmt 1 discriminator 4 view .LVU1717
 6182 0008 FFF7FEFF 		bl	vPortEnterCritical
 6183              	.LVL418:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6184              		.loc 1 5156 4 discriminator 4 view .LVU1718
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6185              		.loc 1 5156 27 is_stmt 0 discriminator 4 view .LVU1719
 6186 000c 064B     		ldr	r3, .L464
 6187 000e 1B68     		ldr	r3, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6188              		.loc 1 5156 13 discriminator 4 view .LVU1720
 6189 0010 DE6C     		ldr	r6, [r3, #76]
 6190              	.LVL419:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6191              		.loc 1 5157 4 is_stmt 1 discriminator 4 view .LVU1721
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6192              		.loc 1 5157 27 is_stmt 0 discriminator 4 view .LVU1722
 6193 0012 EB6C     		ldr	r3, [r5, #76]
 6194 0014 23EA0403 		bic	r3, r3, r4
 6195 0018 EB64     		str	r3, [r5, #76]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6196              		.loc 1 5159 3 is_stmt 1 discriminator 4 view .LVU1723
 6197 001a FFF7FEFF 		bl	vPortExitCritical
 6198              	.LVL420:
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6199              		.loc 1 5161 3 discriminator 4 view .LVU1724
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6200              		.loc 1 5162 2 is_stmt 0 discriminator 4 view .LVU1725
 6201 001e 3046     		mov	r0, r6
 6202 0020 70BD     		pop	{r4, r5, r6, pc}
 6203              	.LVL421:
ARM GAS  /tmp/ccpsiOt9.s 			page 234


 6204              	.L463:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6205              		.loc 1 5150 11 discriminator 1 view .LVU1726
 6206 0022 014B     		ldr	r3, .L464
 6207 0024 1D68     		ldr	r5, [r3]
 6208              	.LVL422:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6209              		.loc 1 5150 11 discriminator 1 view .LVU1727
 6210 0026 EFE7     		b	.L461
 6211              	.L465:
 6212              		.align	2
 6213              	.L464:
 6214 0028 00000000 		.word	.LANCHOR9
 6215              		.cfi_endproc
 6216              	.LFE54:
 6218              		.global	pxCurrentTCB
 6219              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6220              		.align	2
 6221              		.set	.LANCHOR9,. + 0
 6224              	pxCurrentTCB:
 6225 0000 00000000 		.space	4
 6226              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6227              		.align	2
 6228              		.set	.LANCHOR2,. + 0
 6231              	pxDelayedTaskList:
 6232 0000 00000000 		.space	4
 6233              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6234              		.align	2
 6235              		.set	.LANCHOR11,. + 0
 6238              	pxOverflowDelayedTaskList:
 6239 0000 00000000 		.space	4
 6240              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6241              		.align	2
 6242              		.set	.LANCHOR7,. + 0
 6245              	pxReadyTasksLists:
 6246 0000 00000000 		.space	140
 6246      00000000 
 6246      00000000 
 6246      00000000 
 6246      00000000 
 6247              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6248              		.align	2
 6249              		.set	.LANCHOR6,. + 0
 6252              	uxCurrentNumberOfTasks:
 6253 0000 00000000 		.space	4
 6254              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6255              		.align	2
 6256              		.set	.LANCHOR4,. + 0
 6259              	uxDeletedTasksWaitingCleanUp:
 6260 0000 00000000 		.space	4
 6261              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6262              		.align	2
 6263              		.set	.LANCHOR16,. + 0
 6266              	uxSchedulerSuspended:
 6267 0000 00000000 		.space	4
 6268              		.section	.bss.uxTaskNumber,"aw",%nobits
 6269              		.align	2
ARM GAS  /tmp/ccpsiOt9.s 			page 235


 6270              		.set	.LANCHOR15,. + 0
 6273              	uxTaskNumber:
 6274 0000 00000000 		.space	4
 6275              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6276              		.align	2
 6277              		.set	.LANCHOR10,. + 0
 6280              	uxTopReadyPriority:
 6281 0000 00000000 		.space	4
 6282              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6283              		.align	2
 6284              		.set	.LANCHOR12,. + 0
 6287              	xDelayedTaskList1:
 6288 0000 00000000 		.space	20
 6288      00000000 
 6288      00000000 
 6288      00000000 
 6288      00000000 
 6289              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6290              		.align	2
 6291              		.set	.LANCHOR13,. + 0
 6294              	xDelayedTaskList2:
 6295 0000 00000000 		.space	20
 6295      00000000 
 6295      00000000 
 6295      00000000 
 6295      00000000 
 6296              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6297              		.align	2
 6298              		.set	.LANCHOR17,. + 0
 6301              	xIdleTaskHandle:
 6302 0000 00000000 		.space	4
 6303              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6304              		.align	2
 6305              		.set	.LANCHOR3,. + 0
 6308              	xNextTaskUnblockTime:
 6309 0000 00000000 		.space	4
 6310              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6311              		.align	2
 6312              		.set	.LANCHOR18,. + 0
 6315              	xNumOfOverflows:
 6316 0000 00000000 		.space	4
 6317              		.section	.bss.xPendedTicks,"aw",%nobits
 6318              		.align	2
 6319              		.set	.LANCHOR20,. + 0
 6322              	xPendedTicks:
 6323 0000 00000000 		.space	4
 6324              		.section	.bss.xPendingReadyList,"aw",%nobits
 6325              		.align	2
 6326              		.set	.LANCHOR1,. + 0
 6329              	xPendingReadyList:
 6330 0000 00000000 		.space	20
 6330      00000000 
 6330      00000000 
 6330      00000000 
 6330      00000000 
 6331              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6332              		.align	2
ARM GAS  /tmp/ccpsiOt9.s 			page 236


 6333              		.set	.LANCHOR14,. + 0
 6336              	xSchedulerRunning:
 6337 0000 00000000 		.space	4
 6338              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6339              		.align	2
 6340              		.set	.LANCHOR0,. + 0
 6343              	xSuspendedTaskList:
 6344 0000 00000000 		.space	20
 6344      00000000 
 6344      00000000 
 6344      00000000 
 6344      00000000 
 6345              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6346              		.align	2
 6347              		.set	.LANCHOR5,. + 0
 6350              	xTasksWaitingTermination:
 6351 0000 00000000 		.space	20
 6351      00000000 
 6351      00000000 
 6351      00000000 
 6351      00000000 
 6352              		.section	.bss.xTickCount,"aw",%nobits
 6353              		.align	2
 6354              		.set	.LANCHOR8,. + 0
 6357              	xTickCount:
 6358 0000 00000000 		.space	4
 6359              		.section	.bss.xYieldPending,"aw",%nobits
 6360              		.align	2
 6361              		.set	.LANCHOR19,. + 0
 6364              	xYieldPending:
 6365 0000 00000000 		.space	4
 6366              		.text
 6367              	.Letext0:
 6368              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 6369              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 6370              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 6371              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6372              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6373              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6374              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccpsiOt9.s 			page 237


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccpsiOt9.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccpsiOt9.s:25     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccpsiOt9.s:103    .text.prvTaskIsTaskSuspended:0000000000000034 $d
     /tmp/ccpsiOt9.s:109    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccpsiOt9.s:115    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccpsiOt9.s:161    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/ccpsiOt9.s:167    .text.prvIdleTask:0000000000000000 $t
     /tmp/ccpsiOt9.s:173    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccpsiOt9.s:295    .text.prvIdleTask:0000000000000060 $d
     /tmp/ccpsiOt9.s:303    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccpsiOt9.s:309    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccpsiOt9.s:429    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/ccpsiOt9.s:440    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccpsiOt9.s:447    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccpsiOt9.s:850    .text.xTaskCreate:0000000000000188 $d
     /tmp/ccpsiOt9.s:867    .text.vTaskDelete:0000000000000000 $t
     /tmp/ccpsiOt9.s:874    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccpsiOt9.s:1073   .text.vTaskDelete:00000000000000c4 $d
     /tmp/ccpsiOt9.s:1086   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccpsiOt9.s:1093   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccpsiOt9.s:1139   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/ccpsiOt9.s:1144   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccpsiOt9.s:1151   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccpsiOt9.s:1232   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/ccpsiOt9.s:1237   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccpsiOt9.s:1244   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccpsiOt9.s:1476   .text.vTaskPrioritySet:00000000000000d4 $d
     /tmp/ccpsiOt9.s:1483   .text.vTaskResume:0000000000000000 $t
     /tmp/ccpsiOt9.s:1490   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccpsiOt9.s:1620   .text.vTaskResume:000000000000007c $d
     /tmp/ccpsiOt9.s:1627   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccpsiOt9.s:1634   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccpsiOt9.s:1800   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/ccpsiOt9.s:1809   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccpsiOt9.s:1813   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccpsiOt9.s:1820   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccpsiOt9.s:1938   .text.vTaskStartScheduler:0000000000000064 $d
     /tmp/ccpsiOt9.s:1948   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccpsiOt9.s:1955   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccpsiOt9.s:1998   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/ccpsiOt9.s:2003   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccpsiOt9.s:2010   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccpsiOt9.s:2029   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccpsiOt9.s:2034   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccpsiOt9.s:2041   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccpsiOt9.s:2062   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccpsiOt9.s:2067   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccpsiOt9.s:2074   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccpsiOt9.s:2103   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccpsiOt9.s:2108   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccpsiOt9.s:2115   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccpsiOt9.s:2131   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccpsiOt9.s:2136   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccpsiOt9.s:2143   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccpsiOt9.s:2201   .text.pcTaskGetName:0000000000000024 $d
ARM GAS  /tmp/ccpsiOt9.s 			page 238


     /tmp/ccpsiOt9.s:2206   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccpsiOt9.s:2213   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccpsiOt9.s:2489   .text.xTaskIncrementTick:000000000000010c $d
     /tmp/ccpsiOt9.s:2504   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccpsiOt9.s:2511   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccpsiOt9.s:2758   .text.xTaskResumeAll:00000000000000e8 $d
     /tmp/ccpsiOt9.s:2771   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccpsiOt9.s:2778   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccpsiOt9.s:2871   .text.vTaskDelay:0000000000000048 $d
     /tmp/ccpsiOt9.s:2876   .text.xTaskCatchUpTicks:0000000000000000 $t
     /tmp/ccpsiOt9.s:2883   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
     /tmp/ccpsiOt9.s:2951   .text.xTaskCatchUpTicks:0000000000000030 $d
     /tmp/ccpsiOt9.s:2957   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccpsiOt9.s:2964   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccpsiOt9.s:3101   .text.vTaskSwitchContext:0000000000000080 $d
     /tmp/ccpsiOt9.s:3112   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccpsiOt9.s:3119   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccpsiOt9.s:3320   .text.vTaskSuspend:00000000000000cc $d
     /tmp/ccpsiOt9.s:3331   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccpsiOt9.s:3338   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccpsiOt9.s:3406   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/ccpsiOt9.s:3411   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccpsiOt9.s:3418   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccpsiOt9.s:3535   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/ccpsiOt9.s:3541   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccpsiOt9.s:3548   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccpsiOt9.s:3672   .text.xTaskRemoveFromEventList:0000000000000070 $d
     /tmp/ccpsiOt9.s:3682   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccpsiOt9.s:3689   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccpsiOt9.s:3824   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/ccpsiOt9.s:3833   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccpsiOt9.s:3840   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccpsiOt9.s:3910   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/ccpsiOt9.s:3916   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccpsiOt9.s:3923   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccpsiOt9.s:3946   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccpsiOt9.s:3952   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccpsiOt9.s:3959   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccpsiOt9.s:4143   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/ccpsiOt9.s:4150   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccpsiOt9.s:4157   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccpsiOt9.s:4174   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccpsiOt9.s:4179   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccpsiOt9.s:4186   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccpsiOt9.s:4205   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccpsiOt9.s:4210   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccpsiOt9.s:4217   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccpsiOt9.s:4249   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/ccpsiOt9.s:4255   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccpsiOt9.s:4262   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccpsiOt9.s:4415   .text.xTaskPriorityInherit:000000000000009c $d
     /tmp/ccpsiOt9.s:4422   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccpsiOt9.s:4429   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccpsiOt9.s:4624   .text.xTaskPriorityDisinherit:00000000000000a4 $d
     /tmp/ccpsiOt9.s:4631   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccpsiOt9.s:4638   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccpsiOt9.s:4829   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000a8 $d
ARM GAS  /tmp/ccpsiOt9.s 			page 239


     /tmp/ccpsiOt9.s:4836   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccpsiOt9.s:4843   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccpsiOt9.s:4870   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccpsiOt9.s:4875   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccpsiOt9.s:4882   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccpsiOt9.s:4913   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccpsiOt9.s:4918   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccpsiOt9.s:4925   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccpsiOt9.s:5047   .text.ulTaskNotifyTake:0000000000000074 $d
     /tmp/ccpsiOt9.s:5052   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccpsiOt9.s:5059   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccpsiOt9.s:5203   .text.xTaskNotifyWait:0000000000000094 $d
     /tmp/ccpsiOt9.s:5208   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccpsiOt9.s:5215   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccpsiOt9.s:5271   .text.xTaskGenericNotify:000000000000002a $d
     /tmp/ccpsiOt9.s:5484   .text.xTaskGenericNotify:00000000000000ec $d
     /tmp/ccpsiOt9.s:5491   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccpsiOt9.s:5498   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccpsiOt9.s:5576   .text.xTaskGenericNotifyFromISR:0000000000000040 $d
     /tmp/ccpsiOt9.s:5831   .text.xTaskGenericNotifyFromISR:0000000000000110 $d
     /tmp/ccpsiOt9.s:5841   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccpsiOt9.s:5848   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccpsiOt9.s:6067   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/ccpsiOt9.s:6077   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccpsiOt9.s:6084   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccpsiOt9.s:6145   .text.xTaskNotifyStateClear:000000000000002c $d
     /tmp/ccpsiOt9.s:6150   .text.ulTaskNotifyValueClear:0000000000000000 $t
     /tmp/ccpsiOt9.s:6157   .text.ulTaskNotifyValueClear:0000000000000000 ulTaskNotifyValueClear
     /tmp/ccpsiOt9.s:6214   .text.ulTaskNotifyValueClear:0000000000000028 $d
     /tmp/ccpsiOt9.s:6224   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccpsiOt9.s:6220   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccpsiOt9.s:6227   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccpsiOt9.s:6231   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccpsiOt9.s:6234   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccpsiOt9.s:6238   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccpsiOt9.s:6241   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccpsiOt9.s:6245   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccpsiOt9.s:6248   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccpsiOt9.s:6252   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccpsiOt9.s:6255   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccpsiOt9.s:6259   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccpsiOt9.s:6262   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccpsiOt9.s:6266   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccpsiOt9.s:6269   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccpsiOt9.s:6273   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccpsiOt9.s:6276   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccpsiOt9.s:6280   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccpsiOt9.s:6283   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccpsiOt9.s:6287   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccpsiOt9.s:6290   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccpsiOt9.s:6294   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccpsiOt9.s:6297   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccpsiOt9.s:6301   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccpsiOt9.s:6304   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccpsiOt9.s:6308   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccpsiOt9.s:6311   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccpsiOt9.s:6315   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
ARM GAS  /tmp/ccpsiOt9.s 			page 240


     /tmp/ccpsiOt9.s:6318   .bss.xPendedTicks:0000000000000000 $d
     /tmp/ccpsiOt9.s:6322   .bss.xPendedTicks:0000000000000000 xPendedTicks
     /tmp/ccpsiOt9.s:6325   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccpsiOt9.s:6329   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccpsiOt9.s:6332   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccpsiOt9.s:6336   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccpsiOt9.s:6339   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccpsiOt9.s:6343   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccpsiOt9.s:6346   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccpsiOt9.s:6350   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccpsiOt9.s:6353   .bss.xTickCount:0000000000000000 $d
     /tmp/ccpsiOt9.s:6357   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccpsiOt9.s:6360   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccpsiOt9.s:6364   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccpsiOt9.s:5277   .text.xTaskGenericNotify:000000000000002f $d
     /tmp/ccpsiOt9.s:5277   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/ccpsiOt9.s:5582   .text.xTaskGenericNotifyFromISR:0000000000000045 $d
     /tmp/ccpsiOt9.s:5582   .text.xTaskGenericNotifyFromISR:0000000000000046 $t

UNDEFINED SYMBOLS
vPortEnterCritical
uxListRemove
vPortExitCritical
vPortFree
vListInsert
vListInsertEnd
pvPortMalloc
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortValidateInterruptPriority
xPortStartScheduler
vPortEndScheduler
