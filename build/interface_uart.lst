ARM GAS  /tmp/ccd1OyLw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"interface_uart.cpp"
  14              		.section	.rodata
  15              		.align	2
  16              	.LC0:
  17 0000 75617274 		.ascii	"uart_server_thread_def\000"
  17      5F736572 
  17      7665725F 
  17      74687265 
  17      61645F64 
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.rodata._ZL18CHANNEL_OFFSET_TAB,"a"
  22              		.align	2
  25              	_ZL18CHANNEL_OFFSET_TAB:
  26 0000 081C3044 		.ascii	"\010\0340DXl"
  26      586C
  27              		.section	.text.LL_DMA_EnableChannel,"ax",%progbits
  28              		.align	1
  29              		.arch armv7e-m
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  33              		.fpu fpv4-sp-d16
  35              	LL_DMA_EnableChannel:
  36              	.LFB193:
  37              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @file    stm32g4xx_ll_dma.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/ccd1OyLw.s 			page 2


  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #ifndef __STM32G4xx_LL_DMA_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __STM32G4xx_LL_DMA_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #include "stm32g4xx_ll_dmamux.h"
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @addtogroup STM32G4xx_LL_Driver
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE)
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ,
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ,
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel8_BASE - DMA1_BASE)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** };
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Define used to get CSELR register offset */
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
ARM GAS  /tmp/ccd1OyLw.s 			page 3


  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            POSITION_VAL(DMA_CSELR_C1S << ((Channel-1U)*4U))
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** typedef struct
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         is incremented or not.
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         is incremented or not.
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/ccd1OyLw.s 			page 4


 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMAMUX_LL_EC_REQUEST
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
ARM GAS  /tmp/ccd1OyLw.s 			page 5


 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF8                 DMA_IFCR_CGIF8        /*!< Channel 8 global flag         
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF8                DMA_IFCR_CTCIF8       /*!< Channel 8 transfer complete fl
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF8                DMA_IFCR_CHTIF8       /*!< Channel 8 half transfer flag  
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF8                DMA_IFCR_CTEIF8       /*!< Channel 8 transfer error flag 
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
ARM GAS  /tmp/ccd1OyLw.s 			page 6


 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF8                   DMA_ISR_GIF8          /*!< Channel 8 global flag         
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF8                  DMA_ISR_TCIF8         /*!< Channel 8 transfer complete fl
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF8                  DMA_ISR_HTIF8         /*!< Channel 8 half transfer flag  
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF8                  DMA_ISR_TEIF8         /*!< Channel 8 transfer error flag 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000000U /*!< DMA Channel 1 */
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000001U /*!< DMA Channel 2 */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000002U /*!< DMA Channel 3 */
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000003U /*!< DMA Channel 4 */
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000004U /*!< DMA Channel 5 */
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000005U /*!< DMA Channel 6 */
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000006U /*!< DMA Channel 7 */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_8                  0x00000007U /*!< DMA Channel 8 */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
ARM GAS  /tmp/ccd1OyLw.s 			page 7


 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/ccd1OyLw.s 			page 8


 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Write a value in DMA register
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __REG__ Register to be written
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Read a value in DMA register
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __REG__ Register to be read
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Register value
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval DMAx
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel8)) ?  DMA2 : DMA1)
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #else
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel6)) ?  DMA2 : DMA1)
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
ARM GAS  /tmp/ccd1OyLw.s 			page 9


 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel7)) ? LL_DMA_CHANNEL_7 : \
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel7)) ? LL_DMA_CHANNEL_7 : \
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    LL_DMA_CHANNEL_8)
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #else
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    LL_DMA_CHANNEL_6)
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval DMAx_Channely
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    DMA2_Channel8)
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #else
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
ARM GAS  /tmp/ccd1OyLw.s 			page 10


 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    DMA2_Channel6)
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Enable DMA channel.
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
  38              		.loc 1 518 1
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 16
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42              		@ link register save eliminated.
  43 0000 80B4     		push	{r7}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
  46              		.cfi_offset 7, -4
  47 0002 85B0     		sub	sp, sp, #20
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 24
  50 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccd1OyLw.s 			page 11


  51              	.LCFI2:
  52              		.cfi_def_cfa_register 7
  53 0006 7860     		str	r0, [r7, #4]
  54 0008 3960     		str	r1, [r7]
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
  55              		.loc 1 519 12
  56 000a 7B68     		ldr	r3, [r7, #4]
  57 000c FB60     		str	r3, [r7, #12]
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CCR, 
  58              		.loc 1 520 3
  59 000e 0C4A     		ldr	r2, .L2
  60 0010 3B68     		ldr	r3, [r7]
  61 0012 1344     		add	r3, r3, r2
  62 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63 0016 1A46     		mov	r2, r3
  64 0018 FB68     		ldr	r3, [r7, #12]
  65 001a 1344     		add	r3, r3, r2
  66 001c 1B68     		ldr	r3, [r3]
  67 001e 0849     		ldr	r1, .L2
  68 0020 3A68     		ldr	r2, [r7]
  69 0022 0A44     		add	r2, r2, r1
  70 0024 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  71 0026 1146     		mov	r1, r2
  72 0028 FA68     		ldr	r2, [r7, #12]
  73 002a 0A44     		add	r2, r2, r1
  74 002c 43F00103 		orr	r3, r3, #1
  75 0030 1360     		str	r3, [r2]
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
  76              		.loc 1 521 1
  77 0032 00BF     		nop
  78 0034 1437     		adds	r7, r7, #20
  79              	.LCFI3:
  80              		.cfi_def_cfa_offset 4
  81 0036 BD46     		mov	sp, r7
  82              	.LCFI4:
  83              		.cfi_def_cfa_register 13
  84              		@ sp needed
  85 0038 5DF8047B 		ldr	r7, [sp], #4
  86              	.LCFI5:
  87              		.cfi_restore 7
  88              		.cfi_def_cfa_offset 0
  89 003c 7047     		bx	lr
  90              	.L3:
  91 003e 00BF     		.align	2
  92              	.L2:
  93 0040 00000000 		.word	_ZL18CHANNEL_OFFSET_TAB
  94              		.cfi_endproc
  95              	.LFE193:
  97              		.section	.text.LL_DMA_DisableChannel,"ax",%progbits
  98              		.align	1
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu fpv4-sp-d16
 104              	LL_DMA_DisableChannel:
 105              	.LFB194:
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/ccd1OyLw.s 			page 12


 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Disable DMA channel.
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 106              		.loc 1 540 1
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 16
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 80B4     		push	{r7}
 112              	.LCFI6:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 7, -4
 115 0002 85B0     		sub	sp, sp, #20
 116              	.LCFI7:
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              	.LCFI8:
 120              		.cfi_def_cfa_register 7
 121 0006 7860     		str	r0, [r7, #4]
 122 0008 3960     		str	r1, [r7]
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 123              		.loc 1 541 12
 124 000a 7B68     		ldr	r3, [r7, #4]
 125 000c FB60     		str	r3, [r7, #12]
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CCR
 126              		.loc 1 542 3
 127 000e 0C4A     		ldr	r2, .L5
 128 0010 3B68     		ldr	r3, [r7]
 129 0012 1344     		add	r3, r3, r2
 130 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0016 1A46     		mov	r2, r3
 132 0018 FB68     		ldr	r3, [r7, #12]
 133 001a 1344     		add	r3, r3, r2
 134 001c 1B68     		ldr	r3, [r3]
 135 001e 0849     		ldr	r1, .L5
 136 0020 3A68     		ldr	r2, [r7]
 137 0022 0A44     		add	r2, r2, r1
 138 0024 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 139 0026 1146     		mov	r1, r2
 140 0028 FA68     		ldr	r2, [r7, #12]
 141 002a 0A44     		add	r2, r2, r1
 142 002c 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccd1OyLw.s 			page 13


 143 0030 1360     		str	r3, [r2]
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 144              		.loc 1 543 1
 145 0032 00BF     		nop
 146 0034 1437     		adds	r7, r7, #20
 147              	.LCFI9:
 148              		.cfi_def_cfa_offset 4
 149 0036 BD46     		mov	sp, r7
 150              	.LCFI10:
 151              		.cfi_def_cfa_register 13
 152              		@ sp needed
 153 0038 5DF8047B 		ldr	r7, [sp], #4
 154              	.LCFI11:
 155              		.cfi_restore 7
 156              		.cfi_def_cfa_offset 0
 157 003c 7047     		bx	lr
 158              	.L6:
 159 003e 00BF     		.align	2
 160              	.L5:
 161 0040 00000000 		.word	_ZL18CHANNEL_OFFSET_TAB
 162              		.cfi_endproc
 163              	.LFE194:
 165              		.section	.text.LL_DMA_SetDataLength,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu fpv4-sp-d16
 172              	LL_DMA_SetDataLength:
 173              	.LFB211:
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                     DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
ARM GAS  /tmp/ccd1OyLw.s 			page 14


 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Configuration);
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
ARM GAS  /tmp/ccd1OyLw.s 			page 15


 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
ARM GAS  /tmp/ccd1OyLw.s 			page 16


 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Mode);
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_CIRC));
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
ARM GAS  /tmp/ccd1OyLw.s 			page 17


 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_PINC));
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/ccd1OyLw.s 			page 18


 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_MINC));
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Peripheral size.
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Peripheral size.
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
ARM GAS  /tmp/ccd1OyLw.s 			page 19


 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Memory size.
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Memory size.
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
ARM GAS  /tmp/ccd1OyLw.s 			page 20


 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Channel priority level.
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Priority);
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Channel priority level.
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
ARM GAS  /tmp/ccd1OyLw.s 			page 21


 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_PL));
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This action has no effect if
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         channel is enabled.
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 174              		.loc 1 998 1
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 24
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              	.LCFI12:
 181              		.cfi_def_cfa_offset 4
 182              		.cfi_offset 7, -4
 183 0002 87B0     		sub	sp, sp, #28
 184              	.LCFI13:
 185              		.cfi_def_cfa_offset 32
 186 0004 00AF     		add	r7, sp, #0
 187              	.LCFI14:
 188              		.cfi_def_cfa_register 7
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 192              		.loc 1 999 12
 193 000c FB68     		ldr	r3, [r7, #12]
 194 000e 7B61     		str	r3, [r7, #20]
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CN
 195              		.loc 1 1000 3
 196 0010 0D4A     		ldr	r2, .L8
 197 0012 BB68     		ldr	r3, [r7, #8]
 198 0014 1344     		add	r3, r3, r2
 199 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccd1OyLw.s 			page 22


 200 0018 1A46     		mov	r2, r3
 201 001a 7B69     		ldr	r3, [r7, #20]
 202 001c 1344     		add	r3, r3, r2
 203 001e 5B68     		ldr	r3, [r3, #4]
 204 0020 1B0C     		lsrs	r3, r3, #16
 205 0022 1B04     		lsls	r3, r3, #16
 206 0024 0849     		ldr	r1, .L8
 207 0026 BA68     		ldr	r2, [r7, #8]
 208 0028 0A44     		add	r2, r2, r1
 209 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 210 002c 1146     		mov	r1, r2
 211 002e 7A69     		ldr	r2, [r7, #20]
 212 0030 0A44     		add	r2, r2, r1
 213 0032 1146     		mov	r1, r2
 214 0034 7A68     		ldr	r2, [r7, #4]
 215 0036 1343     		orrs	r3, r3, r2
 216 0038 4B60     		str	r3, [r1, #4]
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 217              		.loc 1 1002 1
 218 003a 00BF     		nop
 219 003c 1C37     		adds	r7, r7, #28
 220              	.LCFI15:
 221              		.cfi_def_cfa_offset 4
 222 003e BD46     		mov	sp, r7
 223              	.LCFI16:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 0040 5DF8047B 		ldr	r7, [sp], #4
 227              	.LCFI17:
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 0044 7047     		bx	lr
 231              	.L9:
 232 0046 00BF     		.align	2
 233              	.L8:
 234 0048 00000000 		.word	_ZL18CHANNEL_OFFSET_TAB
 235              		.cfi_endproc
 236              	.LFE211:
 238              		.section	.text.LL_DMA_SetMemoryAddress,"ax",%progbits
 239              		.align	1
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	LL_DMA_SetMemoryAddress:
 246              	.LFB214:
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         remaining bytes to be transmitted.
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/ccd1OyLw.s 			page 23


1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register address (LL_PPP_DMA_GetR
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   /* Direction Memory to Periph */
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   {
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   }
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   else
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   {
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
ARM GAS  /tmp/ccd1OyLw.s 			page 24


1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   }
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set the Memory address.
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 247              		.loc 1 1093 1
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 24
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 80B4     		push	{r7}
 253              	.LCFI18:
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 87B0     		sub	sp, sp, #28
 257              	.LCFI19:
 258              		.cfi_def_cfa_offset 32
 259 0004 00AF     		add	r7, sp, #0
 260              	.LCFI20:
 261              		.cfi_def_cfa_register 7
 262 0006 F860     		str	r0, [r7, #12]
 263 0008 B960     		str	r1, [r7, #8]
 264 000a 7A60     		str	r2, [r7, #4]
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 265              		.loc 1 1094 12
 266 000c FB68     		ldr	r3, [r7, #12]
 267 000e 7B61     		str	r3, [r7, #20]
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CMA
 268              		.loc 1 1095 3
 269 0010 074A     		ldr	r2, .L11
 270 0012 BB68     		ldr	r3, [r7, #8]
 271 0014 1344     		add	r3, r3, r2
 272 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 273 0018 1A46     		mov	r2, r3
 274 001a 7B69     		ldr	r3, [r7, #20]
 275 001c 1344     		add	r3, r3, r2
 276 001e 1A46     		mov	r2, r3
 277 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccd1OyLw.s 			page 25


 278 0022 D360     		str	r3, [r2, #12]
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 279              		.loc 1 1096 1
 280 0024 00BF     		nop
 281 0026 1C37     		adds	r7, r7, #28
 282              	.LCFI21:
 283              		.cfi_def_cfa_offset 4
 284 0028 BD46     		mov	sp, r7
 285              	.LCFI22:
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 002a 5DF8047B 		ldr	r7, [sp], #4
 289              	.LCFI23:
 290              		.cfi_restore 7
 291              		.cfi_def_cfa_offset 0
 292 002e 7047     		bx	lr
 293              	.L12:
 294              		.align	2
 295              	.L11:
 296 0030 00000000 		.word	_ZL18CHANNEL_OFFSET_TAB
 297              		.cfi_endproc
 298              	.LFE214:
 300              		.section	.rodata._ZL19USART_PRESCALER_TAB,"a"
 301              		.align	2
 304              	_ZL19USART_PRESCALER_TAB:
 305 0000 01000000 		.word	1
 306 0004 02000000 		.word	2
 307 0008 04000000 		.word	4
 308 000c 06000000 		.word	6
 309 0010 08000000 		.word	8
 310 0014 0A000000 		.word	10
 311 0018 0C000000 		.word	12
 312 001c 10000000 		.word	16
 313 0020 20000000 		.word	32
 314 0024 40000000 		.word	64
 315 0028 80000000 		.word	128
 316 002c 00010000 		.word	256
 317              		.section	.rodata._ZL16OFFSET_TAB_CCMRx,"a"
 318              		.align	2
 321              	_ZL16OFFSET_TAB_CCMRx:
 322 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
 322      04040404 
 322      3838
 323              		.section	.rodata._ZL14SHIFT_TAB_OCxx,"a"
 324              		.align	2
 327              	_ZL14SHIFT_TAB_OCxx:
 328 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
 328      00000800 
 328      0008
 329              		.section	.rodata._ZL14SHIFT_TAB_ICxx,"a"
 330              		.align	2
 333              	_ZL14SHIFT_TAB_ICxx:
 334 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
 334      00000800 
 334      0000
 335              		.section	.rodata._ZL14SHIFT_TAB_CCxP,"a"
 336              		.align	2
ARM GAS  /tmp/ccd1OyLw.s 			page 26


 339              	_ZL14SHIFT_TAB_CCxP:
 340 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
 340      080A0C0E 
 340      1014
 341              		.section	.rodata._ZL14SHIFT_TAB_OISx,"a"
 342              		.align	2
 345              	_ZL14SHIFT_TAB_OISx:
 346 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
 346      04050607 
 346      080A
 347              		.section	.rodata._ZL12one_by_sqrt3,"a"
 348              		.align	2
 351              	_ZL12one_by_sqrt3:
 352 0000 3ACD133F 		.word	1058262330
 353              		.section	.rodata._ZL12two_by_sqrt3,"a"
 354              		.align	2
 357              	_ZL12two_by_sqrt3:
 358 0000 3ACD933F 		.word	1066650938
 359              		.section	.rodata._ZL10sqrt3_by_2,"a"
 360              		.align	2
 363              	_ZL10sqrt3_by_2:
 364 0000 D7B35D3F 		.word	1063105495
 365              		.section	.bss._ZL13dma_tx_buffer,"aw",%nobits
 366              		.align	2
 369              	_ZL13dma_tx_buffer:
 370 0000 00000000 		.space	64
 370      00000000 
 370      00000000 
 370      00000000 
 370      00000000 
 371              		.section	.bss._ZL6tx_len,"aw",%nobits
 374              	_ZL6tx_len:
 375 0000 00       		.space	1
 376              		.section	.bss._ZL13uart_recv_buf,"aw",%nobits
 377              		.align	2
 380              	_ZL13uart_recv_buf:
 381 0000 00000000 		.space	65
 381      00000000 
 381      00000000 
 381      00000000 
 381      00000000 
 382              		.global	uart_thread
 383              		.section	.bss.uart_thread,"aw",%nobits
 384              		.align	2
 387              	uart_thread:
 388 0000 00000000 		.space	4
 389              		.global	stack_size_uart_thread
 390              		.section	.rodata.stack_size_uart_thread,"a"
 391              		.align	2
 394              	stack_size_uart_thread:
 395 0000 00040000 		.word	1024
 396              		.section	.text.copy_data_to_uart_buffer,"ax",%progbits
 397              		.align	1
 398              		.global	copy_data_to_uart_buffer
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
ARM GAS  /tmp/ccd1OyLw.s 			page 27


 402              		.fpu fpv4-sp-d16
 404              	copy_data_to_uart_buffer:
 405              	.LFB2873:
 406              		.file 2 "Src/interface_uart.cpp"
   1:Src/interface_uart.cpp **** 
   2:Src/interface_uart.cpp **** #include "interface_uart.h"
   3:Src/interface_uart.cpp **** #include "freertos_vars.h"
   4:Src/interface_uart.cpp **** #include "canopen.hpp"
   5:Src/interface_uart.cpp **** 
   6:Src/interface_uart.cpp **** #include "main.h"
   7:Src/interface_uart.cpp **** 
   8:Src/interface_uart.cpp **** #include "mc_config.h"
   9:Src/interface_uart.cpp **** #include "utils.hpp"
  10:Src/interface_uart.cpp **** 
  11:Src/interface_uart.cpp **** // DMA open loop continous circular buffer
  12:Src/interface_uart.cpp **** // 1ms delay periodic, chase DMA ptr around
  13:Src/interface_uart.cpp **** static uint8_t dma_tx_buffer[UART_RX_BUFFER_SIZE];
  14:Src/interface_uart.cpp **** static uint8_t tx_len = 0;
  15:Src/interface_uart.cpp **** 
  16:Src/interface_uart.cpp **** typedef struct
  17:Src/interface_uart.cpp **** {
  18:Src/interface_uart.cpp **** 	volatile uint8_t len;
  19:Src/interface_uart.cpp ****   unsigned char buf[UART_RX_BUFFER_SIZE];
  20:Src/interface_uart.cpp **** } uart_recv_buf_t;
  21:Src/interface_uart.cpp **** 
  22:Src/interface_uart.cpp **** static uart_recv_buf_t uart_recv_buf;
  23:Src/interface_uart.cpp **** 
  24:Src/interface_uart.cpp **** // FIXME: the stdlib doesn't know about CMSIS threads, so this is just a global variable
  25:Src/interface_uart.cpp **** // static thread_local uint32_t deadline_ms = 0;
  26:Src/interface_uart.cpp **** 
  27:Src/interface_uart.cpp **** osThreadId uart_thread;
  28:Src/interface_uart.cpp **** const uint32_t stack_size_uart_thread = 1024;  // Bytes
  29:Src/interface_uart.cpp **** 
  30:Src/interface_uart.cpp **** 
  31:Src/interface_uart.cpp **** 
  32:Src/interface_uart.cpp **** void copy_data_to_uart_buffer(const uint8_t *data, size_t length) {
 407              		.loc 2 32 67
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 16
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI24:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 84B0     		sub	sp, sp, #16
 417              	.LCFI25:
 418              		.cfi_def_cfa_offset 24
 419 0004 00AF     		add	r7, sp, #0
 420              	.LCFI26:
 421              		.cfi_def_cfa_register 7
 422 0006 7860     		str	r0, [r7, #4]
 423 0008 3960     		str	r1, [r7]
  33:Src/interface_uart.cpp ****     if (length > UART_RX_BUFFER_SIZE) {
 424              		.loc 2 33 5
 425 000a 3B68     		ldr	r3, [r7]
 426 000c 402B     		cmp	r3, #64
ARM GAS  /tmp/ccd1OyLw.s 			page 28


 427 000e 01D9     		bls	.L14
  34:Src/interface_uart.cpp ****         length = UART_RX_BUFFER_SIZE;  // Prevent buffer overflow
 428              		.loc 2 34 16
 429 0010 4023     		movs	r3, #64
 430 0012 3B60     		str	r3, [r7]
 431              	.L14:
 432              	.LBB2:
  35:Src/interface_uart.cpp ****     }
  36:Src/interface_uart.cpp ****     // Copy data to the circular buffer
  37:Src/interface_uart.cpp ****     for (size_t i = 0; i < length; i++) {
 433              		.loc 2 37 17
 434 0014 0023     		movs	r3, #0
 435 0016 FB60     		str	r3, [r7, #12]
 436              	.L16:
 437              		.loc 2 37 26 discriminator 3
 438 0018 FA68     		ldr	r2, [r7, #12]
 439 001a 3B68     		ldr	r3, [r7]
 440 001c 9A42     		cmp	r2, r3
 441 001e 0DD2     		bcs	.L15
  38:Src/interface_uart.cpp ****         uart_recv_buf.buf[i] = data[i];
 442              		.loc 2 38 38 discriminator 2
 443 0020 7A68     		ldr	r2, [r7, #4]
 444 0022 FB68     		ldr	r3, [r7, #12]
 445 0024 1344     		add	r3, r3, r2
 446 0026 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 447              		.loc 2 38 30 discriminator 2
 448 0028 0B4A     		ldr	r2, .L17
 449 002a FB68     		ldr	r3, [r7, #12]
 450 002c 1344     		add	r3, r3, r2
 451 002e 0133     		adds	r3, r3, #1
 452 0030 0A46     		mov	r2, r1
 453 0032 1A70     		strb	r2, [r3]
  37:Src/interface_uart.cpp ****         uart_recv_buf.buf[i] = data[i];
 454              		.loc 2 37 5 discriminator 2
 455 0034 FB68     		ldr	r3, [r7, #12]
 456 0036 0133     		adds	r3, r3, #1
 457 0038 FB60     		str	r3, [r7, #12]
 458 003a EDE7     		b	.L16
 459              	.L15:
 460              	.LBE2:
  39:Src/interface_uart.cpp ****     }
  40:Src/interface_uart.cpp ****     uart_recv_buf.len = length;
 461              		.loc 2 40 23
 462 003c 3B68     		ldr	r3, [r7]
 463 003e DAB2     		uxtb	r2, r3
 464 0040 054B     		ldr	r3, .L17
 465 0042 1A70     		strb	r2, [r3]
  41:Src/interface_uart.cpp ****     osSemaphoreRelease(sem_uart_dma);
 466              		.loc 2 41 23
 467 0044 054B     		ldr	r3, .L17+4
 468 0046 1B68     		ldr	r3, [r3]
 469 0048 1846     		mov	r0, r3
 470 004a FFF7FEFF 		bl	osSemaphoreRelease
  42:Src/interface_uart.cpp **** }
 471              		.loc 2 42 1
 472 004e 00BF     		nop
 473 0050 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccd1OyLw.s 			page 29


 474              	.LCFI27:
 475              		.cfi_def_cfa_offset 8
 476 0052 BD46     		mov	sp, r7
 477              	.LCFI28:
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0054 80BD     		pop	{r7, pc}
 481              	.L18:
 482 0056 00BF     		.align	2
 483              	.L17:
 484 0058 00000000 		.word	_ZL13uart_recv_buf
 485 005c 00000000 		.word	sem_uart_dma
 486              		.cfi_endproc
 487              	.LFE2873:
 489              		.section	.text._ZL18uart_server_threadPKv,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv4-sp-d16
 496              	_ZL18uart_server_threadPKv:
 497              	.LFB2874:
  43:Src/interface_uart.cpp **** 
  44:Src/interface_uart.cpp **** 
  45:Src/interface_uart.cpp **** int parse_uart_frame_(uart_recv_buf_t *rx_buf);
  46:Src/interface_uart.cpp **** 
  47:Src/interface_uart.cpp **** static void uart_server_thread(const void * ctx) {
 498              		.loc 2 47 50
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              	.LCFI29:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 84B0     		sub	sp, sp, #16
 508              	.LCFI30:
 509              		.cfi_def_cfa_offset 24
 510 0004 00AF     		add	r7, sp, #0
 511              	.LCFI31:
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 514              	.L22:
 515              	.LBB3:
 516              	.LBB4:
 517              	.LBB5:
  48:Src/interface_uart.cpp ****     (void) ctx;
  49:Src/interface_uart.cpp **** 
  50:Src/interface_uart.cpp ****     for (;;) {
  51:Src/interface_uart.cpp ****         if (osSemaphoreWait(sem_uart_dma, osWaitForever) == osOK)
 518              		.loc 2 51 28
 519 0008 0C4B     		ldr	r3, .L23
 520 000a 1B68     		ldr	r3, [r3]
 521 000c 4FF0FF31 		mov	r1, #-1
 522 0010 1846     		mov	r0, r3
 523 0012 FFF7FEFF 		bl	osSemaphoreWait
ARM GAS  /tmp/ccd1OyLw.s 			page 30


 524 0016 0346     		mov	r3, r0
 525              		.loc 2 51 58
 526 0018 002B     		cmp	r3, #0
 527 001a 0CBF     		ite	eq
 528 001c 0123     		moveq	r3, #1
 529 001e 0023     		movne	r3, #0
 530 0020 DBB2     		uxtb	r3, r3
 531              		.loc 2 51 9
 532 0022 002B     		cmp	r3, #0
 533 0024 03D0     		beq	.L20
  52:Src/interface_uart.cpp ****         {
  53:Src/interface_uart.cpp **** 
  54:Src/interface_uart.cpp ****             parse_uart_frame_(&uart_recv_buf);
 534              		.loc 2 54 30
 535 0026 0648     		ldr	r0, .L23+4
 536 0028 FFF7FEFF 		bl	_Z17parse_uart_frame_P15uart_recv_buf_t
 537 002c ECE7     		b	.L22
 538              	.L20:
 539              	.LBB6:
  55:Src/interface_uart.cpp ****         }
  56:Src/interface_uart.cpp ****         else
  57:Src/interface_uart.cpp ****         {
  58:Src/interface_uart.cpp ****             int i =0;
 540              		.loc 2 58 17
 541 002e 0023     		movs	r3, #0
 542 0030 FB60     		str	r3, [r7, #12]
  59:Src/interface_uart.cpp ****             i++;
 543              		.loc 2 59 14
 544 0032 FB68     		ldr	r3, [r7, #12]
 545 0034 0133     		adds	r3, r3, #1
 546 0036 FB60     		str	r3, [r7, #12]
 547              	.LBE6:
 548              	.LBE5:
 549              	.LBE4:
  60:Src/interface_uart.cpp ****             // Timeout, do nothing
  61:Src/interface_uart.cpp ****         }
  62:Src/interface_uart.cpp **** 
  63:Src/interface_uart.cpp ****     };
 550              		.loc 2 63 5
 551 0038 E6E7     		b	.L22
 552              	.L24:
 553 003a 00BF     		.align	2
 554              	.L23:
 555 003c 00000000 		.word	sem_uart_dma
 556 0040 00000000 		.word	_ZL13uart_recv_buf
 557              	.LBE3:
 558              		.cfi_endproc
 559              	.LFE2874:
 561              		.section	.rodata
 562 0017 00       		.align	2
 563              	.LC2:
 564 0018 00000000 		.word	.LC0
 565 001c 00000000 		.word	_ZL18uart_server_threadPKv
 566 0020 0000     		.short	0
 567 0022 0000     		.space	2
 568 0024 00000000 		.word	0
 569 0028 00010000 		.word	256
ARM GAS  /tmp/ccd1OyLw.s 			page 31


 570              		.section	.text.start_uart_server,"ax",%progbits
 571              		.align	1
 572              		.global	start_uart_server
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	start_uart_server:
 579              	.LFB2875:
  64:Src/interface_uart.cpp **** }
  65:Src/interface_uart.cpp **** 
  66:Src/interface_uart.cpp **** 
  67:Src/interface_uart.cpp **** 
  68:Src/interface_uart.cpp **** 
  69:Src/interface_uart.cpp **** void start_uart_server() {
 580              		.loc 2 69 26
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 24
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0000 B0B5     		push	{r4, r5, r7, lr}
 585              	.LCFI32:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 86B0     		sub	sp, sp, #24
 592              	.LCFI33:
 593              		.cfi_def_cfa_offset 40
 594 0004 00AF     		add	r7, sp, #0
 595              	.LCFI34:
 596              		.cfi_def_cfa_register 7
  70:Src/interface_uart.cpp **** 
  71:Src/interface_uart.cpp ****     // Start UART communication thread
  72:Src/interface_uart.cpp ****     osThreadDef(uart_server_thread_def, uart_server_thread, osPriorityNormal, 0, stack_size_uart_th
 597              		.loc 2 72 5
 598 0006 094B     		ldr	r3, .L26
 599 0008 3C1D     		adds	r4, r7, #4
 600 000a 1D46     		mov	r5, r3
 601 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 602 000e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 603 0010 2B68     		ldr	r3, [r5]
 604 0012 2360     		str	r3, [r4]
  73:Src/interface_uart.cpp ****     uart_thread = osThreadCreate(osThread(uart_server_thread_def), NULL);
 605              		.loc 2 73 33
 606 0014 3B1D     		adds	r3, r7, #4
 607 0016 0021     		movs	r1, #0
 608 0018 1846     		mov	r0, r3
 609 001a FFF7FEFF 		bl	osThreadCreate
 610 001e 0346     		mov	r3, r0
 611              		.loc 2 73 17
 612 0020 034A     		ldr	r2, .L26+4
 613 0022 1360     		str	r3, [r2]
  74:Src/interface_uart.cpp **** }
 614              		.loc 2 74 1
 615 0024 00BF     		nop
 616 0026 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccd1OyLw.s 			page 32


 617              	.LCFI35:
 618              		.cfi_def_cfa_offset 16
 619 0028 BD46     		mov	sp, r7
 620              	.LCFI36:
 621              		.cfi_def_cfa_register 13
 622              		@ sp needed
 623 002a B0BD     		pop	{r4, r5, r7, pc}
 624              	.L27:
 625              		.align	2
 626              	.L26:
 627 002c 18000000 		.word	.LC2
 628 0030 00000000 		.word	uart_thread
 629              		.cfi_endproc
 630              	.LFE2875:
 632              		.section	.text._ZL8CheckSumPhh,"ax",%progbits
 633              		.align	1
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv4-sp-d16
 639              	_ZL8CheckSumPhh:
 640              	.LFB2876:
  75:Src/interface_uart.cpp **** 
  76:Src/interface_uart.cpp **** 
  77:Src/interface_uart.cpp **** static uint8_t CheckSum(uint8_t* pdata, uint8_t len)
  78:Src/interface_uart.cpp **** {
 641              		.loc 2 78 1
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 16
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646 0000 80B4     		push	{r7}
 647              	.LCFI37:
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 85B0     		sub	sp, sp, #20
 651              	.LCFI38:
 652              		.cfi_def_cfa_offset 24
 653 0004 00AF     		add	r7, sp, #0
 654              	.LCFI39:
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
 657 0008 0B46     		mov	r3, r1
 658 000a FB70     		strb	r3, [r7, #3]
  79:Src/interface_uart.cpp **** 	uint8_t sum = 0;
 659              		.loc 2 79 10
 660 000c 0023     		movs	r3, #0
 661 000e FB73     		strb	r3, [r7, #15]
  80:Src/interface_uart.cpp **** 	uint8_t i;
  81:Src/interface_uart.cpp **** 	for(i=0; i<len; i++)
 662              		.loc 2 81 7
 663 0010 0023     		movs	r3, #0
 664 0012 BB73     		strb	r3, [r7, #14]
 665              	.L30:
 666              		.loc 2 81 12 discriminator 3
 667 0014 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 668 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  /tmp/ccd1OyLw.s 			page 33


 669 0018 9A42     		cmp	r2, r3
 670 001a 0AD2     		bcs	.L29
  82:Src/interface_uart.cpp **** 		sum += pdata[i];
 671              		.loc 2 82 16 discriminator 2
 672 001c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 673              		.loc 2 82 17 discriminator 2
 674 001e 7A68     		ldr	r2, [r7, #4]
 675 0020 1344     		add	r3, r3, r2
 676 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 677              		.loc 2 82 7 discriminator 2
 678 0024 FB7B     		ldrb	r3, [r7, #15]
 679 0026 1344     		add	r3, r3, r2
 680 0028 FB73     		strb	r3, [r7, #15]
  81:Src/interface_uart.cpp **** 		sum += pdata[i];
 681              		.loc 2 81 2 discriminator 2
 682 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 683 002c 0133     		adds	r3, r3, #1
 684 002e BB73     		strb	r3, [r7, #14]
 685 0030 F0E7     		b	.L30
 686              	.L29:
  83:Src/interface_uart.cpp **** 	return sum;
 687              		.loc 2 83 9
 688 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  84:Src/interface_uart.cpp **** }
 689              		.loc 2 84 1
 690 0034 1846     		mov	r0, r3
 691 0036 1437     		adds	r7, r7, #20
 692              	.LCFI40:
 693              		.cfi_def_cfa_offset 4
 694 0038 BD46     		mov	sp, r7
 695              	.LCFI41:
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 003a 5DF8047B 		ldr	r7, [sp], #4
 699              	.LCFI42:
 700              		.cfi_restore 7
 701              		.cfi_def_cfa_offset 0
 702 003e 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE2876:
 706              		.section	.text._Z15UART_PushFrame_hhthPh,"ax",%progbits
 707              		.align	1
 708              		.global	_Z15UART_PushFrame_hhthPh
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	_Z15UART_PushFrame_hhthPh:
 715              	.LFB2877:
  85:Src/interface_uart.cpp **** 
  86:Src/interface_uart.cpp **** 
  87:Src/interface_uart.cpp **** void UART_PushFrame_(uint8_t DataLen,uint8_t Cmd, uint16_t Index, uint8_t Subindex ,uint8_t* pdata)
  88:Src/interface_uart.cpp **** {
 716              		.loc 2 88 1
 717              		.cfi_startproc
 718              		@ args = 4, pretend = 0, frame = 16
 719              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccd1OyLw.s 			page 34


 720 0000 90B5     		push	{r4, r7, lr}
 721              	.LCFI43:
 722              		.cfi_def_cfa_offset 12
 723              		.cfi_offset 4, -12
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 85B0     		sub	sp, sp, #20
 727              	.LCFI44:
 728              		.cfi_def_cfa_offset 32
 729 0004 00AF     		add	r7, sp, #0
 730              	.LCFI45:
 731              		.cfi_def_cfa_register 7
 732 0006 0446     		mov	r4, r0
 733 0008 0846     		mov	r0, r1
 734 000a 1146     		mov	r1, r2
 735 000c 1A46     		mov	r2, r3
 736 000e 2346     		mov	r3, r4
 737 0010 FB71     		strb	r3, [r7, #7]
 738 0012 0346     		mov	r3, r0
 739 0014 BB71     		strb	r3, [r7, #6]
 740 0016 0B46     		mov	r3, r1	@ movhi
 741 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 742 001a 1346     		mov	r3, r2
 743 001c FB70     		strb	r3, [r7, #3]
  89:Src/interface_uart.cpp **** 	uint8_t i;
  90:Src/interface_uart.cpp **** 	uint8_t pos = 0;
 744              		.loc 2 90 10
 745 001e 0023     		movs	r3, #0
 746 0020 BB73     		strb	r3, [r7, #14]
  91:Src/interface_uart.cpp **** 
  92:Src/interface_uart.cpp ****     if (DataLen + 9 > UART_TX_BUFFER_SIZE) {  // 9 = frame overhead
 747              		.loc 2 92 5
 748 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 749 0024 372B     		cmp	r3, #55
 750 0026 75D8     		bhi	.L37
  93:Src/interface_uart.cpp ****         return;  // Buffer overflow protection
  94:Src/interface_uart.cpp ****     }
  95:Src/interface_uart.cpp **** 
  96:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = 0xAA;				      // ֡ͷ
 751              		.loc 2 96 19
 752 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 753 002a 5A1C     		adds	r2, r3, #1
 754 002c BA73     		strb	r2, [r7, #14]
 755 002e 1A46     		mov	r2, r3
 756              		.loc 2 96 23
 757 0030 3A4B     		ldr	r3, .L38
 758 0032 AA21     		movs	r1, #170
 759 0034 9954     		strb	r1, [r3, r2]
  97:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = 0x55;				      // ֡ͷ	
 760              		.loc 2 97 19
 761 0036 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 762 0038 5A1C     		adds	r2, r3, #1
 763 003a BA73     		strb	r2, [r7, #14]
 764 003c 1A46     		mov	r2, r3
 765              		.loc 2 97 23
 766 003e 374B     		ldr	r3, .L38
 767 0040 5521     		movs	r1, #85
ARM GAS  /tmp/ccd1OyLw.s 			page 35


 768 0042 9954     		strb	r1, [r3, r2]
  98:Src/interface_uart.cpp **** 
  99:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = DataLen+5;		      // ���ݳ���
 769              		.loc 2 99 32
 770 0044 FB79     		ldrb	r3, [r7, #7]
 771 0046 0533     		adds	r3, r3, #5
 772 0048 D9B2     		uxtb	r1, r3
 773              		.loc 2 99 19
 774 004a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 775 004c 5A1C     		adds	r2, r3, #1
 776 004e BA73     		strb	r2, [r7, #14]
 777 0050 1A46     		mov	r2, r3
 778              		.loc 2 99 23
 779 0052 324B     		ldr	r3, .L38
 780 0054 9954     		strb	r1, [r3, r2]
 100:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = 0x01;	// ID
 781              		.loc 2 100 19
 782 0056 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 783 0058 5A1C     		adds	r2, r3, #1
 784 005a BA73     		strb	r2, [r7, #14]
 785 005c 1A46     		mov	r2, r3
 786              		.loc 2 100 23
 787 005e 2F4B     		ldr	r3, .L38
 788 0060 0121     		movs	r1, #1
 789 0062 9954     		strb	r1, [r3, r2]
 101:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = Cmd;
 790              		.loc 2 101 23
 791 0064 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 792              		.loc 2 101 19
 793 0066 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 794 0068 5A1C     		adds	r2, r3, #1
 795 006a BA73     		strb	r2, [r7, #14]
 796 006c 1A46     		mov	r2, r3
 797              		.loc 2 101 23
 798 006e 2B4B     		ldr	r3, .L38
 799 0070 9954     		strb	r1, [r3, r2]
 102:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = Index&0xff;
 800              		.loc 2 102 23
 801 0072 BB88     		ldrh	r3, [r7, #4]	@ movhi
 802 0074 D9B2     		uxtb	r1, r3
 803              		.loc 2 102 19
 804 0076 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 805 0078 5A1C     		adds	r2, r3, #1
 806 007a BA73     		strb	r2, [r7, #14]
 807 007c 1A46     		mov	r2, r3
 808              		.loc 2 102 23
 809 007e 274B     		ldr	r3, .L38
 810 0080 9954     		strb	r1, [r3, r2]
 103:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = (Index>>8)&0xff;
 811              		.loc 2 103 31
 812 0082 BB88     		ldrh	r3, [r7, #4]
 813 0084 1B0A     		lsrs	r3, r3, #8
 814 0086 9BB2     		uxth	r3, r3
 815              		.loc 2 103 23
 816 0088 D9B2     		uxtb	r1, r3
 817              		.loc 2 103 19
 818 008a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccd1OyLw.s 			page 36


 819 008c 5A1C     		adds	r2, r3, #1
 820 008e BA73     		strb	r2, [r7, #14]
 821 0090 1A46     		mov	r2, r3
 822              		.loc 2 103 23
 823 0092 224B     		ldr	r3, .L38
 824 0094 9954     		strb	r1, [r3, r2]
 104:Src/interface_uart.cpp **** 	dma_tx_buffer[pos++] = (Subindex)&0xff;
 825              		.loc 2 104 23
 826 0096 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 827              		.loc 2 104 19
 828 0098 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 829 009a 5A1C     		adds	r2, r3, #1
 830 009c BA73     		strb	r2, [r7, #14]
 831 009e 1A46     		mov	r2, r3
 832              		.loc 2 104 23
 833 00a0 1E4B     		ldr	r3, .L38
 834 00a2 9954     		strb	r1, [r3, r2]
 105:Src/interface_uart.cpp **** 	for (i=0; i<DataLen; i++)
 835              		.loc 2 105 8
 836 00a4 0023     		movs	r3, #0
 837 00a6 FB73     		strb	r3, [r7, #15]
 838              	.L36:
 839              		.loc 2 105 13 discriminator 3
 840 00a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 841 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 842 00ac 9A42     		cmp	r2, r3
 843 00ae 0DD2     		bcs	.L35
 106:Src/interface_uart.cpp **** 	{
 107:Src/interface_uart.cpp **** 		dma_tx_buffer[pos++] = pdata[i];
 844              		.loc 2 107 32 discriminator 2
 845 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 846              		.loc 2 107 33 discriminator 2
 847 00b2 3A6A     		ldr	r2, [r7, #32]
 848 00b4 1344     		add	r3, r3, r2
 849 00b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 850              		.loc 2 107 20 discriminator 2
 851 00b8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 852 00ba 5A1C     		adds	r2, r3, #1
 853 00bc BA73     		strb	r2, [r7, #14]
 854 00be 1A46     		mov	r2, r3
 855              		.loc 2 107 24 discriminator 2
 856 00c0 164B     		ldr	r3, .L38
 857 00c2 9954     		strb	r1, [r3, r2]
 105:Src/interface_uart.cpp **** 	for (i=0; i<DataLen; i++)
 858              		.loc 2 105 2 discriminator 2
 859 00c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 860 00c6 0133     		adds	r3, r3, #1
 861 00c8 FB73     		strb	r3, [r7, #15]
 862 00ca EDE7     		b	.L36
 863              	.L35:
 108:Src/interface_uart.cpp **** 	}
 109:Src/interface_uart.cpp **** 	dma_tx_buffer[pos] = CheckSum(&dma_tx_buffer[2], pos-2);  // У���
 864              		.loc 2 109 31
 865 00cc BB7B     		ldrb	r3, [r7, #14]
 866 00ce 023B     		subs	r3, r3, #2
 867 00d0 DBB2     		uxtb	r3, r3
 868              		.loc 2 109 16
ARM GAS  /tmp/ccd1OyLw.s 			page 37


 869 00d2 BC7B     		ldrb	r4, [r7, #14]	@ zero_extendqisi2
 870              		.loc 2 109 31
 871 00d4 1946     		mov	r1, r3
 872 00d6 1248     		ldr	r0, .L38+4
 873 00d8 FFF7FEFF 		bl	_ZL8CheckSumPhh
 874 00dc 0346     		mov	r3, r0
 875 00de 1A46     		mov	r2, r3
 876              		.loc 2 109 21
 877 00e0 0E4B     		ldr	r3, .L38
 878 00e2 1A55     		strb	r2, [r3, r4]
 110:Src/interface_uart.cpp **** 	pos++;
 879              		.loc 2 110 5
 880 00e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 881 00e6 0133     		adds	r3, r3, #1
 882 00e8 BB73     		strb	r3, [r7, #14]
 111:Src/interface_uart.cpp **** 
 112:Src/interface_uart.cpp ****     LL_DMA_DisableChannel(VESC_DMA, VESC_DMA_TX_CHANNEL);
 883              		.loc 2 112 26
 884 00ea 0121     		movs	r1, #1
 885 00ec 0D48     		ldr	r0, .L38+8
 886 00ee FFF7FEFF 		bl	LL_DMA_DisableChannel
 113:Src/interface_uart.cpp ****     LL_DMA_SetMemoryAddress(VESC_DMA, VESC_DMA_TX_CHANNEL, (uint32_t)dma_tx_buffer);
 887              		.loc 2 113 28
 888 00f2 0A4B     		ldr	r3, .L38
 889 00f4 1A46     		mov	r2, r3
 890 00f6 0121     		movs	r1, #1
 891 00f8 0A48     		ldr	r0, .L38+8
 892 00fa FFF7FEFF 		bl	LL_DMA_SetMemoryAddress
 114:Src/interface_uart.cpp ****     LL_DMA_SetDataLength(VESC_DMA, VESC_DMA_TX_CHANNEL, pos);
 893              		.loc 2 114 25
 894 00fe BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 895 0100 1A46     		mov	r2, r3
 896 0102 0121     		movs	r1, #1
 897 0104 0748     		ldr	r0, .L38+8
 898 0106 FFF7FEFF 		bl	LL_DMA_SetDataLength
 115:Src/interface_uart.cpp ****     LL_DMA_EnableChannel(VESC_DMA, VESC_DMA_TX_CHANNEL);
 899              		.loc 2 115 25
 900 010a 0121     		movs	r1, #1
 901 010c 0548     		ldr	r0, .L38+8
 902 010e FFF7FEFF 		bl	LL_DMA_EnableChannel
 903 0112 00E0     		b	.L32
 904              	.L37:
  93:Src/interface_uart.cpp ****     }
 905              		.loc 2 93 9
 906 0114 00BF     		nop
 907              	.L32:
 116:Src/interface_uart.cpp **** 
 117:Src/interface_uart.cpp **** 	
 118:Src/interface_uart.cpp **** 
 119:Src/interface_uart.cpp **** }
 908              		.loc 2 119 1
 909 0116 1437     		adds	r7, r7, #20
 910              	.LCFI46:
 911              		.cfi_def_cfa_offset 12
 912 0118 BD46     		mov	sp, r7
 913              	.LCFI47:
 914              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccd1OyLw.s 			page 38


 915              		@ sp needed
 916 011a 90BD     		pop	{r4, r7, pc}
 917              	.L39:
 918              		.align	2
 919              	.L38:
 920 011c 00000000 		.word	_ZL13dma_tx_buffer
 921 0120 02000000 		.word	_ZL13dma_tx_buffer+2
 922 0124 00000240 		.word	1073872896
 923              		.cfi_endproc
 924              	.LFE2877:
 926              		.section	.text._Z16UART_ParseFrame_Ph,"ax",%progbits
 927              		.align	1
 928              		.global	_Z16UART_ParseFrame_Ph
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu fpv4-sp-d16
 934              	_Z16UART_ParseFrame_Ph:
 935              	.LFB2878:
 120:Src/interface_uart.cpp **** 
 121:Src/interface_uart.cpp **** 
 122:Src/interface_uart.cpp **** void UART_ParseFrame_(uint8_t* pdata) {
 936              		.loc 2 122 39
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 104
 939              		@ frame_needed = 1, uses_anonymous_args = 0
 940 0000 80B5     		push	{r7, lr}
 941              	.LCFI48:
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 7, -8
 944              		.cfi_offset 14, -4
 945 0002 9CB0     		sub	sp, sp, #112
 946              	.LCFI49:
 947              		.cfi_def_cfa_offset 120
 948 0004 02AF     		add	r7, sp, #8
 949              	.LCFI50:
 950              		.cfi_def_cfa 7, 112
 951 0006 7860     		str	r0, [r7, #4]
 123:Src/interface_uart.cpp **** 
 124:Src/interface_uart.cpp **** 	
 125:Src/interface_uart.cpp ****     uint8_t cmd = pdata[2];
 952              		.loc 2 125 13
 953 0008 7B68     		ldr	r3, [r7, #4]
 954 000a 9B78     		ldrb	r3, [r3, #2]
 955 000c 87F85B30 		strb	r3, [r7, #91]
 126:Src/interface_uart.cpp ****     uint16_t index = pdata[3+1]<<8 | pdata[3];
 956              		.loc 2 126 31
 957 0010 7B68     		ldr	r3, [r7, #4]
 958 0012 0433     		adds	r3, r3, #4
 959 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960              		.loc 2 126 32
 961 0016 1B02     		lsls	r3, r3, #8
 962              		.loc 2 126 36
 963 0018 1AB2     		sxth	r2, r3
 964              		.loc 2 126 45
 965 001a 7B68     		ldr	r3, [r7, #4]
 966 001c 0333     		adds	r3, r3, #3
ARM GAS  /tmp/ccd1OyLw.s 			page 39


 967 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 0020 1BB2     		sxth	r3, r3
 969              		.loc 2 126 36
 970 0022 1343     		orrs	r3, r3, r2
 971 0024 1BB2     		sxth	r3, r3
 972              		.loc 2 126 14
 973 0026 A7F85830 		strh	r3, [r7, #88]	@ movhi
 127:Src/interface_uart.cpp **** 		uint16_t sub_index = pdata[3 + 2];
 974              		.loc 2 127 35
 975 002a 7B68     		ldr	r3, [r7, #4]
 976 002c 0533     		adds	r3, r3, #5
 977 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 978              		.loc 2 127 12
 979 0030 A7F85630 		strh	r3, [r7, #86]	@ movhi
 128:Src/interface_uart.cpp **** 		uint16_t length =0;
 980              		.loc 2 128 12
 981 0034 0023     		movs	r3, #0
 982 0036 FB87     		strh	r3, [r7, #62]	@ movhi
 129:Src/interface_uart.cpp **** 		int16_t value = 0;
 983              		.loc 2 129 11
 984 0038 0023     		movs	r3, #0
 985 003a BB87     		strh	r3, [r7, #60]	@ movhi
 986              	.LBB7:
 130:Src/interface_uart.cpp **** 
 131:Src/interface_uart.cpp ****     switch(cmd) {
 987              		.loc 2 131 12
 988 003c 97F85B30 		ldrb	r3, [r7, #91]	@ zero_extendqisi2
 989              		.loc 2 131 5
 990 0040 0B2B     		cmp	r3, #11
 991 0042 2DDC     		bgt	.L41
 992 0044 032B     		cmp	r3, #3
 993 0046 11DA     		bge	.L42
 994              	.LBB8:
 132:Src/interface_uart.cpp ****         case FRAME_CMD_SDO_READ:
 133:Src/interface_uart.cpp **** 			// Read parameter by index and sub-index
 134:Src/interface_uart.cpp ****             // Read parameter and send response
 135:Src/interface_uart.cpp **** 						length =0;
 136:Src/interface_uart.cpp ****             value = OD_Read(index, sub_index,&length);
 137:Src/interface_uart.cpp ****             UART_PushFrame_(length, FRAME_CMD_SDO_READ, index,sub_index, (uint8_t*)&value);
 138:Src/interface_uart.cpp ****             break;
 139:Src/interface_uart.cpp **** 
 140:Src/interface_uart.cpp ****         case FRAME_CMD_SDO_WRITE:
 141:Src/interface_uart.cpp **** 						length = pdata[0] - 5;
 142:Src/interface_uart.cpp **** 							// Write parameter
 143:Src/interface_uart.cpp **** 						if(length == 2)
 144:Src/interface_uart.cpp **** 									value = (pdata[6+1] << 8) | pdata[6];
 145:Src/interface_uart.cpp **** 						else if(length == 4)
 146:Src/interface_uart.cpp **** 									value = (pdata[6 + 3] << 24) | (pdata[6 + 2] << 16) | (pdata[6 + 1] << 8) | pdata[6];
 147:Src/interface_uart.cpp ****                                     
 148:Src/interface_uart.cpp **** 						OD_Write(index, sub_index,value);
 149:Src/interface_uart.cpp **** 						// Send ACK
 150:Src/interface_uart.cpp **** 						UART_PushFrame_(0, FRAME_CMD_SDO_WRITE, index,sub_index, NULL);
 151:Src/interface_uart.cpp ****             break;
 152:Src/interface_uart.cpp **** 
 153:Src/interface_uart.cpp **** 		case FRAME_CMD_PDO_READ:
 154:Src/interface_uart.cpp **** 			{
 155:Src/interface_uart.cpp **** 				uint8_t tx_buf[24];  // Buffer for up to 6 PDO values
ARM GAS  /tmp/ccd1OyLw.s 			page 40


 156:Src/interface_uart.cpp **** 				int pos = 0;
 157:Src/interface_uart.cpp **** 			
 158:Src/interface_uart.cpp **** 				// Read all PDO channels
 159:Src/interface_uart.cpp **** 				for(int i = 0; i < 6; i++) {
 160:Src/interface_uart.cpp **** 					// Read each PDO channel
 161:Src/interface_uart.cpp **** 					value = PDO_Read(i, &length);
 162:Src/interface_uart.cpp **** 					
 163:Src/interface_uart.cpp **** 					if(length > 0) {
 164:Src/interface_uart.cpp **** 						// Pack data in little-endian format
 165:Src/interface_uart.cpp **** 						for(int j = 0; j < length; j++) {
 166:Src/interface_uart.cpp **** 							tx_buf[pos++] = (value >> (8*j)) & 0xFF;
 167:Src/interface_uart.cpp **** 						}
 168:Src/interface_uart.cpp **** 					}
 169:Src/interface_uart.cpp **** 				}
 170:Src/interface_uart.cpp **** 			
 171:Src/interface_uart.cpp **** 				// Send response frame with all PDO data
 172:Src/interface_uart.cpp **** 				UART_PushFrame_(pos, FRAME_CMD_PDO_READ, 0, 0, tx_buf);
 173:Src/interface_uart.cpp **** 			}
 174:Src/interface_uart.cpp **** 			break;
 175:Src/interface_uart.cpp **** 
 176:Src/interface_uart.cpp **** 		case FRAME_CMD_RESET:
 177:Src/interface_uart.cpp **** 			// Check magic number to confirm reset
 178:Src/interface_uart.cpp **** 			 value = (pdata[6 + 1] << 8) | pdata[6];
 179:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 180:Src/interface_uart.cpp **** 			// 	// Reset parameters to factory defaults
 181:Src/interface_uart.cpp **** 			// 	if(Flash_ResetToFactory() == 1) {
 182:Src/interface_uart.cpp **** 			// 		UART_PushFrame_(0, FRAME_CMD_RESET, 0,0, NULL); // Success
 183:Src/interface_uart.cpp **** 			// 	}
 184:Src/interface_uart.cpp **** 			// }
 185:Src/interface_uart.cpp **** 			break;
 186:Src/interface_uart.cpp **** 		
 187:Src/interface_uart.cpp **** 		// ...existing code...
 188:Src/interface_uart.cpp ****         case FRAME_CMD_SAVE:
 189:Src/interface_uart.cpp ****             // Save all parameters to flash
 190:Src/interface_uart.cpp ****             //Flash_SaveMotorParams(&motor_params);
 191:Src/interface_uart.cpp ****             // Send ACK
 192:Src/interface_uart.cpp ****             UART_PushFrame_(0, FRAME_CMD_SAVE, 0,0, NULL);
 193:Src/interface_uart.cpp ****             break;
 194:Src/interface_uart.cpp **** 
 195:Src/interface_uart.cpp **** 		case FRAME_CMD_START:
 196:Src/interface_uart.cpp ****             // Start motor
 197:Src/interface_uart.cpp **** 
 198:Src/interface_uart.cpp ****             UART_PushFrame_(0, FRAME_CMD_START, 0,0, NULL);
 199:Src/interface_uart.cpp ****             break;
 200:Src/interface_uart.cpp **** 
 201:Src/interface_uart.cpp ****         case FRAME_CMD_STOP:
 202:Src/interface_uart.cpp ****             // Stop motor
 203:Src/interface_uart.cpp **** 
 204:Src/interface_uart.cpp ****             UART_PushFrame_(0, FRAME_CMD_STOP, 0,0, NULL);
 205:Src/interface_uart.cpp ****             break;
 206:Src/interface_uart.cpp **** 
 207:Src/interface_uart.cpp ****         case FRAME_CMD_SET_POS:
 208:Src/interface_uart.cpp ****             // Set position
 209:Src/interface_uart.cpp **** 
 210:Src/interface_uart.cpp ****             UART_PushFrame_(0, FRAME_CMD_SET_POS, 0,0, NULL);
 211:Src/interface_uart.cpp ****             break;
 212:Src/interface_uart.cpp **** 
ARM GAS  /tmp/ccd1OyLw.s 			page 41


 213:Src/interface_uart.cpp **** 		case FRAME_CMD_SCOPE:
 214:Src/interface_uart.cpp **** 			
 215:Src/interface_uart.cpp **** 		//55 AA 05 01 80 00 00 00 86 
 216:Src/interface_uart.cpp **** 		//AA 55 15 01 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 96 
 217:Src/interface_uart.cpp **** 		// 发送一帧状态数据
 218:Src/interface_uart.cpp **** 		{
 219:Src/interface_uart.cpp **** 			uint8_t tx_buf[24];  // 6个int16_t数据
 220:Src/interface_uart.cpp **** 			int pos = 0;
 221:Src/interface_uart.cpp **** 	
 222:Src/interface_uart.cpp **** 			// 获取当前状态
 223:Src/interface_uart.cpp **** 			int16_t current_pos = 0;
 224:Src/interface_uart.cpp **** 			int16_t current_vel =  FOCVars[M1].Iqd.q;
 225:Src/interface_uart.cpp **** 			int16_t current_cur = FOCVars[0].Iab.a;;
 226:Src/interface_uart.cpp **** 			int16_t target_pos = 0;
 227:Src/interface_uart.cpp **** 			int16_t target_vel =  FOCVars[M1].Iqd.d;
 228:Src/interface_uart.cpp **** 			int16_t target_cur =  FOCVars[0].Iab.b;
 229:Src/interface_uart.cpp **** 			int16_t temp = 0;
 230:Src/interface_uart.cpp **** 			uint16_t erro = 0x01;
 231:Src/interface_uart.cpp **** 			
 232:Src/interface_uart.cpp **** 			// 打包数据 (小端序)
 233:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_pos) & 0xFF;
 234:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_pos>>8) & 0xFF;
 235:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos) & 0xFF;
 236:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos>>8) & 0xFF;
 237:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel) & 0xFF;
 238:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel>>8) & 0xFF;
 239:Src/interface_uart.cpp **** 			tx_buf[pos++] = current_vel & 0xFF;
 240:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_vel>>8) & 0xFF;
 241:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur) & 0xFF;
 242:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur>>8) & 0xFF;
 243:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur) & 0xFF;
 244:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur>>8) & 0xFF;
 245:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp) & 0xFF;
 246:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp>>8) & 0xFF;
 247:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro) & 0xFF;
 248:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro>>8) & 0xFF;
 249:Src/interface_uart.cpp **** 			
 250:Src/interface_uart.cpp **** 			// 发送数据帧
 251:Src/interface_uart.cpp **** 			UART_PushFrame_(pos, FRAME_CMD_SCOPE, 0,0, tx_buf);
 252:Src/interface_uart.cpp **** 		}
 253:Src/interface_uart.cpp **** 		break;
 254:Src/interface_uart.cpp **** 
 255:Src/interface_uart.cpp **** 		default:
 256:Src/interface_uart.cpp **** 			break;
 995              		.loc 2 256 4
 996 0048 00E2     		b	.L63
 997              	.L55:
 998 004a 803B     		subs	r3, r3, #128
 999 004c 042B     		cmp	r3, #4
 1000 004e 00F2FD81 		bhi	.L63
 1001 0052 01A2     		adr	r2, .L45
 1002 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1003              		.p2align 2
 1004              	.L45:
 1005 0058 5B020000 		.word	.L48+1
 1006 005c 4D040000 		.word	.L63+1
 1007 0060 AD000000 		.word	.L47+1
ARM GAS  /tmp/ccd1OyLw.s 			page 42


 1008 0064 E7000000 		.word	.L46+1
 1009 0068 79010000 		.word	.L44+1
 1010              		.p2align 1
 1011              	.L42:
 1012 006c 033B     		subs	r3, r3, #3
 1013 006e 082B     		cmp	r3, #8
 1014 0070 00F2EC81 		bhi	.L63
 1015 0074 01A2     		adr	r2, .L50
 1016 0076 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1017 007a 00BF     		.p2align 2
 1018              	.L50:
 1019 007c 13020000 		.word	.L54+1
 1020 0080 25020000 		.word	.L53+1
 1021 0084 37020000 		.word	.L52+1
 1022 0088 49020000 		.word	.L51+1
 1023 008c 4D040000 		.word	.L63+1
 1024 0090 4D040000 		.word	.L63+1
 1025 0094 4D040000 		.word	.L63+1
 1026 0098 4D040000 		.word	.L63+1
 1027 009c F9010000 		.word	.L49+1
 1028              		.p2align 1
 1029              	.L41:
 1030              	.LBE8:
 131:Src/interface_uart.cpp ****         case FRAME_CMD_SDO_READ:
 1031              		.loc 2 131 5
 1032 00a0 842B     		cmp	r3, #132
 1033 00a2 00F3D381 		bgt	.L63
 1034 00a6 802B     		cmp	r3, #128
 1035 00a8 CFDA     		bge	.L55
 1036              	.LBB16:
 1037              		.loc 2 256 4
 1038 00aa CFE1     		b	.L63
 1039              	.L47:
 135:Src/interface_uart.cpp ****             value = OD_Read(index, sub_index,&length);
 1040              		.loc 2 135 14
 1041 00ac 0023     		movs	r3, #0
 1042 00ae FB87     		strh	r3, [r7, #62]	@ movhi
 136:Src/interface_uart.cpp ****             UART_PushFrame_(length, FRAME_CMD_SDO_READ, index,sub_index, (uint8_t*)&value);
 1043              		.loc 2 136 28
 1044 00b0 07F13E02 		add	r2, r7, #62
 1045 00b4 B7F85610 		ldrh	r1, [r7, #86]
 1046 00b8 B7F85830 		ldrh	r3, [r7, #88]
 1047 00bc 1846     		mov	r0, r3
 1048 00be FFF7FEFF 		bl	_Z7OD_ReadttPt
 1049 00c2 0346     		mov	r3, r0
 136:Src/interface_uart.cpp ****             UART_PushFrame_(length, FRAME_CMD_SDO_READ, index,sub_index, (uint8_t*)&value);
 1050              		.loc 2 136 19
 1051 00c4 1BB2     		sxth	r3, r3
 1052 00c6 BB87     		strh	r3, [r7, #60]	@ movhi
 137:Src/interface_uart.cpp ****             break;
 1053              		.loc 2 137 28
 1054 00c8 FB8F     		ldrh	r3, [r7, #62]
 1055 00ca D8B2     		uxtb	r0, r3
 1056 00cc B7F85630 		ldrh	r3, [r7, #86]	@ movhi
 1057 00d0 D9B2     		uxtb	r1, r3
 1058 00d2 B7F85820 		ldrh	r2, [r7, #88]
 1059 00d6 07F13C03 		add	r3, r7, #60
ARM GAS  /tmp/ccd1OyLw.s 			page 43


 1060 00da 0093     		str	r3, [sp]
 1061 00dc 0B46     		mov	r3, r1
 1062 00de 8221     		movs	r1, #130
 1063 00e0 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 138:Src/interface_uart.cpp **** 
 1064              		.loc 2 138 13
 1065 00e4 B3E1     		b	.L56
 1066              	.L46:
 141:Src/interface_uart.cpp **** 							// Write parameter
 1067              		.loc 2 141 23
 1068 00e6 7B68     		ldr	r3, [r7, #4]
 1069 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1070 00ea 9BB2     		uxth	r3, r3
 141:Src/interface_uart.cpp **** 							// Write parameter
 1071              		.loc 2 141 25
 1072 00ec 053B     		subs	r3, r3, #5
 1073 00ee 9BB2     		uxth	r3, r3
 141:Src/interface_uart.cpp **** 							// Write parameter
 1074              		.loc 2 141 14
 1075 00f0 FB87     		strh	r3, [r7, #62]	@ movhi
 143:Src/interface_uart.cpp **** 									value = (pdata[6+1] << 8) | pdata[6];
 1076              		.loc 2 143 17
 1077 00f2 FB8F     		ldrh	r3, [r7, #62]
 143:Src/interface_uart.cpp **** 									value = (pdata[6+1] << 8) | pdata[6];
 1078              		.loc 2 143 7
 1079 00f4 022B     		cmp	r3, #2
 1080 00f6 0CD1     		bne	.L57
 144:Src/interface_uart.cpp **** 						else if(length == 4)
 1081              		.loc 2 144 28
 1082 00f8 7B68     		ldr	r3, [r7, #4]
 1083 00fa 0733     		adds	r3, r3, #7
 1084 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144:Src/interface_uart.cpp **** 						else if(length == 4)
 1085              		.loc 2 144 30
 1086 00fe 1B02     		lsls	r3, r3, #8
 144:Src/interface_uart.cpp **** 						else if(length == 4)
 1087              		.loc 2 144 36
 1088 0100 1AB2     		sxth	r2, r3
 144:Src/interface_uart.cpp **** 						else if(length == 4)
 1089              		.loc 2 144 45
 1090 0102 7B68     		ldr	r3, [r7, #4]
 1091 0104 0633     		adds	r3, r3, #6
 1092 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 0108 1BB2     		sxth	r3, r3
 144:Src/interface_uart.cpp **** 						else if(length == 4)
 1094              		.loc 2 144 36
 1095 010a 1343     		orrs	r3, r3, r2
 1096 010c 1BB2     		sxth	r3, r3
 144:Src/interface_uart.cpp **** 						else if(length == 4)
 1097              		.loc 2 144 16
 1098 010e BB87     		strh	r3, [r7, #60]	@ movhi
 1099 0110 1CE0     		b	.L58
 1100              	.L57:
 145:Src/interface_uart.cpp **** 									value = (pdata[6 + 3] << 24) | (pdata[6 + 2] << 16) | (pdata[6 + 1] << 8) | pdata[6];
 1101              		.loc 2 145 22
 1102 0112 FB8F     		ldrh	r3, [r7, #62]
 145:Src/interface_uart.cpp **** 									value = (pdata[6 + 3] << 24) | (pdata[6 + 2] << 16) | (pdata[6 + 1] << 8) | pdata[6];
ARM GAS  /tmp/ccd1OyLw.s 			page 44


 1103              		.loc 2 145 12
 1104 0114 042B     		cmp	r3, #4
 1105 0116 19D1     		bne	.L58
 146:Src/interface_uart.cpp ****                                     
 1106              		.loc 2 146 30
 1107 0118 7B68     		ldr	r3, [r7, #4]
 1108 011a 0933     		adds	r3, r3, #9
 1109 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 146:Src/interface_uart.cpp ****                                     
 1110              		.loc 2 146 32
 1111 011e 1B06     		lsls	r3, r3, #24
 146:Src/interface_uart.cpp ****                                     
 1112              		.loc 2 146 39
 1113 0120 1AB2     		sxth	r2, r3
 146:Src/interface_uart.cpp ****                                     
 1114              		.loc 2 146 53
 1115 0122 7B68     		ldr	r3, [r7, #4]
 1116 0124 0833     		adds	r3, r3, #8
 1117 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 146:Src/interface_uart.cpp ****                                     
 1118              		.loc 2 146 55
 1119 0128 1B04     		lsls	r3, r3, #16
 146:Src/interface_uart.cpp ****                                     
 1120              		.loc 2 146 39
 1121 012a 1BB2     		sxth	r3, r3
 1122 012c 1343     		orrs	r3, r3, r2
 1123 012e 1AB2     		sxth	r2, r3
 146:Src/interface_uart.cpp ****                                     
 1124              		.loc 2 146 76
 1125 0130 7B68     		ldr	r3, [r7, #4]
 1126 0132 0733     		adds	r3, r3, #7
 1127 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 146:Src/interface_uart.cpp ****                                     
 1128              		.loc 2 146 78
 1129 0136 1B02     		lsls	r3, r3, #8
 146:Src/interface_uart.cpp ****                                     
 1130              		.loc 2 146 62
 1131 0138 1BB2     		sxth	r3, r3
 1132 013a 1343     		orrs	r3, r3, r2
 1133 013c 1AB2     		sxth	r2, r3
 146:Src/interface_uart.cpp ****                                     
 1134              		.loc 2 146 93
 1135 013e 7B68     		ldr	r3, [r7, #4]
 1136 0140 0633     		adds	r3, r3, #6
 1137 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 0144 1BB2     		sxth	r3, r3
 146:Src/interface_uart.cpp ****                                     
 1139              		.loc 2 146 84
 1140 0146 1343     		orrs	r3, r3, r2
 1141 0148 1BB2     		sxth	r3, r3
 146:Src/interface_uart.cpp ****                                     
 1142              		.loc 2 146 16
 1143 014a BB87     		strh	r3, [r7, #60]	@ movhi
 1144              	.L58:
 148:Src/interface_uart.cpp **** 						// Send ACK
 1145              		.loc 2 148 15
 1146 014c B7F93C30 		ldrsh	r3, [r7, #60]
ARM GAS  /tmp/ccd1OyLw.s 			page 45


 1147 0150 1A46     		mov	r2, r3
 1148 0152 B7F85610 		ldrh	r1, [r7, #86]
 1149 0156 B7F85830 		ldrh	r3, [r7, #88]
 1150 015a 1846     		mov	r0, r3
 1151 015c FFF7FEFF 		bl	_Z8OD_Writettl
 150:Src/interface_uart.cpp ****             break;
 1152              		.loc 2 150 22
 1153 0160 B7F85630 		ldrh	r3, [r7, #86]	@ movhi
 1154 0164 DBB2     		uxtb	r3, r3
 1155 0166 B7F85820 		ldrh	r2, [r7, #88]
 1156 016a 0021     		movs	r1, #0
 1157 016c 0091     		str	r1, [sp]
 1158 016e 8321     		movs	r1, #131
 1159 0170 0020     		movs	r0, #0
 1160 0172 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 151:Src/interface_uart.cpp **** 
 1161              		.loc 2 151 13
 1162 0176 6AE1     		b	.L56
 1163              	.L44:
 1164              	.LBB9:
 156:Src/interface_uart.cpp **** 			
 1165              		.loc 2 156 9
 1166 0178 0023     		movs	r3, #0
 1167 017a 7B66     		str	r3, [r7, #100]
 1168              	.LBB10:
 159:Src/interface_uart.cpp **** 					// Read each PDO channel
 1169              		.loc 2 159 13
 1170 017c 0023     		movs	r3, #0
 1171 017e 3B66     		str	r3, [r7, #96]
 1172              	.L62:
 159:Src/interface_uart.cpp **** 					// Read each PDO channel
 1173              		.loc 2 159 22 discriminator 1
 1174 0180 3B6E     		ldr	r3, [r7, #96]
 1175 0182 052B     		cmp	r3, #5
 1176 0184 2DDC     		bgt	.L59
 1177              	.LBB11:
 161:Src/interface_uart.cpp **** 					
 1178              		.loc 2 161 22
 1179 0186 3B6E     		ldr	r3, [r7, #96]
 1180 0188 DBB2     		uxtb	r3, r3
 1181 018a 07F13E02 		add	r2, r7, #62
 1182 018e 1146     		mov	r1, r2
 1183 0190 1846     		mov	r0, r3
 1184 0192 FFF7FEFF 		bl	_Z8PDO_ReadhPt
 1185 0196 0346     		mov	r3, r0
 161:Src/interface_uart.cpp **** 					
 1186              		.loc 2 161 12
 1187 0198 1BB2     		sxth	r3, r3
 1188 019a BB87     		strh	r3, [r7, #60]	@ movhi
 1189              	.LBB12:
 163:Src/interface_uart.cpp **** 						// Pack data in little-endian format
 1190              		.loc 2 163 16
 1191 019c FB8F     		ldrh	r3, [r7, #62]
 163:Src/interface_uart.cpp **** 						// Pack data in little-endian format
 1192              		.loc 2 163 6
 1193 019e 002B     		cmp	r3, #0
 1194 01a0 1BD0     		beq	.L60
ARM GAS  /tmp/ccd1OyLw.s 			page 46


 1195              	.LBB13:
 1196              	.LBB14:
 165:Src/interface_uart.cpp **** 							tx_buf[pos++] = (value >> (8*j)) & 0xFF;
 1197              		.loc 2 165 15
 1198 01a2 0023     		movs	r3, #0
 1199 01a4 FB65     		str	r3, [r7, #92]
 1200              	.L61:
 165:Src/interface_uart.cpp **** 							tx_buf[pos++] = (value >> (8*j)) & 0xFF;
 1201              		.loc 2 165 26 discriminator 3
 1202 01a6 FB8F     		ldrh	r3, [r7, #62]
 1203 01a8 1A46     		mov	r2, r3
 165:Src/interface_uart.cpp **** 							tx_buf[pos++] = (value >> (8*j)) & 0xFF;
 1204              		.loc 2 165 24 discriminator 3
 1205 01aa FB6D     		ldr	r3, [r7, #92]
 1206 01ac 9342     		cmp	r3, r2
 1207 01ae 14DA     		bge	.L60
 166:Src/interface_uart.cpp **** 						}
 1208              		.loc 2 166 25 discriminator 2
 1209 01b0 B7F93C30 		ldrsh	r3, [r7, #60]
 1210 01b4 1A46     		mov	r2, r3
 166:Src/interface_uart.cpp **** 						}
 1211              		.loc 2 166 36 discriminator 2
 1212 01b6 FB6D     		ldr	r3, [r7, #92]
 1213 01b8 DB00     		lsls	r3, r3, #3
 166:Src/interface_uart.cpp **** 						}
 1214              		.loc 2 166 31 discriminator 2
 1215 01ba 42FA03F3 		asr	r3, r2, r3
 166:Src/interface_uart.cpp **** 						}
 1216              		.loc 2 166 22 discriminator 2
 1217 01be D9B2     		uxtb	r1, r3
 166:Src/interface_uart.cpp **** 						}
 1218              		.loc 2 166 18 discriminator 2
 1219 01c0 7B6E     		ldr	r3, [r7, #100]
 1220 01c2 5A1C     		adds	r2, r3, #1
 1221 01c4 7A66     		str	r2, [r7, #100]
 166:Src/interface_uart.cpp **** 						}
 1222              		.loc 2 166 22 discriminator 2
 1223 01c6 07F16802 		add	r2, r7, #104
 1224 01ca 1344     		add	r3, r3, r2
 1225 01cc 0A46     		mov	r2, r1
 1226 01ce 03F8442C 		strb	r2, [r3, #-68]
 165:Src/interface_uart.cpp **** 							tx_buf[pos++] = (value >> (8*j)) & 0xFF;
 1227              		.loc 2 165 7 discriminator 2
 1228 01d2 FB6D     		ldr	r3, [r7, #92]
 1229 01d4 0133     		adds	r3, r3, #1
 1230 01d6 FB65     		str	r3, [r7, #92]
 1231 01d8 E5E7     		b	.L61
 1232              	.L60:
 1233              	.LBE14:
 1234              	.LBE13:
 1235              	.LBE12:
 1236              	.LBE11:
 159:Src/interface_uart.cpp **** 					// Read each PDO channel
 1237              		.loc 2 159 5 discriminator 2
 1238 01da 3B6E     		ldr	r3, [r7, #96]
 1239 01dc 0133     		adds	r3, r3, #1
 1240 01de 3B66     		str	r3, [r7, #96]
ARM GAS  /tmp/ccd1OyLw.s 			page 47


 1241 01e0 CEE7     		b	.L62
 1242              	.L59:
 1243              	.LBE10:
 172:Src/interface_uart.cpp **** 			}
 1244              		.loc 2 172 20
 1245 01e2 7B6E     		ldr	r3, [r7, #100]
 1246 01e4 D8B2     		uxtb	r0, r3
 1247 01e6 07F12403 		add	r3, r7, #36
 1248 01ea 0093     		str	r3, [sp]
 1249 01ec 0023     		movs	r3, #0
 1250 01ee 0022     		movs	r2, #0
 1251 01f0 8421     		movs	r1, #132
 1252 01f2 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 1253              	.LBE9:
 174:Src/interface_uart.cpp **** 
 1254              		.loc 2 174 4
 1255 01f6 2AE1     		b	.L56
 1256              	.L49:
 178:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 1257              		.loc 2 178 25
 1258 01f8 7B68     		ldr	r3, [r7, #4]
 1259 01fa 0733     		adds	r3, r3, #7
 1260 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 178:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 1261              		.loc 2 178 27
 1262 01fe 1B02     		lsls	r3, r3, #8
 178:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 1263              		.loc 2 178 33
 1264 0200 1AB2     		sxth	r2, r3
 178:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 1265              		.loc 2 178 42
 1266 0202 7B68     		ldr	r3, [r7, #4]
 1267 0204 0633     		adds	r3, r3, #6
 1268 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 0208 1BB2     		sxth	r3, r3
 178:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 1270              		.loc 2 178 33
 1271 020a 1343     		orrs	r3, r3, r2
 1272 020c 1BB2     		sxth	r3, r3
 178:Src/interface_uart.cpp **** 			// if(value == FACTORY_RESET_MAGIC) {
 1273              		.loc 2 178 11
 1274 020e BB87     		strh	r3, [r7, #60]	@ movhi
 185:Src/interface_uart.cpp **** 		
 1275              		.loc 2 185 4
 1276 0210 1DE1     		b	.L56
 1277              	.L54:
 192:Src/interface_uart.cpp ****             break;
 1278              		.loc 2 192 28
 1279 0212 0023     		movs	r3, #0
 1280 0214 0093     		str	r3, [sp]
 1281 0216 0023     		movs	r3, #0
 1282 0218 0022     		movs	r2, #0
 1283 021a 0321     		movs	r1, #3
 1284 021c 0020     		movs	r0, #0
 1285 021e FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 193:Src/interface_uart.cpp **** 
 1286              		.loc 2 193 13
ARM GAS  /tmp/ccd1OyLw.s 			page 48


 1287 0222 14E1     		b	.L56
 1288              	.L53:
 198:Src/interface_uart.cpp ****             break;
 1289              		.loc 2 198 28
 1290 0224 0023     		movs	r3, #0
 1291 0226 0093     		str	r3, [sp]
 1292 0228 0023     		movs	r3, #0
 1293 022a 0022     		movs	r2, #0
 1294 022c 0421     		movs	r1, #4
 1295 022e 0020     		movs	r0, #0
 1296 0230 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 199:Src/interface_uart.cpp **** 
 1297              		.loc 2 199 13
 1298 0234 0BE1     		b	.L56
 1299              	.L52:
 204:Src/interface_uart.cpp ****             break;
 1300              		.loc 2 204 28
 1301 0236 0023     		movs	r3, #0
 1302 0238 0093     		str	r3, [sp]
 1303 023a 0023     		movs	r3, #0
 1304 023c 0022     		movs	r2, #0
 1305 023e 0521     		movs	r1, #5
 1306 0240 0020     		movs	r0, #0
 1307 0242 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 205:Src/interface_uart.cpp **** 
 1308              		.loc 2 205 13
 1309 0246 02E1     		b	.L56
 1310              	.L51:
 210:Src/interface_uart.cpp ****             break;
 1311              		.loc 2 210 28
 1312 0248 0023     		movs	r3, #0
 1313 024a 0093     		str	r3, [sp]
 1314 024c 0023     		movs	r3, #0
 1315 024e 0022     		movs	r2, #0
 1316 0250 0621     		movs	r1, #6
 1317 0252 0020     		movs	r0, #0
 1318 0254 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 211:Src/interface_uart.cpp **** 
 1319              		.loc 2 211 13
 1320 0258 F9E0     		b	.L56
 1321              	.L48:
 1322              	.LBB15:
 220:Src/interface_uart.cpp **** 	
 1323              		.loc 2 220 8 discriminator 2
 1324 025a 0023     		movs	r3, #0
 1325 025c 3B65     		str	r3, [r7, #80]
 223:Src/interface_uart.cpp **** 			int16_t current_vel =  FOCVars[M1].Iqd.q;
 1326              		.loc 2 223 12 discriminator 2
 1327 025e 0023     		movs	r3, #0
 1328 0260 A7F84E30 		strh	r3, [r7, #78]	@ movhi
 224:Src/interface_uart.cpp **** 			int16_t current_cur = FOCVars[0].Iab.a;;
 1329              		.loc 2 224 12 discriminator 2
 1330 0264 7C4B     		ldr	r3, .L64
 1331 0266 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1332 0268 A7F84C30 		strh	r3, [r7, #76]	@ movhi
 225:Src/interface_uart.cpp **** 			int16_t target_pos = 0;
 1333              		.loc 2 225 12 discriminator 2
ARM GAS  /tmp/ccd1OyLw.s 			page 49


 1334 026c 7A4B     		ldr	r3, .L64
 1335 026e 1B88     		ldrh	r3, [r3]	@ movhi
 1336 0270 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 226:Src/interface_uart.cpp **** 			int16_t target_vel =  FOCVars[M1].Iqd.d;
 1337              		.loc 2 226 12 discriminator 2
 1338 0274 0023     		movs	r3, #0
 1339 0276 A7F84830 		strh	r3, [r7, #72]	@ movhi
 227:Src/interface_uart.cpp **** 			int16_t target_cur =  FOCVars[0].Iab.b;
 1340              		.loc 2 227 12 discriminator 2
 1341 027a 774B     		ldr	r3, .L64
 1342 027c DB89     		ldrh	r3, [r3, #14]	@ movhi
 1343 027e A7F84630 		strh	r3, [r7, #70]	@ movhi
 228:Src/interface_uart.cpp **** 			int16_t temp = 0;
 1344              		.loc 2 228 12 discriminator 2
 1345 0282 754B     		ldr	r3, .L64
 1346 0284 5B88     		ldrh	r3, [r3, #2]	@ movhi
 1347 0286 A7F84430 		strh	r3, [r7, #68]	@ movhi
 229:Src/interface_uart.cpp **** 			uint16_t erro = 0x01;
 1348              		.loc 2 229 12 discriminator 2
 1349 028a 0023     		movs	r3, #0
 1350 028c A7F84230 		strh	r3, [r7, #66]	@ movhi
 230:Src/interface_uart.cpp **** 			
 1351              		.loc 2 230 13 discriminator 2
 1352 0290 0123     		movs	r3, #1
 1353 0292 A7F84030 		strh	r3, [r7, #64]	@ movhi
 233:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_pos>>8) & 0xFF;
 1354              		.loc 2 233 18 discriminator 2
 1355 0296 B7F84830 		ldrh	r3, [r7, #72]	@ movhi
 1356 029a D9B2     		uxtb	r1, r3
 233:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_pos>>8) & 0xFF;
 1357              		.loc 2 233 14 discriminator 2
 1358 029c 3B6D     		ldr	r3, [r7, #80]
 1359 029e 5A1C     		adds	r2, r3, #1
 1360 02a0 3A65     		str	r2, [r7, #80]
 233:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_pos>>8) & 0xFF;
 1361              		.loc 2 233 18 discriminator 2
 1362 02a2 07F16802 		add	r2, r7, #104
 1363 02a6 1344     		add	r3, r3, r2
 1364 02a8 0A46     		mov	r2, r1
 1365 02aa 03F85C2C 		strb	r2, [r3, #-92]
 234:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos) & 0xFF;
 1366              		.loc 2 234 36 discriminator 2
 1367 02ae B7F84830 		ldrh	r3, [r7, #72]
 1368 02b2 1B0A     		lsrs	r3, r3, #8
 1369 02b4 9BB2     		uxth	r3, r3
 234:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos) & 0xFF;
 1370              		.loc 2 234 18 discriminator 2
 1371 02b6 D9B2     		uxtb	r1, r3
 234:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos) & 0xFF;
 1372              		.loc 2 234 14 discriminator 2
 1373 02b8 3B6D     		ldr	r3, [r7, #80]
 1374 02ba 5A1C     		adds	r2, r3, #1
 1375 02bc 3A65     		str	r2, [r7, #80]
 234:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos) & 0xFF;
 1376              		.loc 2 234 18 discriminator 2
 1377 02be 07F16802 		add	r2, r7, #104
 1378 02c2 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccd1OyLw.s 			page 50


 1379 02c4 0A46     		mov	r2, r1
 1380 02c6 03F85C2C 		strb	r2, [r3, #-92]
 235:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos>>8) & 0xFF;
 1381              		.loc 2 235 18 discriminator 2
 1382 02ca B7F84E30 		ldrh	r3, [r7, #78]	@ movhi
 1383 02ce D9B2     		uxtb	r1, r3
 235:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos>>8) & 0xFF;
 1384              		.loc 2 235 14 discriminator 2
 1385 02d0 3B6D     		ldr	r3, [r7, #80]
 1386 02d2 5A1C     		adds	r2, r3, #1
 1387 02d4 3A65     		str	r2, [r7, #80]
 235:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_pos>>8) & 0xFF;
 1388              		.loc 2 235 18 discriminator 2
 1389 02d6 07F16802 		add	r2, r7, #104
 1390 02da 1344     		add	r3, r3, r2
 1391 02dc 0A46     		mov	r2, r1
 1392 02de 03F85C2C 		strb	r2, [r3, #-92]
 236:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel) & 0xFF;
 1393              		.loc 2 236 37 discriminator 2
 1394 02e2 B7F84E30 		ldrh	r3, [r7, #78]
 1395 02e6 1B0A     		lsrs	r3, r3, #8
 1396 02e8 9BB2     		uxth	r3, r3
 236:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel) & 0xFF;
 1397              		.loc 2 236 18 discriminator 2
 1398 02ea D9B2     		uxtb	r1, r3
 236:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel) & 0xFF;
 1399              		.loc 2 236 14 discriminator 2
 1400 02ec 3B6D     		ldr	r3, [r7, #80]
 1401 02ee 5A1C     		adds	r2, r3, #1
 1402 02f0 3A65     		str	r2, [r7, #80]
 236:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel) & 0xFF;
 1403              		.loc 2 236 18 discriminator 2
 1404 02f2 07F16802 		add	r2, r7, #104
 1405 02f6 1344     		add	r3, r3, r2
 1406 02f8 0A46     		mov	r2, r1
 1407 02fa 03F85C2C 		strb	r2, [r3, #-92]
 237:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel>>8) & 0xFF;
 1408              		.loc 2 237 18 discriminator 2
 1409 02fe B7F84630 		ldrh	r3, [r7, #70]	@ movhi
 1410 0302 D9B2     		uxtb	r1, r3
 237:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel>>8) & 0xFF;
 1411              		.loc 2 237 14 discriminator 2
 1412 0304 3B6D     		ldr	r3, [r7, #80]
 1413 0306 5A1C     		adds	r2, r3, #1
 1414 0308 3A65     		str	r2, [r7, #80]
 237:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_vel>>8) & 0xFF;
 1415              		.loc 2 237 18 discriminator 2
 1416 030a 07F16802 		add	r2, r7, #104
 1417 030e 1344     		add	r3, r3, r2
 1418 0310 0A46     		mov	r2, r1
 1419 0312 03F85C2C 		strb	r2, [r3, #-92]
 238:Src/interface_uart.cpp **** 			tx_buf[pos++] = current_vel & 0xFF;
 1420              		.loc 2 238 36 discriminator 2
 1421 0316 B7F84630 		ldrh	r3, [r7, #70]
 1422 031a 1B0A     		lsrs	r3, r3, #8
 1423 031c 9BB2     		uxth	r3, r3
 238:Src/interface_uart.cpp **** 			tx_buf[pos++] = current_vel & 0xFF;
ARM GAS  /tmp/ccd1OyLw.s 			page 51


 1424              		.loc 2 238 18 discriminator 2
 1425 031e D9B2     		uxtb	r1, r3
 238:Src/interface_uart.cpp **** 			tx_buf[pos++] = current_vel & 0xFF;
 1426              		.loc 2 238 14 discriminator 2
 1427 0320 3B6D     		ldr	r3, [r7, #80]
 1428 0322 5A1C     		adds	r2, r3, #1
 1429 0324 3A65     		str	r2, [r7, #80]
 238:Src/interface_uart.cpp **** 			tx_buf[pos++] = current_vel & 0xFF;
 1430              		.loc 2 238 18 discriminator 2
 1431 0326 07F16802 		add	r2, r7, #104
 1432 032a 1344     		add	r3, r3, r2
 1433 032c 0A46     		mov	r2, r1
 1434 032e 03F85C2C 		strb	r2, [r3, #-92]
 239:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_vel>>8) & 0xFF;
 1435              		.loc 2 239 18 discriminator 2
 1436 0332 B7F84C30 		ldrh	r3, [r7, #76]	@ movhi
 1437 0336 D9B2     		uxtb	r1, r3
 239:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_vel>>8) & 0xFF;
 1438              		.loc 2 239 14 discriminator 2
 1439 0338 3B6D     		ldr	r3, [r7, #80]
 1440 033a 5A1C     		adds	r2, r3, #1
 1441 033c 3A65     		str	r2, [r7, #80]
 239:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_vel>>8) & 0xFF;
 1442              		.loc 2 239 18 discriminator 2
 1443 033e 07F16802 		add	r2, r7, #104
 1444 0342 1344     		add	r3, r3, r2
 1445 0344 0A46     		mov	r2, r1
 1446 0346 03F85C2C 		strb	r2, [r3, #-92]
 240:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur) & 0xFF;
 1447              		.loc 2 240 37 discriminator 2
 1448 034a B7F84C30 		ldrh	r3, [r7, #76]
 1449 034e 1B0A     		lsrs	r3, r3, #8
 1450 0350 9BB2     		uxth	r3, r3
 240:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur) & 0xFF;
 1451              		.loc 2 240 18 discriminator 2
 1452 0352 D9B2     		uxtb	r1, r3
 240:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur) & 0xFF;
 1453              		.loc 2 240 14 discriminator 2
 1454 0354 3B6D     		ldr	r3, [r7, #80]
 1455 0356 5A1C     		adds	r2, r3, #1
 1456 0358 3A65     		str	r2, [r7, #80]
 240:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur) & 0xFF;
 1457              		.loc 2 240 18 discriminator 2
 1458 035a 07F16802 		add	r2, r7, #104
 1459 035e 1344     		add	r3, r3, r2
 1460 0360 0A46     		mov	r2, r1
 1461 0362 03F85C2C 		strb	r2, [r3, #-92]
 241:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur>>8) & 0xFF;
 1462              		.loc 2 241 18 discriminator 2
 1463 0366 B7F84430 		ldrh	r3, [r7, #68]	@ movhi
 1464 036a D9B2     		uxtb	r1, r3
 241:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur>>8) & 0xFF;
 1465              		.loc 2 241 14 discriminator 2
 1466 036c 3B6D     		ldr	r3, [r7, #80]
 1467 036e 5A1C     		adds	r2, r3, #1
 1468 0370 3A65     		str	r2, [r7, #80]
 241:Src/interface_uart.cpp **** 			tx_buf[pos++] = (target_cur>>8) & 0xFF;
ARM GAS  /tmp/ccd1OyLw.s 			page 52


 1469              		.loc 2 241 18 discriminator 2
 1470 0372 07F16802 		add	r2, r7, #104
 1471 0376 1344     		add	r3, r3, r2
 1472 0378 0A46     		mov	r2, r1
 1473 037a 03F85C2C 		strb	r2, [r3, #-92]
 242:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur) & 0xFF;
 1474              		.loc 2 242 36 discriminator 2
 1475 037e B7F84430 		ldrh	r3, [r7, #68]
 1476 0382 1B0A     		lsrs	r3, r3, #8
 1477 0384 9BB2     		uxth	r3, r3
 242:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur) & 0xFF;
 1478              		.loc 2 242 18 discriminator 2
 1479 0386 D9B2     		uxtb	r1, r3
 242:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur) & 0xFF;
 1480              		.loc 2 242 14 discriminator 2
 1481 0388 3B6D     		ldr	r3, [r7, #80]
 1482 038a 5A1C     		adds	r2, r3, #1
 1483 038c 3A65     		str	r2, [r7, #80]
 242:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur) & 0xFF;
 1484              		.loc 2 242 18 discriminator 2
 1485 038e 07F16802 		add	r2, r7, #104
 1486 0392 1344     		add	r3, r3, r2
 1487 0394 0A46     		mov	r2, r1
 1488 0396 03F85C2C 		strb	r2, [r3, #-92]
 243:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur>>8) & 0xFF;
 1489              		.loc 2 243 18 discriminator 2
 1490 039a B7F84A30 		ldrh	r3, [r7, #74]	@ movhi
 1491 039e D9B2     		uxtb	r1, r3
 243:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur>>8) & 0xFF;
 1492              		.loc 2 243 14 discriminator 2
 1493 03a0 3B6D     		ldr	r3, [r7, #80]
 1494 03a2 5A1C     		adds	r2, r3, #1
 1495 03a4 3A65     		str	r2, [r7, #80]
 243:Src/interface_uart.cpp **** 			tx_buf[pos++] = (current_cur>>8) & 0xFF;
 1496              		.loc 2 243 18 discriminator 2
 1497 03a6 07F16802 		add	r2, r7, #104
 1498 03aa 1344     		add	r3, r3, r2
 1499 03ac 0A46     		mov	r2, r1
 1500 03ae 03F85C2C 		strb	r2, [r3, #-92]
 244:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp) & 0xFF;
 1501              		.loc 2 244 37 discriminator 2
 1502 03b2 B7F84A30 		ldrh	r3, [r7, #74]
 1503 03b6 1B0A     		lsrs	r3, r3, #8
 1504 03b8 9BB2     		uxth	r3, r3
 244:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp) & 0xFF;
 1505              		.loc 2 244 18 discriminator 2
 1506 03ba D9B2     		uxtb	r1, r3
 244:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp) & 0xFF;
 1507              		.loc 2 244 14 discriminator 2
 1508 03bc 3B6D     		ldr	r3, [r7, #80]
 1509 03be 5A1C     		adds	r2, r3, #1
 1510 03c0 3A65     		str	r2, [r7, #80]
 244:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp) & 0xFF;
 1511              		.loc 2 244 18 discriminator 2
 1512 03c2 07F16802 		add	r2, r7, #104
 1513 03c6 1344     		add	r3, r3, r2
 1514 03c8 0A46     		mov	r2, r1
ARM GAS  /tmp/ccd1OyLw.s 			page 53


 1515 03ca 03F85C2C 		strb	r2, [r3, #-92]
 245:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp>>8) & 0xFF;
 1516              		.loc 2 245 18 discriminator 2
 1517 03ce B7F84230 		ldrh	r3, [r7, #66]	@ movhi
 1518 03d2 D9B2     		uxtb	r1, r3
 245:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp>>8) & 0xFF;
 1519              		.loc 2 245 14 discriminator 2
 1520 03d4 3B6D     		ldr	r3, [r7, #80]
 1521 03d6 5A1C     		adds	r2, r3, #1
 1522 03d8 3A65     		str	r2, [r7, #80]
 245:Src/interface_uart.cpp **** 			tx_buf[pos++] = (temp>>8) & 0xFF;
 1523              		.loc 2 245 18 discriminator 2
 1524 03da 07F16802 		add	r2, r7, #104
 1525 03de 1344     		add	r3, r3, r2
 1526 03e0 0A46     		mov	r2, r1
 1527 03e2 03F85C2C 		strb	r2, [r3, #-92]
 246:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro) & 0xFF;
 1528              		.loc 2 246 30 discriminator 2
 1529 03e6 B7F84230 		ldrh	r3, [r7, #66]
 1530 03ea 1B0A     		lsrs	r3, r3, #8
 1531 03ec 9BB2     		uxth	r3, r3
 246:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro) & 0xFF;
 1532              		.loc 2 246 18 discriminator 2
 1533 03ee D9B2     		uxtb	r1, r3
 246:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro) & 0xFF;
 1534              		.loc 2 246 14 discriminator 2
 1535 03f0 3B6D     		ldr	r3, [r7, #80]
 1536 03f2 5A1C     		adds	r2, r3, #1
 1537 03f4 3A65     		str	r2, [r7, #80]
 246:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro) & 0xFF;
 1538              		.loc 2 246 18 discriminator 2
 1539 03f6 07F16802 		add	r2, r7, #104
 1540 03fa 1344     		add	r3, r3, r2
 1541 03fc 0A46     		mov	r2, r1
 1542 03fe 03F85C2C 		strb	r2, [r3, #-92]
 247:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro>>8) & 0xFF;
 1543              		.loc 2 247 18 discriminator 2
 1544 0402 B7F84030 		ldrh	r3, [r7, #64]	@ movhi
 1545 0406 D9B2     		uxtb	r1, r3
 247:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro>>8) & 0xFF;
 1546              		.loc 2 247 14 discriminator 2
 1547 0408 3B6D     		ldr	r3, [r7, #80]
 1548 040a 5A1C     		adds	r2, r3, #1
 1549 040c 3A65     		str	r2, [r7, #80]
 247:Src/interface_uart.cpp **** 			tx_buf[pos++] = (erro>>8) & 0xFF;
 1550              		.loc 2 247 18 discriminator 2
 1551 040e 07F16802 		add	r2, r7, #104
 1552 0412 1344     		add	r3, r3, r2
 1553 0414 0A46     		mov	r2, r1
 1554 0416 03F85C2C 		strb	r2, [r3, #-92]
 248:Src/interface_uart.cpp **** 			
 1555              		.loc 2 248 25 discriminator 2
 1556 041a B7F84030 		ldrh	r3, [r7, #64]
 1557 041e 1B0A     		lsrs	r3, r3, #8
 1558 0420 9BB2     		uxth	r3, r3
 248:Src/interface_uart.cpp **** 			
 1559              		.loc 2 248 18 discriminator 2
ARM GAS  /tmp/ccd1OyLw.s 			page 54


 1560 0422 D9B2     		uxtb	r1, r3
 248:Src/interface_uart.cpp **** 			
 1561              		.loc 2 248 14 discriminator 2
 1562 0424 3B6D     		ldr	r3, [r7, #80]
 1563 0426 5A1C     		adds	r2, r3, #1
 1564 0428 3A65     		str	r2, [r7, #80]
 248:Src/interface_uart.cpp **** 			
 1565              		.loc 2 248 18 discriminator 2
 1566 042a 07F16802 		add	r2, r7, #104
 1567 042e 1344     		add	r3, r3, r2
 1568 0430 0A46     		mov	r2, r1
 1569 0432 03F85C2C 		strb	r2, [r3, #-92]
 251:Src/interface_uart.cpp **** 		}
 1570              		.loc 2 251 19 discriminator 2
 1571 0436 3B6D     		ldr	r3, [r7, #80]
 1572 0438 D8B2     		uxtb	r0, r3
 1573 043a 07F10C03 		add	r3, r7, #12
 1574 043e 0093     		str	r3, [sp]
 1575 0440 0023     		movs	r3, #0
 1576 0442 0022     		movs	r2, #0
 1577 0444 8021     		movs	r1, #128
 1578 0446 FFF7FEFF 		bl	_Z15UART_PushFrame_hhthPh
 1579              	.LBE15:
 253:Src/interface_uart.cpp **** 
 1580              		.loc 2 253 3 discriminator 2
 1581 044a 00E0     		b	.L56
 1582              	.L63:
 1583              		.loc 2 256 4
 1584 044c 00BF     		nop
 1585              	.L56:
 1586              	.LBE16:
 1587              	.LBE7:
 257:Src/interface_uart.cpp **** 	
 258:Src/interface_uart.cpp ****     }
 259:Src/interface_uart.cpp **** }
 1588              		.loc 2 259 1 discriminator 1
 1589 044e 00BF     		nop
 1590 0450 6837     		adds	r7, r7, #104
 1591              	.LCFI51:
 1592              		.cfi_def_cfa_offset 8
 1593 0452 BD46     		mov	sp, r7
 1594              	.LCFI52:
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 0454 80BD     		pop	{r7, pc}
 1598              	.L65:
 1599 0456 00BF     		.align	2
 1600              	.L64:
 1601 0458 00000000 		.word	FOCVars
 1602              		.cfi_endproc
 1603              	.LFE2878:
 1605              		.section	.text._Z17parse_uart_frame_P15uart_recv_buf_t,"ax",%progbits
 1606              		.align	1
 1607              		.global	_Z17parse_uart_frame_P15uart_recv_buf_t
 1608              		.syntax unified
 1609              		.thumb
 1610              		.thumb_func
ARM GAS  /tmp/ccd1OyLw.s 			page 55


 1611              		.fpu fpv4-sp-d16
 1613              	_Z17parse_uart_frame_P15uart_recv_buf_t:
 1614              	.LFB2879:
 260:Src/interface_uart.cpp **** 
 261:Src/interface_uart.cpp **** 
 262:Src/interface_uart.cpp **** 
 263:Src/interface_uart.cpp **** int parse_uart_frame_(uart_recv_buf_t *rx_buf) {
 1615              		.loc 2 263 48
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 16
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619 0000 80B5     		push	{r7, lr}
 1620              	.LCFI53:
 1621              		.cfi_def_cfa_offset 8
 1622              		.cfi_offset 7, -8
 1623              		.cfi_offset 14, -4
 1624 0002 84B0     		sub	sp, sp, #16
 1625              	.LCFI54:
 1626              		.cfi_def_cfa_offset 24
 1627 0004 00AF     		add	r7, sp, #0
 1628              	.LCFI55:
 1629              		.cfi_def_cfa_register 7
 1630 0006 7860     		str	r0, [r7, #4]
 264:Src/interface_uart.cpp ****     uint16_t len = rx_buf->len;
 1631              		.loc 2 264 28
 1632 0008 7B68     		ldr	r3, [r7, #4]
 1633 000a 1B78     		ldrb	r3, [r3]
 1634 000c DBB2     		uxtb	r3, r3
 1635 000e BB81     		strh	r3, [r7, #12]	@ movhi
 265:Src/interface_uart.cpp ****     uint16_t i = 0;
 1636              		.loc 2 265 14
 1637 0010 0023     		movs	r3, #0
 1638 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 266:Src/interface_uart.cpp **** 	uint8_t psum = 0;
 1639              		.loc 2 266 10
 1640 0014 0023     		movs	r3, #0
 1641 0016 FB72     		strb	r3, [r7, #11]
 267:Src/interface_uart.cpp ****     uint8_t payload = 0;
 1642              		.loc 2 267 13
 1643 0018 0023     		movs	r3, #0
 1644 001a BB72     		strb	r3, [r7, #10]
 268:Src/interface_uart.cpp **** 
 269:Src/interface_uart.cpp ****     if (!rx_buf || rx_buf->len < 4) {
 1645              		.loc 2 269 17
 1646 001c 7B68     		ldr	r3, [r7, #4]
 1647 001e 002B     		cmp	r3, #0
 1648 0020 04D0     		beq	.L67
 1649              		.loc 2 269 28 discriminator 2
 1650 0022 7B68     		ldr	r3, [r7, #4]
 1651 0024 1B78     		ldrb	r3, [r3]
 1652 0026 DBB2     		uxtb	r3, r3
 1653              		.loc 2 269 17 discriminator 2
 1654 0028 032B     		cmp	r3, #3
 1655 002a 01D8     		bhi	.L68
 1656              	.L67:
 1657              		.loc 2 269 17 is_stmt 0 discriminator 3
 1658 002c 0123     		movs	r3, #1
ARM GAS  /tmp/ccd1OyLw.s 			page 56


 1659 002e 00E0     		b	.L69
 1660              	.L68:
 1661              		.loc 2 269 17 discriminator 4
 1662 0030 0023     		movs	r3, #0
 1663              	.L69:
 1664              		.loc 2 269 5 is_stmt 1 discriminator 6
 1665 0032 002B     		cmp	r3, #0
 1666 0034 02D0     		beq	.L70
 270:Src/interface_uart.cpp ****         return -1;  // Invalid parameters
 1667              		.loc 2 270 17
 1668 0036 4FF0FF33 		mov	r3, #-1
 1669 003a 5DE0     		b	.L71
 1670              	.L70:
 271:Src/interface_uart.cpp ****     }
 272:Src/interface_uart.cpp **** 
 273:Src/interface_uart.cpp **** 	for(i = 0; i < len-1; i++)  
 1671              		.loc 2 273 8
 1672 003c 0023     		movs	r3, #0
 1673 003e FB81     		strh	r3, [r7, #14]	@ movhi
 1674              	.L77:
 1675              		.loc 2 273 13 discriminator 1
 1676 0040 FA89     		ldrh	r2, [r7, #14]
 1677              		.loc 2 273 17 discriminator 1
 1678 0042 BB89     		ldrh	r3, [r7, #12]
 1679              		.loc 2 273 20 discriminator 1
 1680 0044 013B     		subs	r3, r3, #1
 1681              		.loc 2 273 15 discriminator 1
 1682 0046 9A42     		cmp	r2, r3
 1683 0048 55DA     		bge	.L72
 274:Src/interface_uart.cpp **** 	{
 275:Src/interface_uart.cpp **** 		if(rx_buf->buf[i] ==0x55 && rx_buf->buf[i+1] ==0xaa  )
 1684              		.loc 2 275 18
 1685 004a FB89     		ldrh	r3, [r7, #14]
 1686              		.loc 2 275 19
 1687 004c 7A68     		ldr	r2, [r7, #4]
 1688 004e 1344     		add	r3, r3, r2
 1689 0050 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1690              		.loc 2 275 3
 1691 0052 552B     		cmp	r3, #85
 1692 0054 46D1     		bne	.L73
 1693              		.loc 2 275 43 discriminator 1
 1694 0056 FB89     		ldrh	r3, [r7, #14]
 1695              		.loc 2 275 44 discriminator 1
 1696 0058 0133     		adds	r3, r3, #1
 1697              		.loc 2 275 46 discriminator 1
 1698 005a 7A68     		ldr	r2, [r7, #4]
 1699 005c 1344     		add	r3, r3, r2
 1700 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1701              		.loc 2 275 28 discriminator 1
 1702 0060 AA2B     		cmp	r3, #170
 1703 0062 3FD1     		bne	.L73
 276:Src/interface_uart.cpp **** 		{
 277:Src/interface_uart.cpp **** 			if(i>1)
 1704              		.loc 2 277 4
 1705 0064 FB89     		ldrh	r3, [r7, #14]
 1706 0066 012B     		cmp	r3, #1
 1707 0068 40D8     		bhi	.L78
ARM GAS  /tmp/ccd1OyLw.s 			page 57


 278:Src/interface_uart.cpp **** 			{
 279:Src/interface_uart.cpp **** 				break;
 280:Src/interface_uart.cpp **** 			}
 281:Src/interface_uart.cpp **** 			
 282:Src/interface_uart.cpp **** 			if( (i+2) > ( len-1) )
 1708              		.loc 2 282 9
 1709 006a FB89     		ldrh	r3, [r7, #14]
 1710              		.loc 2 282 14
 1711 006c 5A1C     		adds	r2, r3, #1
 1712              		.loc 2 282 18
 1713 006e BB89     		ldrh	r3, [r7, #12]
 1714              		.loc 2 282 21
 1715 0070 013B     		subs	r3, r3, #1
 1716              		.loc 2 282 4
 1717 0072 9A42     		cmp	r2, r3
 1718 0074 3CDA     		bge	.L79
 283:Src/interface_uart.cpp **** 			{
 284:Src/interface_uart.cpp **** 				break;
 285:Src/interface_uart.cpp **** 			}
 286:Src/interface_uart.cpp **** 			payload = rx_buf->buf[i+2];
 1719              		.loc 2 286 26
 1720 0076 FB89     		ldrh	r3, [r7, #14]
 1721              		.loc 2 286 27
 1722 0078 0233     		adds	r3, r3, #2
 1723              		.loc 2 286 12
 1724 007a 7A68     		ldr	r2, [r7, #4]
 1725 007c 1344     		add	r3, r3, r2
 1726 007e 5B78     		ldrb	r3, [r3, #1]
 1727 0080 BB72     		strb	r3, [r7, #10]
 287:Src/interface_uart.cpp **** 			
 288:Src/interface_uart.cpp **** 			if( payload > (len - i - 4))
 1728              		.loc 2 288 19
 1729 0082 BA89     		ldrh	r2, [r7, #12]
 1730              		.loc 2 288 25
 1731 0084 FB89     		ldrh	r3, [r7, #14]
 1732              		.loc 2 288 23
 1733 0086 D31A     		subs	r3, r2, r3
 1734              		.loc 2 288 16
 1735 0088 DA1E     		subs	r2, r3, #3
 1736              		.loc 2 288 8
 1737 008a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1738              		.loc 2 288 4
 1739 008c 9A42     		cmp	r2, r3
 1740 008e 31DD     		ble	.L80
 289:Src/interface_uart.cpp **** 			{
 290:Src/interface_uart.cpp **** 				break;
 291:Src/interface_uart.cpp **** 			}
 292:Src/interface_uart.cpp **** 			
 293:Src/interface_uart.cpp **** 			psum = rx_buf->buf[i+payload+3];
 1741              		.loc 2 293 23
 1742 0090 FA89     		ldrh	r2, [r7, #14]
 1743              		.loc 2 293 25
 1744 0092 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1745              		.loc 2 293 24
 1746 0094 1344     		add	r3, r3, r2
 1747              		.loc 2 293 32
 1748 0096 0333     		adds	r3, r3, #3
ARM GAS  /tmp/ccd1OyLw.s 			page 58


 1749              		.loc 2 293 9
 1750 0098 7A68     		ldr	r2, [r7, #4]
 1751 009a 1344     		add	r3, r3, r2
 1752 009c 5B78     		ldrb	r3, [r3, #1]
 1753 009e FB72     		strb	r3, [r7, #11]
 294:Src/interface_uart.cpp **** 			if( psum == CheckSum(&(rx_buf->buf[i+2]),payload+1) )
 1754              		.loc 2 294 39
 1755 00a0 FB89     		ldrh	r3, [r7, #14]
 1756              		.loc 2 294 40
 1757 00a2 0233     		adds	r3, r3, #2
 1758              		.loc 2 294 24
 1759 00a4 7A68     		ldr	r2, [r7, #4]
 1760 00a6 1344     		add	r3, r3, r2
 1761 00a8 5A1C     		adds	r2, r3, #1
 1762 00aa BB7A     		ldrb	r3, [r7, #10]
 1763 00ac 0133     		adds	r3, r3, #1
 1764 00ae DBB2     		uxtb	r3, r3
 1765 00b0 1946     		mov	r1, r3
 1766 00b2 1046     		mov	r0, r2
 1767 00b4 FFF7FEFF 		bl	_ZL8CheckSumPhh
 1768 00b8 0346     		mov	r3, r0
 1769 00ba 1A46     		mov	r2, r3
 1770              		.loc 2 294 13
 1771 00bc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1772 00be 9342     		cmp	r3, r2
 1773 00c0 0CBF     		ite	eq
 1774 00c2 0123     		moveq	r3, #1
 1775 00c4 0023     		movne	r3, #0
 1776 00c6 DBB2     		uxtb	r3, r3
 1777              		.loc 2 294 4
 1778 00c8 002B     		cmp	r3, #0
 1779 00ca 0BD0     		beq	.L73
 295:Src/interface_uart.cpp **** 			{
 296:Src/interface_uart.cpp **** 				UART_ParseFrame_(&(rx_buf->buf[i+2]));  // ����֡����
 1780              		.loc 2 296 36
 1781 00cc FB89     		ldrh	r3, [r7, #14]
 1782              		.loc 2 296 37
 1783 00ce 0233     		adds	r3, r3, #2
 1784              		.loc 2 296 21
 1785 00d0 7A68     		ldr	r2, [r7, #4]
 1786 00d2 1344     		add	r3, r3, r2
 1787 00d4 0133     		adds	r3, r3, #1
 1788 00d6 1846     		mov	r0, r3
 1789 00d8 FFF7FEFF 		bl	_Z16UART_ParseFrame_Ph
 297:Src/interface_uart.cpp **** 				uart_recv_buf.len = 0;
 1790              		.loc 2 297 23
 1791 00dc 084B     		ldr	r3, .L81
 1792 00de 0022     		movs	r2, #0
 1793 00e0 1A70     		strb	r2, [r3]
 298:Src/interface_uart.cpp **** 				break;
 1794              		.loc 2 298 5
 1795 00e2 08E0     		b	.L72
 1796              	.L73:
 273:Src/interface_uart.cpp **** 	{
 1797              		.loc 2 273 2 discriminator 2
 1798 00e4 FB89     		ldrh	r3, [r7, #14]
 1799 00e6 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccd1OyLw.s 			page 59


 1800 00e8 FB81     		strh	r3, [r7, #14]	@ movhi
 1801 00ea A9E7     		b	.L77
 1802              	.L78:
 279:Src/interface_uart.cpp **** 			}
 1803              		.loc 2 279 5
 1804 00ec 00BF     		nop
 1805 00ee 02E0     		b	.L72
 1806              	.L79:
 284:Src/interface_uart.cpp **** 			}
 1807              		.loc 2 284 5
 1808 00f0 00BF     		nop
 1809 00f2 00E0     		b	.L72
 1810              	.L80:
 290:Src/interface_uart.cpp **** 			}
 1811              		.loc 2 290 5
 1812 00f4 00BF     		nop
 1813              	.L72:
 299:Src/interface_uart.cpp **** 			}
 300:Src/interface_uart.cpp **** 			else
 301:Src/interface_uart.cpp **** 			{
 302:Src/interface_uart.cpp **** 			//	while(1);
 303:Src/interface_uart.cpp **** 			}
 304:Src/interface_uart.cpp **** 		}
 305:Src/interface_uart.cpp **** 	}
 306:Src/interface_uart.cpp **** 	return 0;
 1814              		.loc 2 306 9
 1815 00f6 0023     		movs	r3, #0
 1816              	.L71:
 307:Src/interface_uart.cpp **** }
 1817              		.loc 2 307 1
 1818 00f8 1846     		mov	r0, r3
 1819 00fa 1037     		adds	r7, r7, #16
 1820              	.LCFI56:
 1821              		.cfi_def_cfa_offset 8
 1822 00fc BD46     		mov	sp, r7
 1823              	.LCFI57:
 1824              		.cfi_def_cfa_register 13
 1825              		@ sp needed
 1826 00fe 80BD     		pop	{r7, pc}
 1827              	.L82:
 1828              		.align	2
 1829              	.L81:
 1830 0100 00000000 		.word	_ZL13uart_recv_buf
 1831              		.cfi_endproc
 1832              	.LFE2879:
 1834              		.text
 1835              	.Letext0:
 1836              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1837              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1838              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1839              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1840              		.file 7 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 1841              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1842              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1843              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1844              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1845              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccd1OyLw.s 			page 60


 1846              		.file 13 "Inc/interface_uart.h"
 1847              		.file 14 "Inc/freertos_vars.h"
 1848              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1849              		.file 16 "Inc/mc_type.h"
 1850              		.file 17 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath"
 1851              		.file 18 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_trai
 1852              		.file 19 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debug/deb
 1853              		.file 20 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 1854              		.file 21 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/tr1/speci
 1855              		.file 22 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 1856              		.file 23 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pred
 1857              		.file 24 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 1858              		.file 25 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math.h"
 1859              		.file 26 "Inc/mc_config.h"
 1860              		.file 27 "Inc/utils.hpp"
 1861              		.file 28 "<built-in>"
ARM GAS  /tmp/ccd1OyLw.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interface_uart.cpp
     /tmp/ccd1OyLw.s:15     .rodata:0000000000000000 $d
     /tmp/ccd1OyLw.s:22     .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccd1OyLw.s:25     .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 _ZL18CHANNEL_OFFSET_TAB
     /tmp/ccd1OyLw.s:28     .text.LL_DMA_EnableChannel:0000000000000000 $t
     /tmp/ccd1OyLw.s:35     .text.LL_DMA_EnableChannel:0000000000000000 LL_DMA_EnableChannel
     /tmp/ccd1OyLw.s:93     .text.LL_DMA_EnableChannel:0000000000000040 $d
     /tmp/ccd1OyLw.s:98     .text.LL_DMA_DisableChannel:0000000000000000 $t
     /tmp/ccd1OyLw.s:104    .text.LL_DMA_DisableChannel:0000000000000000 LL_DMA_DisableChannel
     /tmp/ccd1OyLw.s:161    .text.LL_DMA_DisableChannel:0000000000000040 $d
     /tmp/ccd1OyLw.s:166    .text.LL_DMA_SetDataLength:0000000000000000 $t
     /tmp/ccd1OyLw.s:172    .text.LL_DMA_SetDataLength:0000000000000000 LL_DMA_SetDataLength
     /tmp/ccd1OyLw.s:234    .text.LL_DMA_SetDataLength:0000000000000048 $d
     /tmp/ccd1OyLw.s:239    .text.LL_DMA_SetMemoryAddress:0000000000000000 $t
     /tmp/ccd1OyLw.s:245    .text.LL_DMA_SetMemoryAddress:0000000000000000 LL_DMA_SetMemoryAddress
     /tmp/ccd1OyLw.s:296    .text.LL_DMA_SetMemoryAddress:0000000000000030 $d
     /tmp/ccd1OyLw.s:301    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccd1OyLw.s:304    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 _ZL19USART_PRESCALER_TAB
     /tmp/ccd1OyLw.s:318    .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccd1OyLw.s:321    .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 _ZL16OFFSET_TAB_CCMRx
     /tmp/ccd1OyLw.s:324    .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccd1OyLw.s:327    .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 _ZL14SHIFT_TAB_OCxx
     /tmp/ccd1OyLw.s:330    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccd1OyLw.s:333    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 _ZL14SHIFT_TAB_ICxx
     /tmp/ccd1OyLw.s:336    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccd1OyLw.s:339    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 _ZL14SHIFT_TAB_CCxP
     /tmp/ccd1OyLw.s:342    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccd1OyLw.s:345    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 _ZL14SHIFT_TAB_OISx
     /tmp/ccd1OyLw.s:348    .rodata._ZL12one_by_sqrt3:0000000000000000 $d
     /tmp/ccd1OyLw.s:351    .rodata._ZL12one_by_sqrt3:0000000000000000 _ZL12one_by_sqrt3
     /tmp/ccd1OyLw.s:354    .rodata._ZL12two_by_sqrt3:0000000000000000 $d
     /tmp/ccd1OyLw.s:357    .rodata._ZL12two_by_sqrt3:0000000000000000 _ZL12two_by_sqrt3
     /tmp/ccd1OyLw.s:360    .rodata._ZL10sqrt3_by_2:0000000000000000 $d
     /tmp/ccd1OyLw.s:363    .rodata._ZL10sqrt3_by_2:0000000000000000 _ZL10sqrt3_by_2
     /tmp/ccd1OyLw.s:366    .bss._ZL13dma_tx_buffer:0000000000000000 $d
     /tmp/ccd1OyLw.s:369    .bss._ZL13dma_tx_buffer:0000000000000000 _ZL13dma_tx_buffer
     /tmp/ccd1OyLw.s:374    .bss._ZL6tx_len:0000000000000000 _ZL6tx_len
     /tmp/ccd1OyLw.s:375    .bss._ZL6tx_len:0000000000000000 $d
     /tmp/ccd1OyLw.s:377    .bss._ZL13uart_recv_buf:0000000000000000 $d
     /tmp/ccd1OyLw.s:380    .bss._ZL13uart_recv_buf:0000000000000000 _ZL13uart_recv_buf
     /tmp/ccd1OyLw.s:387    .bss.uart_thread:0000000000000000 uart_thread
     /tmp/ccd1OyLw.s:384    .bss.uart_thread:0000000000000000 $d
     /tmp/ccd1OyLw.s:394    .rodata.stack_size_uart_thread:0000000000000000 stack_size_uart_thread
     /tmp/ccd1OyLw.s:391    .rodata.stack_size_uart_thread:0000000000000000 $d
     /tmp/ccd1OyLw.s:397    .text.copy_data_to_uart_buffer:0000000000000000 $t
     /tmp/ccd1OyLw.s:404    .text.copy_data_to_uart_buffer:0000000000000000 copy_data_to_uart_buffer
     /tmp/ccd1OyLw.s:484    .text.copy_data_to_uart_buffer:0000000000000058 $d
     /tmp/ccd1OyLw.s:490    .text._ZL18uart_server_threadPKv:0000000000000000 $t
     /tmp/ccd1OyLw.s:496    .text._ZL18uart_server_threadPKv:0000000000000000 _ZL18uart_server_threadPKv
     /tmp/ccd1OyLw.s:1613   .text._Z17parse_uart_frame_P15uart_recv_buf_t:0000000000000000 _Z17parse_uart_frame_P15uart_recv_buf_t
     /tmp/ccd1OyLw.s:555    .text._ZL18uart_server_threadPKv:000000000000003c $d
     /tmp/ccd1OyLw.s:571    .text.start_uart_server:0000000000000000 $t
     /tmp/ccd1OyLw.s:578    .text.start_uart_server:0000000000000000 start_uart_server
     /tmp/ccd1OyLw.s:627    .text.start_uart_server:000000000000002c $d
     /tmp/ccd1OyLw.s:633    .text._ZL8CheckSumPhh:0000000000000000 $t
     /tmp/ccd1OyLw.s:639    .text._ZL8CheckSumPhh:0000000000000000 _ZL8CheckSumPhh
ARM GAS  /tmp/ccd1OyLw.s 			page 62


     /tmp/ccd1OyLw.s:707    .text._Z15UART_PushFrame_hhthPh:0000000000000000 $t
     /tmp/ccd1OyLw.s:714    .text._Z15UART_PushFrame_hhthPh:0000000000000000 _Z15UART_PushFrame_hhthPh
     /tmp/ccd1OyLw.s:920    .text._Z15UART_PushFrame_hhthPh:000000000000011c $d
     /tmp/ccd1OyLw.s:927    .text._Z16UART_ParseFrame_Ph:0000000000000000 $t
     /tmp/ccd1OyLw.s:934    .text._Z16UART_ParseFrame_Ph:0000000000000000 _Z16UART_ParseFrame_Ph
     /tmp/ccd1OyLw.s:1005   .text._Z16UART_ParseFrame_Ph:0000000000000058 $d
     /tmp/ccd1OyLw.s:1010   .text._Z16UART_ParseFrame_Ph:000000000000006c $t
     /tmp/ccd1OyLw.s:1019   .text._Z16UART_ParseFrame_Ph:000000000000007c $d
     /tmp/ccd1OyLw.s:1028   .text._Z16UART_ParseFrame_Ph:00000000000000a0 $t
     /tmp/ccd1OyLw.s:1601   .text._Z16UART_ParseFrame_Ph:0000000000000458 $d
     /tmp/ccd1OyLw.s:1606   .text._Z17parse_uart_frame_P15uart_recv_buf_t:0000000000000000 $t
     /tmp/ccd1OyLw.s:1830   .text._Z17parse_uart_frame_P15uart_recv_buf_t:0000000000000100 $d

UNDEFINED SYMBOLS
osSemaphoreRelease
sem_uart_dma
osSemaphoreWait
osThreadCreate
_Z7OD_ReadttPt
_Z8OD_Writettl
_Z8PDO_ReadhPt
FOCVars
