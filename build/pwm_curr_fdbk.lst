ARM GAS  /tmp/cctuhtEr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"pwm_curr_fdbk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWMC_Clear,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	PWMC_Clear
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	PWMC_Clear:
  28              	.LVL0:
  29              	.LFB1440:
  30              		.file 1 "Src/pwm_curr_fdbk.c"
   1:Src/pwm_curr_fdbk.c **** /**
   2:Src/pwm_curr_fdbk.c ****   ******************************************************************************
   3:Src/pwm_curr_fdbk.c ****   * @file    pwm_curr_fdbk.c
   4:Src/pwm_curr_fdbk.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:Src/pwm_curr_fdbk.c ****   * @brief   This file provides firmware functions that implement the following features
   6:Src/pwm_curr_fdbk.c ****   *          of the PWM & Current Feedback component of the Motor Control SDK:
   7:Src/pwm_curr_fdbk.c ****   *
   8:Src/pwm_curr_fdbk.c ****   *           * current sensing
   9:Src/pwm_curr_fdbk.c ****   *           * regular ADC conversion execution
  10:Src/pwm_curr_fdbk.c ****   *           * space vector modulation
  11:Src/pwm_curr_fdbk.c ****   *
  12:Src/pwm_curr_fdbk.c ****   ******************************************************************************
  13:Src/pwm_curr_fdbk.c ****   * @attention
  14:Src/pwm_curr_fdbk.c ****   *
  15:Src/pwm_curr_fdbk.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  16:Src/pwm_curr_fdbk.c ****   * All rights reserved.</center></h2>
  17:Src/pwm_curr_fdbk.c ****   *
  18:Src/pwm_curr_fdbk.c ****   * This software component is licensed by ST under Ultimate Liberty license
  19:Src/pwm_curr_fdbk.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  20:Src/pwm_curr_fdbk.c ****   * the License. You may obtain a copy of the License at:
  21:Src/pwm_curr_fdbk.c ****   *                             www.st.com/SLA0044
  22:Src/pwm_curr_fdbk.c ****   *
  23:Src/pwm_curr_fdbk.c ****   ******************************************************************************
  24:Src/pwm_curr_fdbk.c ****   * @ingroup pwm_curr_fdbk
  25:Src/pwm_curr_fdbk.c ****   */
  26:Src/pwm_curr_fdbk.c **** 
  27:Src/pwm_curr_fdbk.c **** /* Includes ------------------------------------------------------------------*/
  28:Src/pwm_curr_fdbk.c **** #include "pwm_curr_fdbk.h"
ARM GAS  /tmp/cctuhtEr.s 			page 2


  29:Src/pwm_curr_fdbk.c **** #include "mc_math.h"
  30:Src/pwm_curr_fdbk.c **** #include "mc_type.h"
  31:Src/pwm_curr_fdbk.c **** 
  32:Src/pwm_curr_fdbk.c **** /** @addtogroup MCSDK
  33:Src/pwm_curr_fdbk.c ****   * @{
  34:Src/pwm_curr_fdbk.c ****   */
  35:Src/pwm_curr_fdbk.c **** 
  36:Src/pwm_curr_fdbk.c **** /** @defgroup pwm_curr_fdbk PWM & Current Feedback
  37:Src/pwm_curr_fdbk.c ****   *
  38:Src/pwm_curr_fdbk.c ****   * @brief PWM & Current Feedback components of the Motor Control SDK.
  39:Src/pwm_curr_fdbk.c ****   *
  40:Src/pwm_curr_fdbk.c ****   * These components fulfill two functions in a Motor Control subsystem:
  41:Src/pwm_curr_fdbk.c ****   *
  42:Src/pwm_curr_fdbk.c ****   * - The generation of the Space Vector Pulse Width Modulation on the motor's phases
  43:Src/pwm_curr_fdbk.c ****   * - The sampling of the actual motor's phases current
  44:Src/pwm_curr_fdbk.c ****   *
  45:Src/pwm_curr_fdbk.c ****   * Both these features are closely related as the instants when the values of the phase currents
  46:Src/pwm_curr_fdbk.c ****   * should be sampled by the ADC channels are basically triggered by the timers used to generate
  47:Src/pwm_curr_fdbk.c ****   * the duty cycles for the PWM.
  48:Src/pwm_curr_fdbk.c ****   *
  49:Src/pwm_curr_fdbk.c ****   * Several implementation of PWM and Current Feedback components are provided by the Motor Control
  50:Src/pwm_curr_fdbk.c ****   * SDK to account for the specificities of the application:
  51:Src/pwm_curr_fdbk.c ****   *
  52:Src/pwm_curr_fdbk.c ****   * - The selected MCU: the number of ADCs available on a given MCU, the presence of internal
  53:Src/pwm_curr_fdbk.c ****   * comparators or OpAmps, for instance, lead to different implementation of this feature
  54:Src/pwm_curr_fdbk.c ****   * - The Current sensing topology also has an impact on the firmware: implementations are provided
  55:Src/pwm_curr_fdbk.c ****   * for Insulated Current Sensors, Single Shunt and Three Shunt resistors current sensing topologie
  56:Src/pwm_curr_fdbk.c ****   *
  57:Src/pwm_curr_fdbk.c ****   * The choice of the implementation mostly depend on these two factors and is performed by the
  58:Src/pwm_curr_fdbk.c ****   * Motor Control Workbench tool.
  59:Src/pwm_curr_fdbk.c ****   *
  60:Src/pwm_curr_fdbk.c ****   * All these implementations are built on a base PWM & Current Feedback component that they extend
  61:Src/pwm_curr_fdbk.c ****   * and that provides the functions and data that are common to all of them. This base component is
  62:Src/pwm_curr_fdbk.c ****   * never used directly as it does not provide a complete implementation of the features. Rather,
  63:Src/pwm_curr_fdbk.c ****   * its handle structure (PWMC_Handle) is reused by all the PWM & Current Feedback specific
  64:Src/pwm_curr_fdbk.c ****   * implementations and the functions it provides form the API of the PWM and Current feedback feat
  65:Src/pwm_curr_fdbk.c ****   * Calling them results in calling functions of the component that actually implement the feature.
  66:Src/pwm_curr_fdbk.c ****   * See PWMC_Handle for more details on this mechanism.
  67:Src/pwm_curr_fdbk.c ****   * @{
  68:Src/pwm_curr_fdbk.c ****   */
  69:Src/pwm_curr_fdbk.c **** 
  70:Src/pwm_curr_fdbk.c **** /**
  71:Src/pwm_curr_fdbk.c ****   * @brief  Used to clear variables in CPWMC.
  72:Src/pwm_curr_fdbk.c ****   *
  73:Src/pwm_curr_fdbk.c ****   * @param pHandle: Handler of the current instance of the PWM component.
  74:Src/pwm_curr_fdbk.c ****   */
  75:Src/pwm_curr_fdbk.c **** void PWMC_Clear(PWMC_Handle_t *pHandle)
  76:Src/pwm_curr_fdbk.c **** {
  31              		.loc 1 76 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  77:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
  78:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  79:Src/pwm_curr_fdbk.c ****   {
  80:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
ARM GAS  /tmp/cctuhtEr.s 			page 3


  81:Src/pwm_curr_fdbk.c ****   }
  82:Src/pwm_curr_fdbk.c ****   else
  83:Src/pwm_curr_fdbk.c ****   {
  84:Src/pwm_curr_fdbk.c **** #endif
  85:Src/pwm_curr_fdbk.c ****     pHandle->IaEst = 0;
  36              		.loc 1 85 5 view .LVU1
  86:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
  37              		.loc 1 86 5 view .LVU2
  85:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
  38              		.loc 1 85 20 is_stmt 0 view .LVU3
  39 0000 0023     		movs	r3, #0
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
  88:Src/pwm_curr_fdbk.c ****     pHandle->LPFIdBuf = 0;
  89:Src/pwm_curr_fdbk.c ****     pHandle->LPFIqBuf = 0;
  40              		.loc 1 89 23 view .LVU4
  41 0002 C0E90D33 		strd	r3, r3, [r0, #52]
  85:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
  42              		.loc 1 85 20 view .LVU5
  43 0006 8366     		str	r3, [r0, #104]
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
  44              		.loc 1 87 5 is_stmt 1 view .LVU6
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
  45              		.loc 1 87 20 is_stmt 0 view .LVU7
  46 0008 A0F86C30 		strh	r3, [r0, #108]	@ movhi
  88:Src/pwm_curr_fdbk.c ****     pHandle->LPFIqBuf = 0;
  47              		.loc 1 88 5 is_stmt 1 view .LVU8
  90:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
  91:Src/pwm_curr_fdbk.c ****   }
  92:Src/pwm_curr_fdbk.c **** #endif
  93:Src/pwm_curr_fdbk.c **** }
  48              		.loc 1 93 1 is_stmt 0 view .LVU9
  49 000c 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE1440:
  53 000e 00BF     		.section	.text.PWMC_SetOffsetCalib,"ax",%progbits
  54              		.align	1
  55              		.p2align 2,,3
  56              		.weak	PWMC_SetOffsetCalib
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	PWMC_SetOffsetCalib:
  63              	.LVL1:
  64              	.LFB1441:
  94:Src/pwm_curr_fdbk.c **** 
  95:Src/pwm_curr_fdbk.c **** /**
  96:Src/pwm_curr_fdbk.c ****   * @brief  Sets the calibrated @p offsets for each of the phases in the @p pHandle handler. In cas
  97:Src/pwm_curr_fdbk.c ****   *
  98:Src/pwm_curr_fdbk.c ****   */
  99:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 100:Src/pwm_curr_fdbk.c **** __weak void PWMC_SetOffsetCalib(PWMC_Handle_t *pHandle, PolarizationOffsets_t *offsets)
 101:Src/pwm_curr_fdbk.c **** {
  65              		.loc 1 101 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctuhtEr.s 			page 4


  69              		@ link register save eliminated.
 102:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  70              		.loc 1 102 3 view .LVU11
  71              		.loc 1 102 6 is_stmt 0 view .LVU12
  72 0000 08B1     		cbz	r0, .L3
 103:Src/pwm_curr_fdbk.c ****   {
 104:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 105:Src/pwm_curr_fdbk.c ****   }
 106:Src/pwm_curr_fdbk.c ****   else
 107:Src/pwm_curr_fdbk.c ****   {
 108:Src/pwm_curr_fdbk.c ****     pHandle->pFctSetOffsetCalib(pHandle, offsets);
  73              		.loc 1 108 5 is_stmt 1 view .LVU13
  74 0002 C36A     		ldr	r3, [r0, #44]
  75 0004 1847     		bx	r3	@ indirect register sibling call
  76              	.LVL2:
  77              	.L3:
 109:Src/pwm_curr_fdbk.c ****   }
 110:Src/pwm_curr_fdbk.c **** }
  78              		.loc 1 110 1 is_stmt 0 view .LVU14
  79 0006 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE1441:
  83              		.section	.text.PWMC_GetOffsetCalib,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.weak	PWMC_GetOffsetCalib
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	PWMC_GetOffsetCalib:
  93              	.LVL3:
  94              	.LFB1442:
 111:Src/pwm_curr_fdbk.c **** 
 112:Src/pwm_curr_fdbk.c **** /**
 113:Src/pwm_curr_fdbk.c ****   * @brief  Gets the calibrated @p offsets for each of the phases in the @p pHandle handler. In cas
 114:Src/pwm_curr_fdbk.c ****   *
 115:Src/pwm_curr_fdbk.c ****   */
 116:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 117:Src/pwm_curr_fdbk.c **** __weak void PWMC_GetOffsetCalib(PWMC_Handle_t *pHandle, PolarizationOffsets_t *offsets)
 118:Src/pwm_curr_fdbk.c **** {
  95              		.loc 1 118 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 119:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 100              		.loc 1 119 3 view .LVU16
 101              		.loc 1 119 6 is_stmt 0 view .LVU17
 102 0000 08B1     		cbz	r0, .L5
 120:Src/pwm_curr_fdbk.c ****   {
 121:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 122:Src/pwm_curr_fdbk.c ****   }
 123:Src/pwm_curr_fdbk.c ****   else
 124:Src/pwm_curr_fdbk.c ****   {
 125:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetOffsetCalib(pHandle, offsets);
 103              		.loc 1 125 5 is_stmt 1 view .LVU18
ARM GAS  /tmp/cctuhtEr.s 			page 5


 104 0002 036B     		ldr	r3, [r0, #48]
 105 0004 1847     		bx	r3	@ indirect register sibling call
 106              	.LVL4:
 107              	.L5:
 126:Src/pwm_curr_fdbk.c ****   }
 127:Src/pwm_curr_fdbk.c **** }
 108              		.loc 1 127 1 is_stmt 0 view .LVU19
 109 0006 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE1442:
 113              		.section	.text.PWMC_SetPhaseVoltage,"ax",%progbits
 114              		.align	1
 115              		.p2align 2,,3
 116              		.weak	PWMC_SetPhaseVoltage
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv4-sp-d16
 122              	PWMC_SetPhaseVoltage:
 123              	.LVL5:
 124              	.LFB1443:
 128:Src/pwm_curr_fdbk.c **** 
 129:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 130:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 131:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 132:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 133:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 134:Src/pwm_curr_fdbk.c **** #endif
 135:Src/pwm_curr_fdbk.c **** #endif
 136:Src/pwm_curr_fdbk.c **** 
 137:Src/pwm_curr_fdbk.c **** /**
 138:Src/pwm_curr_fdbk.c ****   * @brief  Converts input voltages @f$ V_{\alpha} @f$ and @f$ V_{\beta} @f$ into PWM duty cycles
 139:Src/pwm_curr_fdbk.c ****   *         and feed them to the inverter.
 140:Src/pwm_curr_fdbk.c ****   *
 141:Src/pwm_curr_fdbk.c ****   * This function computes the time during which the transistors of each phase are to be switched o
 142:Src/pwm_curr_fdbk.c ****   * a PWM cycle in order to achieve the reference phase voltage set by @p Valfa_beta. The function 
 143:Src/pwm_curr_fdbk.c ****   * programs the resulting duty cycles in the related timer channels. It also sets the phase curren
 144:Src/pwm_curr_fdbk.c ****   * sampling point for the next PWM cycle accordingly.
 145:Src/pwm_curr_fdbk.c ****   *
 146:Src/pwm_curr_fdbk.c ****   * This function is used in the FOC frequency loop and needs to complete itself before the next PW
 147:Src/pwm_curr_fdbk.c ****   * in order for the duty cycles it computes to be taken into account. Failing to do so (for instan
 148:Src/pwm_curr_fdbk.c ****   * the PWM Frequency is too high) results in the function returning #MC_DURATION which entails a
 149:Src/pwm_curr_fdbk.c ****   * Motor Control Fault that stops the motor.
 150:Src/pwm_curr_fdbk.c ****   *
 151:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 152:Src/pwm_curr_fdbk.c ****   * @param  Valfa_beta: Voltage Components expressed in the @f$(\alpha, \beta)@f$ reference frame.
 153:Src/pwm_curr_fdbk.c ****   * @retval #MC_NO_ERROR if no error occurred or #MC_DURATION if the duty cycles were
 154:Src/pwm_curr_fdbk.c ****   *         set too late for being taken into account in the next PWM cycle.
 155:Src/pwm_curr_fdbk.c ****   */
 156:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_SetPhaseVoltage(PWMC_Handle_t *pHandle, alphabeta_t Valfa_beta)
 157:Src/pwm_curr_fdbk.c **** {
 125              		.loc 1 157 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 158:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 129              		.loc 1 158 3 view .LVU21
ARM GAS  /tmp/cctuhtEr.s 			page 6


 159:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 160:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 161:Src/pwm_curr_fdbk.c ****   {
 162:Src/pwm_curr_fdbk.c ****     returnValue = 0U;
 163:Src/pwm_curr_fdbk.c ****   }
 164:Src/pwm_curr_fdbk.c ****   else
 165:Src/pwm_curr_fdbk.c ****   {
 166:Src/pwm_curr_fdbk.c **** #endif
 167:Src/pwm_curr_fdbk.c ****     int32_t wX;
 130              		.loc 1 167 5 view .LVU22
 168:Src/pwm_curr_fdbk.c ****     int32_t wY;
 131              		.loc 1 168 5 view .LVU23
 169:Src/pwm_curr_fdbk.c ****     int32_t wZ;
 132              		.loc 1 169 5 view .LVU24
 170:Src/pwm_curr_fdbk.c ****     int32_t wUAlpha;
 133              		.loc 1 170 5 view .LVU25
 171:Src/pwm_curr_fdbk.c ****     int32_t wUBeta;
 134              		.loc 1 171 5 view .LVU26
 172:Src/pwm_curr_fdbk.c ****     int32_t wTimePhA;
 135              		.loc 1 172 5 view .LVU27
 173:Src/pwm_curr_fdbk.c ****     int32_t wTimePhB;
 136              		.loc 1 173 5 view .LVU28
 174:Src/pwm_curr_fdbk.c ****     int32_t wTimePhC;
 137              		.loc 1 174 5 view .LVU29
 175:Src/pwm_curr_fdbk.c **** 
 176:Src/pwm_curr_fdbk.c ****     wUAlpha = Valfa_beta.alpha * (int32_t)pHandle->hT_Sqrt3;
 138              		.loc 1 176 5 view .LVU30
 157:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 139              		.loc 1 157 1 is_stmt 0 view .LVU31
 140 0000 10B5     		push	{r4, lr}
 141              	.LCFI0:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 177:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 145              		.loc 1 177 51 view .LVU32
 146 0002 B0F870C0 		ldrh	ip, [r0, #112]
 176:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 147              		.loc 1 176 34 view .LVU33
 148 0006 B0F84E30 		ldrh	r3, [r0, #78]
 157:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 149              		.loc 1 157 1 view .LVU34
 150 000a 82B0     		sub	sp, sp, #8
 151              	.LCFI1:
 152              		.cfi_def_cfa_offset 16
 153              		.loc 1 177 26 view .LVU35
 154 000c 0A14     		asrs	r2, r1, #16
 157:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 155              		.loc 1 157 1 view .LVU36
 156 000e 0191     		str	r1, [sp, #4]
 157              		.loc 1 177 32 view .LVU37
 158 0010 0CFB02F2 		mul	r2, ip, r2
 176:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 159              		.loc 1 176 25 view .LVU38
 160 0014 09B2     		sxth	r1, r1
 161              		.loc 1 177 12 view .LVU39
 162 0016 C2EBC272 		rsb	r2, r2, r2, lsl #31
ARM GAS  /tmp/cctuhtEr.s 			page 7


 176:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 163              		.loc 1 176 13 view .LVU40
 164 001a 03FB01F1 		mul	r1, r3, r1
 165              	.LVL6:
 166              		.loc 1 177 5 is_stmt 1 view .LVU41
 178:Src/pwm_curr_fdbk.c **** 
 179:Src/pwm_curr_fdbk.c ****     wX = wUBeta;
 180:Src/pwm_curr_fdbk.c ****     wY = (wUBeta + wUAlpha) / 2;
 167              		.loc 1 180 18 is_stmt 0 view .LVU42
 168 001e 01EB4203 		add	r3, r1, r2, lsl #1
 181:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 169              		.loc 1 181 18 view .LVU43
 170 0022 C1EB4201 		rsb	r1, r1, r2, lsl #1
 171              	.LVL7:
 180:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 172              		.loc 1 180 8 view .LVU44
 173 0026 03EBD37E 		add	lr, r3, r3, lsr #31
 174              		.loc 1 181 8 view .LVU45
 175 002a 01EBD174 		add	r4, r1, r1, lsr #31
 182:Src/pwm_curr_fdbk.c **** 
 183:Src/pwm_curr_fdbk.c ****     /* Sector calculation from wX, wY, wZ */
 184:Src/pwm_curr_fdbk.c ****     if (wY < 0)
 176              		.loc 1 184 8 view .LVU46
 177 002e B3F1FF3F 		cmp	r3, #-1
 177:Src/pwm_curr_fdbk.c **** 
 178              		.loc 1 177 12 view .LVU47
 179 0032 4FEA4202 		lsl	r2, r2, #1
 180              	.LVL8:
 179:Src/pwm_curr_fdbk.c ****     wY = (wUBeta + wUAlpha) / 2;
 181              		.loc 1 179 5 is_stmt 1 view .LVU48
 180:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 182              		.loc 1 180 5 view .LVU49
 180:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 183              		.loc 1 180 8 is_stmt 0 view .LVU50
 184 0036 4FEA6E0E 		asr	lr, lr, #1
 185              	.LVL9:
 181:Src/pwm_curr_fdbk.c **** 
 186              		.loc 1 181 5 is_stmt 1 view .LVU51
 181:Src/pwm_curr_fdbk.c **** 
 187              		.loc 1 181 8 is_stmt 0 view .LVU52
 188 003a 4FEA6404 		asr	r4, r4, #1
 189              	.LVL10:
 190              		.loc 1 184 5 is_stmt 1 view .LVU53
 191              		.loc 1 184 8 is_stmt 0 view .LVU54
 192 003e 6FDB     		blt	.L39
 185:Src/pwm_curr_fdbk.c ****     {
 186:Src/pwm_curr_fdbk.c ****       if (wZ < 0)
 187:Src/pwm_curr_fdbk.c ****       {
 188:Src/pwm_curr_fdbk.c ****         pHandle->Sector = SECTOR_5;
 189:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 190:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 191:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 192:Src/pwm_curr_fdbk.c **** 
 193:Src/pwm_curr_fdbk.c ****         if(true == pHandle->SingleShuntTopology)
 194:Src/pwm_curr_fdbk.c ****         {
 195:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = 1U;
 196:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
ARM GAS  /tmp/cctuhtEr.s 			page 8


 197:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 2U;
 198:Src/pwm_curr_fdbk.c ****         }
 199:Src/pwm_curr_fdbk.c ****         else
 200:Src/pwm_curr_fdbk.c ****         {
 201:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhC;
 202:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 203:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 204:Src/pwm_curr_fdbk.c ****         }
 205:Src/pwm_curr_fdbk.c ****       }
 206:Src/pwm_curr_fdbk.c ****       else /* wZ >= 0 */
 207:Src/pwm_curr_fdbk.c ****         if (wX <= 0)
 208:Src/pwm_curr_fdbk.c ****         {
 209:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_4;
 210:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 211:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 212:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 213:Src/pwm_curr_fdbk.c **** 
 214:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 215:Src/pwm_curr_fdbk.c ****           {
 216:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 0U;
 217:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 218:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 2U;
 219:Src/pwm_curr_fdbk.c ****           }
 220:Src/pwm_curr_fdbk.c ****           else
 221:Src/pwm_curr_fdbk.c ****           {
 222:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhC;
 223:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
 224:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 225:Src/pwm_curr_fdbk.c ****         }
 226:Src/pwm_curr_fdbk.c ****         }
 227:Src/pwm_curr_fdbk.c ****         else /* wX > 0 */
 228:Src/pwm_curr_fdbk.c ****         {
 229:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_3;
 230:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 231:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 232:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 233:Src/pwm_curr_fdbk.c **** 
 234:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 235:Src/pwm_curr_fdbk.c ****           {
 236:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 0U;
 237:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 238:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 1U;
 239:Src/pwm_curr_fdbk.c ****           }
 240:Src/pwm_curr_fdbk.c ****           else
 241:Src/pwm_curr_fdbk.c ****           {
 242:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhB;
 243:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 244:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 245:Src/pwm_curr_fdbk.c ****         }
 246:Src/pwm_curr_fdbk.c ****         }
 247:Src/pwm_curr_fdbk.c ****     }
 248:Src/pwm_curr_fdbk.c ****     else /* wY > 0 */
 249:Src/pwm_curr_fdbk.c ****     {
 250:Src/pwm_curr_fdbk.c ****       if (wZ >= 0)
 193              		.loc 1 250 7 is_stmt 1 view .LVU55
 194              		.loc 1 250 10 is_stmt 0 view .LVU56
 195 0040 B1F1FF3F 		cmp	r1, #-1
ARM GAS  /tmp/cctuhtEr.s 			page 9


 196 0044 3BDB     		blt	.L23
 251:Src/pwm_curr_fdbk.c ****       {
 252:Src/pwm_curr_fdbk.c ****         pHandle->Sector = SECTOR_2;
 197              		.loc 1 252 9 is_stmt 1 view .LVU57
 253:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 198              		.loc 1 253 69 is_stmt 0 view .LVU58
 199 0046 BEEB040E 		subs	lr, lr, r4
 200              	.LVL11:
 201              		.loc 1 253 69 view .LVU59
 202 004a 44BF     		itt	mi
 203 004c 0EF57F3E 		addmi	lr, lr, #261120
 204 0050 0EF2FF3E 		addwmi	lr, lr, #1023
 254:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 205              		.loc 1 254 35 view .LVU60
 206 0054 0029     		cmp	r1, #0
 207 0056 B8BF     		it	lt
 208 0058 01F57F31 		addlt	r1, r1, #261120
 252:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 209              		.loc 1 252 25 view .LVU61
 210 005c 4FF00102 		mov	r2, #1
 211              	.LVL12:
 212              		.loc 1 254 35 view .LVU62
 213 0060 B8BF     		it	lt
 214 0062 01F2FF31 		addwlt	r1, r1, #1023
 255:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 215              		.loc 1 255 35 view .LVU63
 216 0066 002B     		cmp	r3, #0
 217              		.loc 1 255 35 view .LVU64
 218 0068 B8BF     		it	lt
 219 006a 03F57F33 		addlt	r3, r3, #261120
 220              	.LVL13:
 252:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 221              		.loc 1 252 25 view .LVU65
 222 006e 80F87A20 		strb	r2, [r0, #122]
 223              	.LVL14:
 253:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 224              		.loc 1 253 9 is_stmt 1 view .LVU66
 253:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 225              		.loc 1 253 51 is_stmt 0 view .LVU67
 226 0072 4FEA9C0C 		lsr	ip, ip, #2
 256:Src/pwm_curr_fdbk.c **** 
 257:Src/pwm_curr_fdbk.c ****         if(true == pHandle->SingleShuntTopology)
 227              		.loc 1 257 11 view .LVU68
 228 0076 90F88520 		ldrb	r2, [r0, #133]	@ zero_extendqisi2
 253:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 229              		.loc 1 253 18 view .LVU69
 230 007a 0CEBAE4E 		add	lr, ip, lr, asr #18
 231              	.LVL15:
 254:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 232              		.loc 1 254 9 is_stmt 1 view .LVU70
 255:Src/pwm_curr_fdbk.c **** 
 233              		.loc 1 255 35 is_stmt 0 view .LVU71
 234 007e B8BF     		it	lt
 235 0080 03F2FF33 		addwlt	r3, r3, #1023
 254:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 236              		.loc 1 254 18 view .LVU72
 237 0084 0EEBA141 		add	r1, lr, r1, asr #18
ARM GAS  /tmp/cctuhtEr.s 			page 10


 238              	.LVL16:
 255:Src/pwm_curr_fdbk.c **** 
 239              		.loc 1 255 9 is_stmt 1 view .LVU73
 255:Src/pwm_curr_fdbk.c **** 
 240              		.loc 1 255 18 is_stmt 0 view .LVU74
 241 0088 AEEBA343 		sub	r3, lr, r3, asr #18
 242              	.LVL17:
 243              		.loc 1 257 9 is_stmt 1 view .LVU75
 244              		.loc 1 257 11 is_stmt 0 view .LVU76
 245 008c 002A     		cmp	r2, #0
 246 008e 72D1     		bne	.L40
 258:Src/pwm_curr_fdbk.c ****         {
 259:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = 2U;
 260:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 261:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 1U;
 262:Src/pwm_curr_fdbk.c ****         }
 263:Src/pwm_curr_fdbk.c ****         else
 264:Src/pwm_curr_fdbk.c ****         {
 265:Src/pwm_curr_fdbk.c ****         pHandle->lowDuty = (uint16_t)wTimePhB;
 247              		.loc 1 265 9 is_stmt 1 view .LVU77
 248              		.loc 1 265 28 is_stmt 0 view .LVU78
 249 0090 A0F85810 		strh	r1, [r0, #88]	@ movhi
 266:Src/pwm_curr_fdbk.c ****         pHandle->midDuty = (uint16_t)wTimePhA;
 250              		.loc 1 266 9 is_stmt 1 view .LVU79
 251              		.loc 1 266 28 is_stmt 0 view .LVU80
 252 0094 A0F85AE0 		strh	lr, [r0, #90]	@ movhi
 267:Src/pwm_curr_fdbk.c ****         pHandle->highDuty = (uint16_t)wTimePhC;
 253              		.loc 1 267 9 is_stmt 1 view .LVU81
 254              		.loc 1 267 29 is_stmt 0 view .LVU82
 255 0098 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 256              	.LVL18:
 257              	.L14:
 268:Src/pwm_curr_fdbk.c ****         }
 269:Src/pwm_curr_fdbk.c ****       }
 270:Src/pwm_curr_fdbk.c ****       else /* wZ < 0 */
 271:Src/pwm_curr_fdbk.c ****         if ( wX <= 0 )
 272:Src/pwm_curr_fdbk.c ****         {
 273:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_6;
 274:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 275:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 276:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 277:Src/pwm_curr_fdbk.c **** 
 278:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 279:Src/pwm_curr_fdbk.c ****           {
 280:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 1U;
 281:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 282:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 283:Src/pwm_curr_fdbk.c ****           }
 284:Src/pwm_curr_fdbk.c ****           else
 285:Src/pwm_curr_fdbk.c ****           {
 286:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = (uint16_t)wTimePhA;
 287:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 288:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 289:Src/pwm_curr_fdbk.c ****         }
 290:Src/pwm_curr_fdbk.c ****         }
 291:Src/pwm_curr_fdbk.c ****         else /* wX > 0 */
 292:Src/pwm_curr_fdbk.c ****         {
ARM GAS  /tmp/cctuhtEr.s 			page 11


 293:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_1;
 294:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 295:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 296:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 297:Src/pwm_curr_fdbk.c **** 
 298:Src/pwm_curr_fdbk.c ****           if((pHandle->DPWM_Mode == true) || (pHandle->SingleShuntTopology == true))
 299:Src/pwm_curr_fdbk.c ****           {
 300:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 2U;
 301:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 302:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 303:Src/pwm_curr_fdbk.c ****           }
 304:Src/pwm_curr_fdbk.c ****           else
 305:Src/pwm_curr_fdbk.c ****           {
 306:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = (uint16_t)wTimePhA;
 307:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 308:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 309:Src/pwm_curr_fdbk.c ****         }
 310:Src/pwm_curr_fdbk.c ****         }
 311:Src/pwm_curr_fdbk.c ****     }
 312:Src/pwm_curr_fdbk.c **** 
 313:Src/pwm_curr_fdbk.c ****     pHandle->CntPhA = (uint16_t)(MAX(wTimePhA, 0));
 258              		.loc 1 313 5 is_stmt 1 view .LVU83
 314:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 315:Src/pwm_curr_fdbk.c ****     pHandle->CntPhC = (uint16_t)(MAX(wTimePhC, 0));
 316:Src/pwm_curr_fdbk.c **** 
 317:Src/pwm_curr_fdbk.c ****     returnValue = pHandle->pFctSetADCSampPointSectX(pHandle);
 259              		.loc 1 317 19 is_stmt 0 view .LVU84
 260 009c 4269     		ldr	r2, [r0, #20]
 313:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 261              		.loc 1 313 21 view .LVU85
 262 009e 2EEAEE7E 		bic	lr, lr, lr, asr #31
 263              	.LVL19:
 314:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 264              		.loc 1 314 21 view .LVU86
 265 00a2 21EAE171 		bic	r1, r1, r1, asr #31
 266              	.LVL20:
 315:Src/pwm_curr_fdbk.c **** 
 267              		.loc 1 315 21 view .LVU87
 268 00a6 23EAE373 		bic	r3, r3, r3, asr #31
 269              	.LVL21:
 313:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 270              		.loc 1 313 21 view .LVU88
 271 00aa A0F850E0 		strh	lr, [r0, #80]	@ movhi
 314:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 272              		.loc 1 314 5 is_stmt 1 view .LVU89
 314:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 273              		.loc 1 314 21 is_stmt 0 view .LVU90
 274 00ae A0F85210 		strh	r1, [r0, #82]	@ movhi
 315:Src/pwm_curr_fdbk.c **** 
 275              		.loc 1 315 5 is_stmt 1 view .LVU91
 315:Src/pwm_curr_fdbk.c **** 
 276              		.loc 1 315 21 is_stmt 0 view .LVU92
 277 00b2 A0F85430 		strh	r3, [r0, #84]	@ movhi
 278              		.loc 1 317 5 is_stmt 1 view .LVU93
 318:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 319:Src/pwm_curr_fdbk.c ****   }
 320:Src/pwm_curr_fdbk.c **** #endif
ARM GAS  /tmp/cctuhtEr.s 			page 12


 321:Src/pwm_curr_fdbk.c ****   return (returnValue);
 322:Src/pwm_curr_fdbk.c **** }
 279              		.loc 1 322 1 is_stmt 0 view .LVU94
 280 00b6 02B0     		add	sp, sp, #8
 281              	.LCFI2:
 282              		.cfi_remember_state
 283              		.cfi_def_cfa_offset 8
 284              		@ sp needed
 285 00b8 BDE81040 		pop	{r4, lr}
 286              	.LCFI3:
 287              		.cfi_restore 14
 288              		.cfi_restore 4
 289              		.cfi_def_cfa_offset 0
 317:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 290              		.loc 1 317 19 view .LVU95
 291 00bc 1047     		bx	r2
 292              	.LVL22:
 293              	.L23:
 294              	.LCFI4:
 295              		.cfi_restore_state
 271:Src/pwm_curr_fdbk.c ****         {
 296              		.loc 1 271 9 is_stmt 1 view .LVU96
 271:Src/pwm_curr_fdbk.c ****         {
 297              		.loc 1 271 12 is_stmt 0 view .LVU97
 298 00be 002A     		cmp	r2, #0
 299 00c0 40F38B80 		ble	.L41
 293:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 300              		.loc 1 293 11 is_stmt 1 view .LVU98
 294:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 301              		.loc 1 294 70 is_stmt 0 view .LVU99
 302 00c4 B2EB040E 		subs	lr, r2, r4
 303              	.LVL23:
 294:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 304              		.loc 1 294 70 view .LVU100
 305 00c8 44BF     		itt	mi
 306 00ca 0EF57F3E 		addmi	lr, lr, #261120
 307 00ce 0EF2FF3E 		addwmi	lr, lr, #1023
 295:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 308              		.loc 1 295 37 view .LVU101
 309 00d2 0029     		cmp	r1, #0
 310 00d4 BCBF     		itt	lt
 311 00d6 01F57F31 		addlt	r1, r1, #261120
 312 00da 01F2FF31 		addwlt	r1, r1, #1023
 294:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 313              		.loc 1 294 53 view .LVU102
 314 00de 4FEA9C0C 		lsr	ip, ip, #2
 296:Src/pwm_curr_fdbk.c **** 
 315              		.loc 1 296 37 view .LVU103
 316 00e2 002A     		cmp	r2, #0
 296:Src/pwm_curr_fdbk.c **** 
 317              		.loc 1 296 37 view .LVU104
 318 00e4 B8BF     		it	lt
 319 00e6 02F5FF32 		addlt	r2, r2, #130560
 320              	.LVL24:
 294:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 321              		.loc 1 294 20 view .LVU105
 322 00ea 0CEBAE4E 		add	lr, ip, lr, asr #18
ARM GAS  /tmp/cctuhtEr.s 			page 13


 298:Src/pwm_curr_fdbk.c ****           {
 323              		.loc 1 298 13 view .LVU106
 324 00ee 90F87D40 		ldrb	r4, [r0, #125]	@ zero_extendqisi2
 325              	.LVL25:
 293:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 326              		.loc 1 293 27 view .LVU107
 327 00f2 4FF00003 		mov	r3, #0
 328              	.LVL26:
 295:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 329              		.loc 1 295 20 view .LVU108
 330 00f6 0EEBA141 		add	r1, lr, r1, asr #18
 296:Src/pwm_curr_fdbk.c **** 
 331              		.loc 1 296 37 view .LVU109
 332 00fa B8BF     		it	lt
 333 00fc 02F2FF12 		addwlt	r2, r2, #511
 293:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 334              		.loc 1 293 27 view .LVU110
 335 0100 80F87A30 		strb	r3, [r0, #122]
 294:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 336              		.loc 1 294 11 is_stmt 1 view .LVU111
 337              	.LVL27:
 295:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 338              		.loc 1 295 11 view .LVU112
 296:Src/pwm_curr_fdbk.c **** 
 339              		.loc 1 296 11 view .LVU113
 296:Src/pwm_curr_fdbk.c **** 
 340              		.loc 1 296 20 is_stmt 0 view .LVU114
 341 0104 A1EB6243 		sub	r3, r1, r2, asr #17
 342              	.LVL28:
 298:Src/pwm_curr_fdbk.c ****           {
 343              		.loc 1 298 11 is_stmt 1 view .LVU115
 298:Src/pwm_curr_fdbk.c ****           {
 344              		.loc 1 298 13 is_stmt 0 view .LVU116
 345 0108 24B9     		cbnz	r4, .L36
 298:Src/pwm_curr_fdbk.c ****           {
 346              		.loc 1 298 43 discriminator 1 view .LVU117
 347 010a 90F88520 		ldrb	r2, [r0, #133]	@ zero_extendqisi2
 348 010e 002A     		cmp	r2, #0
 349 0110 00F0D380 		beq	.L37
 350              	.L36:
 300:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 351              		.loc 1 300 13 is_stmt 1 view .LVU118
 301:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 352              		.loc 1 301 13 view .LVU119
 300:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 353              		.loc 1 300 30 is_stmt 0 view .LVU120
 354 0114 6C4A     		ldr	r2, .L44
 355 0116 8265     		str	r2, [r0, #88]
 302:Src/pwm_curr_fdbk.c ****           }
 356              		.loc 1 302 13 is_stmt 1 view .LVU121
 302:Src/pwm_curr_fdbk.c ****           }
 357              		.loc 1 302 31 is_stmt 0 view .LVU122
 358 0118 0022     		movs	r2, #0
 359 011a A0F85C20 		strh	r2, [r0, #92]	@ movhi
 360 011e BDE7     		b	.L14
 361              	.LVL29:
 362              	.L39:
ARM GAS  /tmp/cctuhtEr.s 			page 14


 186:Src/pwm_curr_fdbk.c ****       {
 363              		.loc 1 186 7 is_stmt 1 view .LVU123
 186:Src/pwm_curr_fdbk.c ****       {
 364              		.loc 1 186 10 is_stmt 0 view .LVU124
 365 0120 B1F1FF3F 		cmp	r1, #-1
 366 0124 C0F28380 		blt	.L42
 207:Src/pwm_curr_fdbk.c ****         {
 367              		.loc 1 207 9 is_stmt 1 view .LVU125
 207:Src/pwm_curr_fdbk.c ****         {
 368              		.loc 1 207 12 is_stmt 0 view .LVU126
 369 0128 002A     		cmp	r2, #0
 370 012a 2ADD     		ble	.L43
 229:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 371              		.loc 1 229 11 is_stmt 1 view .LVU127
 230:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 372              		.loc 1 230 71 is_stmt 0 view .LVU128
 373 012c BEEB020E 		subs	lr, lr, r2
 374              	.LVL30:
 230:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 375              		.loc 1 230 71 view .LVU129
 376 0130 44BF     		itt	mi
 377 0132 0EF57F3E 		addmi	lr, lr, #261120
 378 0136 0EF2FF3E 		addwmi	lr, lr, #1023
 231:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 379              		.loc 1 231 37 view .LVU130
 380 013a 002B     		cmp	r3, #0
 231:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 381              		.loc 1 231 37 view .LVU131
 382 013c B8BF     		it	lt
 383 013e 03F57F33 		addlt	r3, r3, #261120
 384              	.LVL31:
 230:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 385              		.loc 1 230 54 view .LVU132
 386 0142 4FEA9C0C 		lsr	ip, ip, #2
 230:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 387              		.loc 1 230 20 view .LVU133
 388 0146 0CEBAE4E 		add	lr, ip, lr, asr #18
 231:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 389              		.loc 1 231 37 view .LVU134
 390 014a B8BF     		it	lt
 391 014c 03F2FF33 		addwlt	r3, r3, #1023
 234:Src/pwm_curr_fdbk.c ****           {
 392              		.loc 1 234 13 view .LVU135
 393 0150 90F88540 		ldrb	r4, [r0, #133]	@ zero_extendqisi2
 394              	.LVL32:
 229:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 395              		.loc 1 229 27 view .LVU136
 396 0154 0221     		movs	r1, #2
 397              	.LVL33:
 231:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 398              		.loc 1 231 20 view .LVU137
 399 0156 AEEBA343 		sub	r3, lr, r3, asr #18
 229:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 400              		.loc 1 229 27 view .LVU138
 401 015a 80F87A10 		strb	r1, [r0, #122]
 230:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 402              		.loc 1 230 11 is_stmt 1 view .LVU139
ARM GAS  /tmp/cctuhtEr.s 			page 15


 403              	.LVL34:
 231:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 404              		.loc 1 231 11 view .LVU140
 232:Src/pwm_curr_fdbk.c **** 
 405              		.loc 1 232 11 view .LVU141
 232:Src/pwm_curr_fdbk.c **** 
 406              		.loc 1 232 20 is_stmt 0 view .LVU142
 407 015e 03EB6241 		add	r1, r3, r2, asr #17
 408              	.LVL35:
 234:Src/pwm_curr_fdbk.c ****           {
 409              		.loc 1 234 11 is_stmt 1 view .LVU143
 234:Src/pwm_curr_fdbk.c ****           {
 410              		.loc 1 234 13 is_stmt 0 view .LVU144
 411 0162 002C     		cmp	r4, #0
 412 0164 00F09480 		beq	.L22
 236:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 413              		.loc 1 236 13 is_stmt 1 view .LVU145
 237:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 1U;
 414              		.loc 1 237 13 view .LVU146
 236:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 415              		.loc 1 236 30 is_stmt 0 view .LVU147
 416 0168 4FF40032 		mov	r2, #131072
 417              	.LVL36:
 236:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 418              		.loc 1 236 30 view .LVU148
 419 016c 8265     		str	r2, [r0, #88]
 238:Src/pwm_curr_fdbk.c ****           }
 420              		.loc 1 238 13 is_stmt 1 view .LVU149
 238:Src/pwm_curr_fdbk.c ****           }
 421              		.loc 1 238 31 is_stmt 0 view .LVU150
 422 016e 0122     		movs	r2, #1
 423 0170 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 424 0174 92E7     		b	.L14
 425              	.LVL37:
 426              	.L40:
 259:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 427              		.loc 1 259 11 is_stmt 1 view .LVU151
 260:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 1U;
 428              		.loc 1 260 11 view .LVU152
 259:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 429              		.loc 1 259 28 is_stmt 0 view .LVU153
 430 0176 0222     		movs	r2, #2
 431 0178 8265     		str	r2, [r0, #88]
 261:Src/pwm_curr_fdbk.c ****         }
 432              		.loc 1 261 11 is_stmt 1 view .LVU154
 261:Src/pwm_curr_fdbk.c ****         }
 433              		.loc 1 261 29 is_stmt 0 view .LVU155
 434 017a 0122     		movs	r2, #1
 435 017c A0F85C20 		strh	r2, [r0, #92]	@ movhi
 436 0180 8CE7     		b	.L14
 437              	.LVL38:
 438              	.L43:
 209:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 439              		.loc 1 209 11 is_stmt 1 view .LVU156
 210:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 440              		.loc 1 210 71 is_stmt 0 view .LVU157
 441 0182 B2EB040E 		subs	lr, r2, r4
ARM GAS  /tmp/cctuhtEr.s 			page 16


 442              	.LVL39:
 210:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 443              		.loc 1 210 71 view .LVU158
 444 0186 44BF     		itt	mi
 445 0188 0EF57F3E 		addmi	lr, lr, #261120
 446 018c 0EF2FF3E 		addwmi	lr, lr, #1023
 211:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 447              		.loc 1 211 37 view .LVU159
 448 0190 0029     		cmp	r1, #0
 449 0192 B8BF     		it	lt
 450 0194 01F57F31 		addlt	r1, r1, #261120
 209:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 451              		.loc 1 209 27 view .LVU160
 452 0198 4FF00303 		mov	r3, #3
 453              	.LVL40:
 211:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 454              		.loc 1 211 37 view .LVU161
 455 019c B8BF     		it	lt
 456 019e 01F2FF31 		addwlt	r1, r1, #1023
 209:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 457              		.loc 1 209 27 view .LVU162
 458 01a2 80F87A30 		strb	r3, [r0, #122]
 210:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 459              		.loc 1 210 11 is_stmt 1 view .LVU163
 210:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 460              		.loc 1 210 53 is_stmt 0 view .LVU164
 461 01a6 4FEA9C0C 		lsr	ip, ip, #2
 212:Src/pwm_curr_fdbk.c **** 
 462              		.loc 1 212 37 view .LVU165
 463 01aa 131E     		subs	r3, r2, #0
 464 01ac B8BF     		it	lt
 465 01ae 03F5FF33 		addlt	r3, r3, #130560
 210:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 466              		.loc 1 210 20 view .LVU166
 467 01b2 0CEBAE4E 		add	lr, ip, lr, asr #18
 468              	.LVL41:
 211:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 469              		.loc 1 211 11 is_stmt 1 view .LVU167
 214:Src/pwm_curr_fdbk.c ****           {
 470              		.loc 1 214 13 is_stmt 0 view .LVU168
 471 01b6 90F88520 		ldrb	r2, [r0, #133]	@ zero_extendqisi2
 472              	.LVL42:
 211:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 473              		.loc 1 211 20 view .LVU169
 474 01ba 0EEBA141 		add	r1, lr, r1, asr #18
 475              	.LVL43:
 212:Src/pwm_curr_fdbk.c **** 
 476              		.loc 1 212 11 is_stmt 1 view .LVU170
 212:Src/pwm_curr_fdbk.c **** 
 477              		.loc 1 212 37 is_stmt 0 view .LVU171
 478 01be B8BF     		it	lt
 479 01c0 03F2FF13 		addwlt	r3, r3, #511
 212:Src/pwm_curr_fdbk.c **** 
 480              		.loc 1 212 20 view .LVU172
 481 01c4 A1EB6343 		sub	r3, r1, r3, asr #17
 482              	.LVL44:
 214:Src/pwm_curr_fdbk.c ****           {
ARM GAS  /tmp/cctuhtEr.s 			page 17


 483              		.loc 1 214 11 is_stmt 1 view .LVU173
 214:Src/pwm_curr_fdbk.c ****           {
 484              		.loc 1 214 13 is_stmt 0 view .LVU174
 485 01c8 002A     		cmp	r2, #0
 486 01ca 6FD0     		beq	.L19
 216:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 487              		.loc 1 216 13 is_stmt 1 view .LVU175
 217:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 2U;
 488              		.loc 1 217 13 view .LVU176
 216:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 489              		.loc 1 216 30 is_stmt 0 view .LVU177
 490 01cc 4FF48032 		mov	r2, #65536
 491 01d0 8265     		str	r2, [r0, #88]
 218:Src/pwm_curr_fdbk.c ****           }
 492              		.loc 1 218 13 is_stmt 1 view .LVU178
 218:Src/pwm_curr_fdbk.c ****           }
 493              		.loc 1 218 31 is_stmt 0 view .LVU179
 494 01d2 0222     		movs	r2, #2
 495 01d4 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 496 01d8 60E7     		b	.L14
 497              	.LVL45:
 498              	.L41:
 273:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 499              		.loc 1 273 11 is_stmt 1 view .LVU180
 274:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 500              		.loc 1 274 72 is_stmt 0 view .LVU181
 501 01da BEEB020E 		subs	lr, lr, r2
 502              	.LVL46:
 274:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 503              		.loc 1 274 72 view .LVU182
 504 01de 44BF     		itt	mi
 505 01e0 0EF57F3E 		addmi	lr, lr, #261120
 506 01e4 0EF2FF3E 		addwmi	lr, lr, #1023
 275:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 507              		.loc 1 275 37 view .LVU183
 508 01e8 002B     		cmp	r3, #0
 275:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 509              		.loc 1 275 37 view .LVU184
 510 01ea BCBF     		itt	lt
 511 01ec 03F57F33 		addlt	r3, r3, #261120
 512              	.LVL47:
 275:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 513              		.loc 1 275 37 view .LVU185
 514 01f0 03F2FF33 		addwlt	r3, r3, #1023
 274:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 515              		.loc 1 274 54 view .LVU186
 516 01f4 4FEA9C0C 		lsr	ip, ip, #2
 276:Src/pwm_curr_fdbk.c **** 
 517              		.loc 1 276 37 view .LVU187
 518 01f8 002A     		cmp	r2, #0
 276:Src/pwm_curr_fdbk.c **** 
 519              		.loc 1 276 37 view .LVU188
 520 01fa B8BF     		it	lt
 521 01fc 02F5FF32 		addlt	r2, r2, #130560
 522              	.LVL48:
 274:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 523              		.loc 1 274 20 view .LVU189
ARM GAS  /tmp/cctuhtEr.s 			page 18


 524 0200 0CEBAE4E 		add	lr, ip, lr, asr #18
 278:Src/pwm_curr_fdbk.c ****           {
 525              		.loc 1 278 13 view .LVU190
 526 0204 90F88540 		ldrb	r4, [r0, #133]	@ zero_extendqisi2
 527              	.LVL49:
 273:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 528              		.loc 1 273 27 view .LVU191
 529 0208 4FF00501 		mov	r1, #5
 530              	.LVL50:
 275:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 531              		.loc 1 275 20 view .LVU192
 532 020c AEEBA343 		sub	r3, lr, r3, asr #18
 276:Src/pwm_curr_fdbk.c **** 
 533              		.loc 1 276 37 view .LVU193
 534 0210 B8BF     		it	lt
 535 0212 02F2FF12 		addwlt	r2, r2, #511
 273:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 536              		.loc 1 273 27 view .LVU194
 537 0216 80F87A10 		strb	r1, [r0, #122]
 274:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 538              		.loc 1 274 11 is_stmt 1 view .LVU195
 539              	.LVL51:
 275:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 540              		.loc 1 275 11 view .LVU196
 276:Src/pwm_curr_fdbk.c **** 
 541              		.loc 1 276 11 view .LVU197
 276:Src/pwm_curr_fdbk.c **** 
 542              		.loc 1 276 20 is_stmt 0 view .LVU198
 543 021a 03EB6241 		add	r1, r3, r2, asr #17
 544              	.LVL52:
 278:Src/pwm_curr_fdbk.c ****           {
 545              		.loc 1 278 11 is_stmt 1 view .LVU199
 278:Src/pwm_curr_fdbk.c ****           {
 546              		.loc 1 278 13 is_stmt 0 view .LVU200
 547 021e 002C     		cmp	r4, #0
 548 0220 3DD0     		beq	.L32
 280:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 549              		.loc 1 280 13 is_stmt 1 view .LVU201
 281:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 550              		.loc 1 281 13 view .LVU202
 280:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 551              		.loc 1 280 30 is_stmt 0 view .LVU203
 552 0222 2A4A     		ldr	r2, .L44+4
 553 0224 8265     		str	r2, [r0, #88]
 282:Src/pwm_curr_fdbk.c ****           }
 554              		.loc 1 282 13 is_stmt 1 view .LVU204
 282:Src/pwm_curr_fdbk.c ****           }
 555              		.loc 1 282 31 is_stmt 0 view .LVU205
 556 0226 0022     		movs	r2, #0
 557 0228 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 558 022c 36E7     		b	.L14
 559              	.LVL53:
 560              	.L42:
 188:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 561              		.loc 1 188 9 is_stmt 1 view .LVU206
 189:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 562              		.loc 1 189 69 is_stmt 0 view .LVU207
ARM GAS  /tmp/cctuhtEr.s 			page 19


 563 022e BEEB040E 		subs	lr, lr, r4
 564              	.LVL54:
 189:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 565              		.loc 1 189 69 view .LVU208
 566 0232 44BF     		itt	mi
 567 0234 0EF57F3E 		addmi	lr, lr, #261120
 568 0238 0EF2FF3E 		addwmi	lr, lr, #1023
 190:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 569              		.loc 1 190 35 view .LVU209
 570 023c 0029     		cmp	r1, #0
 571 023e B8BF     		it	lt
 572 0240 01F57F31 		addlt	r1, r1, #261120
 188:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 573              		.loc 1 188 25 view .LVU210
 574 0244 4FF00402 		mov	r2, #4
 575              	.LVL55:
 190:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 576              		.loc 1 190 35 view .LVU211
 577 0248 B8BF     		it	lt
 578 024a 01F2FF31 		addwlt	r1, r1, #1023
 191:Src/pwm_curr_fdbk.c **** 
 579              		.loc 1 191 35 view .LVU212
 580 024e 002B     		cmp	r3, #0
 191:Src/pwm_curr_fdbk.c **** 
 581              		.loc 1 191 35 view .LVU213
 582 0250 B8BF     		it	lt
 583 0252 03F57F33 		addlt	r3, r3, #261120
 584              	.LVL56:
 188:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 585              		.loc 1 188 25 view .LVU214
 586 0256 80F87A20 		strb	r2, [r0, #122]
 587              	.LVL57:
 189:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 588              		.loc 1 189 9 is_stmt 1 view .LVU215
 189:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 589              		.loc 1 189 51 is_stmt 0 view .LVU216
 590 025a 4FEA9C0C 		lsr	ip, ip, #2
 193:Src/pwm_curr_fdbk.c ****         {
 591              		.loc 1 193 11 view .LVU217
 592 025e 90F88520 		ldrb	r2, [r0, #133]	@ zero_extendqisi2
 189:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 593              		.loc 1 189 18 view .LVU218
 594 0262 0CEBAE4E 		add	lr, ip, lr, asr #18
 595              	.LVL58:
 190:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 596              		.loc 1 190 9 is_stmt 1 view .LVU219
 191:Src/pwm_curr_fdbk.c **** 
 597              		.loc 1 191 35 is_stmt 0 view .LVU220
 598 0266 B8BF     		it	lt
 599 0268 03F2FF33 		addwlt	r3, r3, #1023
 190:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 600              		.loc 1 190 18 view .LVU221
 601 026c 0EEBA141 		add	r1, lr, r1, asr #18
 602              	.LVL59:
 191:Src/pwm_curr_fdbk.c **** 
 603              		.loc 1 191 9 is_stmt 1 view .LVU222
 191:Src/pwm_curr_fdbk.c **** 
ARM GAS  /tmp/cctuhtEr.s 			page 20


 604              		.loc 1 191 18 is_stmt 0 view .LVU223
 605 0270 AEEBA343 		sub	r3, lr, r3, asr #18
 606              	.LVL60:
 193:Src/pwm_curr_fdbk.c ****         {
 607              		.loc 1 193 9 is_stmt 1 view .LVU224
 193:Src/pwm_curr_fdbk.c ****         {
 608              		.loc 1 193 11 is_stmt 0 view .LVU225
 609 0274 2AB1     		cbz	r2, .L13
 195:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 610              		.loc 1 195 11 is_stmt 1 view .LVU226
 196:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 2U;
 611              		.loc 1 196 11 view .LVU227
 195:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 612              		.loc 1 195 28 is_stmt 0 view .LVU228
 613 0276 0122     		movs	r2, #1
 614 0278 8265     		str	r2, [r0, #88]
 197:Src/pwm_curr_fdbk.c ****         }
 615              		.loc 1 197 11 is_stmt 1 view .LVU229
 197:Src/pwm_curr_fdbk.c ****         }
 616              		.loc 1 197 29 is_stmt 0 view .LVU230
 617 027a 0222     		movs	r2, #2
 618 027c A0F85C20 		strh	r2, [r0, #92]	@ movhi
 619 0280 0CE7     		b	.L14
 620              	.L13:
 201:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 621              		.loc 1 201 11 is_stmt 1 view .LVU231
 201:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 622              		.loc 1 201 30 is_stmt 0 view .LVU232
 623 0282 A0F85830 		strh	r3, [r0, #88]	@ movhi
 202:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 624              		.loc 1 202 11 is_stmt 1 view .LVU233
 202:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 625              		.loc 1 202 30 is_stmt 0 view .LVU234
 626 0286 A0F85AE0 		strh	lr, [r0, #90]	@ movhi
 203:Src/pwm_curr_fdbk.c ****         }
 627              		.loc 1 203 11 is_stmt 1 view .LVU235
 203:Src/pwm_curr_fdbk.c ****         }
 628              		.loc 1 203 31 is_stmt 0 view .LVU236
 629 028a A0F85C10 		strh	r1, [r0, #92]	@ movhi
 630 028e 05E7     		b	.L14
 631              	.LVL61:
 632              	.L22:
 242:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 633              		.loc 1 242 11 is_stmt 1 view .LVU237
 242:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 634              		.loc 1 242 30 is_stmt 0 view .LVU238
 635 0290 A0F85810 		strh	r1, [r0, #88]	@ movhi
 243:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 636              		.loc 1 243 11 is_stmt 1 view .LVU239
 243:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 637              		.loc 1 243 30 is_stmt 0 view .LVU240
 638 0294 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 244:Src/pwm_curr_fdbk.c ****         }
 639              		.loc 1 244 11 is_stmt 1 view .LVU241
 244:Src/pwm_curr_fdbk.c ****         }
 640              		.loc 1 244 31 is_stmt 0 view .LVU242
 641 0298 A0F85CE0 		strh	lr, [r0, #92]	@ movhi
ARM GAS  /tmp/cctuhtEr.s 			page 21


 642 029c FEE6     		b	.L14
 643              	.LVL62:
 644              	.L32:
 286:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 645              		.loc 1 286 13 is_stmt 1 view .LVU243
 286:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 646              		.loc 1 286 32 is_stmt 0 view .LVU244
 647 029e A0F858E0 		strh	lr, [r0, #88]	@ movhi
 287:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 648              		.loc 1 287 13 is_stmt 1 view .LVU245
 287:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 649              		.loc 1 287 32 is_stmt 0 view .LVU246
 650 02a2 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 288:Src/pwm_curr_fdbk.c ****         }
 651              		.loc 1 288 13 is_stmt 1 view .LVU247
 288:Src/pwm_curr_fdbk.c ****         }
 652              		.loc 1 288 33 is_stmt 0 view .LVU248
 653 02a6 A0F85C10 		strh	r1, [r0, #92]	@ movhi
 654 02aa F7E6     		b	.L14
 655              	.LVL63:
 656              	.L19:
 222:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
 657              		.loc 1 222 11 is_stmt 1 view .LVU249
 222:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
 658              		.loc 1 222 30 is_stmt 0 view .LVU250
 659 02ac A0F85830 		strh	r3, [r0, #88]	@ movhi
 223:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 660              		.loc 1 223 11 is_stmt 1 view .LVU251
 223:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 661              		.loc 1 223 30 is_stmt 0 view .LVU252
 662 02b0 A0F85A10 		strh	r1, [r0, #90]	@ movhi
 224:Src/pwm_curr_fdbk.c ****         }
 663              		.loc 1 224 11 is_stmt 1 view .LVU253
 224:Src/pwm_curr_fdbk.c ****         }
 664              		.loc 1 224 31 is_stmt 0 view .LVU254
 665 02b4 A0F85CE0 		strh	lr, [r0, #92]	@ movhi
 666 02b8 F0E6     		b	.L14
 667              	.LVL64:
 668              	.L37:
 306:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 669              		.loc 1 306 13 is_stmt 1 view .LVU255
 306:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 670              		.loc 1 306 32 is_stmt 0 view .LVU256
 671 02ba A0F858E0 		strh	lr, [r0, #88]	@ movhi
 307:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 672              		.loc 1 307 13 is_stmt 1 view .LVU257
 307:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 673              		.loc 1 307 32 is_stmt 0 view .LVU258
 674 02be A0F85A10 		strh	r1, [r0, #90]	@ movhi
 308:Src/pwm_curr_fdbk.c ****         }
 675              		.loc 1 308 13 is_stmt 1 view .LVU259
 308:Src/pwm_curr_fdbk.c ****         }
 676              		.loc 1 308 33 is_stmt 0 view .LVU260
 677 02c2 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 678 02c6 E9E6     		b	.L14
 679              	.L45:
 680              		.align	2
ARM GAS  /tmp/cctuhtEr.s 			page 22


 681              	.L44:
 682 02c8 02000100 		.word	65538
 683 02cc 01000200 		.word	131073
 684              		.cfi_endproc
 685              	.LFE1443:
 687              		.section	.text.PWMC_SwitchOffPWM,"ax",%progbits
 688              		.align	1
 689              		.p2align 2,,3
 690              		.weak	PWMC_SwitchOffPWM
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	PWMC_SwitchOffPWM:
 697              	.LVL65:
 698              	.LFB1444:
 323:Src/pwm_curr_fdbk.c **** 
 324:Src/pwm_curr_fdbk.c **** /**
 325:Src/pwm_curr_fdbk.c ****   * @brief  Switches PWM generation off, inactivating the outputs.
 326:Src/pwm_curr_fdbk.c ****   *
 327:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 328:Src/pwm_curr_fdbk.c ****   */
 329:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 330:Src/pwm_curr_fdbk.c **** __weak void PWMC_SwitchOffPWM(PWMC_Handle_t *pHandle)
 331:Src/pwm_curr_fdbk.c **** {
 699              		.loc 1 331 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 332:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 333:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 334:Src/pwm_curr_fdbk.c ****   {
 335:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 336:Src/pwm_curr_fdbk.c ****   }
 337:Src/pwm_curr_fdbk.c ****   else
 338:Src/pwm_curr_fdbk.c ****   {
 339:Src/pwm_curr_fdbk.c **** #endif
 340:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOffPwm(pHandle);
 704              		.loc 1 340 5 view .LVU262
 705 0000 4368     		ldr	r3, [r0, #4]
 706 0002 1847     		bx	r3	@ indirect register sibling call
 707              	.LVL66:
 708              		.loc 1 340 5 is_stmt 0 view .LVU263
 709              		.cfi_endproc
 710              	.LFE1444:
 712              		.section	.text.PWMC_SwitchOnPWM,"ax",%progbits
 713              		.align	1
 714              		.p2align 2,,3
 715              		.weak	PWMC_SwitchOnPWM
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	PWMC_SwitchOnPWM:
 722              	.LVL67:
 723              	.LFB1445:
ARM GAS  /tmp/cctuhtEr.s 			page 23


 341:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 342:Src/pwm_curr_fdbk.c ****   }
 343:Src/pwm_curr_fdbk.c **** #endif
 344:Src/pwm_curr_fdbk.c **** }
 345:Src/pwm_curr_fdbk.c **** 
 346:Src/pwm_curr_fdbk.c **** /**
 347:Src/pwm_curr_fdbk.c ****   * @brief  Enables PWM generation on the proper Timer peripheral.
 348:Src/pwm_curr_fdbk.c ****   *
 349:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 350:Src/pwm_curr_fdbk.c ****   */
 351:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 352:Src/pwm_curr_fdbk.c **** __weak void PWMC_SwitchOnPWM(PWMC_Handle_t *pHandle)
 353:Src/pwm_curr_fdbk.c **** {
 724              		.loc 1 353 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 354:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 355:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 356:Src/pwm_curr_fdbk.c ****   {
 357:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 358:Src/pwm_curr_fdbk.c ****   }
 359:Src/pwm_curr_fdbk.c ****   else
 360:Src/pwm_curr_fdbk.c ****   {
 361:Src/pwm_curr_fdbk.c **** #endif
 362:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOnPwm(pHandle);
 729              		.loc 1 362 5 view .LVU265
 730 0000 8368     		ldr	r3, [r0, #8]
 731 0002 1847     		bx	r3	@ indirect register sibling call
 732              	.LVL68:
 733              		.loc 1 362 5 is_stmt 0 view .LVU266
 734              		.cfi_endproc
 735              	.LFE1445:
 737              		.section	.text.PWMC_CurrentReadingCalibr,"ax",%progbits
 738              		.align	1
 739              		.p2align 2,,3
 740              		.weak	PWMC_CurrentReadingCalibr
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	PWMC_CurrentReadingCalibr:
 747              	.LVL69:
 748              	.LFB1446:
 363:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 364:Src/pwm_curr_fdbk.c ****   }
 365:Src/pwm_curr_fdbk.c **** #endif
 366:Src/pwm_curr_fdbk.c **** }
 367:Src/pwm_curr_fdbk.c **** 
 368:Src/pwm_curr_fdbk.c **** /**
 369:Src/pwm_curr_fdbk.c ****   * @brief  Calibrates ADC current conversions by reading the offset voltage
 370:Src/pwm_curr_fdbk.c ****   *         present on ADC pins when no motor current is flowing in.
 371:Src/pwm_curr_fdbk.c ****   *
 372:Src/pwm_curr_fdbk.c ****   * This function should be called before each motor start-up.
 373:Src/pwm_curr_fdbk.c ****   *
 374:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
ARM GAS  /tmp/cctuhtEr.s 			page 24


 375:Src/pwm_curr_fdbk.c ****   * @param  action: Can be #CRC_START to initialize the offset calibration or
 376:Src/pwm_curr_fdbk.c ****   *         #CRC_EXEC to execute the offset calibration.
 377:Src/pwm_curr_fdbk.c ****   * @retval true if the current calibration has been completed, **false** if it is
 378:Src/pwm_curr_fdbk.c ****   *         still ongoing.
 379:Src/pwm_curr_fdbk.c ****   */
 380:Src/pwm_curr_fdbk.c **** __weak bool PWMC_CurrentReadingCalibr(PWMC_Handle_t *pHandle, CRCAction_t action)
 381:Src/pwm_curr_fdbk.c **** {
 749              		.loc 1 381 1 is_stmt 1 view -0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 382:Src/pwm_curr_fdbk.c ****   bool retVal = false;
 753              		.loc 1 382 3 view .LVU268
 383:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 384:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 385:Src/pwm_curr_fdbk.c ****   {
 386:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 387:Src/pwm_curr_fdbk.c ****   }
 388:Src/pwm_curr_fdbk.c ****   else
 389:Src/pwm_curr_fdbk.c ****   {
 390:Src/pwm_curr_fdbk.c **** #endif
 391:Src/pwm_curr_fdbk.c ****     if (CRC_START == action)
 754              		.loc 1 391 5 view .LVU269
 381:Src/pwm_curr_fdbk.c ****   bool retVal = false;
 755              		.loc 1 381 1 is_stmt 0 view .LVU270
 756 0000 10B5     		push	{r4, lr}
 757              	.LCFI5:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 4, -8
 760              		.cfi_offset 14, -4
 761 0002 0446     		mov	r4, r0
 762 0004 82B0     		sub	sp, sp, #8
 763              	.LCFI6:
 764              		.cfi_def_cfa_offset 16
 765              		.loc 1 391 8 view .LVU271
 766 0006 99B1     		cbz	r1, .L55
 392:Src/pwm_curr_fdbk.c ****     {
 393:Src/pwm_curr_fdbk.c ****       PWMC_SwitchOffPWM(pHandle);
 394:Src/pwm_curr_fdbk.c ****       pHandle->pFctCurrReadingCalib(pHandle);
 395:Src/pwm_curr_fdbk.c ****       retVal = true;
 396:Src/pwm_curr_fdbk.c ****     }
 397:Src/pwm_curr_fdbk.c ****     else if (CRC_EXEC == action)
 767              		.loc 1 397 10 is_stmt 1 view .LVU272
 768              		.loc 1 397 13 is_stmt 0 view .LVU273
 769 0008 0129     		cmp	r1, #1
 770 000a 02D0     		beq	.L51
 771              	.L52:
 382:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 772              		.loc 1 382 8 view .LVU274
 773 000c 0020     		movs	r0, #0
 774              	.LVL70:
 775              	.L50:
 398:Src/pwm_curr_fdbk.c ****     {
 399:Src/pwm_curr_fdbk.c ****       if (pHandle->OffCalibrWaitTimeCounter > 0u)
 400:Src/pwm_curr_fdbk.c ****       {
 401:Src/pwm_curr_fdbk.c ****         pHandle->OffCalibrWaitTimeCounter--;
 402:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
ARM GAS  /tmp/cctuhtEr.s 			page 25


 403:Src/pwm_curr_fdbk.c ****         {
 404:Src/pwm_curr_fdbk.c ****           pHandle->pFctCurrReadingCalib(pHandle);
 405:Src/pwm_curr_fdbk.c ****           retVal = true;
 406:Src/pwm_curr_fdbk.c ****         }
 407:Src/pwm_curr_fdbk.c ****       }
 408:Src/pwm_curr_fdbk.c ****       else
 409:Src/pwm_curr_fdbk.c ****       {
 410:Src/pwm_curr_fdbk.c ****         retVal = true;
 411:Src/pwm_curr_fdbk.c ****       }
 412:Src/pwm_curr_fdbk.c ****     }
 413:Src/pwm_curr_fdbk.c ****     else
 414:Src/pwm_curr_fdbk.c ****     {
 415:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 416:Src/pwm_curr_fdbk.c ****     }
 776              		.loc 1 416 5 is_stmt 1 view .LVU275
 417:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 418:Src/pwm_curr_fdbk.c ****   }
 419:Src/pwm_curr_fdbk.c **** #endif
 420:Src/pwm_curr_fdbk.c ****   return (retVal);
 777              		.loc 1 420 3 view .LVU276
 421:Src/pwm_curr_fdbk.c **** }
 778              		.loc 1 421 1 is_stmt 0 view .LVU277
 779 000e 02B0     		add	sp, sp, #8
 780              	.LCFI7:
 781              		.cfi_remember_state
 782              		.cfi_def_cfa_offset 8
 783              		@ sp needed
 784 0010 10BD     		pop	{r4, pc}
 785              	.LVL71:
 786              	.L51:
 787              	.LCFI8:
 788              		.cfi_restore_state
 399:Src/pwm_curr_fdbk.c ****       {
 789              		.loc 1 399 7 is_stmt 1 view .LVU278
 399:Src/pwm_curr_fdbk.c ****       {
 790              		.loc 1 399 18 is_stmt 0 view .LVU279
 791 0012 B0F86030 		ldrh	r3, [r0, #96]
 399:Src/pwm_curr_fdbk.c ****       {
 792              		.loc 1 399 10 view .LVU280
 793 0016 9BB1     		cbz	r3, .L53
 401:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
 794              		.loc 1 401 9 is_stmt 1 view .LVU281
 401:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
 795              		.loc 1 401 42 is_stmt 0 view .LVU282
 796 0018 013B     		subs	r3, r3, #1
 797 001a 9BB2     		uxth	r3, r3
 798 001c 0191     		str	r1, [sp, #4]
 799 001e A0F86030 		strh	r3, [r0, #96]	@ movhi
 402:Src/pwm_curr_fdbk.c ****         {
 800              		.loc 1 402 9 is_stmt 1 view .LVU283
 402:Src/pwm_curr_fdbk.c ****         {
 801              		.loc 1 402 12 is_stmt 0 view .LVU284
 802 0022 002B     		cmp	r3, #0
 803 0024 F2D1     		bne	.L52
 404:Src/pwm_curr_fdbk.c ****           retVal = true;
 804              		.loc 1 404 11 is_stmt 1 view .LVU285
 805 0026 C368     		ldr	r3, [r0, #12]
ARM GAS  /tmp/cctuhtEr.s 			page 26


 806 0028 9847     		blx	r3
 807              	.LVL72:
 405:Src/pwm_curr_fdbk.c ****         }
 808              		.loc 1 405 11 view .LVU286
 405:Src/pwm_curr_fdbk.c ****         }
 809              		.loc 1 405 18 is_stmt 0 view .LVU287
 810 002a 0199     		ldr	r1, [sp, #4]
 811 002c 0846     		mov	r0, r1
 812 002e EEE7     		b	.L50
 813              	.LVL73:
 814              	.L55:
 393:Src/pwm_curr_fdbk.c ****       pHandle->pFctCurrReadingCalib(pHandle);
 815              		.loc 1 393 7 is_stmt 1 view .LVU288
 816 0030 FFF7FEFF 		bl	PWMC_SwitchOffPWM
 817              	.LVL74:
 394:Src/pwm_curr_fdbk.c ****       retVal = true;
 818              		.loc 1 394 7 view .LVU289
 819 0034 2046     		mov	r0, r4
 820 0036 E368     		ldr	r3, [r4, #12]
 821 0038 9847     		blx	r3
 822              	.LVL75:
 395:Src/pwm_curr_fdbk.c ****     }
 823              		.loc 1 395 7 view .LVU290
 395:Src/pwm_curr_fdbk.c ****     }
 824              		.loc 1 395 14 is_stmt 0 view .LVU291
 825 003a 0120     		movs	r0, #1
 826              	.LVL76:
 416:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 827              		.loc 1 416 5 is_stmt 1 view .LVU292
 420:Src/pwm_curr_fdbk.c **** }
 828              		.loc 1 420 3 view .LVU293
 829              		.loc 1 421 1 is_stmt 0 view .LVU294
 830 003c 02B0     		add	sp, sp, #8
 831              	.LCFI9:
 832              		.cfi_remember_state
 833              		.cfi_def_cfa_offset 8
 834              		@ sp needed
 835 003e 10BD     		pop	{r4, pc}
 836              	.LVL77:
 837              	.L53:
 838              	.LCFI10:
 839              		.cfi_restore_state
 410:Src/pwm_curr_fdbk.c ****       }
 840              		.loc 1 410 16 view .LVU295
 841 0040 0846     		mov	r0, r1
 842              	.LVL78:
 416:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 843              		.loc 1 416 5 is_stmt 1 view .LVU296
 420:Src/pwm_curr_fdbk.c **** }
 844              		.loc 1 420 3 view .LVU297
 845              		.loc 1 421 1 is_stmt 0 view .LVU298
 846 0042 02B0     		add	sp, sp, #8
 847              	.LCFI11:
 848              		.cfi_def_cfa_offset 8
 849              		@ sp needed
 850 0044 10BD     		pop	{r4, pc}
 851              		.loc 1 421 1 view .LVU299
ARM GAS  /tmp/cctuhtEr.s 			page 27


 852              		.cfi_endproc
 853              	.LFE1446:
 855 0046 00BF     		.section	.text.PWMC_CalcPhaseCurrentsEst,"ax",%progbits
 856              		.align	1
 857              		.p2align 2,,3
 858              		.global	PWMC_CalcPhaseCurrentsEst
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 862              		.fpu fpv4-sp-d16
 864              	PWMC_CalcPhaseCurrentsEst:
 865              	.LVL79:
 866              	.LFB1448:
 422:Src/pwm_curr_fdbk.c **** 
 423:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 424:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 425:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 426:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 427:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 428:Src/pwm_curr_fdbk.c **** #endif
 429:Src/pwm_curr_fdbk.c **** #endif
 430:Src/pwm_curr_fdbk.c **** /**
 431:Src/pwm_curr_fdbk.c ****   * @brief  Sets a low pass filter.
 432:Src/pwm_curr_fdbk.c ****   *
 433:Src/pwm_curr_fdbk.c ****   * This function is called for setting low pass filter on Iq and Id, before getting
 434:Src/pwm_curr_fdbk.c ****   * transformed in Ia and Ib by the Reverse Park function.
 435:Src/pwm_curr_fdbk.c ****   *
 436:Src/pwm_curr_fdbk.c ****   * @param in: Value needing to be passed through the filter (Iq and Id).
 437:Src/pwm_curr_fdbk.c ****   * @param out_buf: LPF buffer.
 438:Src/pwm_curr_fdbk.c ****   * @param t: Low pass filter constant.
 439:Src/pwm_curr_fdbk.c ****   * @retval New value after the low pass filter.
 440:Src/pwm_curr_fdbk.c ****   */
 441:Src/pwm_curr_fdbk.c **** static inline int32_t PWMC_LowPassFilter(int32_t in, int32_t *out_buf, int32_t t)
 442:Src/pwm_curr_fdbk.c **** {
 443:Src/pwm_curr_fdbk.c ****   int32_t x;
 444:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 445:Src/pwm_curr_fdbk.c ****   if (MC_NULL == out_buf)
 446:Src/pwm_curr_fdbk.c ****   {
 447:Src/pwm_curr_fdbk.c ****     x = 0;
 448:Src/pwm_curr_fdbk.c ****   }
 449:Src/pwm_curr_fdbk.c ****   else
 450:Src/pwm_curr_fdbk.c ****   {
 451:Src/pwm_curr_fdbk.c **** #endif
 452:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 453:Src/pwm_curr_fdbk.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 454:Src/pwm_curr_fdbk.c ****     *out_buf = (*out_buf) + ((in - ((*out_buf) >> 15)) * t);
 455:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 456:Src/pwm_curr_fdbk.c **** #else
 457:Src/pwm_curr_fdbk.c ****     *out_buf = (*out_buf) + ((in - ((*out_buf) / 32768)) * t);
 458:Src/pwm_curr_fdbk.c ****     x = (*out_buf) / 32768;
 459:Src/pwm_curr_fdbk.c **** 
 460:Src/pwm_curr_fdbk.c **** #endif
 461:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 462:Src/pwm_curr_fdbk.c ****   }
 463:Src/pwm_curr_fdbk.c **** #endif
 464:Src/pwm_curr_fdbk.c ****   return (x);
 465:Src/pwm_curr_fdbk.c **** }
ARM GAS  /tmp/cctuhtEr.s 			page 28


 466:Src/pwm_curr_fdbk.c **** 
 467:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 468:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 469:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 470:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 471:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 472:Src/pwm_curr_fdbk.c **** #endif
 473:Src/pwm_curr_fdbk.c **** #endif
 474:Src/pwm_curr_fdbk.c **** /**
 475:Src/pwm_curr_fdbk.c ****   * @brief  Converts input currents components Iqd into estimated
 476:Src/pwm_curr_fdbk.c ****   *         currents Ia, Ib and Ic.
 477:Src/pwm_curr_fdbk.c ****   *
 478:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 479:Src/pwm_curr_fdbk.c ****   * @param  Iqd: Structure that will receive Iq and Id currents.
 480:Src/pwm_curr_fdbk.c ****   * @param  hElAngledpp: Electrical angle.
 481:Src/pwm_curr_fdbk.c ****   */
 482:Src/pwm_curr_fdbk.c **** void PWMC_CalcPhaseCurrentsEst(PWMC_Handle_t *pHandle, qd_t Iqd, int16_t hElAngledpp)
 483:Src/pwm_curr_fdbk.c **** {
 867              		.loc 1 483 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 16
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 484:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 485:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 486:Src/pwm_curr_fdbk.c ****   {
 487:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 488:Src/pwm_curr_fdbk.c ****   }
 489:Src/pwm_curr_fdbk.c ****   else
 490:Src/pwm_curr_fdbk.c ****   {
 491:Src/pwm_curr_fdbk.c **** #endif
 492:Src/pwm_curr_fdbk.c ****     qd_t idq_ave;
 871              		.loc 1 492 5 view .LVU301
 493:Src/pwm_curr_fdbk.c ****     alphabeta_t ialpha_beta;
 872              		.loc 1 493 5 view .LVU302
 494:Src/pwm_curr_fdbk.c ****     int32_t temp1, temp2;
 873              		.loc 1 494 5 view .LVU303
 495:Src/pwm_curr_fdbk.c **** 
 496:Src/pwm_curr_fdbk.c ****     idq_ave.q = (int16_t)PWMC_LowPassFilter(Iqd.q, &(pHandle->LPFIqBuf), pHandle->LPFIqd_const);
 874              		.loc 1 496 5 view .LVU304
 483:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 875              		.loc 1 483 1 is_stmt 0 view .LVU305
 876 0000 10B5     		push	{r4, lr}
 877              	.LCFI12:
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 4, -8
 880              		.cfi_offset 14, -4
 881 0002 84B0     		sub	sp, sp, #16
 882              	.LCFI13:
 883              		.cfi_def_cfa_offset 24
 483:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 884              		.loc 1 483 1 view .LVU306
 885 0004 0446     		mov	r4, r0
 886 0006 0191     		str	r1, [sp, #4]
 887 0008 8E46     		mov	lr, r1
 888              		.loc 1 496 26 view .LVU307
 889 000a 08B2     		sxth	r0, r1
 890              	.LVL80:
ARM GAS  /tmp/cctuhtEr.s 			page 29


 497:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 498:Src/pwm_curr_fdbk.c **** 
 499:Src/pwm_curr_fdbk.c ****     ialpha_beta = MCM_Rev_Park(idq_ave, hElAngledpp);
 891              		.loc 1 499 19 view .LVU308
 892 000c 1146     		mov	r1, r2
 893              	.LBB18:
 894              	.LBB19:
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 895              		.loc 1 454 17 view .LVU309
 896 000e D4E90D32 		ldrd	r3, r2, [r4, #52]
 897              	.LVL81:
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 898              		.loc 1 454 17 view .LVU310
 899              	.LBE19:
 900              	.LBE18:
 496:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 901              		.loc 1 496 26 view .LVU311
 902 0012 B4F96EC0 		ldrsh	ip, [r4, #110]
 903              	.LVL82:
 904              	.LBB21:
 905              	.LBI18:
 441:Src/pwm_curr_fdbk.c **** {
 906              		.loc 1 441 23 is_stmt 1 view .LVU312
 907              	.LBB20:
 443:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 908              		.loc 1 443 3 view .LVU313
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 909              		.loc 1 454 5 view .LVU314
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 910              		.loc 1 454 34 is_stmt 0 view .LVU315
 911 0016 A0EBE330 		sub	r0, r0, r3, asr #15
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 912              		.loc 1 454 27 view .LVU316
 913 001a 0CFB0033 		mla	r3, ip, r0, r3
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 914              		.loc 1 454 14 view .LVU317
 915 001e 6363     		str	r3, [r4, #52]
 455:Src/pwm_curr_fdbk.c **** #else
 916              		.loc 1 455 5 is_stmt 1 view .LVU318
 917              	.LVL83:
 464:Src/pwm_curr_fdbk.c **** }
 918              		.loc 1 464 3 view .LVU319
 455:Src/pwm_curr_fdbk.c **** #else
 919              		.loc 1 455 7 is_stmt 0 view .LVU320
 920 0020 DB13     		asrs	r3, r3, #15
 921              	.LBE20:
 922              	.LBE21:
 496:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 923              		.loc 1 496 17 view .LVU321
 924 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 497:Src/pwm_curr_fdbk.c **** 
 925              		.loc 1 497 5 is_stmt 1 view .LVU322
 926              	.LVL84:
 927              	.LBB22:
 928              	.LBI22:
 441:Src/pwm_curr_fdbk.c **** {
 929              		.loc 1 441 23 view .LVU323
ARM GAS  /tmp/cctuhtEr.s 			page 30


 930              	.LBB23:
 443:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 931              		.loc 1 443 3 view .LVU324
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 932              		.loc 1 454 5 view .LVU325
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 933              		.loc 1 454 48 is_stmt 0 view .LVU326
 934 0026 D313     		asrs	r3, r2, #15
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 935              		.loc 1 454 34 view .LVU327
 936 0028 C3EB2E43 		rsb	r3, r3, lr, asr #16
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 937              		.loc 1 454 27 view .LVU328
 938 002c 0CFB0323 		mla	r3, ip, r3, r2
 455:Src/pwm_curr_fdbk.c **** #else
 939              		.loc 1 455 7 view .LVU329
 940 0030 DA13     		asrs	r2, r3, #15
 941              	.LBE23:
 942              	.LBE22:
 497:Src/pwm_curr_fdbk.c **** 
 943              		.loc 1 497 17 view .LVU330
 944 0032 ADF80A20 		strh	r2, [sp, #10]	@ movhi
 945              	.LBB26:
 946              	.LBB24:
 454:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 947              		.loc 1 454 14 view .LVU331
 948 0036 A363     		str	r3, [r4, #56]
 949              	.LBE24:
 950              	.LBE26:
 951              		.loc 1 499 19 view .LVU332
 952 0038 0298     		ldr	r0, [sp, #8]
 953              	.LBB27:
 954              	.LBB25:
 455:Src/pwm_curr_fdbk.c **** #else
 955              		.loc 1 455 5 is_stmt 1 view .LVU333
 956              	.LVL85:
 464:Src/pwm_curr_fdbk.c **** }
 957              		.loc 1 464 3 view .LVU334
 464:Src/pwm_curr_fdbk.c **** }
 958              		.loc 1 464 3 is_stmt 0 view .LVU335
 959              	.LBE25:
 960              	.LBE27:
 961              		.loc 1 499 5 is_stmt 1 view .LVU336
 962              		.loc 1 499 19 is_stmt 0 view .LVU337
 963 003a FFF7FEFF 		bl	MCM_Rev_Park
 964              	.LVL86:
 965 003e 0FFA80FC 		sxth	ip, r0
 966              	.LVL87:
 500:Src/pwm_curr_fdbk.c **** 
 501:Src/pwm_curr_fdbk.c ****     /* Reverse Clarke */
 502:Src/pwm_curr_fdbk.c **** 
 503:Src/pwm_curr_fdbk.c ****     /*Ia*/
 504:Src/pwm_curr_fdbk.c ****     pHandle->IaEst = ialpha_beta.alpha;
 967              		.loc 1 504 5 is_stmt 1 view .LVU338
 505:Src/pwm_curr_fdbk.c **** 
 506:Src/pwm_curr_fdbk.c ****     temp1 = - ialpha_beta.alpha;
 968              		.loc 1 506 11 is_stmt 0 view .LVU339
ARM GAS  /tmp/cctuhtEr.s 			page 31


 969 0042 CCF10002 		rsb	r2, ip, #0
 507:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 508:Src/pwm_curr_fdbk.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 509:Src/pwm_curr_fdbk.c ****     temp2 = (int32_t)(ialpha_beta.beta) * ((int32_t)SQRT3FACTOR >> 15);
 510:Src/pwm_curr_fdbk.c **** #else
 511:Src/pwm_curr_fdbk.c ****     temp2 = (int32_t)(ialpha_beta.beta) * (int32_t)SQRT3FACTOR / 32768;
 512:Src/pwm_curr_fdbk.c **** #endif
 513:Src/pwm_curr_fdbk.c **** 
 514:Src/pwm_curr_fdbk.c ****     /* Ib */
 515:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = (int16_t)(temp1 - temp2)/2;
 970              		.loc 1 515 38 view .LVU340
 971 0046 92B2     		uxth	r2, r2
 516:Src/pwm_curr_fdbk.c **** 
 517:Src/pwm_curr_fdbk.c ****     /* Ic */
 518:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = (int16_t)(temp1 + temp2)/2;
 972              		.loc 1 518 38 view .LVU341
 973 0048 02EB1043 		add	r3, r2, r0, lsr #16
 515:Src/pwm_curr_fdbk.c **** 
 974              		.loc 1 515 38 view .LVU342
 975 004c A2EB1041 		sub	r1, r2, r0, lsr #16
 976              		.loc 1 518 20 view .LVU343
 977 0050 C3F3C030 		ubfx	r0, r3, #15, #1
 978 0054 00FA83F3 		sxtah	r3, r0, r3
 979 0058 5B10     		asrs	r3, r3, #1
 980 005a A4F86C30 		strh	r3, [r4, #108]	@ movhi
 515:Src/pwm_curr_fdbk.c **** 
 981              		.loc 1 515 20 view .LVU344
 982 005e C1F3C033 		ubfx	r3, r1, #15, #1
 983 0062 03FA81F1 		sxtah	r1, r3, r1
 984 0066 4910     		asrs	r1, r1, #1
 504:Src/pwm_curr_fdbk.c **** 
 985              		.loc 1 504 20 view .LVU345
 986 0068 A4F868C0 		strh	ip, [r4, #104]	@ movhi
 506:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 987              		.loc 1 506 5 is_stmt 1 view .LVU346
 988              	.LVL88:
 509:Src/pwm_curr_fdbk.c **** #else
 989              		.loc 1 509 5 view .LVU347
 515:Src/pwm_curr_fdbk.c **** 
 990              		.loc 1 515 5 view .LVU348
 515:Src/pwm_curr_fdbk.c **** 
 991              		.loc 1 515 20 is_stmt 0 view .LVU349
 992 006c A4F86A10 		strh	r1, [r4, #106]	@ movhi
 993              		.loc 1 518 5 is_stmt 1 view .LVU350
 994              	.LVL89:
 519:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 520:Src/pwm_curr_fdbk.c ****   }
 521:Src/pwm_curr_fdbk.c **** #endif
 522:Src/pwm_curr_fdbk.c **** }
 995              		.loc 1 522 1 is_stmt 0 view .LVU351
 996 0070 04B0     		add	sp, sp, #16
 997              	.LCFI14:
 998              		.cfi_def_cfa_offset 8
 999              		@ sp needed
 1000 0072 10BD     		pop	{r4, pc}
 1001              		.loc 1 522 1 view .LVU352
 1002              		.cfi_endproc
ARM GAS  /tmp/cctuhtEr.s 			page 32


 1003              	.LFE1448:
 1005              		.section	.text.PWMC_TurnOnLowSides,"ax",%progbits
 1006              		.align	1
 1007              		.p2align 2,,3
 1008              		.weak	PWMC_TurnOnLowSides
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv4-sp-d16
 1014              	PWMC_TurnOnLowSides:
 1015              	.LVL90:
 1016              	.LFB1449:
 523:Src/pwm_curr_fdbk.c **** 
 524:Src/pwm_curr_fdbk.c **** /**
 525:Src/pwm_curr_fdbk.c ****   * @brief  Switches power stage Low Sides transistors on.
 526:Src/pwm_curr_fdbk.c ****   *
 527:Src/pwm_curr_fdbk.c ****   * This function is meant for charging boot capacitors of the driving
 528:Src/pwm_curr_fdbk.c ****   * section. It has to be called on each motor start-up when using high
 529:Src/pwm_curr_fdbk.c ****   * voltage drivers.
 530:Src/pwm_curr_fdbk.c ****   *
 531:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 532:Src/pwm_curr_fdbk.c ****   * @param  ticks: Timer ticks value to be applied.
 533:Src/pwm_curr_fdbk.c ****   *                Min value: 0 (low sides ON)
 534:Src/pwm_curr_fdbk.c ****   *                Max value: PWM_PERIOD_CYCLES/2 (low sides OFF)
 535:Src/pwm_curr_fdbk.c ****   */
 536:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 537:Src/pwm_curr_fdbk.c **** __weak void PWMC_TurnOnLowSides(PWMC_Handle_t *pHandle, uint32_t ticks)
 538:Src/pwm_curr_fdbk.c **** {
 1017              		.loc 1 538 1 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 539:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 540:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 541:Src/pwm_curr_fdbk.c ****   {
 542:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 543:Src/pwm_curr_fdbk.c ****   }
 544:Src/pwm_curr_fdbk.c ****   else
 545:Src/pwm_curr_fdbk.c ****   {
 546:Src/pwm_curr_fdbk.c **** #endif
 547:Src/pwm_curr_fdbk.c ****     pHandle->pFctTurnOnLowSides(pHandle, ticks);
 1022              		.loc 1 547 5 view .LVU354
 1023 0000 0369     		ldr	r3, [r0, #16]
 1024 0002 1847     		bx	r3	@ indirect register sibling call
 1025              	.LVL91:
 1026              		.loc 1 547 5 is_stmt 0 view .LVU355
 1027              		.cfi_endproc
 1028              	.LFE1449:
 1030              		.section	.text.PWMC_OCP_Handler,"ax",%progbits
 1031              		.align	1
 1032              		.p2align 2,,3
 1033              		.weak	PWMC_OCP_Handler
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctuhtEr.s 			page 33


 1039              	PWMC_OCP_Handler:
 1040              	.LVL92:
 1041              	.LFB1450:
 548:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 549:Src/pwm_curr_fdbk.c ****   }
 550:Src/pwm_curr_fdbk.c **** #endif
 551:Src/pwm_curr_fdbk.c **** }
 552:Src/pwm_curr_fdbk.c **** 
 553:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 554:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 555:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 556:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 557:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 558:Src/pwm_curr_fdbk.c **** #endif
 559:Src/pwm_curr_fdbk.c **** #endif
 560:Src/pwm_curr_fdbk.c **** /*
 561:Src/pwm_curr_fdbk.c ****   * @brief  Manages HW overcurrent protection.
 562:Src/pwm_curr_fdbk.c ****   *
 563:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 564:Src/pwm_curr_fdbk.c ****   */
 565:Src/pwm_curr_fdbk.c **** __weak void *PWMC_OCP_Handler(PWMC_Handle_t *pHandle)
 566:Src/pwm_curr_fdbk.c **** {
 1042              		.loc 1 566 1 is_stmt 1 view -0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 567:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1047              		.loc 1 567 3 view .LVU357
 568:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 569:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 570:Src/pwm_curr_fdbk.c ****   {
 571:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 572:Src/pwm_curr_fdbk.c ****   }
 573:Src/pwm_curr_fdbk.c ****   else
 574:Src/pwm_curr_fdbk.c ****   {
 575:Src/pwm_curr_fdbk.c **** #endif
 576:Src/pwm_curr_fdbk.c ****     if (false == pHandle->BrakeActionLock)
 1048              		.loc 1 576 5 view .LVU358
 1049              		.loc 1 576 8 is_stmt 0 view .LVU359
 1050 0000 90F88330 		ldrb	r3, [r0, #131]	@ zero_extendqisi2
 1051 0004 1BB9     		cbnz	r3, .L62
 577:Src/pwm_curr_fdbk.c ****     {
 578:Src/pwm_curr_fdbk.c ****       if (ES_GPIO == pHandle->LowSideOutputs)
 1052              		.loc 1 578 7 is_stmt 1 view .LVU360
 1053              		.loc 1 578 10 is_stmt 0 view .LVU361
 1054 0006 90F87B30 		ldrb	r3, [r0, #123]	@ zero_extendqisi2
 1055 000a 022B     		cmp	r3, #2
 1056 000c 04D0     		beq	.L65
 1057              	.L62:
 579:Src/pwm_curr_fdbk.c ****       {
 580:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_u_port, pHandle->pwm_en_u_pin);
 581:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 582:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 583:Src/pwm_curr_fdbk.c ****       }
 584:Src/pwm_curr_fdbk.c ****       else
 585:Src/pwm_curr_fdbk.c ****       {
ARM GAS  /tmp/cctuhtEr.s 			page 34


 586:Src/pwm_curr_fdbk.c ****         /* Nothing to do */
 587:Src/pwm_curr_fdbk.c ****       }
 588:Src/pwm_curr_fdbk.c ****     }
 589:Src/pwm_curr_fdbk.c ****     else
 590:Src/pwm_curr_fdbk.c ****     {
 591:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 592:Src/pwm_curr_fdbk.c ****     }
 1058              		.loc 1 592 5 is_stmt 1 view .LVU362
 593:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = true;
 1059              		.loc 1 593 5 view .LVU363
 1060              		.loc 1 593 30 is_stmt 0 view .LVU364
 1061 000e 0123     		movs	r3, #1
 1062 0010 80F88030 		strb	r3, [r0, #128]
 594:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1063              		.loc 1 594 5 is_stmt 1 view .LVU365
 1064              	.LVL93:
 595:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 596:Src/pwm_curr_fdbk.c ****   }
 597:Src/pwm_curr_fdbk.c **** #endif
 598:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1065              		.loc 1 598 3 view .LVU366
 599:Src/pwm_curr_fdbk.c **** }
 1066              		.loc 1 599 1 is_stmt 0 view .LVU367
 1067 0014 7830     		adds	r0, r0, #120
 1068              	.LVL94:
 1069              		.loc 1 599 1 view .LVU368
 1070 0016 7047     		bx	lr
 1071              	.LVL95:
 1072              	.L65:
 580:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1073              		.loc 1 580 9 is_stmt 1 view .LVU369
 581:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1074              		.loc 1 581 9 is_stmt 0 view .LVU370
 1075 0018 D0E90F21 		ldrd	r2, r1, [r0, #60]
 566:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1076              		.loc 1 566 1 view .LVU371
 1077 001c 10B4     		push	{r4}
 1078              	.LCFI15:
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 4, -4
 582:Src/pwm_curr_fdbk.c ****       }
 1081              		.loc 1 582 9 view .LVU372
 1082 001e 436C     		ldr	r3, [r0, #68]
 580:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1083              		.loc 1 580 9 view .LVU373
 1084 0020 B0F84840 		ldrh	r4, [r0, #72]
 1085              	.LVL96:
 1086              	.LBB28:
 1087              	.LBI28:
 1088              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
ARM GAS  /tmp/cctuhtEr.s 			page 35


   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
ARM GAS  /tmp/cctuhtEr.s 			page 36


  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
ARM GAS  /tmp/cctuhtEr.s 			page 37


 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/cctuhtEr.s 			page 38


 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
ARM GAS  /tmp/cctuhtEr.s 			page 39


 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
ARM GAS  /tmp/cctuhtEr.s 			page 40


 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
ARM GAS  /tmp/cctuhtEr.s 			page 41


 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
ARM GAS  /tmp/cctuhtEr.s 			page 42


 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
ARM GAS  /tmp/cctuhtEr.s 			page 43


 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  /tmp/cctuhtEr.s 			page 44


 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  /tmp/cctuhtEr.s 			page 45


 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
ARM GAS  /tmp/cctuhtEr.s 			page 46


 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
ARM GAS  /tmp/cctuhtEr.s 			page 47


 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         next reset.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         (control and alternate function registers).
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   __IO uint32_t temp;
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  /tmp/cctuhtEr.s 			page 48


 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Input data register value of port
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/cctuhtEr.s 			page 49


 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Output data register value of port
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
ARM GAS  /tmp/cctuhtEr.s 			page 50


 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->ODR, PinMask) == (PinMask)) ? 1UL : 0UL);
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  /tmp/cctuhtEr.s 			page 51


 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 1089              		.loc 2 923 22 is_stmt 1 view .LVU374
 1090              	.LBB29:
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
 1091              		.loc 2 925 3 view .LVU375
 1092 0024 9462     		str	r4, [r2, #40]
 1093              	.LVL97:
 1094              		.loc 2 925 3 is_stmt 0 view .LVU376
 1095              	.LBE29:
 1096              	.LBE28:
 581:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1097              		.loc 1 581 9 is_stmt 1 view .LVU377
 1098 0026 B0F84A40 		ldrh	r4, [r0, #74]
 1099              	.LVL98:
 1100              	.LBB30:
 1101              	.LBI30:
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1102              		.loc 2 923 22 view .LVU378
 1103              	.LBB31:
 1104              		.loc 2 925 3 view .LVU379
 1105              	.LBE31:
 1106              	.LBE30:
 582:Src/pwm_curr_fdbk.c ****       }
 1107              		.loc 1 582 9 is_stmt 0 view .LVU380
 1108 002a B0F84C20 		ldrh	r2, [r0, #76]
 1109              	.LBB33:
 1110              	.LBB32:
 1111              		.loc 2 925 3 view .LVU381
 1112 002e 8C62     		str	r4, [r1, #40]
 1113              	.LVL99:
 1114              		.loc 2 925 3 view .LVU382
 1115              	.LBE32:
 1116              	.LBE33:
 582:Src/pwm_curr_fdbk.c ****       }
 1117              		.loc 1 582 9 is_stmt 1 view .LVU383
 1118              	.LBB34:
 1119              	.LBI34:
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1120              		.loc 2 923 22 view .LVU384
 1121              	.LBB35:
 1122              		.loc 2 925 3 view .LVU385
 1123              		.loc 2 925 3 is_stmt 0 view .LVU386
 1124              	.LBE35:
 1125              	.LBE34:
 592:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = true;
 1126              		.loc 1 592 5 is_stmt 1 view .LVU387
 593:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1127              		.loc 1 593 5 view .LVU388
 1128              	.LBB37:
 1129              	.LBB36:
 1130              		.loc 2 925 3 is_stmt 0 view .LVU389
 1131 0030 9A62     		str	r2, [r3, #40]
 1132              	.LBE36:
ARM GAS  /tmp/cctuhtEr.s 			page 52


 1133              	.LBE37:
 593:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1134              		.loc 1 593 30 view .LVU390
 1135 0032 0123     		movs	r3, #1
 1136 0034 80F88030 		strb	r3, [r0, #128]
 594:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1137              		.loc 1 594 5 is_stmt 1 view .LVU391
 1138              	.LVL100:
 598:Src/pwm_curr_fdbk.c **** }
 1139              		.loc 1 598 3 view .LVU392
 1140              		.loc 1 599 1 is_stmt 0 view .LVU393
 1141 0038 5DF8044B 		ldr	r4, [sp], #4
 1142              	.LCFI16:
 1143              		.cfi_restore 4
 1144              		.cfi_def_cfa_offset 0
 1145 003c 7830     		adds	r0, r0, #120
 1146              	.LVL101:
 1147              		.loc 1 599 1 view .LVU394
 1148 003e 7047     		bx	lr
 1149              		.cfi_endproc
 1150              	.LFE1450:
 1152              		.section	.text.PWMC_DP_Handler,"ax",%progbits
 1153              		.align	1
 1154              		.p2align 2,,3
 1155              		.weak	PWMC_DP_Handler
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv4-sp-d16
 1161              	PWMC_DP_Handler:
 1162              	.LVL102:
 1163              	.LFB1451:
 600:Src/pwm_curr_fdbk.c **** 
 601:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 602:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 603:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 604:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 605:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 606:Src/pwm_curr_fdbk.c **** #endif
 607:Src/pwm_curr_fdbk.c **** #endif
 608:Src/pwm_curr_fdbk.c **** /*
 609:Src/pwm_curr_fdbk.c ****   * @brief  manages driver protection.
 610:Src/pwm_curr_fdbk.c ****   *
 611:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 612:Src/pwm_curr_fdbk.c ****   */
 613:Src/pwm_curr_fdbk.c **** __weak void *PWMC_DP_Handler(PWMC_Handle_t *pHandle)
 614:Src/pwm_curr_fdbk.c **** {
 1164              		.loc 1 614 1 is_stmt 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 615:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1169              		.loc 1 615 3 view .LVU396
 616:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 617:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 618:Src/pwm_curr_fdbk.c ****   {
ARM GAS  /tmp/cctuhtEr.s 			page 53


 619:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 620:Src/pwm_curr_fdbk.c ****   }
 621:Src/pwm_curr_fdbk.c ****   else
 622:Src/pwm_curr_fdbk.c ****   {
 623:Src/pwm_curr_fdbk.c **** #endif
 624:Src/pwm_curr_fdbk.c ****     if (false == pHandle->BrakeActionLock)
 1170              		.loc 1 624 5 view .LVU397
 1171              		.loc 1 624 8 is_stmt 0 view .LVU398
 1172 0000 90F88330 		ldrb	r3, [r0, #131]	@ zero_extendqisi2
 1173 0004 1BB9     		cbnz	r3, .L69
 625:Src/pwm_curr_fdbk.c ****     {
 626:Src/pwm_curr_fdbk.c ****       if (ES_GPIO == pHandle->LowSideOutputs)
 1174              		.loc 1 626 7 is_stmt 1 view .LVU399
 1175              		.loc 1 626 10 is_stmt 0 view .LVU400
 1176 0006 90F87B30 		ldrb	r3, [r0, #123]	@ zero_extendqisi2
 1177 000a 022B     		cmp	r3, #2
 1178 000c 04D0     		beq	.L72
 1179              	.L69:
 627:Src/pwm_curr_fdbk.c ****       {
 628:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_u_port, pHandle->pwm_en_u_pin);
 629:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 630:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 631:Src/pwm_curr_fdbk.c ****       }
 632:Src/pwm_curr_fdbk.c ****       else
 633:Src/pwm_curr_fdbk.c ****       {
 634:Src/pwm_curr_fdbk.c ****         /* Nothing to do */
 635:Src/pwm_curr_fdbk.c ****       }
 636:Src/pwm_curr_fdbk.c ****     }
 637:Src/pwm_curr_fdbk.c ****     else
 638:Src/pwm_curr_fdbk.c ****     {
 639:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 640:Src/pwm_curr_fdbk.c ****     }
 1180              		.loc 1 640 5 is_stmt 1 view .LVU401
 641:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = true;
 1181              		.loc 1 641 5 view .LVU402
 1182              		.loc 1 641 35 is_stmt 0 view .LVU403
 1183 000e 0123     		movs	r3, #1
 1184 0010 80F88230 		strb	r3, [r0, #130]
 642:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1185              		.loc 1 642 5 is_stmt 1 view .LVU404
 1186              	.LVL103:
 643:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 644:Src/pwm_curr_fdbk.c ****   }
 645:Src/pwm_curr_fdbk.c **** #endif
 646:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1187              		.loc 1 646 3 view .LVU405
 647:Src/pwm_curr_fdbk.c **** }
 1188              		.loc 1 647 1 is_stmt 0 view .LVU406
 1189 0014 7830     		adds	r0, r0, #120
 1190              	.LVL104:
 1191              		.loc 1 647 1 view .LVU407
 1192 0016 7047     		bx	lr
 1193              	.LVL105:
 1194              	.L72:
 628:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1195              		.loc 1 628 9 is_stmt 1 view .LVU408
 629:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
ARM GAS  /tmp/cctuhtEr.s 			page 54


 1196              		.loc 1 629 9 is_stmt 0 view .LVU409
 1197 0018 D0E90F21 		ldrd	r2, r1, [r0, #60]
 614:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1198              		.loc 1 614 1 view .LVU410
 1199 001c 10B4     		push	{r4}
 1200              	.LCFI17:
 1201              		.cfi_def_cfa_offset 4
 1202              		.cfi_offset 4, -4
 630:Src/pwm_curr_fdbk.c ****       }
 1203              		.loc 1 630 9 view .LVU411
 1204 001e 436C     		ldr	r3, [r0, #68]
 628:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1205              		.loc 1 628 9 view .LVU412
 1206 0020 B0F84840 		ldrh	r4, [r0, #72]
 1207              	.LVL106:
 1208              	.LBB38:
 1209              	.LBI38:
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1210              		.loc 2 923 22 is_stmt 1 view .LVU413
 1211              	.LBB39:
 1212              		.loc 2 925 3 view .LVU414
 1213 0024 9462     		str	r4, [r2, #40]
 1214              	.LVL107:
 1215              		.loc 2 925 3 is_stmt 0 view .LVU415
 1216              	.LBE39:
 1217              	.LBE38:
 629:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1218              		.loc 1 629 9 is_stmt 1 view .LVU416
 1219 0026 B0F84A40 		ldrh	r4, [r0, #74]
 1220              	.LVL108:
 1221              	.LBB40:
 1222              	.LBI40:
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1223              		.loc 2 923 22 view .LVU417
 1224              	.LBB41:
 1225              		.loc 2 925 3 view .LVU418
 1226              	.LBE41:
 1227              	.LBE40:
 630:Src/pwm_curr_fdbk.c ****       }
 1228              		.loc 1 630 9 is_stmt 0 view .LVU419
 1229 002a B0F84C20 		ldrh	r2, [r0, #76]
 1230              	.LBB43:
 1231              	.LBB42:
 1232              		.loc 2 925 3 view .LVU420
 1233 002e 8C62     		str	r4, [r1, #40]
 1234              	.LVL109:
 1235              		.loc 2 925 3 view .LVU421
 1236              	.LBE42:
 1237              	.LBE43:
 630:Src/pwm_curr_fdbk.c ****       }
 1238              		.loc 1 630 9 is_stmt 1 view .LVU422
 1239              	.LBB44:
 1240              	.LBI44:
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1241              		.loc 2 923 22 view .LVU423
 1242              	.LBB45:
 1243              		.loc 2 925 3 view .LVU424
ARM GAS  /tmp/cctuhtEr.s 			page 55


 1244              		.loc 2 925 3 is_stmt 0 view .LVU425
 1245              	.LBE45:
 1246              	.LBE44:
 640:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = true;
 1247              		.loc 1 640 5 is_stmt 1 view .LVU426
 641:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1248              		.loc 1 641 5 view .LVU427
 1249              	.LBB47:
 1250              	.LBB46:
 1251              		.loc 2 925 3 is_stmt 0 view .LVU428
 1252 0030 9A62     		str	r2, [r3, #40]
 1253              	.LBE46:
 1254              	.LBE47:
 641:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1255              		.loc 1 641 35 view .LVU429
 1256 0032 0123     		movs	r3, #1
 1257 0034 80F88230 		strb	r3, [r0, #130]
 642:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1258              		.loc 1 642 5 is_stmt 1 view .LVU430
 1259              	.LVL110:
 646:Src/pwm_curr_fdbk.c **** }
 1260              		.loc 1 646 3 view .LVU431
 1261              		.loc 1 647 1 is_stmt 0 view .LVU432
 1262 0038 5DF8044B 		ldr	r4, [sp], #4
 1263              	.LCFI18:
 1264              		.cfi_restore 4
 1265              		.cfi_def_cfa_offset 0
 1266 003c 7830     		adds	r0, r0, #120
 1267              	.LVL111:
 1268              		.loc 1 647 1 view .LVU433
 1269 003e 7047     		bx	lr
 1270              		.cfi_endproc
 1271              	.LFE1451:
 1273              		.section	.text.PWMC_OVP_Handler,"ax",%progbits
 1274              		.align	1
 1275              		.p2align 2,,3
 1276              		.weak	PWMC_OVP_Handler
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv4-sp-d16
 1282              	PWMC_OVP_Handler:
 1283              	.LVL112:
 1284              	.LFB1452:
 648:Src/pwm_curr_fdbk.c **** 
 649:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 650:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 651:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 652:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 653:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 654:Src/pwm_curr_fdbk.c **** #endif
 655:Src/pwm_curr_fdbk.c **** #endif
 656:Src/pwm_curr_fdbk.c **** /*
 657:Src/pwm_curr_fdbk.c ****   * @brief  Manages HW overvoltage protection.
 658:Src/pwm_curr_fdbk.c ****   *
 659:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 660:Src/pwm_curr_fdbk.c ****   *         TIMx: timer used for PWM generation
ARM GAS  /tmp/cctuhtEr.s 			page 56


 661:Src/pwm_curr_fdbk.c ****   */
 662:Src/pwm_curr_fdbk.c **** __weak void *PWMC_OVP_Handler(PWMC_Handle_t *pHandle, TIM_TypeDef *TIMx)
 663:Src/pwm_curr_fdbk.c **** {
 1285              		.loc 1 663 1 is_stmt 1 view -0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              		@ link register save eliminated.
 664:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1290              		.loc 1 664 3 view .LVU435
 665:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 666:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 667:Src/pwm_curr_fdbk.c ****   {
 668:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 669:Src/pwm_curr_fdbk.c ****   }
 670:Src/pwm_curr_fdbk.c ****   else
 671:Src/pwm_curr_fdbk.c ****   {
 672:Src/pwm_curr_fdbk.c **** #endif
 673:Src/pwm_curr_fdbk.c ****     TIMx->BDTR |= LL_TIM_OSSI_ENABLE;
 1291              		.loc 1 673 5 view .LVU436
 1292              		.loc 1 673 16 is_stmt 0 view .LVU437
 1293 0000 4A6C     		ldr	r2, [r1, #68]
 663:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 1294              		.loc 1 663 1 view .LVU438
 1295 0002 0346     		mov	r3, r0
 674:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = true;
 1296              		.loc 1 674 30 view .LVU439
 1297 0004 4FF0010C 		mov	ip, #1
 673:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = true;
 1298              		.loc 1 673 16 view .LVU440
 1299 0008 42F48062 		orr	r2, r2, #1024
 1300 000c 4A64     		str	r2, [r1, #68]
 1301              		.loc 1 674 5 is_stmt 1 view .LVU441
 675:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 676:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 677:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 678:Src/pwm_curr_fdbk.c ****   }
 679:Src/pwm_curr_fdbk.c **** #endif
 680:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 681:Src/pwm_curr_fdbk.c **** }
 1302              		.loc 1 681 1 is_stmt 0 view .LVU442
 1303 000e 7830     		adds	r0, r0, #120
 1304              	.LVL113:
 674:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1305              		.loc 1 674 30 view .LVU443
 1306 0010 83F881C0 		strb	ip, [r3, #129]
 675:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1307              		.loc 1 675 5 is_stmt 1 view .LVU444
 675:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1308              		.loc 1 675 30 is_stmt 0 view .LVU445
 1309 0014 83F883C0 		strb	ip, [r3, #131]
 676:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 1310              		.loc 1 676 5 is_stmt 1 view .LVU446
 1311              	.LVL114:
 680:Src/pwm_curr_fdbk.c **** }
 1312              		.loc 1 680 3 view .LVU447
 1313              		.loc 1 681 1 is_stmt 0 view .LVU448
ARM GAS  /tmp/cctuhtEr.s 			page 57


 1314 0018 7047     		bx	lr
 1315              		.cfi_endproc
 1316              	.LFE1452:
 1318 001a 00BF     		.section	.text.PWMC_IsFaultOccurred,"ax",%progbits
 1319              		.align	1
 1320              		.p2align 2,,3
 1321              		.weak	PWMC_IsFaultOccurred
 1322              		.syntax unified
 1323              		.thumb
 1324              		.thumb_func
 1325              		.fpu fpv4-sp-d16
 1327              	PWMC_IsFaultOccurred:
 1328              	.LVL115:
 1329              	.LFB1453:
 682:Src/pwm_curr_fdbk.c **** 
 683:Src/pwm_curr_fdbk.c **** /*
 684:Src/pwm_curr_fdbk.c ****   * @brief  Checks if an overcurrent occurred since last call.
 685:Src/pwm_curr_fdbk.c ****   *
 686:Src/pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
 687:Src/pwm_curr_fdbk.c ****   * @retval uint16_t Returns #MC_OVER_CURR if an overcurrent has been
 688:Src/pwm_curr_fdbk.c ****   *                  detected since last method call, #MC_NO_FAULTS otherwise.
 689:Src/pwm_curr_fdbk.c ****   */
 690:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_IsFaultOccurred(PWMC_Handle_t *pHandle)
 691:Src/pwm_curr_fdbk.c **** {
 1330              		.loc 1 691 1 is_stmt 1 view -0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 692:Src/pwm_curr_fdbk.c ****   uint16_t retVal = MC_NO_FAULTS;
 1335              		.loc 1 692 3 view .LVU450
 693:Src/pwm_curr_fdbk.c **** 
 694:Src/pwm_curr_fdbk.c ****   if (true == pHandle->OverVoltageFlag)
 1336              		.loc 1 694 3 view .LVU451
 1337              		.loc 1 694 6 is_stmt 0 view .LVU452
 1338 0000 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 1339 0004 B3B1     		cbz	r3, .L78
 695:Src/pwm_curr_fdbk.c ****   {
 696:Src/pwm_curr_fdbk.c ****     retVal = MC_OVER_VOLT;
 1340              		.loc 1 696 5 is_stmt 1 view .LVU453
 1341              	.LVL116:
 697:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = false;
 1342              		.loc 1 697 5 view .LVU454
 1343              		.loc 1 697 30 is_stmt 0 view .LVU455
 1344 0006 0023     		movs	r3, #0
 1345 0008 80F88130 		strb	r3, [r0, #129]
 1346 000c 4221     		movs	r1, #66
 696:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = false;
 1347              		.loc 1 696 12 view .LVU456
 1348 000e 0223     		movs	r3, #2
 1349              	.LVL117:
 1350              	.L75:
 698:Src/pwm_curr_fdbk.c ****   }
 699:Src/pwm_curr_fdbk.c ****   else
 700:Src/pwm_curr_fdbk.c ****   {
 701:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 702:Src/pwm_curr_fdbk.c ****   }
ARM GAS  /tmp/cctuhtEr.s 			page 58


 1351              		.loc 1 702 3 is_stmt 1 view .LVU457
 703:Src/pwm_curr_fdbk.c **** 
 704:Src/pwm_curr_fdbk.c ****   if (true == pHandle->OverCurrentFlag)
 1352              		.loc 1 704 3 view .LVU458
 1353              		.loc 1 704 6 is_stmt 0 view .LVU459
 1354 0010 90F88020 		ldrb	r2, [r0, #128]	@ zero_extendqisi2
 1355 0014 1AB1     		cbz	r2, .L76
 705:Src/pwm_curr_fdbk.c ****   {
 706:Src/pwm_curr_fdbk.c ****     retVal |= MC_OVER_CURR;
 1356              		.loc 1 706 5 is_stmt 1 view .LVU460
 707:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = false;
 1357              		.loc 1 707 5 view .LVU461
 1358              		.loc 1 707 30 is_stmt 0 view .LVU462
 1359 0016 0023     		movs	r3, #0
 1360 0018 80F88030 		strb	r3, [r0, #128]
 1361              	.LVL118:
 706:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = false;
 1362              		.loc 1 706 12 view .LVU463
 1363 001c 0B46     		mov	r3, r1
 1364              	.LVL119:
 1365              	.L76:
 708:Src/pwm_curr_fdbk.c ****   }
 709:Src/pwm_curr_fdbk.c ****   else
 710:Src/pwm_curr_fdbk.c ****   {
 711:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 712:Src/pwm_curr_fdbk.c ****   }
 1366              		.loc 1 712 3 is_stmt 1 view .LVU464
 713:Src/pwm_curr_fdbk.c **** 
 714:Src/pwm_curr_fdbk.c ****   if (true == pHandle->driverProtectionFlag)
 1367              		.loc 1 714 3 view .LVU465
 1368              		.loc 1 714 6 is_stmt 0 view .LVU466
 1369 001e 90F88220 		ldrb	r2, [r0, #130]	@ zero_extendqisi2
 1370 0022 2AB1     		cbz	r2, .L77
 715:Src/pwm_curr_fdbk.c ****   {
 716:Src/pwm_curr_fdbk.c ****     retVal |= MC_DP_FAULT;
 1371              		.loc 1 716 5 is_stmt 1 view .LVU467
 1372              		.loc 1 716 12 is_stmt 0 view .LVU468
 1373 0024 43F48063 		orr	r3, r3, #1024
 1374              	.LVL120:
 717:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = false;
 1375              		.loc 1 717 35 view .LVU469
 1376 0028 0022     		movs	r2, #0
 716:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = false;
 1377              		.loc 1 716 12 view .LVU470
 1378 002a 9BB2     		uxth	r3, r3
 1379              		.loc 1 717 5 is_stmt 1 view .LVU471
 1380              		.loc 1 717 35 is_stmt 0 view .LVU472
 1381 002c 80F88220 		strb	r2, [r0, #130]
 1382              	.LVL121:
 1383              	.L77:
 718:Src/pwm_curr_fdbk.c ****   }
 719:Src/pwm_curr_fdbk.c ****   else
 720:Src/pwm_curr_fdbk.c ****   {
 721:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 722:Src/pwm_curr_fdbk.c ****   }
 1384              		.loc 1 722 3 is_stmt 1 view .LVU473
 723:Src/pwm_curr_fdbk.c **** 
ARM GAS  /tmp/cctuhtEr.s 			page 59


 724:Src/pwm_curr_fdbk.c ****   return (retVal);
 1385              		.loc 1 724 3 view .LVU474
 725:Src/pwm_curr_fdbk.c **** }
 1386              		.loc 1 725 1 is_stmt 0 view .LVU475
 1387 0030 1846     		mov	r0, r3
 1388              	.LVL122:
 1389              		.loc 1 725 1 view .LVU476
 1390 0032 7047     		bx	lr
 1391              	.LVL123:
 1392              	.L78:
 1393              		.loc 1 725 1 view .LVU477
 1394 0034 4021     		movs	r1, #64
 1395 0036 EBE7     		b	.L75
 1396              		.cfi_endproc
 1397              	.LFE1453:
 1399              		.section	.text.PWMC_OCPSetReferenceVoltage,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.weak	PWMC_OCPSetReferenceVoltage
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1406              		.fpu fpv4-sp-d16
 1408              	PWMC_OCPSetReferenceVoltage:
 1409              	.LVL124:
 1410              	.LFB1454:
 726:Src/pwm_curr_fdbk.c **** 
 727:Src/pwm_curr_fdbk.c **** /**
 728:Src/pwm_curr_fdbk.c ****   * @brief  Sets the over current threshold through the DAC reference voltage.
 729:Src/pwm_curr_fdbk.c ****   *
 730:Src/pwm_curr_fdbk.c ****   * @param  pHandle:  Handler of the current instance of the PWM component.
 731:Src/pwm_curr_fdbk.c ****   * @param  hDACVref: Value of DAC reference voltage to be applied expressed as a 16bit unsigned in
 732:Src/pwm_curr_fdbk.c ****   *					  Min value: 0 (0 V)
 733:Src/pwm_curr_fdbk.c ****   *                	  Max value: 65536 (VDD_DAC)
 734:Src/pwm_curr_fdbk.c ****   */
 735:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 736:Src/pwm_curr_fdbk.c **** __weak void PWMC_OCPSetReferenceVoltage(PWMC_Handle_t *pHandle, uint16_t hDACVref)
 737:Src/pwm_curr_fdbk.c **** {
 1411              		.loc 1 737 1 is_stmt 1 view -0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415              		@ link register save eliminated.
 738:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 739:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || (MC_NULL == pHandle->pFctOCPSetReferenceVoltage))
 740:Src/pwm_curr_fdbk.c ****   {
 741:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 742:Src/pwm_curr_fdbk.c ****   }
 743:Src/pwm_curr_fdbk.c ****   else
 744:Src/pwm_curr_fdbk.c ****   {
 745:Src/pwm_curr_fdbk.c **** #endif
 746:Src/pwm_curr_fdbk.c ****     pHandle->pFctOCPSetReferenceVoltage(pHandle, hDACVref);
 1416              		.loc 1 746 5 view .LVU479
 1417 0000 8369     		ldr	r3, [r0, #24]
 1418 0002 1847     		bx	r3	@ indirect register sibling call
 1419              	.LVL125:
 1420              		.loc 1 746 5 is_stmt 0 view .LVU480
ARM GAS  /tmp/cctuhtEr.s 			page 60


 1421              		.cfi_endproc
 1422              	.LFE1454:
 1424              		.section	.text.PWMC_DPWM_ModeEnable,"ax",%progbits
 1425              		.align	1
 1426              		.p2align 2,,3
 1427              		.weak	PWMC_DPWM_ModeEnable
 1428              		.syntax unified
 1429              		.thumb
 1430              		.thumb_func
 1431              		.fpu fpv4-sp-d16
 1433              	PWMC_DPWM_ModeEnable:
 1434              	.LVL126:
 1435              	.LFB1455:
 747:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 748:Src/pwm_curr_fdbk.c ****   }
 749:Src/pwm_curr_fdbk.c **** #endif
 750:Src/pwm_curr_fdbk.c **** }
 751:Src/pwm_curr_fdbk.c **** 
 752:Src/pwm_curr_fdbk.c **** /** @brief Enables Discontinuous PWM mode using the @p pHandle PWMC component.
 753:Src/pwm_curr_fdbk.c ****   *
 754:Src/pwm_curr_fdbk.c ****   */
 755:Src/pwm_curr_fdbk.c **** __weak void PWMC_DPWM_ModeEnable(PWMC_Handle_t *pHandle)
 756:Src/pwm_curr_fdbk.c **** {
 1436              		.loc 1 756 1 is_stmt 1 view -0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 757:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 758:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 759:Src/pwm_curr_fdbk.c ****   {
 760:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 761:Src/pwm_curr_fdbk.c ****   }
 762:Src/pwm_curr_fdbk.c ****   else
 763:Src/pwm_curr_fdbk.c ****   {
 764:Src/pwm_curr_fdbk.c **** #endif
 765:Src/pwm_curr_fdbk.c ****     pHandle->DPWM_Mode = true;
 1441              		.loc 1 765 5 view .LVU482
 1442              		.loc 1 765 24 is_stmt 0 view .LVU483
 1443 0000 0123     		movs	r3, #1
 1444 0002 80F87D30 		strb	r3, [r0, #125]
 766:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 767:Src/pwm_curr_fdbk.c ****   }
 768:Src/pwm_curr_fdbk.c **** #endif
 769:Src/pwm_curr_fdbk.c **** }
 1445              		.loc 1 769 1 view .LVU484
 1446 0006 7047     		bx	lr
 1447              		.cfi_endproc
 1448              	.LFE1455:
 1450              		.section	.text.PWMC_DPWM_ModeDisable,"ax",%progbits
 1451              		.align	1
 1452              		.p2align 2,,3
 1453              		.weak	PWMC_DPWM_ModeDisable
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctuhtEr.s 			page 61


 1459              	PWMC_DPWM_ModeDisable:
 1460              	.LVL127:
 1461              	.LFB1456:
 770:Src/pwm_curr_fdbk.c **** 
 771:Src/pwm_curr_fdbk.c **** /** @brief Disables Discontinuous PWM mode using the @p pHandle PWMC component.
 772:Src/pwm_curr_fdbk.c ****   *
 773:Src/pwm_curr_fdbk.c ****   */
 774:Src/pwm_curr_fdbk.c **** __weak void PWMC_DPWM_ModeDisable(PWMC_Handle_t *pHandle)
 775:Src/pwm_curr_fdbk.c **** {
 1462              		.loc 1 775 1 is_stmt 1 view -0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 776:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 777:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 778:Src/pwm_curr_fdbk.c ****   {
 779:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 780:Src/pwm_curr_fdbk.c ****   }
 781:Src/pwm_curr_fdbk.c ****   else
 782:Src/pwm_curr_fdbk.c ****   {
 783:Src/pwm_curr_fdbk.c **** #endif
 784:Src/pwm_curr_fdbk.c ****     pHandle->DPWM_Mode = false;
 1467              		.loc 1 784 5 view .LVU486
 1468              		.loc 1 784 24 is_stmt 0 view .LVU487
 1469 0000 0023     		movs	r3, #0
 1470 0002 80F87D30 		strb	r3, [r0, #125]
 785:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 786:Src/pwm_curr_fdbk.c ****   }
 787:Src/pwm_curr_fdbk.c **** #endif
 788:Src/pwm_curr_fdbk.c **** }
 1471              		.loc 1 788 1 view .LVU488
 1472 0006 7047     		bx	lr
 1473              		.cfi_endproc
 1474              	.LFE1456:
 1476              		.section	.text.PWMC_GetDPWM_Mode,"ax",%progbits
 1477              		.align	1
 1478              		.p2align 2,,3
 1479              		.weak	PWMC_GetDPWM_Mode
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu fpv4-sp-d16
 1485              	PWMC_GetDPWM_Mode:
 1486              	.LVL128:
 1487              	.LFB1457:
 789:Src/pwm_curr_fdbk.c **** 
 790:Src/pwm_curr_fdbk.c **** /** @brief  Returns the status of the Discontinuous PWM Mode stored in the @p pHandle PWMC componen
 791:Src/pwm_curr_fdbk.c ****   *
 792:Src/pwm_curr_fdbk.c ****   * @retval true if DPWM Mode is enabled, **false** otherwise.
 793:Src/pwm_curr_fdbk.c ****   */
 794:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13
 795:Src/pwm_curr_fdbk.c **** __weak bool PWMC_GetDPWM_Mode(PWMC_Handle_t *pHandle)
 796:Src/pwm_curr_fdbk.c **** {
 1488              		.loc 1 796 1 is_stmt 1 view -0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctuhtEr.s 			page 62


 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 797:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 798:Src/pwm_curr_fdbk.c ****   return ((MC_NULL == pHandle) ? false : pHandle->DPWM_Mode);
 799:Src/pwm_curr_fdbk.c **** #else
 800:Src/pwm_curr_fdbk.c ****   return (pHandle->DPWM_Mode);
 1493              		.loc 1 800 3 view .LVU490
 801:Src/pwm_curr_fdbk.c **** #endif
 802:Src/pwm_curr_fdbk.c **** }
 1494              		.loc 1 802 1 is_stmt 0 view .LVU491
 1495 0000 90F87D00 		ldrb	r0, [r0, #125]	@ zero_extendqisi2
 1496              	.LVL129:
 1497              		.loc 1 802 1 view .LVU492
 1498 0004 7047     		bx	lr
 1499              		.cfi_endproc
 1500              	.LFE1457:
 1502 0006 00BF     		.section	.text.PWMC_RLDetectionModeEnable,"ax",%progbits
 1503              		.align	1
 1504              		.p2align 2,,3
 1505              		.weak	PWMC_RLDetectionModeEnable
 1506              		.syntax unified
 1507              		.thumb
 1508              		.thumb_func
 1509              		.fpu fpv4-sp-d16
 1511              	PWMC_RLDetectionModeEnable:
 1512              	.LVL130:
 1513              	.LFB1458:
 803:Src/pwm_curr_fdbk.c **** 
 804:Src/pwm_curr_fdbk.c **** /** @brief  Enables the RL detection mode by calling the function in @p pHandle PWMC component.
 805:Src/pwm_curr_fdbk.c ****   *
 806:Src/pwm_curr_fdbk.c ****   */
 807:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 808:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLDetectionModeEnable(PWMC_Handle_t *pHandle)
 809:Src/pwm_curr_fdbk.c **** {
 1514              		.loc 1 809 1 is_stmt 1 view -0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 0
 1517              		@ frame_needed = 0, uses_anonymous_args = 0
 1518              		@ link register save eliminated.
 810:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 811:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeEnable))
 812:Src/pwm_curr_fdbk.c ****   {
 813:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 814:Src/pwm_curr_fdbk.c ****   }
 815:Src/pwm_curr_fdbk.c ****   else
 816:Src/pwm_curr_fdbk.c ****   {
 817:Src/pwm_curr_fdbk.c **** #endif
 818:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeEnable(pHandle);
 1519              		.loc 1 818 5 view .LVU494
 1520 0000 C369     		ldr	r3, [r0, #28]
 1521 0002 1847     		bx	r3	@ indirect register sibling call
 1522              	.LVL131:
 1523              		.loc 1 818 5 is_stmt 0 view .LVU495
 1524              		.cfi_endproc
 1525              	.LFE1458:
 1527              		.section	.text.PWMC_RLDetectionModeDisable,"ax",%progbits
 1528              		.align	1
ARM GAS  /tmp/cctuhtEr.s 			page 63


 1529              		.p2align 2,,3
 1530              		.weak	PWMC_RLDetectionModeDisable
 1531              		.syntax unified
 1532              		.thumb
 1533              		.thumb_func
 1534              		.fpu fpv4-sp-d16
 1536              	PWMC_RLDetectionModeDisable:
 1537              	.LVL132:
 1538              	.LFB1459:
 819:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 820:Src/pwm_curr_fdbk.c ****   }
 821:Src/pwm_curr_fdbk.c **** #endif
 822:Src/pwm_curr_fdbk.c **** }
 823:Src/pwm_curr_fdbk.c **** 
 824:Src/pwm_curr_fdbk.c **** /** @brief  Disables the RL detection mode by calling the function in @p pHandle PWMC component.
 825:Src/pwm_curr_fdbk.c ****   *
 826:Src/pwm_curr_fdbk.c ****   */
 827:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 828:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLDetectionModeDisable(PWMC_Handle_t *pHandle)
 829:Src/pwm_curr_fdbk.c **** {
 1539              		.loc 1 829 1 is_stmt 1 view -0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              		@ link register save eliminated.
 830:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 831:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeDisable))
 832:Src/pwm_curr_fdbk.c ****   {
 833:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 834:Src/pwm_curr_fdbk.c ****   }
 835:Src/pwm_curr_fdbk.c ****   else
 836:Src/pwm_curr_fdbk.c ****   {
 837:Src/pwm_curr_fdbk.c **** #endif
 838:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeDisable(pHandle);
 1544              		.loc 1 838 5 view .LVU497
 1545 0000 036A     		ldr	r3, [r0, #32]
 1546 0002 1847     		bx	r3	@ indirect register sibling call
 1547              	.LVL133:
 1548              		.loc 1 838 5 is_stmt 0 view .LVU498
 1549              		.cfi_endproc
 1550              	.LFE1459:
 1552              		.section	.text.PWMC_RLDetectionModeSetDuty,"ax",%progbits
 1553              		.align	1
 1554              		.p2align 2,,3
 1555              		.weak	PWMC_RLDetectionModeSetDuty
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu fpv4-sp-d16
 1561              	PWMC_RLDetectionModeSetDuty:
 1562              	.LVL134:
 1563              	.LFB1460:
 839:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 840:Src/pwm_curr_fdbk.c ****   }
 841:Src/pwm_curr_fdbk.c **** #endif
 842:Src/pwm_curr_fdbk.c **** }
 843:Src/pwm_curr_fdbk.c **** 
ARM GAS  /tmp/cctuhtEr.s 			page 64


 844:Src/pwm_curr_fdbk.c **** /**
 845:Src/pwm_curr_fdbk.c ****   * @brief  Sets the PWM duty cycle to apply in the RL Detection mode.
 846:Src/pwm_curr_fdbk.c ****   *
 847:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 848:Src/pwm_curr_fdbk.c ****   * @param  hDuty: Duty cycle to apply, written in uint16_t.
 849:Src/pwm_curr_fdbk.c ****   * @retval #MC_NO_ERROR if the Duty Cycle could be applied on time for the next PWM period.
 850:Src/pwm_curr_fdbk.c ****   * 		Returns #MC_DURATION otherwise.
 851:Src/pwm_curr_fdbk.c ****   */
 852:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_RLDetectionModeSetDuty(PWMC_Handle_t *pHandle, uint16_t hDuty) //cstat !MISRAC
 853:Src/pwm_curr_fdbk.c **** {
 1564              		.loc 1 853 1 is_stmt 1 view -0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 0
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              		@ link register save eliminated.
 854:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 855:Src/pwm_curr_fdbk.c ****  uint16_t retVal = MC_DURATION;
 856:Src/pwm_curr_fdbk.c **** 
 857:Src/pwm_curr_fdbk.c ****  if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeSetDuty))
 858:Src/pwm_curr_fdbk.c ****  {
 859:Src/pwm_curr_fdbk.c ****    /* Nothing to do */
 860:Src/pwm_curr_fdbk.c ****  }
 861:Src/pwm_curr_fdbk.c ****  else
 862:Src/pwm_curr_fdbk.c ****  {
 863:Src/pwm_curr_fdbk.c ****    retVal = pHandle->pFctRLDetectionModeSetDuty(pHandle, hDuty);
 864:Src/pwm_curr_fdbk.c ****  }
 865:Src/pwm_curr_fdbk.c ****  return (retVal);
 866:Src/pwm_curr_fdbk.c **** #else
 867:Src/pwm_curr_fdbk.c ****   return (pHandle->pFctRLDetectionModeSetDuty(pHandle, hDuty));
 1569              		.loc 1 867 3 view .LVU500
 1570              		.loc 1 867 11 is_stmt 0 view .LVU501
 1571 0000 436A     		ldr	r3, [r0, #36]
 1572 0002 1847     		bx	r3
 1573              	.LVL135:
 1574              		.loc 1 867 11 view .LVU502
 1575              		.cfi_endproc
 1576              	.LFE1460:
 1578              		.section	.text.PWMC_RLTurnOnLowSidesAndStart,"ax",%progbits
 1579              		.align	1
 1580              		.p2align 2,,3
 1581              		.weak	PWMC_RLTurnOnLowSidesAndStart
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1585              		.fpu fpv4-sp-d16
 1587              	PWMC_RLTurnOnLowSidesAndStart:
 1588              	.LVL136:
 1589              	.LFB1461:
 868:Src/pwm_curr_fdbk.c **** #endif
 869:Src/pwm_curr_fdbk.c **** }
 870:Src/pwm_curr_fdbk.c **** 
 871:Src/pwm_curr_fdbk.c **** /** @brief  Turns on low sides switches and starts ADC triggerin.
 872:Src/pwm_curr_fdbk.c ****   *
 873:Src/pwm_curr_fdbk.c ****   */
 874:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 875:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLTurnOnLowSidesAndStart(PWMC_Handle_t *pHandle)
 876:Src/pwm_curr_fdbk.c **** {
ARM GAS  /tmp/cctuhtEr.s 			page 65


 1590              		.loc 1 876 1 is_stmt 1 view -0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              		@ link register save eliminated.
 877:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 878:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLTurnOnLowSidesAndStart))
 879:Src/pwm_curr_fdbk.c ****   {
 880:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 881:Src/pwm_curr_fdbk.c ****   }
 882:Src/pwm_curr_fdbk.c ****   else
 883:Src/pwm_curr_fdbk.c ****   {
 884:Src/pwm_curr_fdbk.c **** #endif
 885:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLTurnOnLowSidesAndStart(pHandle);
 1595              		.loc 1 885 5 view .LVU504
 1596 0000 836A     		ldr	r3, [r0, #40]
 1597 0002 1847     		bx	r3	@ indirect register sibling call
 1598              	.LVL137:
 1599              		.loc 1 885 5 is_stmt 0 view .LVU505
 1600              		.cfi_endproc
 1601              	.LFE1461:
 1603              		.section	.text.PWMC_RegisterGetPhaseCurrentsCallBack,"ax",%progbits
 1604              		.align	1
 1605              		.p2align 2,,3
 1606              		.weak	PWMC_RegisterGetPhaseCurrentsCallBack
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu fpv4-sp-d16
 1612              	PWMC_RegisterGetPhaseCurrentsCallBack:
 1613              	.LVL138:
 1614              	.LFB1462:
 886:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 887:Src/pwm_curr_fdbk.c ****   }
 888:Src/pwm_curr_fdbk.c **** #endif
 889:Src/pwm_curr_fdbk.c **** }
 890:Src/pwm_curr_fdbk.c **** 
 891:Src/pwm_curr_fdbk.c **** /**
 892:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to get phases current.
 893:Src/pwm_curr_fdbk.c ****  *
 894:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback to get the phase current.
 895:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
 896:Src/pwm_curr_fdbk.c ****  */
 897:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterGetPhaseCurrentsCallBack(PWMC_GetPhaseCurr_Cb_t pCallBack, PWMC_Handle_t *
 898:Src/pwm_curr_fdbk.c **** {
 1615              		.loc 1 898 1 is_stmt 1 view -0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 899:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 900:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 901:Src/pwm_curr_fdbk.c ****   {
 902:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 903:Src/pwm_curr_fdbk.c ****   }
 904:Src/pwm_curr_fdbk.c ****   else
 905:Src/pwm_curr_fdbk.c ****   {
ARM GAS  /tmp/cctuhtEr.s 			page 66


 906:Src/pwm_curr_fdbk.c **** #endif
 907:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetPhaseCurrents = pCallBack;
 1620              		.loc 1 907 5 view .LVU507
 1621              		.loc 1 907 35 is_stmt 0 view .LVU508
 1622 0000 0860     		str	r0, [r1]
 908:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 909:Src/pwm_curr_fdbk.c ****   }
 910:Src/pwm_curr_fdbk.c **** #endif
 911:Src/pwm_curr_fdbk.c **** }
 1623              		.loc 1 911 1 view .LVU509
 1624 0002 7047     		bx	lr
 1625              		.cfi_endproc
 1626              	.LFE1462:
 1628              		.section	.text.PWMC_RegisterSwitchOffPwmCallBack,"ax",%progbits
 1629              		.align	1
 1630              		.p2align 2,,3
 1631              		.weak	PWMC_RegisterSwitchOffPwmCallBack
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu fpv4-sp-d16
 1637              	PWMC_RegisterSwitchOffPwmCallBack:
 1638              	.LVL139:
 1639              	.LFB1463:
 912:Src/pwm_curr_fdbk.c **** 
 913:Src/pwm_curr_fdbk.c **** /**
 914:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to switch PWM
 915:Src/pwm_curr_fdbk.c ****  *        generation off.
 916:Src/pwm_curr_fdbk.c ****  *
 917:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
 918:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
 919:Src/pwm_curr_fdbk.c ****  */
 920:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSwitchOffPwmCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHandle)
 921:Src/pwm_curr_fdbk.c **** {
 1640              		.loc 1 921 1 is_stmt 1 view -0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              		@ link register save eliminated.
 922:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 923:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 924:Src/pwm_curr_fdbk.c ****   {
 925:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 926:Src/pwm_curr_fdbk.c ****   }
 927:Src/pwm_curr_fdbk.c ****   else
 928:Src/pwm_curr_fdbk.c ****   {
 929:Src/pwm_curr_fdbk.c **** #endif
 930:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOffPwm = pCallBack;
 1645              		.loc 1 930 5 view .LVU511
 1646              		.loc 1 930 31 is_stmt 0 view .LVU512
 1647 0000 4860     		str	r0, [r1, #4]
 931:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 932:Src/pwm_curr_fdbk.c ****   }
 933:Src/pwm_curr_fdbk.c **** #endif
 934:Src/pwm_curr_fdbk.c **** }
 1648              		.loc 1 934 1 view .LVU513
 1649 0002 7047     		bx	lr
ARM GAS  /tmp/cctuhtEr.s 			page 67


 1650              		.cfi_endproc
 1651              	.LFE1463:
 1653              		.section	.text.PWMC_RegisterSwitchonPwmCallBack,"ax",%progbits
 1654              		.align	1
 1655              		.p2align 2,,3
 1656              		.weak	PWMC_RegisterSwitchonPwmCallBack
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1660              		.fpu fpv4-sp-d16
 1662              	PWMC_RegisterSwitchonPwmCallBack:
 1663              	.LVL140:
 1664              	.LFB1464:
 935:Src/pwm_curr_fdbk.c **** 
 936:Src/pwm_curr_fdbk.c **** /**
 937:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to switch PWM
 938:Src/pwm_curr_fdbk.c ****  *        generation on.
 939:Src/pwm_curr_fdbk.c ****  *
 940:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
 941:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
 942:Src/pwm_curr_fdbk.c ****  */
 943:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSwitchonPwmCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHandle)
 944:Src/pwm_curr_fdbk.c **** {
 1665              		.loc 1 944 1 is_stmt 1 view -0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 0
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669              		@ link register save eliminated.
 945:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 946:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 947:Src/pwm_curr_fdbk.c ****   {
 948:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 949:Src/pwm_curr_fdbk.c ****   }
 950:Src/pwm_curr_fdbk.c ****   else
 951:Src/pwm_curr_fdbk.c ****   {
 952:Src/pwm_curr_fdbk.c **** #endif
 953:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOnPwm = pCallBack;
 1670              		.loc 1 953 5 view .LVU515
 1671              		.loc 1 953 30 is_stmt 0 view .LVU516
 1672 0000 8860     		str	r0, [r1, #8]
 954:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 955:Src/pwm_curr_fdbk.c ****   }
 956:Src/pwm_curr_fdbk.c **** #endif
 957:Src/pwm_curr_fdbk.c **** }
 1673              		.loc 1 957 1 view .LVU517
 1674 0002 7047     		bx	lr
 1675              		.cfi_endproc
 1676              	.LFE1464:
 1678              		.section	.text.PWMC_RegisterReadingCalibrationCallBack,"ax",%progbits
 1679              		.align	1
 1680              		.p2align 2,,3
 1681              		.weak	PWMC_RegisterReadingCalibrationCallBack
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu fpv4-sp-d16
 1687              	PWMC_RegisterReadingCalibrationCallBack:
ARM GAS  /tmp/cctuhtEr.s 			page 68


 1688              	.LVL141:
 1689              	.LFB1465:
 958:Src/pwm_curr_fdbk.c **** 
 959:Src/pwm_curr_fdbk.c **** /**
 960:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to execute a calibration
 961:Src/pwm_curr_fdbk.c ****  *        of the current sensing system.
 962:Src/pwm_curr_fdbk.c ****  *
 963:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
 964:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
 965:Src/pwm_curr_fdbk.c ****  */
 966:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterReadingCalibrationCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHa
 967:Src/pwm_curr_fdbk.c **** {
 1690              		.loc 1 967 1 is_stmt 1 view -0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
 968:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 969:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 970:Src/pwm_curr_fdbk.c ****   {
 971:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 972:Src/pwm_curr_fdbk.c ****   }
 973:Src/pwm_curr_fdbk.c ****   else
 974:Src/pwm_curr_fdbk.c ****   {
 975:Src/pwm_curr_fdbk.c **** #endif
 976:Src/pwm_curr_fdbk.c ****     pHandle->pFctCurrReadingCalib = pCallBack;
 1695              		.loc 1 976 5 view .LVU519
 1696              		.loc 1 976 35 is_stmt 0 view .LVU520
 1697 0000 C860     		str	r0, [r1, #12]
 977:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 978:Src/pwm_curr_fdbk.c ****   }
 979:Src/pwm_curr_fdbk.c **** #endif
 980:Src/pwm_curr_fdbk.c **** }
 1698              		.loc 1 980 1 view .LVU521
 1699 0002 7047     		bx	lr
 1700              		.cfi_endproc
 1701              	.LFE1465:
 1703              		.section	.text.PWMC_RegisterTurnOnLowSidesCallBack,"ax",%progbits
 1704              		.align	1
 1705              		.p2align 2,,3
 1706              		.weak	PWMC_RegisterTurnOnLowSidesCallBack
 1707              		.syntax unified
 1708              		.thumb
 1709              		.thumb_func
 1710              		.fpu fpv4-sp-d16
 1712              	PWMC_RegisterTurnOnLowSidesCallBack:
 1713              	.LVL142:
 1714              	.LFB1466:
 981:Src/pwm_curr_fdbk.c **** 
 982:Src/pwm_curr_fdbk.c **** /**
 983:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to turn low sides on.
 984:Src/pwm_curr_fdbk.c ****  *
 985:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which turns low sides on.
 986:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
 987:Src/pwm_curr_fdbk.c ****  */
 988:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterTurnOnLowSidesCallBack(PWMC_TurnOnLowSides_Cb_t pCallBack, PWMC_Handle_t *
 989:Src/pwm_curr_fdbk.c **** {
ARM GAS  /tmp/cctuhtEr.s 			page 69


 1715              		.loc 1 989 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 990:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 991:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 992:Src/pwm_curr_fdbk.c ****   {
 993:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 994:Src/pwm_curr_fdbk.c ****   }
 995:Src/pwm_curr_fdbk.c ****   else
 996:Src/pwm_curr_fdbk.c ****   {
 997:Src/pwm_curr_fdbk.c **** #endif
 998:Src/pwm_curr_fdbk.c ****     pHandle->pFctTurnOnLowSides = pCallBack;
 1720              		.loc 1 998 5 view .LVU523
 1721              		.loc 1 998 33 is_stmt 0 view .LVU524
 1722 0000 0861     		str	r0, [r1, #16]
 999:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1000:Src/pwm_curr_fdbk.c ****   }
1001:Src/pwm_curr_fdbk.c **** #endif
1002:Src/pwm_curr_fdbk.c **** }
 1723              		.loc 1 1002 1 view .LVU525
 1724 0002 7047     		bx	lr
 1725              		.cfi_endproc
 1726              	.LFE1466:
 1728              		.section	.text.PWMC_RegisterSampPointSectXCallBack,"ax",%progbits
 1729              		.align	1
 1730              		.p2align 2,,3
 1731              		.weak	PWMC_RegisterSampPointSectXCallBack
 1732              		.syntax unified
 1733              		.thumb
 1734              		.thumb_func
 1735              		.fpu fpv4-sp-d16
 1737              	PWMC_RegisterSampPointSectXCallBack:
 1738              	.LVL143:
 1739              	.LFB1467:
1003:Src/pwm_curr_fdbk.c **** 
1004:Src/pwm_curr_fdbk.c **** /**
1005:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to compute ADC sampling point.
1006:Src/pwm_curr_fdbk.c ****  *
1007:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the sampling point depending on the sector.
1008:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1009:Src/pwm_curr_fdbk.c ****  */
1010:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSampPointSectXCallBack(PWMC_SetSampPointSectX_Cb_t pCallBack, PWMC_Handle_
1011:Src/pwm_curr_fdbk.c **** {
 1740              		.loc 1 1011 1 is_stmt 1 view -0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              		@ link register save eliminated.
1012:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1013:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1014:Src/pwm_curr_fdbk.c ****   {
1015:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1016:Src/pwm_curr_fdbk.c ****   }
1017:Src/pwm_curr_fdbk.c ****   else
1018:Src/pwm_curr_fdbk.c ****   {
ARM GAS  /tmp/cctuhtEr.s 			page 70


1019:Src/pwm_curr_fdbk.c **** #endif
1020:Src/pwm_curr_fdbk.c ****     pHandle->pFctSetADCSampPointSectX = pCallBack;
 1745              		.loc 1 1020 5 view .LVU527
 1746              		.loc 1 1020 39 is_stmt 0 view .LVU528
 1747 0000 4861     		str	r0, [r1, #20]
1021:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1022:Src/pwm_curr_fdbk.c ****   }
1023:Src/pwm_curr_fdbk.c **** #endif
1024:Src/pwm_curr_fdbk.c **** }
 1748              		.loc 1 1024 1 view .LVU529
 1749 0002 7047     		bx	lr
 1750              		.cfi_endproc
 1751              	.LFE1467:
 1753              		.section	.text.PWMC_RegisterOCPSetRefVoltageCallBack,"ax",%progbits
 1754              		.align	1
 1755              		.p2align 2,,3
 1756              		.weak	PWMC_RegisterOCPSetRefVoltageCallBack
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu fpv4-sp-d16
 1762              	PWMC_RegisterOCPSetRefVoltageCallBack:
 1763              	.LVL144:
 1764              	.LFB1468:
1025:Src/pwm_curr_fdbk.c **** 
1026:Src/pwm_curr_fdbk.c **** /**
1027:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to set the reference
1028:Src/pwm_curr_fdbk.c ****  *        voltage for the overcurrent protection.
1029:Src/pwm_curr_fdbk.c ****  *
1030:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the reference voltage.
1031:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1032:Src/pwm_curr_fdbk.c ****  */
1033:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterOCPSetRefVoltageCallBack(PWMC_SetOcpRefVolt_Cb_t pCallBack, PWMC_Handle_t 
1034:Src/pwm_curr_fdbk.c **** {
 1765              		.loc 1 1034 1 is_stmt 1 view -0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 0, uses_anonymous_args = 0
 1769              		@ link register save eliminated.
1035:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1036:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1037:Src/pwm_curr_fdbk.c ****   {
1038:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1039:Src/pwm_curr_fdbk.c ****   }
1040:Src/pwm_curr_fdbk.c ****   else
1041:Src/pwm_curr_fdbk.c ****   {
1042:Src/pwm_curr_fdbk.c **** #endif
1043:Src/pwm_curr_fdbk.c ****     pHandle->pFctOCPSetReferenceVoltage = pCallBack;
 1770              		.loc 1 1043 5 view .LVU531
 1771              		.loc 1 1043 41 is_stmt 0 view .LVU532
 1772 0000 8861     		str	r0, [r1, #24]
1044:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1045:Src/pwm_curr_fdbk.c ****   }
1046:Src/pwm_curr_fdbk.c **** #endif
1047:Src/pwm_curr_fdbk.c **** }
 1773              		.loc 1 1047 1 view .LVU533
 1774 0002 7047     		bx	lr
ARM GAS  /tmp/cctuhtEr.s 			page 71


 1775              		.cfi_endproc
 1776              	.LFE1468:
 1778              		.section	.text.PWMC_RegisterRLDetectionModeEnableCallBack,"ax",%progbits
 1779              		.align	1
 1780              		.p2align 2,,3
 1781              		.weak	PWMC_RegisterRLDetectionModeEnableCallBack
 1782              		.syntax unified
 1783              		.thumb
 1784              		.thumb_func
 1785              		.fpu fpv4-sp-d16
 1787              	PWMC_RegisterRLDetectionModeEnableCallBack:
 1788              	.LVL145:
 1789              	.LFB1469:
1048:Src/pwm_curr_fdbk.c **** 
1049:Src/pwm_curr_fdbk.c **** /**
1050:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to enable the R/L detection mode.
1051:Src/pwm_curr_fdbk.c ****  *
1052:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1053:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1054:Src/pwm_curr_fdbk.c ****  */
1055:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeEnableCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *
1056:Src/pwm_curr_fdbk.c **** {
 1790              		.loc 1 1056 1 is_stmt 1 view -0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 0, uses_anonymous_args = 0
 1794              		@ link register save eliminated.
1057:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1058:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1059:Src/pwm_curr_fdbk.c ****   {
1060:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1061:Src/pwm_curr_fdbk.c ****   }
1062:Src/pwm_curr_fdbk.c ****   else
1063:Src/pwm_curr_fdbk.c ****   {
1064:Src/pwm_curr_fdbk.c **** #endif
1065:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeEnable = pCallBack;
 1795              		.loc 1 1065 5 view .LVU535
 1796              		.loc 1 1065 40 is_stmt 0 view .LVU536
 1797 0000 C861     		str	r0, [r1, #28]
1066:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1067:Src/pwm_curr_fdbk.c ****   }
1068:Src/pwm_curr_fdbk.c **** #endif
1069:Src/pwm_curr_fdbk.c **** }
 1798              		.loc 1 1069 1 view .LVU537
 1799 0002 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE1469:
 1803              		.section	.text.PWMC_RegisterRLDetectionModeDisableCallBack,"ax",%progbits
 1804              		.align	1
 1805              		.p2align 2,,3
 1806              		.weak	PWMC_RegisterRLDetectionModeDisableCallBack
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv4-sp-d16
 1812              	PWMC_RegisterRLDetectionModeDisableCallBack:
 1813              	.LVL146:
ARM GAS  /tmp/cctuhtEr.s 			page 72


 1814              	.LFB1470:
1070:Src/pwm_curr_fdbk.c **** 
1071:Src/pwm_curr_fdbk.c **** /**
1072:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to disable the R/L detection mode.
1073:Src/pwm_curr_fdbk.c ****  *
1074:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1075:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1076:Src/pwm_curr_fdbk.c ****  */
1077:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeDisableCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t 
1078:Src/pwm_curr_fdbk.c **** {
 1815              		.loc 1 1078 1 is_stmt 1 view -0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
1079:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1080:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1081:Src/pwm_curr_fdbk.c ****   {
1082:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1083:Src/pwm_curr_fdbk.c ****   }
1084:Src/pwm_curr_fdbk.c ****   else
1085:Src/pwm_curr_fdbk.c ****   {
1086:Src/pwm_curr_fdbk.c **** #endif
1087:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeDisable = pCallBack;
 1820              		.loc 1 1087 5 view .LVU539
 1821              		.loc 1 1087 41 is_stmt 0 view .LVU540
 1822 0000 0862     		str	r0, [r1, #32]
1088:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1089:Src/pwm_curr_fdbk.c ****   }
1090:Src/pwm_curr_fdbk.c **** #endif
1091:Src/pwm_curr_fdbk.c **** }
 1823              		.loc 1 1091 1 view .LVU541
 1824 0002 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE1470:
 1828              		.section	.text.PWMC_RegisterRLDetectionModeSetDutyCallBack,"ax",%progbits
 1829              		.align	1
 1830              		.p2align 2,,3
 1831              		.weak	PWMC_RegisterRLDetectionModeSetDutyCallBack
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1835              		.fpu fpv4-sp-d16
 1837              	PWMC_RegisterRLDetectionModeSetDutyCallBack:
 1838              	.LVL147:
 1839              	.LFB1471:
1092:Src/pwm_curr_fdbk.c **** 
1093:Src/pwm_curr_fdbk.c **** /**
1094:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to set the duty cycle
1095:Src/pwm_curr_fdbk.c ****  *        for the R/L detection mode.
1096:Src/pwm_curr_fdbk.c ****  *
1097:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the duty cycle.
1098:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1099:Src/pwm_curr_fdbk.c ****  */
1100:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeSetDutyCallBack(PWMC_RLDetectSetDuty_Cb_t pCallBack, PWMC_H
1101:Src/pwm_curr_fdbk.c **** {
 1840              		.loc 1 1101 1 is_stmt 1 view -0
ARM GAS  /tmp/cctuhtEr.s 			page 73


 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844              		@ link register save eliminated.
1102:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1103:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1104:Src/pwm_curr_fdbk.c ****   {
1105:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1106:Src/pwm_curr_fdbk.c ****   }
1107:Src/pwm_curr_fdbk.c ****   else
1108:Src/pwm_curr_fdbk.c ****   {
1109:Src/pwm_curr_fdbk.c **** #endif
1110:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeSetDuty = pCallBack;
 1845              		.loc 1 1110 5 view .LVU543
 1846              		.loc 1 1110 41 is_stmt 0 view .LVU544
 1847 0000 4862     		str	r0, [r1, #36]
1111:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1112:Src/pwm_curr_fdbk.c ****   }
1113:Src/pwm_curr_fdbk.c **** #endif
1114:Src/pwm_curr_fdbk.c **** }
 1848              		.loc 1 1114 1 view .LVU545
 1849 0002 7047     		bx	lr
 1850              		.cfi_endproc
 1851              	.LFE1471:
 1853              		.text
 1854              	.Letext0:
 1855              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1856              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1857              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1858              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1859              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1860              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1861              		.file 9 "Inc/mc_type.h"
 1862              		.file 10 "Inc/pwm_curr_fdbk.h"
 1863              		.file 11 "Inc/mc_math.h"
ARM GAS  /tmp/cctuhtEr.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pwm_curr_fdbk.c
     /tmp/cctuhtEr.s:18     .text.PWMC_Clear:0000000000000000 $t
     /tmp/cctuhtEr.s:27     .text.PWMC_Clear:0000000000000000 PWMC_Clear
     /tmp/cctuhtEr.s:54     .text.PWMC_SetOffsetCalib:0000000000000000 $t
     /tmp/cctuhtEr.s:62     .text.PWMC_SetOffsetCalib:0000000000000000 PWMC_SetOffsetCalib
     /tmp/cctuhtEr.s:84     .text.PWMC_GetOffsetCalib:0000000000000000 $t
     /tmp/cctuhtEr.s:92     .text.PWMC_GetOffsetCalib:0000000000000000 PWMC_GetOffsetCalib
     /tmp/cctuhtEr.s:114    .text.PWMC_SetPhaseVoltage:0000000000000000 $t
     /tmp/cctuhtEr.s:122    .text.PWMC_SetPhaseVoltage:0000000000000000 PWMC_SetPhaseVoltage
     /tmp/cctuhtEr.s:682    .text.PWMC_SetPhaseVoltage:00000000000002c8 $d
     /tmp/cctuhtEr.s:688    .text.PWMC_SwitchOffPWM:0000000000000000 $t
     /tmp/cctuhtEr.s:696    .text.PWMC_SwitchOffPWM:0000000000000000 PWMC_SwitchOffPWM
     /tmp/cctuhtEr.s:713    .text.PWMC_SwitchOnPWM:0000000000000000 $t
     /tmp/cctuhtEr.s:721    .text.PWMC_SwitchOnPWM:0000000000000000 PWMC_SwitchOnPWM
     /tmp/cctuhtEr.s:738    .text.PWMC_CurrentReadingCalibr:0000000000000000 $t
     /tmp/cctuhtEr.s:746    .text.PWMC_CurrentReadingCalibr:0000000000000000 PWMC_CurrentReadingCalibr
     /tmp/cctuhtEr.s:856    .text.PWMC_CalcPhaseCurrentsEst:0000000000000000 $t
     /tmp/cctuhtEr.s:864    .text.PWMC_CalcPhaseCurrentsEst:0000000000000000 PWMC_CalcPhaseCurrentsEst
     /tmp/cctuhtEr.s:1006   .text.PWMC_TurnOnLowSides:0000000000000000 $t
     /tmp/cctuhtEr.s:1014   .text.PWMC_TurnOnLowSides:0000000000000000 PWMC_TurnOnLowSides
     /tmp/cctuhtEr.s:1031   .text.PWMC_OCP_Handler:0000000000000000 $t
     /tmp/cctuhtEr.s:1039   .text.PWMC_OCP_Handler:0000000000000000 PWMC_OCP_Handler
     /tmp/cctuhtEr.s:1153   .text.PWMC_DP_Handler:0000000000000000 $t
     /tmp/cctuhtEr.s:1161   .text.PWMC_DP_Handler:0000000000000000 PWMC_DP_Handler
     /tmp/cctuhtEr.s:1274   .text.PWMC_OVP_Handler:0000000000000000 $t
     /tmp/cctuhtEr.s:1282   .text.PWMC_OVP_Handler:0000000000000000 PWMC_OVP_Handler
     /tmp/cctuhtEr.s:1319   .text.PWMC_IsFaultOccurred:0000000000000000 $t
     /tmp/cctuhtEr.s:1327   .text.PWMC_IsFaultOccurred:0000000000000000 PWMC_IsFaultOccurred
     /tmp/cctuhtEr.s:1400   .text.PWMC_OCPSetReferenceVoltage:0000000000000000 $t
     /tmp/cctuhtEr.s:1408   .text.PWMC_OCPSetReferenceVoltage:0000000000000000 PWMC_OCPSetReferenceVoltage
     /tmp/cctuhtEr.s:1425   .text.PWMC_DPWM_ModeEnable:0000000000000000 $t
     /tmp/cctuhtEr.s:1433   .text.PWMC_DPWM_ModeEnable:0000000000000000 PWMC_DPWM_ModeEnable
     /tmp/cctuhtEr.s:1451   .text.PWMC_DPWM_ModeDisable:0000000000000000 $t
     /tmp/cctuhtEr.s:1459   .text.PWMC_DPWM_ModeDisable:0000000000000000 PWMC_DPWM_ModeDisable
     /tmp/cctuhtEr.s:1477   .text.PWMC_GetDPWM_Mode:0000000000000000 $t
     /tmp/cctuhtEr.s:1485   .text.PWMC_GetDPWM_Mode:0000000000000000 PWMC_GetDPWM_Mode
     /tmp/cctuhtEr.s:1503   .text.PWMC_RLDetectionModeEnable:0000000000000000 $t
     /tmp/cctuhtEr.s:1511   .text.PWMC_RLDetectionModeEnable:0000000000000000 PWMC_RLDetectionModeEnable
     /tmp/cctuhtEr.s:1528   .text.PWMC_RLDetectionModeDisable:0000000000000000 $t
     /tmp/cctuhtEr.s:1536   .text.PWMC_RLDetectionModeDisable:0000000000000000 PWMC_RLDetectionModeDisable
     /tmp/cctuhtEr.s:1553   .text.PWMC_RLDetectionModeSetDuty:0000000000000000 $t
     /tmp/cctuhtEr.s:1561   .text.PWMC_RLDetectionModeSetDuty:0000000000000000 PWMC_RLDetectionModeSetDuty
     /tmp/cctuhtEr.s:1579   .text.PWMC_RLTurnOnLowSidesAndStart:0000000000000000 $t
     /tmp/cctuhtEr.s:1587   .text.PWMC_RLTurnOnLowSidesAndStart:0000000000000000 PWMC_RLTurnOnLowSidesAndStart
     /tmp/cctuhtEr.s:1604   .text.PWMC_RegisterGetPhaseCurrentsCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1612   .text.PWMC_RegisterGetPhaseCurrentsCallBack:0000000000000000 PWMC_RegisterGetPhaseCurrentsCallBack
     /tmp/cctuhtEr.s:1629   .text.PWMC_RegisterSwitchOffPwmCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1637   .text.PWMC_RegisterSwitchOffPwmCallBack:0000000000000000 PWMC_RegisterSwitchOffPwmCallBack
     /tmp/cctuhtEr.s:1654   .text.PWMC_RegisterSwitchonPwmCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1662   .text.PWMC_RegisterSwitchonPwmCallBack:0000000000000000 PWMC_RegisterSwitchonPwmCallBack
     /tmp/cctuhtEr.s:1679   .text.PWMC_RegisterReadingCalibrationCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1687   .text.PWMC_RegisterReadingCalibrationCallBack:0000000000000000 PWMC_RegisterReadingCalibrationCallBack
     /tmp/cctuhtEr.s:1704   .text.PWMC_RegisterTurnOnLowSidesCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1712   .text.PWMC_RegisterTurnOnLowSidesCallBack:0000000000000000 PWMC_RegisterTurnOnLowSidesCallBack
     /tmp/cctuhtEr.s:1729   .text.PWMC_RegisterSampPointSectXCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1737   .text.PWMC_RegisterSampPointSectXCallBack:0000000000000000 PWMC_RegisterSampPointSectXCallBack
ARM GAS  /tmp/cctuhtEr.s 			page 75


     /tmp/cctuhtEr.s:1754   .text.PWMC_RegisterOCPSetRefVoltageCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1762   .text.PWMC_RegisterOCPSetRefVoltageCallBack:0000000000000000 PWMC_RegisterOCPSetRefVoltageCallBack
     /tmp/cctuhtEr.s:1779   .text.PWMC_RegisterRLDetectionModeEnableCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1787   .text.PWMC_RegisterRLDetectionModeEnableCallBack:0000000000000000 PWMC_RegisterRLDetectionModeEnableCallBack
     /tmp/cctuhtEr.s:1804   .text.PWMC_RegisterRLDetectionModeDisableCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1812   .text.PWMC_RegisterRLDetectionModeDisableCallBack:0000000000000000 PWMC_RegisterRLDetectionModeDisableCallBack
     /tmp/cctuhtEr.s:1829   .text.PWMC_RegisterRLDetectionModeSetDutyCallBack:0000000000000000 $t
     /tmp/cctuhtEr.s:1837   .text.PWMC_RegisterRLDetectionModeSetDutyCallBack:0000000000000000 PWMC_RegisterRLDetectionModeSetDutyCallBack

UNDEFINED SYMBOLS
MCM_Rev_Park
