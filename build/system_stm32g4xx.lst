ARM GAS  /tmp/ccds2bJJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"system_stm32g4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 0024F400 		.word	16000000
  24              		.global	AHBPrescTable
  25              		.section	.rodata.AHBPrescTable,"a"
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  30      00000000 
  30      01020304 
  30      06
  31 000d 070809   		.ascii	"\007\010\011"
  32              		.global	APBPrescTable
  33              		.section	.rodata.APBPrescTable,"a"
  34              		.align	2
  37              	APBPrescTable:
  38 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  38      01020304 
  39              		.section	.text.SystemInit,"ax",%progbits
  40              		.align	1
  41              		.global	SystemInit
  42              		.arch armv7e-m
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemInit:
  49              	.LFB132:
  50              		.file 1 "Src/system_stm32g4xx.c"
   1:Src/system_stm32g4xx.c **** /**
   2:Src/system_stm32g4xx.c ****   ******************************************************************************
   3:Src/system_stm32g4xx.c ****   * @file    system_stm32g4xx.c
   4:Src/system_stm32g4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32g4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32g4xx.c ****   *
   7:Src/system_stm32g4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32g4xx.c ****   *   user application:
   9:Src/system_stm32g4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32g4xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  /tmp/ccds2bJJ.s 			page 2


  11:Src/system_stm32g4xx.c ****   *                      the "startup_stm32g4xx.s" file.
  12:Src/system_stm32g4xx.c ****   *
  13:Src/system_stm32g4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32g4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32g4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32g4xx.c ****   *
  17:Src/system_stm32g4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32g4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32g4xx.c ****   *                                 during program execution.
  20:Src/system_stm32g4xx.c ****   *
  21:Src/system_stm32g4xx.c ****   *   After each device reset the HSI (16 MHz) is used as system clock source.
  22:Src/system_stm32g4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g4xx.s" file, to
  23:Src/system_stm32g4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32g4xx.c ****   *
  25:Src/system_stm32g4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32g4xx.c ****   *=============================================================================
  27:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32g4xx.c ****   *        System Clock source                    | HSI
  29:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32g4xx.c ****   *        SYSCLK(Hz)                             | 16000000
  31:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32g4xx.c ****   *        HCLK(Hz)                               | 16000000
  33:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32g4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32g4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32g4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32g4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32g4xx.c ****   *        PLL_N                                  | 16
  43:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32g4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32g4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32g4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32g4xx.c ****   *        Require 48MHz for RNG                  | Disabled
  51:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32g4xx.c ****   *=============================================================================
  53:Src/system_stm32g4xx.c ****   ******************************************************************************
  54:Src/system_stm32g4xx.c ****   * @attention
  55:Src/system_stm32g4xx.c ****   *
  56:Src/system_stm32g4xx.c ****   * Copyright (c) 2019 STMicroelectronics.
  57:Src/system_stm32g4xx.c ****   * All rights reserved.
  58:Src/system_stm32g4xx.c ****   *
  59:Src/system_stm32g4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  60:Src/system_stm32g4xx.c ****   * in the root directory of this software component.
  61:Src/system_stm32g4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  62:Src/system_stm32g4xx.c ****   *
  63:Src/system_stm32g4xx.c ****   ******************************************************************************
  64:Src/system_stm32g4xx.c ****   */
  65:Src/system_stm32g4xx.c **** 
  66:Src/system_stm32g4xx.c **** /** @addtogroup CMSIS
  67:Src/system_stm32g4xx.c ****   * @{
ARM GAS  /tmp/ccds2bJJ.s 			page 3


  68:Src/system_stm32g4xx.c ****   */
  69:Src/system_stm32g4xx.c **** 
  70:Src/system_stm32g4xx.c **** /** @addtogroup stm32g4xx_system
  71:Src/system_stm32g4xx.c ****   * @{
  72:Src/system_stm32g4xx.c ****   */
  73:Src/system_stm32g4xx.c **** 
  74:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Includes
  75:Src/system_stm32g4xx.c ****   * @{
  76:Src/system_stm32g4xx.c ****   */
  77:Src/system_stm32g4xx.c **** 
  78:Src/system_stm32g4xx.c **** #include "stm32g4xx.h"
  79:Src/system_stm32g4xx.c **** 
  80:Src/system_stm32g4xx.c **** #if !defined  (HSE_VALUE)
  81:Src/system_stm32g4xx.c ****   #define HSE_VALUE     24000000U /*!< Value of the External oscillator in Hz */
  82:Src/system_stm32g4xx.c **** #endif /* HSE_VALUE */
  83:Src/system_stm32g4xx.c **** 
  84:Src/system_stm32g4xx.c **** #if !defined  (HSI_VALUE)
  85:Src/system_stm32g4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
  86:Src/system_stm32g4xx.c **** #endif /* HSI_VALUE */
  87:Src/system_stm32g4xx.c **** 
  88:Src/system_stm32g4xx.c **** /**
  89:Src/system_stm32g4xx.c ****   * @}
  90:Src/system_stm32g4xx.c ****   */
  91:Src/system_stm32g4xx.c **** 
  92:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_TypesDefinitions
  93:Src/system_stm32g4xx.c ****   * @{
  94:Src/system_stm32g4xx.c ****   */
  95:Src/system_stm32g4xx.c **** 
  96:Src/system_stm32g4xx.c **** /**
  97:Src/system_stm32g4xx.c ****   * @}
  98:Src/system_stm32g4xx.c ****   */
  99:Src/system_stm32g4xx.c **** 
 100:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Defines
 101:Src/system_stm32g4xx.c ****   * @{
 102:Src/system_stm32g4xx.c ****   */
 103:Src/system_stm32g4xx.c **** 
 104:Src/system_stm32g4xx.c **** /************************* Miscellaneous Configuration ************************/
 105:Src/system_stm32g4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 106:Src/system_stm32g4xx.c ****          configuration. */
 107:Src/system_stm32g4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 108:Src/system_stm32g4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 109:Src/system_stm32g4xx.c ****      remap of boot address selected */
 110:Src/system_stm32g4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 111:Src/system_stm32g4xx.c **** 
 112:Src/system_stm32g4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 113:Src/system_stm32g4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 114:Src/system_stm32g4xx.c ****      in Sram else user remap will be done in Flash. */
 115:Src/system_stm32g4xx.c **** /* #define VECT_TAB_SRAM */
 116:Src/system_stm32g4xx.c **** #if defined(VECT_TAB_SRAM)
 117:Src/system_stm32g4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 118:Src/system_stm32g4xx.c ****                                                      This value must be a multiple of 0x200. */
 119:Src/system_stm32g4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 120:Src/system_stm32g4xx.c ****                                                      This value must be a multiple of 0x200. */
 121:Src/system_stm32g4xx.c **** #else
 122:Src/system_stm32g4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 123:Src/system_stm32g4xx.c ****                                                      This value must be a multiple of 0x200. */
 124:Src/system_stm32g4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
ARM GAS  /tmp/ccds2bJJ.s 			page 4


 125:Src/system_stm32g4xx.c ****                                                      This value must be a multiple of 0x200. */
 126:Src/system_stm32g4xx.c **** #endif /* VECT_TAB_SRAM */
 127:Src/system_stm32g4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 128:Src/system_stm32g4xx.c **** /******************************************************************************/
 129:Src/system_stm32g4xx.c **** /**
 130:Src/system_stm32g4xx.c ****   * @}
 131:Src/system_stm32g4xx.c ****   */
 132:Src/system_stm32g4xx.c **** 
 133:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Macros
 134:Src/system_stm32g4xx.c ****   * @{
 135:Src/system_stm32g4xx.c ****   */
 136:Src/system_stm32g4xx.c **** 
 137:Src/system_stm32g4xx.c **** /**
 138:Src/system_stm32g4xx.c ****   * @}
 139:Src/system_stm32g4xx.c ****   */
 140:Src/system_stm32g4xx.c **** 
 141:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Variables
 142:Src/system_stm32g4xx.c ****   * @{
 143:Src/system_stm32g4xx.c ****   */
 144:Src/system_stm32g4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 145:Src/system_stm32g4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 146:Src/system_stm32g4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 147:Src/system_stm32g4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 148:Src/system_stm32g4xx.c ****          Note: If you use this function to configure the system clock; then there
 149:Src/system_stm32g4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 150:Src/system_stm32g4xx.c ****                variable is updated automatically.
 151:Src/system_stm32g4xx.c ****   */
 152:Src/system_stm32g4xx.c ****   uint32_t SystemCoreClock = HSI_VALUE;
 153:Src/system_stm32g4xx.c **** 
 154:Src/system_stm32g4xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 155:Src/system_stm32g4xx.c ****   const uint8_t APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 156:Src/system_stm32g4xx.c **** 
 157:Src/system_stm32g4xx.c **** /**
 158:Src/system_stm32g4xx.c ****   * @}
 159:Src/system_stm32g4xx.c ****   */
 160:Src/system_stm32g4xx.c **** 
 161:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_FunctionPrototypes
 162:Src/system_stm32g4xx.c ****   * @{
 163:Src/system_stm32g4xx.c ****   */
 164:Src/system_stm32g4xx.c **** 
 165:Src/system_stm32g4xx.c **** /**
 166:Src/system_stm32g4xx.c ****   * @}
 167:Src/system_stm32g4xx.c ****   */
 168:Src/system_stm32g4xx.c **** 
 169:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Functions
 170:Src/system_stm32g4xx.c ****   * @{
 171:Src/system_stm32g4xx.c ****   */
 172:Src/system_stm32g4xx.c **** 
 173:Src/system_stm32g4xx.c **** /**
 174:Src/system_stm32g4xx.c ****   * @brief  Setup the microcontroller system.
 175:Src/system_stm32g4xx.c ****   * @param  None
 176:Src/system_stm32g4xx.c ****   * @retval None
 177:Src/system_stm32g4xx.c ****   */
 178:Src/system_stm32g4xx.c **** 
 179:Src/system_stm32g4xx.c **** void SystemInit(void)
 180:Src/system_stm32g4xx.c **** {
  51              		.loc 1 180 1
ARM GAS  /tmp/ccds2bJJ.s 			page 5


  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56 0000 80B4     		push	{r7}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 7, -4
  60 0002 00AF     		add	r7, sp, #0
  61              	.LCFI1:
  62              		.cfi_def_cfa_register 7
 181:Src/system_stm32g4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 182:Src/system_stm32g4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 183:Src/system_stm32g4xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  63              		.loc 1 183 16
  64 0004 064B     		ldr	r3, .L2
  65 0006 D3F88830 		ldr	r3, [r3, #136]
  66 000a 054A     		ldr	r2, .L2
  67 000c 43F47003 		orr	r3, r3, #15728640
  68 0010 C2F88830 		str	r3, [r2, #136]
 184:Src/system_stm32g4xx.c ****   #endif
 185:Src/system_stm32g4xx.c **** 
 186:Src/system_stm32g4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 187:Src/system_stm32g4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 188:Src/system_stm32g4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 189:Src/system_stm32g4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 190:Src/system_stm32g4xx.c **** }
  69              		.loc 1 190 1
  70 0014 00BF     		nop
  71 0016 BD46     		mov	sp, r7
  72              	.LCFI2:
  73              		.cfi_def_cfa_register 13
  74              		@ sp needed
  75 0018 5DF8047B 		ldr	r7, [sp], #4
  76              	.LCFI3:
  77              		.cfi_restore 7
  78              		.cfi_def_cfa_offset 0
  79 001c 7047     		bx	lr
  80              	.L3:
  81 001e 00BF     		.align	2
  82              	.L2:
  83 0020 00ED00E0 		.word	-536810240
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  88              		.align	1
  89              		.global	SystemCoreClockUpdate
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	SystemCoreClockUpdate:
  96              	.LFB133:
 191:Src/system_stm32g4xx.c **** 
 192:Src/system_stm32g4xx.c **** /**
 193:Src/system_stm32g4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 194:Src/system_stm32g4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
ARM GAS  /tmp/ccds2bJJ.s 			page 6


 195:Src/system_stm32g4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 196:Src/system_stm32g4xx.c ****   *         other parameters.
 197:Src/system_stm32g4xx.c ****   *
 198:Src/system_stm32g4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 199:Src/system_stm32g4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 200:Src/system_stm32g4xx.c ****   *         based on this variable will be incorrect.
 201:Src/system_stm32g4xx.c ****   *
 202:Src/system_stm32g4xx.c ****   * @note   - The system frequency computed by this function is not the real
 203:Src/system_stm32g4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 204:Src/system_stm32g4xx.c ****   *           constant and the selected clock source:
 205:Src/system_stm32g4xx.c ****   *
 206:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 207:Src/system_stm32g4xx.c ****   *
 208:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 209:Src/system_stm32g4xx.c ****   *
 210:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 211:Src/system_stm32g4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 212:Src/system_stm32g4xx.c ****   *
 213:Src/system_stm32g4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 214:Src/system_stm32g4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 215:Src/system_stm32g4xx.c ****   *              in voltage and temperature.
 216:Src/system_stm32g4xx.c ****   *
 217:Src/system_stm32g4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 218:Src/system_stm32g4xx.c ****   *              24 MHz), user has to ensure that HSE_VALUE is same as the real
 219:Src/system_stm32g4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 220:Src/system_stm32g4xx.c ****   *              have wrong result.
 221:Src/system_stm32g4xx.c ****   *
 222:Src/system_stm32g4xx.c ****   *         - The result of this function could be not correct when using fractional
 223:Src/system_stm32g4xx.c ****   *           value for HSE crystal.
 224:Src/system_stm32g4xx.c ****   *
 225:Src/system_stm32g4xx.c ****   * @param  None
 226:Src/system_stm32g4xx.c ****   * @retval None
 227:Src/system_stm32g4xx.c ****   */
 228:Src/system_stm32g4xx.c **** void SystemCoreClockUpdate(void)
 229:Src/system_stm32g4xx.c **** {
  97              		.loc 1 229 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 24
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              	.LCFI4:
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 87B0     		sub	sp, sp, #28
 107              	.LCFI5:
 108              		.cfi_def_cfa_offset 32
 109 0004 00AF     		add	r7, sp, #0
 110              	.LCFI6:
 111              		.cfi_def_cfa_register 7
 230:Src/system_stm32g4xx.c ****   uint32_t tmp, pllvco, pllr, pllsource, pllm;
 231:Src/system_stm32g4xx.c **** 
 232:Src/system_stm32g4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 233:Src/system_stm32g4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 112              		.loc 1 233 14
 113 0006 2E4B     		ldr	r3, .L13
 114 0008 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccds2bJJ.s 			page 7


 115              		.loc 1 233 21
 116 000a 03F00C03 		and	r3, r3, #12
 117              		.loc 1 233 3
 118 000e 0C2B     		cmp	r3, #12
 119 0010 0ED0     		beq	.L5
 120 0012 0C2B     		cmp	r3, #12
 121 0014 3ED8     		bhi	.L12
 122 0016 042B     		cmp	r3, #4
 123 0018 02D0     		beq	.L7
 124 001a 082B     		cmp	r3, #8
 125 001c 04D0     		beq	.L8
 234:Src/system_stm32g4xx.c ****   {
 235:Src/system_stm32g4xx.c ****     case 0x04:  /* HSI used as system clock source */
 236:Src/system_stm32g4xx.c ****       SystemCoreClock = HSI_VALUE;
 237:Src/system_stm32g4xx.c ****       break;
 238:Src/system_stm32g4xx.c **** 
 239:Src/system_stm32g4xx.c ****     case 0x08:  /* HSE used as system clock source */
 240:Src/system_stm32g4xx.c ****       SystemCoreClock = HSE_VALUE;
 241:Src/system_stm32g4xx.c ****       break;
 242:Src/system_stm32g4xx.c **** 
 243:Src/system_stm32g4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 244:Src/system_stm32g4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 245:Src/system_stm32g4xx.c ****          SYSCLK = PLL_VCO / PLLR
 246:Src/system_stm32g4xx.c ****          */
 247:Src/system_stm32g4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 248:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 249:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 250:Src/system_stm32g4xx.c ****       {
 251:Src/system_stm32g4xx.c ****         pllvco = (HSI_VALUE / pllm);
 252:Src/system_stm32g4xx.c ****       }
 253:Src/system_stm32g4xx.c ****       else                   /* HSE used as PLL clock source */
 254:Src/system_stm32g4xx.c ****       {
 255:Src/system_stm32g4xx.c ****         pllvco = (HSE_VALUE / pllm);
 256:Src/system_stm32g4xx.c ****       }
 257:Src/system_stm32g4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8);
 258:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 259:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 260:Src/system_stm32g4xx.c ****       break;
 261:Src/system_stm32g4xx.c **** 
 262:Src/system_stm32g4xx.c ****     default:
 263:Src/system_stm32g4xx.c ****       break;
 126              		.loc 1 263 7
 127 001e 39E0     		b	.L12
 128              	.L7:
 236:Src/system_stm32g4xx.c ****       break;
 129              		.loc 1 236 23
 130 0020 284B     		ldr	r3, .L13+4
 131 0022 294A     		ldr	r2, .L13+8
 132 0024 1A60     		str	r2, [r3]
 237:Src/system_stm32g4xx.c **** 
 133              		.loc 1 237 7
 134 0026 36E0     		b	.L9
 135              	.L8:
 240:Src/system_stm32g4xx.c ****       break;
 136              		.loc 1 240 23
 137 0028 264B     		ldr	r3, .L13+4
 138 002a 284A     		ldr	r2, .L13+12
ARM GAS  /tmp/ccds2bJJ.s 			page 8


 139 002c 1A60     		str	r2, [r3]
 241:Src/system_stm32g4xx.c **** 
 140              		.loc 1 241 7
 141 002e 32E0     		b	.L9
 142              	.L5:
 247:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 143              		.loc 1 247 23
 144 0030 234B     		ldr	r3, .L13
 145 0032 DB68     		ldr	r3, [r3, #12]
 247:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 146              		.loc 1 247 17
 147 0034 03F00303 		and	r3, r3, #3
 148 0038 3B61     		str	r3, [r7, #16]
 248:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 149              		.loc 1 248 19
 150 003a 214B     		ldr	r3, .L13
 151 003c DB68     		ldr	r3, [r3, #12]
 248:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 152              		.loc 1 248 49
 153 003e 1B09     		lsrs	r3, r3, #4
 154 0040 03F00F03 		and	r3, r3, #15
 248:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 155              		.loc 1 248 12
 156 0044 0133     		adds	r3, r3, #1
 157 0046 FB60     		str	r3, [r7, #12]
 249:Src/system_stm32g4xx.c ****       {
 158              		.loc 1 249 10
 159 0048 3B69     		ldr	r3, [r7, #16]
 160 004a 022B     		cmp	r3, #2
 161 004c 05D1     		bne	.L10
 251:Src/system_stm32g4xx.c ****       }
 162              		.loc 1 251 16
 163 004e 1E4A     		ldr	r2, .L13+8
 164 0050 FB68     		ldr	r3, [r7, #12]
 165 0052 B2FBF3F3 		udiv	r3, r2, r3
 166 0056 7B61     		str	r3, [r7, #20]
 167 0058 04E0     		b	.L11
 168              	.L10:
 255:Src/system_stm32g4xx.c ****       }
 169              		.loc 1 255 16
 170 005a 1C4A     		ldr	r2, .L13+12
 171 005c FB68     		ldr	r3, [r7, #12]
 172 005e B2FBF3F3 		udiv	r3, r2, r3
 173 0062 7B61     		str	r3, [r7, #20]
 174              	.L11:
 257:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 175              		.loc 1 257 30
 176 0064 164B     		ldr	r3, .L13
 177 0066 DB68     		ldr	r3, [r3, #12]
 257:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 178              		.loc 1 257 60
 179 0068 1B0A     		lsrs	r3, r3, #8
 180 006a 03F07F02 		and	r2, r3, #127
 257:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 181              		.loc 1 257 14
 182 006e 7B69     		ldr	r3, [r7, #20]
 183 0070 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/ccds2bJJ.s 			page 9


 184 0074 7B61     		str	r3, [r7, #20]
 258:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 185              		.loc 1 258 20
 186 0076 124B     		ldr	r3, .L13
 187 0078 DB68     		ldr	r3, [r3, #12]
 258:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 188              		.loc 1 258 50
 189 007a 5B0E     		lsrs	r3, r3, #25
 190 007c 03F00303 		and	r3, r3, #3
 258:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 191              		.loc 1 258 57
 192 0080 0133     		adds	r3, r3, #1
 258:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 193              		.loc 1 258 12
 194 0082 5B00     		lsls	r3, r3, #1
 195 0084 BB60     		str	r3, [r7, #8]
 259:Src/system_stm32g4xx.c ****       break;
 196              		.loc 1 259 31
 197 0086 7A69     		ldr	r2, [r7, #20]
 198 0088 BB68     		ldr	r3, [r7, #8]
 199 008a B2FBF3F3 		udiv	r3, r2, r3
 259:Src/system_stm32g4xx.c ****       break;
 200              		.loc 1 259 23
 201 008e 0D4A     		ldr	r2, .L13+4
 202 0090 1360     		str	r3, [r2]
 260:Src/system_stm32g4xx.c **** 
 203              		.loc 1 260 7
 204 0092 00E0     		b	.L9
 205              	.L12:
 206              		.loc 1 263 7
 207 0094 00BF     		nop
 208              	.L9:
 264:Src/system_stm32g4xx.c ****   }
 265:Src/system_stm32g4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 266:Src/system_stm32g4xx.c ****   /* Get HCLK prescaler */
 267:Src/system_stm32g4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 209              		.loc 1 267 28
 210 0096 0A4B     		ldr	r3, .L13
 211 0098 9B68     		ldr	r3, [r3, #8]
 212              		.loc 1 267 52
 213 009a 1B09     		lsrs	r3, r3, #4
 214 009c 03F00F03 		and	r3, r3, #15
 215              		.loc 1 267 22
 216 00a0 0B4A     		ldr	r2, .L13+16
 217 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 218              		.loc 1 267 7
 219 00a4 7B60     		str	r3, [r7, #4]
 268:Src/system_stm32g4xx.c ****   /* HCLK clock frequency */
 269:Src/system_stm32g4xx.c ****   SystemCoreClock >>= tmp;
 220              		.loc 1 269 19
 221 00a6 074B     		ldr	r3, .L13+4
 222 00a8 1A68     		ldr	r2, [r3]
 223 00aa 7B68     		ldr	r3, [r7, #4]
 224 00ac 22FA03F3 		lsr	r3, r2, r3
 225 00b0 044A     		ldr	r2, .L13+4
 226 00b2 1360     		str	r3, [r2]
 270:Src/system_stm32g4xx.c **** }
ARM GAS  /tmp/ccds2bJJ.s 			page 10


 227              		.loc 1 270 1
 228 00b4 00BF     		nop
 229 00b6 1C37     		adds	r7, r7, #28
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 4
 232 00b8 BD46     		mov	sp, r7
 233              	.LCFI8:
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 00ba 5DF8047B 		ldr	r7, [sp], #4
 237              	.LCFI9:
 238              		.cfi_restore 7
 239              		.cfi_def_cfa_offset 0
 240 00be 7047     		bx	lr
 241              	.L14:
 242              		.align	2
 243              	.L13:
 244 00c0 00100240 		.word	1073876992
 245 00c4 00000000 		.word	SystemCoreClock
 246 00c8 0024F400 		.word	16000000
 247 00cc 00127A00 		.word	8000000
 248 00d0 00000000 		.word	AHBPrescTable
 249              		.cfi_endproc
 250              	.LFE133:
 252              		.text
 253              	.Letext0:
 254              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 255              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 256              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 257              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 258              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
ARM GAS  /tmp/ccds2bJJ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32g4xx.c
     /tmp/ccds2bJJ.s:22     .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccds2bJJ.s:19     .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccds2bJJ.s:29     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccds2bJJ.s:26     .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccds2bJJ.s:37     .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccds2bJJ.s:34     .rodata.APBPrescTable:0000000000000000 $d
     /tmp/ccds2bJJ.s:40     .text.SystemInit:0000000000000000 $t
     /tmp/ccds2bJJ.s:48     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccds2bJJ.s:83     .text.SystemInit:0000000000000020 $d
     /tmp/ccds2bJJ.s:88     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccds2bJJ.s:95     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccds2bJJ.s:244    .text.SystemCoreClockUpdate:00000000000000c0 $d

NO UNDEFINED SYMBOLS
