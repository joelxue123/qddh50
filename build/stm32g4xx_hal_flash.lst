ARM GAS  /tmp/ccQC7VXM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32g4xx_hal_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_Program_Fast,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FLASH_Program_Fast:
  26              	.LVL0:
  27              	.LFB145:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @file    stm32g4xx_hal_flash.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           + Memory Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   @verbatim
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   ==============================================================================
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   ==============================================================================
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        prefetch and cache lines.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   [..] The FLASH main features are:
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) Flash memory read operations
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) Flash memory program/erase operations
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) Read / write protections
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) Option bytes programming
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) Prefetch on I-Code
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) 32 cache lines of 4*64 or 2*128 bits on I-Code
ARM GAS  /tmp/ccQC7VXM.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) 8 cache lines of 4*64 or 2*128 bits on D-Code
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 72-bits word
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****           (8 bits added per double word)
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                         ##### How to use this driver #####
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   ==============================================================================
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     [..]
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       memory of all STM32G4xx devices.
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Program functions: double word and fast program (full row programming)
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) There are two modes of programming :
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (#) Interrupts and flags management functions:
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       (#) Option bytes management functions:
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_Launch() function.
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                 In this case, a reset is generated
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     [..]
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       to handle the following operations:
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Set the latency
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Enable/Disable the Flash power-down during low-power run and sleep modes
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****        (+) Monitor the Flash flags status
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   @endverbatim
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   ******************************************************************************
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @attention
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * Copyright (c) 2019 STMicroelectronics.
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * All rights reserved.
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * the root directory of this software component.
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   ******************************************************************************
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccQC7VXM.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** #include "stm32g4xx_hal.h"
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @addtogroup STM32G4xx_HAL_Driver
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH FLASH
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief FLASH HAL module driver
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Private_Constants FLASH Private Constants
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** #define FLASH_NB_DOUBLE_WORDS_IN_ROW  32
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash  = {.Lock = HAL_UNLOCKED,
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .ErrorCode = HAL_FLASH_ERROR_NONE,
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .ProcedureOnGoing = FLASH_PROC_NONE,
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .Address = 0U,
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .Bank = FLASH_BANK_1,
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .Page = 0U,
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .NbPagesToErase = 0U,
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                                 .CacheToReactivate = FLASH_CACHE_DISABLED};
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** static void          FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** static void          FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress);
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
ARM GAS  /tmp/ccQC7VXM.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *  @brief   Programming operation functions
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** @verbatim
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****  ===============================================================================
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                   ##### Programming operation functions #####
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****  ===============================================================================
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     [..]
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     program operations.
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** @endverbatim
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address.
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *         This parameter can be a value of @ref FLASH_Type_Program.
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *         This parameter is the data for the double word program and the address where
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *         are stored the data for the row fast program.
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t prog_bit = 0;
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check the parameters */
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Process Locked */
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Wait for last operation to be completed */
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (status == HAL_OK)
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Deactivate the data cache if they are activated to avoid data misbehavior */
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != 0U)
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Disable data cache  */
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       __HAL_FLASH_DATA_CACHE_DISABLE();
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.CacheToReactivate = FLASH_CACHE_DISABLED;
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
ARM GAS  /tmp/ccQC7VXM.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       prog_bit = FLASH_CR_PG;
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else if ((TypeProgram == FLASH_TYPEPROGRAM_FAST) || (TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Fast program a 32 row double-word (64-bit) at a specified address */
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* If it is the last row, the bit will be cleared at the end of the operation */
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_LAST)
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         prog_bit = FLASH_CR_FSTPG;
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Nothing to do */
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Wait for last operation to be completed */
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* If the program operation is completed, disable the PG or FSTPG Bit */
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (prog_bit != 0U)
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR, prog_bit);
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Flush the caches to be sure of the data consistency */
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     FLASH_FlushCaches();
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Process Unlocked */
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* return status */
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return status;
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address with interrupt enab
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *         This parameter can be a value of @ref FLASH_Type_Program.
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *         This parameter is the data for the double word program and the address where
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *         are stored the data for the row fast program.
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 6


 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check the parameters */
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Process Locked */
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Reset error code */
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Deactivate the data cache if they are activated to avoid data misbehavior */
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != 0U)
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Disable data cache  */
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   else
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.CacheToReactivate = FLASH_CACHE_DISABLED;
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Wait for last operation to be completed */
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (status != HAL_OK)
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Process Unlocked */
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   else
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_LAST)
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_LAST;
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM;
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.Address = Address;
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Enable End of Operation and Error interrupts */
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR);
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else if ((TypeProgram == FLASH_TYPEPROGRAM_FAST) || (TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Fast program a 32 row double-word (64-bit) at a specified address */
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
ARM GAS  /tmp/ccQC7VXM.s 			page 7


 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Nothing to do */
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return status;
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Handle FLASH interrupt request.
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval None
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t tmp_page;
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t error;
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* If the operation is completed, disable the PG, PNB, MER1, MER2 and PER Bit */
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, (FLASH_CR_PG | FLASH_CR_MER1 | FLASH_CR_PER | FLASH_CR_PNB));
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** #if defined (FLASH_OPTR_DBANK)
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_MER2);
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** #endif
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Disable the FSTPG Bit only if it is the last row programmed */
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (pFlash.ProcedureOnGoing == FLASH_PROC_PROGRAM_LAST)
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_FSTPG);
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check FLASH operation error flags */
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (error != 0U)
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Save the error code */
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Clear error programming flags */
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Flush the caches to be sure of the data consistency */
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     FLASH_FlushCaches();
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (procedure == FLASH_PROC_PAGE_ERASE)
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       HAL_FLASH_OperationErrorCallback(pFlash.Page);
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else if (procedure == FLASH_PROC_MASS_ERASE)
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       HAL_FLASH_OperationErrorCallback(pFlash.Bank);
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else if ((procedure == FLASH_PROC_PROGRAM) ||
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****              (procedure == FLASH_PROC_PROGRAM_LAST))
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       HAL_FLASH_OperationErrorCallback(pFlash.Address);
ARM GAS  /tmp/ccQC7VXM.s 			page 8


 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Nothing to do */
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP))
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (pFlash.ProcedureOnGoing == FLASH_PROC_PAGE_ERASE)
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Nb of pages to erased can be decreased */
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.NbPagesToErase--;
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Check if there are still pages to erase*/
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       if (pFlash.NbPagesToErase != 0U)
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* Indicate user which page has been erased*/
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Page);
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* Increment page number */
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         pFlash.Page++;
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         tmp_page = pFlash.Page;
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         FLASH_PageErase(tmp_page, pFlash.Bank);
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       else
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* No more pages to Erase */
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* Reset Address and stop Erase pages procedure */
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         pFlash.Page = 0xFFFFFFFFU;
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* Flush the caches to be sure of the data consistency */
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         FLASH_FlushCaches();
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Page);
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     else
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /* Flush the caches to be sure of the data consistency */
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       FLASH_FlushCaches();
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       if (procedure == FLASH_PROC_MASS_ERASE)
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* MassErase ended. Return the selected bank */
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Bank);
ARM GAS  /tmp/ccQC7VXM.s 			page 9


 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       else if ((procedure == FLASH_PROC_PROGRAM) ||
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                (procedure == FLASH_PROC_PROGRAM_LAST))
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* Program ended. Return the selected address */
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       else
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         /* Nothing to do */
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       /*Clear the procedure ongoing*/
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR);
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Process Unlocked */
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure:
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           @arg Mass Erase: Bank number which has been requested to erase
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           @arg Page Erase: Page which has been erased
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *                            (if 0xFFFFFFFF, it means that all the selected pages have been erase
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           @arg Program: Address which was selected for data program
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval None
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   UNUSED(ReturnValue);
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****    */
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure:
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           @arg Mass Erase: Bank number which has been requested to erase
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           @arg Page Erase: Page number which returned an error
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *           @arg Program: Address which was selected for data program
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval None
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
ARM GAS  /tmp/ccQC7VXM.s 			page 10


 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   UNUSED(ReturnValue);
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****    */
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief   Management functions
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** @verbatim
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****  ===============================================================================
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****  ===============================================================================
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     [..]
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     memory operations.
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** @endverbatim
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* verify Flash is unlocked */
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       status = HAL_ERROR;
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return status;
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
ARM GAS  /tmp/ccQC7VXM.s 			page 11


 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* verify Flash is locked */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     status = HAL_OK;
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return status;
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* verify option bytes are unlocked */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       status = HAL_ERROR;
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return status;
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OPTLOCK);
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Verify option bytes are locked */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     status = HAL_OK;
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return status;
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
ARM GAS  /tmp/ccQC7VXM.s 			page 12


 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OBL_LAUNCH);
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Wait for last operation to be completed */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE));
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief   Peripheral Errors functions
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** @verbatim
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****  ===============================================================================
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****  ===============================================================================
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     [..]
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** @endverbatim
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval FLASH_ErrorCode. The returned value can be:
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RD: FLASH Read Protection error flag (PCROP)
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming Sequence error flag
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGP: FLASH Programming Parallelism error flag
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming Alignment error flag
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protected error flag
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPERATION: FLASH operation Error flag
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE: No error set
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OP: FLASH Operation error
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PROG: FLASH Programming error
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protection error
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming alignment error
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SIZ: FLASH Size error
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming sequence error
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_MIS: FLASH Fast programming data miss error
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_FAST: FLASH Fast programming error
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RD: FLASH PCROP read error
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPTV: FLASH Option validity error
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return pFlash.ErrorCode;
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
ARM GAS  /tmp/ccQC7VXM.s 			page 13


 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @}
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @{
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout.
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval HAL_Status
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****      flag will be set */
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t error;
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY))
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) > Timeout)
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       return HAL_TIMEOUT;
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check FLASH operation error flags */
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (error != 0u)
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Save the error code */
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Clear error programming flags */
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     return HAL_ERROR;
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP))
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 14


 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* If there is an error flag set */
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return HAL_OK;
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Program double-word (64-bit) at a specified address.
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval None
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check the parameters */
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Set PG bit */
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_PG);
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Program first word */
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *(uint32_t *)Address = (uint32_t)Data;
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     (independently of compiler optimization behavior) */
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   __ISB();
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Program second word */
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   *(uint32_t *)(Address + 4U) = (uint32_t)(Data >> 32U);
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** /**
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @brief  Fast program a row double-word (64-bit) at a specified address.
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @param  DataAddress specifies the address where the data are stored.
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   * @retval None
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   */
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** static void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
  29              		.loc 1 751 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 751 1 is_stmt 0 view .LVU1
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint8_t row_index = (2 * FLASH_NB_DOUBLE_WORDS_IN_ROW);
  39              		.loc 1 752 3 is_stmt 1 view .LVU2
  40              	.LVL1:
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t *dest_addr = (uint32_t *)Address;
  41              		.loc 1 753 3 view .LVU3
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t *src_addr = (uint32_t *)DataAddress;
  42              		.loc 1 754 3 view .LVU4
  43              		.loc 1 754 13 is_stmt 0 view .LVU5
  44 0002 0B46     		mov	r3, r1
  45              	.LVL2:
ARM GAS  /tmp/ccQC7VXM.s 			page 15


 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t primask_bit;
  46              		.loc 1 755 3 is_stmt 1 view .LVU6
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Check the parameters */
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   assert_param(IS_FLASH_MAIN_MEM_ADDRESS(Address));
  47              		.loc 1 758 3 view .LVU7
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Set FSTPG bit */
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
  48              		.loc 1 761 3 view .LVU8
  49 0004 0A4C     		ldr	r4, .L5
  50 0006 6269     		ldr	r2, [r4, #20]
  51 0008 42F48022 		orr	r2, r2, #262144
  52 000c 6261     		str	r2, [r4, #20]
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Enter critical section: Disable interrupts to avoid any interruption during the loop */
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   primask_bit = __get_PRIMASK();
  53              		.loc 1 764 3 view .LVU9
  54              	.LBB10:
  55              	.LBI10:
  56              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/ccQC7VXM.s 			page 16


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccQC7VXM.s 			page 17


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 18


 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/ccQC7VXM.s 			page 19


 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccQC7VXM.s 			page 20


 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 21


 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccQC7VXM.s 			page 22


 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
ARM GAS  /tmp/ccQC7VXM.s 			page 23


 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
  57              		.loc 2 449 31 view .LVU10
  58              	.LBB11:
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  59              		.loc 2 451 3 view .LVU11
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  60              		.loc 2 453 3 view .LVU12
  61              		.syntax unified
  62              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  63 000e EFF31084 		MRS r4, primask
  64              	@ 0 "" 2
  65              	.LVL3:
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  66              		.loc 2 454 3 view .LVU13
  67              		.loc 2 454 3 is_stmt 0 view .LVU14
  68              		.thumb
  69              		.syntax unified
  70              	.LBE11:
  71              	.LBE10:
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   __disable_irq();
  72              		.loc 1 765 3 is_stmt 1 view .LVU15
  73              	.LBB12:
  74              	.LBI12:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  75              		.loc 2 207 27 view .LVU16
  76              	.LBB13:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  77              		.loc 2 209 3 view .LVU17
  78              		.syntax unified
  79              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  80 0012 72B6     		cpsid i
  81              	@ 0 "" 2
  82              		.thumb
  83              		.syntax unified
  84 0014 01F5807C 		add	ip, r1, #256
  85              	.LBE13:
  86              	.LBE12:
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Program the double words of the row */
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   do
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     *dest_addr = *src_addr;
ARM GAS  /tmp/ccQC7VXM.s 			page 24


  87              		.loc 1 770 16 is_stmt 0 view .LVU18
  88 0018 411A     		subs	r1, r0, r1
  89              	.LVL4:
  90              	.L2:
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
  91              		.loc 1 768 3 is_stmt 1 discriminator 1 view .LVU19
  92              		.loc 1 770 5 discriminator 1 view .LVU20
  93              		.loc 1 770 18 is_stmt 0 discriminator 1 view .LVU21
  94 001a 1A68     		ldr	r2, [r3]
  95              		.loc 1 770 16 discriminator 1 view .LVU22
  96 001c 5A50     		str	r2, [r3, r1]
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     dest_addr++;
  97              		.loc 1 771 5 is_stmt 1 discriminator 1 view .LVU23
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     src_addr++;
  98              		.loc 1 772 5 discriminator 1 view .LVU24
  99              		.loc 1 772 13 is_stmt 0 discriminator 1 view .LVU25
 100 001e 0433     		adds	r3, r3, #4
 101              	.LVL5:
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     row_index--;
 102              		.loc 1 773 5 is_stmt 1 discriminator 1 view .LVU26
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   while (row_index != 0U);
 103              		.loc 1 775 9 discriminator 1 view .LVU27
 104              		.loc 1 775 3 is_stmt 0 discriminator 1 view .LVU28
 105 0020 6345     		cmp	r3, ip
 106 0022 FAD1     		bne	.L2
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Exit critical section: restore previous priority mask */
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 107              		.loc 1 778 3 is_stmt 1 view .LVU29
 108              	.LVL6:
 109              	.LBB14:
 110              	.LBI14:
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccQC7VXM.s 			page 25


 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 111              		.loc 2 479 27 view .LVU30
 112              	.LBB15:
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 113              		.loc 2 481 3 view .LVU31
 114              		.syntax unified
 115              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 116 0024 84F31088 		MSR primask, r4
 117              	@ 0 "" 2
 118              	.LVL7:
 119              		.loc 2 481 3 is_stmt 0 view .LVU32
 120              		.thumb
 121              		.syntax unified
 122              	.LBE15:
 123              	.LBE14:
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 124              		.loc 1 779 1 view .LVU33
 125 0028 5DF8044B 		ldr	r4, [sp], #4
 126              	.LCFI1:
 127              		.cfi_restore 4
 128              		.cfi_def_cfa_offset 0
 129              	.LVL8:
 130              		.loc 1 779 1 view .LVU34
 131 002c 7047     		bx	lr
 132              	.L6:
 133 002e 00BF     		.align	2
 134              	.L5:
 135 0030 00200240 		.word	1073881088
 136              		.cfi_endproc
 137              	.LFE145:
 139              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 140              		.align	1
 141              		.weak	HAL_FLASH_EndOfOperationCallback
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	HAL_FLASH_EndOfOperationCallback:
 148              	.LVL9:
 149              	.LFB135:
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 150              		.loc 1 468 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 155              		.loc 1 470 3 view .LVU36
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 156              		.loc 1 475 1 is_stmt 0 view .LVU37
 157 0000 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE135:
 161              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 162              		.align	1
 163              		.weak	HAL_FLASH_OperationErrorCallback
ARM GAS  /tmp/ccQC7VXM.s 			page 26


 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	HAL_FLASH_OperationErrorCallback:
 170              	.LVL10:
 171              	.LFB136:
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 172              		.loc 1 486 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 177              		.loc 1 488 3 view .LVU39
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 178              		.loc 1 493 1 is_stmt 0 view .LVU40
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE136:
 183              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_FLASH_IRQHandler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	HAL_FLASH_IRQHandler:
 192              	.LFB134:
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t tmp_page;
 193              		.loc 1 328 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t error;
 202              		.loc 1 329 3 view .LVU42
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 203              		.loc 1 330 3 view .LVU43
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 204              		.loc 1 331 3 view .LVU44
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** #if defined (FLASH_OPTR_DBANK)
 205              		.loc 1 334 3 view .LVU45
 206 0002 454A     		ldr	r2, .L29
 207 0004 5369     		ldr	r3, [r2, #20]
 208 0006 23F4FF73 		bic	r3, r3, #510
 209 000a 23F00103 		bic	r3, r3, #1
 210 000e 5361     		str	r3, [r2, #20]
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 211              		.loc 1 340 3 view .LVU46
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 212              		.loc 1 340 13 is_stmt 0 view .LVU47
 213 0010 424B     		ldr	r3, .L29+4
ARM GAS  /tmp/ccQC7VXM.s 			page 27


 214 0012 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 215 0014 DBB2     		uxtb	r3, r3
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 216              		.loc 1 340 6 view .LVU48
 217 0016 042B     		cmp	r3, #4
 218 0018 25D0     		beq	.L22
 219              	.L10:
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 220              		.loc 1 346 3 is_stmt 1 view .LVU49
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 221              		.loc 1 346 17 is_stmt 0 view .LVU50
 222 001a 3F4B     		ldr	r3, .L29
 223 001c 1B69     		ldr	r3, [r3, #16]
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 224              		.loc 1 346 9 view .LVU51
 225 001e 4CF2FA32 		movw	r2, #50170
 226              	.LVL11:
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 227              		.loc 1 348 3 is_stmt 1 view .LVU52
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 228              		.loc 1 348 6 is_stmt 0 view .LVU53
 229 0022 1340     		ands	r3, r3, r2
 230              	.LVL12:
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 231              		.loc 1 348 6 view .LVU54
 232 0024 24D1     		bne	.L23
 233              	.LVL13:
 234              	.L11:
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 235              		.loc 1 384 3 is_stmt 1 view .LVU55
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 236              		.loc 1 384 7 is_stmt 0 view .LVU56
 237 0026 3C4B     		ldr	r3, .L29
 238 0028 1B69     		ldr	r3, [r3, #16]
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 239              		.loc 1 384 6 view .LVU57
 240 002a 13F0010F 		tst	r3, #1
 241 002e 5DD0     		beq	.L15
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 242              		.loc 1 387 5 is_stmt 1 discriminator 4 view .LVU58
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 243              		.loc 1 387 5 discriminator 4 view .LVU59
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 244              		.loc 1 387 5 discriminator 4 view .LVU60
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 245              		.loc 1 387 5 discriminator 4 view .LVU61
 246 0030 394B     		ldr	r3, .L29
 247 0032 0122     		movs	r2, #1
 248 0034 1A61     		str	r2, [r3, #16]
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 249              		.loc 1 387 5 discriminator 4 view .LVU62
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 250              		.loc 1 389 5 discriminator 4 view .LVU63
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 251              		.loc 1 389 15 is_stmt 0 discriminator 4 view .LVU64
 252 0036 394B     		ldr	r3, .L29+4
 253 0038 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
ARM GAS  /tmp/ccQC7VXM.s 			page 28


 254 003a DBB2     		uxtb	r3, r3
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 255              		.loc 1 389 8 discriminator 4 view .LVU65
 256 003c 9342     		cmp	r3, r2
 257 003e 47D1     		bne	.L16
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 258              		.loc 1 392 7 is_stmt 1 view .LVU66
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 259              		.loc 1 392 13 is_stmt 0 view .LVU67
 260 0040 364B     		ldr	r3, .L29+4
 261 0042 9A69     		ldr	r2, [r3, #24]
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 262              		.loc 1 392 28 view .LVU68
 263 0044 013A     		subs	r2, r2, #1
 264 0046 9A61     		str	r2, [r3, #24]
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 265              		.loc 1 395 7 is_stmt 1 view .LVU69
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 266              		.loc 1 395 17 is_stmt 0 view .LVU70
 267 0048 9B69     		ldr	r3, [r3, #24]
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 268              		.loc 1 395 10 view .LVU71
 269 004a 002B     		cmp	r3, #0
 270 004c 34D0     		beq	.L17
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 271              		.loc 1 398 9 is_stmt 1 view .LVU72
 272 004e 334C     		ldr	r4, .L29+4
 273 0050 6069     		ldr	r0, [r4, #20]
 274 0052 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 275              	.LVL14:
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         tmp_page = pFlash.Page;
 276              		.loc 1 401 9 view .LVU73
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         tmp_page = pFlash.Page;
 277              		.loc 1 401 15 is_stmt 0 view .LVU74
 278 0056 6369     		ldr	r3, [r4, #20]
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         tmp_page = pFlash.Page;
 279              		.loc 1 401 20 view .LVU75
 280 0058 0133     		adds	r3, r3, #1
 281 005a 6361     		str	r3, [r4, #20]
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         FLASH_PageErase(tmp_page, pFlash.Bank);
 282              		.loc 1 402 9 is_stmt 1 view .LVU76
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         FLASH_PageErase(tmp_page, pFlash.Bank);
 283              		.loc 1 402 18 is_stmt 0 view .LVU77
 284 005c 6069     		ldr	r0, [r4, #20]
 285              	.LVL15:
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 286              		.loc 1 403 9 is_stmt 1 view .LVU78
 287 005e 2169     		ldr	r1, [r4, #16]
 288 0060 FFF7FEFF 		bl	FLASH_PageErase
 289              	.LVL16:
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 290              		.loc 1 403 9 is_stmt 0 view .LVU79
 291 0064 42E0     		b	.L15
 292              	.L22:
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 293              		.loc 1 342 5 is_stmt 1 view .LVU80
 294 0066 5369     		ldr	r3, [r2, #20]
ARM GAS  /tmp/ccQC7VXM.s 			page 29


 295 0068 23F48023 		bic	r3, r3, #262144
 296 006c 5361     		str	r3, [r2, #20]
 297 006e D4E7     		b	.L10
 298              	.LVL17:
 299              	.L23:
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 300              		.loc 1 351 5 view .LVU81
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 301              		.loc 1 351 22 is_stmt 0 view .LVU82
 302 0070 2A4C     		ldr	r4, .L29+4
 303 0072 6268     		ldr	r2, [r4, #4]
 304 0074 1A43     		orrs	r2, r2, r3
 305 0076 6260     		str	r2, [r4, #4]
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 306              		.loc 1 354 5 is_stmt 1 view .LVU83
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 307              		.loc 1 354 5 view .LVU84
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 308              		.loc 1 354 5 view .LVU85
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 309              		.loc 1 354 5 view .LVU86
 310 0078 274A     		ldr	r2, .L29
 311 007a 1361     		str	r3, [r2, #16]
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 312              		.loc 1 354 5 view .LVU87
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 313              		.loc 1 357 5 view .LVU88
 314 007c FFF7FEFF 		bl	FLASH_FlushCaches
 315              	.LVL18:
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (procedure == FLASH_PROC_PAGE_ERASE)
 316              		.loc 1 360 5 view .LVU89
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     if (procedure == FLASH_PROC_PAGE_ERASE)
 317              		.loc 1 360 15 is_stmt 0 view .LVU90
 318 0080 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 319 0082 DBB2     		uxtb	r3, r3
 320              	.LVL19:
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 321              		.loc 1 361 5 is_stmt 1 view .LVU91
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 322              		.loc 1 361 8 is_stmt 0 view .LVU92
 323 0084 012B     		cmp	r3, #1
 324 0086 09D0     		beq	.L24
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 325              		.loc 1 365 10 is_stmt 1 view .LVU93
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 326              		.loc 1 365 13 is_stmt 0 view .LVU94
 327 0088 022B     		cmp	r3, #2
 328 008a 0BD0     		beq	.L25
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****              (procedure == FLASH_PROC_PROGRAM_LAST))
 329              		.loc 1 369 10 is_stmt 1 view .LVU95
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****              (procedure == FLASH_PROC_PROGRAM_LAST))
 330              		.loc 1 369 48 is_stmt 0 view .LVU96
 331 008c 033B     		subs	r3, r3, #3
 332              	.LVL20:
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****              (procedure == FLASH_PROC_PROGRAM_LAST))
 333              		.loc 1 369 13 view .LVU97
 334 008e DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccQC7VXM.s 			page 30


 335              	.LVL21:
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****              (procedure == FLASH_PROC_PROGRAM_LAST))
 336              		.loc 1 369 13 view .LVU98
 337 0090 012B     		cmp	r3, #1
 338 0092 0CD9     		bls	.L26
 339              	.LVL22:
 340              	.L13:
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 341              		.loc 1 377 5 is_stmt 1 view .LVU99
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 342              		.loc 1 380 5 view .LVU100
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 343              		.loc 1 380 29 is_stmt 0 view .LVU101
 344 0094 214B     		ldr	r3, .L29+4
 345 0096 0022     		movs	r2, #0
 346 0098 1A72     		strb	r2, [r3, #8]
 347 009a C4E7     		b	.L11
 348              	.LVL23:
 349              	.L24:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 350              		.loc 1 363 7 is_stmt 1 view .LVU102
 351 009c 6069     		ldr	r0, [r4, #20]
 352 009e FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 353              	.LVL24:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 354              		.loc 1 363 7 is_stmt 0 view .LVU103
 355 00a2 F7E7     		b	.L13
 356              	.LVL25:
 357              	.L25:
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 358              		.loc 1 367 7 is_stmt 1 view .LVU104
 359 00a4 1D4B     		ldr	r3, .L29+4
 360              	.LVL26:
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 361              		.loc 1 367 7 is_stmt 0 view .LVU105
 362 00a6 1869     		ldr	r0, [r3, #16]
 363 00a8 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 364              	.LVL27:
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 365              		.loc 1 367 7 view .LVU106
 366 00ac F2E7     		b	.L13
 367              	.LVL28:
 368              	.L26:
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 369              		.loc 1 372 7 is_stmt 1 view .LVU107
 370 00ae 1B4B     		ldr	r3, .L29+4
 371 00b0 D868     		ldr	r0, [r3, #12]
 372 00b2 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 373              	.LVL29:
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 374              		.loc 1 372 7 is_stmt 0 view .LVU108
 375 00b6 EDE7     		b	.L13
 376              	.L17:
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 377              		.loc 1 409 9 is_stmt 1 view .LVU109
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 378              		.loc 1 409 21 is_stmt 0 view .LVU110
ARM GAS  /tmp/ccQC7VXM.s 			page 31


 379 00b8 184C     		ldr	r4, .L29+4
 380 00ba 4FF0FF33 		mov	r3, #-1
 381 00be 6361     		str	r3, [r4, #20]
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 382              		.loc 1 410 9 is_stmt 1 view .LVU111
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 383              		.loc 1 410 33 is_stmt 0 view .LVU112
 384 00c0 0023     		movs	r3, #0
 385 00c2 2372     		strb	r3, [r4, #8]
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 386              		.loc 1 413 9 is_stmt 1 view .LVU113
 387 00c4 FFF7FEFF 		bl	FLASH_FlushCaches
 388              	.LVL30:
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 389              		.loc 1 416 9 view .LVU114
 390 00c8 6069     		ldr	r0, [r4, #20]
 391 00ca FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 392              	.LVL31:
 393 00ce 0DE0     		b	.L15
 394              	.L16:
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 395              		.loc 1 422 7 view .LVU115
 396 00d0 FFF7FEFF 		bl	FLASH_FlushCaches
 397              	.LVL32:
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       if (procedure == FLASH_PROC_MASS_ERASE)
 398              		.loc 1 424 7 view .LVU116
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       if (procedure == FLASH_PROC_MASS_ERASE)
 399              		.loc 1 424 17 is_stmt 0 view .LVU117
 400 00d4 114B     		ldr	r3, .L29+4
 401 00d6 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 402 00d8 DBB2     		uxtb	r3, r3
 403              	.LVL33:
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 404              		.loc 1 425 7 is_stmt 1 view .LVU118
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 405              		.loc 1 425 10 is_stmt 0 view .LVU119
 406 00da 022B     		cmp	r3, #2
 407 00dc 12D0     		beq	.L27
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                (procedure == FLASH_PROC_PROGRAM_LAST))
 408              		.loc 1 431 12 is_stmt 1 view .LVU120
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                (procedure == FLASH_PROC_PROGRAM_LAST))
 409              		.loc 1 431 50 is_stmt 0 view .LVU121
 410 00de 033B     		subs	r3, r3, #3
 411              	.LVL34:
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                (procedure == FLASH_PROC_PROGRAM_LAST))
 412              		.loc 1 431 15 view .LVU122
 413 00e0 DBB2     		uxtb	r3, r3
 414              	.LVL35:
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****                (procedure == FLASH_PROC_PROGRAM_LAST))
 415              		.loc 1 431 15 view .LVU123
 416 00e2 012B     		cmp	r3, #1
 417 00e4 13D9     		bls	.L28
 418              	.LVL36:
 419              	.L19:
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 420              		.loc 1 441 7 is_stmt 1 view .LVU124
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
ARM GAS  /tmp/ccQC7VXM.s 			page 32


 421              		.loc 1 444 7 view .LVU125
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 422              		.loc 1 444 31 is_stmt 0 view .LVU126
 423 00e6 0D4B     		ldr	r3, .L29+4
 424 00e8 0022     		movs	r2, #0
 425 00ea 1A72     		strb	r2, [r3, #8]
 426              	.L15:
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 427              		.loc 1 448 3 is_stmt 1 view .LVU127
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 428              		.loc 1 448 13 is_stmt 0 view .LVU128
 429 00ec 0B4B     		ldr	r3, .L29+4
 430 00ee 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 431              		.loc 1 448 6 view .LVU129
 432 00f0 3BB9     		cbnz	r3, .L9
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 433              		.loc 1 451 5 is_stmt 1 discriminator 4 view .LVU130
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 434              		.loc 1 451 5 discriminator 4 view .LVU131
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 435              		.loc 1 451 5 discriminator 4 view .LVU132
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 436              		.loc 1 451 5 discriminator 4 view .LVU133
 437 00f2 094A     		ldr	r2, .L29
 438 00f4 5369     		ldr	r3, [r2, #20]
 439 00f6 23F04073 		bic	r3, r3, #50331648
 440 00fa 5361     		str	r3, [r2, #20]
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 441              		.loc 1 451 5 discriminator 4 view .LVU134
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 442              		.loc 1 454 5 discriminator 4 view .LVU135
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 443              		.loc 1 454 5 discriminator 4 view .LVU136
 444 00fc 074B     		ldr	r3, .L29+4
 445 00fe 0022     		movs	r2, #0
 446 0100 1A70     		strb	r2, [r3]
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 447              		.loc 1 454 5 discriminator 4 view .LVU137
 448              	.L9:
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 449              		.loc 1 456 1 is_stmt 0 view .LVU138
 450 0102 10BD     		pop	{r4, pc}
 451              	.LVL37:
 452              	.L27:
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 453              		.loc 1 429 9 is_stmt 1 view .LVU139
 454 0104 054B     		ldr	r3, .L29+4
 455              	.LVL38:
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 456              		.loc 1 429 9 is_stmt 0 view .LVU140
 457 0106 1869     		ldr	r0, [r3, #16]
 458 0108 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 459              	.LVL39:
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 460              		.loc 1 429 9 view .LVU141
 461 010c EBE7     		b	.L19
ARM GAS  /tmp/ccQC7VXM.s 			page 33


 462              	.LVL40:
 463              	.L28:
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 464              		.loc 1 436 9 is_stmt 1 view .LVU142
 465 010e 034B     		ldr	r3, .L29+4
 466 0110 D868     		ldr	r0, [r3, #12]
 467 0112 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 468              	.LVL41:
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 469              		.loc 1 436 9 is_stmt 0 view .LVU143
 470 0116 E6E7     		b	.L19
 471              	.L30:
 472              		.align	2
 473              	.L29:
 474 0118 00200240 		.word	1073881088
 475 011c 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE134:
 479              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 480              		.align	1
 481              		.global	HAL_FLASH_Unlock
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	HAL_FLASH_Unlock:
 488              	.LFB137:
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 489              		.loc 1 519 1 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 494              		.loc 1 520 3 view .LVU145
 495              	.LVL42:
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 496              		.loc 1 522 3 view .LVU146
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 497              		.loc 1 522 7 is_stmt 0 view .LVU147
 498 0000 074B     		ldr	r3, .L35
 499 0002 5B69     		ldr	r3, [r3, #20]
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 500              		.loc 1 522 6 view .LVU148
 501 0004 002B     		cmp	r3, #0
 502 0006 01DB     		blt	.L34
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 503              		.loc 1 520 21 view .LVU149
 504 0008 0020     		movs	r0, #0
 505              	.LVL43:
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 506              		.loc 1 535 3 is_stmt 1 view .LVU150
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 507              		.loc 1 536 1 is_stmt 0 view .LVU151
 508 000a 7047     		bx	lr
 509              	.LVL44:
 510              	.L34:
ARM GAS  /tmp/ccQC7VXM.s 			page 34


 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 511              		.loc 1 525 5 is_stmt 1 view .LVU152
 512 000c 044B     		ldr	r3, .L35
 513 000e 054A     		ldr	r2, .L35+4
 514 0010 9A60     		str	r2, [r3, #8]
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 515              		.loc 1 526 5 view .LVU153
 516 0012 02F18832 		add	r2, r2, #-2004318072
 517 0016 9A60     		str	r2, [r3, #8]
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 518              		.loc 1 529 5 view .LVU154
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 519              		.loc 1 529 9 is_stmt 0 view .LVU155
 520 0018 5869     		ldr	r0, [r3, #20]
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 521              		.loc 1 520 21 view .LVU156
 522 001a C00F     		lsrs	r0, r0, #31
 523 001c 7047     		bx	lr
 524              	.L36:
 525 001e 00BF     		.align	2
 526              	.L35:
 527 0020 00200240 		.word	1073881088
 528 0024 23016745 		.word	1164378403
 529              		.cfi_endproc
 530              	.LFE137:
 532              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 533              		.align	1
 534              		.global	HAL_FLASH_Lock
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu fpv4-sp-d16
 540              	HAL_FLASH_Lock:
 541              	.LFB138:
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 542              		.loc 1 543 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 547              		.loc 1 544 3 view .LVU158
 548              	.LVL45:
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 549              		.loc 1 547 3 view .LVU159
 550 0000 044B     		ldr	r3, .L38
 551 0002 5A69     		ldr	r2, [r3, #20]
 552 0004 42F00042 		orr	r2, r2, #-2147483648
 553 0008 5A61     		str	r2, [r3, #20]
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 554              		.loc 1 550 3 view .LVU160
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 555              		.loc 1 550 7 is_stmt 0 view .LVU161
 556 000a 5869     		ldr	r0, [r3, #20]
 557              	.LVL46:
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 558              		.loc 1 555 3 is_stmt 1 view .LVU162
ARM GAS  /tmp/ccQC7VXM.s 			page 35


 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 559              		.loc 1 556 1 is_stmt 0 view .LVU163
 560 000c C043     		mvns	r0, r0
 561              	.LVL47:
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 562              		.loc 1 556 1 view .LVU164
 563 000e C00F     		lsrs	r0, r0, #31
 564              	.LVL48:
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 565              		.loc 1 556 1 view .LVU165
 566 0010 7047     		bx	lr
 567              	.L39:
 568 0012 00BF     		.align	2
 569              	.L38:
 570 0014 00200240 		.word	1073881088
 571              		.cfi_endproc
 572              	.LFE138:
 574              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 575              		.align	1
 576              		.global	HAL_FLASH_OB_Unlock
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	HAL_FLASH_OB_Unlock:
 583              	.LFB139:
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 584              		.loc 1 563 1 is_stmt 1 view -0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 589              		.loc 1 564 3 view .LVU167
 590              	.LVL49:
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 591              		.loc 1 566 3 view .LVU168
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 592              		.loc 1 566 7 is_stmt 0 view .LVU169
 593 0000 084B     		ldr	r3, .L43
 594 0002 5B69     		ldr	r3, [r3, #20]
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 595              		.loc 1 566 6 view .LVU170
 596 0004 13F0804F 		tst	r3, #1073741824
 597 0008 09D0     		beq	.L42
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 598              		.loc 1 569 5 is_stmt 1 view .LVU171
 599 000a 064B     		ldr	r3, .L43
 600 000c 064A     		ldr	r2, .L43+4
 601 000e DA60     		str	r2, [r3, #12]
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 602              		.loc 1 570 5 view .LVU172
 603 0010 02F14432 		add	r2, r2, #1145324612
 604 0014 DA60     		str	r2, [r3, #12]
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 605              		.loc 1 573 5 view .LVU173
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
ARM GAS  /tmp/ccQC7VXM.s 			page 36


 606              		.loc 1 573 9 is_stmt 0 view .LVU174
 607 0016 5869     		ldr	r0, [r3, #20]
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 608              		.loc 1 564 21 view .LVU175
 609 0018 C0F38070 		ubfx	r0, r0, #30, #1
 610 001c 7047     		bx	lr
 611              	.L42:
 612 001e 0020     		movs	r0, #0
 613              	.LVL50:
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 614              		.loc 1 579 3 is_stmt 1 view .LVU176
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 615              		.loc 1 580 1 is_stmt 0 view .LVU177
 616 0020 7047     		bx	lr
 617              	.L44:
 618 0022 00BF     		.align	2
 619              	.L43:
 620 0024 00200240 		.word	1073881088
 621 0028 3B2A1908 		.word	135866939
 622              		.cfi_endproc
 623              	.LFE139:
 625              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 626              		.align	1
 627              		.global	HAL_FLASH_OB_Lock
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	HAL_FLASH_OB_Lock:
 634              	.LFB140:
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 635              		.loc 1 587 1 is_stmt 1 view -0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 640              		.loc 1 588 3 view .LVU179
 641              	.LVL51:
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 642              		.loc 1 591 3 view .LVU180
 643 0000 054B     		ldr	r3, .L46
 644 0002 5A69     		ldr	r2, [r3, #20]
 645 0004 42F08042 		orr	r2, r2, #1073741824
 646 0008 5A61     		str	r2, [r3, #20]
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 647              		.loc 1 594 3 view .LVU181
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 648              		.loc 1 594 7 is_stmt 0 view .LVU182
 649 000a 5869     		ldr	r0, [r3, #20]
 650              	.LVL52:
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 651              		.loc 1 599 3 is_stmt 1 view .LVU183
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 652              		.loc 1 594 6 is_stmt 0 view .LVU184
 653 000c 80F08040 		eor	r0, r0, #1073741824
 654              	.LVL53:
ARM GAS  /tmp/ccQC7VXM.s 			page 37


 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 655              		.loc 1 600 1 view .LVU185
 656 0010 C0F38070 		ubfx	r0, r0, #30, #1
 657              	.LVL54:
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 658              		.loc 1 600 1 view .LVU186
 659 0014 7047     		bx	lr
 660              	.L47:
 661 0016 00BF     		.align	2
 662              	.L46:
 663 0018 00200240 		.word	1073881088
 664              		.cfi_endproc
 665              	.LFE140:
 667              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 668              		.align	1
 669              		.global	HAL_FLASH_GetError
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 673              		.fpu fpv4-sp-d16
 675              	HAL_FLASH_GetError:
 676              	.LFB142:
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   return pFlash.ErrorCode;
 677              		.loc 1 655 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 682              		.loc 1 656 3 view .LVU188
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 683              		.loc 1 656 16 is_stmt 0 view .LVU189
 684 0000 014B     		ldr	r3, .L49
 685 0002 5868     		ldr	r0, [r3, #4]
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 686              		.loc 1 657 1 view .LVU190
 687 0004 7047     		bx	lr
 688              	.L50:
 689 0006 00BF     		.align	2
 690              	.L49:
 691 0008 00000000 		.word	.LANCHOR0
 692              		.cfi_endproc
 693              	.LFE142:
 695              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 696              		.align	1
 697              		.global	FLASH_WaitForLastOperation
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv4-sp-d16
 703              	FLASH_WaitForLastOperation:
 704              	.LVL55:
 705              	.LFB143:
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 706              		.loc 1 679 1 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQC7VXM.s 			page 38


 709              		@ frame_needed = 0, uses_anonymous_args = 0
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 710              		.loc 1 679 1 is_stmt 0 view .LVU192
 711 0000 70B5     		push	{r4, r5, r6, lr}
 712              	.LCFI3:
 713              		.cfi_def_cfa_offset 16
 714              		.cfi_offset 4, -16
 715              		.cfi_offset 5, -12
 716              		.cfi_offset 6, -8
 717              		.cfi_offset 14, -4
 718 0002 0546     		mov	r5, r0
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t error;
 719              		.loc 1 684 3 is_stmt 1 view .LVU193
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t error;
 720              		.loc 1 684 24 is_stmt 0 view .LVU194
 721 0004 FFF7FEFF 		bl	HAL_GetTick
 722              	.LVL56:
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t error;
 723              		.loc 1 684 24 view .LVU195
 724 0008 0446     		mov	r4, r0
 725              	.LVL57:
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 726              		.loc 1 685 3 is_stmt 1 view .LVU196
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 727              		.loc 1 687 3 view .LVU197
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 728              		.loc 1 687 10 is_stmt 0 view .LVU198
 729 000a 134E     		ldr	r6, .L61
 730              	.LVL58:
 731              	.L52:
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 732              		.loc 1 687 9 is_stmt 1 view .LVU199
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 733              		.loc 1 687 10 is_stmt 0 view .LVU200
 734 000c 3369     		ldr	r3, [r6, #16]
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 735              		.loc 1 687 9 view .LVU201
 736 000e 13F4803F 		tst	r3, #65536
 737 0012 06D0     		beq	.L59
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 738              		.loc 1 689 5 is_stmt 1 view .LVU202
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 739              		.loc 1 689 10 is_stmt 0 view .LVU203
 740 0014 FFF7FEFF 		bl	HAL_GetTick
 741              	.LVL59:
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 742              		.loc 1 689 24 view .LVU204
 743 0018 001B     		subs	r0, r0, r4
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 744              		.loc 1 689 8 view .LVU205
 745 001a A842     		cmp	r0, r5
 746 001c F6D9     		bls	.L52
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 747              		.loc 1 691 14 view .LVU206
 748 001e 0320     		movs	r0, #3
 749              	.L53:
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 39


 750              		.loc 1 717 1 view .LVU207
 751 0020 70BD     		pop	{r4, r5, r6, pc}
 752              	.LVL60:
 753              	.L59:
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (error != 0u)
 754              		.loc 1 696 3 is_stmt 1 view .LVU208
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (error != 0u)
 755              		.loc 1 696 17 is_stmt 0 view .LVU209
 756 0022 0D4B     		ldr	r3, .L61
 757 0024 1B69     		ldr	r3, [r3, #16]
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   if (error != 0u)
 758              		.loc 1 696 9 view .LVU210
 759 0026 4CF2FA32 		movw	r2, #50170
 760              	.LVL61:
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 761              		.loc 1 697 3 is_stmt 1 view .LVU211
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 762              		.loc 1 697 6 is_stmt 0 view .LVU212
 763 002a 1340     		ands	r3, r3, r2
 764              	.LVL62:
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 765              		.loc 1 697 6 view .LVU213
 766 002c 09D1     		bne	.L60
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 767              		.loc 1 709 3 is_stmt 1 view .LVU214
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 768              		.loc 1 709 7 is_stmt 0 view .LVU215
 769 002e 0A4B     		ldr	r3, .L61
 770              	.LVL63:
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 771              		.loc 1 709 7 view .LVU216
 772 0030 1B69     		ldr	r3, [r3, #16]
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 773              		.loc 1 709 6 view .LVU217
 774 0032 13F0010F 		tst	r3, #1
 775 0036 0CD0     		beq	.L57
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 776              		.loc 1 712 5 is_stmt 1 discriminator 4 view .LVU218
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 777              		.loc 1 712 5 discriminator 4 view .LVU219
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 778              		.loc 1 712 5 discriminator 4 view .LVU220
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 779              		.loc 1 712 5 discriminator 4 view .LVU221
 780 0038 074B     		ldr	r3, .L61
 781 003a 0122     		movs	r2, #1
 782 003c 1A61     		str	r2, [r3, #16]
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 783              		.loc 1 716 10 is_stmt 0 discriminator 4 view .LVU222
 784 003e 0020     		movs	r0, #0
 785 0040 EEE7     		b	.L53
 786              	.LVL64:
 787              	.L60:
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 788              		.loc 1 700 5 is_stmt 1 view .LVU223
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 789              		.loc 1 700 22 is_stmt 0 view .LVU224
ARM GAS  /tmp/ccQC7VXM.s 			page 40


 790 0042 0649     		ldr	r1, .L61+4
 791 0044 4A68     		ldr	r2, [r1, #4]
 792 0046 1A43     		orrs	r2, r2, r3
 793 0048 4A60     		str	r2, [r1, #4]
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 794              		.loc 1 703 5 is_stmt 1 view .LVU225
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 795              		.loc 1 703 5 view .LVU226
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 796              		.loc 1 703 5 view .LVU227
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 797              		.loc 1 703 5 view .LVU228
 798 004a 034A     		ldr	r2, .L61
 799 004c 1361     		str	r3, [r2, #16]
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 800              		.loc 1 703 5 view .LVU229
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 801              		.loc 1 705 5 view .LVU230
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 802              		.loc 1 705 12 is_stmt 0 view .LVU231
 803 004e 0120     		movs	r0, #1
 804 0050 E6E7     		b	.L53
 805              	.LVL65:
 806              	.L57:
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 807              		.loc 1 716 10 view .LVU232
 808 0052 0020     		movs	r0, #0
 809 0054 E4E7     		b	.L53
 810              	.L62:
 811 0056 00BF     		.align	2
 812              	.L61:
 813 0058 00200240 		.word	1073881088
 814 005c 00000000 		.word	.LANCHOR0
 815              		.cfi_endproc
 816              	.LFE143:
 818              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 819              		.align	1
 820              		.global	HAL_FLASH_Program
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	HAL_FLASH_Program:
 827              	.LVL66:
 828              	.LFB132:
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 829              		.loc 1 174 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 833              		.loc 1 174 1 is_stmt 0 view .LVU234
 834 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 835              	.LCFI4:
 836              		.cfi_def_cfa_offset 24
 837              		.cfi_offset 4, -24
 838              		.cfi_offset 5, -20
ARM GAS  /tmp/ccQC7VXM.s 			page 41


 839              		.cfi_offset 6, -16
 840              		.cfi_offset 7, -12
 841              		.cfi_offset 8, -8
 842              		.cfi_offset 14, -4
 843 0004 1646     		mov	r6, r2
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   uint32_t prog_bit = 0;
 844              		.loc 1 175 3 is_stmt 1 view .LVU235
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 845              		.loc 1 176 3 view .LVU236
 846              	.LVL67:
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 847              		.loc 1 179 3 view .LVU237
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 848              		.loc 1 182 3 view .LVU238
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 849              		.loc 1 182 3 view .LVU239
 850 0006 2B4A     		ldr	r2, .L78
 851              	.LVL68:
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 852              		.loc 1 182 3 is_stmt 0 view .LVU240
 853 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 854 000a 012A     		cmp	r2, #1
 855 000c 4FD0     		beq	.L72
 856 000e 0446     		mov	r4, r0
 857 0010 0D46     		mov	r5, r1
 858 0012 9846     		mov	r8, r3
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 859              		.loc 1 182 3 is_stmt 1 discriminator 2 view .LVU241
 860 0014 274B     		ldr	r3, .L78
 861 0016 0122     		movs	r2, #1
 862 0018 1A70     		strb	r2, [r3]
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 863              		.loc 1 182 3 discriminator 2 view .LVU242
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 864              		.loc 1 185 3 discriminator 2 view .LVU243
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 865              		.loc 1 185 12 is_stmt 0 discriminator 2 view .LVU244
 866 001a 4FF47A70 		mov	r0, #1000
 867              	.LVL69:
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 868              		.loc 1 185 12 discriminator 2 view .LVU245
 869 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 870              	.LVL70:
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 871              		.loc 1 187 3 is_stmt 1 discriminator 2 view .LVU246
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 872              		.loc 1 187 6 is_stmt 0 discriminator 2 view .LVU247
 873 0022 0746     		mov	r7, r0
 874 0024 D0B9     		cbnz	r0, .L65
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 875              		.loc 1 189 5 is_stmt 1 view .LVU248
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 876              		.loc 1 189 22 is_stmt 0 view .LVU249
 877 0026 234B     		ldr	r3, .L78
 878 0028 0022     		movs	r2, #0
 879 002a 5A60     		str	r2, [r3, #4]
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
ARM GAS  /tmp/ccQC7VXM.s 			page 42


 880              		.loc 1 192 5 is_stmt 1 view .LVU250
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 881              		.loc 1 192 8 is_stmt 0 view .LVU251
 882 002c 224B     		ldr	r3, .L78+4
 883 002e 1B68     		ldr	r3, [r3]
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 884              		.loc 1 192 7 view .LVU252
 885 0030 13F4806F 		tst	r3, #1024
 886 0034 18D0     		beq	.L66
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 887              		.loc 1 195 7 is_stmt 1 view .LVU253
 888 0036 204A     		ldr	r2, .L78+4
 889 0038 1368     		ldr	r3, [r2]
 890 003a 23F48063 		bic	r3, r3, #1024
 891 003e 1360     		str	r3, [r2]
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 892              		.loc 1 196 7 view .LVU254
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 893              		.loc 1 196 32 is_stmt 0 view .LVU255
 894 0040 1C4B     		ldr	r3, .L78
 895 0042 0222     		movs	r2, #2
 896 0044 1A77     		strb	r2, [r3, #28]
 897              	.L67:
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 898              		.loc 1 202 5 is_stmt 1 view .LVU256
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 899              		.loc 1 202 8 is_stmt 0 view .LVU257
 900 0046 9CB1     		cbz	r4, .L76
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 901              		.loc 1 208 10 is_stmt 1 view .LVU258
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 902              		.loc 1 208 54 is_stmt 0 view .LVU259
 903 0048 631E     		subs	r3, r4, #1
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 904              		.loc 1 208 13 view .LVU260
 905 004a 012B     		cmp	r3, #1
 906 004c 26D9     		bls	.L77
 907              	.LVL71:
 908              	.L70:
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 909              		.loc 1 222 5 is_stmt 1 view .LVU261
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 910              		.loc 1 225 5 view .LVU262
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 911              		.loc 1 225 14 is_stmt 0 view .LVU263
 912 004e 4FF47A70 		mov	r0, #1000
 913 0052 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 914              	.LVL72:
 915 0056 0746     		mov	r7, r0
 916              	.LVL73:
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 917              		.loc 1 228 5 is_stmt 1 view .LVU264
 918              	.L71:
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 919              		.loc 1 234 5 view .LVU265
 920 0058 FFF7FEFF 		bl	FLASH_FlushCaches
 921              	.LVL74:
ARM GAS  /tmp/ccQC7VXM.s 			page 43


 922              	.L65:
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 923              		.loc 1 238 3 view .LVU266
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 924              		.loc 1 238 3 view .LVU267
 925 005c 154B     		ldr	r3, .L78
 926 005e 0022     		movs	r2, #0
 927 0060 1A70     		strb	r2, [r3]
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 928              		.loc 1 238 3 view .LVU268
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 929              		.loc 1 241 3 view .LVU269
 930              	.LVL75:
 931              	.L74:
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 932              		.loc 1 242 1 is_stmt 0 view .LVU270
 933 0062 3846     		mov	r0, r7
 934 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 935              	.LVL76:
 936              	.L66:
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 937              		.loc 1 200 7 is_stmt 1 view .LVU271
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 938              		.loc 1 200 32 is_stmt 0 view .LVU272
 939 0068 124B     		ldr	r3, .L78
 940 006a 0022     		movs	r2, #0
 941 006c 1A77     		strb	r2, [r3, #28]
 942 006e EAE7     		b	.L67
 943              	.L76:
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       prog_bit = FLASH_CR_PG;
 944              		.loc 1 205 7 is_stmt 1 view .LVU273
 945              	.LVL77:
 946              	.LBB20:
 947              	.LBI20:
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 948              		.loc 1 725 13 view .LVU274
 949              	.LBB21:
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 950              		.loc 1 728 3 view .LVU275
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 951              		.loc 1 731 3 view .LVU276
 952 0070 114A     		ldr	r2, .L78+4
 953 0072 5369     		ldr	r3, [r2, #20]
 954 0074 43F00103 		orr	r3, r3, #1
 955 0078 5361     		str	r3, [r2, #20]
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 956              		.loc 1 734 3 view .LVU277
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 957              		.loc 1 734 26 is_stmt 0 view .LVU278
 958 007a 2E60     		str	r6, [r5]
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 959              		.loc 1 738 3 is_stmt 1 view .LVU279
 960              	.LBB22:
 961              	.LBI22:
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 44


 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  /tmp/ccQC7VXM.s 			page 45


 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  /tmp/ccQC7VXM.s 			page 46


 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccQC7VXM.s 			page 47


 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccQC7VXM.s 			page 48


 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
ARM GAS  /tmp/ccQC7VXM.s 			page 49


 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccQC7VXM.s 			page 50


 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/ccQC7VXM.s 			page 51


 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 962              		.loc 2 933 27 view .LVU280
 963              	.LBB23:
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 964              		.loc 2 935 3 view .LVU281
 965              		.syntax unified
 966              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccQC7VXM.s 			page 52


 967 007c BFF36F8F 		isb 0xF
 968              	@ 0 "" 2
 969              		.thumb
 970              		.syntax unified
 971              	.LBE23:
 972              	.LBE22:
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 973              		.loc 1 741 3 view .LVU282
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 974              		.loc 1 741 33 is_stmt 0 view .LVU283
 975 0080 C5F80480 		str	r8, [r5, #4]
 976              	.LBE21:
 977              	.LBE20:
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 978              		.loc 1 206 16 view .LVU284
 979 0084 0124     		movs	r4, #1
 980              	.LVL78:
 981              	.L69:
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 982              		.loc 1 222 5 is_stmt 1 view .LVU285
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 983              		.loc 1 225 5 view .LVU286
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 984              		.loc 1 225 14 is_stmt 0 view .LVU287
 985 0086 4FF47A70 		mov	r0, #1000
 986 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 987              	.LVL79:
 988 008e 0746     		mov	r7, r0
 989              	.LVL80:
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 990              		.loc 1 228 5 is_stmt 1 view .LVU288
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 991              		.loc 1 230 7 view .LVU289
 992 0090 094A     		ldr	r2, .L78+4
 993 0092 5369     		ldr	r3, [r2, #20]
 994 0094 23EA0403 		bic	r3, r3, r4
 995 0098 5361     		str	r3, [r2, #20]
 996 009a DDE7     		b	.L71
 997              	.LVL81:
 998              	.L77:
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 999              		.loc 1 211 7 view .LVU290
 1000 009c 3146     		mov	r1, r6
 1001 009e 2846     		mov	r0, r5
 1002              	.LVL82:
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1003              		.loc 1 211 7 is_stmt 0 view .LVU291
 1004 00a0 FFF7FEFF 		bl	FLASH_Program_Fast
 1005              	.LVL83:
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 1006              		.loc 1 214 7 is_stmt 1 view .LVU292
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       {
 1007              		.loc 1 214 10 is_stmt 0 view .LVU293
 1008 00a4 022C     		cmp	r4, #2
 1009 00a6 D2D1     		bne	.L70
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 1010              		.loc 1 216 18 view .LVU294
ARM GAS  /tmp/ccQC7VXM.s 			page 53


 1011 00a8 4FF48024 		mov	r4, #262144
 1012              	.LVL84:
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****       }
 1013              		.loc 1 216 18 view .LVU295
 1014 00ac EBE7     		b	.L69
 1015              	.LVL85:
 1016              	.L72:
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1017              		.loc 1 182 3 view .LVU296
 1018 00ae 0227     		movs	r7, #2
 1019 00b0 D7E7     		b	.L74
 1020              	.L79:
 1021 00b2 00BF     		.align	2
 1022              	.L78:
 1023 00b4 00000000 		.word	.LANCHOR0
 1024 00b8 00200240 		.word	1073881088
 1025              		.cfi_endproc
 1026              	.LFE132:
 1028              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 1029              		.align	1
 1030              		.global	HAL_FLASH_Program_IT
 1031              		.syntax unified
 1032              		.thumb
 1033              		.thumb_func
 1034              		.fpu fpv4-sp-d16
 1036              	HAL_FLASH_Program_IT:
 1037              	.LVL86:
 1038              	.LFB133:
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1039              		.loc 1 256 1 is_stmt 1 view -0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1043              		.loc 1 256 1 is_stmt 0 view .LVU298
 1044 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1045              	.LCFI5:
 1046              		.cfi_def_cfa_offset 24
 1047              		.cfi_offset 4, -24
 1048              		.cfi_offset 5, -20
 1049              		.cfi_offset 6, -16
 1050              		.cfi_offset 7, -12
 1051              		.cfi_offset 8, -8
 1052              		.cfi_offset 14, -4
 1053 0004 1F46     		mov	r7, r3
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1054              		.loc 1 257 3 is_stmt 1 view .LVU299
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1055              		.loc 1 260 3 view .LVU300
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1056              		.loc 1 263 3 view .LVU301
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1057              		.loc 1 263 3 view .LVU302
 1058 0006 294B     		ldr	r3, .L91
 1059 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 000a 012B     		cmp	r3, #1
 1061 000c 4AD0     		beq	.L88
ARM GAS  /tmp/ccQC7VXM.s 			page 54


 1062 000e 0446     		mov	r4, r0
 1063 0010 0D46     		mov	r5, r1
 1064 0012 1646     		mov	r6, r2
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1065              		.loc 1 263 3 discriminator 2 view .LVU303
 1066 0014 2548     		ldr	r0, .L91
 1067              	.LVL87:
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1068              		.loc 1 263 3 is_stmt 0 discriminator 2 view .LVU304
 1069 0016 0123     		movs	r3, #1
 1070 0018 0370     		strb	r3, [r0]
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1071              		.loc 1 263 3 is_stmt 1 discriminator 2 view .LVU305
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1072              		.loc 1 266 3 discriminator 2 view .LVU306
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1073              		.loc 1 266 20 is_stmt 0 discriminator 2 view .LVU307
 1074 001a 0023     		movs	r3, #0
 1075 001c 4360     		str	r3, [r0, #4]
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 1076              		.loc 1 269 3 is_stmt 1 discriminator 2 view .LVU308
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 1077              		.loc 1 269 6 is_stmt 0 discriminator 2 view .LVU309
 1078 001e 244B     		ldr	r3, .L91+4
 1079 0020 1B68     		ldr	r3, [r3]
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 1080              		.loc 1 269 5 discriminator 2 view .LVU310
 1081 0022 13F4806F 		tst	r3, #1024
 1082 0026 12D0     		beq	.L82
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 1083              		.loc 1 272 5 is_stmt 1 view .LVU311
 1084 0028 214A     		ldr	r2, .L91+4
 1085              	.LVL88:
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 1086              		.loc 1 272 5 is_stmt 0 view .LVU312
 1087 002a 1368     		ldr	r3, [r2]
 1088 002c 23F48063 		bic	r3, r3, #1024
 1089 0030 1360     		str	r3, [r2]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1090              		.loc 1 273 5 is_stmt 1 view .LVU313
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1091              		.loc 1 273 30 is_stmt 0 view .LVU314
 1092 0032 0222     		movs	r2, #2
 1093 0034 0277     		strb	r2, [r0, #28]
 1094              	.L83:
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1095              		.loc 1 281 3 is_stmt 1 view .LVU315
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1096              		.loc 1 281 12 is_stmt 0 view .LVU316
 1097 0036 4FF47A70 		mov	r0, #1000
 1098 003a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1099              	.LVL89:
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 1100              		.loc 1 283 3 is_stmt 1 view .LVU317
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   {
 1101              		.loc 1 283 6 is_stmt 0 view .LVU318
 1102 003e 8046     		mov	r8, r0
ARM GAS  /tmp/ccQC7VXM.s 			page 55


 1103 0040 48B1     		cbz	r0, .L84
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1104              		.loc 1 286 5 is_stmt 1 view .LVU319
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1105              		.loc 1 286 5 view .LVU320
 1106 0042 1A4B     		ldr	r3, .L91
 1107 0044 0022     		movs	r2, #0
 1108 0046 1A70     		strb	r2, [r3]
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1109              		.loc 1 286 5 view .LVU321
 1110              	.LVL90:
 1111              	.L81:
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1112              		.loc 1 321 1 is_stmt 0 view .LVU322
 1113 0048 4046     		mov	r0, r8
 1114 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1115              	.LVL91:
 1116              	.L82:
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1117              		.loc 1 277 5 is_stmt 1 view .LVU323
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1118              		.loc 1 277 30 is_stmt 0 view .LVU324
 1119 004e 174B     		ldr	r3, .L91
 1120 0050 0022     		movs	r2, #0
 1121              	.LVL92:
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   }
 1122              		.loc 1 277 30 view .LVU325
 1123 0052 1A77     		strb	r2, [r3, #28]
 1124 0054 EFE7     		b	.L83
 1125              	.LVL93:
 1126              	.L84:
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1127              		.loc 1 291 5 is_stmt 1 view .LVU326
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1128              		.loc 1 291 8 is_stmt 0 view .LVU327
 1129 0056 022C     		cmp	r4, #2
 1130 0058 12D0     		beq	.L90
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1131              		.loc 1 297 7 is_stmt 1 view .LVU328
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1132              		.loc 1 297 31 is_stmt 0 view .LVU329
 1133 005a 144B     		ldr	r3, .L91
 1134 005c 0322     		movs	r2, #3
 1135 005e 1A72     		strb	r2, [r3, #8]
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1136              		.loc 1 299 5 is_stmt 1 view .LVU330
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1137              		.loc 1 299 20 is_stmt 0 view .LVU331
 1138 0060 DD60     		str	r5, [r3, #12]
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1139              		.loc 1 302 5 is_stmt 1 view .LVU332
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1140              		.loc 1 302 5 view .LVU333
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1141              		.loc 1 302 5 view .LVU334
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1142              		.loc 1 302 5 view .LVU335
ARM GAS  /tmp/ccQC7VXM.s 			page 56


 1143 0062 134A     		ldr	r2, .L91+4
 1144 0064 5369     		ldr	r3, [r2, #20]
 1145 0066 43F04073 		orr	r3, r3, #50331648
 1146 006a 5361     		str	r3, [r2, #20]
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1147              		.loc 1 302 5 view .LVU336
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1148              		.loc 1 304 5 view .LVU337
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1149              		.loc 1 304 8 is_stmt 0 view .LVU338
 1150 006c B4B9     		cbnz	r4, .L87
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1151              		.loc 1 307 7 is_stmt 1 view .LVU339
 1152              	.LVL94:
 1153              	.LBB28:
 1154              	.LBI28:
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** {
 1155              		.loc 1 725 13 view .LVU340
 1156              	.LBB29:
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1157              		.loc 1 728 3 view .LVU341
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1158              		.loc 1 731 3 view .LVU342
 1159 006e 5369     		ldr	r3, [r2, #20]
 1160 0070 43F00103 		orr	r3, r3, #1
 1161 0074 5361     		str	r3, [r2, #20]
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1162              		.loc 1 734 3 view .LVU343
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1163              		.loc 1 734 26 is_stmt 0 view .LVU344
 1164 0076 2E60     		str	r6, [r5]
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1165              		.loc 1 738 3 is_stmt 1 view .LVU345
 1166              	.LBB30:
 1167              	.LBI30:
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1168              		.loc 2 933 27 view .LVU346
 1169              	.LBB31:
 1170              		.loc 2 935 3 view .LVU347
 1171              		.syntax unified
 1172              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1173 0078 BFF36F8F 		isb 0xF
 1174              	@ 0 "" 2
 1175              		.thumb
 1176              		.syntax unified
 1177              	.LBE31:
 1178              	.LBE30:
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 1179              		.loc 1 741 3 view .LVU348
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 1180              		.loc 1 741 33 is_stmt 0 view .LVU349
 1181 007c 6F60     		str	r7, [r5, #4]
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1182              		.loc 1 742 1 view .LVU350
 1183 007e E3E7     		b	.L81
 1184              	.LVL95:
 1185              	.L90:
ARM GAS  /tmp/ccQC7VXM.s 			page 57


 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1186              		.loc 1 742 1 view .LVU351
 1187              	.LBE29:
 1188              	.LBE28:
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1189              		.loc 1 293 7 is_stmt 1 view .LVU352
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1190              		.loc 1 293 31 is_stmt 0 view .LVU353
 1191 0080 0A4B     		ldr	r3, .L91
 1192 0082 0422     		movs	r2, #4
 1193 0084 1A72     		strb	r2, [r3, #8]
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1194              		.loc 1 299 5 is_stmt 1 view .LVU354
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1195              		.loc 1 299 20 is_stmt 0 view .LVU355
 1196 0086 DD60     		str	r5, [r3, #12]
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1197              		.loc 1 302 5 is_stmt 1 view .LVU356
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1198              		.loc 1 302 5 view .LVU357
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1199              		.loc 1 302 5 view .LVU358
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1200              		.loc 1 302 5 view .LVU359
 1201 0088 094A     		ldr	r2, .L91+4
 1202 008a 5369     		ldr	r3, [r2, #20]
 1203 008c 43F04073 		orr	r3, r3, #50331648
 1204 0090 5361     		str	r3, [r2, #20]
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1205              		.loc 1 302 5 view .LVU360
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1206              		.loc 1 304 5 view .LVU361
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1207              		.loc 1 309 10 view .LVU362
 1208              	.LVL96:
 1209              	.L86:
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1210              		.loc 1 312 7 view .LVU363
 1211 0092 3146     		mov	r1, r6
 1212 0094 2846     		mov	r0, r5
 1213              	.LVL97:
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     }
 1214              		.loc 1 312 7 is_stmt 0 view .LVU364
 1215 0096 FFF7FEFF 		bl	FLASH_Program_Fast
 1216              	.LVL98:
 1217 009a D5E7     		b	.L81
 1218              	.LVL99:
 1219              	.L87:
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1220              		.loc 1 309 10 is_stmt 1 view .LVU365
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1221              		.loc 1 309 54 is_stmt 0 view .LVU366
 1222 009c 013C     		subs	r4, r4, #1
 1223              	.LVL100:
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****     {
 1224              		.loc 1 309 13 view .LVU367
 1225 009e 012C     		cmp	r4, #1
ARM GAS  /tmp/ccQC7VXM.s 			page 58


 1226 00a0 D2D8     		bhi	.L81
 1227 00a2 F6E7     		b	.L86
 1228              	.LVL101:
 1229              	.L88:
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1230              		.loc 1 263 3 view .LVU368
 1231 00a4 4FF00208 		mov	r8, #2
 1232 00a8 CEE7     		b	.L81
 1233              	.L92:
 1234 00aa 00BF     		.align	2
 1235              	.L91:
 1236 00ac 00000000 		.word	.LANCHOR0
 1237 00b0 00200240 		.word	1073881088
 1238              		.cfi_endproc
 1239              	.LFE133:
 1241              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1242              		.align	1
 1243              		.global	HAL_FLASH_OB_Launch
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu fpv4-sp-d16
 1249              	HAL_FLASH_OB_Launch:
 1250              	.LFB141:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 1251              		.loc 1 607 1 is_stmt 1 view -0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255 0000 08B5     		push	{r3, lr}
 1256              	.LCFI6:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 3, -8
 1259              		.cfi_offset 14, -4
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1260              		.loc 1 609 3 view .LVU370
 1261 0002 054A     		ldr	r2, .L95
 1262 0004 5369     		ldr	r3, [r2, #20]
 1263 0006 43F00063 		orr	r3, r3, #134217728
 1264 000a 5361     		str	r3, [r2, #20]
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 1265              		.loc 1 612 3 view .LVU371
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** }
 1266              		.loc 1 612 11 is_stmt 0 view .LVU372
 1267 000c 4FF47A70 		mov	r0, #1000
 1268 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1269              	.LVL102:
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c **** 
 1270              		.loc 1 613 1 view .LVU373
 1271 0014 08BD     		pop	{r3, pc}
 1272              	.L96:
 1273 0016 00BF     		.align	2
 1274              	.L95:
 1275 0018 00200240 		.word	1073881088
 1276              		.cfi_endproc
 1277              	.LFE141:
 1279              		.global	pFlash
ARM GAS  /tmp/ccQC7VXM.s 			page 59


 1280              		.section	.data.pFlash,"aw"
 1281              		.align	2
 1282              		.set	.LANCHOR0,. + 0
 1285              	pFlash:
 1286 0000 00       		.byte	0
 1287 0001 000000   		.space	3
 1288 0004 00000000 		.word	0
 1289 0008 00       		.byte	0
 1290 0009 000000   		.space	3
 1291 000c 00000000 		.word	0
 1292 0010 01000000 		.word	1
 1293 0014 00000000 		.word	0
 1294 0018 00000000 		.word	0
 1295 001c 00       		.byte	0
 1296 001d 000000   		.space	3
 1297              		.text
 1298              	.Letext0:
 1299              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1300              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1301              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1302              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1303              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 1304              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1305              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash_ex.h"
ARM GAS  /tmp/ccQC7VXM.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_flash.c
     /tmp/ccQC7VXM.s:18     .text.FLASH_Program_Fast:0000000000000000 $t
     /tmp/ccQC7VXM.s:25     .text.FLASH_Program_Fast:0000000000000000 FLASH_Program_Fast
     /tmp/ccQC7VXM.s:135    .text.FLASH_Program_Fast:0000000000000030 $d
     /tmp/ccQC7VXM.s:140    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 $t
     /tmp/ccQC7VXM.s:147    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 HAL_FLASH_EndOfOperationCallback
     /tmp/ccQC7VXM.s:162    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 $t
     /tmp/ccQC7VXM.s:169    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 HAL_FLASH_OperationErrorCallback
     /tmp/ccQC7VXM.s:184    .text.HAL_FLASH_IRQHandler:0000000000000000 $t
     /tmp/ccQC7VXM.s:191    .text.HAL_FLASH_IRQHandler:0000000000000000 HAL_FLASH_IRQHandler
     /tmp/ccQC7VXM.s:474    .text.HAL_FLASH_IRQHandler:0000000000000118 $d
     /tmp/ccQC7VXM.s:480    .text.HAL_FLASH_Unlock:0000000000000000 $t
     /tmp/ccQC7VXM.s:487    .text.HAL_FLASH_Unlock:0000000000000000 HAL_FLASH_Unlock
     /tmp/ccQC7VXM.s:527    .text.HAL_FLASH_Unlock:0000000000000020 $d
     /tmp/ccQC7VXM.s:533    .text.HAL_FLASH_Lock:0000000000000000 $t
     /tmp/ccQC7VXM.s:540    .text.HAL_FLASH_Lock:0000000000000000 HAL_FLASH_Lock
     /tmp/ccQC7VXM.s:570    .text.HAL_FLASH_Lock:0000000000000014 $d
     /tmp/ccQC7VXM.s:575    .text.HAL_FLASH_OB_Unlock:0000000000000000 $t
     /tmp/ccQC7VXM.s:582    .text.HAL_FLASH_OB_Unlock:0000000000000000 HAL_FLASH_OB_Unlock
     /tmp/ccQC7VXM.s:620    .text.HAL_FLASH_OB_Unlock:0000000000000024 $d
     /tmp/ccQC7VXM.s:626    .text.HAL_FLASH_OB_Lock:0000000000000000 $t
     /tmp/ccQC7VXM.s:633    .text.HAL_FLASH_OB_Lock:0000000000000000 HAL_FLASH_OB_Lock
     /tmp/ccQC7VXM.s:663    .text.HAL_FLASH_OB_Lock:0000000000000018 $d
     /tmp/ccQC7VXM.s:668    .text.HAL_FLASH_GetError:0000000000000000 $t
     /tmp/ccQC7VXM.s:675    .text.HAL_FLASH_GetError:0000000000000000 HAL_FLASH_GetError
     /tmp/ccQC7VXM.s:691    .text.HAL_FLASH_GetError:0000000000000008 $d
     /tmp/ccQC7VXM.s:696    .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/ccQC7VXM.s:703    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/ccQC7VXM.s:813    .text.FLASH_WaitForLastOperation:0000000000000058 $d
     /tmp/ccQC7VXM.s:819    .text.HAL_FLASH_Program:0000000000000000 $t
     /tmp/ccQC7VXM.s:826    .text.HAL_FLASH_Program:0000000000000000 HAL_FLASH_Program
     /tmp/ccQC7VXM.s:1023   .text.HAL_FLASH_Program:00000000000000b4 $d
     /tmp/ccQC7VXM.s:1029   .text.HAL_FLASH_Program_IT:0000000000000000 $t
     /tmp/ccQC7VXM.s:1036   .text.HAL_FLASH_Program_IT:0000000000000000 HAL_FLASH_Program_IT
     /tmp/ccQC7VXM.s:1236   .text.HAL_FLASH_Program_IT:00000000000000ac $d
     /tmp/ccQC7VXM.s:1242   .text.HAL_FLASH_OB_Launch:0000000000000000 $t
     /tmp/ccQC7VXM.s:1249   .text.HAL_FLASH_OB_Launch:0000000000000000 HAL_FLASH_OB_Launch
     /tmp/ccQC7VXM.s:1275   .text.HAL_FLASH_OB_Launch:0000000000000018 $d
     /tmp/ccQC7VXM.s:1285   .data.pFlash:0000000000000000 pFlash
     /tmp/ccQC7VXM.s:1281   .data.pFlash:0000000000000000 $d

UNDEFINED SYMBOLS
FLASH_PageErase
FLASH_FlushCaches
HAL_GetTick
