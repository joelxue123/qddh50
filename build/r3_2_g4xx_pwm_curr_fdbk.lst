ARM GAS  /tmp/ccA1EUYa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"r3_2_g4xx_pwm_curr_fdbk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_DBGMCU_APB2_GRP1_FreezePeriph,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_DBGMCU_APB2_GRP1_FreezePeriph:
  26              	.LFB365:
  27              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @file    stm32g4xx_ll_system.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   @verbatim
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ==============================================================================
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                      ##### How to use this driver #####
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ==============================================================================
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****     [..]
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****     used by user:
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Access to DBGCMU registers
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Access to SYSCFG registers
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Access to VREFBUF registers
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   @endverbatim
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 2


  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #ifndef __STM32G4xx_LL_SYSTEM_H
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define __STM32G4xx_LL_SYSTEM_H
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #ifdef __cplusplus
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** extern "C" {
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #include "stm32g4xx.h"
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @addtogroup STM32G4xx_LL_Driver
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU) || defined (VREFBUF)
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Defines used for position in the register */
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define DBGMCU_REVID_POSITION         (uint32_t)POSITION_VAL(DBGMCU_IDCODE_REV_ID)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief Power-down in Run mode Flash key
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define FLASH_PDKEY1                  0x04152637U /*!< Flash power down key1 */
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define FLASH_PDKEY2                  0xFAFBFCFDU /*!< Flash power down key2: used with FLASH_PDKEY
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                        to unlock the RUN_PD bit in FLASH_ACR */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG REMAP
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_FLASH              0x00000000U                                           /*
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_SYSTEMFLASH        SYSCFG_MEMRMP_MEM_MODE_0                              /*
ARM GAS  /tmp/ccA1EUYa.s 			page 3


  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_SRAM               (SYSCFG_MEMRMP_MEM_MODE_1 | SYSCFG_MEMRMP_MEM_MODE_0) /*
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(FMC_Bank1_R)
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_FMC                SYSCFG_MEMRMP_MEM_MODE_1                              /*
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* FMC_Bank1_R */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_QUADSPI            (SYSCFG_MEMRMP_MEM_MODE_2 | SYSCFG_MEMRMP_MEM_MODE_1) /*
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_MEMRMP_FB_MODE)
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BANKMODE SYSCFG BANK MODE
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK1           0x00000000U               /*!< Flash Bank1 mapped at 0x0
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                       and Flash Bank2 mapped at 0x0
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK2           SYSCFG_MEMRMP_FB_MODE     /*!< Flash Bank2 mapped at 0x0
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                       and Flash Bank1 mapped at 0x0
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_MEMRMP_FB_MODE */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6     SYSCFG_CFGR1_I2C_PB6_FMP  /*!< Enable Fast Mode Plus on 
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7     SYSCFG_CFGR1_I2C_PB7_FMP  /*!< Enable Fast Mode Plus on 
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_PB8_FMP)
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8     SYSCFG_CFGR1_I2C_PB8_FMP  /*!< Enable Fast Mode Plus on 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_CFGR1_I2C_PB8_FMP */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_PB9_FMP)
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9     SYSCFG_CFGR1_I2C_PB9_FMP  /*!< Enable Fast Mode Plus on 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_CFGR1_I2C_PB9_FMP */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1    SYSCFG_CFGR1_I2C1_FMP     /*!< Enable Fast Mode Plus on 
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C2)
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2    SYSCFG_CFGR1_I2C2_FMP     /*!< Enable Fast Mode Plus on 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C2 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C3    SYSCFG_CFGR1_I2C3_FMP     /*!< Enable Fast Mode Plus on 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C4)
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C4    SYSCFG_CFGR1_I2C4_FMP     /*!< Enable Fast Mode Plus on 
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C4 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI PORT
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               0U                        /*!< EXTI PORT A              
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               1U                        /*!< EXTI PORT B              
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               2U                        /*!< EXTI PORT C              
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               3U                        /*!< EXTI PORT D              
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               4U                        /*!< EXTI PORT E              
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTF               5U                        /*!< EXTI PORT F              
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTG               6U                        /*!< EXTI PORT G              
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
ARM GAS  /tmp/ccA1EUYa.s 			page 4


 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI LINE
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (uint32_t)((0x000FU << 16U) | 0U)  /* !< EXTI_POSITION_0
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (uint32_t)((0x00F0U << 16U) | 0U)  /* !< EXTI_POSITION_4
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (uint32_t)((0x0F00U << 16U) | 0U)  /* !< EXTI_POSITION_8
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (uint32_t)((0xF000U << 16U) | 0U)  /* !< EXTI_POSITION_1
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (uint32_t)((0x000FU << 16U) | 1U)  /* !< EXTI_POSITION_0
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (uint32_t)((0x00F0U << 16U) | 1U)  /* !< EXTI_POSITION_4
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (uint32_t)((0x0F00U << 16U) | 1U)  /* !< EXTI_POSITION_8
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (uint32_t)((0xF000U << 16U) | 1U)  /* !< EXTI_POSITION_1
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (uint32_t)((0x000FU << 16U) | 2U)  /* !< EXTI_POSITION_0
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (uint32_t)((0x00F0U << 16U) | 2U)  /* !< EXTI_POSITION_4
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (uint32_t)((0x0F00U << 16U) | 2U)  /* !< EXTI_POSITION_8
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (uint32_t)((0xF000U << 16U) | 2U)  /* !< EXTI_POSITION_1
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (uint32_t)((0x000FU << 16U) | 3U)  /* !< EXTI_POSITION_0
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (uint32_t)((0x00F0U << 16U) | 3U)  /* !< EXTI_POSITION_4
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (uint32_t)((0x0F00U << 16U) | 3U)  /* !< EXTI_POSITION_8
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (uint32_t)((0xF000U << 16U) | 3U)  /* !< EXTI_POSITION_1
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIMBREAK SYSCFG TIMER BREAK
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_ECC             SYSCFG_CFGR2_ECCL  /*!< Enables and locks the ECC error 
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with Break Input of TIM1/8/15/16
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_PVD             SYSCFG_CFGR2_PVDL  /*!< Enables and locks the PVD connec
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with TIM1/8/15/16/17 Break Input
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    and also the PVDE and PLS bits o
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_SRAM_PARITY     SYSCFG_CFGR2_SPL   /*!< Enables and locks the SRAM_PARIT
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with Break Input of TIM1/8/15/16
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_LOCKUP          SYSCFG_CFGR2_CLL   /*!< Enables and locks the LOCKUP out
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with Break Input of TIM1/15/16/1
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_CCMSRAMWRP SYSCFG CCMSRAM WRP
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE0         SYSCFG_SWPR_PAGE0  /*!< CCMSRAM Write protection page 0 
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE1         SYSCFG_SWPR_PAGE1  /*!< CCMSRAM Write protection page 1 
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE2         SYSCFG_SWPR_PAGE2  /*!< CCMSRAM Write protection page 2 
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE3         SYSCFG_SWPR_PAGE3  /*!< CCMSRAM Write protection page 3 
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE4         SYSCFG_SWPR_PAGE4  /*!< CCMSRAM Write protection page 4 
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE5         SYSCFG_SWPR_PAGE5  /*!< CCMSRAM Write protection page 5 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE6         SYSCFG_SWPR_PAGE6  /*!< CCMSRAM Write protection page 6 
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE7         SYSCFG_SWPR_PAGE7  /*!< CCMSRAM Write protection page 7 
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE8         SYSCFG_SWPR_PAGE8  /*!< CCMSRAM Write protection page 8 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE9         SYSCFG_SWPR_PAGE9  /*!< CCMSRAM Write protection page 9 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_SWPR_PAGE10)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE10        SYSCFG_SWPR_PAGE10 /*!< CCMSRAM Write protection page 10
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE11        SYSCFG_SWPR_PAGE11 /*!< CCMSRAM Write protection page 11
ARM GAS  /tmp/ccA1EUYa.s 			page 5


 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE12        SYSCFG_SWPR_PAGE12 /*!< CCMSRAM Write protection page 12
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE13        SYSCFG_SWPR_PAGE13 /*!< CCMSRAM Write protection page 13
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE14        SYSCFG_SWPR_PAGE14 /*!< CCMSRAM Write protection page 14
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE15        SYSCFG_SWPR_PAGE15 /*!< CCMSRAM Write protection page 15
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE16        SYSCFG_SWPR_PAGE16 /*!< CCMSRAM Write protection page 16
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE17        SYSCFG_SWPR_PAGE17 /*!< CCMSRAM Write protection page 17
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE18        SYSCFG_SWPR_PAGE18 /*!< CCMSRAM Write protection page 18
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE19        SYSCFG_SWPR_PAGE19 /*!< CCMSRAM Write protection page 19
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE20        SYSCFG_SWPR_PAGE20 /*!< CCMSRAM Write protection page 20
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE21        SYSCFG_SWPR_PAGE21 /*!< CCMSRAM Write protection page 21
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE22        SYSCFG_SWPR_PAGE22 /*!< CCMSRAM Write protection page 22
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE23        SYSCFG_SWPR_PAGE23 /*!< CCMSRAM Write protection page 23
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE24        SYSCFG_SWPR_PAGE24 /*!< CCMSRAM Write protection page 24
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE25        SYSCFG_SWPR_PAGE25 /*!< CCMSRAM Write protection page 25
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE26        SYSCFG_SWPR_PAGE26 /*!< CCMSRAM Write protection page 26
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE27        SYSCFG_SWPR_PAGE27 /*!< CCMSRAM Write protection page 27
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE28        SYSCFG_SWPR_PAGE28 /*!< CCMSRAM Write protection page 28
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE29        SYSCFG_SWPR_PAGE29 /*!< CCMSRAM Write protection page 29
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE30        SYSCFG_SWPR_PAGE30 /*!< CCMSRAM Write protection page 30
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE31        SYSCFG_SWPR_PAGE31 /*!< CCMSRAM Write protection page 31
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_SWPR_PAGE10 */
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TRACE DBGMCU TRACE Pin Assignment
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_NONE               0x00000000U                                     /*!< TRA
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_ASYNCH             DBGMCU_CR_TRACE_IOEN                            /*!< TRA
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE1        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_0) /*!< TRA
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE2        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_1) /*!< TRA
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE4        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE)   /*!< TRA
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1FZR1_DBG_TIM2_STOP   /*!< The counter clock o
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM3)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1FZR1_DBG_TIM3_STOP   /*!< The counter clock o
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM3 */
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM4)
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM4_STOP      DBGMCU_APB1FZR1_DBG_TIM4_STOP   /*!< The counter clock o
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM4 */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM5)
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM5_STOP      DBGMCU_APB1FZR1_DBG_TIM5_STOP   /*!< The counter clock o
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM5 */
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1FZR1_DBG_TIM6_STOP   /*!< The counter clock o
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM7)
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1FZR1_DBG_TIM7_STOP   /*!< The counter clock o
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM7 */
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1FZR1_DBG_RTC_STOP    /*!< The clock of the RT
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1FZR1_DBG_WWDG_STOP   /*!< The window watchdog
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1FZR1_DBG_IWDG_STOP   /*!< The independent wat
ARM GAS  /tmp/ccA1EUYa.s 			page 6


 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1FZR1_DBG_I2C1_STOP   /*!< The I2C1 SMBus time
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C2)
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_APB1FZR1_DBG_I2C2_STOP   /*!< The I2C2 SMBus time
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C2 */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C3_STOP      DBGMCU_APB1FZR1_DBG_I2C3_STOP   /*!< The I2C3 SMBus time
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_LPTIM1_STOP    DBGMCU_APB1FZR1_DBG_LPTIM1_STOP /*!< The counter clock o
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP2_STOP_IP DBGMCU APB1 GRP2 STOP IP
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C4)
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_I2C4_STOP      DBGMCU_APB1FZR2_DBG_I2C4_STOP   /*!< The I2C4 SMBus time
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C4 */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM1_STOP      DBGMCU_APB2FZ_DBG_TIM1_STOP     /*!< The counter clock o
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM8)
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM8_STOP      DBGMCU_APB2FZ_DBG_TIM8_STOP     /*!< The counter clock o
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM8 */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM15_STOP     DBGMCU_APB2FZ_DBG_TIM15_STOP    /*!< The counter clock o
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM16_STOP     DBGMCU_APB2FZ_DBG_TIM16_STOP    /*!< The counter clock o
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM17)
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM17_STOP     DBGMCU_APB2FZ_DBG_TIM17_STOP    /*!< The counter clock o
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM17 */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM20)
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM20_STOP     DBGMCU_APB2FZ_DBG_TIM20_STOP    /*!< The counter clock o
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM20 */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(HRTIM1)
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_HRTIM1_STOP     DBGMCU_APB2FZ_DBG_HRTIM1_STOP    /*!< The counter clock
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* HRTIM1 */
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(VREFBUF)
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_VOLTAGE VREFBUF VOLTAGE
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_VREFBUF_VOLTAGE_SCALE0          ((uint32_t)0x00000000) /*!< Voltage reference scale 0 (V
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_VREFBUF_VOLTAGE_SCALE1          VREFBUF_CSR_VRS_0      /*!< Voltage reference scale 1 (V
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_VREFBUF_VOLTAGE_SCALE2          VREFBUF_CSR_VRS_1      /*!< Voltage reference scale 2 (V
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* VREFBUF */
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 7


 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 FLASH_ACR_LATENCY_0WS   /*!< FLASH Zero wait state */
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY_1WS   /*!< FLASH One wait state */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_2                 FLASH_ACR_LATENCY_2WS   /*!< FLASH Two wait states */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_3                 FLASH_ACR_LATENCY_3WS   /*!< FLASH Three wait states */
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_4                 FLASH_ACR_LATENCY_4WS   /*!< FLASH Four wait states */
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY_5WS)
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_5                 FLASH_ACR_LATENCY_5WS   /*!< FLASH five wait state */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_6                 FLASH_ACR_LATENCY_6WS   /*!< FLASH six wait state */
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_7                 FLASH_ACR_LATENCY_7WS   /*!< FLASH seven wait states */
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_8                 FLASH_ACR_LATENCY_8WS   /*!< FLASH eight wait states */
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_9                 FLASH_ACR_LATENCY_9WS   /*!< FLASH nine wait states */
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_10                FLASH_ACR_LATENCY_10WS  /*!< FLASH ten wait states */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_11                FLASH_ACR_LATENCY_11WS  /*!< FLASH eleven wait states */
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_12                FLASH_ACR_LATENCY_12WS  /*!< FLASH twelve wait states */
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_13                FLASH_ACR_LATENCY_13WS  /*!< FLASH thirteen wait states 
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_14                FLASH_ACR_LATENCY_14WS  /*!< FLASH fourteen wait states 
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_15                FLASH_ACR_LATENCY_15WS  /*!< FLASH fifteen wait states *
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* FLASH_ACR_LATENCY_5WS */
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set memory mapping at address 0x00000000
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP MEM_MODE      LL_SYSCFG_SetRemapMemory
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Memory This parameter can be one of the following values:
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FMC (*)
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_QUADSPI (*)
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapMemory(uint32_t Memory)
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->MEMRMP, SYSCFG_MEMRMP_MEM_MODE, Memory);
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get memory mapping at address 0x00000000
ARM GAS  /tmp/ccA1EUYa.s 			page 8


 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP MEM_MODE      LL_SYSCFG_GetRemapMemory
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FMC (*)
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_QUADSPI (*)
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemory(void)
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_MEM_MODE));
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_MEMRMP_FB_MODE)
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Select Flash bank mode (Bank flashed at 0x08000000)
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP FB_MODE       LL_SYSCFG_SetFlashBankMode
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Bank This parameter can be one of the following values:
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetFlashBankMode(uint32_t Bank)
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->MEMRMP, SYSCFG_MEMRMP_FB_MODE, Bank);
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get Flash bank mode (Bank flashed at 0x08000000)
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP FB_MODE       LL_SYSCFG_GetFlashBankMode
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetFlashBankMode(void)
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_FB_MODE));
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_MEMRMP_FB_MODE */
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable I/O analog switch voltage booster.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   When voltage booster is enabled, I/O analog switches are supplied
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         by a dedicated voltage booster, from VDD power domain. This is
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         the recommended configuration with low VDDA voltage operation.
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   The I/O analog switch voltage booster is relevant for peripherals
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         using I/O in analog input: ADC, COMP, OPAMP.
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         However, COMP and OPAMP inputs have a high impedance and
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         voltage booster do not impact performance significantly.
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         Therefore, the voltage booster is mainly intended for
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         usage with ADC.
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 BOOSTEN       LL_SYSCFG_EnableAnalogBooster
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableAnalogBooster(void)
ARM GAS  /tmp/ccA1EUYa.s 			page 9


 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable I/O analog switch voltage booster.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   When voltage booster is enabled, I/O analog switches are supplied
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         by a dedicated voltage booster, from VDD power domain. This is
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         the recommended configuration with low VDDA voltage operation.
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   The I/O analog switch voltage booster is relevant for peripherals
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         using I/O in analog input: ADC, COMP, OPAMP.
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         However, COMP and OPAMP inputs have a high impedance and
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         voltage booster do not impact performance significantly.
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         Therefore, the voltage booster is mainly intended for
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         usage with ADC.
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 BOOSTEN       LL_SYSCFG_DisableAnalogBooster
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableAnalogBooster(void)
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_PBx_FMP   LL_SYSCFG_EnableFastModePlus\n
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR1 I2Cx_FMP      LL_SYSCFG_EnableFastModePlus
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8 (*)
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9 (*)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C4 (*)
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_PBx_FMP   LL_SYSCFG_DisableFastModePlus\n
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR1 I2Cx_FMP      LL_SYSCFG_DisableFastModePlus
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8 (*)
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9 (*)
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3
ARM GAS  /tmp/ccA1EUYa.s 			page 10


 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C4 (*)
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Invalid operation Interrupt
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_0      LL_SYSCFG_EnableIT_FPU_IOC
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_IOC(void)
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_0);
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Divide-by-zero Interrupt
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_1      LL_SYSCFG_EnableIT_FPU_DZC
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_DZC(void)
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_1);
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Underflow Interrupt
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_2      LL_SYSCFG_EnableIT_FPU_UFC
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_UFC(void)
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_2);
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Overflow Interrupt
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_3      LL_SYSCFG_EnableIT_FPU_OFC
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_OFC(void)
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_3);
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Input denormal Interrupt
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_4      LL_SYSCFG_EnableIT_FPU_IDC
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_IDC(void)
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 11


 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_4);
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Inexact Interrupt
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_5      LL_SYSCFG_EnableIT_FPU_IXC
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_IXC(void)
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_5);
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Invalid operation Interrupt
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_0      LL_SYSCFG_DisableIT_FPU_IOC
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_IOC(void)
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_0);
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Divide-by-zero Interrupt
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_1      LL_SYSCFG_DisableIT_FPU_DZC
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_DZC(void)
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_1);
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Underflow Interrupt
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_2      LL_SYSCFG_DisableIT_FPU_UFC
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_UFC(void)
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_2);
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Overflow Interrupt
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_3      LL_SYSCFG_DisableIT_FPU_OFC
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_OFC(void)
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_3);
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Input denormal Interrupt
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_4      LL_SYSCFG_DisableIT_FPU_IDC
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 12


 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_IDC(void)
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_4);
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Inexact Interrupt
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_5      LL_SYSCFG_DisableIT_FPU_IXC
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_IXC(void)
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_5);
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Invalid operation Interrupt source is enabled or disabled.
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_0      LL_SYSCFG_IsEnabledIT_FPU_IOC
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_IOC(void)
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_0) == (SYSCFG_CFGR1_FPU_IE_0)) ? 1UL : 0UL);
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Divide-by-zero Interrupt source is enabled or disabled.
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_1      LL_SYSCFG_IsEnabledIT_FPU_DZC
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_DZC(void)
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_1) == (SYSCFG_CFGR1_FPU_IE_1)) ? 1UL : 0UL);
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Underflow Interrupt source is enabled or disabled.
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_2      LL_SYSCFG_IsEnabledIT_FPU_UFC
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_UFC(void)
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_2) == (SYSCFG_CFGR1_FPU_IE_2)) ? 1UL : 0UL);
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Overflow Interrupt source is enabled or disabled.
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_3      LL_SYSCFG_IsEnabledIT_FPU_OFC
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_OFC(void)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_3) == (SYSCFG_CFGR1_FPU_IE_3)) ? 1UL : 0UL);
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 13


 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Input denormal Interrupt source is enabled or disabled.
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_4      LL_SYSCFG_IsEnabledIT_FPU_IDC
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_IDC(void)
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_4) == (SYSCFG_CFGR1_FPU_IE_4)) ? 1UL : 0UL);
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Inexact Interrupt source is enabled or disabled.
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_5      LL_SYSCFG_IsEnabledIT_FPU_IXC
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_IXC(void)
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_5) == (SYSCFG_CFGR1_FPU_IE_5)) ? 1UL : 0UL);
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTIx         LL_SYSCFG_SetEXTISource\n
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTIx         LL_SYSCFG_SetEXTISource\n
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTIx         LL_SYSCFG_SetEXTISource\n
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTIx         LL_SYSCFG_SetEXTISource
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTG
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0x3U], (Line >> 16U), Port << (POSITION_VAL((Line >> 16U)) & 0x1
ARM GAS  /tmp/ccA1EUYa.s 			page 14


 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTIx         LL_SYSCFG_GetEXTISource\n
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTIx         LL_SYSCFG_GetEXTISource\n
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTIx         LL_SYSCFG_GetEXTISource\n
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTIx         LL_SYSCFG_GetEXTISource
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTG
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0x3U], (Line >> 16U)) >> (POSITION_VAL(Line >> 1
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable CCMSRAM Erase (starts a hardware CCMSRAM erase operation. This bit is
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * automatically cleared at the end of the CCMSRAM erase operation.)
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note This bit is write-protected: setting this bit is possible only after the
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *       correct key sequence is written in the SYSCFG_SKR register as described in
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *       the Reference Manual.
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SCSR  CCMER       LL_SYSCFG_EnableCCMSRAMErase
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableCCMSRAMErase(void)
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   /* Starts a hardware CCMSRAM erase operation*/
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->SCSR, SYSCFG_SCSR_CCMER);
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 15


 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if CCMSRAM erase operation is on going
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SCSR  CCMBSY      LL_SYSCFG_IsCCMSRAMEraseOngoing
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsCCMSRAMEraseOngoing(void)
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->SCSR, SYSCFG_SCSR_CCMBSY) == (SYSCFG_SCSR_CCMBSY)) ? 1UL : 0UL);
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set connections to TIM1/8/15/16/17 Break inputs
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CLL           LL_SYSCFG_SetTIMBreakInputs\n
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 SPL           LL_SYSCFG_SetTIMBreakInputs\n
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 PVDL          LL_SYSCFG_SetTIMBreakInputs\n
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 ECCL          LL_SYSCFG_SetTIMBreakInputs
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Break This parameter can be a combination of the following values:
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_ECC
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetTIMBreakInputs(uint32_t Break)
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_CLL | SYSCFG_CFGR2_SPL | SYSCFG_CFGR2_PVDL | SYSCFG_CFGR2_
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get connections to TIM1/8/15/16/17 Break inputs
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CLL           LL_SYSCFG_GetTIMBreakInputs\n
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 SPL           LL_SYSCFG_GetTIMBreakInputs\n
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 PVDL          LL_SYSCFG_GetTIMBreakInputs\n
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 ECCL          LL_SYSCFG_GetTIMBreakInputs
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be can be a combination of the following values:
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_ECC
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetTIMBreakInputs(void)
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_CLL | SYSCFG_CFGR2_SPL | SYSCFG_CFGR2_PVDL
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if SRAM parity error detected
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SPF           LL_SYSCFG_IsActiveFlag_SP
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SP(void)
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SPF) == (SYSCFG_CFGR2_SPF)) ? 1UL : 0UL);
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Clear SRAM parity error flag
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SPF           LL_SYSCFG_ClearFlag_SP
ARM GAS  /tmp/ccA1EUYa.s 			page 16


 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_ClearFlag_SP(void)
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SPF);
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable CCMSRAM page write protection
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note Write protection is cleared only by a system reset
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SWPR  PAGEx         LL_SYSCFG_EnableCCMSRAMPageWRP
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  CCMSRAMWRP This parameter can be a combination of the following values:
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE0
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE1
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE2
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE3
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE4
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE5
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE6
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE7
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE8
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE9
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE10 (*)
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE11 (*)
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE12 (*)
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE13 (*)
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE14 (*)
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE15 (*)
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE16 (*)
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE17 (*)
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE18 (*)
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE19 (*)
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE20 (*)
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE21 (*)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE22 (*)
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE23 (*)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE24 (*)
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE25 (*)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE26 (*)
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE27 (*)
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE28 (*)
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE29 (*)
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE30 (*)
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE31 (*)
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableCCMSRAMPageWRP(uint32_t CCMSRAMWRP)
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->SWPR, CCMSRAMWRP);
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  CCMSRAM page write protection lock prior to erase
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SKR   KEY           LL_SYSCFG_LockCCMSRAMWRP
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 17


 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_LockCCMSRAMWRP(void)
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   /* Writing a wrong key reactivates the write protection */
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(SYSCFG->SKR, 0x00);
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  CCMSRAM page write protection unlock prior to erase
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SKR   KEY           LL_SYSCFG_UnlockCCMSRAMWRP
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_UnlockCCMSRAMWRP(void)
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   /* unlock the write protection of the CCMER bit */
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(SYSCFG->SKR, 0xCA);
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(SYSCFG->SKR, 0x53);
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Return the device identifier
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0x0FFF (ex: device ID is 0x6415)
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Return the device revision identifier
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note This field indicates the revision of the device.
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> (DBGMCU_REVID_POSITION & 0x1F
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
ARM GAS  /tmp/ccA1EUYa.s 			page 18


 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set Trace pin assignment control
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_SetTracePinAssignment\n
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_SetTracePinAssignment
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  PinAssignment This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 19


1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_SetTracePinAssignment(uint32_t PinAssignment)
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE, PinAssignment);
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get Trace pin assignment control
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_GetTracePinAssignment\n
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_GetTracePinAssignment
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetTracePinAssignment(void)
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE));
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR1 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP1_FreezePeriph
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP (*)
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZR1, Periphs);
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group2 peripherals)
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR2 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph
ARM GAS  /tmp/ccA1EUYa.s 			page 20


1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_I2C4_STOP (*)
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_FreezePeriph(uint32_t Periphs)
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZR2, Periphs);
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR1 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP1_UnFreezePeriph
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP (*)
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZR1, Periphs);
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group2 peripherals)
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR2 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_I2C4_STOP (*)
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_UnFreezePeriph(uint32_t Periphs)
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZR2, Periphs);
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIMx_STOP  LL_DBGMCU_APB2_GRP1_FreezePeriph
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP
ARM GAS  /tmp/ccA1EUYa.s 			page 21


1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM20_STOP (*)
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_HRTIM1_STOP (*)
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
  28              		.loc 1 1125 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
  44              		.loc 1 1126 3
  45 0008 054B     		ldr	r3, .L2
  46 000a 1A69     		ldr	r2, [r3, #16]
  47 000c 0449     		ldr	r1, .L2
  48 000e 7B68     		ldr	r3, [r7, #4]
  49 0010 1343     		orrs	r3, r3, r2
  50 0012 0B61     		str	r3, [r1, #16]
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
  51              		.loc 1 1127 1
  52 0014 00BF     		nop
  53 0016 0C37     		adds	r7, r7, #12
  54              	.LCFI3:
  55              		.cfi_def_cfa_offset 4
  56 0018 BD46     		mov	sp, r7
  57              	.LCFI4:
  58              		.cfi_def_cfa_register 13
  59              		@ sp needed
  60 001a 5DF8047B 		ldr	r7, [sp], #4
  61              	.LCFI5:
  62              		.cfi_restore 7
  63              		.cfi_def_cfa_offset 0
  64 001e 7047     		bx	lr
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0020 002004E0 		.word	-536600576
  69              		.cfi_endproc
  70              	.LFE365:
  72              		.section	.text.LL_ADC_REG_SetSequencerLength,"ax",%progbits
ARM GAS  /tmp/ccA1EUYa.s 			page 22


  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	LL_ADC_REG_SetSequencerLength:
  80              	.LFB428:
  81              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @file    stm32g4xx_ll_adc.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifndef STM32G4xx_LL_ADC_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define STM32G4xx_LL_ADC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3) || defined (ADC4) || defined (ADC5)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
ARM GAS  /tmp/ccA1EUYa.s 			page 23


  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - data register offset                                                     */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
ARM GAS  /tmp/ccA1EUYa.s 			page 24


 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (d
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  compatibility with some ADC on oth
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  having this setting set by HW defa
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U * 
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 0
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 1
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 2
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 3
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger source                                                  */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                   having this setting set by HW def
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK           (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U 
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK             (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U * 
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
ARM GAS  /tmp/ccA1EUYa.s 			page 25


 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                              of different ADC internal channels map
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                              number on different ADC instances */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL)           /* Position of bits ADC_SMPRx_REGOFFSET
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                in ADC_CHANNEL_SMPRX_REGOFFSET_MASK 
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Equivalent to bitfield "ADC_CHANNEL_
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                position in register */
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
ARM GAS  /tmp/ccA1EUYa.s 			page 26


 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Value shifted are equivalent to bitfield "ADC_SMPRx_SMPy" position         */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* in register.                                                               */
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /tmp/ccA1EUYa.s 			page 27


 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to perform of shift when single mode is selected, shift 
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channels bits range. */
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL) /* Selection of 1 bit to discriminate di
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mask of bit */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)         /* Selection of 1 bit to discriminate di
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            position of bit */
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_SINGLEDIFF_CALIB_F_BIT_D to perform a shift of 4 ran
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection on groups.                                                     */
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
ARM GAS  /tmp/ccA1EUYa.s 			page 28


 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                threshold high: mask
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                threshold high: posi
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                position to perform 
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC offset instance configuration */
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits positions */
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits groups */
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CR_JADSTART | ADC_CR_JADSTP \
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC internal channels related definitions */
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000UL)                     /* Analog voltage reference
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Temperature sensor */
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Address of parameter TS_
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Temperature at which tem
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Temperature at which tem
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (tolerance +-10 mV) (unit: mV). */
ARM GAS  /tmp/ccA1EUYa.s 			page 29


 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is applied.
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Pointer to register address
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and multimode
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         disabled.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    constraints between ADC clock and AHB clock must
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    Refer to reference manual.
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              (for devices with several ADC instances).
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
ARM GAS  /tmp/ccA1EUYa.s 			page 30


 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultimode(). */
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiDMATransfer(). */
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiTwoSamplingDelay(). */
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 series).
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
ARM GAS  /tmp/ccA1EUYa.s 			page 31


 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "REG").
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    default value).
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                     enabled (scan length of 2 ranks or more).
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              successively automatically).
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    and discontinuous mode.
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
ARM GAS  /tmp/ccA1EUYa.s 			page 32


 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              data preserved or overwritten.
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              or from external peripheral (timer event, external int
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    set trigger polarity to rising edge (default set
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    compatibility with some ADC on other STM32 serie
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    setting set by HW default value).
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    @ref LL_ADC_INJ_SetTriggerEdge().
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTriggerSource(). */
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerLength(). */
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    enabled (scan length of 2 ranks or more).
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerDiscont(). */
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 33


 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              regular.
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    trigger source is set to an external trigger.
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTrigAuto(). */
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion */
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversions */
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    conversion */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    conversions */
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    overflow */
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    unitary conversion */
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    unitary conversion */
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    sequence conversions */
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    sequence conversions */
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    overrun */
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    overrun */
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    sampling phase */
ARM GAS  /tmp/ccA1EUYa.s 			page 34


 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    sampling phase */
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    unitary conversion */
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    unitary conversion */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    sequence conversions */
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    sequence conversions */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    contexts queue overflow */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    contexts queue overflow */
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    of the ADC master */
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    of the ADC slave */
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    of the ADC master */
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    of the ADC slave */
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    of the ADC master */
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    of the ADC slave */
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    conversion */
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    conversions */
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    phase */
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    conversion */
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    conversions */
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    overflow */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
ARM GAS  /tmp/ccA1EUYa.s 			page 35


 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* DMA transfer.                                                              */
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI  (0x00000001UL)      /* ADC group regular conversion data
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (corresponding to register CDR) to be used with ADC conf
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (available on STM32 devices with several ADC instances).
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Without DMA transfer, register accessed by LL function
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadMultiConversionData32() */
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                    /*!< ADC synchrono
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            AHB clock without prescaler */
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1)                    /*!< ADC synchrono
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            AHB clock with prescaler division by 2 */
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0) /*!< ADC synchrono
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            AHB clock with prescaler division by 4 */
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler */
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 2 */
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 4 */
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 6 */
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 8 */
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 10 */
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 12 */
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 16  */
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 32 */
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 64 */
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 128 */
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            prescaler division by 256 */
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 36


 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_VSENSESEL)  /*!< ADC measurement path to intern
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                      temperature sensor */
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATSEL)    /*!< ADC measurement path to intern
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)   /*!< ADC conversion data alignment: l
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)  /*!< ADC low power mode auto delay: D
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset instance
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 37


 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset instance 1: ADC chann
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset instance 2: ADC chann
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset instance 3: ADC chann
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset instance 4: ADC chann
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (setting offset instance wise) */
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (setting offset instance wise) */
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative */
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive */
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)     /*!< ADC offset saturation is disable
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            selected offset instance 1, 2, 3 or 4) */
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)   /*!< ADC offset saturation is enabled
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            selected offset instance 1, 2, 3 or 4) */
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL)     /*!< ADC group injected (not availabl
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            devices)*/
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL)     /*!< ADC both groups regular and inje
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 38


 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP \
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD)                       /*!< AD
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP \
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD)                       /*!< AD
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP \
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD)                       /*!< AD
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP \
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD)                       /*!< AD
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP \
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD)                       /*!< AD
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP \
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD)                       /*!< AD
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP \
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD)                       /*!< AD
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP \
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD)                       /*!< AD
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP \
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD)                       /*!< AD
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP \
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD)                       /*!< AD
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP \
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD)                      /*!< AD
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP \
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD)                      /*!< AD
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP \
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD)                      /*!< AD
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP \
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD)                      /*!< AD
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP \
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD)                      /*!< AD
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP \
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD)                      /*!< AD
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | \
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_16_BITFIELD)                        /*!< ADC
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | \
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_17_BITFIELD)                        /*!< ADC
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | \
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_18_BITFIELD)                        /*!< ADC
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference.
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            On this STM32 series, ADC channel available on all insta
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC1     (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            connected to internal temperature sensor.
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            On this STM32 series, ADC channel available only on ADC1
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC5     (LL_ADC_CHANNEL_4  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            connected to internal temperature sensor.
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            On this STM32 series, ADC channel available only on ADC5
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for ADC5 availability */
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            connected to Vbat/3: Vbat voltage through a divider ladd
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to have channel voltage always below Vdda. On this STM32
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            available on all ADC instances but ADC2 & ADC4. Refer to
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            for ADC4 availability */
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP1             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
ARM GAS  /tmp/ccA1EUYa.s 			page 39


 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            connected to OPAMP1 output.
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            On this STM32 series, ADC channel available only on ADC1
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP2             (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH | \
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< ADC internal channel 
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            output. On this STM32 series, ADC channel available only
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | \
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< ADC internal channel 
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            output. On this STM32 series, ADC channel available only
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC3        (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH | \
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< ADC internal channel 
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            output. On this STM32 series, ADC channel available only
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for ADC3 availability */
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP4             (LL_ADC_CHANNEL_5  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** connected to OPAMP4 output. On this STM32 series, ADC channel available only on ADC5 instance.
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** Refer to device datasheet for ADC5 & OPAMP4 availability */
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP5             (LL_ADC_CHANNEL_3  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** connected to OPAMP5 output. On this STM32 series, ADC channel available only on ADC5 instance.
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** Refer to device datasheet for ADC5 & OPAMP5 availability */
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP6             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | \
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                    /*!< AD
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            connected to OPAMP6 output.
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            On this STM32 series, ADC channel available only on ADC4
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for ADC4 & OPAMP6 availability
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | \
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO.
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | \
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2.
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances */
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances */
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | \
ARM GAS  /tmp/ccA1EUYa.s 			page 40


1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO.
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH1       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!<
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances. Refer to device datasheet for ADCx a
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances */
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances. Refer to device datasheet for ADCx a
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO.
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances. Refer to device datasheet for ADCx a
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances */
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO.
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH1       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 channe
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances. Refer to device datasheet for ADCx a
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | \
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 channe
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
ARM GAS  /tmp/ccA1EUYa.s 			page 41


1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances */
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO.
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM7 TRGO.
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO.
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO2.
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 channe
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances. Refer to device datasheet for ADCx a
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO     (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*!
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM20 TRGO.
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO2    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | \
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM20 TRGO2
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH1      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | \
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM20 chann
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH2      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | \
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM20 chann
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances, and TIM20 is not available on all devi
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH3      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | \
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM20 chann
ARM GAS  /tmp/ccA1EUYa.s 			page 42


1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            compare: input capture or output capture).
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances, and TIM20 is not available on all devi
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | \
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG2     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | \
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances, and HRTIM is not available on all de
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | \
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG4     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | \
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances, and HRTIM is not available on all de
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG5     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | \
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG6     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG7     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG8     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG9     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
ARM GAS  /tmp/ccA1EUYa.s 			page 43


1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG10    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: HRTIMER ADC
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Refer to device datasheet for more details */
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC1/2 instances */
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE2     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | \
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC3/4/5 instances. Refer to device datasheet for ADCx a
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM_OUT      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | \
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | \
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIMER OUT
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR_EXTEN_0)                      /*!< ADC group r
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1)                      /*!< ADC group r
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            is defined using  @ref ADC_LL_EC_CHANNEL_SAMPLINGTIME */
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            immediately after end of conversion, and stops upon trig
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: First conversion is using minimal sampling time
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (see @ref ADC_LL_EC_CHANNEL_SAMPLINGTIME) */
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            controlled by trigger events: trigger rising edge for st
ARM GAS  /tmp/ccA1EUYa.s 			page 44


1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger falling edge for stop sampling and start convers
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            one conversion per trigger */
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)    /*!< ADC conversions performed in con
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            automatically */
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR_DMAEN)   /*!< ADC conversion data are transfer
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            cycles replacing 2.5 ADC clock cycles (this applies to a
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with selection sampling time 2.5 ADC clock cycles, whate
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            on ADC groups regular or injected). */
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    data preserved */
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)  /*!< ADC group regular behavior in ca
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    data overwritten */
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 45


1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                 /*!< ADC group regular se
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_SQR1_L_0)                 /*!< ADC group regular se
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_SQR1_L_1)                 /*!< ADC group regular se
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_SQR1_L_1 | ADC_SQR1_L_0)  /*!< ADC group regular se
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_SQR1_L_2)                 /*!< ADC group regular se
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 5 ranks in the sequence */
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_0)  /*!< ADC group regular se
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 6 ranks in the sequence */
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1) /*!< ADC group regular seq
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 7 ranks in the sequence */
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1 \
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 8 ranks in the sequence */
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3)                 /*!< ADC group regular se
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 9 ranks in the sequence */
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_0)  /*!< ADC group regular se
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 10 ranks in the sequence */
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1)  /*!< ADC group regular se
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 11 ranks in the sequence */
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1 \
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 12 ranks in the sequence */
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2)  /*!< ADC group regular se
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 13 ranks in the sequence */
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 14 ranks in the sequence */
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR1_L_1)                /*!< ADC group regular s
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 15 ranks in the sequence */
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR1_L_1 | ADC_SQR1_L_0) /*!< ADC group regular s
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                               with 16 ranks in the 
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode disable */
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR_DISCEN)                       /*!< ADC group r
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group r
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enabled with sequence interruption ev
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCEN)  /*!< ADC group r
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCNUM_0 \
ARM GAS  /tmp/ccA1EUYa.s 			page 46


1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCEN)   /*!< ADC group 
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_0 \
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 1 */
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 2 */
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 3 */
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 4 */
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 5 */
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 6 */
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 7 */
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 8 */
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 9 */
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 10 */
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 11 */
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 12 */
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 13 */
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 14 */
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 15 */
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular sequencer rank 16 */
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
ARM GAS  /tmp/ccA1EUYa.s 			page 47


1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                        /*
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 3 event (capture compare: input capture or outpu
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances. Refer to device datasheet for ADCx availabili
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 4 event (capture compare: input capture or outpu
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | \
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 1 event (capture compare: input capture or outpu
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances */
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 1 event (capture compare: input capture or outpu
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances */
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 3 event (capture compare: input capture or outpu
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances */
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 4 event (capture compare: input capture or outpu
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances */
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | \
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
ARM GAS  /tmp/ccA1EUYa.s 			page 48


1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 3 event (capture compare: input capture or outpu
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances. Refer to device datasheet for ADCx availabili
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 4 event (capture compare: input capture or outpu
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances. Refer to device datasheet for ADCx availabili
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_E
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | \
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | \
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 2 event (capture compare: input capture or outpu
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances. Refer to device datasheet for ADCx availabili
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 4 event (capture compare: input capture or outpu
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_E
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM16_CH1      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_E
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 4 event (capture compare: input capture or outpu
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances */
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
ARM GAS  /tmp/ccA1EUYa.s 			page 49


1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | \
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH2      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | \
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 2 event (capture compare: input capture or outpu
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC3/4/5 instances. On this ST
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            not available on all devices. Refer to device datasheet 
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH4      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | \
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel 4 event (capture compare: input capture or outpu
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC1/2 instances. On this STM3
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            not available on all devices. Refer to device datasheet 
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_E
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC trigger 1 event. Trigger edge set to rising edge (de
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances, and HRTIM is not available on all devices. Re
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            datasheet for more details */
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | \
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 2 event. Trigger edge set to rising edge (defaul
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC trigger 3 event. Trigger edge set to rising edge (de
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances, and HRTIM is not available on all devices. Re
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            datasheet for more details */
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | \
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 4 event. Trigger edge set to rising edge (defaul
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | \
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 5 event. Trigger edge set to rising edge (defaul
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | \
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
ARM GAS  /tmp/ccA1EUYa.s 			page 50


1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 6 event. Trigger edge set to rising edge (defaul
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | \
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_E
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 7 event. Trigger edge set to rising edge (defaul
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 8 event. Trigger edge set to rising edge (defaul
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 9 event. Trigger edge set to rising edge (defaul
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger 10 event. Trigger edge set to rising edge (defau
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            device datasheet for more details */
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE3     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)     
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            interrupt line 3. Trigger edge set to rising edge (defau
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances. Refer to device datasheet for ADCx availabili
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                          
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            interrupt line 15. Trigger edge set to rising edge (defa
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances. */
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM_OUT      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | \
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_E
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            event. Trigger edge set to rising edge (default setting)
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 51


1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)     /*!< ADC group injected conversion tr
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Setting mandatory if ADC group injected injected trigger
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            an external trigger. */
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)   /*!< ADC group injected conversion tr
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular. Setting compliant only with group injected trig
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            SW start, without any further action on  ADC group injec
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            or stop: in this case, ADC group injected is controlled 
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular. */
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)   /* Group injected sequence context 
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            the queue maintains the last context active perpetually.
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)   /* Group injected sequence context 
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            the queue is empty and injected group triggers are disab
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS) /* Group injected sequence context 
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            only 1 sequence can be configured and is active perpetua
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)     /*!< ADC group injected sequencer dis
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            disable */
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN) /*!< ADC group injected sequencer dis
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            enable with sequence interruption every rank */
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccA1EUYa.s 			page 52


1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET \
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS) /*!< ADC group inj
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET \
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS) /*!< ADC group inj
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET \
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS) /*!< ADC group inj
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET \
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS) /*!< ADC group inj
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)       /*!< Sampling time 2.5 ADC clock cy
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (ADC_SMPR2_SMP10_0)  /*!< Sampling time 6.5 ADC clock cy
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR2_SMP10_1)  /*!< Sampling time 12.5 ADC clock c
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (ADC_SMPR2_SMP10_1 \
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 24.5 ADC clock 
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2)  /*!< Sampling time 47.5 ADC clock c
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2 \
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 92.5 ADC clock 
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 \
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1) /*!< Sampling time 247.5 ADC clock
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 \
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1 \
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 640.5 ADC clock
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            set to single ended (literal also used to set calibratio
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            set to differential (literal also used to set calibratio
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            set to both single ended and differential (literal used 
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            calibration factors) */
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
ARM GAS  /tmp/ccA1EUYa.s 			page 53


1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            disabled */
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN)                       /*!< ADC analo
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of all channels, converted by group regular only */
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK \
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN)                      /*!< ADC analo
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of all channels, converted by group injected only */
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK \
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN)    /*!< ADC analo
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of all channels, converted by either group regular or in
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group injected onl
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by either group regul
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group injected onl
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by either group regul
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group injected onl
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by either group regul
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group injected onl
ARM GAS  /tmp/ccA1EUYa.s 			page 54


1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by either group regul
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group injected onl
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by either group regul
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group injected onl
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by either group regul
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group injected onl
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by either group regul
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group injected onl
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by either group regul
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group injected onl
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by either group regul
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
ARM GAS  /tmp/ccA1EUYa.s 			page 55


1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group injected onl
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by either group regul
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group injected on
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)\
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by either group regu
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group injected on
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by either group regu
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group injected on
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by either group regu
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group injected on
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by either group regu
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group only */
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by either group regu
ARM GAS  /tmp/ccA1EUYa.s 			page 56


1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            monitoring of ADC channel ADCx_IN15, converted by group 
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group injected on
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by either group
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular or injected */
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group injected on
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by either group regu
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group injected on
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by either group regu
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group injected on
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by either group regu
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            voltage reference, converted by group regular only */
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            voltage reference, converted by group injected only */
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            voltage reference, converted by either group regular or 
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG     ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_MAS
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC1 internal channel connected to internal temperatu
ARM GAS  /tmp/ccA1EUYa.s 			page 57


1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            converted by group regular only */
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ     ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_MAS
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC1 internal channel connected to internal temperatu
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            converted by group injected only */
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_MAS
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC1 internal channel connected to internal temperatu
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            converted by either group regular or injected */
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG     ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_MAS
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC5 internal channel connected to internal temperatu
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            converted by group regular only */
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ     ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_MAS
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN                   | ADC_CFGR_AWD1SGL
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC5 internal channel connected to internal temperatu
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            converted by group injected only */
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_MAS
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC5 internal channel connected to internal temperatu
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            converted by either group regular or injected */
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Vdda, converted by group regular only */
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Vdda, converted by group injected only */
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Vdda */
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) \
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP1 output,
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group regular onl
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_INJ          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) \
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP1 output,
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group injected on
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) \
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP1 output,
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC1, converted by either group regu
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) \
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group regular onl
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_INJ          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) \
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
ARM GAS  /tmp/ccA1EUYa.s 			page 58


2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP2 output,
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group injected on
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) \
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP2 output,
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC2, converted by either group regu
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) \
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP3 output,
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group regular onl
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) \
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP3 output,
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group injected on
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) \
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP3 output,
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC2, converted by either group regu
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) \
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP3 output,
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group regular onl
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) \
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP3 output,
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group injected on
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) \
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP3 output,
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC3, converted by either group regu
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) \
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP4 output,
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC5, converted by group regular onl
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_INJ          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) \
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP4 output,
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC5, converted by group injected on
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) \
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP4 output,
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC5, converted by either group regu
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) \
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP5 output,
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC5, converted by group regular onl
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_INJ          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) \
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP5 output,
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC5, converted by group injected on
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) \
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
ARM GAS  /tmp/ccA1EUYa.s 			page 59


2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP5 output,
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC5, converted by either group regu
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) \
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP6 output,
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC4, converted by group regular onl
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_INJ          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) \
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP6 output,
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC4, converted by group injected on
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) \
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            of ADC internal channel connected to OPAMP6 output,
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            channel specific to ADC4, converted by either group regu
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1)      /*!< ADC analog watchdog threshold hi
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_TR1_LT1)      /*!< ADC analog watchdog threshold lo
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 \
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_TR1_LT1)     /*!< ADC analog watchdog both thresh
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            concatenated into the same data */
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                          /*!< ADC analog 
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            one out-of-window sample is needed to raise flag or inte
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (ADC_TR1_AWDFILT_0)                     /*!< ADC analog 
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            out-of-window samples are needed to raise flag or interr
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (ADC_TR1_AWDFILT_1)                     /*!< ADC analog 
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT_0) /*!< ADC analog 
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2)                     /*!< ADC analog 
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_0) /*!< ADC analog 
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1) /*!< ADC analog 
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 \
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_TR1_AWDFILT_0)                    /*!< ADC analog
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccA1EUYa.s 			page 60


2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_ROVSE)                   /*!< ADC oversamplin
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            is temporary stopped and continued afterwards. */
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            is resumed from start (oversampler buffer reset). */
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (ADC_CFGR2_JOVSE)                   /*!< ADC oversamplin
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected. */
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            both ADC groups regular and injected. If group injected 
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular: when ADC group injected is triggered, the overs
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular is resumed from start (oversampler buffer reset)
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)  /*!< ADC oversampling discontinuous m
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
ARM GAS  /tmp/ccA1EUYa.s 			page 61


2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (before potential shift) */
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            conversion data) */
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                    /*!< ADC dual mode dis
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            independent mode) */
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1) /*!< ADC dual mode ena
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            simultaneous */
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 \
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CCR_DUAL_0)                  /*!< ADC dual mode e
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular interleaved */
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            simultaneous */
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            alternate trigger. Works only with external triggers (no
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (ADC_CCR_DUAL_0)                  /*!< ADC dual mode ena
ARM GAS  /tmp/ccA1EUYa.s 			page 62


2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular simultaneous + group injected simultaneous */
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (ADC_CCR_DUAL_1)                  /*!< ADC dual mode ena
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular simultaneous + group injected alternate trigger 
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (ADC_CCR_DUAL_1 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            regular interleaved + group injected simultaneous */
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                    /*!< ADC multimode g
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              conversions are transferred by DMA: each ADC uses its 
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              with its individual DMA transfer settings */
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (ADC_CCR_MDMA_1)                  /*!< ADC multimode g
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 12 and 10 
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!< ADC multimode g
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 8 and 6 bi
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1) /*!< ADC multimode g
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Setting for ADC resolution of 12 and 10 bits */
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 \
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                               | ADC_CCR_MDMA_0)                 /*!< ADC multimode 
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Setting for ADC resolution of 8 and 6 bits */
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                      /*!< ADC multimode d
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 1 ADC clock cycle */
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (ADC_CCR_DELAY_0)                   /*!< ADC multimode d
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 2 ADC clock cycles */
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (ADC_CCR_DELAY_1)                   /*!< ADC multimode d
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 3 ADC clock cycles */
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode d
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 4 ADC clock cycles */
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (ADC_CCR_DELAY_2)                   /*!< ADC multimode d
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 5 ADC clock cycles */
ARM GAS  /tmp/ccA1EUYa.s 			page 63


2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_0) /*!< ADC multimode d
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 6 ADC clock cycles */
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1) /*!< ADC multimode d
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 7 ADC clock cycles */
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 \
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 8 ADC clock cycles */
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3)                   /*!< ADC multimode d
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 9 ADC clock cycles */
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_0) /*!< ADC multimode d
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 10 ADC clock cycles */
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1) /*!< ADC multimode d
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 11 ADC clock cycles */
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1 \
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            sampling phases: 12 ADC clock cycles */
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (ADC_CDR_RDATA_MST) /*!< In multimode, selection among s
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances: ADC master */
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV) /*!< In multimode, selection among s
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances: ADC slave */
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV \
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CDR_RDATA_MST) /*!< In multimode, selection among
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            instances: both ADC master and ADC slave */
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  calibration parameters. This value
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  (to fit on signed word or double w
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  to an inconsistent temperature val
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not timeout values.
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         above each literal definition.
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
ARM GAS  /tmp/ccA1EUYa.s 			page 64


2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       not timeout values.                                                  */
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       STM32 series:                                                        */
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         cycles                                                             */
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         configuration.                                                     */
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                               regulator start-up time) */
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    time */
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)        /*!< Delay required between ADC end o
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                    and ADC enable */
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 65


2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Write a value in ADC register
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be written
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Read a value in ADC register
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be read
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Register value
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return decimal number "4".
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number is returned, either defined with number
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccA1EUYa.s 			page 66


2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                       \
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from number in decimal format.
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
ARM GAS  /tmp/ccA1EUYa.s 			page 67


2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                              |    
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
ARM GAS  /tmp/ccA1EUYa.s 			page 68


2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC internal channel:
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
ARM GAS  /tmp/ccA1EUYa.s 			page 69


2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                       connected to a GPIO pin).
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a value defined from parameter definition of
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC registers.
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
ARM GAS  /tmp/ccA1EUYa.s 			page 70


2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
ARM GAS  /tmp/ccA1EUYa.s 			page 71


2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(STM32G474xx) || defined(STM32G484xx) || defined(STM32G473xx) || defined(STM32G483xx)
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC4)                                               \
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC5)                                               \
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP5)         ||                    \
ARM GAS  /tmp/ccA1EUYa.s 			page 72


2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC5) ||                    \
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP4)         ||                    \
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G471xx)
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32GBK1CB) || defined(STM32G431xx) || defined(STM32G441xx)
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G491xx) || defined(STM32G4A1xx)
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
ARM GAS  /tmp/ccA1EUYa.s 			page 73


2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* STM32G4xx */
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
ARM GAS  /tmp/ccA1EUYa.s 			page 74


2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
ARM GAS  /tmp/ccA1EUYa.s 			page 75


3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
ARM GAS  /tmp/ccA1EUYa.s 			page 76


3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (< ADCx param >,
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
ARM GAS  /tmp/ccA1EUYa.s 			page 77


3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential ended to 0x2A:
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1,
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
ARM GAS  /tmp/ccA1EUYa.s 			page 78


3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance).
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         considered as master instances (do not depend to
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         any other ADC instance).
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC5)
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ( ( ((__ADCx__) == ADC4)                                                   \
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )?                                                                       \
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (ADC3)                                                                   \
3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (__ADCx__)                                                               \
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )                                                                          \
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (__ADCx__)                                                                 \
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC5 */
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC common register instance
3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 79


3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC345_COMMON)                                                         \
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC345_COMMON */
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance are disabled.
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are disabled.
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC4) &&  defined(ADC5)
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3) |                                               \
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC4) |                                               \
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC5)  )                                              \
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (LL_ADC_IsEnabled(ADC3))                                                 \
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC4 && ADC5 */
ARM GAS  /tmp/ccA1EUYa.s 			page 80


3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC345_COMMON */
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to reference manual).
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a resolution to another resolution.
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((__DATA__)                                                                 \
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                       (unit: digital value).
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 81


3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_DATA__,\
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value) in
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential ended mode.
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC data from ADC data register is unsigned and centered around
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         middle code in. Converted voltage can be positive or negative
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depending on differential input voltages.
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (unit: digital value).
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_DIFF_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            __ADC_DATA__,\
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            __ADC_RESOLUTION__)\
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** ((int32_t)((__ADC_DATA__) << 1U) * (int32_t)(__VREFANALOG_VOLTAGE__)\
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / (int32_t)(__LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))\
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  - (int32_t)(__VREFANALOG_VOLTAGE__))
3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         reference VrefInt.
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         connected to pin Vref+.
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
ARM GAS  /tmp/ccA1EUYa.s 			page 82


3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  parameters are correct (address and data).
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  less accurate than calibrated values),
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor.
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  /tmp/ccA1EUYa.s 			page 83


3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  )                                                                                \
3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  :                                                                                \
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to device datasheet).
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: digital value)
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values.
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       (unit: uV/DegCelsius).
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "Avg_Slop
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       (at temperature and Vref+ defined in parameters below) (u
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to datasheet parameter "V30" (correspon
ARM GAS  /tmp/ccA1EUYa.s 			page 84


3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       (see parameter above) is corresponding (unit: mV)
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     -                                                                       \
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                        \
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
ARM GAS  /tmp/ccA1EUYa.s 			page 85


3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC register address
3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t data_reg_addr;
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register DR */
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register CDR */
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return data_reg_addr;
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(Register);
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve address of register DR */
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
ARM GAS  /tmp/ccA1EUYa.s 			page 86


3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC instances
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must be respected.
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
ARM GAS  /tmp/ccA1EUYa.s 			page 87


3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalCh\n
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalCh
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL, PathInternal)
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Add paths to the current configuration.
3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
ARM GAS  /tmp/ccA1EUYa.s 			page 88


3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChAdd\n
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChAdd
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Remove paths to the current configuration.
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChRem\n
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChRem
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
ARM GAS  /tmp/ccA1EUYa.s 			page 89


3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_GetCommonPathInternalCh\n
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_GetCommonPathInternalCh
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSE
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without having to perform a new calibration using
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         To perform this processing, use helper macro
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on group regular.
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 90


3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK)
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     >> ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4)
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                    & ~(SingleDiff & ADC_CALFACT_CALFACT_S)));
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> ((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >>
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC resolution.
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 91


3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC resolution.
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
ARM GAS  /tmp/ccA1EUYa.s 			page 92


3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
ARM GAS  /tmp/ccA1EUYa.s 			page 93


4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC selected offset instance 1, 2, 3 or 4.
4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or group injected)
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           converted data).
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
ARM GAS  /tmp/ccA1EUYa.s 			page 94


4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
ARM GAS  /tmp/ccA1EUYa.s 			page 95


4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or group injected)
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/ccA1EUYa.s 			page 96


4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted data).
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccA1EUYa.s 			page 97


4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         force offset state disable or enable
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetState);
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset state disabled or enabled.
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccA1EUYa.s 			page 98


4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset sign.
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSign);
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset sign if positive or negative.
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
ARM GAS  /tmp/ccA1EUYa.s 			page 99


4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(const ADC_TypeDef *ADCx, uint32_t Offsety)
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset saturation mode.
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSaturation);
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
ARM GAS  /tmp/ccA1EUYa.s 			page 100


4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(const ADC_TypeDef *ADCx, uint32_t Offsety)
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC gain compensation.
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the gain compensation coefficient
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         that is applied to raw converted data using the formula:
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           DATA = DATA(raw) * (gain compensation coef) / 4096
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the gain compensation if given
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coefficient is above 0, otherwise it disables it.
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Gain compensation when enabled is applied to all channels.
4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_SetGainCompensation\n
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_SetGainCompensation
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  GainCompensation This parameter can be:
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation will be disabled and value set to 0
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation will be enabled with specified value
4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetGainCompensation(ADC_TypeDef *ADCx, uint32_t GainCompensation)
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->GCOMP, ADC_GCOMP_GCOMPCOEFF, GainCompensation);
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_GCOMP, ((GainCompensation == 0UL) ? 0UL : 1UL) << ADC_CFGR2_GCO
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC gain compensation value
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_GetGainCompensation\n
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_GetGainCompensation
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation is disabled
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation is enabled with returned value
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetGainCompensation(const ADC_TypeDef *ADCx)
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR2, ADC_CFGR2_GCOMP) == ADC_CFGR2_GCOMP) ?
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           READ_BIT(ADCx->GCOMP, ADC_GCOMP_GCOMPCOEFF) : 0UL);
4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
ARM GAS  /tmp/ccA1EUYa.s 			page 101


4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(const ADC_TypeDef *ADCx)
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
ARM GAS  /tmp/ccA1EUYa.s 			page 102


4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
ARM GAS  /tmp/ccA1EUYa.s 			page 103


4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/ccA1EUYa.s 			page 104


4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((trigger_source
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR_EXTSEL)
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR_EXTEN)
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or external.
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
ARM GAS  /tmp/ccA1EUYa.s 			page 105


4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode applies to regular group only.
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(const ADC_TypeDef *ADCx)
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
ARM GAS  /tmp/ccA1EUYa.s 			page 106


4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
  82              		.loc 2 4829 1
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87 0000 80B4     		push	{r7}
  88              	.LCFI6:
  89              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccA1EUYa.s 			page 107


  90              		.cfi_offset 7, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
  98 0008 3960     		str	r1, [r7]
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
  99              		.loc 2 4830 3
 100 000a 7B68     		ldr	r3, [r7, #4]
 101 000c 1B6B     		ldr	r3, [r3, #48]
 102 000e 23F00F02 		bic	r2, r3, #15
 103 0012 3B68     		ldr	r3, [r7]
 104 0014 1A43     		orrs	r2, r2, r3
 105 0016 7B68     		ldr	r3, [r7, #4]
 106 0018 1A63     		str	r2, [r3, #48]
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 107              		.loc 2 4831 1
 108 001a 00BF     		nop
 109 001c 0C37     		adds	r7, r7, #12
 110              	.LCFI9:
 111              		.cfi_def_cfa_offset 4
 112 001e BD46     		mov	sp, r7
 113              	.LCFI10:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 0020 5DF8047B 		ldr	r7, [sp], #4
 117              	.LCFI11:
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 0024 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE428:
 124              		.section	.text.LL_ADC_INJ_SetQueueMode,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	LL_ADC_INJ_SetQueueMode:
 132              	.LFB453:
4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
ARM GAS  /tmp/ccA1EUYa.s 			page 108


4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 109


4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccA1EUYa.s 			page 110


4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
ARM GAS  /tmp/ccA1EUYa.s 			page 111


5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
ARM GAS  /tmp/ccA1EUYa.s 			page 112


5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/ccA1EUYa.s 			page 113


5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQR
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
ARM GAS  /tmp/ccA1EUYa.s 			page 114


5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
ARM GAS  /tmp/ccA1EUYa.s 			page 115


5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         other devices without this feature have a behavior
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         equivalent to data overwritten.
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
ARM GAS  /tmp/ccA1EUYa.s 			page 116


5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
ARM GAS  /tmp/ccA1EUYa.s 			page 117


5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
ARM GAS  /tmp/ccA1EUYa.s 			page 118


5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
ARM GAS  /tmp/ccA1EUYa.s 			page 119


5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t shift_jexten = ((trigger_source & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS 
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((trigger_source
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> shift_jexten) & ADC_JSQR_JEXTSEL)
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> shift_jexten) & ADC_JSQR_JEXTEN)
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             or external
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccA1EUYa.s 			page 120


5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function retrieves:
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
ARM GAS  /tmp/ccA1EUYa.s 			page 121


5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
ARM GAS  /tmp/ccA1EUYa.s 			page 122


5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK),
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK));
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
ARM GAS  /tmp/ccA1EUYa.s 			page 123


5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
ARM GAS  /tmp/ccA1EUYa.s 			page 124


5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               << (Rank & ADC_INJ_RANK_ID_JSQR_MASK))
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group injected.
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent trigger.
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC group regular.
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 125


5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is disabled:
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - only 1 sequence can be configured
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and is active perpetually.
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is enabled:
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           into the queue).
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 126


5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 133              		.loc 2 5874 1
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 80B4     		push	{r7}
 139              	.LCFI12:
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 7, -4
 142 0002 83B0     		sub	sp, sp, #12
 143              	.LCFI13:
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              	.LCFI14:
 147              		.cfi_def_cfa_register 7
 148 0006 7860     		str	r0, [r7, #4]
 149 0008 3960     		str	r1, [r7]
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
 150              		.loc 2 5875 3
 151 000a 7B68     		ldr	r3, [r7, #4]
 152 000c DB68     		ldr	r3, [r3, #12]
 153 000e 23F00043 		bic	r3, r3, #-2147483648
 154 0012 23F40013 		bic	r3, r3, #2097152
 155 0016 3A68     		ldr	r2, [r7]
 156 0018 1A43     		orrs	r2, r2, r3
 157 001a 7B68     		ldr	r3, [r7, #4]
 158 001c DA60     		str	r2, [r3, #12]
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 159              		.loc 2 5876 1
 160 001e 00BF     		nop
 161 0020 0C37     		adds	r7, r7, #12
 162              	.LCFI15:
 163              		.cfi_def_cfa_offset 4
 164 0022 BD46     		mov	sp, r7
 165              	.LCFI16:
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0024 5DF8047B 		ldr	r7, [sp], #4
 169              	.LCFI17:
 170              		.cfi_restore 7
 171              		.cfi_def_cfa_offset 0
 172 0028 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE453:
 176              		.section	.text.LL_ADC_DisableDeepPowerDown,"ax",%progbits
 177              		.align	1
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	LL_ADC_DisableDeepPowerDown:
 184              	.LFB481:
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 127


5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         contexts queue.
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         cannot be used):
5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
ARM GAS  /tmp/ccA1EUYa.s 			page 128


5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             more details.
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
ARM GAS  /tmp/ccA1EUYa.s 			page 129


5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /tmp/ccA1EUYa.s 			page 130


6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
ARM GAS  /tmp/ccA1EUYa.s 			page 131


6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
ARM GAS  /tmp/ccA1EUYa.s 			page 132


6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JL,
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_4 & ADC_INJ_RANK_ID_JSQR_MASK)) |
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_3 & ADC_INJ_RANK_ID_JSQR_MASK)) |
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_2 & ADC_INJ_RANK_ID_JSQR_MASK)) |
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_1 & ADC_INJ_RANK_ID_JSQR_MASK)) |
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SequencerNbRanks
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             );
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted:
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
ARM GAS  /tmp/ccA1EUYa.s 			page 133


6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         setting).
6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TS_temp, ...).
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required.
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/ccA1EUYa.s 			page 134


6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1,
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
ARM GAS  /tmp/ccA1EUYa.s 			page 135


6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
ARM GAS  /tmp/ccA1EUYa.s 			page 136


6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             convert in 12-bit resolution.
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (fADC) to convert in 12-bit resolution.\n
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                  >> ADC_SMPRX_REGOFFSET_POS));
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_SMPR1_SMP0
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BI
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group regular or injected.
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
ARM GAS  /tmp/ccA1EUYa.s 			page 137


6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
ARM GAS  /tmp/ccA1EUYa.s 			page 138


6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
6558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
ARM GAS  /tmp/ccA1EUYa.s 			page 139


6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
6564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
6565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
6566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
6567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
6568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
6569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
6570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
6572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
6577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
6585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
6596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
6597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
6598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
6600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
6601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
6608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
6609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
6610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
6612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
6613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
6614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
6615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
6616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
6617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
6618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
6619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
ARM GAS  /tmp/ccA1EUYa.s 			page 140


6620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
6622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
6624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
6625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
6626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
6627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
6628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
6629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
6630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
6631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
6633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
6635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
6636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
6638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
6640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
6641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
6642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
6643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
6644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
6645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
6646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
6647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
6648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
6649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
6650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
6651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
6652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
6653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
6654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
6655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
6656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
6657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
6658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
6659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
6660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
6661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
6662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
6663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
6664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
6665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
6666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
6667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
6668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
6669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
6670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
6671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
6672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
6673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
6674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
6675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
6676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
ARM GAS  /tmp/ccA1EUYa.s 			page 141


6677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
6678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
6679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
6680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
6681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
6682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
6683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
6684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
6685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
6686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
6687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
6689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
6690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
6691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
6692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
6693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
6694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
6695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
6696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
6697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
6698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
6699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
6700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
6701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
6703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
6704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
6705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
6706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
6709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
6710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
6711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
6717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
6718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
6719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
6721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
6723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
6726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
6727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
6728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
6732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
ARM GAS  /tmp/ccA1EUYa.s 			page 142


6734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
6736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
6737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
6738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
6739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
6740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
6741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
6742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
6743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
6744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           one channel.
6745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
6747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
6752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
6757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
6760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
6771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
6772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
6773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
6774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
6775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
6776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
6783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
6784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
6785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
6786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             by bitfield.
6787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
6789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
6790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
ARM GAS  /tmp/ccA1EUYa.s 			page 143


6791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
6792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
6793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
6794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
6795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
6796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
6797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
6798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
6799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
6800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
6801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
6802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
6803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
6804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
6805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
6806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
6807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
6809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
6810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
6811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
6812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
6814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
6815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
6817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
6818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
6819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
6820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
6821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
6822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
6823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
6824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
6825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
6826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
6827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
6828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
6829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
6830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
6831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
6832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
6834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
6835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
6836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
6837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
6838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
6839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
6840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
6841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
6842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
6843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
6845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
6847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
ARM GAS  /tmp/ccA1EUYa.s 			page 144


6848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
6849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.
6851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
6853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
6855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
6856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
6857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
6858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
6860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
6862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* or a single channel.                                                     */
6865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
6866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
6867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
6868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
6869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR_AWD1SGL) == 0UL)
6870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
6871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
6873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
6874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     )
6875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     & (~(ADC_CFGR_AWD1CH))
6876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                    );
6877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
6878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
6879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
6880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
6881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
6883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                    );
6884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
6885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
6886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     else
6887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
6888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
6890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
6892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                    );
6894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
6895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
6896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
6897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
6898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
6902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                    );
6903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
6904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
ARM GAS  /tmp/ccA1EUYa.s 			page 145


6905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
6906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return analog_wd_monit_channels;
6908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high and low.
6913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
6920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
6925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
6930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
6933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Examples:
6944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
ARM GAS  /tmp/ccA1EUYa.s 			page 146


6962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDy".                                                                  */
6974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
6980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high or low.
6987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
6994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
6999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
7000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
7001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
7002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
7003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
7004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
7005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
7006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
7007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
7008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
7009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
7010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
7011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
7012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
7013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
7014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
7015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
7016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
7017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Examples:
7018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
ARM GAS  /tmp/ccA1EUYa.s 			page 147


7019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
7020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
7021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
7022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
7023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
7024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
7025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
7026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
7027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
7028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
7030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
7031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
7032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
7033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
7034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
7035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
7036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
7037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
7039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
7040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
7041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
7042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
7043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
7044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
7045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
7046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
7049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
7050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
7052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
7053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
7054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
7055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
7056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
7057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
7060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdsHighLow,
7061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
7062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
7066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
7067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         concatenated.
7068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
7070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         using helper macro:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
7072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
7073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
7074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
7075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  /tmp/ccA1EUYa.s 			page 148


7076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
7077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
7078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
7079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
7080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
7081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
7083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
7084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
7085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
7086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
7087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
7088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
7089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
7090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
7093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
7094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
7096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
7097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
7100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
7101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
7102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
7106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
7109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
7110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
7111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
7112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
7113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
7115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
7116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
7117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
7118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
7119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
7120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
7121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
7122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
7123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
7124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
7125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
7128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
7130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
7131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
7132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 149


7133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
7136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
7137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
7138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
7139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
7141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
7142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
7143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
7144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
7145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
7146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
7147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
7148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
7149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
7150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
7151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(const ADC_TypeDef *ADCx, uint32_t AWDy
7153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
7155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
7156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
7157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
7164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
7169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
7170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
7171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
7172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
7173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
7174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
7175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
7176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
7179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
7180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
7181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
7182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
7183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
7185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
7186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
7187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
7188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
7189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
ARM GAS  /tmp/ccA1EUYa.s 			page 150


7190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
7193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
7195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
7199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
7200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
7201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
7202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
7203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
7204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
7205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
7206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
7207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
7208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
7209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
7211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
7212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
7213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
7214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
7215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
7216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
7218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
7220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
7224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
7225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
7226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
7227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
7228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
7229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
7230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
7233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
7234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
7235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
7236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
7237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
7238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
7240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
7241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
7242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
7245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
ARM GAS  /tmp/ccA1EUYa.s 			page 151


7247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
7251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
7252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
7253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
7254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
7255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
7256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
7257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
7258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
7260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
7261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
7262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
7264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
7266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling
7270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
7271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
7272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ratio
7273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - shift
7274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
7277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
7278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
7279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
7280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
7282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
7283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
7284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
7285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
7286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
7287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
7288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
7289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
7290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
7291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
7292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
7293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
7294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
7295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
7296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
7297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
7298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
7299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
7300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
7303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 152


7304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
7305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
7309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
7310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
7311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
7313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
7314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
7315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
7316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
7317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
7318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
7319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
7320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
7321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
7323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
7325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
7329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
7330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
7331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
7333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
7334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
7335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
7336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
7337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
7338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
7339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
7340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
7341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
7342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
7344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
7346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
7353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
7359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
7360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
ARM GAS  /tmp/ccA1EUYa.s 			page 153


7361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
7362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
7363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
7366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
7367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro
7368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
7369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
7370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
7373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
7374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
7375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
7376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
7377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
7378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
7379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
7380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
7381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
7384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
7386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
7390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
7391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
7392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
7393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
7394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
7395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
7398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
7399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
7400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
7401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
7402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
7403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
7404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
7405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
7406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(const ADC_Common_TypeDef *ADCxy_COMMON)
7408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
7410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
7414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
7415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
7416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
7417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
ARM GAS  /tmp/ccA1EUYa.s 			page 154


7418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
7419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
7420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
7421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
7422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
7423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
7424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
7425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
7426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
7427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
7428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
7429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
7430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
7431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
7432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
7433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
7434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
7435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
7436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
7437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
7438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
7439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
7440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
7445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
7446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
7447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
7448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
7451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
7452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
7453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
7454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
7455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
7456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
7459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
7465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
7466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
7467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
7468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
7469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
7470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
7471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
7473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
7474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
ARM GAS  /tmp/ccA1EUYa.s 			page 155


7475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
7476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
7477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
7478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
7479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
7480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
7481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
7482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
7483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
7484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
7485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
7486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
7487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
7488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
7489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
7490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
7491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
7494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
7495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
7498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
7499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
7500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
7501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
7502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
7503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(const ADC_Common_TypeDef *ADCxy_COMMON)
7505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
7507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
7511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
7512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
7513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
7514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
7515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
7516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
7519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
7520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
7521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
7522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
7523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
7526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
7527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
7528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
7529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
7530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
7531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
ARM GAS  /tmp/ccA1EUYa.s 			page 156


7532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
7533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
7534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
7535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
7536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
7537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
7538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
7539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
7540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
7541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
7542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
7545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
7547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
7551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
7552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
7555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
7556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
7557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
7558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
7559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
7560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
7561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
7562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
7563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
7564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
7565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
7566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
7567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
7568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
7569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
7570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
7571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(const ADC_Common_TypeDef *ADCxy_COMMON)
7573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
7575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
7582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
7587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
7588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
ARM GAS  /tmp/ccA1EUYa.s 			page 157


7589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
7590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
7591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
7594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
7595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
7599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
7606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
7610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
7611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
7612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
7613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
7614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
7617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
7618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
7622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 185              		.loc 2 7622 1
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190 0000 80B4     		push	{r7}
 191              	.LCFI18:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 7, -4
 194 0002 83B0     		sub	sp, sp, #12
 195              	.LCFI19:
 196              		.cfi_def_cfa_offset 16
 197 0004 00AF     		add	r7, sp, #0
 198              	.LCFI20:
 199              		.cfi_def_cfa_register 7
 200 0006 7860     		str	r0, [r7, #4]
7623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 201              		.loc 2 7626 3
 202 0008 7B68     		ldr	r3, [r7, #4]
 203 000a 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccA1EUYa.s 			page 158


 204 000c 23F02043 		bic	r3, r3, #-1610612736
 205 0010 23F03F03 		bic	r3, r3, #63
 206 0014 7A68     		ldr	r2, [r7, #4]
 207 0016 9360     		str	r3, [r2, #8]
7627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 208              		.loc 2 7627 1
 209 0018 00BF     		nop
 210 001a 0C37     		adds	r7, r7, #12
 211              	.LCFI21:
 212              		.cfi_def_cfa_offset 4
 213 001c BD46     		mov	sp, r7
 214              	.LCFI22:
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 001e 5DF8047B 		ldr	r7, [sp], #4
 218              	.LCFI23:
 219              		.cfi_restore 7
 220              		.cfi_def_cfa_offset 0
 221 0022 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE481:
 225              		.section	.text.LL_ADC_EnableInternalRegulator,"ax",%progbits
 226              		.align	1
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv4-sp-d16
 232              	LL_ADC_EnableInternalRegulator:
 233              	.LFB483:
7628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
7631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
7632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
7634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
7636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
7638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
7642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
7643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
7644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
7645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
7646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
7647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
7650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
7651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
7655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 159


 234              		.loc 2 7655 1
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239 0000 80B4     		push	{r7}
 240              	.LCFI24:
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 7, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI25:
 245              		.cfi_def_cfa_offset 16
 246 0004 00AF     		add	r7, sp, #0
 247              	.LCFI26:
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
7656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 250              		.loc 2 7659 3
 251 0008 7B68     		ldr	r3, [r7, #4]
 252 000a 9B68     		ldr	r3, [r3, #8]
 253 000c 23F01043 		bic	r3, r3, #-1879048192
 254 0010 23F03F03 		bic	r3, r3, #63
 255 0014 43F08052 		orr	r2, r3, #268435456
 256 0018 7B68     		ldr	r3, [r7, #4]
 257 001a 9A60     		str	r2, [r3, #8]
7660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
7662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 258              		.loc 2 7662 1
 259 001c 00BF     		nop
 260 001e 0C37     		adds	r7, r7, #12
 261              	.LCFI27:
 262              		.cfi_def_cfa_offset 4
 263 0020 BD46     		mov	sp, r7
 264              	.LCFI28:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 0022 5DF8047B 		ldr	r7, [sp], #4
 268              	.LCFI29:
 269              		.cfi_restore 7
 270              		.cfi_def_cfa_offset 0
 271 0026 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE483:
 275              		.section	.text.LL_ADC_IsInternalRegulatorEnabled,"ax",%progbits
 276              		.align	1
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	LL_ADC_IsInternalRegulatorEnabled:
 283              	.LFB485:
7663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 160


7665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
7666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
7669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
7670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
7674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
7676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
7680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
7681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
7683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
7685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 284              		.loc 2 7685 1
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 8
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              	.LCFI30:
 291              		.cfi_def_cfa_offset 4
 292              		.cfi_offset 7, -4
 293 0002 83B0     		sub	sp, sp, #12
 294              	.LCFI31:
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              	.LCFI32:
 298              		.cfi_def_cfa_register 7
 299 0006 7860     		str	r0, [r7, #4]
7686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 300              		.loc 2 7686 12
 301 0008 7B68     		ldr	r3, [r7, #4]
 302 000a 9B68     		ldr	r3, [r3, #8]
 303 000c 03F08053 		and	r3, r3, #268435456
 304              		.loc 2 7686 76
 305 0010 B3F1805F 		cmp	r3, #268435456
 306 0014 01D1     		bne	.L9
 307              		.loc 2 7686 76 is_stmt 0 discriminator 1
 308 0016 0123     		movs	r3, #1
 309 0018 00E0     		b	.L11
 310              	.L9:
 311              		.loc 2 7686 76 discriminator 2
 312 001a 0023     		movs	r3, #0
 313              	.L11:
7687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 314              		.loc 2 7687 1 is_stmt 1 discriminator 5
 315 001c 1846     		mov	r0, r3
 316 001e 0C37     		adds	r7, r7, #12
 317              	.LCFI33:
ARM GAS  /tmp/ccA1EUYa.s 			page 161


 318              		.cfi_def_cfa_offset 4
 319 0020 BD46     		mov	sp, r7
 320              	.LCFI34:
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0022 5DF8047B 		ldr	r7, [sp], #4
 324              	.LCFI35:
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 0026 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE485:
 331              		.section	.text.LL_ADC_Enable,"ax",%progbits
 332              		.align	1
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	LL_ADC_Enable:
 339              	.LFB486:
7688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
7691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
7692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
7693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion start.
7694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
7695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
7701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
7702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
7706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 340              		.loc 2 7706 1
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              	.LCFI36:
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              	.LCFI37:
 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              	.LCFI38:
 354              		.cfi_def_cfa_register 7
 355 0006 7860     		str	r0, [r7, #4]
7707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
ARM GAS  /tmp/ccA1EUYa.s 			page 162


7709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 356              		.loc 2 7710 3
 357 0008 7B68     		ldr	r3, [r7, #4]
 358 000a 9B68     		ldr	r3, [r3, #8]
 359 000c 23F00043 		bic	r3, r3, #-2147483648
 360 0010 23F03F03 		bic	r3, r3, #63
 361 0014 43F00102 		orr	r2, r3, #1
 362 0018 7B68     		ldr	r3, [r7, #4]
 363 001a 9A60     		str	r2, [r3, #8]
7711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADEN);
7713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 364              		.loc 2 7713 1
 365 001c 00BF     		nop
 366 001e 0C37     		adds	r7, r7, #12
 367              	.LCFI39:
 368              		.cfi_def_cfa_offset 4
 369 0020 BD46     		mov	sp, r7
 370              	.LCFI40:
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0022 5DF8047B 		ldr	r7, [sp], #4
 374              	.LCFI41:
 375              		.cfi_restore 7
 376              		.cfi_def_cfa_offset 0
 377 0026 7047     		bx	lr
 378              		.cfi_endproc
 379              	.LFE486:
 381              		.section	.text.LL_ADC_IsEnabled,"ax",%progbits
 382              		.align	1
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv4-sp-d16
 388              	LL_ADC_IsEnabled:
 389              	.LFB488:
7714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
7717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
7720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
7721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
7722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
7726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADDIS);
7733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 163


7734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
7737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
7741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
7743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
7745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 390              		.loc 2 7745 1
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395 0000 80B4     		push	{r7}
 396              	.LCFI42:
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 83B0     		sub	sp, sp, #12
 400              	.LCFI43:
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              	.LCFI44:
 404              		.cfi_def_cfa_register 7
 405 0006 7860     		str	r0, [r7, #4]
7746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 406              		.loc 2 7746 12
 407 0008 7B68     		ldr	r3, [r7, #4]
 408 000a 9B68     		ldr	r3, [r3, #8]
 409 000c 03F00103 		and	r3, r3, #1
 410              		.loc 2 7746 68
 411 0010 012B     		cmp	r3, #1
 412 0012 01D1     		bne	.L14
 413              		.loc 2 7746 68 is_stmt 0 discriminator 1
 414 0014 0123     		movs	r3, #1
 415 0016 00E0     		b	.L16
 416              	.L14:
 417              		.loc 2 7746 68 discriminator 2
 418 0018 0023     		movs	r3, #0
 419              	.L16:
7747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 420              		.loc 2 7747 1 is_stmt 1 discriminator 5
 421 001a 1846     		mov	r0, r3
 422 001c 0C37     		adds	r7, r7, #12
 423              	.LCFI45:
 424              		.cfi_def_cfa_offset 4
 425 001e BD46     		mov	sp, r7
 426              	.LCFI46:
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 0020 5DF8047B 		ldr	r7, [sp], #4
 430              	.LCFI47:
 431              		.cfi_restore 7
 432              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccA1EUYa.s 			page 164


 433 0024 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE488:
 437              		.section	.text.LL_ADC_StartCalibration,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	LL_ADC_StartCalibration:
 445              	.LFB490:
7748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
7751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
7752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
7754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
7756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
7758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
7762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
7763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
7764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
7765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
7766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
7767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
7768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
7769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
7770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
7771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
7772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
7775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
7776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
7777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
7779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
7780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
7781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
7784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 446              		.loc 2 7784 1
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              	.LCFI48:
 453              		.cfi_def_cfa_offset 4
 454              		.cfi_offset 7, -4
ARM GAS  /tmp/ccA1EUYa.s 			page 165


 455 0002 83B0     		sub	sp, sp, #12
 456              	.LCFI49:
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              	.LCFI50:
 460              		.cfi_def_cfa_register 7
 461 0006 7860     		str	r0, [r7, #4]
 462 0008 3960     		str	r1, [r7]
7785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 463              		.loc 2 7788 3
 464 000a 7B68     		ldr	r3, [r7, #4]
 465 000c 9B68     		ldr	r3, [r3, #8]
 466 000e 23F04043 		bic	r3, r3, #-1073741824
 467 0012 23F03F03 		bic	r3, r3, #63
 468 0016 3A68     		ldr	r2, [r7]
 469 0018 02F08042 		and	r2, r2, #1073741824
 470 001c 1343     		orrs	r3, r3, r2
 471 001e 43F00042 		orr	r2, r3, #-2147483648
 472 0022 7B68     		ldr	r3, [r7, #4]
 473 0024 9A60     		str	r2, [r3, #8]
7789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
7790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
7791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 474              		.loc 2 7791 1
 475 0026 00BF     		nop
 476 0028 0C37     		adds	r7, r7, #12
 477              	.LCFI51:
 478              		.cfi_def_cfa_offset 4
 479 002a BD46     		mov	sp, r7
 480              	.LCFI52:
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 002c 5DF8047B 		ldr	r7, [sp], #4
 484              	.LCFI53:
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 0030 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE490:
 491              		.section	.text.LL_ADC_IsCalibrationOnGoing,"ax",%progbits
 492              		.align	1
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv4-sp-d16
 498              	LL_ADC_IsCalibrationOnGoing:
 499              	.LFB491:
7792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
7795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
7796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
7798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 166


7799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
7800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 500              		.loc 2 7800 1
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 8
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 505 0000 80B4     		push	{r7}
 506              	.LCFI54:
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 83B0     		sub	sp, sp, #12
 510              	.LCFI55:
 511              		.cfi_def_cfa_offset 16
 512 0004 00AF     		add	r7, sp, #0
 513              	.LCFI56:
 514              		.cfi_def_cfa_register 7
 515 0006 7860     		str	r0, [r7, #4]
7801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 516              		.loc 2 7801 12
 517 0008 7B68     		ldr	r3, [r7, #4]
 518 000a 9B68     		ldr	r3, [r3, #8]
 519 000c 03F00043 		and	r3, r3, #-2147483648
 520              		.loc 2 7801 70
 521 0010 B3F1004F 		cmp	r3, #-2147483648
 522 0014 01D1     		bne	.L19
 523              		.loc 2 7801 70 is_stmt 0 discriminator 1
 524 0016 0123     		movs	r3, #1
 525 0018 00E0     		b	.L21
 526              	.L19:
 527              		.loc 2 7801 70 discriminator 2
 528 001a 0023     		movs	r3, #0
 529              	.L21:
7802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 530              		.loc 2 7802 1 is_stmt 1 discriminator 5
 531 001c 1846     		mov	r0, r3
 532 001e 0C37     		adds	r7, r7, #12
 533              	.LCFI57:
 534              		.cfi_def_cfa_offset 4
 535 0020 BD46     		mov	sp, r7
 536              	.LCFI58:
 537              		.cfi_def_cfa_register 13
 538              		@ sp needed
 539 0022 5DF8047B 		ldr	r7, [sp], #4
 540              	.LCFI59:
 541              		.cfi_restore 7
 542              		.cfi_def_cfa_offset 0
 543 0026 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE491:
 547              		.section	.text.LL_ADC_REG_StartConversion,"ax",%progbits
 548              		.align	1
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	LL_ADC_REG_StartConversion:
ARM GAS  /tmp/ccA1EUYa.s 			page 167


 555              	.LFB492:
7803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
7809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
7814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
7818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
7821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
7827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
7831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 556              		.loc 2 7831 1
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 8
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561 0000 80B4     		push	{r7}
 562              	.LCFI60:
 563              		.cfi_def_cfa_offset 4
 564              		.cfi_offset 7, -4
 565 0002 83B0     		sub	sp, sp, #12
 566              	.LCFI61:
 567              		.cfi_def_cfa_offset 16
 568 0004 00AF     		add	r7, sp, #0
 569              	.LCFI62:
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
7832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 572              		.loc 2 7835 3
 573 0008 7B68     		ldr	r3, [r7, #4]
 574 000a 9B68     		ldr	r3, [r3, #8]
 575 000c 23F00043 		bic	r3, r3, #-2147483648
 576 0010 23F03F03 		bic	r3, r3, #63
 577 0014 43F00402 		orr	r2, r3, #4
 578 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 168


 579 001a 9A60     		str	r2, [r3, #8]
7836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTART);
7838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 580              		.loc 2 7838 1
 581 001c 00BF     		nop
 582 001e 0C37     		adds	r7, r7, #12
 583              	.LCFI63:
 584              		.cfi_def_cfa_offset 4
 585 0020 BD46     		mov	sp, r7
 586              	.LCFI64:
 587              		.cfi_def_cfa_register 13
 588              		@ sp needed
 589 0022 5DF8047B 		ldr	r7, [sp], #4
 590              	.LCFI65:
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 0026 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE492:
 597              		.section	.text.LL_ADC_INJ_StartConversion,"ax",%progbits
 598              		.align	1
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv4-sp-d16
 604              	LL_ADC_INJ_StartConversion:
 605              	.LFB504:
7839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
7842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
7845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
7847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
7851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTP);
7858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
7862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
7863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
7865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
7867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 169


7868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
7869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
7873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
7874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
7876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
7878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
7880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC sampling phase for sampling time trigger mode
7884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
7885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
7886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
7887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
7888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StartSamplingPhase
7894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartSamplingPhase(ADC_TypeDef *ADCx)
7898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
7900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC sampling phase for sampling time trigger mode and start conversion
7904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
7905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
7906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
7907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
7908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_StartSamplingPhase has been called to start
7909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the sampling phase
7910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StopSamplingPhase
7916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopSamplingPhase(ADC_TypeDef *ADCx)
7920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
7922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 170


7925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
7929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
7930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
7934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
7941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
7945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
7949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
7956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
7964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
7979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 171


7982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
7990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
7994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
8001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
8002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
8003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
8004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
8005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
8006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
8007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
8008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
8009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         separately).
8010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
8011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
8012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
8015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
8016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
8017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
8018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
8019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(const ADC_Common_TypeDef *ADCxy_COMMO
8021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                               uint32_t ConversionData)
8022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
8024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ConversionData)
8025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
8026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
8027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
8029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
8032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
8035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
8036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 172


8039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
8040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
8041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
8042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
8043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
8044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
8045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
8046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
8047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
8048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
8049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
8050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
8051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
8052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
8053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
8057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 606              		.loc 2 8057 1
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611 0000 80B4     		push	{r7}
 612              	.LCFI66:
 613              		.cfi_def_cfa_offset 4
 614              		.cfi_offset 7, -4
 615 0002 83B0     		sub	sp, sp, #12
 616              	.LCFI67:
 617              		.cfi_def_cfa_offset 16
 618 0004 00AF     		add	r7, sp, #0
 619              	.LCFI68:
 620              		.cfi_def_cfa_register 7
 621 0006 7860     		str	r0, [r7, #4]
8058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
8059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
8060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
8061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 622              		.loc 2 8061 3
 623 0008 7B68     		ldr	r3, [r7, #4]
 624 000a 9B68     		ldr	r3, [r3, #8]
 625 000c 23F00043 		bic	r3, r3, #-2147483648
 626 0010 23F03F03 		bic	r3, r3, #63
 627 0014 43F00802 		orr	r2, r3, #8
 628 0018 7B68     		ldr	r3, [r7, #4]
 629 001a 9A60     		str	r2, [r3, #8]
8062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
8063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTART);
8064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 630              		.loc 2 8064 1
 631 001c 00BF     		nop
 632 001e 0C37     		adds	r7, r7, #12
 633              	.LCFI69:
 634              		.cfi_def_cfa_offset 4
 635 0020 BD46     		mov	sp, r7
 636              	.LCFI70:
ARM GAS  /tmp/ccA1EUYa.s 			page 173


 637              		.cfi_def_cfa_register 13
 638              		@ sp needed
 639 0022 5DF8047B 		ldr	r7, [sp], #4
 640              	.LCFI71:
 641              		.cfi_restore 7
 642              		.cfi_def_cfa_offset 0
 643 0026 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE504:
 647              		.section	.text.LL_ADC_INJ_StopConversion,"ax",%progbits
 648              		.align	1
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv4-sp-d16
 654              	LL_ADC_INJ_StopConversion:
 655              	.LFB505:
8065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
8068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
8069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
8070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
8071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
8072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
8073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
8077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 656              		.loc 2 8077 1
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 8
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661 0000 80B4     		push	{r7}
 662              	.LCFI72:
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 83B0     		sub	sp, sp, #12
 666              	.LCFI73:
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              	.LCFI74:
 670              		.cfi_def_cfa_register 7
 671 0006 7860     		str	r0, [r7, #4]
8078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
8079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
8080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
8081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 672              		.loc 2 8081 3
 673 0008 7B68     		ldr	r3, [r7, #4]
 674 000a 9B68     		ldr	r3, [r3, #8]
 675 000c 23F00043 		bic	r3, r3, #-2147483648
 676 0010 23F03F03 		bic	r3, r3, #63
 677 0014 43F02002 		orr	r2, r3, #32
 678 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 174


 679 001a 9A60     		str	r2, [r3, #8]
8082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
8083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTP);
8084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 680              		.loc 2 8084 1
 681 001c 00BF     		nop
 682 001e 0C37     		adds	r7, r7, #12
 683              	.LCFI75:
 684              		.cfi_def_cfa_offset 4
 685 0020 BD46     		mov	sp, r7
 686              	.LCFI76:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0022 5DF8047B 		ldr	r7, [sp], #4
 690              	.LCFI77:
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0026 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE505:
 697              		.section	.text.LL_ADC_IsActiveFlag_ADRDY,"ax",%progbits
 698              		.align	1
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu fpv4-sp-d16
 704              	LL_ADC_IsActiveFlag_ADRDY:
 705              	.LFB513:
8085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
8088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
8089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
8091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
8093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
8095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
8099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
8100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
8102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
8104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
8106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
8110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
8111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
8112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
8113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
ARM GAS  /tmp/ccA1EUYa.s 			page 175


8114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
8115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
8116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
8117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
8119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
8120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
8121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
8122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
8123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
8124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(const ADC_TypeDef *ADCx, uint32_t Rank)
8126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
8128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
8129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
8131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
8132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
8133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
8137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
8138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
8139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
8140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
8141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
8142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
8143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
8144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
8145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
8147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
8148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
8149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
8150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
8151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
8152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(const ADC_TypeDef *ADCx, uint32_t Rank)
8154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
8156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
8157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
8159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
8160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
8161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
8165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
8166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
8167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
8168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
8169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
8170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
ARM GAS  /tmp/ccA1EUYa.s 			page 176


8171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
8172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
8173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
8175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
8176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
8177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
8178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
8179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
8180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(const ADC_TypeDef *ADCx, uint32_t Rank)
8182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
8184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
8185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
8187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
8188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
8189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
8193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
8194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
8195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
8196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
8197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
8198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
8199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
8200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
8201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
8203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
8204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
8205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
8206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
8207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
8208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(const ADC_TypeDef *ADCx, uint32_t Rank)
8210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
8212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
8213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
8215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
8216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
8217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
8221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
8222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
8223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
8224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
8225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
8226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
8227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
ARM GAS  /tmp/ccA1EUYa.s 			page 177


8228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
8229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
8231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
8232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
8233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
8234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
8235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
8236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(const ADC_TypeDef *ADCx, uint32_t Rank)
8238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
8240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
8241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
8243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
8244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
8245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
8249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
8252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
8253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
8257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
8258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
8259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
8260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
8261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
8265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 706              		.loc 2 8265 1
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 8
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              	.LCFI78:
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 7, -4
 715 0002 83B0     		sub	sp, sp, #12
 716              	.LCFI79:
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              	.LCFI80:
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
8266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
 722              		.loc 2 8266 12
 723 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 178


 724 000a 1B68     		ldr	r3, [r3]
 725 000c 03F00103 		and	r3, r3, #1
 726              		.loc 2 8266 81
 727 0010 012B     		cmp	r3, #1
 728 0012 01D1     		bne	.L26
 729              		.loc 2 8266 81 is_stmt 0 discriminator 1
 730 0014 0123     		movs	r3, #1
 731 0016 00E0     		b	.L28
 732              	.L26:
 733              		.loc 2 8266 81 discriminator 2
 734 0018 0023     		movs	r3, #0
 735              	.L28:
8267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 736              		.loc 2 8267 1 is_stmt 1 discriminator 5
 737 001a 1846     		mov	r0, r3
 738 001c 0C37     		adds	r7, r7, #12
 739              	.LCFI81:
 740              		.cfi_def_cfa_offset 4
 741 001e BD46     		mov	sp, r7
 742              	.LCFI82:
 743              		.cfi_def_cfa_register 13
 744              		@ sp needed
 745 0020 5DF8047B 		ldr	r7, [sp], #4
 746              	.LCFI83:
 747              		.cfi_restore 7
 748              		.cfi_def_cfa_offset 0
 749 0024 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE513:
 753              		.section	.text.LL_ADC_ClearFlag_EOC,"ax",%progbits
 754              		.align	1
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu fpv4-sp-d16
 760              	LL_ADC_ClearFlag_EOC:
 761              	.LFB525:
8268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
8271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
8272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
8276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
8278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
8282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
8283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(const ADC_TypeDef *ADCx)
8287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 179


8288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
8289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
8293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
8294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(const ADC_TypeDef *ADCx)
8298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
8300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
8304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
8305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(const ADC_TypeDef *ADCx)
8309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
8311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
8315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
8316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(const ADC_TypeDef *ADCx)
8320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
8322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
8326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
8327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(const ADC_TypeDef *ADCx)
8331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
8333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
8337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
8338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(const ADC_TypeDef *ADCx)
8342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
8344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 180


8345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
8348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
8349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(const ADC_TypeDef *ADCx)
8353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
8355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
8359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
8360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(const ADC_TypeDef *ADCx)
8364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
8366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
8370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
8371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(const ADC_TypeDef *ADCx)
8375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
8377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
8381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
8382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
8383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
8384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
8385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
8389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
8391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
8395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
8396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
8400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 762              		.loc 2 8400 1
ARM GAS  /tmp/ccA1EUYa.s 			page 181


 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              	.LCFI84:
 769              		.cfi_def_cfa_offset 4
 770              		.cfi_offset 7, -4
 771 0002 83B0     		sub	sp, sp, #12
 772              	.LCFI85:
 773              		.cfi_def_cfa_offset 16
 774 0004 00AF     		add	r7, sp, #0
 775              	.LCFI86:
 776              		.cfi_def_cfa_register 7
 777 0006 7860     		str	r0, [r7, #4]
8401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
 778              		.loc 2 8401 3
 779 0008 7B68     		ldr	r3, [r7, #4]
 780 000a 0422     		movs	r2, #4
 781 000c 1A60     		str	r2, [r3]
8402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 782              		.loc 2 8402 1
 783 000e 00BF     		nop
 784 0010 0C37     		adds	r7, r7, #12
 785              	.LCFI87:
 786              		.cfi_def_cfa_offset 4
 787 0012 BD46     		mov	sp, r7
 788              	.LCFI88:
 789              		.cfi_def_cfa_register 13
 790              		@ sp needed
 791 0014 5DF8047B 		ldr	r7, [sp], #4
 792              	.LCFI89:
 793              		.cfi_restore 7
 794              		.cfi_def_cfa_offset 0
 795 0018 7047     		bx	lr
 796              		.cfi_endproc
 797              	.LFE525:
 799              		.section	.text.LL_ADC_ClearFlag_JEOC,"ax",%progbits
 800              		.align	1
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	LL_ADC_ClearFlag_JEOC:
 807              	.LFB529:
8403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
8406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
8407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
8411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
8413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 182


8415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
8417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
8418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
8422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
8424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
8428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
8429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
8433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
8435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
8439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
8440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
8444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 808              		.loc 2 8444 1
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 8
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813 0000 80B4     		push	{r7}
 814              	.LCFI90:
 815              		.cfi_def_cfa_offset 4
 816              		.cfi_offset 7, -4
 817 0002 83B0     		sub	sp, sp, #12
 818              	.LCFI91:
 819              		.cfi_def_cfa_offset 16
 820 0004 00AF     		add	r7, sp, #0
 821              	.LCFI92:
 822              		.cfi_def_cfa_register 7
 823 0006 7860     		str	r0, [r7, #4]
8445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
 824              		.loc 2 8445 3
 825 0008 7B68     		ldr	r3, [r7, #4]
 826 000a 2022     		movs	r2, #32
 827 000c 1A60     		str	r2, [r3]
8446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 828              		.loc 2 8446 1
 829 000e 00BF     		nop
 830 0010 0C37     		adds	r7, r7, #12
 831              	.LCFI93:
 832              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccA1EUYa.s 			page 183


 833 0012 BD46     		mov	sp, r7
 834              	.LCFI94:
 835              		.cfi_def_cfa_register 13
 836              		@ sp needed
 837 0014 5DF8047B 		ldr	r7, [sp], #4
 838              	.LCFI95:
 839              		.cfi_restore 7
 840              		.cfi_def_cfa_offset 0
 841 0018 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE529:
 845              		.section	.text.LL_ADC_ClearFlag_JEOS,"ax",%progbits
 846              		.align	1
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	LL_ADC_ClearFlag_JEOS:
 853              	.LFB530:
8447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
8450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
8451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
8455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 854              		.loc 2 8455 1
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 8
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 80B4     		push	{r7}
 860              	.LCFI96:
 861              		.cfi_def_cfa_offset 4
 862              		.cfi_offset 7, -4
 863 0002 83B0     		sub	sp, sp, #12
 864              	.LCFI97:
 865              		.cfi_def_cfa_offset 16
 866 0004 00AF     		add	r7, sp, #0
 867              	.LCFI98:
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
8456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
 870              		.loc 2 8456 3
 871 0008 7B68     		ldr	r3, [r7, #4]
 872 000a 4022     		movs	r2, #64
 873 000c 1A60     		str	r2, [r3]
8457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 874              		.loc 2 8457 1
 875 000e 00BF     		nop
 876 0010 0C37     		adds	r7, r7, #12
 877              	.LCFI99:
 878              		.cfi_def_cfa_offset 4
 879 0012 BD46     		mov	sp, r7
 880              	.LCFI100:
ARM GAS  /tmp/ccA1EUYa.s 			page 184


 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0014 5DF8047B 		ldr	r7, [sp], #4
 884              	.LCFI101:
 885              		.cfi_restore 7
 886              		.cfi_def_cfa_offset 0
 887 0018 7047     		bx	lr
 888              		.cfi_endproc
 889              	.LFE530:
 891              		.section	.text.LL_ADC_EnableIT_JEOS,"ax",%progbits
 892              		.align	1
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv4-sp-d16
 898              	LL_ADC_EnableIT_JEOS:
 899              	.LFB563:
8458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
8461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
8462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
8466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
8468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
8472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
8473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
8477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
8479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
8483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
8484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
8488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
8490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
8494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
8495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 185


8498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
8499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
8501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
8504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
8506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
8507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(const ADC_Common_TypeDef *ADCxy_COMMON)
8512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
8514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
8518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
8519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(const ADC_Common_TypeDef *ADCxy_COMMON)
8524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
8526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
8530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
8531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(const ADC_Common_TypeDef *ADCxy_COMMON)
8536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
8538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
8542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
8543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(const ADC_Common_TypeDef *ADCxy_COMMON)
8548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
8550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
8554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
ARM GAS  /tmp/ccA1EUYa.s 			page 186


8555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(const ADC_Common_TypeDef *ADCxy_COMMON)
8560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
8562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
8566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
8567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(const ADC_Common_TypeDef *ADCxy_COMMON)
8572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
8574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
8578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
8579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(const ADC_Common_TypeDef *ADCxy_COMMON)
8584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
8586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
8590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
8591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(const ADC_Common_TypeDef *ADCxy_COMMON)
8596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
8598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
8602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
8603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(const ADC_Common_TypeDef *ADCxy_COMMON)
8608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
8610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 187


8612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
8614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
8615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(const ADC_Common_TypeDef *ADCxy_COMMON)
8620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
8622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
8626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
8627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(const ADC_Common_TypeDef *ADCxy_COMMON)
8632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
8634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
8638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
8639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(const ADC_Common_TypeDef *ADCxy_COMMON)
8644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
8646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
8650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
8651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(const ADC_Common_TypeDef *ADCxy_COMMON)
8656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
8658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
8662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
8663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(const ADC_Common_TypeDef *ADCxy_COMMON)
8668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 188


8669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
8670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
8674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
8675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(const ADC_Common_TypeDef *ADCxy_COMMON)
8680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
8682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
8686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
8687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(const ADC_Common_TypeDef *ADCxy_COMMON)
8692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
8694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
8698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
8699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(const ADC_Common_TypeDef *ADCxy_COMMON)
8704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
8706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
8710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
8711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(const ADC_Common_TypeDef *ADCxy_COMMON)
8716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
8718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
8722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
8723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccA1EUYa.s 			page 189


8726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(const ADC_Common_TypeDef *ADCxy_COMMON)
8728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
8730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
8734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
8735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(const ADC_Common_TypeDef *ADCxy_COMMON)
8740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
8742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
8746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
8747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(const ADC_Common_TypeDef *ADCxy_COMMON)
8752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
8754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
8758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
8759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
8760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
8761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
8762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(const ADC_Common_TypeDef *ADCxy_COMMON)
8764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
8766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
8768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
8771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
8774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
8775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC ready.
8779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
8780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 190


8783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
8784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
8786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
8790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
8791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
8795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
8797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
8801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
8802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
8806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
8808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
8812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
8813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
8817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
8819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
8823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
8824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
8828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
8830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
8834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
8835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
8839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 191


8840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
8841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
8845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
8846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
8850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 900              		.loc 2 8850 1
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 8
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905 0000 80B4     		push	{r7}
 906              	.LCFI102:
 907              		.cfi_def_cfa_offset 4
 908              		.cfi_offset 7, -4
 909 0002 83B0     		sub	sp, sp, #12
 910              	.LCFI103:
 911              		.cfi_def_cfa_offset 16
 912 0004 00AF     		add	r7, sp, #0
 913              	.LCFI104:
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
8851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
 916              		.loc 2 8851 3
 917 0008 7B68     		ldr	r3, [r7, #4]
 918 000a 5B68     		ldr	r3, [r3, #4]
 919 000c 43F04002 		orr	r2, r3, #64
 920 0010 7B68     		ldr	r3, [r7, #4]
 921 0012 5A60     		str	r2, [r3, #4]
8852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 922              		.loc 2 8852 1
 923 0014 00BF     		nop
 924 0016 0C37     		adds	r7, r7, #12
 925              	.LCFI105:
 926              		.cfi_def_cfa_offset 4
 927 0018 BD46     		mov	sp, r7
 928              	.LCFI106:
 929              		.cfi_def_cfa_register 13
 930              		@ sp needed
 931 001a 5DF8047B 		ldr	r7, [sp], #4
 932              	.LCFI107:
 933              		.cfi_restore 7
 934              		.cfi_def_cfa_offset 0
 935 001e 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE563:
 939              		.section	.text.LL_ADC_DisableIT_EOC,"ax",%progbits
 940              		.align	1
 941              		.syntax unified
 942              		.thumb
 943              		.thumb_func
 944              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccA1EUYa.s 			page 192


 946              	LL_ADC_DisableIT_EOC:
 947              	.LFB569:
8853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
8856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
8857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
8861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
8863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
8867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
8868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
8872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
8874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
8878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
8879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
8883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
8885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
8889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
8890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
8894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
8896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
8900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
8901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
8905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
8907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 193


8908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
8911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
8912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
8916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 948              		.loc 2 8916 1
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 8
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952              		@ link register save eliminated.
 953 0000 80B4     		push	{r7}
 954              	.LCFI108:
 955              		.cfi_def_cfa_offset 4
 956              		.cfi_offset 7, -4
 957 0002 83B0     		sub	sp, sp, #12
 958              	.LCFI109:
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
 961              	.LCFI110:
 962              		.cfi_def_cfa_register 7
 963 0006 7860     		str	r0, [r7, #4]
8917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
 964              		.loc 2 8917 3
 965 0008 7B68     		ldr	r3, [r7, #4]
 966 000a 5B68     		ldr	r3, [r3, #4]
 967 000c 23F00402 		bic	r2, r3, #4
 968 0010 7B68     		ldr	r3, [r7, #4]
 969 0012 5A60     		str	r2, [r3, #4]
8918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 970              		.loc 2 8918 1
 971 0014 00BF     		nop
 972 0016 0C37     		adds	r7, r7, #12
 973              	.LCFI111:
 974              		.cfi_def_cfa_offset 4
 975 0018 BD46     		mov	sp, r7
 976              	.LCFI112:
 977              		.cfi_def_cfa_register 13
 978              		@ sp needed
 979 001a 5DF8047B 		ldr	r7, [sp], #4
 980              	.LCFI113:
 981              		.cfi_restore 7
 982              		.cfi_def_cfa_offset 0
 983 001e 7047     		bx	lr
 984              		.cfi_endproc
 985              	.LFE569:
 987              		.section	.text.LL_ADC_DisableIT_JEOC,"ax",%progbits
 988              		.align	1
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu fpv4-sp-d16
 994              	LL_ADC_DisableIT_JEOC:
 995              	.LFB573:
ARM GAS  /tmp/ccA1EUYa.s 			page 194


8919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
8922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
8923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
8927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
8929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
8933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
8934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
8938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
8940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
8944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
8945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
8949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
8950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
8951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
8952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
8953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
8954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
8955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
8956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
8957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
8958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
8959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
8960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 996              		.loc 2 8960 1
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001 0000 80B4     		push	{r7}
 1002              	.LCFI114:
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 0002 83B0     		sub	sp, sp, #12
 1006              	.LCFI115:
 1007              		.cfi_def_cfa_offset 16
 1008 0004 00AF     		add	r7, sp, #0
 1009              	.LCFI116:
 1010              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccA1EUYa.s 			page 195


 1011 0006 7860     		str	r0, [r7, #4]
8961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
 1012              		.loc 2 8961 3
 1013 0008 7B68     		ldr	r3, [r7, #4]
 1014 000a 5B68     		ldr	r3, [r3, #4]
 1015 000c 23F02002 		bic	r2, r3, #32
 1016 0010 7B68     		ldr	r3, [r7, #4]
 1017 0012 5A60     		str	r2, [r3, #4]
8962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1018              		.loc 2 8962 1
 1019 0014 00BF     		nop
 1020 0016 0C37     		adds	r7, r7, #12
 1021              	.LCFI117:
 1022              		.cfi_def_cfa_offset 4
 1023 0018 BD46     		mov	sp, r7
 1024              	.LCFI118:
 1025              		.cfi_def_cfa_register 13
 1026              		@ sp needed
 1027 001a 5DF8047B 		ldr	r7, [sp], #4
 1028              	.LCFI119:
 1029              		.cfi_restore 7
 1030              		.cfi_def_cfa_offset 0
 1031 001e 7047     		bx	lr
 1032              		.cfi_endproc
 1033              	.LFE573:
 1035              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
 1036              		.align	2
 1039              	OFFSET_TAB_CCMRx:
 1040 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
 1040      04040404 
 1040      3838
 1041              		.section	.rodata.SHIFT_TAB_OCxx,"a"
 1042              		.align	2
 1045              	SHIFT_TAB_OCxx:
 1046 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
 1046      00000800 
 1046      0008
 1047              		.section	.rodata.SHIFT_TAB_ICxx,"a"
 1048              		.align	2
 1051              	SHIFT_TAB_ICxx:
 1052 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
 1052      00000800 
 1052      0000
 1053              		.section	.rodata.SHIFT_TAB_CCxP,"a"
 1054              		.align	2
 1057              	SHIFT_TAB_CCxP:
 1058 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
 1058      080A0C0E 
 1058      1014
 1059              		.section	.rodata.SHIFT_TAB_OISx,"a"
 1060              		.align	2
 1063              	SHIFT_TAB_OISx:
 1064 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
 1064      04050607 
 1064      080A
 1065              		.section	.text.LL_TIM_DisableCounter,"ax",%progbits
 1066              		.align	1
ARM GAS  /tmp/ccA1EUYa.s 			page 196


 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu fpv4-sp-d16
 1072              	LL_TIM_DisableCounter:
 1073              	.LFB591:
 1074              		.file 3 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @file    stm32g4xx_ll_tim.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #ifndef __STM32G4xx_LL_TIM_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __STM32G4xx_LL_TIM_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defin
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
ARM GAS  /tmp/ccA1EUYa.s 			page 197


  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 6: TIMx_CH4  */
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 7: TIMx_CH4N */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x38U,   /* 8: TIMx_CH5  */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x38U    /* 9: TIMx_CH6  */
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 1: - NA */
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 3: - NA */
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 5: - NA */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 6: OC4M, OC4FE, OC4PE */
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 7: - NA */
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 8: OC5M, OC5FE, OC5PE */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U             /* 9: OC6M, OC6FE, OC6PE */
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 1: - NA */
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 3: - NA */
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 5: - NA */
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 6: CC4S, IC4PSC, IC4F */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 7: - NA */
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 8: - NA */
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U             /* 9: - NA */
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: CC1P */
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   4U,            /* 2: CC2P */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 4: CC3P */
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   12U,           /* 6: CC4P */
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   14U,           /* 7: CC4NP */
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   16U,           /* 8: CC5P */
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   20U            /* 9: CC6P */
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   3U,            /* 3: OIS2N */
ARM GAS  /tmp/ccA1EUYa.s 			page 198


 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   6U,            /* 6: OIS4 */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   7U,            /* 7: OIS4N */
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 8: OIS5 */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   10U            /* 9: OIS6 */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Defines used for the bit position in the register and perform offsets */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIM_POSITION_BRK_SOURCE            (POSITION_VAL(Source) & 0x1FUL)
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF1 register */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIMx_AF1_BKINP     TIM1_AF1_BKINP     /*!< BRK BKIN input polarity */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIMx_AF1_ETRSEL    TIM1_AF1_ETRSEL    /*!< TIMx ETR source selection */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @cond 0
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @endcond
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define OCREF_CLEAR_SELECT_Pos (28U)
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define OCREF_CLEAR_SELECT_Msk (0x1U << OCREF_CLEAR_SELECT_Pos)                /*!< 0x10000000 */
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
ARM GAS  /tmp/ccA1EUYa.s 			page 199


 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval none
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U :\
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH4) ? 6U :\
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH4N) ? 7U :\
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH5) ? 8U : 9U)
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval none
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetPrescaler().*/
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
ARM GAS  /tmp/ccA1EUYa.s 			page 200


 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetCounterMode().*/
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    be a number between 0x0000 and 0xFFFFFFFF.
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetAutoReload().*/
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetClockDivision().*/
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downc
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    from the RCR value (N).
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    GP timers: this parameter must be a number between Min_Data = 0x
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Max_Data = 0xFF.
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Advanced timers: this parameter must be a number between Min_Dat
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Max_Data = 0xFFFF.
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetRepetitionCounter().*/
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetMode().*/
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 201


 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                LL_TIM_OC_SetCompareCHx (x=1..6).*/
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPolarity().*/
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetActiveInput().*/
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPrescaler().*/
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 202


 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetFilter().*/
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_SetEncoderMode().*/
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
ARM GAS  /tmp/ccA1EUYa.s 			page 203


 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPolarity().*/
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPrescaler().*/
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a value of
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref TIM_LL_EC_IC_FILTER.
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetFilter().*/
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_OC_SetCompareCH2().*/
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
ARM GAS  /tmp/ccA1EUYa.s 			page 204


 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                        programmed. */
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       register has been written, their content is frozen until the 
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       switching-on of the outputs.
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_OC_SetDeadTime()
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                        programmed. */
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_EnableBRK() or @ref LL_TIM_DisableBRK()
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t BreakFilter;          /*!< Specifies the TIM Break Filter.
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_FILTER
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 205


 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t BreakAFMode;           /*!< Specifies the alternate function mode of the break input.
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_AFMODE
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note Bidirectional break input is only supported by advanced
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2State;          /*!< Specifies whether the TIM Break2 input is enabled or not.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_ENABLE
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_EnableBRK2() or @ref LL_TIM_DisableBRK2()
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2Polarity;        /*!< Specifies the TIM Break2 Input pin polarity.
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_POLARI
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK2()
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2Filter;          /*!< Specifies the TIM Break2 Filter.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_FILTER
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK2()
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2AFMode;          /*!< Specifies the alternate function mode of the break2 input.
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_AFMODE
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK2()
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note Bidirectional break input is only supported by advanced
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_EnableAutomaticOutput() or @ref LL_TIM_DisableAut
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
ARM GAS  /tmp/ccA1EUYa.s 			page 206


 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC5IF                        TIM_SR_CC5IF         /*!< Capture/compare 5 interrup
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC6IF                        TIM_SR_CC6IF         /*!< Capture/compare 6 interrup
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_B2IF                         TIM_SR_B2IF          /*!< Second break interrupt fla
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_SBIF                         TIM_SR_SBIF          /*!< System Break interrupt fla
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_IDXF                         TIM_SR_IDXF          /*!< Index interrupt flag  */
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_DIRF                         TIM_SR_DIRF          /*!< Direction Change interrupt
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_IERRF                        TIM_SR_IERRF         /*!< Index Error flag  */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_TERRF                        TIM_SR_TERRF         /*!< Transition Error flag  */
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_ENABLE Break2 Enable
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_DISABLE            0x00000000U              /*!< Break2 function disabled */
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_ENABLE             TIM_BDTR_BK2E            /*!< Break2 function enabled */
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
ARM GAS  /tmp/ccA1EUYa.s 			page 207


 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_IDXIE                      TIM_DIER_IDXIE       /*!< Index interrupt enable */
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_DIRIE                      TIM_DIER_DIRIE       /*!< Direction Change interrupt
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_IERRIE                     TIM_DIER_IERRIE      /*!< Index Error interrupt enab
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_TERRIE                     TIM_DIER_TERRIE      /*!< Transition Error interrupt
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter stops counting at 
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter is not stopped at 
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!< Counter used as upcounter 
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_0        /*!< The counter counts up and 
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_1        /*!< The counter counts up and 
ARM GAS  /tmp/ccA1EUYa.s 			page 208


 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
ARM GAS  /tmp/ccA1EUYa.s 			page 209


 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4N                    TIM_CCER_CC4NE     /*!< Timer complementary output c
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH5                     TIM_CCER_CC5E     /*!< Timer output channel 5 */
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH6                     TIM_CCER_CC6E     /*!< Timer output channel 6 */
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @cond 0
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM1 LL_TIM_OCMODE_ASYMMETRIC_PWM1
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM2 LL_TIM_OCMODE_ASYMMETRIC_PWM2
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @endcond
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM1              TIM_CCMR1_OC1M_3                                    
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM2              (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0)               
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM1            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_2)               
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM2            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASYMMETRIC_PWM1          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASYMMETRIC_PWM2          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M)                 
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_PULSE_ON_COMPARE         (TIM_CCMR2_OC3M_3 | TIM_CCMR2_OC3M_1)               
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_DIRECTION_OUTPUT         (TIM_CCMR2_OC3M_3 | TIM_CCMR2_OC3M_1 | TIM_CCMR2_OC3
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
ARM GAS  /tmp/ccA1EUYa.s 			page 210


 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GROUPCH5 GROUPCH5
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_NONE                   0x00000000U           /*!< No effect of OC5REF on OC
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC1REFC                TIM_CCR5_GC5C1        /*!< OC1REFC is the logical AN
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC2REFC                TIM_CCR5_GC5C2        /*!< OC2REFC is the logical AN
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC3REFC                TIM_CCR5_GC5C3        /*!< OC3REFC is the logical AN
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
ARM GAS  /tmp/ccA1EUYa.s 			page 211


 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X2     (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_1)             
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X1     (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_1 | TIM_SMCR_SM
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X2       (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2)             
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X1_TI12  (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2 | TIM_SMCR_SM
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X1_TI1                    (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2 | TIM_SMCR_SM
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X1_TI2                    (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2 | TIM_SMCR_SM
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
ARM GAS  /tmp/ccA1EUYa.s 			page 212


 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_ENCODERCLK                 TIM_CR2_MMS_3                                   /*!<
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO2 Trigger Output 2
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_RESET                     0x00000000U                                         
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_ENABLE                    TIM_CR2_MMS2_0                                      
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_UPDATE                    TIM_CR2_MMS2_1                                      
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_CC1F                      (TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)                   
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC1                       TIM_CR2_MMS2_2                                      
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC2                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)                   
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC3                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1)                   
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5                       TIM_CR2_MMS2_3                                      
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6                       (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_0)                   
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1)                   
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2)                   
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)  
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 |TIM_CR2_MMS2_1)   
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | 
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER TIM_SMCR_SMS_3                      /*!< Combined re
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_GATEDRESET   (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_0)   /*!< Combined ga
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                                                         the counter
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SMS_PRELOAD_SOURCE SMS Preload Source
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SMSPS_TIMUPDATE                 0x00000000U                         /*!< The SMS pre
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SMSPS_INDEX                     TIM_SMCR_SMSPS                      /*!< The SMS pre
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
ARM GAS  /tmp/ccA1EUYa.s 			page 213


 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR4                         TIM_SMCR_TS_3                                       
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR5                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_0)                     
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR6                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_1)                     
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR7                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR8                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_2)                     
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR9                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_2 | TIM_SMCR_TS_0)     
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR10                        (TIM_SMCR_TS_3 | TIM_SMCR_TS_2 | TIM_SMCR_TS_1)     
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR11                        (TIM_SMCR_TS_3 | TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
ARM GAS  /tmp/ccA1EUYa.s 			page 214


1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_ETRSOURCE External Trigger Source TIM1
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_GPIO        0x00000000U                                              
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP1       TIM1_AF1_ETRSEL_0                                        
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP2       TIM1_AF1_ETRSEL_1                                        
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP3       (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                  
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP4       TIM1_AF1_ETRSEL_2                                        
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP5       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                  
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP6       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                  
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP7       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC1_AWD1   TIM1_AF1_ETRSEL_3                                        
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC1_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                  
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC1_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                  
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC4)
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC4_AWD1   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC4_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                  
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC4_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC4 */
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ETRSOURCE External Trigger Source TIM2
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_GPIO         0x00000000U                                             
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_TIM3_ETR     TIM1_AF1_ETRSEL_3                                       
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_TIM4_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
ARM GAS  /tmp/ccA1EUYa.s 			page 215


1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_TIM5_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                 
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_LSE          (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_ETRSOURCE External Trigger Source TIM3
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_GPIO         0x00000000U                                             
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_TIM2_ETR     TIM1_AF1_ETRSEL_3                                       
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_TIM4_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_ADC2_AWD1    (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_ADC2_AWD2    (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                 
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_ADC2_AWD3    (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_ETRSOURCE External Trigger Source TIM4
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_GPIO         0x00000000U                                             
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_TIM3_ETR     TIM1_AF1_ETRSEL_3                                       
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_TIM5_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 216


1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_ETRSOURCE External Trigger Source TIM5
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_GPIO         0x00000000U                                             
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_TIM2_ETR     TIM1_AF1_ETRSEL_3                                       
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_TIM3_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_ETRSOURCE External Trigger Source TIM8
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_GPIO        0x00000000U                                              
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP1       TIM1_AF1_ETRSEL_0                                        
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP2       TIM1_AF1_ETRSEL_1                                        
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP3       (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                  
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP4       TIM1_AF1_ETRSEL_2                                        
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP5       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                  
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP6       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                  
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP7       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC2_AWD1   TIM1_AF1_ETRSEL_3                                        
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC2_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                  
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC2_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                  
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC3)
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC3_AWD1   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC3_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                  
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC3_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC3 */
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM20)
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM20_ETRSOURCE External Trigger Source TIM20
ARM GAS  /tmp/ccA1EUYa.s 			page 217


1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_GPIO       0x00000000U                                              
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP1      TIM1_AF1_ETRSEL_0                                        
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP2      TIM1_AF1_ETRSEL_1                                        
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP3      (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                  
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP4      TIM1_AF1_ETRSEL_2                                        
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP5      (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                  
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP6      (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                  
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP7      (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC3)
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC3_AWD1  TIM1_AF1_ETRSEL_3                                        
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC3_AWD2  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                  
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC3_AWD3  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                  
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC3 */
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC5)
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC5_AWD1  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC5_AWD2  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                  
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC5_AWD3  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC5 */
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM20 */
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_FILTER break filter
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1              0x00000000U   /*!< No filter, BRK acts asynchronousl
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N2           0x00010000U   /*!< fSAMPLING=fCK_INT, N=2 */
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N4           0x00020000U   /*!< fSAMPLING=fCK_INT, N=4 */
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N8           0x00030000U   /*!< fSAMPLING=fCK_INT, N=8 */
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N6           0x00040000U   /*!< fSAMPLING=fDTS/2, N=6 */
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N8           0x00050000U   /*!< fSAMPLING=fDTS/2, N=8 */
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N6           0x00060000U   /*!< fSAMPLING=fDTS/4, N=6 */
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N8           0x00070000U   /*!< fSAMPLING=fDTS/4, N=8 */
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N6           0x00080000U   /*!< fSAMPLING=fDTS/8, N=6 */
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N8           0x00090000U   /*!< fSAMPLING=fDTS/8, N=8 */
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N5          0x000A0000U   /*!< fSAMPLING=fDTS/16, N=5 */
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N6          0x000B0000U   /*!< fSAMPLING=fDTS/16, N=6 */
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N8          0x000C0000U   /*!< fSAMPLING=fDTS/16, N=8 */
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N5          0x000D0000U   /*!< fSAMPLING=fDTS/32, N=5 */
ARM GAS  /tmp/ccA1EUYa.s 			page 218


1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N6          0x000E0000U   /*!< fSAMPLING=fDTS/32, N=6 */
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N8          0x000F0000U   /*!< fSAMPLING=fDTS/32, N=8 */
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_POLARITY BREAK2 POLARITY
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_LOW             0x00000000U             /*!< Break input BRK2 is act
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_HIGH            TIM_BDTR_BK2P           /*!< Break input BRK2 is act
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_FILTER BREAK2 FILTER
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1             0x00000000U   /*!< No filter, BRK acts asynchronousl
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N2          0x00100000U   /*!< fSAMPLING=fCK_INT, N=2 */
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N4          0x00200000U   /*!< fSAMPLING=fCK_INT, N=4 */
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N8          0x00300000U   /*!< fSAMPLING=fCK_INT, N=8 */
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N6          0x00400000U   /*!< fSAMPLING=fDTS/2, N=6 */
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N8          0x00500000U   /*!< fSAMPLING=fDTS/2, N=8 */
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N6          0x00600000U   /*!< fSAMPLING=fDTS/4, N=6 */
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N8          0x00700000U   /*!< fSAMPLING=fDTS/4, N=8 */
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N6          0x00800000U   /*!< fSAMPLING=fDTS/8, N=6 */
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N8          0x00900000U   /*!< fSAMPLING=fDTS/8, N=8 */
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N5         0x00A00000U   /*!< fSAMPLING=fDTS/16, N=5 */
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N6         0x00B00000U   /*!< fSAMPLING=fDTS/16, N=6 */
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N8         0x00C00000U   /*!< fSAMPLING=fDTS/16, N=8 */
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N5         0x00D00000U   /*!< fSAMPLING=fDTS/32, N=5 */
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N6         0x00E00000U   /*!< fSAMPLING=fDTS/32, N=6 */
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N8         0x00F00000U   /*!< fSAMPLING=fDTS/32, N=8 */
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_INPUT BREAK INPUT
ARM GAS  /tmp/ccA1EUYa.s 			page 219


1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN                0x00000000U  /*!< TIMx_BKIN input */
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN2               0x00000004U  /*!< TIMx_BKIN2 input */
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_SOURCE BKIN SOURCE
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKIN                TIM1_AF1_BKINE      /*!< BKIN input from AF controll
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP1             TIM1_AF1_BKCMP1E    /*!< internal signal: COMP1 outp
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP2             TIM1_AF1_BKCMP2E    /*!< internal signal: COMP2 outp
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP3             TIM1_AF1_BKCMP3E    /*!< internal signal: COMP3 outp
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP4             TIM1_AF1_BKCMP4E    /*!< internal signal: COMP4 outp
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP5             TIM1_AF1_BKCMP5E    /*!< internal signal: COMP5 outp
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP6             TIM1_AF1_BKCMP6E    /*!< internal signal: COMP6 outp
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP7             TIM1_AF1_BKCMP7E    /*!< internal signal: COMP7 outp
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_POLARITY BKIN POLARITY
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_LOW               TIM1_AF1_BKINP           /*!< BRK BKIN input is acti
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_HIGH              0x00000000U              /*!< BRK BKIN input is acti
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_AFMODE BREAK AF MODE
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_AFMODE_INPUT              0x00000000U              /*!< Break input BRK in inp
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_AFMODE_BIDIRECTIONAL      TIM_BDTR_BKBID           /*!< Break input BRK in bid
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_AFMODE BREAK2 AF MODE
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_AFMODE_INPUT             0x00000000U             /*!< Break2 input BRK2 in in
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_AFMODE_BIDIRECTIONAL     TIM_BDTR_BK2BID         /*!< Break2 input BRK2 in bi
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
ARM GAS  /tmp/ccA1EUYa.s 			page 220


1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @cond 0
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ReArmBRK(_PARAM_)
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ReArmBRK2(_PARAM_)
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @endcond
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR5          (TIM_DCR_DBA_4 | TIM_DCR_DBA_1)                     
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR6          (TIM_DCR_DBA_4 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR3         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DTR2          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ECR           (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_TISEL         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF1           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3)                     
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF2           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_0)     
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_1)     
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
ARM GAS  /tmp/ccA1EUYa.s 			page 221


1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_19TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_1)                     
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_20TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_21TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2)                     
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_22TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_23TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_24TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_25TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_3)                     
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_26TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_3 | TIM_DCR_DBL_0)     
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_TI1_RMP  TIM1 Timer Input Ch1 Remap
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM1 inpu
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM1 inpu
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM1 inpu
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM1 inpu
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM1 inpu
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI1_RMP  TIM2 Timer Input Ch1 Remap
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM2 inpu
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM2 inpu
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM2 inpu
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM2 inpu
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP5  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM2 inpu
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI2_RMP  TIM2 Timer Input Ch2 Remap
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM2 inpu
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM2 inpu
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM2 inpu
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM2 inpu
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM2 inpu
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 222


1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI3_RMP  TIM2 Timer Input Ch3 Remap
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI3_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI3_RMP_COMP4  TIM_TISEL_TI3SEL_0                                /*!< TIM2 inpu
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI4_RMP  TIM2 Timer Input Ch4 Remap
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP1  TIM_TISEL_TI4SEL_0                                /*!< TIM2 inpu
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP2  TIM_TISEL_TI4SEL_1                                /*!< TIM2 inpu
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI1_RMP  TIM3 Timer Input Ch1 Remap
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM3 inpu
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM3 inpu
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM3 inpu
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM3 inpu
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP5  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM3 inpu
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP6  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)         /*!< TIM3 inpu
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP7  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)  
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI2_RMP  TIM3 Timer Input Ch2 Remap
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM3 inpu
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM3 inpu
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM3 inpu
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM3 inpu
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP5  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM3 inpu
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1)         /*!< TIM3 inpu
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
ARM GAS  /tmp/ccA1EUYa.s 			page 223


1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP7  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)  
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI3_RMP  TIM3 Timer Input Ch3 Remap
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI3_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI3_RMP_COMP3  TIM_TISEL_TI3SEL_0                                /*!< TIM3 inpu
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI1_RMP  TIM4 Timer Input Ch1 Remap
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM4 inpu
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM4 inpu
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM4 inpu
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM4 inpu
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP5  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM4 inpu
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP6  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)         /*!< TIM4 inpu
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP7  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)  
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI2_RMP  TIM4 Timer Input Ch2 Remap
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM4 inpu
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM4 inpu
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM4 inpu
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM4 inpu
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP5  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM4 inpu
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1)         /*!< TIM4 inpu
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP7  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)  
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 224


1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI3_RMP  TIM4 Timer Input Ch3 Remap
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI3_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI3_RMP_COMP5  TIM_TISEL_TI3SEL_0                                /*!< TIM4 inpu
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI4_RMP  TIM4 Timer Input Ch4 Remap
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI4_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI4_RMP_COMP6  TIM_TISEL_TI4SEL_0                                /*!< TIM4 inpu
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI1_RMP  TIM5 Timer Input Ch1 Remap
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM5 inpu
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_LSI    TIM_TISEL_TI1SEL_0                                /*!< TIM5 inpu
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_LSE    TIM_TISEL_TI1SEL_1                                /*!< TIM5 inpu
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_RTC_WK (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM5 inpu
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_2                                /*!< TIM5 inpu
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP2  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM5 inpu
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)         /*!< TIM5 inpu
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP4  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)  
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP5  TIM_TISEL_TI1SEL_3                                /*!< TIM5 inpu
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP6  (TIM_TISEL_TI1SEL_3 | TIM_TISEL_TI1SEL_0)         /*!< TIM5 inpu
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP7  (TIM_TISEL_TI1SEL_3 | TIM_TISEL_TI1SEL_1)         /*!< TIM5 inpu
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI2_RMP  TIM5 Timer Input Ch2 Remap
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM5 inpu
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM5 inpu
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM5 inpu
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM5 inpu
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM5 inpu
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
ARM GAS  /tmp/ccA1EUYa.s 			page 225


1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP5  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM5 inpu
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1)         /*!< TIM5 inpu
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP7  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)  
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_TI1_RMP  TIM8 Timer Input Ch1 Remap
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM8 inpu
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM8 inpu
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM8 inpu
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM8 inpu
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM8 inpu
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI1_RMP  TIM15 Timer Input Ch1 Remap
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_GPIO  0x00000000U                                       /*!< TIM15 inp
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_LSE   TIM_TISEL_TI1SEL_0                                /*!< TIM15 inp
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP1 TIM_TISEL_TI1SEL_1                                /*!< TIM15 inp
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP2 (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM15 inp
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP5 TIM_TISEL_TI1SEL_2                                /*!< TIM15 inp
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP7 (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM15 inp
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI2_RMP  TIM15 Timer Input Ch2 Remap
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_GPIO  0x00000000U                                       /*!< TIM15 inp
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP2 TIM_TISEL_TI2SEL_0                                /*!< TIM15 inp
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP3 TIM_TISEL_TI2SEL_1                                /*!< TIM15 inp
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP6 (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM15 inp
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP7 TIM_TISEL_TI2SEL_2                                /*!< TIM15 inp
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 226


1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM16_TI1_RMP  TIM16 Timer Input Ch1 Remap
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_GPIO    0x00000000U                                     /*!< TIM16 inp
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_COMP6   TIM_TISEL_TI1SEL_0                              /*!< TIM16 inp
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_MCO     TIM_TISEL_TI1SEL_1                              /*!< TIM16 inp
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_HSE_32  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)       /*!< TIM16 inp
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_RTC_WK  TIM_TISEL_TI1SEL_2                              /*!< TIM16 inp
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSE     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)       /*!< TIM16 inp
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSI     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)       /*!< TIM16 inp
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM17_TI1_RMP  TIM17 Timer Input Ch1 Remap
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_GPIO    0x00000000U                                     /*!< TIM17 inp
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_COMP5   TIM_TISEL_TI1SEL_0                              /*!< TIM17 inp
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_MCO     TIM_TISEL_TI1SEL_1                              /*!< TIM17 inp
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_HSE_32  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)       /*!< TIM17 inp
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_RTC_WK  TIM_TISEL_TI1SEL_2                              /*!< TIM17 inp
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_LSE     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)       /*!< TIM17 inp
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_LSI     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)       /*!< TIM17 inp
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM20)
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM20_TI1_RMP  TIM20 Timer Input Ch1 Remap
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_GPIO  0x00000000U                                      /*!< TIM20 inpu
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP1 TIM_TISEL_TI1SEL_0                               /*!< TIM20 inpu
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP2 TIM_TISEL_TI1SEL_1                               /*!< TIM20 inpu
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP3 (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)        /*!< TIM20 inpu
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP4 TIM_TISEL_TI1SEL_2                               /*!< TIM20 inpu
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM20 */
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR         OCREF_CLEAR_SELECT_Msk                   /*!< OCREF_CLR_IN
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP1       0x00000000U                              /*!< OCREF clear 
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP2       TIM1_AF2_OCRSEL_0                        /*!< OCREF clear 
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP3       TIM1_AF2_OCRSEL_1                        /*!< OCREF clear 
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP4       (TIM1_AF2_OCRSEL_1 | TIM1_AF2_OCRSEL_0)  /*!< OCREF clear 
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP5       TIM1_AF2_OCRSEL_2                        /*!< OCREF clear 
ARM GAS  /tmp/ccA1EUYa.s 			page 227


1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP6       (TIM1_AF2_OCRSEL_2 | TIM1_AF2_OCRSEL_0)  /*!< OCREF clear 
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP7       (TIM1_AF2_OCRSEL_2 | TIM1_AF2_OCRSEL_1)  /*!< OCREF clear 
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_INDEX_DIR index direction selection
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_UP_DOWN     0x00000000U         /*!< Index resets the counter whatever the dir
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_UP          TIM_ECR_IDIR_0      /*!< Index resets the counter when up-counting
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_DOWN        TIM_ECR_IDIR_1      /*!< Index resets the counter when down-counti
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_INDEX_POSITION index positioning selection
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_DOWN_DOWN    0x00000000U                           /*!< Index resets 
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_DOWN_UP      TIM_ECR_IPOS_0                        /*!< Index resets 
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_UP_DOWN      TIM_ECR_IPOS_1                        /*!< Index resets 
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_UP_UP        (TIM_ECR_IPOS_1 | TIM_ECR_IPOS_0)     /*!< Index resets 
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_DOWN         0x00000000U                           /*!< Index resets 
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_UP           TIM_ECR_IPOS_0                        /*!< Index resets 
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_FIRST_INDEX first index selection
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_ALL           0x00000000U                           /*!< Index is always activ
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_FIRST_ONLY    TIM_ECR_FIDX                          /*!< The first Index only 
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_PWPRSC Pulse on compare pulse width prescaler
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X1     0x00000000U                                              /*!< Pulse on
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X2     TIM_ECR_PWPRSC_0                                         /*!< Pulse on
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X4     TIM_ECR_PWPRSC_1                                         /*!< Pulse on
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X8     (TIM_ECR_PWPRSC_1 | TIM_ECR_PWPRSC_0)                    /*!< Pulse on
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X16    TIM_ECR_PWPRSC_2                                         /*!< Pulse on
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X32    (TIM_ECR_PWPRSC_2 | TIM_ECR_PWPRSC_0)                    /*!< Pulse on
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X64    (TIM_ECR_PWPRSC_2 | TIM_ECR_PWPRSC_1)                    /*!< Pulse on
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X128   (TIM_ECR_PWPRSC_2 | TIM_ECR_PWPRSC_1 | TIM_ECR_PWPRSC_0) /*!< Pulse on
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 228


1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_HSE_32_REQUEST Clock HSE/32 request
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_HSE_32_NOT_REQUEST     0x00000000U            /*!< Clock HSE/32 not requested */
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_HSE_32_REQUEST         TIM_OR_HSE32EN         /*!< Clock HSE/32 requested for TIM16/
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @cond 0
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DFBK  LL_TIM_BKIN_SOURCE_DF1BK
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @endcond
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Write a value in TIM register.
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __REG__ Register to be written
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Read a value in TIM register.
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __REG__ Register to be read
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Register value
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the UIFCPY flag from the counter value.
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GETFLAG_UIFCPY (@ref LL_TIM_GetCounter ());
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  Relevant only if UIF flag remapping has been enabled  (UIF status bit is copied
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        to TIMx_CNT register bit 31)
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CNT__ Counter value
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval UIF status bit
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 229


1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_GETFLAG_UIFCPY(__CNT__)  \
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (READ_BIT((__CNT__), TIM_CNT_UIFCPY) >> TIM_CNT_UIFCPY_Pos)
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval DTG[0:7]
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(((uint64_t)((__DT__)*1000U) / TIM_CALC_DTS((__TIMCLK__), (__CKD__)))  & DT_DELAY_1) :
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(DT_RANGE_2 | ((uint8_t)((uint8_t)((((uint64_t)((__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                  (__CKD__))) >> 1U) - (uint8_t) 64) & DT_DELAY_2)) 
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(DT_RANGE_3 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                  (__CKD__))) >> 3U) - (uint8_t) 32) & DT_DELAY_3)) 
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(DT_RANGE_4 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                  (__CKD__))) >> 4U) - (uint8_t) 32) & DT_DELAY_4)) 
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     0U)
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)((((__TIMCLK__) + (__CNTCLK__)/2U)/(__CNTCLK__)) - 1U
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value, with dithering feature enabled, to achi
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         output signal frequency.
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
ARM GAS  /tmp/ccA1EUYa.s 			page 230


1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_ARR_DITHER(__TIMCLK__, __PSC__, __FREQ__) \
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? \
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    (uint32_t)((((uint64_t)(__TIMCLK__) * 16U/((__FREQ__) * ((__PSC__) + 1U))) - 16U)) : 0U)
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         active/inactive delay.
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value, with dithering feature enabled, to achieve 
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         output compare active/inactive delay.
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10);
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY_DITHER(__TIMCLK__, __PSC__, __DELAY__)  \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__) * 16U) \
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (when the timer operates in one pulse mode).
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value, with dithering feature enabled, to achi
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         pulse duration (when the timer operates in one pulse mode).
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE_DITHER(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY_DITHER((__TIMCLK__), (__PSC__), (__PULSE__)) \
ARM GAS  /tmp/ccA1EUYa.s 			page 231


1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY_DITHER((__TIMCLK__), (__PSC__), (__DELAY__))))
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable timer counter.
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable timer counter.
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1075              		.loc 3 2035 1
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079              		@ link register save eliminated.
 1080 0000 80B4     		push	{r7}
 1081              	.LCFI120:
 1082              		.cfi_def_cfa_offset 4
 1083              		.cfi_offset 7, -4
 1084 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccA1EUYa.s 			page 232


 1085              	.LCFI121:
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              	.LCFI122:
 1089              		.cfi_def_cfa_register 7
 1090 0006 7860     		str	r0, [r7, #4]
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 1091              		.loc 3 2036 3
 1092 0008 7B68     		ldr	r3, [r7, #4]
 1093 000a 1B68     		ldr	r3, [r3]
 1094 000c 23F00102 		bic	r2, r3, #1
 1095 0010 7B68     		ldr	r3, [r7, #4]
 1096 0012 1A60     		str	r2, [r3]
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1097              		.loc 3 2037 1
 1098 0014 00BF     		nop
 1099 0016 0C37     		adds	r7, r7, #12
 1100              	.LCFI123:
 1101              		.cfi_def_cfa_offset 4
 1102 0018 BD46     		mov	sp, r7
 1103              	.LCFI124:
 1104              		.cfi_def_cfa_register 13
 1105              		@ sp needed
 1106 001a 5DF8047B 		ldr	r7, [sp], #4
 1107              	.LCFI125:
 1108              		.cfi_restore 7
 1109              		.cfi_def_cfa_offset 0
 1110 001e 7047     		bx	lr
 1111              		.cfi_endproc
 1112              	.LFE591:
 1114              		.section	.text.LL_TIM_SetCounter,"ax",%progbits
 1115              		.align	1
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv4-sp-d16
 1121              	LL_TIM_SetCounter:
 1122              	.LFB607:
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(const TIM_TypeDef *TIMx)
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable update event generation.
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 233


2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update event generation.
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(const TIM_TypeDef *TIMx)
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set update event source
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        - Counter overflow/underflow
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        - Setting the UG bit
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        - Update generation through the slave mode controller
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual event update source
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(const TIM_TypeDef *TIMx)
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 234


2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(const TIM_TypeDef *TIMx)
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       by a timer instance.
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual counter mode.
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
ARM GAS  /tmp/ccA1EUYa.s 			page 235


2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       by a timer instance.
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(const TIM_TypeDef *TIMx)
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t counter_mode;
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CMS));
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   if (counter_mode == 0U)
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   {
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   }
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return counter_mode;
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(const TIM_TypeDef *TIMx)
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
ARM GAS  /tmp/ccA1EUYa.s 			page 236


2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (when supported) and the digital filters.
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         generators (when supported) and the digital filters.
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(const TIM_TypeDef *TIMx)
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the counter value.
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the Counter value interpretation
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1123              		.loc 3 2278 1
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccA1EUYa.s 			page 237


 1129              	.LCFI126:
 1130              		.cfi_def_cfa_offset 4
 1131              		.cfi_offset 7, -4
 1132 0002 83B0     		sub	sp, sp, #12
 1133              	.LCFI127:
 1134              		.cfi_def_cfa_offset 16
 1135 0004 00AF     		add	r7, sp, #0
 1136              	.LCFI128:
 1137              		.cfi_def_cfa_register 7
 1138 0006 7860     		str	r0, [r7, #4]
 1139 0008 3960     		str	r1, [r7]
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
 1140              		.loc 3 2279 3
 1141 000a 7B68     		ldr	r3, [r7, #4]
 1142 000c 3A68     		ldr	r2, [r7]
 1143 000e 5A62     		str	r2, [r3, #36]
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1144              		.loc 3 2280 1
 1145 0010 00BF     		nop
 1146 0012 0C37     		adds	r7, r7, #12
 1147              	.LCFI129:
 1148              		.cfi_def_cfa_offset 4
 1149 0014 BD46     		mov	sp, r7
 1150              	.LCFI130:
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 0016 5DF8047B 		ldr	r7, [sp], #4
 1154              	.LCFI131:
 1155              		.cfi_restore 7
 1156              		.cfi_def_cfa_offset 0
 1157 001a 7047     		bx	lr
 1158              		.cfi_endproc
 1159              	.LFE607:
 1161              		.section	.text.LL_TIM_SetRepetitionCounter,"ax",%progbits
 1162              		.align	1
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv4-sp-d16
 1168              	LL_TIM_SetRepetitionCounter:
 1169              	.LFB614:
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the counter value.
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the Counter value interpretation
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(const TIM_TypeDef *TIMx)
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 238


2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current direction of the counter
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(const TIM_TypeDef *TIMx)
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the prescaler value.
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the prescaler value.
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(const TIM_TypeDef *TIMx)
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the auto-reload value.
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       In case dithering is activated,macro __LL_TIM_CALC_ARR_DITHER can be used instead, to cal
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       parameter.
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 239


2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the auto-reload value.
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Auto-reload value
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(const TIM_TypeDef *TIMx)
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the repetition counter value.
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note For advanced timer instances RepetitionCounter can be up to 65535.
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255 or 65535 for advanced timer.
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1170              		.loc 3 2379 1
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 8
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175 0000 80B4     		push	{r7}
 1176              	.LCFI132:
 1177              		.cfi_def_cfa_offset 4
 1178              		.cfi_offset 7, -4
 1179 0002 83B0     		sub	sp, sp, #12
 1180              	.LCFI133:
 1181              		.cfi_def_cfa_offset 16
 1182 0004 00AF     		add	r7, sp, #0
 1183              	.LCFI134:
 1184              		.cfi_def_cfa_register 7
 1185 0006 7860     		str	r0, [r7, #4]
 1186 0008 3960     		str	r1, [r7]
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
 1187              		.loc 3 2380 3
 1188 000a 7B68     		ldr	r3, [r7, #4]
 1189 000c 3A68     		ldr	r2, [r7]
 1190 000e 1A63     		str	r2, [r3, #48]
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1191              		.loc 3 2381 1
 1192 0010 00BF     		nop
 1193 0012 0C37     		adds	r7, r7, #12
 1194              	.LCFI135:
 1195              		.cfi_def_cfa_offset 4
 1196 0014 BD46     		mov	sp, r7
 1197              	.LCFI136:
 1198              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccA1EUYa.s 			page 240


 1199              		@ sp needed
 1200 0016 5DF8047B 		ldr	r7, [sp], #4
 1201              	.LCFI137:
 1202              		.cfi_restore 7
 1203              		.cfi_def_cfa_offset 0
 1204 001a 7047     		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE614:
 1208              		.section	.text.LL_TIM_CC_EnableChannel,"ax",%progbits
 1209              		.align	1
 1210              		.syntax unified
 1211              		.thumb
 1212              		.thumb_func
 1213              		.fpu fpv4-sp-d16
 1215              	LL_TIM_CC_EnableChannel:
 1216              	.LFB629:
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the repetition counter value.
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Repetition counter value
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(const TIM_TypeDef *TIMx)
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Force a continuous copy of the update interrupt flag (UIF) into the timer counter regis
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This allows both the counter value and a potential roll-over condition signalled by the U
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       in an atomic way.
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_EnableUIFRemap
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUIFRemap(TIM_TypeDef *TIMx)
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update interrupt flag (UIF) remapping.
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_DisableUIFRemap
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUIFRemap(TIM_TypeDef *TIMx)
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) copy is set.
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Counter Counter value
ARM GAS  /tmp/ccA1EUYa.s 			page 241


2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveUIFCPY(const uint32_t Counter)
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (((Counter & TIM_CNT_UIFCPY) == (TIM_CNT_UIFCPY)) ? 1UL : 0UL);
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable dithering.
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DITHERING_INSTANCE(TIMx) can be used to check whether or not
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides dithering.
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DITHEN          LL_TIM_EnableDithering
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDithering(TIM_TypeDef *TIMx)
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_DITHEN);
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable dithering.
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DITHERING_INSTANCE(TIMx) can be used to check whether or not
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides dithering.
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DITHEN          LL_TIM_DisableDithering
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDithering(TIM_TypeDef *TIMx)
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_DITHEN);
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether dithering is activated.
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DITHERING_INSTANCE(TIMx) can be used to check whether or not
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides dithering.
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DITHEN          LL_TIM_IsEnabledDithering
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDithering(const TIM_TypeDef *TIMx)
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_DITHEN) == (TIM_CR1_DITHEN)) ? 1UL : 0UL);
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
ARM GAS  /tmp/ccA1EUYa.s 			page 242


2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare control bits (CCxE, CCxNE and OCxM) preload is en
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_IsEnabledPreload
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledPreload(const TIM_TypeDef *TIMx)
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_CCPC) == (TIM_CR2_CCPC)) ? 1UL : 0UL);
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 243


2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(const TIM_TypeDef *TIMx)
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel\n
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NE         LL_TIM_CC_EnableChannel\n
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_EnableChannel\n
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_EnableChannel
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
ARM GAS  /tmp/ccA1EUYa.s 			page 244


2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1217              		.loc 3 2605 1
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 8
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221              		@ link register save eliminated.
 1222 0000 80B4     		push	{r7}
 1223              	.LCFI138:
 1224              		.cfi_def_cfa_offset 4
 1225              		.cfi_offset 7, -4
 1226 0002 83B0     		sub	sp, sp, #12
 1227              	.LCFI139:
 1228              		.cfi_def_cfa_offset 16
 1229 0004 00AF     		add	r7, sp, #0
 1230              	.LCFI140:
 1231              		.cfi_def_cfa_register 7
 1232 0006 7860     		str	r0, [r7, #4]
 1233 0008 3960     		str	r1, [r7]
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
 1234              		.loc 3 2606 3
 1235 000a 7B68     		ldr	r3, [r7, #4]
 1236 000c 1A6A     		ldr	r2, [r3, #32]
 1237 000e 3B68     		ldr	r3, [r7]
 1238 0010 1A43     		orrs	r2, r2, r3
 1239 0012 7B68     		ldr	r3, [r7, #4]
 1240 0014 1A62     		str	r2, [r3, #32]
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1241              		.loc 3 2607 1
 1242 0016 00BF     		nop
 1243 0018 0C37     		adds	r7, r7, #12
 1244              	.LCFI141:
 1245              		.cfi_def_cfa_offset 4
 1246 001a BD46     		mov	sp, r7
 1247              	.LCFI142:
 1248              		.cfi_def_cfa_register 13
 1249              		@ sp needed
 1250 001c 5DF8047B 		ldr	r7, [sp], #4
 1251              	.LCFI143:
 1252              		.cfi_restore 7
 1253              		.cfi_def_cfa_offset 0
 1254 0020 7047     		bx	lr
 1255              		.cfi_endproc
 1256              	.LFE629:
 1258              		.section	.text.LL_TIM_CC_DisableChannel,"ax",%progbits
 1259              		.align	1
 1260              		.syntax unified
ARM GAS  /tmp/ccA1EUYa.s 			page 245


 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	LL_TIM_CC_DisableChannel:
 1266              	.LFB630:
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel\n
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NE         LL_TIM_CC_DisableChannel\n
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_DisableChannel\n
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_DisableChannel
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1267              		.loc 3 2636 1
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 8
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 1272 0000 80B4     		push	{r7}
 1273              	.LCFI144:
 1274              		.cfi_def_cfa_offset 4
 1275              		.cfi_offset 7, -4
 1276 0002 83B0     		sub	sp, sp, #12
 1277              	.LCFI145:
 1278              		.cfi_def_cfa_offset 16
 1279 0004 00AF     		add	r7, sp, #0
 1280              	.LCFI146:
 1281              		.cfi_def_cfa_register 7
 1282 0006 7860     		str	r0, [r7, #4]
 1283 0008 3960     		str	r1, [r7]
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
 1284              		.loc 3 2637 3
 1285 000a 7B68     		ldr	r3, [r7, #4]
 1286 000c 1A6A     		ldr	r2, [r3, #32]
 1287 000e 3B68     		ldr	r3, [r7]
 1288 0010 DB43     		mvns	r3, r3
ARM GAS  /tmp/ccA1EUYa.s 			page 246


 1289 0012 1A40     		ands	r2, r2, r3
 1290 0014 7B68     		ldr	r3, [r7, #4]
 1291 0016 1A62     		str	r2, [r3, #32]
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1292              		.loc 3 2638 1
 1293 0018 00BF     		nop
 1294 001a 0C37     		adds	r7, r7, #12
 1295              	.LCFI147:
 1296              		.cfi_def_cfa_offset 4
 1297 001c BD46     		mov	sp, r7
 1298              	.LCFI148:
 1299              		.cfi_def_cfa_register 13
 1300              		@ sp needed
 1301 001e 5DF8047B 		ldr	r7, [sp], #4
 1302              	.LCFI149:
 1303              		.cfi_restore 7
 1304              		.cfi_def_cfa_offset 0
 1305 0022 7047     		bx	lr
 1306              		.cfi_endproc
 1307              	.LFE630:
 1309              		.section	.text.LL_TIM_OC_SetMode,"ax",%progbits
 1310              		.align	1
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	LL_TIM_OC_SetMode:
 1317              	.LFB633:
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel\n
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NE         LL_TIM_CC_IsEnabledChannel\n
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_IsEnabledChannel\n
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_IsEnabledChannel
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(const TIM_TypeDef *TIMx, uint32_t Channels)
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 247


2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure an output channel.
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        CC5S          LL_TIM_OC_ConfigOutput\n
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        CC6S          LL_TIM_OC_ConfigOutput\n
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_ConfigOutput\n
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_ConfigOutput\n
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput\n
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS5          LL_TIM_OC_ConfigOutput\n
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS6          LL_TIM_OC_ConfigOutput
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
ARM GAS  /tmp/ccA1EUYa.s 			page 248


2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode\n
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_SetMode\n
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_SetMode
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASYMMETRIC_PWM1
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASYMMETRIC_PWM2
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PULSE_ON_COMPARE   (for channel 3 or channel 4 only)
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_DIRECTION_OUTPUT   (for channel 3 or channel 4 only)
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1318              		.loc 3 2759 1
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 24
 1321              		@ frame_needed = 1, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323 0000 80B4     		push	{r7}
 1324              	.LCFI150:
 1325              		.cfi_def_cfa_offset 4
 1326              		.cfi_offset 7, -4
 1327 0002 87B0     		sub	sp, sp, #28
 1328              	.LCFI151:
 1329              		.cfi_def_cfa_offset 32
 1330 0004 00AF     		add	r7, sp, #0
 1331              	.LCFI152:
 1332              		.cfi_def_cfa_register 7
 1333 0006 F860     		str	r0, [r7, #12]
 1334 0008 B960     		str	r1, [r7, #8]
 1335 000a 7A60     		str	r2, [r7, #4]
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
 1336              		.loc 3 2760 11
 1337 000c BB68     		ldr	r3, [r7, #8]
 1338 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccA1EUYa.s 			page 249


 1339 0010 2ED0     		beq	.L41
 1340              		.loc 3 2760 11 is_stmt 0 discriminator 1
 1341 0012 BB68     		ldr	r3, [r7, #8]
 1342 0014 042B     		cmp	r3, #4
 1343 0016 29D0     		beq	.L42
 1344              		.loc 3 2760 11 discriminator 3
 1345 0018 BB68     		ldr	r3, [r7, #8]
 1346 001a 102B     		cmp	r3, #16
 1347 001c 24D0     		beq	.L43
 1348              		.loc 3 2760 11 discriminator 5
 1349 001e BB68     		ldr	r3, [r7, #8]
 1350 0020 402B     		cmp	r3, #64
 1351 0022 1FD0     		beq	.L44
 1352              		.loc 3 2760 11 discriminator 7
 1353 0024 BB68     		ldr	r3, [r7, #8]
 1354 0026 B3F5807F 		cmp	r3, #256
 1355 002a 19D0     		beq	.L45
 1356              		.loc 3 2760 11 discriminator 9
 1357 002c BB68     		ldr	r3, [r7, #8]
 1358 002e B3F5806F 		cmp	r3, #1024
 1359 0032 13D0     		beq	.L46
 1360              		.loc 3 2760 11 discriminator 11
 1361 0034 BB68     		ldr	r3, [r7, #8]
 1362 0036 B3F5805F 		cmp	r3, #4096
 1363 003a 0DD0     		beq	.L47
 1364              		.loc 3 2760 11 discriminator 13
 1365 003c BB68     		ldr	r3, [r7, #8]
 1366 003e B3F5804F 		cmp	r3, #16384
 1367 0042 07D0     		beq	.L48
 1368              		.loc 3 2760 11 discriminator 15
 1369 0044 BB68     		ldr	r3, [r7, #8]
 1370 0046 B3F5803F 		cmp	r3, #65536
 1371 004a 01D1     		bne	.L49
 1372              		.loc 3 2760 11 discriminator 17
 1373 004c 0823     		movs	r3, #8
 1374 004e 10E0     		b	.L58
 1375              	.L49:
 1376              		.loc 3 2760 11 discriminator 18
 1377 0050 0923     		movs	r3, #9
 1378 0052 0EE0     		b	.L58
 1379              	.L48:
 1380              		.loc 3 2760 11 discriminator 16
 1381 0054 0723     		movs	r3, #7
 1382 0056 0CE0     		b	.L58
 1383              	.L47:
 1384              		.loc 3 2760 11 discriminator 14
 1385 0058 0623     		movs	r3, #6
 1386 005a 0AE0     		b	.L58
 1387              	.L46:
 1388              		.loc 3 2760 11 discriminator 12
 1389 005c 0523     		movs	r3, #5
 1390 005e 08E0     		b	.L58
 1391              	.L45:
 1392              		.loc 3 2760 11 discriminator 10
 1393 0060 0423     		movs	r3, #4
 1394 0062 06E0     		b	.L58
 1395              	.L44:
ARM GAS  /tmp/ccA1EUYa.s 			page 250


 1396              		.loc 3 2760 11 discriminator 8
 1397 0064 0323     		movs	r3, #3
 1398 0066 04E0     		b	.L58
 1399              	.L43:
 1400              		.loc 3 2760 11 discriminator 6
 1401 0068 0223     		movs	r3, #2
 1402 006a 02E0     		b	.L58
 1403              	.L42:
 1404              		.loc 3 2760 11 discriminator 4
 1405 006c 0123     		movs	r3, #1
 1406 006e 00E0     		b	.L58
 1407              	.L41:
 1408              		.loc 3 2760 11 discriminator 2
 1409 0070 0023     		movs	r3, #0
 1410              	.L58:
 1411              		.loc 3 2760 11 discriminator 36
 1412 0072 FB75     		strb	r3, [r7, #23]
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 1413              		.loc 3 2761 65 is_stmt 1 discriminator 36
 1414 0074 FB68     		ldr	r3, [r7, #12]
 1415 0076 1833     		adds	r3, r3, #24
 1416              		.loc 3 2761 54 discriminator 36
 1417 0078 1946     		mov	r1, r3
 1418              		.loc 3 2761 97 discriminator 36
 1419 007a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1420 007c 0E4A     		ldr	r2, .L59
 1421 007e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1422              		.loc 3 2761 43 discriminator 36
 1423 0080 0B44     		add	r3, r3, r1
 1424              		.loc 3 2761 18 discriminator 36
 1425 0082 3B61     		str	r3, [r7, #16]
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]), Mode << SHIFT
 1426              		.loc 3 2762 3 discriminator 36
 1427 0084 3B69     		ldr	r3, [r7, #16]
 1428 0086 1A68     		ldr	r2, [r3]
 1429 0088 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1430 008a 0C49     		ldr	r1, .L59+4
 1431 008c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1432 008e 1946     		mov	r1, r3
 1433 0090 0B4B     		ldr	r3, .L59+8
 1434 0092 8B40     		lsls	r3, r3, r1
 1435 0094 DB43     		mvns	r3, r3
 1436 0096 1A40     		ands	r2, r2, r3
 1437 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1438 009a 0849     		ldr	r1, .L59+4
 1439 009c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1440 009e 1946     		mov	r1, r3
 1441 00a0 7B68     		ldr	r3, [r7, #4]
 1442 00a2 8B40     		lsls	r3, r3, r1
 1443 00a4 1A43     		orrs	r2, r2, r3
 1444 00a6 3B69     		ldr	r3, [r7, #16]
 1445 00a8 1A60     		str	r2, [r3]
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1446              		.loc 3 2763 1 discriminator 36
 1447 00aa 00BF     		nop
 1448 00ac 1C37     		adds	r7, r7, #28
 1449              	.LCFI153:
ARM GAS  /tmp/ccA1EUYa.s 			page 251


 1450              		.cfi_def_cfa_offset 4
 1451 00ae BD46     		mov	sp, r7
 1452              	.LCFI154:
 1453              		.cfi_def_cfa_register 13
 1454              		@ sp needed
 1455 00b0 5DF8047B 		ldr	r7, [sp], #4
 1456              	.LCFI155:
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 00b4 7047     		bx	lr
 1460              	.L60:
 1461 00b6 00BF     		.align	2
 1462              	.L59:
 1463 00b8 00000000 		.word	OFFSET_TAB_CCMRx
 1464 00bc 00000000 		.word	SHIFT_TAB_OCxx
 1465 00c0 73000100 		.word	65651
 1466              		.cfi_endproc
 1467              	.LFE633:
 1469              		.section	.text.LL_TIM_OC_EnablePreload,"ax",%progbits
 1470              		.align	1
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu fpv4-sp-d16
 1476              	LL_TIM_OC_EnablePreload:
 1477              	.LFB642:
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode\n
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_GetMode\n
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_GetMode
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASYMMETRIC_PWM1
ARM GAS  /tmp/ccA1EUYa.s 			page 252


2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASYMMETRIC_PWM2
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PULSE_ON_COMPARE   (for channel 3 or channel 4 only)
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_DIRECTION_OUTPUT   (for channel 3 or channel 4 only)
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(const TIM_TypeDef *TIMx, uint32_t Channel)
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIFT
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity\n
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_OC_SetPolarity\n
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_SetPolarity\n
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_SetPolarity
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity\n
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_OC_GetPolarity\n
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_GetPolarity\n
ARM GAS  /tmp/ccA1EUYa.s 			page 253


2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_GetPolarity
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(const TIM_TypeDef *TIMx, uint32_t Channel)
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function is significant only for the timer instances
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a break input.
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState\n
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4N         LL_TIM_OC_SetIdleState\n
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_SetIdleState\n
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_SetIdleState
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
ARM GAS  /tmp/ccA1EUYa.s 			page 254


2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState\n
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4N         LL_TIM_OC_GetIdleState\n
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_GetIdleState\n
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_GetIdleState
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(const TIM_TypeDef *TIMx, uint32_t Channel)
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast\n
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_EnableFast\n
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_EnableFast
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 255


2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast\n
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_DisableFast\n
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_DisableFast
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_IsEnabledFast\n
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_IsEnabledFast
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(const TIM_TypeDef *TIMx, uint32_t Channel)
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
ARM GAS  /tmp/ccA1EUYa.s 			page 256


3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload\n
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_EnablePreload\n
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_EnablePreload
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1478              		.loc 3 3046 1
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 16
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 1483 0000 80B4     		push	{r7}
 1484              	.LCFI156:
 1485              		.cfi_def_cfa_offset 4
 1486              		.cfi_offset 7, -4
 1487 0002 85B0     		sub	sp, sp, #20
 1488              	.LCFI157:
 1489              		.cfi_def_cfa_offset 24
 1490 0004 00AF     		add	r7, sp, #0
 1491              	.LCFI158:
 1492              		.cfi_def_cfa_register 7
 1493 0006 7860     		str	r0, [r7, #4]
 1494 0008 3960     		str	r1, [r7]
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
 1495              		.loc 3 3047 11
 1496 000a 3B68     		ldr	r3, [r7]
 1497 000c 012B     		cmp	r3, #1
 1498 000e 2ED0     		beq	.L62
 1499              		.loc 3 3047 11 is_stmt 0 discriminator 1
 1500 0010 3B68     		ldr	r3, [r7]
 1501 0012 042B     		cmp	r3, #4
 1502 0014 29D0     		beq	.L63
 1503              		.loc 3 3047 11 discriminator 3
 1504 0016 3B68     		ldr	r3, [r7]
 1505 0018 102B     		cmp	r3, #16
 1506 001a 24D0     		beq	.L64
 1507              		.loc 3 3047 11 discriminator 5
 1508 001c 3B68     		ldr	r3, [r7]
 1509 001e 402B     		cmp	r3, #64
ARM GAS  /tmp/ccA1EUYa.s 			page 257


 1510 0020 1FD0     		beq	.L65
 1511              		.loc 3 3047 11 discriminator 7
 1512 0022 3B68     		ldr	r3, [r7]
 1513 0024 B3F5807F 		cmp	r3, #256
 1514 0028 19D0     		beq	.L66
 1515              		.loc 3 3047 11 discriminator 9
 1516 002a 3B68     		ldr	r3, [r7]
 1517 002c B3F5806F 		cmp	r3, #1024
 1518 0030 13D0     		beq	.L67
 1519              		.loc 3 3047 11 discriminator 11
 1520 0032 3B68     		ldr	r3, [r7]
 1521 0034 B3F5805F 		cmp	r3, #4096
 1522 0038 0DD0     		beq	.L68
 1523              		.loc 3 3047 11 discriminator 13
 1524 003a 3B68     		ldr	r3, [r7]
 1525 003c B3F5804F 		cmp	r3, #16384
 1526 0040 07D0     		beq	.L69
 1527              		.loc 3 3047 11 discriminator 15
 1528 0042 3B68     		ldr	r3, [r7]
 1529 0044 B3F5803F 		cmp	r3, #65536
 1530 0048 01D1     		bne	.L70
 1531              		.loc 3 3047 11 discriminator 17
 1532 004a 0823     		movs	r3, #8
 1533 004c 10E0     		b	.L79
 1534              	.L70:
 1535              		.loc 3 3047 11 discriminator 18
 1536 004e 0923     		movs	r3, #9
 1537 0050 0EE0     		b	.L79
 1538              	.L69:
 1539              		.loc 3 3047 11 discriminator 16
 1540 0052 0723     		movs	r3, #7
 1541 0054 0CE0     		b	.L79
 1542              	.L68:
 1543              		.loc 3 3047 11 discriminator 14
 1544 0056 0623     		movs	r3, #6
 1545 0058 0AE0     		b	.L79
 1546              	.L67:
 1547              		.loc 3 3047 11 discriminator 12
 1548 005a 0523     		movs	r3, #5
 1549 005c 08E0     		b	.L79
 1550              	.L66:
 1551              		.loc 3 3047 11 discriminator 10
 1552 005e 0423     		movs	r3, #4
 1553 0060 06E0     		b	.L79
 1554              	.L65:
 1555              		.loc 3 3047 11 discriminator 8
 1556 0062 0323     		movs	r3, #3
 1557 0064 04E0     		b	.L79
 1558              	.L64:
 1559              		.loc 3 3047 11 discriminator 6
 1560 0066 0223     		movs	r3, #2
 1561 0068 02E0     		b	.L79
 1562              	.L63:
 1563              		.loc 3 3047 11 discriminator 4
 1564 006a 0123     		movs	r3, #1
 1565 006c 00E0     		b	.L79
 1566              	.L62:
ARM GAS  /tmp/ccA1EUYa.s 			page 258


 1567              		.loc 3 3047 11 discriminator 2
 1568 006e 0023     		movs	r3, #0
 1569              	.L79:
 1570              		.loc 3 3047 11 discriminator 36
 1571 0070 FB73     		strb	r3, [r7, #15]
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 1572              		.loc 3 3048 65 is_stmt 1 discriminator 36
 1573 0072 7B68     		ldr	r3, [r7, #4]
 1574 0074 1833     		adds	r3, r3, #24
 1575              		.loc 3 3048 54 discriminator 36
 1576 0076 1946     		mov	r1, r3
 1577              		.loc 3 3048 97 discriminator 36
 1578 0078 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1579 007a 0A4A     		ldr	r2, .L80
 1580 007c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1581              		.loc 3 3048 43 discriminator 36
 1582 007e 0B44     		add	r3, r3, r1
 1583              		.loc 3 3048 18 discriminator 36
 1584 0080 BB60     		str	r3, [r7, #8]
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 1585              		.loc 3 3049 3 discriminator 36
 1586 0082 BB68     		ldr	r3, [r7, #8]
 1587 0084 1A68     		ldr	r2, [r3]
 1588 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1589 0088 0749     		ldr	r1, .L80+4
 1590 008a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1591 008c 1946     		mov	r1, r3
 1592 008e 0823     		movs	r3, #8
 1593 0090 8B40     		lsls	r3, r3, r1
 1594 0092 1A43     		orrs	r2, r2, r3
 1595 0094 BB68     		ldr	r3, [r7, #8]
 1596 0096 1A60     		str	r2, [r3]
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1597              		.loc 3 3050 1 discriminator 36
 1598 0098 00BF     		nop
 1599 009a 1437     		adds	r7, r7, #20
 1600              	.LCFI159:
 1601              		.cfi_def_cfa_offset 4
 1602 009c BD46     		mov	sp, r7
 1603              	.LCFI160:
 1604              		.cfi_def_cfa_register 13
 1605              		@ sp needed
 1606 009e 5DF8047B 		ldr	r7, [sp], #4
 1607              	.LCFI161:
 1608              		.cfi_restore 7
 1609              		.cfi_def_cfa_offset 0
 1610 00a2 7047     		bx	lr
 1611              	.L81:
 1612              		.align	2
 1613              	.L80:
 1614 00a4 00000000 		.word	OFFSET_TAB_CCMRx
 1615 00a8 00000000 		.word	SHIFT_TAB_OCxx
 1616              		.cfi_endproc
 1617              	.LFE642:
 1619              		.section	.text.LL_TIM_OC_SetCompareCH1,"ax",%progbits
 1620              		.align	1
 1621              		.syntax unified
ARM GAS  /tmp/ccA1EUYa.s 			page 259


 1622              		.thumb
 1623              		.thumb_func
 1624              		.fpu fpv4-sp-d16
 1626              	LL_TIM_OC_SetCompareCH1:
 1627              	.LFB649:
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload\n
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_DisablePreload\n
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_DisablePreload
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_IsEnabledPreload\n
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_IsEnabledPreload
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(const TIM_TypeDef *TIMx, uint32_t Channel)
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 260


3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear\n
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_EnableClear\n
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_EnableClear
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear\n
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_DisableClear\n
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_DisableClear
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
ARM GAS  /tmp/ccA1EUYa.s 			page 261


3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_IsEnabledClear\n
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_IsEnabledClear
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(const TIM_TypeDef *TIMx, uint32_t Channel)
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         the Ocx and OCxN signals).
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 262


3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1628              		.loc 3 3218 1
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 8
 1631              		@ frame_needed = 1, uses_anonymous_args = 0
 1632              		@ link register save eliminated.
 1633 0000 80B4     		push	{r7}
 1634              	.LCFI162:
 1635              		.cfi_def_cfa_offset 4
 1636              		.cfi_offset 7, -4
 1637 0002 83B0     		sub	sp, sp, #12
 1638              	.LCFI163:
 1639              		.cfi_def_cfa_offset 16
 1640 0004 00AF     		add	r7, sp, #0
 1641              	.LCFI164:
 1642              		.cfi_def_cfa_register 7
 1643 0006 7860     		str	r0, [r7, #4]
 1644 0008 3960     		str	r1, [r7]
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
 1645              		.loc 3 3219 3
 1646 000a 7B68     		ldr	r3, [r7, #4]
 1647 000c 3A68     		ldr	r2, [r7]
 1648 000e 5A63     		str	r2, [r3, #52]
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1649              		.loc 3 3220 1
 1650 0010 00BF     		nop
 1651 0012 0C37     		adds	r7, r7, #12
 1652              	.LCFI165:
 1653              		.cfi_def_cfa_offset 4
 1654 0014 BD46     		mov	sp, r7
 1655              	.LCFI166:
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 0016 5DF8047B 		ldr	r7, [sp], #4
 1659              	.LCFI167:
 1660              		.cfi_restore 7
 1661              		.cfi_def_cfa_offset 0
 1662 001a 7047     		bx	lr
 1663              		.cfi_endproc
 1664              	.LFE649:
 1666              		.section	.text.LL_TIM_OC_SetCompareCH2,"ax",%progbits
 1667              		.align	1
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv4-sp-d16
 1673              	LL_TIM_OC_SetCompareCH2:
 1674              	.LFB650:
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
ARM GAS  /tmp/ccA1EUYa.s 			page 263


3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1675              		.loc 3 3236 1
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 8
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679              		@ link register save eliminated.
 1680 0000 80B4     		push	{r7}
 1681              	.LCFI168:
 1682              		.cfi_def_cfa_offset 4
 1683              		.cfi_offset 7, -4
 1684 0002 83B0     		sub	sp, sp, #12
 1685              	.LCFI169:
 1686              		.cfi_def_cfa_offset 16
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI170:
 1689              		.cfi_def_cfa_register 7
 1690 0006 7860     		str	r0, [r7, #4]
 1691 0008 3960     		str	r1, [r7]
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
 1692              		.loc 3 3237 3
 1693 000a 7B68     		ldr	r3, [r7, #4]
 1694 000c 3A68     		ldr	r2, [r7]
 1695 000e 9A63     		str	r2, [r3, #56]
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1696              		.loc 3 3238 1
 1697 0010 00BF     		nop
 1698 0012 0C37     		adds	r7, r7, #12
 1699              	.LCFI171:
 1700              		.cfi_def_cfa_offset 4
 1701 0014 BD46     		mov	sp, r7
 1702              	.LCFI172:
 1703              		.cfi_def_cfa_register 13
 1704              		@ sp needed
 1705 0016 5DF8047B 		ldr	r7, [sp], #4
 1706              	.LCFI173:
 1707              		.cfi_restore 7
 1708              		.cfi_def_cfa_offset 0
 1709 001a 7047     		bx	lr
 1710              		.cfi_endproc
 1711              	.LFE650:
 1713              		.section	.text.LL_TIM_OC_SetCompareCH3,"ax",%progbits
 1714              		.align	1
 1715              		.syntax unified
 1716              		.thumb
 1717              		.thumb_func
 1718              		.fpu fpv4-sp-d16
 1720              	LL_TIM_OC_SetCompareCH3:
 1721              	.LFB651:
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 264


3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel is supported by a timer instance.
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1722              		.loc 3 3254 1
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 8
 1725              		@ frame_needed = 1, uses_anonymous_args = 0
 1726              		@ link register save eliminated.
 1727 0000 80B4     		push	{r7}
 1728              	.LCFI174:
 1729              		.cfi_def_cfa_offset 4
 1730              		.cfi_offset 7, -4
 1731 0002 83B0     		sub	sp, sp, #12
 1732              	.LCFI175:
 1733              		.cfi_def_cfa_offset 16
 1734 0004 00AF     		add	r7, sp, #0
 1735              	.LCFI176:
 1736              		.cfi_def_cfa_register 7
 1737 0006 7860     		str	r0, [r7, #4]
 1738 0008 3960     		str	r1, [r7]
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
 1739              		.loc 3 3255 3
 1740 000a 7B68     		ldr	r3, [r7, #4]
 1741 000c 3A68     		ldr	r2, [r7]
 1742 000e DA63     		str	r2, [r3, #60]
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1743              		.loc 3 3256 1
 1744 0010 00BF     		nop
 1745 0012 0C37     		adds	r7, r7, #12
 1746              	.LCFI177:
 1747              		.cfi_def_cfa_offset 4
 1748 0014 BD46     		mov	sp, r7
 1749              	.LCFI178:
 1750              		.cfi_def_cfa_register 13
 1751              		@ sp needed
 1752 0016 5DF8047B 		ldr	r7, [sp], #4
 1753              	.LCFI179:
 1754              		.cfi_restore 7
 1755              		.cfi_def_cfa_offset 0
 1756 001a 7047     		bx	lr
 1757              		.cfi_endproc
 1758              	.LFE651:
 1760              		.section	.text.LL_TIM_OC_SetCompareCH4,"ax",%progbits
 1761              		.align	1
 1762              		.syntax unified
 1763              		.thumb
ARM GAS  /tmp/ccA1EUYa.s 			page 265


 1764              		.thumb_func
 1765              		.fpu fpv4-sp-d16
 1767              	LL_TIM_OC_SetCompareCH4:
 1768              	.LFB652:
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1769              		.loc 3 3272 1
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 8
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773              		@ link register save eliminated.
 1774 0000 80B4     		push	{r7}
 1775              	.LCFI180:
 1776              		.cfi_def_cfa_offset 4
 1777              		.cfi_offset 7, -4
 1778 0002 83B0     		sub	sp, sp, #12
 1779              	.LCFI181:
 1780              		.cfi_def_cfa_offset 16
 1781 0004 00AF     		add	r7, sp, #0
 1782              	.LCFI182:
 1783              		.cfi_def_cfa_register 7
 1784 0006 7860     		str	r0, [r7, #4]
 1785 0008 3960     		str	r1, [r7]
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
 1786              		.loc 3 3273 3
 1787 000a 7B68     		ldr	r3, [r7, #4]
 1788 000c 3A68     		ldr	r2, [r7]
 1789 000e 1A64     		str	r2, [r3, #64]
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1790              		.loc 3 3274 1
 1791 0010 00BF     		nop
 1792 0012 0C37     		adds	r7, r7, #12
 1793              	.LCFI183:
 1794              		.cfi_def_cfa_offset 4
 1795 0014 BD46     		mov	sp, r7
 1796              	.LCFI184:
 1797              		.cfi_def_cfa_register 13
 1798              		@ sp needed
 1799 0016 5DF8047B 		ldr	r7, [sp], #4
 1800              	.LCFI185:
 1801              		.cfi_restore 7
 1802              		.cfi_def_cfa_offset 0
 1803 001a 7047     		bx	lr
ARM GAS  /tmp/ccA1EUYa.s 			page 266


 1804              		.cfi_endproc
 1805              	.LFE652:
 1807              		.section	.text.LL_TIM_SetTriggerOutput,"ax",%progbits
 1808              		.align	1
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1812              		.fpu fpv4-sp-d16
 1814              	LL_TIM_SetTriggerOutput:
 1815              	.LFB687:
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 5 (TIMx_CCR5).
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_SetCompareCH5
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 6 (TIMx_CCR6).
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_SetCompareCH6
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR6, CompareValue);
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(const TIM_TypeDef *TIMx)
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 267


3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(const TIM_TypeDef *TIMx)
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(const TIM_TypeDef *TIMx)
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(const TIM_TypeDef *TIMx)
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR5) set for  output channel 5.
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
ARM GAS  /tmp/ccA1EUYa.s 			page 268


3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_GetCompareCH5
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH5(const TIM_TypeDef *TIMx)
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CCR5, TIM_CCR5_CCR5));
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR6) set for  output channel 6.
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_GetCompareCH6
3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH6(const TIM_TypeDef *TIMx)
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR6));
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Select on which reference signal the OC5REF is combined to.
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMBINED3PHASEPWM_INSTANCE(TIMx) can be used to check
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the combined 3-phase PWM mode.
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR5         GC5C3          LL_TIM_SetCH5CombinedChannels\n
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCR5         GC5C2          LL_TIM_SetCH5CombinedChannels\n
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCR5         GC5C1          LL_TIM_SetCH5CombinedChannels
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  GroupCH5 This parameter can be a combination of the following values:
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_NONE
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC1REFC
3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC2REFC
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC3REFC
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCH5CombinedChannels(TIM_TypeDef *TIMx, uint32_t GroupCH5)
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, (TIM_CCR5_GC5C3 | TIM_CCR5_GC5C2 | TIM_CCR5_GC5C1), GroupCH5);
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the pulse on compare pulse width prescaler.
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PWPRSC           LL_TIM_OC_SetPulseWidthPrescaler
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  PulseWidthPrescaler This parameter can be one of the following values:
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X1
3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X2
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X4
3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X8
3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X16
3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X32
ARM GAS  /tmp/ccA1EUYa.s 			page 269


3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X64
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X128
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPulseWidthPrescaler(TIM_TypeDef *TIMx, uint32_t PulseWidthPrescal
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_PWPRSC, PulseWidthPrescaler);
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the pulse on compare pulse width prescaler.
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PWPRSC           LL_TIM_OC_GetPulseWidthPrescaler
3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X1
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X2
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X4
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X8
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X16
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X32
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X64
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X128
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPulseWidthPrescaler(const TIM_TypeDef *TIMx)
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_PWPRSC));
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the pulse on compare pulse width duration.
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PW           LL_TIM_OC_SetPulseWidth
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  PulseWidth This parameter can be between Min_Data=0 and Max_Data=255
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPulseWidth(TIM_TypeDef *TIMx, uint32_t PulseWidth)
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_PW, PulseWidth << TIM_ECR_PW_Pos);
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the pulse on compare pulse width duration.
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PW           LL_TIM_OC_GetPulseWidth
3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be between Min_Data=0 and Max_Data=255:
3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPulseWidth(const TIM_TypeDef *TIMx)
3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 270


3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_PW));
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure input channel.
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))       
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              << SHIFT_TAB_ICxx[iChannel]);
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 271


3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the active input.
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current active input.
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(const TIM_TypeDef *TIMx, uint32_t Channel)
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
ARM GAS  /tmp/ccA1EUYa.s 			page 272


3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(const TIM_TypeDef *TIMx, uint32_t Channel)
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the input filter duration.
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
ARM GAS  /tmp/ccA1EUYa.s 			page 273


3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the input filter duration.
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(const TIM_TypeDef *TIMx, uint32_t Channel)
3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
ARM GAS  /tmp/ccA1EUYa.s 			page 274


3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the input channel polarity.
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(const TIM_TypeDef *TIMx, uint32_t Channel)
3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
ARM GAS  /tmp/ccA1EUYa.s 			page 275


3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * a timer instance provides an XOR input.
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(const TIM_TypeDef *TIMx)
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(const TIM_TypeDef *TIMx)
3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
ARM GAS  /tmp/ccA1EUYa.s 			page 276


3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(const TIM_TypeDef *TIMx)
3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(const TIM_TypeDef *TIMx)
3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(const TIM_TypeDef *TIMx)
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 277


3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(const TIM_TypeDef *TIMx)
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       function. This timer input must be configured by calling
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 278


3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X2
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X1
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X2
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X1_TI12
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X1_TI1
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X1_TI2
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENCODERCLK
4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 279


4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1816              		.loc 3 4008 1
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 8
 1819              		@ frame_needed = 1, uses_anonymous_args = 0
 1820              		@ link register save eliminated.
 1821 0000 80B4     		push	{r7}
 1822              	.LCFI186:
 1823              		.cfi_def_cfa_offset 4
 1824              		.cfi_offset 7, -4
 1825 0002 83B0     		sub	sp, sp, #12
 1826              	.LCFI187:
 1827              		.cfi_def_cfa_offset 16
 1828 0004 00AF     		add	r7, sp, #0
 1829              	.LCFI188:
 1830              		.cfi_def_cfa_register 7
 1831 0006 7860     		str	r0, [r7, #4]
 1832 0008 3960     		str	r1, [r7]
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 1833              		.loc 3 4009 3
 1834 000a 7B68     		ldr	r3, [r7, #4]
 1835 000c 5B68     		ldr	r3, [r3, #4]
 1836 000e 23F00073 		bic	r3, r3, #33554432
 1837 0012 23F07003 		bic	r3, r3, #112
 1838 0016 3A68     		ldr	r2, [r7]
 1839 0018 1A43     		orrs	r2, r2, r3
 1840 001a 7B68     		ldr	r3, [r7, #4]
 1841 001c 5A60     		str	r2, [r3, #4]
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1842              		.loc 3 4010 1
 1843 001e 00BF     		nop
 1844 0020 0C37     		adds	r7, r7, #12
 1845              	.LCFI189:
 1846              		.cfi_def_cfa_offset 4
 1847 0022 BD46     		mov	sp, r7
 1848              	.LCFI190:
 1849              		.cfi_def_cfa_register 13
 1850              		@ sp needed
 1851 0024 5DF8047B 		ldr	r7, [sp], #4
 1852              	.LCFI191:
 1853              		.cfi_restore 7
 1854              		.cfi_def_cfa_offset 0
 1855 0028 7047     		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE687:
 1859              		.section	.text.LL_TIM_EnableAllOutputs,"ax",%progbits
 1860              		.align	1
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1864              		.fpu fpv4-sp-d16
 1866              	LL_TIM_EnableAllOutputs:
 1867              	.LFB713:
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 280


4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the trigger output 2 (TRGO2) used for ADC synchronization .
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_TRGO2_INSTANCE(TIMx) can be used to check
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance can be used for ADC synchronization.
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          MMS2          LL_TIM_SetTriggerOutput2
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer Instance
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ADCSynchronization This parameter can be one of the following values:
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_RESET
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_ENABLE
4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_UPDATE
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_CC1F
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC1
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC2
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC3
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISINGFALLING
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6_RISINGFALLING
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_RISING
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_FALLING
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_RISING
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_FALLING
4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput2(TIM_TypeDef *TIMx, uint32_t ADCSynchronization)
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS2, ADCSynchronization);
4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_GATEDRESET
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
ARM GAS  /tmp/ccA1EUYa.s 			page 281


4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR4
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR5
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR6
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR7
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR8
4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR9
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR10
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR11
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(const TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 282


4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       uint32_t ETRFilter)
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Select the external trigger (ETR) input source.
4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ETRSEL_INSTANCE(TIMx) can be used to check whether or
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       not a timer instance supports ETR source selection.
4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          ETRSEL        LL_TIM_SetETRSource
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRSource This parameter can be one of the following values:
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM1: any combination of ETR_RMP where
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_GPIO
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP1
ARM GAS  /tmp/ccA1EUYa.s 			page 283


4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP2
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP3
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP4
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP5       (*)
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP6       (*)
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP7       (*)
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC1_AWD1
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC1_AWD2
4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC1_AWD3
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC4_AWD1   (*)
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC4_AWD2   (*)
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC4_AWD3   (*)
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2: any combination of ETR_RMP where
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_GPIO
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP1
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP2
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP3
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP4
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP5       (*)
4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP6       (*)
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP7       (*)
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_TIM3_ETR
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_TIM4_ETR
4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_TIM5_ETR    (*)
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_LSE
4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3: any combination of ETR_RMP where
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_GPIO
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP1
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP2
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP3
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP4
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP5       (*)
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP6       (*)
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP7       (*)
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_TIM2_ETR
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_TIM4_ETR
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_ADC2_AWD1
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_ADC2_AWD2
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_ADC2_AWD3
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4: any combination of ETR_RMP where
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_GPIO
4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP1
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP2
4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP3
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP4
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP5       (*)
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP6       (*)
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP7       (*)
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_TIM3_ETR
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_TIM5_ETR    (*)
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
ARM GAS  /tmp/ccA1EUYa.s 			page 284


4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5: any combination of ETR_RMP where       (**)
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_GPIO        (*)
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP1       (*)
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP2       (*)
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP3       (*)
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP4       (*)
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP5       (*)
4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP6       (*)
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP7       (*)
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_TIM2_ETR    (*)
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_TIM3_ETR    (*)
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM8: any combination of ETR_RMP where
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_GPIO
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP1
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP2
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP3
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP4
4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP5       (*)
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP6       (*)
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP7       (*)
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC2_AWD1
4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC2_AWD2
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC2_AWD3
4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC3_AWD1   (*)
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC3_AWD2   (*)
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC3_AWD3   (*)
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM20: any combination of ETR_RMP where       (**)
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_GPIO       (*)
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP1      (*)
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP2      (*)
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP3      (*)
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP4      (*)
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP5      (*)
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP6      (*)
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP7      (*)
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC3_AWD1  (*)
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC3_AWD2  (*)
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC3_AWD3  (*)
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC5_AWD1  (*)
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC5_AWD2  (*)
4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC5_AWD3  (*)
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (**) Register not available in all devices.
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetETRSource(TIM_TypeDef *TIMx, uint32_t ETRSource)
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->AF1, TIMx_AF1_ETRSEL, ETRSource);
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 285


4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable SMS preload.
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPE           LL_TIM_EnableSMSPreload
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableSMSPreload(TIM_TypeDef *TIMx)
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_SMSPE);
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable SMS preload.
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPE           LL_TIM_DisableSMSPreload
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableSMSPreload(TIM_TypeDef *TIMx)
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_SMSPE);
4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether  SMS preload is enabled.
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPE           LL_TIM_IsEnabledSMSPreload
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledSMSPreload(const TIM_TypeDef *TIMx)
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_SMSPE) == (TIM_SMCR_SMSPE)) ? 1UL : 0UL);
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the preload source of SMS.
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPS        LL_TIM_SetSMSPreloadSource\n
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  PreloadSource This parameter can be one of the following values:
4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_TIMUPDATE
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_INDEX
4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSMSPreloadSource(TIM_TypeDef *TIMx, uint32_t PreloadSource)
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMSPS, PreloadSource);
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 286


4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the preload source of SMS.
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPS        LL_TIM_GetSMSPreloadSource\n
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_TIMUPDATE
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_INDEX
4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetSMSPreloadSource(const TIM_TypeDef *TIMx)
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->SMCR, TIM_SMCR_SMSPS));
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Break_Function Break function configuration
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the break function.
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_EnableBRK
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK(TIM_TypeDef *TIMx)
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKE);
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the break function.
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_DisableBRK
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK(TIM_TypeDef *TIMx)
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKE);
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure the break input.
4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Bidirectional mode is only supported by advanced timer instances.
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       Macro IS_TIM_ADVANCED_INSTANCE(TIMx) can be used to check whether or not
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance is an advanced-control timer.
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In bidirectional mode (BKBID bit set), the Break input is configured both
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        in input mode and in open drain output mode. Any active Break event will
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        assert a low logic level on the Break input to indicate an internal break
ARM GAS  /tmp/ccA1EUYa.s 			page 287


4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        event to external devices.
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note When bidirectional mode isn't supported, BreakAFMode must be set to
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       LL_TIM_BREAK_AFMODE_INPUT.
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKP           LL_TIM_ConfigBRK\n
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BKF           LL_TIM_ConfigBRK\n
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BKBID         LL_TIM_ConfigBRK
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakPolarity This parameter can be one of the following values:
4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_LOW
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_HIGH
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakFilter This parameter can be one of the following values:
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N2
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N4
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N8
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N6
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N8
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N6
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N8
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N6
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N8
4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N5
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N6
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N8
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N5
4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N6
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N8
4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakAFMode This parameter can be one of the following values:
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_AFMODE_INPUT
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_AFMODE_BIDIRECTIONAL
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK(TIM_TypeDef *TIMx, uint32_t BreakPolarity, uint32_t BreakFilt
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       uint32_t BreakAFMode)
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BKP | TIM_BDTR_BKF | TIM_BDTR_BKBID, BreakPolarity | BreakFilter 
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disarm the break input (when it operates in bidirectional mode).
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  The break input can be disarmed only when it is configured in
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        bidirectional mode and when when MOE is reset.
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  Purpose is to be able to have the input voltage back to high-state,
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        whatever the time constant on the output .
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKDSRM        LL_TIM_DisarmBRK
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisarmBRK(TIM_TypeDef *TIMx)
4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKDSRM);
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the break 2 function.
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a second break input.
ARM GAS  /tmp/ccA1EUYa.s 			page 288


4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_EnableBRK2
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK2(TIM_TypeDef *TIMx)
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the break  2 function.
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a second break input.
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_DisableBRK2
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK2(TIM_TypeDef *TIMx)
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure the break 2 input.
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a second break input.
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Bidirectional mode is only supported by advanced timer instances.
4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       Macro IS_TIM_ADVANCED_INSTANCE(TIMx) can be used to check whether or not
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance is an advanced-control timer.
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In bidirectional mode (BK2BID bit set), the Break 2 input is configured both
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        in input mode and in open drain output mode. Any active Break event will
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        assert a low logic level on the Break 2 input to indicate an internal break
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        event to external devices.
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note When bidirectional mode isn't supported, Break2AFMode must be set to
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       LL_TIM_BREAK2_AFMODE_INPUT.
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2P          LL_TIM_ConfigBRK2\n
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BK2F          LL_TIM_ConfigBRK2\n
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BK2BID        LL_TIM_ConfigBRK2
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Break2Polarity This parameter can be one of the following values:
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_LOW
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_HIGH
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Break2Filter This parameter can be one of the following values:
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N2
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N4
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N8
4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N6
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N8
4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N6
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N8
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N6
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N8
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N5
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N6
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N8
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N5
ARM GAS  /tmp/ccA1EUYa.s 			page 289


4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N6
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N8
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Break2AFMode This parameter can be one of the following values:
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_AFMODE_INPUT
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_AFMODE_BIDIRECTIONAL
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK2(TIM_TypeDef *TIMx, uint32_t Break2Polarity, uint32_t Break2F
4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                        uint32_t Break2AFMode)
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BK2P | TIM_BDTR_BK2F | TIM_BDTR_BK2BID, Break2Polarity | Break2Fi
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disarm the break 2 input (when it operates in bidirectional mode).
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  The break 2 input can be disarmed only when it is configured in
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        bidirectional mode and when when MOE is reset.
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  Purpose is to be able to have the input voltage back to high-state,
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        whatever the time constant on the output.
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2DSRM       LL_TIM_DisarmBRK2
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisarmBRK2(TIM_TypeDef *TIMx)
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2DSRM);
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Select the outputs off state (enabled v.s. disabled) in Idle and Run modes.
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         OSSI          LL_TIM_SetOffStates\n
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         OSSR          LL_TIM_SetOffStates
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OffStateIdle This parameter can be one of the following values:
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_DISABLE
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_ENABLE
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OffStateRun This parameter can be one of the following values:
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_DISABLE
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_ENABLE
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOffStates(TIM_TypeDef *TIMx, uint32_t OffStateIdle, uint32_t OffStat
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_OSSI | TIM_BDTR_OSSR, OffStateIdle | OffStateRun);
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable automatic output (MOE can be set by software or automatically when a break input
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_EnableAutomaticOutput
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAutomaticOutput(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 290


4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_AOE);
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable automatic output (MOE can be set only by software).
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_DisableAutomaticOutput
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAutomaticOutput(TIM_TypeDef *TIMx)
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_AOE);
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether automatic output is enabled.
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_IsEnabledAutomaticOutput
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAutomaticOutput(const TIM_TypeDef *TIMx)
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_AOE) == (TIM_BDTR_AOE)) ? 1UL : 0UL);
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the outputs (set the MOE bit in TIMx_BDTR register).
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_EnableAllOutputs
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAllOutputs(TIM_TypeDef *TIMx)
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1868              		.loc 3 4624 1
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 8
 1871              		@ frame_needed = 1, uses_anonymous_args = 0
 1872              		@ link register save eliminated.
 1873 0000 80B4     		push	{r7}
 1874              	.LCFI192:
 1875              		.cfi_def_cfa_offset 4
 1876              		.cfi_offset 7, -4
 1877 0002 83B0     		sub	sp, sp, #12
 1878              	.LCFI193:
 1879              		.cfi_def_cfa_offset 16
 1880 0004 00AF     		add	r7, sp, #0
 1881              	.LCFI194:
 1882              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccA1EUYa.s 			page 291


 1883 0006 7860     		str	r0, [r7, #4]
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_MOE);
 1884              		.loc 3 4625 3
 1885 0008 7B68     		ldr	r3, [r7, #4]
 1886 000a 5B6C     		ldr	r3, [r3, #68]
 1887 000c 43F40042 		orr	r2, r3, #32768
 1888 0010 7B68     		ldr	r3, [r7, #4]
 1889 0012 5A64     		str	r2, [r3, #68]
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1890              		.loc 3 4626 1
 1891 0014 00BF     		nop
 1892 0016 0C37     		adds	r7, r7, #12
 1893              	.LCFI195:
 1894              		.cfi_def_cfa_offset 4
 1895 0018 BD46     		mov	sp, r7
 1896              	.LCFI196:
 1897              		.cfi_def_cfa_register 13
 1898              		@ sp needed
 1899 001a 5DF8047B 		ldr	r7, [sp], #4
 1900              	.LCFI197:
 1901              		.cfi_restore 7
 1902              		.cfi_def_cfa_offset 0
 1903 001e 7047     		bx	lr
 1904              		.cfi_endproc
 1905              	.LFE713:
 1907              		.section	.text.LL_TIM_DisableAllOutputs,"ax",%progbits
 1908              		.align	1
 1909              		.syntax unified
 1910              		.thumb
 1911              		.thumb_func
 1912              		.fpu fpv4-sp-d16
 1914              	LL_TIM_DisableAllOutputs:
 1915              	.LFB714:
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the outputs (reset the MOE bit in TIMx_BDTR register).
4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event.
4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_DisableAllOutputs
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAllOutputs(TIM_TypeDef *TIMx)
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1916              		.loc 3 4639 1
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 8
 1919              		@ frame_needed = 1, uses_anonymous_args = 0
 1920              		@ link register save eliminated.
 1921 0000 80B4     		push	{r7}
 1922              	.LCFI198:
 1923              		.cfi_def_cfa_offset 4
 1924              		.cfi_offset 7, -4
 1925 0002 83B0     		sub	sp, sp, #12
 1926              	.LCFI199:
ARM GAS  /tmp/ccA1EUYa.s 			page 292


 1927              		.cfi_def_cfa_offset 16
 1928 0004 00AF     		add	r7, sp, #0
 1929              	.LCFI200:
 1930              		.cfi_def_cfa_register 7
 1931 0006 7860     		str	r0, [r7, #4]
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_MOE);
 1932              		.loc 3 4640 3
 1933 0008 7B68     		ldr	r3, [r7, #4]
 1934 000a 5B6C     		ldr	r3, [r3, #68]
 1935 000c 23F40042 		bic	r2, r3, #32768
 1936 0010 7B68     		ldr	r3, [r7, #4]
 1937 0012 5A64     		str	r2, [r3, #68]
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1938              		.loc 3 4641 1
 1939 0014 00BF     		nop
 1940 0016 0C37     		adds	r7, r7, #12
 1941              	.LCFI201:
 1942              		.cfi_def_cfa_offset 4
 1943 0018 BD46     		mov	sp, r7
 1944              	.LCFI202:
 1945              		.cfi_def_cfa_register 13
 1946              		@ sp needed
 1947 001a 5DF8047B 		ldr	r7, [sp], #4
 1948              	.LCFI203:
 1949              		.cfi_restore 7
 1950              		.cfi_def_cfa_offset 0
 1951 001e 7047     		bx	lr
 1952              		.cfi_endproc
 1953              	.LFE714:
 1955              		.section	.text.LL_TIM_ClearFlag_UPDATE,"ax",%progbits
 1956              		.align	1
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu fpv4-sp-d16
 1962              	LL_TIM_ClearFlag_UPDATE:
 1963              	.LFB744:
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether outputs are enabled.
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_IsEnabledAllOutputs
4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAllOutputs(const TIM_TypeDef *TIMx)
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_MOE) == (TIM_BDTR_MOE)) ? 1UL : 0UL);
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the signals connected to the designated timer break input.
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          BKINE         LL_TIM_EnableBreakInputSource\n
4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP1E       LL_TIM_EnableBreakInputSource\n
ARM GAS  /tmp/ccA1EUYa.s 			page 293


4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP2E       LL_TIM_EnableBreakInputSource\n
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP3E       LL_TIM_EnableBreakInputSource\n
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP4E       LL_TIM_EnableBreakInputSource\n
4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP5E       LL_TIM_EnableBreakInputSource\n
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP6E       LL_TIM_EnableBreakInputSource\n
4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP7E       LL_TIM_EnableBreakInputSource\n
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2NE         LL_TIM_EnableBreakInputSource\n
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP1E      LL_TIM_EnableBreakInputSource\n
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP2E      LL_TIM_EnableBreakInputSource\n
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP3E      LL_TIM_EnableBreakInputSource\n
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP4E      LL_TIM_EnableBreakInputSource\n
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP5E      LL_TIM_EnableBreakInputSource\n
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP6E      LL_TIM_EnableBreakInputSource\n
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP7E      LL_TIM_EnableBreakInputSource
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP3
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP4
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP5 (*)
4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP6 (*)
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP7 (*)
4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices.
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_t
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput));
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, Source);
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the signals connected to the designated timer break input.
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          BKINE         LL_TIM_DisableBreakInputSource\n
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP1E       LL_TIM_DisableBreakInputSource\n
4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP2E       LL_TIM_DisableBreakInputSource\n
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP3E       LL_TIM_DisableBreakInputSource\n
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP4E       LL_TIM_DisableBreakInputSource\n
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP5E       LL_TIM_DisableBreakInputSource\n
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP6E       LL_TIM_DisableBreakInputSource\n
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP7E       LL_TIM_DisableBreakInputSource\n
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2INE        LL_TIM_DisableBreakInputSource\n
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP1E      LL_TIM_DisableBreakInputSource\n
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP2E      LL_TIM_DisableBreakInputSource\n
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP3E      LL_TIM_DisableBreakInputSource\n
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP4E      LL_TIM_DisableBreakInputSource\n
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP5E      LL_TIM_DisableBreakInputSource\n
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP6E      LL_TIM_DisableBreakInputSource\n
4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP7E      LL_TIM_DisableBreakInputSource
ARM GAS  /tmp/ccA1EUYa.s 			page 294


4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP3
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP4
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP5 (*)
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP6 (*)
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP7 (*)
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices.
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput));
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, Source);
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the polarity of the break signal for the timer break input.
4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          BKINP         LL_TIM_SetBreakInputSourcePolarity\n
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP1P       LL_TIM_SetBreakInputSourcePolarity\n
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP2P       LL_TIM_SetBreakInputSourcePolarity\n
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP3P       LL_TIM_SetBreakInputSourcePolarity\n
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP4P       LL_TIM_SetBreakInputSourcePolarity\n
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP5P       LL_TIM_SetBreakInputSourcePolarity\n
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP6P       LL_TIM_SetBreakInputSourcePolarity\n
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP7P       LL_TIM_SetBreakInputSourcePolarity\n
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2INP        LL_TIM_SetBreakInputSourcePolarity\n
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP1P      LL_TIM_SetBreakInputSourcePolarity\n
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP2P      LL_TIM_SetBreakInputSourcePolarity\n
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP3P      LL_TIM_SetBreakInputSourcePolarity\n
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP4P      LL_TIM_SetBreakInputSourcePolarity\n
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP5P      LL_TIM_SetBreakInputSourcePolarity\n
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP6P      LL_TIM_SetBreakInputSourcePolarity\n
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP7P      LL_TIM_SetBreakInputSourcePolarity
4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP3
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP4
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP5 (*)
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP6 (*)
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP7 (*)
4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 295


4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_LOW
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_HIGH
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices.
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetBreakInputSourcePolarity(TIM_TypeDef *TIMx, uint32_t BreakInput, uin
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                         uint32_t Polarity)
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput));
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable asymmetrical deadtime.
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides asymmetrical deadtime.
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTAE          LL_TIM_EnableAsymmetricalDeadTime
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAsymmetricalDeadTime(TIM_TypeDef *TIMx)
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DTR2, TIM_DTR2_DTAE);
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable asymmetrical dead-time.
4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides asymmetrical deadtime.
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTAE          LL_TIM_DisableAsymmetricalDeadTime
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAsymmetricalDeadTime(TIM_TypeDef *TIMx)
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DTR2, TIM_DTR2_DTAE);
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether asymmetrical deadtime is activated.
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides asymmetrical deadtime.
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTAE          LL_TIM_IsEnabledAsymmetricalDeadTime
4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAsymmetricalDeadTime(const TIM_TypeDef *TIMx)
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DTR2, TIM_DTR2_DTAE) == (TIM_DTR2_DTAE)) ? 1UL : 0UL);
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the falling edge dead-time delay (delay inserted between the falling edge of the OC
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         rising edge of OCxN signals).
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       asymmetrical dead-time insertion feature is supported by a timer instance.
4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
ARM GAS  /tmp/ccA1EUYa.s 			page 296


4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       (LOCK bits in TIMx_BDTR register).
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2         DTGF           LL_TIM_SetFallingDeadTime
4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetFallingDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->DTR2, TIM_DTR2_DTGF, DeadTime);
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the falling edge dead-time delay (delay inserted between the falling edge of the OC
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         the rising edge of OCxN signals).
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       asymmetrical dead-time insertion feature is supported by a timer instance.
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       (LOCK bits in TIMx_BDTR register).
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTGF           LL_TIM_GetFallingDeadTime
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be between Min_Data=0 and Max_Data=255:
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetFallingDeadTime(const TIM_TypeDef *TIMx)
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->DTR2, TIM_DTR2_DTGF));
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable deadtime preload.
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides deadtime preload.
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTPE          LL_TIM_EnableDeadTimePreload
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDeadTimePreload(TIM_TypeDef *TIMx)
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DTR2, TIM_DTR2_DTPE);
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable dead-time preload.
4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides deadtime preload.
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTPE          LL_TIM_DisableDeadTimePreload
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDeadTimePreload(TIM_TypeDef *TIMx)
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DTR2, TIM_DTR2_DTPE);
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether deadtime preload is activated.
4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /tmp/ccA1EUYa.s 			page 297


4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides deadtime preload.
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTPE          LL_TIM_IsEnabledDeadTimePreload
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDeadTimePreload(const TIM_TypeDef *TIMx)
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DTR2, TIM_DTR2_DTPE) == (TIM_DTR2_DTPE)) ? 1UL : 0UL);
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_RCR
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_BDTR
4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR3
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR5
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR6
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DTR2
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ECR
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_TISEL
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_AF1
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_AF2
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
ARM GAS  /tmp/ccA1EUYa.s 			page 298


4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_19TRANSFERS
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_20TRANSFERS
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_21TRANSFERS
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_22TRANSFERS
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_23TRANSFERS
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_24TRANSFERS
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_25TRANSFERS
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_26TRANSFERS
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Encoder Encoder configuration
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable encoder index.
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR         IE           LL_TIM_EnableEncoderIndex
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableEncoderIndex(TIM_TypeDef *TIMx)
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->ECR, TIM_ECR_IE);
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable encoder index.
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR         IE           LL_TIM_DisableEncoderIndex
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 299


5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableEncoderIndex(TIM_TypeDef *TIMx)
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->ECR, TIM_ECR_IE);
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether encoder index is enabled.
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR         IE           LL_TIM_IsEnabledEncoderIndex
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledEncoderIndex(const TIM_TypeDef *TIMx)
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->ECR, TIM_ECR_IE) == (TIM_ECR_IE)) ? 1U : 0U);
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set index direction
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IDIR           LL_TIM_SetIndexDirection
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  IndexDirection This parameter can be one of the following values:
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP_DOWN
5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_DOWN
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetIndexDirection(TIM_TypeDef *TIMx, uint32_t IndexDirection)
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_IDIR, IndexDirection);
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual index direction
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IDIR           LL_TIM_GetIndexDirection
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP_DOWN
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_DOWN
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetIndexDirection(const TIM_TypeDef *TIMx)
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_IDIR));
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable first index.
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          FIDX          LL_TIM_EnableFirstIndex
ARM GAS  /tmp/ccA1EUYa.s 			page 300


5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableFirstIndex(TIM_TypeDef *TIMx)
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->ECR, TIM_ECR_FIDX);
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable first index.
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          FIDX          LL_TIM_DisableFirstIndex
5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableFirstIndex(TIM_TypeDef *TIMx)
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->ECR, TIM_ECR_FIDX);
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether first index is enabled.
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          FIDX          LL_TIM_IsEnabledFirstIndex
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledFirstIndex(const TIM_TypeDef *TIMx)
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->ECR, TIM_ECR_FIDX) == (TIM_ECR_FIDX)) ? 1UL : 0UL);
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set index positioning
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IPOS           LL_TIM_SetIndexPositionning
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  IndexPositionning This parameter can be one of the following values:
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_DOWN
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_UP
5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_DOWN
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_UP
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetIndexPositionning(TIM_TypeDef *TIMx, uint32_t IndexPositionning)
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_IPOS, IndexPositionning);
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual index positioning
5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /tmp/ccA1EUYa.s 			page 301


5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IPOS           LL_TIM_GetIndexPositionning
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_DOWN
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_UP
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_DOWN
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_UP
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetIndexPositionning(const TIM_TypeDef *TIMx)
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_IPOS));
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure encoder index.
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IDIR          LL_TIM_ConfigIDX\n
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         ECR          FIDX          LL_TIM_ConfigIDX\n
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         ECR          IPOS          LL_TIM_ConfigIDX
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP or @ref LL_TIM_INDEX_DOWN or @ref LL_TIM_INDEX_UP_DOWN
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_ALL or @ref LL_TIM_INDEX_FIRST_ONLY
5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_DOWN or ... or @ref LL_TIM_INDEX_POSITION_UP
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigIDX(TIM_TypeDef *TIMx, uint32_t Configuration)
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_IDIR | TIM_ECR_FIDX | TIM_ECR_IPOS, Configuration);
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a some timer inputs can be remapped.
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll TIM1_TISEL    TI1SEL      LL_TIM_SetRemap\n
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI1SEL      LL_TIM_SetRemap\n
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI2SEL      LL_TIM_SetRemap\n
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI3SEL      LL_TIM_SetRemap\n
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI4SEL      LL_TIM_SetRemap\n
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3_TISEL    TI1SEL      LL_TIM_SetRemap\n
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3_TISEL    TI2SEL      LL_TIM_SetRemap\n
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3_TISEL    TI3SEL      LL_TIM_SetRemap\n
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI1SEL      LL_TIM_SetRemap\n
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI2SEL      LL_TIM_SetRemap\n
5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI3SEL      LL_TIM_SetRemap\n
ARM GAS  /tmp/ccA1EUYa.s 			page 302


5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI4SEL      LL_TIM_SetRemap\n
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5_TISEL    TI1SEL      LL_TIM_SetRemap\n
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5_TISEL    TI2SEL      LL_TIM_SetRemap\n
5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM8_TISEL    TI1SEL      LL_TIM_SetRemap\n
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM15_TISEL   TI1SEL      LL_TIM_SetRemap\n
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM15_TISEL   TI2SEL      LL_TIM_SetRemap\n
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM16_TISEL   TI1SEL      LL_TIM_SetRemap\n
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM17_TISEL   TI1SEL      LL_TIM_SetRemap\n
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM20_TISEL   TI1SEL      LL_TIM_SetRemap
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Remap Remap param depends on the TIMx. Description available only
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         Otherwise see Reference Manual description of TISEL registers.
5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM1: one of the following values
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_GPIO
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP1
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP2
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP3
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP4
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2: any combination of TI1_RMP, TI2_RMP, TI3_RMP and TI4_RMP where
5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_GPIO
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP1
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP2
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP3
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP4
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP5 (*)
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_GPIO
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP1
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP2
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP3
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP4
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP6 (*)
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI3_RMP can be one of the following values
5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI3_RMP_GPIO
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI3_RMP_COMP4
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI4_RMP can be one of the following values
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_GPIO
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP1
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP2
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3: any combination of TI1_RMP and TI2_RMP where
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_GPIO
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP1
5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP2
ARM GAS  /tmp/ccA1EUYa.s 			page 303


5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP3
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP4
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP5 (*)
5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP6 (*)
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP7 (*)
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_GPIO
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP1
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP2
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP3
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP4
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP5 (*)
5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP6 (*)
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP7 (*)
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI3_RMP can be one of the following values
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI3_RMP_GPIO
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI3_RMP_COMP3
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4: any combination of TI1_RMP, TI2_RMP, TI3_RMP and TI4_RMP where
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_GPIO
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP1
5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP2
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP3
5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP4
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP5 (*)
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP6 (*)
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP7 (*)
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_GPIO
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP1
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP2
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP3
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP4
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP5 (*)
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP6 (*)
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP7 (*)
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI3_RMP can be one of the following values
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI3_RMP_GPIO
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI3_RMP_COMP5 (*)
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI4_RMP can be one of the following values
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI4_RMP_GPIO
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI4_RMP_COMP6 (*)
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5: any combination of TI1_RMP and TI2_RMP where (**)
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_GPIO   (*)
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_LSI    (*)
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_LSE    (*)
5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_RTC_WK (*)
ARM GAS  /tmp/ccA1EUYa.s 			page 304


5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP1  (*)
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP2  (*)
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP3  (*)
5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP4  (*)
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP5  (*)
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP6  (*)
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP7  (*)
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_GPIO  (*)
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP1 (*)
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP2 (*)
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP3 (*)
5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP4 (*)
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP5 (*)
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP6 (*)
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP7 (*)
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM8: one of the following values
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_GPIO
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP1
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP2
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP3
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP4
5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM15: any combination of TI1_RMP and TI2_RMP where
5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_GPIO
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_LSE
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP1
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP2
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP5 (*)
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP7 (*)
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_GPIO
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP2
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP3
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP6 (*)
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP7 (*)
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM16: one of the following values
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_GPIO
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_COMP6 (*)
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_MCO
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_HSE_32
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_RTC_WK
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSE
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSI
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM17: one of the following values
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_GPIO
5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_COMP5 (*)
ARM GAS  /tmp/ccA1EUYa.s 			page 305


5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_MCO
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_HSE_32
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_RTC_WK
5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_LSE
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_LSI
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM20: one of the following values (**)
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_GPIO  (*)
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP1 (*)
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP2 (*)
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP3 (*)
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP4 (*)
5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (**) Register not available in all devices.
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->TISEL, (TIM_TISEL_TI1SEL | TIM_TISEL_TI2SEL | TIM_TISEL_TI3SEL | TIM_TISEL_TI4SE
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable request for HSE/32 clock used for TISEL remap.
5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only TIM16 and TIM17 support HSE/32 remap
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll OR         HSE32EN           LL_TIM_EnableHSE32
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableHSE32(TIM_TypeDef *TIMx)
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->OR, TIM_OR_HSE32EN);
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable request for HSE/32 clock used for TISEL remap.
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only TIM16 and TIM17 support HSE/32 remap
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll OR         HSE32EN           LL_TIM_DisableHSE32
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableHSE32(TIM_TypeDef *TIMx)
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->OR, TIM_OR_HSE32EN);
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether request for HSE/32 clock is enabled.
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only TIM16 and TIM17 support HSE/32 remap
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll OR         HSE32EN           LL_TIM_IsEnabledHSE32
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledHSE32(const TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 306


5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->OR, TIM_OR_HSE32EN) == (TIM_OR_HSE32EN)) ? 1UL : 0UL);
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCCS_INSTANCE(TIMx) can be used to check whether
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can configure OCREF clear input source.
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF2           OCRSEL              LL_TIM_SetOCRefClearInputSource
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP1
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP2
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP3
5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP4
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP5 (*)
5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP6 (*)
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP7 (*)
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS,
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ((OCRefClearInputSource & OCREF_CLEAR_SELECT_Msk) >> OCREF_CLEAR_SELECT_Pos) << TIM_SM
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->AF2, TIM1_AF2_OCRSEL, OCRefClearInputSource);
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 1964              		.loc 3 5456 1
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccA1EUYa.s 			page 307


 1967              		@ frame_needed = 1, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
 1969 0000 80B4     		push	{r7}
 1970              	.LCFI204:
 1971              		.cfi_def_cfa_offset 4
 1972              		.cfi_offset 7, -4
 1973 0002 83B0     		sub	sp, sp, #12
 1974              	.LCFI205:
 1975              		.cfi_def_cfa_offset 16
 1976 0004 00AF     		add	r7, sp, #0
 1977              	.LCFI206:
 1978              		.cfi_def_cfa_register 7
 1979 0006 7860     		str	r0, [r7, #4]
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 1980              		.loc 3 5457 3
 1981 0008 7B68     		ldr	r3, [r7, #4]
 1982 000a 6FF00102 		mvn	r2, #1
 1983 000e 1A61     		str	r2, [r3, #16]
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 1984              		.loc 3 5458 1
 1985 0010 00BF     		nop
 1986 0012 0C37     		adds	r7, r7, #12
 1987              	.LCFI207:
 1988              		.cfi_def_cfa_offset 4
 1989 0014 BD46     		mov	sp, r7
 1990              	.LCFI208:
 1991              		.cfi_def_cfa_register 13
 1992              		@ sp needed
 1993 0016 5DF8047B 		ldr	r7, [sp], #4
 1994              	.LCFI209:
 1995              		.cfi_restore 7
 1996              		.cfi_def_cfa_offset 0
 1997 001a 7047     		bx	lr
 1998              		.cfi_endproc
 1999              	.LFE744:
 2001              		.section	.text.LL_TIM_IsActiveFlag_UPDATE,"ax",%progbits
 2002              		.align	1
 2003              		.syntax unified
 2004              		.thumb
 2005              		.thumb_func
 2006              		.fpu fpv4-sp-d16
 2008              	LL_TIM_IsActiveFlag_UPDATE:
 2009              	.LFB745:
5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(const TIM_TypeDef *TIMx)
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2010              		.loc 3 5467 1
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 8
 2013              		@ frame_needed = 1, uses_anonymous_args = 0
 2014              		@ link register save eliminated.
ARM GAS  /tmp/ccA1EUYa.s 			page 308


 2015 0000 80B4     		push	{r7}
 2016              	.LCFI210:
 2017              		.cfi_def_cfa_offset 4
 2018              		.cfi_offset 7, -4
 2019 0002 83B0     		sub	sp, sp, #12
 2020              	.LCFI211:
 2021              		.cfi_def_cfa_offset 16
 2022 0004 00AF     		add	r7, sp, #0
 2023              	.LCFI212:
 2024              		.cfi_def_cfa_register 7
 2025 0006 7860     		str	r0, [r7, #4]
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
 2026              		.loc 3 5468 12
 2027 0008 7B68     		ldr	r3, [r7, #4]
 2028 000a 1B69     		ldr	r3, [r3, #16]
 2029 000c 03F00103 		and	r3, r3, #1
 2030              		.loc 3 5468 66
 2031 0010 012B     		cmp	r3, #1
 2032 0012 01D1     		bne	.L91
 2033              		.loc 3 5468 66 is_stmt 0 discriminator 1
 2034 0014 0123     		movs	r3, #1
 2035 0016 00E0     		b	.L93
 2036              	.L91:
 2037              		.loc 3 5468 66 discriminator 2
 2038 0018 0023     		movs	r3, #0
 2039              	.L93:
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2040              		.loc 3 5469 1 is_stmt 1 discriminator 5
 2041 001a 1846     		mov	r0, r3
 2042 001c 0C37     		adds	r7, r7, #12
 2043              	.LCFI213:
 2044              		.cfi_def_cfa_offset 4
 2045 001e BD46     		mov	sp, r7
 2046              	.LCFI214:
 2047              		.cfi_def_cfa_register 13
 2048              		@ sp needed
 2049 0020 5DF8047B 		ldr	r7, [sp], #4
 2050              	.LCFI215:
 2051              		.cfi_restore 7
 2052              		.cfi_def_cfa_offset 0
 2053 0024 7047     		bx	lr
 2054              		.cfi_endproc
 2055              	.LFE745:
 2057              		.section	.text.LL_TIM_ClearFlag_BRK,"ax",%progbits
 2058              		.align	1
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv4-sp-d16
 2064              	LL_TIM_ClearFlag_BRK:
 2065              	.LFB762:
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 309


5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(const TIM_TypeDef *TIMx)
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(const TIM_TypeDef *TIMx)
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF)) ? 1UL : 0UL);
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(const TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 310


5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF)) ? 1UL : 0UL);
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(const TIM_TypeDef *TIMx)
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF)) ? 1UL : 0UL);
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 5 interrupt flag (CC5F).
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC5IF         LL_TIM_ClearFlag_CC5
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC5(TIM_TypeDef *TIMx)
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC5IF));
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 5 interrupt flag (CC5F) is set (Capture/Compare 5 inte
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC5IF         LL_TIM_IsActiveFlag_CC5
5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC5(const TIM_TypeDef *TIMx)
5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC5IF) == (TIM_SR_CC5IF)) ? 1UL : 0UL);
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 6 interrupt flag (CC6F).
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC6IF         LL_TIM_ClearFlag_CC6
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC6(TIM_TypeDef *TIMx)
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC6IF));
ARM GAS  /tmp/ccA1EUYa.s 			page 311


5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 6 interrupt flag (CC6F) is set (Capture/Compare 6 inte
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC6IF         LL_TIM_IsActiveFlag_CC6
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC6(const TIM_TypeDef *TIMx)
5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC6IF) == (TIM_SR_CC6IF)) ? 1UL : 0UL);
5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the commutation interrupt flag (COMIF).
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_ClearFlag_COM
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_COM(TIM_TypeDef *TIMx)
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_COMIF));
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether commutation interrupt flag (COMIF) is set (commutation interrupt is pe
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_IsActiveFlag_COM
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_COM(const TIM_TypeDef *TIMx)
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_COMIF) == (TIM_SR_COMIF)) ? 1UL : 0UL);
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the trigger interrupt flag (TIF).
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_ClearFlag_TRIG
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TRIG(TIM_TypeDef *TIMx)
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TIF));
5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether trigger interrupt flag (TIF) is set (trigger interrupt is pending).
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_IsActiveFlag_TRIG
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TRIG(const TIM_TypeDef *TIMx)
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TIF) == (TIM_SR_TIF)) ? 1UL : 0UL);
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 312


5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the break interrupt flag (BIF).
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_ClearFlag_BRK
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK(TIM_TypeDef *TIMx)
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2066              		.loc 3 5654 1
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 8
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070              		@ link register save eliminated.
 2071 0000 80B4     		push	{r7}
 2072              	.LCFI216:
 2073              		.cfi_def_cfa_offset 4
 2074              		.cfi_offset 7, -4
 2075 0002 83B0     		sub	sp, sp, #12
 2076              	.LCFI217:
 2077              		.cfi_def_cfa_offset 16
 2078 0004 00AF     		add	r7, sp, #0
 2079              	.LCFI218:
 2080              		.cfi_def_cfa_register 7
 2081 0006 7860     		str	r0, [r7, #4]
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_BIF));
 2082              		.loc 3 5655 3
 2083 0008 7B68     		ldr	r3, [r7, #4]
 2084 000a 6FF08002 		mvn	r2, #128
 2085 000e 1A61     		str	r2, [r3, #16]
5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2086              		.loc 3 5656 1
 2087 0010 00BF     		nop
 2088 0012 0C37     		adds	r7, r7, #12
 2089              	.LCFI219:
 2090              		.cfi_def_cfa_offset 4
 2091 0014 BD46     		mov	sp, r7
 2092              	.LCFI220:
 2093              		.cfi_def_cfa_register 13
 2094              		@ sp needed
 2095 0016 5DF8047B 		ldr	r7, [sp], #4
 2096              	.LCFI221:
 2097              		.cfi_restore 7
 2098              		.cfi_def_cfa_offset 0
 2099 001a 7047     		bx	lr
 2100              		.cfi_endproc
 2101              	.LFE762:
 2103              		.section	.text.LL_TIM_ClearFlag_BRK2,"ax",%progbits
 2104              		.align	1
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu fpv4-sp-d16
 2110              	LL_TIM_ClearFlag_BRK2:
 2111              	.LFB764:
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether break interrupt flag (BIF) is set (break interrupt is pending).
ARM GAS  /tmp/ccA1EUYa.s 			page 313


5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_IsActiveFlag_BRK
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK(const TIM_TypeDef *TIMx)
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_BIF) == (TIM_SR_BIF)) ? 1UL : 0UL);
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the break 2 interrupt flag (B2IF).
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           B2IF          LL_TIM_ClearFlag_BRK2
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK2(TIM_TypeDef *TIMx)
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2112              		.loc 3 5676 1
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 8
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
 2116              		@ link register save eliminated.
 2117 0000 80B4     		push	{r7}
 2118              	.LCFI222:
 2119              		.cfi_def_cfa_offset 4
 2120              		.cfi_offset 7, -4
 2121 0002 83B0     		sub	sp, sp, #12
 2122              	.LCFI223:
 2123              		.cfi_def_cfa_offset 16
 2124 0004 00AF     		add	r7, sp, #0
 2125              	.LCFI224:
 2126              		.cfi_def_cfa_register 7
 2127 0006 7860     		str	r0, [r7, #4]
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_B2IF));
 2128              		.loc 3 5677 3
 2129 0008 7B68     		ldr	r3, [r7, #4]
 2130 000a 6FF48072 		mvn	r2, #256
 2131 000e 1A61     		str	r2, [r3, #16]
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2132              		.loc 3 5678 1
 2133 0010 00BF     		nop
 2134 0012 0C37     		adds	r7, r7, #12
 2135              	.LCFI225:
 2136              		.cfi_def_cfa_offset 4
 2137 0014 BD46     		mov	sp, r7
 2138              	.LCFI226:
 2139              		.cfi_def_cfa_register 13
 2140              		@ sp needed
 2141 0016 5DF8047B 		ldr	r7, [sp], #4
 2142              	.LCFI227:
 2143              		.cfi_restore 7
 2144              		.cfi_def_cfa_offset 0
 2145 001a 7047     		bx	lr
 2146              		.cfi_endproc
 2147              	.LFE764:
 2149              		.section	.text.LL_TIM_IsActiveFlag_BRK2,"ax",%progbits
 2150              		.align	1
ARM GAS  /tmp/ccA1EUYa.s 			page 314


 2151              		.syntax unified
 2152              		.thumb
 2153              		.thumb_func
 2154              		.fpu fpv4-sp-d16
 2156              	LL_TIM_IsActiveFlag_BRK2:
 2157              	.LFB765:
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether break 2 interrupt flag (B2IF) is set (break 2 interrupt is pending).
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           B2IF          LL_TIM_IsActiveFlag_BRK2
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK2(const TIM_TypeDef *TIMx)
5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2158              		.loc 3 5687 1
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 8
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162              		@ link register save eliminated.
 2163 0000 80B4     		push	{r7}
 2164              	.LCFI228:
 2165              		.cfi_def_cfa_offset 4
 2166              		.cfi_offset 7, -4
 2167 0002 83B0     		sub	sp, sp, #12
 2168              	.LCFI229:
 2169              		.cfi_def_cfa_offset 16
 2170 0004 00AF     		add	r7, sp, #0
 2171              	.LCFI230:
 2172              		.cfi_def_cfa_register 7
 2173 0006 7860     		str	r0, [r7, #4]
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_B2IF) == (TIM_SR_B2IF)) ? 1UL : 0UL);
 2174              		.loc 3 5688 12
 2175 0008 7B68     		ldr	r3, [r7, #4]
 2176 000a 1B69     		ldr	r3, [r3, #16]
 2177 000c 03F48073 		and	r3, r3, #256
 2178              		.loc 3 5688 68
 2179 0010 B3F5807F 		cmp	r3, #256
 2180 0014 01D1     		bne	.L97
 2181              		.loc 3 5688 68 is_stmt 0 discriminator 1
 2182 0016 0123     		movs	r3, #1
 2183 0018 00E0     		b	.L99
 2184              	.L97:
 2185              		.loc 3 5688 68 discriminator 2
 2186 001a 0023     		movs	r3, #0
 2187              	.L99:
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2188              		.loc 3 5689 1 is_stmt 1 discriminator 5
 2189 001c 1846     		mov	r0, r3
 2190 001e 0C37     		adds	r7, r7, #12
 2191              	.LCFI231:
 2192              		.cfi_def_cfa_offset 4
 2193 0020 BD46     		mov	sp, r7
 2194              	.LCFI232:
 2195              		.cfi_def_cfa_register 13
 2196              		@ sp needed
 2197 0022 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccA1EUYa.s 			page 315


 2198              	.LCFI233:
 2199              		.cfi_restore 7
 2200              		.cfi_def_cfa_offset 0
 2201 0026 7047     		bx	lr
 2202              		.cfi_endproc
 2203              	.LFE765:
 2205              		.section	.text.LL_TIM_EnableIT_UPDATE,"ax",%progbits
 2206              		.align	1
 2207              		.syntax unified
 2208              		.thumb
 2209              		.thumb_func
 2210              		.fpu fpv4-sp-d16
 2212              	LL_TIM_EnableIT_UPDATE:
 2213              	.LFB784:
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 over-capture interrupt flag (CC1OF).
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_ClearFlag_CC1OVR
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1OVR(TIM_TypeDef *TIMx)
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1OF));
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 over-capture interrupt flag (CC1OF) is set
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 1 interrupt is pending).
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_IsActiveFlag_CC1OVR
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1OVR(const TIM_TypeDef *TIMx)
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1OF) == (TIM_SR_CC1OF)) ? 1UL : 0UL);
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 over-capture interrupt flag (CC2OF).
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_ClearFlag_CC2OVR
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2OVR(TIM_TypeDef *TIMx)
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2OF));
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 over-capture interrupt flag (CC2OF) is set
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 2 over-capture interrupt is pending).
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_IsActiveFlag_CC2OVR
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2OVR(const TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 316


5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2OF) == (TIM_SR_CC2OF)) ? 1UL : 0UL);
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 over-capture interrupt flag (CC3OF).
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_ClearFlag_CC3OVR
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3OVR(TIM_TypeDef *TIMx)
5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3OF));
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 over-capture interrupt flag (CC3OF) is set
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 3 over-capture interrupt is pending).
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_IsActiveFlag_CC3OVR
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3OVR(const TIM_TypeDef *TIMx)
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3OF) == (TIM_SR_CC3OF)) ? 1UL : 0UL);
5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 over-capture interrupt flag (CC4OF).
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_ClearFlag_CC4OVR
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4OVR(TIM_TypeDef *TIMx)
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4OF));
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 over-capture interrupt flag (CC4OF) is set
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 4 over-capture interrupt is pending).
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_IsActiveFlag_CC4OVR
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4OVR(const TIM_TypeDef *TIMx)
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4OF) == (TIM_SR_CC4OF)) ? 1UL : 0UL);
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the system break interrupt flag (SBIF).
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           SBIF          LL_TIM_ClearFlag_SYSBRK
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_SYSBRK(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 317


5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_SBIF));
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether system break interrupt flag (SBIF) is set (system break interrupt is p
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           SBIF          LL_TIM_IsActiveFlag_SYSBRK
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_SYSBRK(const TIM_TypeDef *TIMx)
5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_SBIF) == (TIM_SR_SBIF)) ? 1UL : 0UL);
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the transition error interrupt flag (TERRF).
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TERRF           LL_TIM_ClearFlag_TERR
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TERR(TIM_TypeDef *TIMx)
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TERRF));
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether transition error interrupt flag (TERRF) is set (transition error inter
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TERRF           LL_TIM_IsActiveFlag_TERR
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TERR(const TIM_TypeDef *TIMx)
5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TERRF) == (TIM_SR_TERRF)) ? 1UL : 0UL);
5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the index error interrupt flag (IERRF).
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IERRF           LL_TIM_ClearFlag_IERR
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_IERR(TIM_TypeDef *TIMx)
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_IERRF));
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether index error interrupt flag (IERRF) is set (index error interrupt is pe
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /tmp/ccA1EUYa.s 			page 318


5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IERRF           LL_TIM_IsActiveFlag_IERR
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_IERR(const TIM_TypeDef *TIMx)
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_IERRF) == (TIM_SR_IERRF)) ? 1UL : 0UL);
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the direction change interrupt flag (DIRF).
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           DIRF           LL_TIM_ClearFlag_DIR
5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_DIR(TIM_TypeDef *TIMx)
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_DIRF));
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether direction change interrupt flag (DIRF) is set (direction change interr
5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           DIRF           LL_TIM_IsActiveFlag_DIR
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_DIR(const TIM_TypeDef *TIMx)
5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_DIRF) == (TIM_SR_DIRF)) ? 1UL : 0UL);
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the index interrupt flag (IDXF).
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IDXF           LL_TIM_ClearFlag_IDX
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_IDX(TIM_TypeDef *TIMx)
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_IDXF));
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether index interrupt flag (IDXF) is set (index interrupt is pending).
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IDXF           LL_TIM_IsActiveFlag_IDX
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 319


5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_IDX(const TIM_TypeDef *TIMx)
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_IDXF) == (TIM_SR_IDXF)) ? 1UL : 0UL);
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_IT_Management IT-Management
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable update interrupt (UIE).
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2214              		.loc 3 5922 1
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 8
 2217              		@ frame_needed = 1, uses_anonymous_args = 0
 2218              		@ link register save eliminated.
 2219 0000 80B4     		push	{r7}
 2220              	.LCFI234:
 2221              		.cfi_def_cfa_offset 4
 2222              		.cfi_offset 7, -4
 2223 0002 83B0     		sub	sp, sp, #12
 2224              	.LCFI235:
 2225              		.cfi_def_cfa_offset 16
 2226 0004 00AF     		add	r7, sp, #0
 2227              	.LCFI236:
 2228              		.cfi_def_cfa_register 7
 2229 0006 7860     		str	r0, [r7, #4]
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 2230              		.loc 3 5923 3
 2231 0008 7B68     		ldr	r3, [r7, #4]
 2232 000a DB68     		ldr	r3, [r3, #12]
 2233 000c 43F00102 		orr	r2, r3, #1
 2234 0010 7B68     		ldr	r3, [r7, #4]
 2235 0012 DA60     		str	r2, [r3, #12]
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2236              		.loc 3 5924 1
 2237 0014 00BF     		nop
 2238 0016 0C37     		adds	r7, r7, #12
 2239              	.LCFI237:
 2240              		.cfi_def_cfa_offset 4
 2241 0018 BD46     		mov	sp, r7
 2242              	.LCFI238:
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 001a 5DF8047B 		ldr	r7, [sp], #4
 2246              	.LCFI239:
 2247              		.cfi_restore 7
 2248              		.cfi_def_cfa_offset 0
 2249 001e 7047     		bx	lr
ARM GAS  /tmp/ccA1EUYa.s 			page 320


 2250              		.cfi_endproc
 2251              	.LFE784:
 2253              		.section	.text.LL_TIM_DisableIT_UPDATE,"ax",%progbits
 2254              		.align	1
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2258              		.fpu fpv4-sp-d16
 2260              	LL_TIM_DisableIT_UPDATE:
 2261              	.LFB785:
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update interrupt (UIE).
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_DisableIT_UPDATE
5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_UPDATE(TIM_TypeDef *TIMx)
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2262              		.loc 3 5933 1
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 2267 0000 80B4     		push	{r7}
 2268              	.LCFI240:
 2269              		.cfi_def_cfa_offset 4
 2270              		.cfi_offset 7, -4
 2271 0002 83B0     		sub	sp, sp, #12
 2272              	.LCFI241:
 2273              		.cfi_def_cfa_offset 16
 2274 0004 00AF     		add	r7, sp, #0
 2275              	.LCFI242:
 2276              		.cfi_def_cfa_register 7
 2277 0006 7860     		str	r0, [r7, #4]
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
 2278              		.loc 3 5934 3
 2279 0008 7B68     		ldr	r3, [r7, #4]
 2280 000a DB68     		ldr	r3, [r3, #12]
 2281 000c 23F00102 		bic	r2, r3, #1
 2282 0010 7B68     		ldr	r3, [r7, #4]
 2283 0012 DA60     		str	r2, [r3, #12]
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2284              		.loc 3 5935 1
 2285 0014 00BF     		nop
 2286 0016 0C37     		adds	r7, r7, #12
 2287              	.LCFI243:
 2288              		.cfi_def_cfa_offset 4
 2289 0018 BD46     		mov	sp, r7
 2290              	.LCFI244:
 2291              		.cfi_def_cfa_register 13
 2292              		@ sp needed
 2293 001a 5DF8047B 		ldr	r7, [sp], #4
 2294              	.LCFI245:
 2295              		.cfi_restore 7
 2296              		.cfi_def_cfa_offset 0
 2297 001e 7047     		bx	lr
ARM GAS  /tmp/ccA1EUYa.s 			page 321


 2298              		.cfi_endproc
 2299              	.LFE785:
 2301              		.section	.text.LL_TIM_EnableIT_BRK,"ax",%progbits
 2302              		.align	1
 2303              		.syntax unified
 2304              		.thumb
 2305              		.thumb_func
 2306              		.fpu fpv4-sp-d16
 2308              	LL_TIM_EnableIT_BRK:
 2309              	.LFB805:
5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the update interrupt (UIE) is enabled.
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_IsEnabledIT_UPDATE
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_UPDATE(const TIM_TypeDef *TIMx)
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UIE) == (TIM_DIER_UIE)) ? 1UL : 0UL);
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 1 interrupt (CC1IE).
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_EnableIT_CC1
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC1(TIM_TypeDef *TIMx)
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 1  interrupt (CC1IE).
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_DisableIT_CC1
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC1(TIM_TypeDef *TIMx)
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1IE);
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 interrupt (CC1IE) is enabled.
5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_IsEnabledIT_CC1
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC1(const TIM_TypeDef *TIMx)
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1IE) == (TIM_DIER_CC1IE)) ? 1UL : 0UL);
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 2 interrupt (CC2IE).
ARM GAS  /tmp/ccA1EUYa.s 			page 322


5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_EnableIT_CC2
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC2(TIM_TypeDef *TIMx)
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2IE);
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 2  interrupt (CC2IE).
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_DisableIT_CC2
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC2(TIM_TypeDef *TIMx)
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2IE);
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 interrupt (CC2IE) is enabled.
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_IsEnabledIT_CC2
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC2(const TIM_TypeDef *TIMx)
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2IE) == (TIM_DIER_CC2IE)) ? 1UL : 0UL);
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 3 interrupt (CC3IE).
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_EnableIT_CC3
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC3(TIM_TypeDef *TIMx)
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3IE);
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 3  interrupt (CC3IE).
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_DisableIT_CC3
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC3(TIM_TypeDef *TIMx)
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3IE);
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 interrupt (CC3IE) is enabled.
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_IsEnabledIT_CC3
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/ccA1EUYa.s 			page 323


6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC3(const TIM_TypeDef *TIMx)
6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3IE) == (TIM_DIER_CC3IE)) ? 1UL : 0UL);
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 4 interrupt (CC4IE).
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_EnableIT_CC4
6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC4(TIM_TypeDef *TIMx)
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4IE);
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 4  interrupt (CC4IE).
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_DisableIT_CC4
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC4(TIM_TypeDef *TIMx)
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4IE);
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 interrupt (CC4IE) is enabled.
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_IsEnabledIT_CC4
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC4(const TIM_TypeDef *TIMx)
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4IE) == (TIM_DIER_CC4IE)) ? 1UL : 0UL);
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable commutation interrupt (COMIE).
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_EnableIT_COM
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_COM(TIM_TypeDef *TIMx)
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_COMIE);
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable commutation interrupt (COMIE).
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_DisableIT_COM
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 324


6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_COM(TIM_TypeDef *TIMx)
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_COMIE);
6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the commutation interrupt (COMIE) is enabled.
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_IsEnabledIT_COM
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_COM(const TIM_TypeDef *TIMx)
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_COMIE) == (TIM_DIER_COMIE)) ? 1UL : 0UL);
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TIE).
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_EnableIT_TRIG
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TRIG(TIM_TypeDef *TIMx)
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TIE);
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TIE).
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_DisableIT_TRIG
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TRIG(TIM_TypeDef *TIMx)
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TIE);
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TIE) is enabled.
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_IsEnabledIT_TRIG
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TRIG(const TIM_TypeDef *TIMx)
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TIE) == (TIM_DIER_TIE)) ? 1UL : 0UL);
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable break interrupt (BIE).
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_EnableIT_BRK
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_BRK(TIM_TypeDef *TIMx)
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 325


 2310              		.loc 3 6153 1
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 8
 2313              		@ frame_needed = 1, uses_anonymous_args = 0
 2314              		@ link register save eliminated.
 2315 0000 80B4     		push	{r7}
 2316              	.LCFI246:
 2317              		.cfi_def_cfa_offset 4
 2318              		.cfi_offset 7, -4
 2319 0002 83B0     		sub	sp, sp, #12
 2320              	.LCFI247:
 2321              		.cfi_def_cfa_offset 16
 2322 0004 00AF     		add	r7, sp, #0
 2323              	.LCFI248:
 2324              		.cfi_def_cfa_register 7
 2325 0006 7860     		str	r0, [r7, #4]
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_BIE);
 2326              		.loc 3 6154 3
 2327 0008 7B68     		ldr	r3, [r7, #4]
 2328 000a DB68     		ldr	r3, [r3, #12]
 2329 000c 43F08002 		orr	r2, r3, #128
 2330 0010 7B68     		ldr	r3, [r7, #4]
 2331 0012 DA60     		str	r2, [r3, #12]
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2332              		.loc 3 6155 1
 2333 0014 00BF     		nop
 2334 0016 0C37     		adds	r7, r7, #12
 2335              	.LCFI249:
 2336              		.cfi_def_cfa_offset 4
 2337 0018 BD46     		mov	sp, r7
 2338              	.LCFI250:
 2339              		.cfi_def_cfa_register 13
 2340              		@ sp needed
 2341 001a 5DF8047B 		ldr	r7, [sp], #4
 2342              	.LCFI251:
 2343              		.cfi_restore 7
 2344              		.cfi_def_cfa_offset 0
 2345 001e 7047     		bx	lr
 2346              		.cfi_endproc
 2347              	.LFE805:
 2349              		.section	.text.LL_TIM_GenerateEvent_UPDATE,"ax",%progbits
 2350              		.align	1
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2354              		.fpu fpv4-sp-d16
 2356              	LL_TIM_GenerateEvent_UPDATE:
 2357              	.LFB841:
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable break interrupt (BIE).
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_DisableIT_BRK
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_BRK(TIM_TypeDef *TIMx)
6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 326


6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_BIE);
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the break interrupt (BIE) is enabled.
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_IsEnabledIT_BRK
6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_BRK(const TIM_TypeDef *TIMx)
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_BIE) == (TIM_DIER_BIE)) ? 1UL : 0UL);
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable transition error interrupt (TERRIE).
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TERRIE           LL_TIM_EnableIT_TERR
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TERR(TIM_TypeDef *TIMx)
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TERRIE);
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable transition error interrupt (TERRIE).
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TERRIE           LL_TIM_DisableIT_TERR
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TERR(TIM_TypeDef *TIMx)
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TERRIE);
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the transition error interrupt (TERRIE) is enabled.
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TERRIE           LL_TIM_IsEnabledIT_TERR
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TERR(const TIM_TypeDef *TIMx)
6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TERRIE) == (TIM_DIER_TERRIE)) ? 1UL : 0UL);
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable index error interrupt (IERRIE).
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
ARM GAS  /tmp/ccA1EUYa.s 			page 327


6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IERRIE           LL_TIM_EnableIT_IERR
6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_IERR(TIM_TypeDef *TIMx)
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_IERRIE);
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable index error interrupt (IERRIE).
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IERRIE           LL_TIM_DisableIT_IERR
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_IERR(TIM_TypeDef *TIMx)
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_IERRIE);
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the index error interrupt (IERRIE) is enabled.
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IERRIE           LL_TIM_IsEnabledIT_IERR
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_IERR(const TIM_TypeDef *TIMx)
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_IERRIE) == (TIM_DIER_IERRIE)) ? 1UL : 0UL);
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable direction change interrupt (DIRIE).
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         DIRIE           LL_TIM_EnableIT_DIR
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_DIR(TIM_TypeDef *TIMx)
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_DIRIE);
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable direction change interrupt (DIRIE).
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         DIRIE           LL_TIM_DisableIT_DIR
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_DIR(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 328


6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_DIRIE);
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the direction change interrupt (DIRIE) is enabled.
6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         DIRIE           LL_TIM_IsEnabledIT_DIR
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_DIR(const TIM_TypeDef *TIMx)
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_DIRIE) == (TIM_DIER_DIRIE)) ? 1UL : 0UL);
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable index interrupt (IDXIE).
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IDXIE           LL_TIM_EnableIT_IDX
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_IDX(TIM_TypeDef *TIMx)
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_IDXIE);
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable index interrupt (IDXIE).
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IDXIE           LL_TIM_DisableIT_IDX
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_IDX(TIM_TypeDef *TIMx)
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_IDXIE);
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the index interrupt (IDXIE) is enabled.
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IDXIE           LL_TIM_IsEnabledIT_IDX
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_IDX(const TIM_TypeDef *TIMx)
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_IDXIE) == (TIM_DIER_IDXIE)) ? 1UL : 0UL);
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 329


6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Management DMA Management
6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable update DMA request (UDE).
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_EnableDMAReq_UPDATE
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_UPDATE(TIM_TypeDef *TIMx)
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UDE);
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update DMA request (UDE).
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_DisableDMAReq_UPDATE
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_UPDATE(TIM_TypeDef *TIMx)
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UDE);
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the update DMA request  (UDE) is enabled.
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_IsEnabledDMAReq_UPDATE
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_UPDATE(const TIM_TypeDef *TIMx)
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UDE) == (TIM_DIER_UDE)) ? 1UL : 0UL);
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 1 DMA request (CC1DE).
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_EnableDMAReq_CC1
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC1(TIM_TypeDef *TIMx)
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1DE);
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 1  DMA request (CC1DE).
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_DisableDMAReq_CC1
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC1(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccA1EUYa.s 			page 330


6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1DE);
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 DMA request (CC1DE) is enabled.
6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_IsEnabledDMAReq_CC1
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC1(const TIM_TypeDef *TIMx)
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1DE) == (TIM_DIER_CC1DE)) ? 1UL : 0UL);
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 2 DMA request (CC2DE).
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_EnableDMAReq_CC2
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC2(TIM_TypeDef *TIMx)
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2DE);
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 2  DMA request (CC2DE).
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_DisableDMAReq_CC2
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC2(TIM_TypeDef *TIMx)
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2DE);
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 DMA request (CC2DE) is enabled.
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_IsEnabledDMAReq_CC2
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC2(const TIM_TypeDef *TIMx)
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2DE) == (TIM_DIER_CC2DE)) ? 1UL : 0UL);
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 3 DMA request (CC3DE).
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_EnableDMAReq_CC3
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC3(TIM_TypeDef *TIMx)
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3DE);
ARM GAS  /tmp/ccA1EUYa.s 			page 331


6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 3  DMA request (CC3DE).
6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_DisableDMAReq_CC3
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC3(TIM_TypeDef *TIMx)
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3DE);
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 DMA request (CC3DE) is enabled.
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_IsEnabledDMAReq_CC3
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC3(const TIM_TypeDef *TIMx)
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3DE) == (TIM_DIER_CC3DE)) ? 1UL : 0UL);
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 4 DMA request (CC4DE).
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_EnableDMAReq_CC4
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC4(TIM_TypeDef *TIMx)
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4DE);
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 4  DMA request (CC4DE).
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_DisableDMAReq_CC4
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC4(TIM_TypeDef *TIMx)
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4DE);
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 DMA request (CC4DE) is enabled.
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_IsEnabledDMAReq_CC4
6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC4(const TIM_TypeDef *TIMx)
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4DE) == (TIM_DIER_CC4DE)) ? 1UL : 0UL);
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 332


6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable commutation DMA request (COMDE).
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMDE         LL_TIM_EnableDMAReq_COM
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_COM(TIM_TypeDef *TIMx)
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_COMDE);
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable commutation DMA request (COMDE).
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMDE         LL_TIM_DisableDMAReq_COM
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_COM(TIM_TypeDef *TIMx)
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_COMDE);
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the commutation DMA request (COMDE) is enabled.
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMDE         LL_TIM_IsEnabledDMAReq_COM
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_COM(const TIM_TypeDef *TIMx)
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_COMDE) == (TIM_DIER_COMDE)) ? 1UL : 0UL);
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TDE).
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_EnableDMAReq_TRIG
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_TRIG(TIM_TypeDef *TIMx)
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TDE);
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TDE).
6553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_DisableDMAReq_TRIG
6554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_TRIG(TIM_TypeDef *TIMx)
6558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TDE);
6560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TDE) is enabled.
ARM GAS  /tmp/ccA1EUYa.s 			page 333


6564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_IsEnabledDMAReq_TRIG
6565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_TRIG(const TIM_TypeDef *TIMx)
6569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TDE) == (TIM_DIER_TDE)) ? 1UL : 0UL);
6571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
6575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_EVENT_Management EVENT-Management
6578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
6579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Generate an update event.
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll EGR          UG            LL_TIM_GenerateEvent_UPDATE
6583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_UPDATE(TIM_TypeDef *TIMx)
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2358              		.loc 3 6587 1
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 8
 2361              		@ frame_needed = 1, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 2363 0000 80B4     		push	{r7}
 2364              	.LCFI252:
 2365              		.cfi_def_cfa_offset 4
 2366              		.cfi_offset 7, -4
 2367 0002 83B0     		sub	sp, sp, #12
 2368              	.LCFI253:
 2369              		.cfi_def_cfa_offset 16
 2370 0004 00AF     		add	r7, sp, #0
 2371              	.LCFI254:
 2372              		.cfi_def_cfa_register 7
 2373 0006 7860     		str	r0, [r7, #4]
6588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_UG);
 2374              		.loc 3 6588 3
 2375 0008 7B68     		ldr	r3, [r7, #4]
 2376 000a 5B69     		ldr	r3, [r3, #20]
 2377 000c 43F00102 		orr	r2, r3, #1
 2378 0010 7B68     		ldr	r3, [r7, #4]
 2379 0012 5A61     		str	r2, [r3, #20]
6589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2380              		.loc 3 6589 1
 2381 0014 00BF     		nop
 2382 0016 0C37     		adds	r7, r7, #12
 2383              	.LCFI255:
 2384              		.cfi_def_cfa_offset 4
 2385 0018 BD46     		mov	sp, r7
 2386              	.LCFI256:
 2387              		.cfi_def_cfa_register 13
 2388              		@ sp needed
ARM GAS  /tmp/ccA1EUYa.s 			page 334


 2389 001a 5DF8047B 		ldr	r7, [sp], #4
 2390              	.LCFI257:
 2391              		.cfi_restore 7
 2392              		.cfi_def_cfa_offset 0
 2393 001e 7047     		bx	lr
 2394              		.cfi_endproc
 2395              	.LFE841:
 2397              		.section	.text.LL_TIM_GenerateEvent_COM,"ax",%progbits
 2398              		.align	1
 2399              		.syntax unified
 2400              		.thumb
 2401              		.thumb_func
 2402              		.fpu fpv4-sp-d16
 2404              	LL_TIM_GenerateEvent_COM:
 2405              	.LFB846:
6590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Generate Capture/Compare 1 event.
6593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll EGR          CC1G          LL_TIM_GenerateEvent_CC1
6594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_CC1(TIM_TypeDef *TIMx)
6598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_CC1G);
6600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Generate Capture/Compare 2 event.
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll EGR          CC2G          LL_TIM_GenerateEvent_CC2
6605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_CC2(TIM_TypeDef *TIMx)
6609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_CC2G);
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Generate Capture/Compare 3 event.
6615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll EGR          CC3G          LL_TIM_GenerateEvent_CC3
6616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_CC3(TIM_TypeDef *TIMx)
6620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_CC3G);
6622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Generate Capture/Compare 4 event.
6626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll EGR          CC4G          LL_TIM_GenerateEvent_CC4
6627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_CC4(TIM_TypeDef *TIMx)
6631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/ccA1EUYa.s 			page 335


6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_CC4G);
6633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Generate commutation event.
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll EGR          COMG          LL_TIM_GenerateEvent_COM
6638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_COM(TIM_TypeDef *TIMx)
6642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 2406              		.loc 3 6642 1
 2407              		.cfi_startproc
 2408              		@ args = 0, pretend = 0, frame = 8
 2409              		@ frame_needed = 1, uses_anonymous_args = 0
 2410              		@ link register save eliminated.
 2411 0000 80B4     		push	{r7}
 2412              	.LCFI258:
 2413              		.cfi_def_cfa_offset 4
 2414              		.cfi_offset 7, -4
 2415 0002 83B0     		sub	sp, sp, #12
 2416              	.LCFI259:
 2417              		.cfi_def_cfa_offset 16
 2418 0004 00AF     		add	r7, sp, #0
 2419              	.LCFI260:
 2420              		.cfi_def_cfa_register 7
 2421 0006 7860     		str	r0, [r7, #4]
6643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_COMG);
 2422              		.loc 3 6643 3
 2423 0008 7B68     		ldr	r3, [r7, #4]
 2424 000a 5B69     		ldr	r3, [r3, #20]
 2425 000c 43F02002 		orr	r2, r3, #32
 2426 0010 7B68     		ldr	r3, [r7, #4]
 2427 0012 5A61     		str	r2, [r3, #20]
6644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 2428              		.loc 3 6644 1
 2429 0014 00BF     		nop
 2430 0016 0C37     		adds	r7, r7, #12
 2431              	.LCFI261:
 2432              		.cfi_def_cfa_offset 4
 2433 0018 BD46     		mov	sp, r7
 2434              	.LCFI262:
 2435              		.cfi_def_cfa_register 13
 2436              		@ sp needed
 2437 001a 5DF8047B 		ldr	r7, [sp], #4
 2438              	.LCFI263:
 2439              		.cfi_restore 7
 2440              		.cfi_def_cfa_offset 0
 2441 001e 7047     		bx	lr
 2442              		.cfi_endproc
 2443              	.LFE846:
 2445              		.section	.text.LL_GPIO_SetOutputPin,"ax",%progbits
 2446              		.align	1
 2447              		.syntax unified
 2448              		.thumb
 2449              		.thumb_func
 2450              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccA1EUYa.s 			page 336


 2452              	LL_GPIO_SetOutputPin:
 2453              	.LFB870:
 2454              		.file 4 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
ARM GAS  /tmp/ccA1EUYa.s 			page 337


  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 338


 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 339


 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
ARM GAS  /tmp/ccA1EUYa.s 			page 340


 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
ARM GAS  /tmp/ccA1EUYa.s 			page 341


 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  /tmp/ccA1EUYa.s 			page 342


 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
ARM GAS  /tmp/ccA1EUYa.s 			page 343


 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  /tmp/ccA1EUYa.s 			page 344


 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
ARM GAS  /tmp/ccA1EUYa.s 			page 345


 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 346


 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
ARM GAS  /tmp/ccA1EUYa.s 			page 347


 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
ARM GAS  /tmp/ccA1EUYa.s 			page 348


 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         next reset.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         (control and alternate function registers).
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   __IO uint32_t temp;
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
ARM GAS  /tmp/ccA1EUYa.s 			page 349


 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Input data register value of port
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
ARM GAS  /tmp/ccA1EUYa.s 			page 350


 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Output data register value of port
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
ARM GAS  /tmp/ccA1EUYa.s 			page 351


 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->ODR, PinMask) == (PinMask)) ? 1UL : 0UL);
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2455              		.loc 4 895 1
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 8
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459              		@ link register save eliminated.
 2460 0000 80B4     		push	{r7}
 2461              	.LCFI264:
 2462              		.cfi_def_cfa_offset 4
 2463              		.cfi_offset 7, -4
 2464 0002 83B0     		sub	sp, sp, #12
 2465              	.LCFI265:
 2466              		.cfi_def_cfa_offset 16
 2467 0004 00AF     		add	r7, sp, #0
 2468              	.LCFI266:
ARM GAS  /tmp/ccA1EUYa.s 			page 352


 2469              		.cfi_def_cfa_register 7
 2470 0006 7860     		str	r0, [r7, #4]
 2471 0008 3960     		str	r1, [r7]
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 2472              		.loc 4 896 3
 2473 000a 7B68     		ldr	r3, [r7, #4]
 2474 000c 3A68     		ldr	r2, [r7]
 2475 000e 9A61     		str	r2, [r3, #24]
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 2476              		.loc 4 897 1
 2477 0010 00BF     		nop
 2478 0012 0C37     		adds	r7, r7, #12
 2479              	.LCFI267:
 2480              		.cfi_def_cfa_offset 4
 2481 0014 BD46     		mov	sp, r7
 2482              	.LCFI268:
 2483              		.cfi_def_cfa_register 13
 2484              		@ sp needed
 2485 0016 5DF8047B 		ldr	r7, [sp], #4
 2486              	.LCFI269:
 2487              		.cfi_restore 7
 2488              		.cfi_def_cfa_offset 0
 2489 001a 7047     		bx	lr
 2490              		.cfi_endproc
 2491              	.LFE870:
 2493              		.section	.text.LL_GPIO_ResetOutputPin,"ax",%progbits
 2494              		.align	1
 2495              		.syntax unified
 2496              		.thumb
 2497              		.thumb_func
 2498              		.fpu fpv4-sp-d16
 2500              	LL_GPIO_ResetOutputPin:
 2501              	.LFB871:
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 353


 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2502              		.loc 4 924 1
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 8
 2505              		@ frame_needed = 1, uses_anonymous_args = 0
 2506              		@ link register save eliminated.
 2507 0000 80B4     		push	{r7}
 2508              	.LCFI270:
 2509              		.cfi_def_cfa_offset 4
 2510              		.cfi_offset 7, -4
 2511 0002 83B0     		sub	sp, sp, #12
 2512              	.LCFI271:
 2513              		.cfi_def_cfa_offset 16
 2514 0004 00AF     		add	r7, sp, #0
 2515              	.LCFI272:
 2516              		.cfi_def_cfa_register 7
 2517 0006 7860     		str	r0, [r7, #4]
 2518 0008 3960     		str	r1, [r7]
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
 2519              		.loc 4 925 3
 2520 000a 7B68     		ldr	r3, [r7, #4]
 2521 000c 3A68     		ldr	r2, [r7]
 2522 000e 9A62     		str	r2, [r3, #40]
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 2523              		.loc 4 926 1
 2524 0010 00BF     		nop
 2525 0012 0C37     		adds	r7, r7, #12
 2526              	.LCFI273:
 2527              		.cfi_def_cfa_offset 4
 2528 0014 BD46     		mov	sp, r7
 2529              	.LCFI274:
 2530              		.cfi_def_cfa_register 13
 2531              		@ sp needed
 2532 0016 5DF8047B 		ldr	r7, [sp], #4
 2533              	.LCFI275:
 2534              		.cfi_restore 7
 2535              		.cfi_def_cfa_offset 0
 2536 001a 7047     		bx	lr
 2537              		.cfi_endproc
 2538              	.LFE871:
 2540              		.section	.rodata.USART_PRESCALER_TAB,"a"
 2541              		.align	2
 2544              	USART_PRESCALER_TAB:
 2545 0000 01000000 		.word	1
 2546 0004 02000000 		.word	2
 2547 0008 04000000 		.word	4
 2548 000c 06000000 		.word	6
 2549 0010 08000000 		.word	8
 2550 0014 0A000000 		.word	10
 2551 0018 0C000000 		.word	12
 2552 001c 10000000 		.word	16
 2553 0020 20000000 		.word	32
 2554 0024 40000000 		.word	64
 2555 0028 80000000 		.word	128
 2556 002c 00010000 		.word	256
ARM GAS  /tmp/ccA1EUYa.s 			page 354


 2557              		.section	.text.LL_DAC_Enable,"ax",%progbits
 2558              		.align	1
 2559              		.syntax unified
 2560              		.thumb
 2561              		.thumb_func
 2562              		.fpu fpv4-sp-d16
 2564              	LL_DAC_Enable:
 2565              	.LFB1168:
 2566              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @file    stm32g4xx_ll_dac.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief   Header file of DAC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #ifndef STM32G4xx_LL_DAC_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define STM32G4xx_LL_DAC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #if defined(DAC1) || defined(DAC2) || defined(DAC3) ||defined (DAC4)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL DAC
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Private_Constants DAC Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Internal masks for DAC channels definition */
ARM GAS  /tmp/ccA1EUYa.s 			page 355


  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* To select into literal LL_DAC_CHANNEL_x the relevant bits for:             */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel bits position into registers CR, MCR, CCR, SHHR, SHRR, STMODR    */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel bits position into register SWTRIG                               */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel bits position into register SWTRIGB                              */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of data holding register DHRx                    */
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of data output register DORx                     */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of sample-and-hold sample time register SHSRx    */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of sawtooth register STRx                        */
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_CR_CH1_BITOFFSET           0UL   /* Position of channel bits into registers
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                 CR, MCR, CCR, SHHR, SHRR, STMODR of channel 1 */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_CR_CH2_BITOFFSET           16UL  /* Position of channel bits into registers
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                 CR, MCR, CCR, SHHR, SHRR, STMODR of channel 2 */
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_CR_CHX_BITOFFSET_MASK      (DAC_CR_CH1_BITOFFSET | DAC_CR_CH2_BITOFFSET)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTR_CH1                   (DAC_SWTRIGR_SWTRIG1) /* Channel bit into register SWTRIGR o
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTR_CH2                   (DAC_SWTRIGR_SWTRIG2) /* Channel bit into register SWTRIGR o
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTR_CHX_MASK              (DAC_SWTR_CH1 | DAC_SWTR_CH2)
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTRB_CH1                  (DAC_SWTRIGR_SWTRIGB1) /* Channel bit into register SWTRIGRB
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTRB_CH2                  (DAC_SWTRIGR_SWTRIGB2) /* Channel bit into register SWTRIGR 
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTRB_CHX_MASK             (DAC_SWTRB_CH1 | DAC_SWTRB_CH2)
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12R1_REGOFFSET      0x00000000UL            /* Register DHR12Rx channel 1 taken 
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12L1_REGOFFSET      0x00100000UL            /* Register offset of DHR12Lx channe
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8R1_REGOFFSET       0x02000000UL            /* Register offset of DHR8Rx  channe
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12R2_REGOFFSET      0x30000000UL            /* Register offset of DHR12Rx channe
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12L2_REGOFFSET      0x00400000UL            /* Register offset of DHR12Lx channe
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8R2_REGOFFSET       0x05000000UL            /* Register offset of DHR8Rx  channe
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12RX_REGOFFSET_MASK 0xF0000000UL
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12LX_REGOFFSET_MASK 0x00F00000UL
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8RX_REGOFFSET_MASK  0x0F000000UL
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHRX_REGOFFSET_MASK    (DAC_REG_DHR12RX_REGOFFSET_MASK\
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                         | DAC_REG_DHR12LX_REGOFFSET_MASK | DAC_REG_DHR8RX_REGOFFSET
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DOR1_REGOFFSET         0x00000000UL            /* Register DORx channel 1 taken as 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DOR2_REGOFFSET         0x00000020UL            /* Register offset of DORx channel 1
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DORx channel 2 (shifted left of 5
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DORX_REGOFFSET_MASK    (DAC_REG_DOR1_REGOFFSET | DAC_REG_DOR2_REGOFFSET)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSR1_REGOFFSET        0x00000000UL            /* Register SHSRx channel 1 taken as
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSR2_REGOFFSET        0x00000040UL            /* Register offset of SHSRx channel 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   SHSRx channel 2 (shifted left of 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSRX_REGOFFSET_MASK   (DAC_REG_SHSR1_REGOFFSET | DAC_REG_SHSR2_REGOFFSET)
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STR1_REGOFFSET         0x00000000UL            /* Register STRx channel 1 taken as 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STR2_REGOFFSET         0x00000080UL            /* Register offset of STRx channel 1
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   STRx channel 2 (shifted left of 7
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STRX_REGOFFSET_MASK   (DAC_REG_STR1_REGOFFSET | DAC_REG_STR2_REGOFFSET)
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 356


 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR_REGOFFSET_MASK_POSBIT0         0x0000000FUL /* Mask of data hold registers offs
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    DHR12Lx, DHR8Rx, ...) when shift
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DORX_REGOFFSET_MASK_POSBIT0        0x00000001UL /* Mask of DORx registers offset wh
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    to position 0                   
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSRX_REGOFFSET_MASK_POSBIT0       0x00000001UL /* Mask of SHSRx registers offset w
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    to position 0                   
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STRX_REGOFFSET_MASK_POSBIT0        0x00000001UL /* Mask of STRx registers offset wh
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    to position 0                   
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12RX_REGOFFSET_BITOFFSET_POS           28UL  /* Position of bits register offset
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DHR12Rx ch
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 28 bits)       
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12LX_REGOFFSET_BITOFFSET_POS           20UL  /* Position of bits register offset
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DHR12Rx ch
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 20 bits)       
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8RX_REGOFFSET_BITOFFSET_POS            24UL  /* Position of bits register offset
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DHR12Rx ch
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 24 bits)       
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DORX_REGOFFSET_BITOFFSET_POS               5UL  /* Position of bits register offset
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DORx chann
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 5 bits)        
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSRX_REGOFFSET_BITOFFSET_POS              6UL  /* Position of bits register offset
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus SHSRx chan
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 6 bits)        
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STRX_REGOFFSET_BITOFFSET_POS               7UL  /* Position of bits register offset
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus STRx chann
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 7 bits)        
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DAC registers bits positions */
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DHR12RD_DACC2DHR_BITOFFSET_POS                DAC_DHR12RD_DACC2DHR_Pos
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DHR12LD_DACC2DHR_BITOFFSET_POS                DAC_DHR12LD_DACC2DHR_Pos
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DHR8RD_DACC2DHR_BITOFFSET_POS                 DAC_DHR8RD_DACC2DHR_Pos
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Miscellaneous data */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DIGITAL_SCALE_12BITS                  4095UL   /* Full-scale digital value with a resol
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                               bits (voltage range determined by ana
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                               references Vref+ and Vref-, refer to 
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private macros ------------------------------------------------------------*/
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Private_Macros DAC Private Macros
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         a register from a register basis from which an offset
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         is applied.
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG__ Register basis from which the offset is applied.
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Pointer to register address
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __DAC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
ARM GAS  /tmp/ccA1EUYa.s 			page 357


 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported types ------------------------------------------------------------*/
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #if defined(USE_FULL_LL_DRIVER)
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_ES_INIT DAC Exported Init structure
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Structure definition of some features of DAC instance.
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** typedef struct
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t TriggerSource;               /*!< Set the conversion trigger source for the selected DAC
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              internal (SW start) or from external peripheral
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (timer event, external interrupt line).
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_TRIGGE
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetTriggerSource().
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @note If waveform automatic generation mode is set to 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              this parameter is used as sawtooth RESET trigger */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t TriggerSource2;              /*!< Set the conversion secondary trigger source for the se
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              internal (SW start) or from external peripheral
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (timer event, external interrupt line).
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_TRIGGE
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetTriggerSource2().
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @note If waveform automatic generation mode is set to 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              this parameter is used as sawtooth step trigger */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t WaveAutoGeneration;          /*!< Set the waveform automatic generation mode for the sel
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_WAVE_A
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetWaveAutoGeneration(). */
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t WaveAutoGenerationConfig;    /*!< Set the waveform automatic generation mode for the sel
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              If waveform automatic generation mode is set to noise,
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              can be a value of @ref DAC_LL_EC_WAVE_NOISE_LFSR_UNMAS
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              If waveform automatic generation mode is set to triang
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              this parameter can be a value of @ref DAC_LL_EC_WAVE_T
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              If waveform automatic generation mode is set to sawtoo
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              host the sawtooth configuration: polarity, reset data,
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              Use __LL_DAC_FORMAT_SAWTOOTHWAVECONFIG macro to set th
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @note If waveform automatic generation mode is disable
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                               this parameter is discarded.
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetWaveNoiseLFSR(),
ARM GAS  /tmp/ccA1EUYa.s 			page 358


 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @ref LL_DAC_SetWaveTriangleAmplitude(),
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @ref LL_DAC_SetWaveSawtoothPolarity(),
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @ref LL_DAC_SetWaveSawtoothResetData()
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              or @ref LL_DAC_SetWaveSawtoothStepData(),
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              depending on the wave automatic generation selected. *
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t OutputBuffer;                /*!< Set the output buffer for the selected DAC channel.
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_OUTPUT
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetOutputBuffer(). */
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t OutputConnection;            /*!< Set the output connection for the selected DAC channel
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_OUTPUT
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetOutputConnection(). */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t OutputMode;                  /*!< Set the output mode normal or sample-and-hold for the 
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              channel. This parameter can be a value of @ref DAC_LL_
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetOutputMode(). */
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** } LL_DAC_InitTypeDef;
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #endif /* USE_FULL_LL_DRIVER */
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported constants --------------------------------------------------------*/
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Exported_Constants DAC Exported Constants
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_GET_FLAG DAC flags
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief    Flags defines which can be used with LL_DAC_ReadReg function
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DAC channel 1 flags */
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DMAUDR1                (DAC_SR_DMAUDR1)   /*!< DAC channel 1 flag DMA underrun 
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_CAL1                   (DAC_SR_CAL_FLAG1) /*!< DAC channel 1 flag offset calibr
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_BWST1                  (DAC_SR_BWST1)     /*!< DAC channel 1 flag busy writing 
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DAC1RDY                (DAC_SR_DAC1RDY)   /*!< DAC channel 1 flag ready */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DORSTAT1               (DAC_SR_DORSTAT1)  /*!< DAC channel 1 flag output regist
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DAC channel 2 flags */
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DMAUDR2                (DAC_SR_DMAUDR2)   /*!< DAC channel 2 flag DMA underrun 
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_CAL2                   (DAC_SR_CAL_FLAG2) /*!< DAC channel 2 flag offset calibr
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_BWST2                  (DAC_SR_BWST2)     /*!< DAC channel 2 flag busy writing 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DAC2RDY                (DAC_SR_DAC2RDY)   /*!< DAC channel 2 flag ready */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DORSTAT2               (DAC_SR_DORSTAT2)  /*!< DAC channel 2 flag output regist
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 359


 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_IT DAC interruptions
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief    IT defines which can be used with LL_DAC_ReadReg and  LL_DAC_WriteReg functions
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_IT_DMAUDRIE1                (DAC_CR_DMAUDRIE1) /*!< DAC channel 1 interruption DMA u
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_IT_DMAUDRIE2                (DAC_CR_DMAUDRIE2) /*!< DAC channel 2 interruption DMA u
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_CHANNEL DAC channels
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_CHANNEL_1                   (DAC_REG_STR1_REGOFFSET | DAC_REG_SHSR1_REGOFFSET | DAC_
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_CHANNEL_2                   (DAC_REG_STR2_REGOFFSET | DAC_REG_SHSR2_REGOFFSET | DAC_
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_HIGH_FREQUENCY_MODE DAC high frequency interface mode
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief    High frequency interface mode defines that can be used
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           with LL_DAC_SetHighFrequencyMode and LL_DAC_GetHighFrequencyMode
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_HIGH_FREQ_MODE_DISABLE         0x00000000UL       /*!< High frequency interface mode
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_HIGH_FREQ_MODE_ABOVE_80MHZ     (DAC_MCR_HFSEL_0)  /*!< High frequency interface mode
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_HIGH_FREQ_MODE_ABOVE_160MHZ    (DAC_MCR_HFSEL_1)  /*!< High frequency interface mode
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OPERATING_MODE DAC operating mode
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_MODE_NORMAL_OPERATION       0x00000000UL            /*!< DAC channel in mode normal 
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_MODE_CALIBRATION            (DAC_CR_CEN1)           /*!< DAC channel in mode calibra
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_TRIGGER_SOURCE DAC trigger source
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_SOFTWARE                  0x00000000UL                                         
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM1_TRGO             (                                                   D
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM8_TRGO             (                                                   D
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM7_TRGO             (                                  DAC_CR_TSEL1_1    
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM15_TRGO            (                                  DAC_CR_TSEL1_1 | D
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM2_TRGO             (                 DAC_CR_TSEL1_2                     
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM4_TRGO             (                 DAC_CR_TSEL1_2                  | D
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_EXTI_LINE9            (                 DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_EXTI_LINE10           (                 DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM6_TRGO             (                 DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM3_TRGO             (DAC_CR_TSEL1_3                                      
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG1       (DAC_CR_TSEL1_3                                   | D
ARM GAS  /tmp/ccA1EUYa.s 			page 360


 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG1        (DAC_CR_TSEL1_3                                   | D
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG2       (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1    
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG2        (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1    
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG3       (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1 | D
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG3        (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1 | D
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG4       (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                     
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG4        (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                     
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG5       (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                  | D
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG5        (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                  | D
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG6       (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG6        (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_TRGO1           (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_TRGO2           (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_TRGO3           (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_WAVE_AUTO_GENERATION_MODE DAC waveform automatic generation mode
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_NONE     0x00000000UL                    /*!< DAC channel wave 
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_NOISE    (               DAC_CR_WAVE1_0) /*!< DAC channel wave 
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE (DAC_CR_WAVE1_1               ) /*!< DAC channel wave 
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_SAWTOOTH (DAC_CR_WAVE1_1|DAC_CR_WAVE1_0) /*!< DAC channel wave 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_WAVE_NOISE_LFSR_UNMASK_BITS DAC wave generation - Noise LFSR unmask bits
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BIT0      0x00000000UL                                            
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS1_0   (                                                   DAC_
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS2_0   (                                  DAC_CR_MAMP1_1       
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS3_0   (                                  DAC_CR_MAMP1_1 | DAC_
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS4_0   (                 DAC_CR_MAMP1_2                        
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS5_0   (                 DAC_CR_MAMP1_2                  | DAC_
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS6_0   (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1       
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS7_0   (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1 | DAC_
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS8_0   (DAC_CR_MAMP1_3                                         
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS9_0   (DAC_CR_MAMP1_3                                   | DAC_
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS10_0  (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1       
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS11_0  (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1 | DAC_
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_WAVE_TRIANGLE_AMPLITUDE DAC wave generation - Triangle amplitude
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_1        0x00000000UL                                            
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_3        (                                                   DAC_
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_7        (                                  DAC_CR_MAMP1_1       
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_15       (                                  DAC_CR_MAMP1_1 | DAC_
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_31       (                 DAC_CR_MAMP1_2                        
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_63       (                 DAC_CR_MAMP1_2                  | DAC_
ARM GAS  /tmp/ccA1EUYa.s 			page 361


 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_127      (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1       
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_255      (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1 | DAC_
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_511      (DAC_CR_MAMP1_3                                         
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_1023     (DAC_CR_MAMP1_3                                   | DAC_
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_2047     (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1       
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_4095     (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1 | DAC_
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_SAWTOOTH_POLARITY_MODE DAC wave generation - Sawtooth polarity mode
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SAWTOOTH_POLARITY_DECREMENT          0x00000000UL            /*!< Sawtooth wave gene
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SAWTOOTH_POLARITY_INCREMENT          (DAC_STR1_STDIR1)       /*!< Sawtooth wave gene
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OUTPUT_MODE DAC channel output mode
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_MODE_NORMAL          0x00000000UL            /*!< The selected DAC channel ou
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD (DAC_MCR_MODE1_2)       /*!< The selected DAC channel ou
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OUTPUT_BUFFER DAC channel output buffer
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_BUFFER_ENABLE        0x00000000UL            /*!< The selected DAC channel ou
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_BUFFER_DISABLE       (DAC_MCR_MODE1_1)       /*!< The selected DAC channel ou
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OUTPUT_CONNECTION DAC channel output connection
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_CONNECT_GPIO         0x00000000UL            /*!< The selected DAC channel ou
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_CONNECT_INTERNAL     (DAC_MCR_MODE1_0)       /*!< The selected DAC channel ou
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_SIGNED_FORMAT DAC channel signed format
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SIGNED_FORMAT_DISABLE       0x00000000UL            /*!< The selected DAC channel da
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SIGNED_FORMAT_ENABLE        (DAC_MCR_SINFORMAT1)    /*!< The selected DAC channel da
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_RESOLUTION  DAC channel output resolution
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
ARM GAS  /tmp/ccA1EUYa.s 			page 362


 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_RESOLUTION_12B              0x00000000UL            /*!< DAC channel resolution 12 b
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_RESOLUTION_8B               0x00000002UL            /*!< DAC channel resolution 8 bi
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_REGISTERS  DAC registers compliant with specific purpose
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* List of DAC registers intended to be used (most commonly) with             */
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DMA transfer.                                                              */
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Refer to function @ref LL_DAC_DMA_GetRegAddr().                            */
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED  DAC_REG_DHR12RX_REGOFFSET_BITOFFSET_POS /*!< DAC 
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DMA_REG_DATA_12BITS_LEFT_ALIGNED   DAC_REG_DHR12LX_REGOFFSET_BITOFFSET_POS /*!< DAC 
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DMA_REG_DATA_8BITS_RIGHT_ALIGNED   DAC_REG_DHR8RX_REGOFFSET_BITOFFSET_POS  /*!< DAC 
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_HW_DELAYS  Definitions of DAC hardware constraints delays
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Only DAC peripheral HW delays are defined in DAC LL driver driver,
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         not timeout values.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         For details on delays values, refer to descriptions in source code
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         above each literal definition.
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Delay for DAC channel voltage settling time from DAC channel startup       */
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* (transition from disable to enable).                                       */
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Note: DAC channel startup time depends on board application environment:   */
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       impedance connected to DAC channel output.                           */
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       The delay below is specified under conditions:                       */
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - voltage maximum transition (lowest to highest value)              */
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - until voltage reaches final value +-1LSB                          */
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - DAC channel output buffer enabled                                 */
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - load impedance of 5kOhm (min), 50pF (max)                         */
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* parameter "tWAKEUP").                                                      */
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Unit: us                                                                   */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US             8UL  /*!< Delay for DAC channel voltag
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Delay for DAC channel voltage settling time.                               */
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Note: DAC channel startup time depends on board application environment:   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       impedance connected to DAC channel output.                           */
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       The delay below is specified under conditions:                       */
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - voltage maximum transition (lowest to highest value)              */
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - until voltage reaches final value +-1LSB                          */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - DAC channel output buffer enabled                                 */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - load impedance of 5kOhm min, 50pF max                             */
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* parameter "tSETTLING").                                                    */
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Unit: us                                                                   */
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DELAY_VOLTAGE_SETTLING_US                     3UL /*!< Delay for DAC channel voltage
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
ARM GAS  /tmp/ccA1EUYa.s 			page 363


 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported macro ------------------------------------------------------------*/
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Exported_Macros DAC Exported Macros
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EM_WRITE_READ Common write and read registers macros
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Write a value in DAC register
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __INSTANCE__ DAC Instance
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG__ Register to be written
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __VALUE__ Value to be written in the register
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Read a value in DAC register
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __INSTANCE__ DAC Instance
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG__ Register to be read
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Register value
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EM_HELPER_MACRO DAC helper macro
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to get DAC channel number in decimal format
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         from literals LL_DAC_CHANNEL_x.
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example:
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *            __LL_DAC_CHANNEL_TO_DECIMAL_NB(LL_DAC_CHANNEL_1)
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *            will return decimal number "1".
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   The input can be a value from functions where a channel
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         number is returned.
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval 1...2
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                            \
ARM GAS  /tmp/ccA1EUYa.s 			page 364


 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((__CHANNEL__) & DAC_SWTR_CHX_MASK)
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to get DAC channel in literal format LL_DAC_CHANNEL_x
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         from number in decimal format.
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example:
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           __LL_DAC_DECIMAL_NB_TO_CHANNEL(1)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           will return a data equivalent to "LL_DAC_CHANNEL_1".
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note  If the input parameter does not correspond to a DAC channel,
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *        this macro returns value '0'.
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DECIMAL_NB__ 1...2
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)\
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   (((__DECIMAL_NB__) == 1UL)? (LL_DAC_CHANNEL_1  ):(((__DECIMAL_NB__) == 2UL) ? ( LL_DAC_CHANNEL_2)
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to define the DAC conversion data full-scale digital
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         value corresponding to the selected DAC resolution.
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   DAC conversion data full-scale corresponds to voltage range
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         determined by analog voltage references Vref+ and Vref-
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (refer to reference manual).
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DAC_RESOLUTION__ This parameter can be one of the following values:
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_12B
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_8B
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_DIGITAL_SCALE(__DAC_RESOLUTION__)                             \
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((0x00000FFFUL) >> ((__DAC_RESOLUTION__) << 1UL))
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to calculate the DAC conversion data (unit: digital
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         value) corresponding to a voltage (unit: mVolt).
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This helper macro is intended to provide input data in voltage
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         rather than digital value,
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         to be used with LL DAC functions such as
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @ref LL_DAC_ConvertData12RightAligned().
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Analog reference voltage (Vref+) must be either known from
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         user board environment or can be calculated using ADC measurement
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and ADC helper macro __LL_ADC_CALC_VREFANALOG_VOLTAGE().
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DAC_VOLTAGE__ Voltage to be generated by DAC channel
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                         (unit: mVolt).
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DAC_RESOLUTION__ This parameter can be one of the following values:
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_12B
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_8B
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval DAC conversion data (unit: digital value)
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_CALC_VOLTAGE_TO_DATA(__VREFANALOG_VOLTAGE__, __DAC_VOLTAGE__, __DAC_RESOLUTION__) 
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((__DAC_VOLTAGE__) * __LL_DAC_DIGITAL_SCALE(__DAC_RESOLUTION__)                                  
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****    / (__VREFANALOG_VOLTAGE__)                                                                      
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   )
ARM GAS  /tmp/ccA1EUYa.s 			page 365


 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to format sawtooth wave generation configuration
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         value to be filled into WaveAutoGenerationConfig  parameter of @ref LL_DAC_InitTypeDef.
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This helper will format information to fit in DAC_STRx register.
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __POLARITY__ sawtooth wave polarity (must be value of @ref DAC_LL_EC_SAWTOOTH_POLARITY_
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __RESET_DATA__ sawtooth reset data.
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __STEP_DATA__ sawtooth step data
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Sawtooth configuration organized in DAC_STRx compatible format.
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_FORMAT_SAWTOOTHWAVECONFIG(__POLARITY__, __RESET_DATA__, __STEP_DATA__)            
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ( (((__STEP_DATA__) << DAC_STR1_STINCDATA1_Pos) & DAC_STR1_STINCDATA1_Msk)                       
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****     | ((__POLARITY__) & DAC_STR1_STDIR1_Msk)                                                       
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****     | (((__RESET_DATA__) << DAC_STR1_STRSTDATA1_Pos) & DAC_STR1_STRSTDATA1_Msk)                    
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   )
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported functions --------------------------------------------------------*/
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Exported_Functions DAC Exported Functions
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_Channel_Configuration Configuration of DAC instance
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the high frequency interface mode for the selected DAC instance
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      HFSEL          LL_DAC_SetHighFrequencyMode
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  HighFreqMode This parameter can be one of the following values:
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_DISABLE
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_80MHZ
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_160MHZ
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetHighFrequencyMode(DAC_TypeDef *DACx, uint32_t HighFreqMode)
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR, DAC_MCR_HFSEL, HighFreqMode);
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the high frequency interface mode for the selected DAC instance
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      HFSEL          LL_DAC_GetHighFrequencyMode
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_DISABLE
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_80MHZ
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_160MHZ
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetHighFrequencyMode(const DAC_TypeDef *DACx)
ARM GAS  /tmp/ccA1EUYa.s 			page 366


 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, DAC_MCR_HFSEL));
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_Configuration Configuration of DAC channels
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the operating mode for the selected DAC channel:
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         calibration or normal operating mode.
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       CEN1           LL_DAC_SetMode\n
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       CEN2           LL_DAC_SetMode
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  ChannelMode This parameter can be one of the following values:
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_NORMAL_OPERATION
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_CALIBRATION
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetMode(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t ChannelMode)
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_CEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ChannelMode << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the operating mode for the selected DAC channel:
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         calibration or normal operating mode.
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       CEN1           LL_DAC_GetMode\n
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       CEN2           LL_DAC_GetMode
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_NORMAL_OPERATION
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_CALIBRATION
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetMode(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_CEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
ARM GAS  /tmp/ccA1EUYa.s 			page 367


 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the offset trimming value for the selected DAC channel.
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Trimming has an impact when output buffer is enabled
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and is intended to replace factory calibration default values.
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CCR      OTRIM1         LL_DAC_SetTrimmingValue\n
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CCR      OTRIM2         LL_DAC_SetTrimmingValue
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TrimmingValue Value between Min_Data=0x00 and Max_Data=0x1F
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetTrimmingValue(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Trim
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CCR,
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CCR_OTRIM1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              TrimmingValue << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the offset trimming value for the selected DAC channel.
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Trimming has an impact when output buffer is enabled
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and is intended to replace factory calibration default values.
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CCR      OTRIM1         LL_DAC_GetTrimmingValue\n
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CCR      OTRIM2         LL_DAC_GetTrimmingValue
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval TrimmingValue Value between Min_Data=0x00 and Max_Data=0x1F
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetTrimmingValue(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CCR, DAC_CCR_OTRIM1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the conversion trigger source for the selected DAC channel.
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For conversion trigger source to be effective, DAC trigger
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         must be enabled using function @ref LL_DAC_EnableTrigger().
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   To set conversion trigger source, DAC channel must be disabled.
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Otherwise, the setting is discarded.
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Availability of parameters of trigger sources from timer
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         depends on timers availability on the selected device.
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TSEL1          LL_DAC_SetTriggerSource\n
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TSEL2          LL_DAC_SetTriggerSource
ARM GAS  /tmp/ccA1EUYa.s 			page 368


 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriggerSource This parameter can be one of the following values:
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Trig
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_TSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              TriggerSource << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the conversion trigger source for the selected DAC channel.
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For conversion trigger source to be effective, DAC trigger
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         must be enabled using function @ref LL_DAC_EnableTrigger().
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Availability of parameters of trigger sources from timer
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         depends on timers availability on the selected device.
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TSEL1          LL_DAC_GetTriggerSource\n
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TSEL2          LL_DAC_GetTriggerSource
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
ARM GAS  /tmp/ccA1EUYa.s 			page 369


 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetTriggerSource(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_TSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the waveform automatic generation mode
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       WAVE1          LL_DAC_SetWaveAutoGeneration\n
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       WAVE2          LL_DAC_SetWaveAutoGeneration
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  WaveAutoGeneration This parameter can be one of the following values:
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NONE
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NOISE
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_SAWTOOTH
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 370


 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveAutoGeneration(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_WAVE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              WaveAutoGeneration << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the waveform automatic generation mode
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       WAVE1          LL_DAC_GetWaveAutoGeneration\n
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       WAVE2          LL_DAC_GetWaveAutoGeneration
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NONE
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NOISE
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_SAWTOOTH
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveAutoGeneration(const DAC_TypeDef *DACx, uint32_t DAC_Channel
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_WAVE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the noise waveform generation for the selected DAC channel:
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Noise mode and parameters LFSR (linear feedback shift register).
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_SetWaveNoiseLFSR\n
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_SetWaveNoiseLFSR
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  NoiseLFSRMask This parameter can be one of the following values:
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BIT0
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS1_0
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS2_0
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS3_0
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS4_0
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS5_0
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS6_0
ARM GAS  /tmp/ccA1EUYa.s 			page 371


 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS7_0
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS8_0
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS9_0
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS10_0
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS11_0
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveNoiseLFSR(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Nois
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              NoiseLFSRMask << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the noise waveform generation for the selected DAC channel:
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Noise mode and parameters LFSR (linear feedback shift register).
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_GetWaveNoiseLFSR\n
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_GetWaveNoiseLFSR
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BIT0
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS1_0
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS2_0
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS3_0
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS4_0
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS5_0
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS6_0
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS7_0
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS8_0
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS9_0
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS10_0
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS11_0
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveNoiseLFSR(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the triangle waveform generation for the selected DAC channel:
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         triangle mode and amplitude.
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_SetWaveTriangleAmplitude\n
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_SetWaveTriangleAmplitude
ARM GAS  /tmp/ccA1EUYa.s 			page 372


1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriangleAmplitude This parameter can be one of the following values:
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_3
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_7
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_15
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_31
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_63
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_127
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_255
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_511
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1023
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_2047
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_4095
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveTriangleAmplitude(DAC_TypeDef *DACx, uint32_t DAC_Channel,
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                      uint32_t TriangleAmplitude)
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              TriangleAmplitude << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the triangle waveform generation for the selected DAC channel:
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         triangle mode and amplitude.
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_GetWaveTriangleAmplitude\n
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_GetWaveTriangleAmplitude
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_3
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_7
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_15
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_31
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_63
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_127
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_255
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_511
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1023
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_2047
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_4095
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveTriangleAmplitude(const DAC_TypeDef *DACx, uint32_t DAC_Chan
ARM GAS  /tmp/ccA1EUYa.s 			page 373


1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation polarity.
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STDIR1         LL_DAC_SetWaveSawtoothPolarity\n
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STDIR2         LL_DAC_SetWaveSawtoothPolarity
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  Polarity This parameter can be one of the following values:
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_DECREMENT
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_INCREMENT
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothPolarity(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->STR1,
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BITOFFSET_POS) 
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              DAC_REG_STRX_REGOFFSET_MASK_POSBIT0);
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg,
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STR1_STDIR1,
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              Polarity);
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation polarity.
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STDIR1         LL_DAC_GetWaveSawtoothPolarity\n
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STDIR2         LL_DAC_GetWaveSawtoothPolarity
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_DECREMENT
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_INCREMENT
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothPolarity(const DAC_TypeDef *DACx, uint32_t DAC_Chann
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->STR1,
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BITOFFSET
ARM GAS  /tmp/ccA1EUYa.s 			page 374


1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    & DAC_REG_STRX_REGOFFSET_MASK_POSBIT0);
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t) READ_BIT(*preg, DAC_STR1_STDIR1);
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation reset data.
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STRSTDATA1     LL_DAC_SetWaveSawtoothResetData\n
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STRSTDATA2     LL_DAC_SetWaveSawtoothResetData
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  ResetData This parameter is the sawtooth reset value.
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Range is from 0 to DAC full range 4095 (0xFFF)
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothResetData(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint3
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->STR1,
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BITOFFSET_POS) 
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              DAC_REG_STRX_REGOFFSET_MASK_POSBIT0);
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg,
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STR1_STRSTDATA1,
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ResetData << DAC_STR1_STRSTDATA1_Pos);
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation reset data.
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STRSTDATA1     LL_DAC_GetWaveSawtoothResetData\n
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STRSTDATA2     LL_DAC_GetWaveSawtoothResetData
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value is the sawtooth reset value.
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Range is from 0 to DAC full range 4095 (0xFFF)
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothResetData(const DAC_TypeDef *DACx, uint32_t DAC_Chan
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->STR1,
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BITOFFSET
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    & DAC_REG_STRX_REGOFFSET_MASK_POSBIT0);
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(*preg, DAC_STR1_STRSTDATA1) >> DAC_STR1_STRSTDATA1_Pos);
ARM GAS  /tmp/ccA1EUYa.s 			page 375


1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sawtooth waveform generation step data.
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STINCDATA1     LL_DAC_SetWaveSawtoothStepData\n
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STINCDATA2     LL_DAC_SetWaveSawtoothStepData
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  StepData This parameter is the sawtooth step value.
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         12.4 bit format, unsigned: 12 bits exponent / 4 bits mantissa
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value step is 1/16 = 0.0625
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value range is 0.0000 to 4095.9375 (0xFFF.F)
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothStepData(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->STR1,
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BITOFFSET_POS) 
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              DAC_REG_STRX_REGOFFSET_MASK_POSBIT0);
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg,
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STR1_STINCDATA1,
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              StepData << DAC_STR1_STINCDATA1_Pos);
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation step data.
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STINCDATA1     LL_DAC_GetWaveSawtoothStepData\n
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STINCDATA2     LL_DAC_GetWaveSawtoothStepData
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value is the sawtooth step value.
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         12.4 bit format, unsigned: 12 bits exponent / 4 bits mantissa
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value step is 1/16 = 0.0625
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value range is 0.0000 to 4095.9375 (0xFFF.F)
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothStepData(const DAC_TypeDef *DACx, uint32_t DAC_Chann
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->STR1,
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BITOFFSET
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    & DAC_REG_STRX_REGOFFSET_MASK_POSBIT0);
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 376


1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(*preg, DAC_STR1_STINCDATA1) >> DAC_STR1_STINCDATA1_Pos);
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sawtooth waveform generation reset trigger source.
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STRSTTRIGSEL1  LL_DAC_SetWaveSawtoothResetTriggerSource\n
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STRSTTRIGSEL2  LL_DAC_SetWaveSawtoothResetTriggerSource
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriggerSource This parameter can be one of the following values:
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothResetTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Chann
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                               uint32_t TriggerSource)
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->STMODR,
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STMODR_STRSTTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (((TriggerSource >> DAC_CR_TSEL1_Pos) << DAC_STMODR_STRSTTRIGSEL1_Pos)
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****               << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)));
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 377


1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation reset trigger source.
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STRSTTRIGSEL1  LL_DAC_GetWaveSawtoothResetTriggerSource\n
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STRSTTRIGSEL2  LL_DAC_GetWaveSawtoothResetTriggerSource
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothResetTriggerSource(const DAC_TypeDef *DACx, uint32_t
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)((READ_BIT(DACx->STMODR,
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                               DAC_STMODR_STRSTTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                              )
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                      >> (DAC_STMODR_STRSTTRIGSEL1_Pos + (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     ) << DAC_CR_TSEL1_Pos);
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation step trigger source.
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
ARM GAS  /tmp/ccA1EUYa.s 			page 378


1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STINCTRIGSEL1  LL_DAC_SetWaveSawtoothStepTriggerSource\n
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STINCTRIGSEL2  LL_DAC_SetWaveSawtoothStepTriggerSource
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriggerSource This parameter can be one of the following values:
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE10
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG1      (3)
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG2      (3)
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG3      (3)
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG4      (3)
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG5      (3)
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG6      (3)
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter not available on all devices.
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothStepTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Channe
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                              uint32_t TriggerSource)
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->STMODR,
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STMODR_STINCTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (((TriggerSource >> DAC_CR_TSEL1_Pos) << DAC_STMODR_STINCTRIGSEL1_Pos)
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****               << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ));
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation step trigger source.
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STINCTRIGSEL1  LL_DAC_GetWaveSawtoothStepTriggerSource\n
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STINCTRIGSEL2  LL_DAC_GetWaveSawtoothStepTriggerSource
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
ARM GAS  /tmp/ccA1EUYa.s 			page 379


1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE10
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG1      (3)
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG2      (3)
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG3      (3)
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG4      (3)
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG5      (3)
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG6      (3)
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter not available on all devices.
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothStepTriggerSource(const DAC_TypeDef *DACx, uint32_t 
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)((READ_BIT(DACx->STMODR,
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                               DAC_STMODR_STINCTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                              )
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                      >> (DAC_STMODR_STINCTRIGSEL1_Pos + (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     ) << DAC_CR_TSEL1_Pos);
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output for the selected DAC channel.
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This function set several features:
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - mode normal or sample-and-hold
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - buffer
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - connection to GPIO or internal path.
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         These features can also be set individually using
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         dedicated functions:
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - @ref LL_DAC_SetOutputBuffer()
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - @ref LL_DAC_SetOutputMode()
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - @ref LL_DAC_SetOutputConnection()
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, output connection depends on output mode
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (normal or sample and hold) and output buffer state.
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to internal path and output buffer
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is enabled (whatever output mode):
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to GPIO pin
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to GPIO pin, output buffer
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is disabled, output mode set to sample and hold:
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to internal path
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Mode sample-and-hold requires an external capacitor
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         to be connected between DAC channel output and ground.
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Capacitor value depends on load on DAC channel output and
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample-and-hold timings configured.
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         As indication, capacitor typical value is 100nF
ARM GAS  /tmp/ccA1EUYa.s 			page 380


1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (refer to device datasheet, parameter "CSH").
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_ConfigOutput\n
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_ConfigOutput
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputMode This parameter can be one of the following values:
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_NORMAL
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputBuffer This parameter can be one of the following values:
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_ENABLE
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_DISABLE
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputConnection This parameter can be one of the following values:
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_GPIO
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_INTERNAL
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_ConfigOutput(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t OutputMo
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                          uint32_t OutputBuffer, uint32_t OutputConnection)
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (DAC_MCR_MODE1_2 | DAC_MCR_MODE1_1 | DAC_MCR_MODE1_0) << (DAC_Channel & DAC_CR_CHX_BIT
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (OutputMode | OutputBuffer | OutputConnection) << (DAC_Channel & DAC_CR_CHX_BITOFFSET_
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output mode normal or sample-and-hold
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Mode sample-and-hold requires an external capacitor
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         to be connected between DAC channel output and ground.
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Capacitor value depends on load on DAC channel output and
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample-and-hold timings configured.
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         As indication, capacitor typical value is 100nF
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (refer to device datasheet, parameter "CSH").
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_SetOutputMode\n
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_SetOutputMode
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputMode This parameter can be one of the following values:
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_NORMAL
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetOutputMode(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t OutputM
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (uint32_t)DAC_MCR_MODE1_2 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              OutputMode << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
ARM GAS  /tmp/ccA1EUYa.s 			page 381


1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the output mode normal or sample-and-hold for the selected DAC channel.
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_GetOutputMode\n
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_GetOutputMode
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_NORMAL
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetOutputMode(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, (uint32_t)DAC_MCR_MODE1_2 << (DAC_Channel & DAC_CR_CHX_BITO
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output buffer for the selected DAC channel.
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, when buffer is enabled, its offset can be
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         trimmed: factory calibration default values can be
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         replaced by user trimming values, using function
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @ref LL_DAC_SetTrimmingValue().
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_SetOutputBuffer\n
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_SetOutputBuffer
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputBuffer This parameter can be one of the following values:
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_ENABLE
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_DISABLE
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetOutputBuffer(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Outpu
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (uint32_t)DAC_MCR_MODE1_1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              OutputBuffer << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the output buffer state for the selected DAC channel.
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_GetOutputBuffer\n
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_GetOutputBuffer
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
ARM GAS  /tmp/ccA1EUYa.s 			page 382


1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_ENABLE
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_DISABLE
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetOutputBuffer(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, (uint32_t)DAC_MCR_MODE1_1 << (DAC_Channel & DAC_CR_CHX_BITO
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output connection for the selected DAC channel.
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, output connection depends on output mode (normal or
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample and hold) and output buffer state.
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to internal path and output buffer
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is enabled (whatever output mode):
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to GPIO pin
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to GPIO pin, output buffer
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is disabled, output mode set to sample and hold:
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to internal path
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_SetOutputConnection\n
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_SetOutputConnection
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputConnection This parameter can be one of the following values:
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_GPIO
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_INTERNAL
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetOutputConnection(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t O
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (uint32_t)DAC_MCR_MODE1_0 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              OutputConnection << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the output connection for the selected DAC channel.
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, output connection depends on output mode (normal or
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample and hold) and output buffer state.
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to internal path and output buffer
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is enabled (whatever output mode):
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to GPIO pin
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
ARM GAS  /tmp/ccA1EUYa.s 			page 383


1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to GPIO pin, output buffer
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is disabled, output mode set to sample and hold:
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to internal path
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_GetOutputConnection\n
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_GetOutputConnection
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_GPIO
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_INTERNAL
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetOutputConnection(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, (uint32_t)DAC_MCR_MODE1_0 << (DAC_Channel & DAC_CR_CHX_BITO
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sample-and-hold timing for the selected DAC channel:
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample time
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Sample time must be set when DAC channel is disabled
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         or during DAC operation when DAC channel flag BWSTx is reset,
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         otherwise the setting is ignored.
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Check BWSTx flag state using function "LL_DAC_IsActiveFlag_BWSTx()".
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHSR1    TSAMPLE1       LL_DAC_SetSampleAndHoldSampleTime\n
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHSR2    TSAMPLE2       LL_DAC_SetSampleAndHoldSampleTime
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  SampleTime Value between Min_Data=0x000 and Max_Data=0x3FF
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSampleAndHoldSampleTime(DAC_TypeDef *DACx, uint32_t DAC_Channel, uin
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->SHSR1, (DAC_Channel >> DAC_REG_SHSRX_REGOFFSET_B
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              & DAC_REG_SHSRX_REGOFFSET_MASK_POSBIT0);
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg, DAC_SHSR1_TSAMPLE1, SampleTime);
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sample-and-hold timing for the selected DAC channel:
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample time
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHSR1    TSAMPLE1       LL_DAC_GetSampleAndHoldSampleTime\n
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHSR2    TSAMPLE2       LL_DAC_GetSampleAndHoldSampleTime
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
ARM GAS  /tmp/ccA1EUYa.s 			page 384


1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSampleAndHoldSampleTime(const DAC_TypeDef *DACx, uint32_t DAC_Ch
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->SHSR1, (DAC_Channel >> DAC_REG_SHSRX_REGOF
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    & DAC_REG_SHSRX_REGOFFSET_MASK_POSBIT0);
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t) READ_BIT(*preg, DAC_SHSR1_TSAMPLE1);
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sample-and-hold timing for the selected DAC channel:
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         hold time
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHHR     THOLD1         LL_DAC_SetSampleAndHoldHoldTime\n
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHHR     THOLD2         LL_DAC_SetSampleAndHoldHoldTime
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  HoldTime Value between Min_Data=0x000 and Max_Data=0x3FF
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSampleAndHoldHoldTime(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint3
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->SHHR,
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_SHHR_THOLD1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              HoldTime << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sample-and-hold timing for the selected DAC channel:
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         hold time
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHHR     THOLD1         LL_DAC_GetSampleAndHoldHoldTime\n
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHHR     THOLD2         LL_DAC_GetSampleAndHoldHoldTime
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSampleAndHoldHoldTime(const DAC_TypeDef *DACx, uint32_t DAC_Chan
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->SHHR, DAC_SHHR_THOLD1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MAS
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
ARM GAS  /tmp/ccA1EUYa.s 			page 385


1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sample-and-hold timing for the selected DAC channel:
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         refresh time
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHRR     TREFRESH1      LL_DAC_SetSampleAndHoldRefreshTime\n
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHRR     TREFRESH2      LL_DAC_SetSampleAndHoldRefreshTime
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  RefreshTime Value between Min_Data=0x00 and Max_Data=0xFF
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSampleAndHoldRefreshTime(DAC_TypeDef *DACx, uint32_t DAC_Channel, ui
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->SHRR,
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_SHRR_TREFRESH1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              RefreshTime << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sample-and-hold timing for the selected DAC channel:
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         refresh time
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHRR     TREFRESH1      LL_DAC_GetSampleAndHoldRefreshTime\n
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHRR     TREFRESH2      LL_DAC_GetSampleAndHoldRefreshTime
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSampleAndHoldRefreshTime(const DAC_TypeDef *DACx, uint32_t DAC_C
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->SHRR, DAC_SHRR_TREFRESH1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the signed format for the selected DAC channel.
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, signed format can be used to inject
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Q1.15, Q1.11, Q1.7 signed format data to DAC.
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Ex when using 12bits data format (Q1.11 is used):
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0x800 will output 0v level
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0xFFF will output mid-scale level
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0x000 will output mid-scale level
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0x7FF will output full-scale level
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      SINFORMAT1     LL_DAC_SetSignedFormat\n
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      SINFORMAT2     LL_DAC_SetSignedFormat
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
ARM GAS  /tmp/ccA1EUYa.s 			page 386


1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  SignedFormat This parameter can be one of the following values:
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_ENABLE
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_DISABLE
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSignedFormat(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Signe
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_MCR_SINFORMAT1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              SignedFormat << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the signed format state for the selected DAC channel.
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      SINFORMAT1     LL_DAC_GetSignedFormat\n
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      SINFORMAT2     LL_DAC_GetSignedFormat
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_ENABLE
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_DISABLE
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSignedFormat(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, DAC_MCR_SINFORMAT1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_M
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_DMA_Management DMA Management
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC DMA transfer request of the selected channel.
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   To configure DMA source address (peripheral address),
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         use function @ref LL_DAC_DMA_GetRegAddr().
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       DMAEN1         LL_DAC_EnableDMAReq\n
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       DMAEN2         LL_DAC_EnableDMAReq
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
ARM GAS  /tmp/ccA1EUYa.s 			page 387


1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_EnableDMAReq(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->CR,
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC DMA transfer request of the selected channel.
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   To configure DMA source address (peripheral address),
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         use function @ref LL_DAC_DMA_GetRegAddr().
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       DMAEN1         LL_DAC_DisableDMAReq\n
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       DMAEN2         LL_DAC_DisableDMAReq
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_DisableDMAReq(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->CR,
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC DMA transfer request state of the selected channel.
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC DMA transfer request is disabled, 1: DAC DMA transfer request is enabled)
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       DMAEN1         LL_DAC_IsDMAReqEnabled\n
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       DMAEN2         LL_DAC_IsDMAReqEnabled
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsDMAReqEnabled(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->CR,
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC DMA Double data mode of the selected channel.
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      DMADOUBLE1     LL_DAC_EnableDMADoubleDataMode\n
ARM GAS  /tmp/ccA1EUYa.s 			page 388


1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      DMADOUBLE2     LL_DAC_EnableDMADoubleDataMode
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_EnableDMADoubleDataMode(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->MCR,
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC DMA Double data mode of the selected channel.
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      DMADOUBLE1     LL_DAC_DisableDMADoubleDataMode\n
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      DMADOUBLE2     LL_DAC_DisableDMADoubleDataMode
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_DisableDMADoubleDataMode(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->MCR,
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC DMA double data mode state of the selected channel.
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC DMA double data mode is disabled, 1: DAC DMA double data mode is enabled)
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      DMADOUBLE1     LL_DAC_IsDMADoubleDataModeEnabled\n
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      DMADOUBLE2     LL_DAC_IsDMADoubleDataModeEnabled
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsDMADoubleDataModeEnabled(const DAC_TypeDef *DACx, uint32_t DAC_Ch
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->MCR,
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 389


1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Function to help to configure DMA transfer to DAC: retrieve the
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DAC register address from DAC instance and a list of DAC registers
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         intended to be used (most commonly) with DMA transfer.
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   These DAC registers are data holding registers:
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         when DAC conversion is requested, DAC generates a DMA transfer
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         request to have data available in DAC data holding registers.
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function "LL_DMA_ConfigAddresses()".
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example:
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DMA_CHANNEL_1,
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  (uint32_t)&< array or variable >,
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DAC_DMA_GetRegAddr(DAC1, LL_DAC_CHANNEL_1,
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED),
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll DHR12R1  DACC1DHR       LL_DAC_DMA_GetRegAddr\n
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12L1  DACC1DHR       LL_DAC_DMA_GetRegAddr\n
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR8R1   DACC1DHR       LL_DAC_DMA_GetRegAddr\n
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12R2  DACC2DHR       LL_DAC_DMA_GetRegAddr\n
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12L2  DACC2DHR       LL_DAC_DMA_GetRegAddr\n
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR8R2   DACC2DHR       LL_DAC_DMA_GetRegAddr
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  Register This parameter can be one of the following values:
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_DMA_REG_DATA_12BITS_LEFT_ALIGNED
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_DMA_REG_DATA_8BITS_RIGHT_ALIGNED
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval DAC register address
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_DMA_GetRegAddr(const DAC_TypeDef *DACx, uint32_t DAC_Channel, uint3
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   /* Retrieve address of register DHR12Rx, DHR12Lx or DHR8Rx depending on     */
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   /* DAC channel selected.                                                    */
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((uint32_t)(__DAC_PTR_REG_OFFSET((DACx)->DHR12R1, ((DAC_Channel >> (Register & 0x1FUL))
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                             & DAC_REG_DHR_REGOFFSET_MASK_POSBIT0)))
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_Operation Operation on DAC channels
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC selected channel.
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       EN1            LL_DAC_Enable\n
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       EN2            LL_DAC_Enable
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   After enable from off state, DAC channel requires a delay
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for output voltage to reach accuracy +/- 1 LSB.
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Refer to device datasheet, parameter "tWAKEUP".
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
ARM GAS  /tmp/ccA1EUYa.s 			page 390


2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_Enable(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 2567              		.loc 5 2053 1
 2568              		.cfi_startproc
 2569              		@ args = 0, pretend = 0, frame = 8
 2570              		@ frame_needed = 1, uses_anonymous_args = 0
 2571              		@ link register save eliminated.
 2572 0000 80B4     		push	{r7}
 2573              	.LCFI276:
 2574              		.cfi_def_cfa_offset 4
 2575              		.cfi_offset 7, -4
 2576 0002 83B0     		sub	sp, sp, #12
 2577              	.LCFI277:
 2578              		.cfi_def_cfa_offset 16
 2579 0004 00AF     		add	r7, sp, #0
 2580              	.LCFI278:
 2581              		.cfi_def_cfa_register 7
 2582 0006 7860     		str	r0, [r7, #4]
 2583 0008 3960     		str	r1, [r7]
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->CR,
 2584              		.loc 5 2054 3
 2585 000a 7B68     		ldr	r3, [r7, #4]
 2586 000c 1A68     		ldr	r2, [r3]
 2587 000e 3B68     		ldr	r3, [r7]
 2588 0010 03F01003 		and	r3, r3, #16
 2589 0014 0121     		movs	r1, #1
 2590 0016 01FA03F3 		lsl	r3, r1, r3
 2591 001a 1A43     		orrs	r2, r2, r3
 2592 001c 7B68     		ldr	r3, [r7, #4]
 2593 001e 1A60     		str	r2, [r3]
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 2594              		.loc 5 2056 1
 2595 0020 00BF     		nop
 2596 0022 0C37     		adds	r7, r7, #12
 2597              	.LCFI279:
 2598              		.cfi_def_cfa_offset 4
 2599 0024 BD46     		mov	sp, r7
 2600              	.LCFI280:
 2601              		.cfi_def_cfa_register 13
 2602              		@ sp needed
 2603 0026 5DF8047B 		ldr	r7, [sp], #4
 2604              	.LCFI281:
 2605              		.cfi_restore 7
 2606              		.cfi_def_cfa_offset 0
 2607 002a 7047     		bx	lr
 2608              		.cfi_endproc
 2609              	.LFE1168:
 2611              		.section	.text.LL_DAC_IsEnabled,"ax",%progbits
ARM GAS  /tmp/ccA1EUYa.s 			page 391


 2612              		.align	1
 2613              		.syntax unified
 2614              		.thumb
 2615              		.thumb_func
 2616              		.fpu fpv4-sp-d16
 2618              	LL_DAC_IsEnabled:
 2619              	.LFB1170:
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC selected channel.
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       EN1            LL_DAC_Disable\n
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       EN2            LL_DAC_Disable
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_Disable(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->CR,
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC enable state of the selected channel.
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC channel is disabled, 1: DAC channel is enabled)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       EN1            LL_DAC_IsEnabled\n
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       EN2            LL_DAC_IsEnabled
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsEnabled(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 2620              		.loc 5 2092 1
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 8
 2623              		@ frame_needed = 1, uses_anonymous_args = 0
 2624              		@ link register save eliminated.
 2625 0000 80B4     		push	{r7}
 2626              	.LCFI282:
 2627              		.cfi_def_cfa_offset 4
 2628              		.cfi_offset 7, -4
 2629 0002 83B0     		sub	sp, sp, #12
 2630              	.LCFI283:
 2631              		.cfi_def_cfa_offset 16
 2632 0004 00AF     		add	r7, sp, #0
 2633              	.LCFI284:
ARM GAS  /tmp/ccA1EUYa.s 			page 392


 2634              		.cfi_def_cfa_register 7
 2635 0006 7860     		str	r0, [r7, #4]
 2636 0008 3960     		str	r1, [r7]
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->CR,
 2637              		.loc 5 2093 12
 2638 000a 7B68     		ldr	r3, [r7, #4]
 2639 000c 1A68     		ldr	r2, [r3]
 2640 000e 3B68     		ldr	r3, [r7]
 2641 0010 03F01003 		and	r3, r3, #16
 2642 0014 0121     		movs	r1, #1
 2643 0016 01FA03F3 		lsl	r3, r1, r3
 2644 001a 1A40     		ands	r2, r2, r3
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
 2645              		.loc 5 2095 43
 2646 001c 3B68     		ldr	r3, [r7]
 2647 001e 03F01003 		and	r3, r3, #16
 2648              		.loc 5 2095 27
 2649 0022 0121     		movs	r1, #1
 2650 0024 01FA03F3 		lsl	r3, r1, r3
 2651              		.loc 5 2095 80
 2652 0028 9A42     		cmp	r2, r3
 2653 002a 01D1     		bne	.L109
 2654              		.loc 5 2095 80 is_stmt 0 discriminator 1
 2655 002c 0123     		movs	r3, #1
 2656 002e 00E0     		b	.L111
 2657              	.L109:
 2658              		.loc 5 2095 80 discriminator 2
 2659 0030 0023     		movs	r3, #0
 2660              	.L111:
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 2661              		.loc 5 2096 1 is_stmt 1 discriminator 5
 2662 0032 1846     		mov	r0, r3
 2663 0034 0C37     		adds	r7, r7, #12
 2664              	.LCFI285:
 2665              		.cfi_def_cfa_offset 4
 2666 0036 BD46     		mov	sp, r7
 2667              	.LCFI286:
 2668              		.cfi_def_cfa_register 13
 2669              		@ sp needed
 2670 0038 5DF8047B 		ldr	r7, [sp], #4
 2671              	.LCFI287:
 2672              		.cfi_restore 7
 2673              		.cfi_def_cfa_offset 0
 2674 003c 7047     		bx	lr
 2675              		.cfi_endproc
 2676              	.LFE1170:
 2678              		.section	.text.LL_DAC_TrigSWConversion,"ax",%progbits
 2679              		.align	1
 2680              		.syntax unified
 2681              		.thumb
 2682              		.thumb_func
 2683              		.fpu fpv4-sp-d16
 2685              	LL_DAC_TrigSWConversion:
 2686              	.LFB1175:
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
ARM GAS  /tmp/ccA1EUYa.s 			page 393


2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC ready for conversion state of the selected channel.
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC channel is not ready, 1: DAC channel is ready)
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SR       DAC1RDY        LL_DAC_IsReady\n
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SR       DAC2RDY        LL_DAC_IsReady
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsReady(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->SR,
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_SR_DAC1RDY << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_SR_DAC1RDY << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC trigger of the selected channel.
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   - If DAC trigger is disabled, DAC conversion is performed
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           automatically once the data holding register is updated,
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           using functions "LL_DAC_ConvertData{8; 12}{Right; Left} Aligned()":
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_ConvertData12RightAligned(), ...
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - If DAC trigger is enabled, DAC conversion is performed
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           only when a hardware of software trigger event is occurring.
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           Select trigger source using
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           function @ref LL_DAC_SetTriggerSource().
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TEN1           LL_DAC_EnableTrigger\n
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TEN2           LL_DAC_EnableTrigger
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_EnableTrigger(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->CR,
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_CR_TEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC trigger of the selected channel.
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TEN1           LL_DAC_DisableTrigger\n
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TEN2           LL_DAC_DisableTrigger
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
ARM GAS  /tmp/ccA1EUYa.s 			page 394


2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_DisableTrigger(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->CR,
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_CR_TEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC trigger state of the selected channel.
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC trigger is disabled, 1: DAC trigger is enabled)
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TEN1           LL_DAC_IsTriggerEnabled\n
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TEN2           LL_DAC_IsTriggerEnabled
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsTriggerEnabled(const DAC_TypeDef *DACx, uint32_t DAC_Channel)
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->CR,
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_CR_TEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_CR_TEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Trig DAC conversion by software for the selected DAC channel.
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Preliminarily, DAC trigger must be set to software trigger
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         using function
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_Init()
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_SetTriggerSource()
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_SetWaveSawtoothResetTriggerSource() (1)
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         with parameter "LL_DAC_TRIGGER_SOFTWARE".
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and DAC trigger must be enabled using
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_EnableTrigger().
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (1) In case, Sawtooth wave generation has been configured.
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For devices featuring DAC with 2 channels: this function
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         can perform a SW start of both DAC channels simultaneously.
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Two channels can be selected as parameter.
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example: (LL_DAC_CHANNEL_1 | LL_DAC_CHANNEL_2)
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SWTRIGR  SWTRIG1        LL_DAC_TrigSWConversion\n
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SWTRIGR  SWTRIG2        LL_DAC_TrigSWConversion
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel  This parameter can a combination of the following values:
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 395


2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_TrigSWConversion(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 2687              		.loc 5 2214 1
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 8
 2690              		@ frame_needed = 1, uses_anonymous_args = 0
 2691              		@ link register save eliminated.
 2692 0000 80B4     		push	{r7}
 2693              	.LCFI288:
 2694              		.cfi_def_cfa_offset 4
 2695              		.cfi_offset 7, -4
 2696 0002 83B0     		sub	sp, sp, #12
 2697              	.LCFI289:
 2698              		.cfi_def_cfa_offset 16
 2699 0004 00AF     		add	r7, sp, #0
 2700              	.LCFI290:
 2701              		.cfi_def_cfa_register 7
 2702 0006 7860     		str	r0, [r7, #4]
 2703 0008 3960     		str	r1, [r7]
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->SWTRIGR,
 2704              		.loc 5 2215 3
 2705 000a 7B68     		ldr	r3, [r7, #4]
 2706 000c 5A68     		ldr	r2, [r3, #4]
 2707 000e 3B68     		ldr	r3, [r7]
 2708 0010 03F00303 		and	r3, r3, #3
 2709 0014 1A43     		orrs	r2, r2, r3
 2710 0016 7B68     		ldr	r3, [r7, #4]
 2711 0018 5A60     		str	r2, [r3, #4]
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           (DAC_Channel & DAC_SWTR_CHX_MASK));
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 2712              		.loc 5 2217 1
 2713 001a 00BF     		nop
 2714 001c 0C37     		adds	r7, r7, #12
 2715              	.LCFI291:
 2716              		.cfi_def_cfa_offset 4
 2717 001e BD46     		mov	sp, r7
 2718              	.LCFI292:
 2719              		.cfi_def_cfa_register 13
 2720              		@ sp needed
 2721 0020 5DF8047B 		ldr	r7, [sp], #4
 2722              	.LCFI293:
 2723              		.cfi_restore 7
 2724              		.cfi_def_cfa_offset 0
 2725 0024 7047     		bx	lr
 2726              		.cfi_endproc
 2727              	.LFE1175:
 2729              		.section	.text.LL_DAC_ConvertData12LeftAligned,"ax",%progbits
 2730              		.align	1
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2734              		.fpu fpv4-sp-d16
 2736              	LL_DAC_ConvertData12LeftAligned:
 2737              	.LFB1178:
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Trig DAC conversion by secondary software trigger for the selected DAC channel.
ARM GAS  /tmp/ccA1EUYa.s 			page 396


2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Preliminarily, DAC secondary trigger must be set to software trigger
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         using function
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_Init()
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_SetWaveSawtoothStepTriggerSource() (1)
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         with parameter "LL_DAC_TRIGGER_SOFTWARE".
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and DAC trigger must be enabled using
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_EnableTrigger().
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (1) In case, Sawtooth wave generation has been configured.
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For devices featuring DAC with 2 channels: this function
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         can perform a SW start of both DAC channels simultaneously.
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Two channels can be selected as parameter.
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example: (LL_DAC_CHANNEL_1 | LL_DAC_CHANNEL_2)
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SWTRIGR  SWTRIGB1       LL_DAC_TrigSWConversion2\n
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SWTRIGR  SWTRIGB2       LL_DAC_TrigSWConversion2
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel  This parameter can a combination of the following values:
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_TrigSWConversion2(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->SWTRIGR,
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           (DAC_Channel & DAC_SWTRB_CHX_MASK));
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the data to be loaded in the data holding register
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         in format 12 bits left alignment (LSB aligned on bit 0),
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll DHR12R1  DACC1DHR       LL_DAC_ConvertData12RightAligned\n
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12R2  DACC2DHR       LL_DAC_ConvertData12RightAligned
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  Data Value between Min_Data=0x000 and Max_Data=0xFFF
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_ConvertData12RightAligned(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->DHR12R1, (DAC_Channel >> DAC_REG_DHR12RX_REGOFFS
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              & DAC_REG_DHR_REGOFFSET_MASK_POSBIT0);
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg, DAC_DHR12R1_DACC1DHR, Data);
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the data to be loaded in the data holding register
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         in format 12 bits left alignment (MSB aligned on bit 15),
ARM GAS  /tmp/ccA1EUYa.s 			page 397


2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll DHR12L1  DACC1DHR       LL_DAC_ConvertData12LeftAligned\n
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12L2  DACC2DHR       LL_DAC_ConvertData12LeftAligned
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  Data Value between Min_Data=0x000 and Max_Data=0xFFF
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_ConvertData12LeftAligned(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint3
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 2738              		.loc 5 2292 1
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 24
 2741              		@ frame_needed = 1, uses_anonymous_args = 0
 2742              		@ link register save eliminated.
 2743 0000 80B4     		push	{r7}
 2744              	.LCFI294:
 2745              		.cfi_def_cfa_offset 4
 2746              		.cfi_offset 7, -4
 2747 0002 87B0     		sub	sp, sp, #28
 2748              	.LCFI295:
 2749              		.cfi_def_cfa_offset 32
 2750 0004 00AF     		add	r7, sp, #0
 2751              	.LCFI296:
 2752              		.cfi_def_cfa_register 7
 2753 0006 F860     		str	r0, [r7, #12]
 2754 0008 B960     		str	r1, [r7, #8]
 2755 000a 7A60     		str	r2, [r7, #4]
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->DHR12R1, (DAC_Channel >> DAC_REG_DHR12LX_REGOFFS
 2756              		.loc 5 2293 25
 2757 000c FB68     		ldr	r3, [r7, #12]
 2758 000e 0833     		adds	r3, r3, #8
 2759 0010 1A46     		mov	r2, r3
 2760 0012 BB68     		ldr	r3, [r7, #8]
 2761 0014 1B0D     		lsrs	r3, r3, #20
 2762 0016 9B00     		lsls	r3, r3, #2
 2763 0018 03F03C03 		and	r3, r3, #60
 2764 001c 1344     		add	r3, r3, r2
 2765              		.loc 5 2293 18
 2766 001e 7B61     		str	r3, [r7, #20]
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              & DAC_REG_DHR_REGOFFSET_MASK_POSBIT0);
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg, DAC_DHR12L1_DACC1DHR, Data);
 2767              		.loc 5 2296 3
 2768 0020 7B69     		ldr	r3, [r7, #20]
 2769 0022 1B68     		ldr	r3, [r3]
 2770 0024 23F47F43 		bic	r3, r3, #65280
 2771 0028 23F0F003 		bic	r3, r3, #240
 2772 002c 7A68     		ldr	r2, [r7, #4]
 2773 002e 1A43     		orrs	r2, r2, r3
 2774 0030 7B69     		ldr	r3, [r7, #20]
 2775 0032 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccA1EUYa.s 			page 398


2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 2776              		.loc 5 2297 1
 2777 0034 00BF     		nop
 2778 0036 1C37     		adds	r7, r7, #28
 2779              	.LCFI297:
 2780              		.cfi_def_cfa_offset 4
 2781 0038 BD46     		mov	sp, r7
 2782              	.LCFI298:
 2783              		.cfi_def_cfa_register 13
 2784              		@ sp needed
 2785 003a 5DF8047B 		ldr	r7, [sp], #4
 2786              	.LCFI299:
 2787              		.cfi_restore 7
 2788              		.cfi_def_cfa_offset 0
 2789 003e 7047     		bx	lr
 2790              		.cfi_endproc
 2791              	.LFE1178:
 2793              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
 2794              		.align	2
 2797              	CHANNEL_OFFSET_TAB:
 2798 0000 081C3044 		.ascii	"\010\0340DXl"
 2798      586C
 2799              		.section	.text.LL_COMP_Enable,"ax",%progbits
 2800              		.align	1
 2801              		.syntax unified
 2802              		.thumb
 2803              		.thumb_func
 2804              		.fpu fpv4-sp-d16
 2806              	LL_COMP_Enable:
 2807              	.LFB1362:
 2808              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @file    stm32g4xx_ll_comp.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief   Header file of COMP LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #ifndef STM32G4xx_LL_COMP_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define STM32G4xx_LL_COMP_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 399


  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL COMP
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Private macros ------------------------------------------------------------*/
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_Private_Macros COMP Private Macros
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Exported types ------------------------------------------------------------*/
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #if defined(USE_FULL_LL_DRIVER)
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_ES_INIT COMP Exported Init structure
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Structure definition of some features of COMP instance.
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** typedef struct
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   uint32_t InputPlus;                   /*!< Set comparator input plus (non-inverting input).
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This parameter can be a value of @ref COMP_LL_EC_INPUT
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This feature can be modified afterwards using unitary 
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              @ref LL_COMP_SetInputPlus(). */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   uint32_t InputMinus;                  /*!< Set comparator input minus (inverting input).
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This parameter can be a value of @ref COMP_LL_EC_INPUT
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This feature can be modified afterwards using unitary 
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                               @ref LL_COMP_SetInputMinus(). */
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   uint32_t InputHysteresis;             /*!< Set comparator hysteresis mode of the input minus.
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This parameter can be a value of @ref COMP_LL_EC_INPUT
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This feature can be modified afterwards using unitary 
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              @ref LL_COMP_SetInputHysteresis(). */
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   uint32_t OutputPolarity;              /*!< Set comparator output polarity.
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This parameter can be a value of @ref COMP_LL_EC_OUTPU
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This feature can be modified afterwards using unitary 
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              @ref LL_COMP_SetOutputPolarity(). */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 400


  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   uint32_t OutputBlankingSource;        /*!< Set comparator blanking source.
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This parameter can be a value of @ref COMP_LL_EC_OUTPU
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              This feature can be modified afterwards using unitary 
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****                                              @ref LL_COMP_SetOutputBlankingSource(). */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** } LL_COMP_InitTypeDef;
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #endif /* USE_FULL_LL_DRIVER */
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Exported constants --------------------------------------------------------*/
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_Exported_Constants COMP Exported Constants
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_INPUT_PLUS Comparator inputs - Input plus (input non-inverting) selection
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_PLUS_IO1          (0x00000000UL)                          /*!< Comparator inp
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_PLUS_IO2          (COMP_CSR_INPSEL)                       /*!< Comparator inp
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_INPUT_MINUS Comparator inputs - Input minus (input inverting) selection
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_1_4VREFINT  (                                                          
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_1_2VREFINT  (                                        COMP_CSR_INMSEL_0 
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_3_4VREFINT  (                    COMP_CSR_INMSEL_1                     
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_VREFINT     (                    COMP_CSR_INMSEL_1 | COMP_CSR_INMSEL_0 
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC1_CH1    (COMP_CSR_INMSEL_2                     | COMP_CSR_INMSEL_0)
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC1_CH2    (COMP_CSR_INMSEL_2                     | COMP_CSR_INMSEL_0)
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC2_CH1    (COMP_CSR_INMSEL_2                     | COMP_CSR_INMSEL_0)
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC3_CH1    (COMP_CSR_INMSEL_2                                        )
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC3_CH2    (COMP_CSR_INMSEL_2                                        )
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC4_CH1    (COMP_CSR_INMSEL_2                                        )
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_DAC4_CH2    (COMP_CSR_INMSEL_2                                        )
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_IO1         (COMP_CSR_INMSEL_2 | COMP_CSR_INMSEL_1                    )
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_INPUT_MINUS_IO2         (COMP_CSR_INMSEL_2 | COMP_CSR_INMSEL_1 | COMP_CSR_INMSEL_0)
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_INPUT_HYSTERESIS Comparator input - Hysteresis
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_NONE         (0x00000000UL)                                       /*!< N
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_10MV         (                                    COMP_CSR_HYST_0) /*!< 
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_20MV         (                  COMP_CSR_HYST_1                  ) /*!< 
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_30MV         (                  COMP_CSR_HYST_1 | COMP_CSR_HYST_0) /*!< 
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_40MV         (COMP_CSR_HYST_2                                    ) /*!< 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_50MV         (COMP_CSR_HYST_2                   | COMP_CSR_HYST_0) /*!< 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_60MV         (COMP_CSR_HYST_2 | COMP_CSR_HYST_1                  ) /*!< 
ARM GAS  /tmp/ccA1EUYa.s 			page 401


 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_70MV         (COMP_CSR_HYST_2 | COMP_CSR_HYST_1 | COMP_CSR_HYST_0) /*!< 
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_LOW          LL_COMP_HYSTERESIS_10MV /*!< Hysteresis level low */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_MEDIUM       LL_COMP_HYSTERESIS_40MV /*!< Hysteresis level medium */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_HYSTERESIS_HIGH         LL_COMP_HYSTERESIS_70MV /*!< Hysteresis level high */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_OUTPUT_POLARITY Comparator output - Output polarity
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_OUTPUTPOL_NONINVERTED   (0x00000000UL)          /*!< COMP output polarity is not in
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_OUTPUTPOL_INVERTED      (COMP_CSR_POLARITY)     /*!< COMP output polarity is invert
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_OUTPUT_BLANKING_SOURCE Comparator output - Blanking source
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_NONE            (0x00000000UL)          /*!<Comparator output without b
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP1  (                                            COMP_CSR_B
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP2  (                                            COMP_CSR_B
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP3  (                                            COMP_CSR_B
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP4  (COMP_CSR_BLANKING_2                                   
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP5  (COMP_CSR_BLANKING_2                                   
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP6  (COMP_CSR_BLANKING_2                                   
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM1_OC5_COMP7  (                                            COMP_CSR_B
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM2_OC3_COMP1  (                      COMP_CSR_BLANKING_1             
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM2_OC3_COMP2  (                      COMP_CSR_BLANKING_1             
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM2_OC3_COMP5  (                                            COMP_CSR_B
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM2_OC4_COMP3  (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM2_OC4_COMP6  (                      COMP_CSR_BLANKING_1             
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM3_OC3_COMP1  (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM3_OC3_COMP2  (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM3_OC3_COMP3  (                      COMP_CSR_BLANKING_1             
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM3_OC3_COMP5  (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM3_OC3_COMP7  (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM3_OC4_COMP4  (                                            COMP_CSR_B
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP1  (COMP_CSR_BLANKING_2                                   
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP2  (COMP_CSR_BLANKING_2                                   
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP3  (COMP_CSR_BLANKING_2                                   
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP4  (                      COMP_CSR_BLANKING_1             
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP5  (                      COMP_CSR_BLANKING_1             
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP6  (                                            COMP_CSR_B
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM8_OC5_COMP7  (                      COMP_CSR_BLANKING_1             
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM15_OC1_COMP4 (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM15_OC2_COMP6 (                      COMP_CSR_BLANKING_1 | COMP_CSR_B
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM15_OC2_COMP7 (COMP_CSR_BLANKING_2                                   
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM20_OC5       (COMP_CSR_BLANKING_2 |                       COMP_CSR_B
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM15_OC1       (COMP_CSR_BLANKING_2 | COMP_CSR_BLANKING_1             
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_BLANKINGSRC_TIM4_OC3        (COMP_CSR_BLANKING_2 | COMP_CSR_BLANKING_1 | COMP_CSR_B
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 402


 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_OUTPUT_LEVEL Comparator output - Output level
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_OUTPUT_LEVEL_LOW        (0x00000000UL)          /*!< Comparator output level low (i
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_OUTPUT_LEVEL_HIGH       (0x00000001UL)          /*!< Comparator output level high (
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EC_HW_DELAYS  Definitions of COMP hardware constraints delays
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   Only COMP peripheral HW delays are defined in COMP LL driver driver,
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         not timeout values.
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         For details on delays values, refer to descriptions in source code
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         above each literal definition.
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Delay for comparator startup time.                                         */
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Note: Delay required to reach propagation delay specification.             */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* parameter "tSTART").                                                       */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Unit: us                                                                   */
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_DELAY_STARTUP_US          (  5UL) /*!< Delay for COMP startup time */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Delay for comparator voltage scaler stabilization time.                    */
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Note: Voltage scaler is used when selecting comparator input               */
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /*       based on VrefInt: VrefInt or subdivision of VrefInt.                 */
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* parameter "tSTART_SCALER").                                                */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Unit: us                                                                   */
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US ( 200UL) /*!< Delay for COMP voltage scaler stabilizat
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Exported macro ------------------------------------------------------------*/
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_Exported_Macros COMP Exported Macros
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EM_WRITE_READ Common write and read registers macro
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Write a value in COMP register
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  __INSTANCE__ comparator instance
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  __REG__ Register to be written
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  __VALUE__ Value to be written in the register
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VA
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 403


 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Read a value in COMP register
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  __INSTANCE__ comparator instance
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  __REG__ Register to be read
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval Register value
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** #define LL_COMP_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EM_HELPER_MACRO COMP helper macro
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /* Exported functions --------------------------------------------------------*/
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_Exported_Functions COMP Exported Functions
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EF_Configuration_comparator_inputs Configuration of comparator inputs
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Set comparator inputs minus (inverting) and plus (non-inverting).
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   In case of comparator input selected to be connected to IO:
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         GPIO pins are specific to each comparator instance.
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   On this STM32 series, scaler bridge is configurable:
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         to optimize power consumption, this function enables the
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         voltage scaler bridge only when required
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         (when selecting comparator input based on VrefInt: VrefInt or
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         subdivision of VrefInt).
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         - For scaler bridge power consumption values,
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           refer to device datasheet, parameter "IDDA(SCALER)".
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         - Voltage scaler requires a delay for voltage stabilization.
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           Refer to device datasheet, parameter "tSTART_SCALER".
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         - Scaler bridge is common for all comparator instances,
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           therefore if at least one of the comparator instance
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           is requiring the scaler bridge, it remains enabled.
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      INMSEL         LL_COMP_ConfigInputs\n
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      INPSEL         LL_COMP_ConfigInputs\n
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      BRGEN          LL_COMP_ConfigInputs\n
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      SCALEN         LL_COMP_ConfigInputs
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  InputMinus This parameter can be one of the following values:
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_1_4VREFINT
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_1_2VREFINT
ARM GAS  /tmp/ccA1EUYa.s 			page 404


 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_3_4VREFINT
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_VREFINT
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC1_CH1   (1,3,4)
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC1_CH2   (2,5)
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC2_CH1   (6,7)
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC3_CH1   (1,3)
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC3_CH2   (2,4)
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC4_CH1   (5,7)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC4_CH2   (6)
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         (a,b...) Only available for COMPa, COMPb...
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *                  For COMPx & DACx instances availability, please refer to datasheet
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_IO1
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_IO2
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  InputPlus This parameter can be one of the following values:
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_PLUS_IO1
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_PLUS_IO2
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_ConfigInputs(COMP_TypeDef *COMPx, uint32_t InputMinus, uint32_t InputP
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   MODIFY_REG(COMPx->CSR,
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****              COMP_CSR_INMSEL | COMP_CSR_INPSEL | COMP_CSR_SCALEN | COMP_CSR_BRGEN,
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****              InputMinus | InputPlus);
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Set comparator input plus (non-inverting).
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   In case of comparator input selected to be connected to IO:
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         GPIO pins are specific to each comparator instance.
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      INPSEL         LL_COMP_SetInputPlus
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  InputPlus This parameter can be one of the following values:
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_PLUS_IO1
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_PLUS_IO2
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_SetInputPlus(COMP_TypeDef *COMPx, uint32_t InputPlus)
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   MODIFY_REG(COMPx->CSR, COMP_CSR_INPSEL, InputPlus);
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Get comparator input plus (non-inverting).
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   In case of comparator input selected to be connected to IO:
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         GPIO pins are specific to each comparator instance.
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      INPSEL         LL_COMP_GetInputPlus
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval Returned value can be one of the following values:
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_PLUS_IO1
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_PLUS_IO2
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE uint32_t LL_COMP_GetInputPlus(const COMP_TypeDef *COMPx)
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   return (uint32_t)(READ_BIT(COMPx->CSR, COMP_CSR_INPSEL));
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 405


 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Set comparator input minus (inverting).
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   In case of comparator input selected to be connected to IO:
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         GPIO pins are specific to each comparator instance.
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   On this STM32 series, scaler bridge is configurable:
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         to optimize power consumption, this function enables the
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         voltage scaler bridge only when required
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         (when selecting comparator input based on VrefInt: VrefInt or
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         subdivision of VrefInt).
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         - For scaler bridge power consumption values,
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           refer to device datasheet, parameter "IDDA(SCALER)".
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         - Voltage scaler requires a delay for voltage stabilization.
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           Refer to device datasheet, parameter "tSTART_SCALER".
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         - Scaler bridge is common for all comparator instances,
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           therefore if at least one of the comparator instance
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *           is requiring the scaler bridge, it remains enabled.
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      INMSEL         LL_COMP_SetInputMinus\n
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      BRGEN          LL_COMP_SetInputMinus\n
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      SCALEN         LL_COMP_SetInputMinus
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  InputMinus This parameter can be one of the following values:
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_1_4VREFINT
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_1_2VREFINT
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_3_4VREFINT
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_VREFINT
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC1_CH1   (1,3,4)
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC1_CH2   (2,5)
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC2_CH1   (6,7)
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC3_CH1   (1,3)
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC3_CH2   (2,4)
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC4_CH1   (5,7)
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC4_CH2   (6)
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         (a,b...) Only available for COMPa, COMPb...
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *                  For COMPx & DACx instances availability, please refer to datasheet
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_IO1
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_IO2
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_SetInputMinus(COMP_TypeDef *COMPx, uint32_t InputMinus)
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   MODIFY_REG(COMPx->CSR, COMP_CSR_INMSEL | COMP_CSR_SCALEN | COMP_CSR_BRGEN, InputMinus);
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Get comparator input minus (inverting).
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   In case of comparator input selected to be connected to IO:
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         GPIO pins are specific to each comparator instance.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      INMSEL         LL_COMP_GetInputMinus\n
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      BRGEN          LL_COMP_GetInputMinus\n
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         CSR      SCALEN         LL_COMP_GetInputMinus
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval Returned value can be one of the following values:
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_1_4VREFINT
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_1_2VREFINT
ARM GAS  /tmp/ccA1EUYa.s 			page 406


 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_3_4VREFINT
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_VREFINT
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC1_CH1   (1,3,4)
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC1_CH2   (2,5)
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC2_CH1   (6,7)
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC3_CH1   (1,3)
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC3_CH2   (2,4)
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC4_CH1   (5,7)
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_DAC4_CH2   (6)
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         (a,b...) Only available for COMPa, COMPb...
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *                  For COMPx & DACx instances availability, please refer to datasheet
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_IO1
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_INPUT_MINUS_IO2
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE uint32_t LL_COMP_GetInputMinus(const COMP_TypeDef *COMPx)
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   return (uint32_t)(READ_BIT(COMPx->CSR, COMP_CSR_INMSEL | COMP_CSR_SCALEN | COMP_CSR_BRGEN));
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Set comparator instance hysteresis mode of the input minus (inverting input).
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      HYST           LL_COMP_SetInputHysteresis
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  InputHysteresis This parameter can be one of the following values:
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_NONE
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_10MV
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_20MV
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_30MV
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_40MV
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_50MV
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_60MV
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_70MV
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_LOW
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_MEDIUM
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_SetInputHysteresis(COMP_TypeDef *COMPx, uint32_t InputHysteresis)
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   MODIFY_REG(COMPx->CSR, COMP_CSR_HYST, InputHysteresis);
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Get comparator instance hysteresis mode of the minus (inverting) input.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      HYST           LL_COMP_GetInputHysteresis
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval Returned value can be one of the following values:
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_NONE
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_10MV
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_20MV
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_30MV
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_40MV
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_50MV
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_60MV
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_HYSTERESIS_70MV
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE uint32_t LL_COMP_GetInputHysteresis(const COMP_TypeDef *COMPx)
ARM GAS  /tmp/ccA1EUYa.s 			page 407


 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   return (uint32_t)(READ_BIT(COMPx->CSR, COMP_CSR_HYST));
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EF_Configuration_comparator_output Configuration of comparator output
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Set comparator instance output polarity.
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      POLARITY       LL_COMP_SetOutputPolarity
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  OutputPolarity This parameter can be one of the following values:
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_OUTPUTPOL_NONINVERTED
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_OUTPUTPOL_INVERTED
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_SetOutputPolarity(COMP_TypeDef *COMPx, uint32_t OutputPolarity)
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   MODIFY_REG(COMPx->CSR, COMP_CSR_POLARITY, OutputPolarity);
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Get comparator instance output polarity.
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      POLARITY       LL_COMP_GetOutputPolarity
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval Returned value can be one of the following values:
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_OUTPUTPOL_NONINVERTED
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_OUTPUTPOL_INVERTED
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE uint32_t LL_COMP_GetOutputPolarity(const COMP_TypeDef *COMPx)
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   return (uint32_t)(READ_BIT(COMPx->CSR, COMP_CSR_POLARITY));
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Set comparator instance blanking source.
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   Blanking source may be specific to each comparator instance.
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   Availability of parameters of blanking source from timer
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         depends on timers availability on the selected device.
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      BLANKING       LL_COMP_SetOutputBlankingSource
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  BlankingSource This parameter can be one of the following values:
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_NONE
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP1
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP2
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP3
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP4
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP5
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP6
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC3_COMP1
ARM GAS  /tmp/ccA1EUYa.s 			page 408


 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC3_COMP2
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC3_COMP5
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC4_COMP3
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC4_COMP6
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP1
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP2
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP3
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP5
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC4_COMP4
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP1
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP2
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP3
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP4
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP5
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP6
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP7
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC1_COMP4
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC2_COMP6
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC2_COMP7
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM20_OC5
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC1
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM4_OC3
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         On STM32G4 series, blanking sources are linked to COMP instance (except
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         those without COMPx suffix that are common to all instances)
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Note: For COMPx & TIMx instances availability, please refer to datasheet
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_SetOutputBlankingSource(COMP_TypeDef *COMPx, uint32_t BlankingSource)
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   MODIFY_REG(COMPx->CSR, COMP_CSR_BLANKING, BlankingSource);
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Get comparator instance blanking source.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   Availability of parameters of blanking source from timer
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         depends on timers availability on the selected device.
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   Blanking source may be specific to each comparator instance.
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to description of parameters or to reference manual.
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      BLANKING       LL_COMP_GetOutputBlankingSource
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval Returned value can be one of the following values:
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_NONE
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP1
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP2
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP3
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP4
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP5
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP6
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM1_OC5_COMP7
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC3_COMP1
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC3_COMP2
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC3_COMP5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC4_COMP3
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM2_OC4_COMP6
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP1
ARM GAS  /tmp/ccA1EUYa.s 			page 409


 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP2
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP3
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP5
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC3_COMP7
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM3_OC4_COMP4
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP1
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP2
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP3
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP4
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP5
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP6
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM8_OC5_COMP7
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC1_COMP4
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC2_COMP6
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC2_COMP7
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM20_OC5
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM15_OC1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         @arg @ref LL_COMP_BLANKINGSRC_TIM4_OC3
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         On STM32G4 series, blanking sources are linked to COMP instance (except
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         those without COMPx suffix that are common to all instances)
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Note: For COMPx & TIMx instances availability, please refer to datasheet
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE uint32_t LL_COMP_GetOutputBlankingSource(const COMP_TypeDef *COMPx)
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   return (uint32_t)(READ_BIT(COMPx->CSR, COMP_CSR_BLANKING));
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @}
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /** @defgroup COMP_LL_EF_Operation Operation on comparator instance
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @{
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Enable comparator instance.
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   After enable from off state, comparator requires a delay
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         to reach reach propagation delay specification.
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         Refer to device datasheet, parameter "tSTART".
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      EN             LL_COMP_Enable
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_Enable(COMP_TypeDef *COMPx)
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 2809              		.loc 6 643 1
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 8
 2812              		@ frame_needed = 1, uses_anonymous_args = 0
 2813              		@ link register save eliminated.
 2814 0000 80B4     		push	{r7}
 2815              	.LCFI300:
 2816              		.cfi_def_cfa_offset 4
 2817              		.cfi_offset 7, -4
 2818 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccA1EUYa.s 			page 410


 2819              	.LCFI301:
 2820              		.cfi_def_cfa_offset 16
 2821 0004 00AF     		add	r7, sp, #0
 2822              	.LCFI302:
 2823              		.cfi_def_cfa_register 7
 2824 0006 7860     		str	r0, [r7, #4]
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   SET_BIT(COMPx->CSR, COMP_CSR_EN);
 2825              		.loc 6 644 3
 2826 0008 7B68     		ldr	r3, [r7, #4]
 2827 000a 1B68     		ldr	r3, [r3]
 2828 000c 43F00102 		orr	r2, r3, #1
 2829 0010 7B68     		ldr	r3, [r7, #4]
 2830 0012 1A60     		str	r2, [r3]
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 2831              		.loc 6 645 1
 2832 0014 00BF     		nop
 2833 0016 0C37     		adds	r7, r7, #12
 2834              	.LCFI303:
 2835              		.cfi_def_cfa_offset 4
 2836 0018 BD46     		mov	sp, r7
 2837              	.LCFI304:
 2838              		.cfi_def_cfa_register 13
 2839              		@ sp needed
 2840 001a 5DF8047B 		ldr	r7, [sp], #4
 2841              	.LCFI305:
 2842              		.cfi_restore 7
 2843              		.cfi_def_cfa_offset 0
 2844 001e 7047     		bx	lr
 2845              		.cfi_endproc
 2846              	.LFE1362:
 2848              		.section	.text.LL_COMP_Lock,"ax",%progbits
 2849              		.align	1
 2850              		.syntax unified
 2851              		.thumb
 2852              		.thumb_func
 2853              		.fpu fpv4-sp-d16
 2855              	LL_COMP_Lock:
 2856              	.LFB1365:
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Disable comparator instance.
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      EN             LL_COMP_Disable
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_Disable(COMP_TypeDef *COMPx)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   CLEAR_BIT(COMPx->CSR, COMP_CSR_EN);
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Get comparator enable state
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   *         (0: COMP is disabled, 1: COMP is enabled)
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      EN             LL_COMP_IsEnabled
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval State of bit (1 or 0).
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 411


 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE uint32_t LL_COMP_IsEnabled(const COMP_TypeDef *COMPx)
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   return ((READ_BIT(COMPx->CSR, COMP_CSR_EN) == (COMP_CSR_EN)) ? 1UL : 0UL);
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** 
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** /**
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @brief  Lock comparator instance.
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   Once locked, comparator configuration can be accessed in read-only.
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @note   The only way to unlock the comparator is a device hardware reset.
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @rmtoll CSR      LOCK           LL_COMP_Lock
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @param  COMPx Comparator instance
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   * @retval None
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   */
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** __STATIC_INLINE void LL_COMP_Lock(COMP_TypeDef *COMPx)
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** {
 2857              		.loc 6 679 1
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 8
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861              		@ link register save eliminated.
 2862 0000 80B4     		push	{r7}
 2863              	.LCFI306:
 2864              		.cfi_def_cfa_offset 4
 2865              		.cfi_offset 7, -4
 2866 0002 83B0     		sub	sp, sp, #12
 2867              	.LCFI307:
 2868              		.cfi_def_cfa_offset 16
 2869 0004 00AF     		add	r7, sp, #0
 2870              	.LCFI308:
 2871              		.cfi_def_cfa_register 7
 2872 0006 7860     		str	r0, [r7, #4]
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h ****   SET_BIT(COMPx->CSR, COMP_CSR_LOCK);
 2873              		.loc 6 680 3
 2874 0008 7B68     		ldr	r3, [r7, #4]
 2875 000a 1B68     		ldr	r3, [r3]
 2876 000c 43F00042 		orr	r2, r3, #-2147483648
 2877 0010 7B68     		ldr	r3, [r7, #4]
 2878 0012 1A60     		str	r2, [r3]
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h **** }
 2879              		.loc 6 681 1
 2880 0014 00BF     		nop
 2881 0016 0C37     		adds	r7, r7, #12
 2882              	.LCFI309:
 2883              		.cfi_def_cfa_offset 4
 2884 0018 BD46     		mov	sp, r7
 2885              	.LCFI310:
 2886              		.cfi_def_cfa_register 13
 2887              		@ sp needed
 2888 001a 5DF8047B 		ldr	r7, [sp], #4
 2889              	.LCFI311:
 2890              		.cfi_restore 7
 2891              		.cfi_def_cfa_offset 0
 2892 001e 7047     		bx	lr
 2893              		.cfi_endproc
 2894              	.LFE1365:
 2896              		.section	.text.LL_OPAMP_Enable,"ax",%progbits
 2897              		.align	1
ARM GAS  /tmp/ccA1EUYa.s 			page 412


 2898              		.syntax unified
 2899              		.thumb
 2900              		.thumb_func
 2901              		.fpu fpv4-sp-d16
 2903              	LL_OPAMP_Enable:
 2904              	.LFB1395:
 2905              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @file    stm32g4xx_ll_opamp.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief   Header file of OPAMP LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #ifndef STM32G4xx_LL_OPAMP_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define STM32G4xx_LL_OPAMP_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #if defined (OPAMP1) || defined (OPAMP2) || defined (OPAMP3) || defined (OPAMP4) || defined (OPAMP5
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL OPAMP
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Private_Constants OPAMP Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Internal mask for OPAMP trimming of transistors differential pair NMOS     */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* or PMOS.                                                                   */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* To select into literal LL_OPAMP_TRIMMING_x the relevant bits for:          */
ARM GAS  /tmp/ccA1EUYa.s 			page 413


  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* - OPAMP trimming selection of transistors differential pair                */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* - OPAMP trimming values of transistors differential pair                   */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define OPAMP_TRIMMING_SELECT_MASK          (OPAMP_CSR_CALSEL)
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define OPAMP_TRIMMING_VALUE_MASK           (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_TRIMOFFSETP)
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Private_Macros OPAMP Private Macros
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         a register from a register basis from which an offset
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is applied.
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register basis from which the offset is applied.
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG_OFFSET__ Offset to be applied (unit: number of registers).
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Register address
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define __OPAMP_PTR_REG_OFFSET(__REG__, __REG_OFFSET__)                        \
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFSET__) << 2))))
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported types ------------------------------------------------------------*/
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #if defined(USE_FULL_LL_DRIVER)
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_ES_INIT OPAMP Exported Init structure
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Structure definition of some features of OPAMP instance.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** typedef struct
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t PowerMode;                   /*!< Set OPAMP power mode.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_POWE
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t FunctionalMode;              /*!< Set OPAMP functional mode by setting internal connecti
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_FUNC
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              @note If OPAMP is configured in mode PGA, the gain can
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 414


 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t InputNonInverting;           /*!< Set OPAMP input non-inverting connection.
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_INPU
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t InputInverting;              /*!< Set OPAMP inverting input connection.
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_INPU
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              @note OPAMP inverting input is used with OPAMP in mode
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** } LL_OPAMP_InitTypeDef;
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #endif /* USE_FULL_LL_DRIVER */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported constants --------------------------------------------------------*/
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Constants OPAMP Exported Constants
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_MODE OPAMP mode calibration or functional.
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_FUNCTIONAL        (0x00000000UL)                              /*!< OPAMP func
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_CALIBRATION       (OPAMP_CSR_CALON)                           /*!< OPAMP cali
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_FUNCTIONAL_MODE OPAMP functional mode
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_STANDALONE        (0x00000000UL)                                             
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_FOLLOWER          (OPAMP_CSR_VMSEL_1 | OPAMP_CSR_VMSEL_0)                    
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA               (OPAMP_CSR_VMSEL_1)                                        
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0           (OPAMP_CSR_PGGAIN_4|OPAMP_CSR_VMSEL_1)                     
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0_BIAS      (OPAMP_CSR_PGGAIN_3|OPAMP_CSR_VMSEL_1)                     
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0_IO1_BIAS  (OPAMP_CSR_PGGAIN_4|OPAMP_CSR_PGGAIN_3|OPAMP_CSR_VMSEL_1)  
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_MODE_PGA_GAIN OPAMP PGA gain (relevant when OPAMP is in functional mode P
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note Gain sign:
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         - is positive if the @ref OPAMP_LL_EC_FUNCTIONAL_MODE configuration is
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *           @ref LL_OPAMP_MODE_PGA or LL_OPAMP_MODE_PGA_IO0
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         - may be positive or negative if the @ref OPAMP_LL_EC_FUNCTIONAL_MODE configuration is
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *           @ref LL_OPAMP_MODE_PGA_IO0_BIAS or LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
ARM GAS  /tmp/ccA1EUYa.s 			page 415


 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       see @ref OPAMP_LL_EC_FUNCTIONAL_MODE for more details
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_2_OR_MINUS_1             (0x00000000UL)                                  
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_4_OR_MINUS_3             (                                          OPAMP
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_8_OR_MINUS_7             (                     OPAMP_CSR_PGGAIN_1        
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_16_OR_MINUS_15           (                     OPAMP_CSR_PGGAIN_1 | OPAMP
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_32_OR_MINUS_31           (OPAMP_CSR_PGGAIN_2                             
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_64_OR_MINUS_63           (OPAMP_CSR_PGGAIN_2 |                      OPAMP
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_NONINVERTING OPAMP input non-inverting
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO0         (0x00000000UL)        /*!< OPAMP non inverting input c
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA1  for OPAMP1, PA7  for 
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO1         OPAMP_CSR_VPSEL_0     /*!< OPAMP non inverting input c
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA3  for OPAMP1, PB14 for 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO2         OPAMP_CSR_VPSEL_1     /*!< OPAMP non inverting input c
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA7  for OPAMP1, PB0  for 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO3         OPAMP_CSR_VPSEL       /*!< OPAMP non inverting input c
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PD14 for OPAMP2) */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_DAC         OPAMP_CSR_VPSEL       /*!< OPAMP non inverting input c
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (DAC3_CH1 for OPAMP1, DAC3_
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_INVERTING OPAMP input inverting
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note OPAMP inverting input is used with OPAMP in mode standalone or PGA with negative gain or 
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       Otherwise (OPAMP in mode follower), OPAMP inverting input is not used (not connected to G
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO0         (0x00000000UL)           /*!< OPAMP inverting input conne
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA3  for OPAMP1, PA5  for 
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO1         OPAMP_CSR_VMSEL_0        /*!< OPAMP inverting input conne
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PC5  for OPAMP1, PC5  for 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_CONNECT_NO  OPAMP_CSR_VMSEL_1        /*!< OPAMP inverting input not e
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_NONINVERTING_SECONDARY OPAMP input non-inverting secondary
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO0_SEC         (0x00000000UL)       /*!< OPAMP secondary non inve
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA1  for OPAMP1, PA7  f
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
ARM GAS  /tmp/ccA1EUYa.s 			page 416


 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO1_SEC         OPAMP_TCMR_VPSSEL_0  /*!< OPAMP secondary non inve
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA3  for OPAMP1, PB14 f
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO2_SEC         OPAMP_TCMR_VPSSEL_1  /*!< OPAMP secondary non inve
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA7  for OPAMP1, PB0  f
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO3_SEC         OPAMP_TCMR_VPSSEL    /*!< OPAMP secondary non inve
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PD14 for OPAMP2) */
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_DAC_SEC         OPAMP_TCMR_VPSSEL    /*!< OPAMP secondary non inve
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (DAC3_CH1 for OPAMP1, DA
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_INVERTING_SECONDARY OPAMP input inverting secondary
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note OPAMP inverting input is used with OPAMP in mode standalone or PGA with negative gain or 
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       Otherwise (OPAMP in mode follower), OPAMP inverting input is not used (not connected to G
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO0_SEC         (0x00000000UL)          /*!< OPAMP secondary mode is 
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            has been configured by c
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA3  for OPAMP1, PA5  f
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO1_SEC         OPAMP_TCMR_VMSSEL       /*!< OPAMP secondary mode is 
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            has been configured by c
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PC5  for OPAMP1, PC5  f
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_PGA_SEC         (0x00000000UL)          /*!< OPAMP secondary mode is 
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            or @ref LL_OPAMP_SetFunc
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - Not connected if con
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - Connected to VINM0 a
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (see @ref OPAMP_LL_EC_FU
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC    OPAMP_TCMR_VMSSEL       /*!< OPAMP secondary mode is 
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            or @ref LL_OPAMP_SetFunc
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INTERNAL_OUPUT_MODE OPAMP internal output mode
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INTERNAL_OUPUT_DISABLED       (0x00000000UL)         /*!< OPAMP internal output to
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INTERNAL_OUPUT_ENABLED        OPAMP_CSR_OPAMPINTEN   /*!< OPAMP internal output to
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP1 internal outp
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP2 internal outp
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP3 internal outp
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP4 internal outp
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP5 internal outp
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP6 internal outp
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
ARM GAS  /tmp/ccA1EUYa.s 			page 417


 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_MUX_MODE OPAMP inputs multiplexer mode
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note The switch can be controlled either by a single timer or a combination of them,
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       in this case application has to 'ORed' the values below
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       ex LL_OPAMP_INPUT_MUX_TIM1_CH6 | LL_OPAMP_INPUT_MUX_TIM20_CH6
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_DISABLE       (0x00000000UL)         /*!< OPAMP inputs timer controlled 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM1_CH6      OPAMP_TCMR_T1CMEN      /*!< OPAMP inputs timer controlled 
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM8_CH6      OPAMP_TCMR_T8CMEN      /*!< OPAMP inputs timer controlled 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM20_CH6     OPAMP_TCMR_T20CMEN     /*!< OPAMP inputs timer controlled 
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                      Note: On this STM32 series, TI
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_POWER_MODE OPAMP PowerMode
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_NORMALSPEED   (0x00000000UL)         /*!< OPAMP output in normal mode */
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_HIGHSPEED     OPAMP_CSR_HIGHSPEEDEN  /*!< OPAMP output in highspeed mode
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_NORMAL        LL_OPAMP_POWERMODE_NORMALSPEED /*!< OPAMP power mode norma
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_TRIMMING_MODE OPAMP trimming mode
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_FACTORY       (0x00000000UL)           /*!< OPAMP trimming factors set to
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_USER          OPAMP_CSR_USERTRIM      /*!< OPAMP trimming factors set to 
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_TRIMMING_TRANSISTORS_DIFF_PAIR OPAMP trimming of transistors differential
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS_VREF_90PC_VDDA  (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_CALSEL_1 | OPAMP_
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA  (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_CALSEL_1         
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS_VREF_10PC_VDDA  (OPAMP_CSR_TRIMOFFSETP                      | OPAMP_
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA (OPAMP_CSR_TRIMOFFSETP                              
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS          (LL_OPAMP_TRIMMING_NMOS_VREF_90PC_VDDA) /*!< OPAMP trimming
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS          (LL_OPAMP_TRIMMING_PMOS_VREF_10PC_VDDA) /*!< OPAMP trimming
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_HW_DELAYS  Definitions of OPAMP hardware constraints delays
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Only OPAMP peripheral HW delays are defined in OPAMP LL driver driver,
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         not timeout values.
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         For details on delays values, refer to descriptions in source code
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         above each literal definition.
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
ARM GAS  /tmp/ccA1EUYa.s 			page 418


 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Delay for OPAMP startup time (transition from state disable to enable).    */
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Note: OPAMP startup time depends on board application environment:         */
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*       impedance connected to OPAMP output.                                 */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*       The delay below is specified under conditions:                       */
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*        - OPAMP in functional mode follower                                 */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*        - load impedance of 4kOhm (min), 50pF (max)                         */
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* parameter "tWAKEUP").                                                      */
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Unit: us                                                                   */
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_DELAY_STARTUP_US         (6)  /*!< Delay for OPAMP startup time */
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported macro ------------------------------------------------------------*/
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Macros OPAMP Exported Macros
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EM_WRITE_READ Common write and read registers macro
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Write a value in OPAMP register
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __INSTANCE__ OPAMP Instance
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register to be written
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __VALUE__ Value to be written in the register
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__V
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Read a value in OPAMP register
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __INSTANCE__ OPAMP Instance
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register to be read
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Register value
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported functions --------------------------------------------------------*/
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Functions OPAMP Exported Functions
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_CONFIGURATION_OPAMP_INSTANCE Configuration of OPAMP hierarchical scope: O
ARM GAS  /tmp/ccA1EUYa.s 			page 419


 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP mode calibration or functional.
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP mode corresponds to functional or calibration mode:
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - functional mode: OPAMP operation in standalone, follower, ...
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            Set functional mode using function
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            @ref LL_OPAMP_SetFunctionalMode().
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - calibration mode: offset calibration of the selected
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            transistors differential pair NMOS or PMOS.
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALON          LL_OPAMP_SetMode
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  Mode This parameter can be one of the following values:
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FUNCTIONAL
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_CALIBRATION
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetMode(OPAMP_TypeDef *OPAMPx, uint32_t Mode)
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_CALON, Mode);
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP mode calibration or functional.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP mode corresponds to functional or calibration mode:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - functional mode: OPAMP operation in standalone, follower, ...
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            Set functional mode using function
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            @ref LL_OPAMP_SetFunctionalMode().
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - calibration mode: offset calibration of the selected
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            transistors differential pair NMOS or PMOS.
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALON          LL_OPAMP_GetMode
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FUNCTIONAL
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_CALIBRATION
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetMode(OPAMP_TypeDef *OPAMPx)
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_CALON));
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP functional mode by setting internal connections.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         OPAMP operation in standalone, follower, ...
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   This function reset bit of calibration mode to ensure
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to be in functional mode, in order to have OPAMP parameters
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (inputs selection, ...) set with the corresponding OPAMP mode
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to be effective.
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_SetFunctionalMode
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  FunctionalMode This parameter can be one of the following values:
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_STANDALONE
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FOLLOWER
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_BIAS
ARM GAS  /tmp/ccA1EUYa.s 			page 420


 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetFunctionalMode(OPAMP_TypeDef *OPAMPx, uint32_t FunctionalMode)
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Note: Bit OPAMP_CSR_CALON reset to ensure to be in functional mode */
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3 | OPAMP_CSR_VMSEL | OPAMP_CSR_CAL
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP functional mode from setting of internal connections.
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         OPAMP operation in standalone, follower, ...
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_GetFunctionalMode
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_STANDALONE
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FOLLOWER
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_BIAS
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetFunctionalMode(OPAMP_TypeDef *OPAMPx)
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3 | OPAMP_CSR_VMSEL
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP PGA gain.
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode PGA
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetFunctionalMode().
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      PGGAIN         LL_OPAMP_SetPGAGain
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  PGAGain This parameter can be one of the following values:
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_2_OR_MINUS_1
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_4_OR_MINUS_3
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_8_OR_MINUS_7
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_16_OR_MINUS_15
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_32_OR_MINUS_31
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_64_OR_MINUS_63
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetPGAGain(OPAMP_TypeDef *OPAMPx, uint32_t PGAGain)
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_PGGAIN_2 | OPAMP_CSR_PGGAIN_1 | OPAMP_CSR_PGGAIN_0, PGAGain);
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP PGA gain.
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode PGA
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetFunctionalMode().
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      PGGAIN         LL_OPAMP_GetPGAGain
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_2_OR_MINUS_1
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_4_OR_MINUS_3
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_8_OR_MINUS_7
ARM GAS  /tmp/ccA1EUYa.s 			page 421


 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_16_OR_MINUS_15
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_32_OR_MINUS_31
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_64_OR_MINUS_63
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetPGAGain(OPAMP_TypeDef *OPAMPx)
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_PGGAIN_2 | OPAMP_CSR_PGGAIN_1 | OPAMP_CSR_PGGAI
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP power mode normal or highspeed.
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP highspeed mode allows output stage to have a better slew rate.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      HIGHSPEEDEN     LL_OPAMP_SetPowerMode
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  PowerMode This parameter can be one of the following values:
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_NORMALSPEED
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_HIGHSPEED
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetPowerMode(OPAMP_TypeDef *OPAMPx, uint32_t PowerMode)
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_HIGHSPEEDEN, PowerMode);
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP power mode normal or highspeed.
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP highspeed mode allows output stage to have a better slew rate.
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      HIGHSPEEDEN     LL_OPAMP_GetPowerMode
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_NORMALSPEED
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_HIGHSPEED
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetPowerMode(OPAMP_TypeDef *OPAMPx)
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_HIGHSPEEDEN));
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_CONFIGURATION_INPUTS Configuration of OPAMP inputs
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP non-inverting input connection.
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VPSEL          LL_OPAMP_SetInputNonInverting
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputNonInverting This parameter can be one of the following values:
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 422


 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputNonInverting(OPAMP_TypeDef *OPAMPx, uint32_t InputNonInvertin
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_VPSEL, InputNonInverting);
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP non-inverting input connection.
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VPSEL          LL_OPAMP_GetInputNonInverting
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputNonInverting(OPAMP_TypeDef *OPAMPx)
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_VPSEL));
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inverting input connection.
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP inverting input is used with OPAMP in mode standalone
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         or PGA with external capacitors for filtering circuit.
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Otherwise (OPAMP in mode follower), OPAMP inverting input
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is not used (not connected to GPIO pin).
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_SetInputInverting
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputInverting This parameter can be one of the following values:
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_CONNECT_NO
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputInverting(OPAMP_TypeDef *OPAMPx, uint32_t InputInverting)
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Manage cases of OPAMP inverting input not connected (0x10 and 0x11)      */
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* to not modify OPAMP mode follower or PGA.                                */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Bit OPAMP_CSR_VMSEL_1 is set by OPAMP mode (follower, PGA). */
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, (~(InputInverting >> 1)) & OPAMP_CSR_VMSEL_0, InputInverting);
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inverting input connection.
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_GetInputInverting
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_CONNECT_NO
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputInverting(OPAMP_TypeDef *OPAMPx)
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t input_inverting = READ_BIT(OPAMPx->CSR, OPAMP_CSR_VMSEL);
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Manage cases 0x10 and 0x11 to return the same value: OPAMP inverting     */
ARM GAS  /tmp/ccA1EUYa.s 			page 423


 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* input not connected.                                                     */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (input_inverting & ~((input_inverting >> 1) & OPAMP_CSR_VMSEL_0));
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP non-inverting input secondary connection.
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VPSSEL         LL_OPAMP_SetInputNonInvertingSecondary
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputNonInverting This parameter can be one of the following values:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0_SEC
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1_SEC
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2_SEC
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3_SEC
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC_SEC
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputNonInvertingSecondary(OPAMP_TypeDef *OPAMPx, uint32_t InputNo
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_VPSSEL, InputNonInverting);
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP non-inverting input secondary connection.
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VPSSEL         LL_OPAMP_GetInputNonInvertingSecondary
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0_SEC
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1_SEC
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2_SEC
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3_SEC
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC_SEC
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputNonInvertingSecondary(OPAMP_TypeDef *OPAMPx)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_VPSSEL));
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inverting input secondary connection.
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP inverting input is used with OPAMP in mode standalone
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         or PGA with external capacitors for filtering circuit.
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Otherwise (OPAMP in mode follower), OPAMP inverting input
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is not used (not connected to GPIO pin).
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VMSSEL         LL_OPAMP_SetInputInvertingSecondary
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputInverting This parameter can be one of the following values:
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0_SEC
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1_SEC
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_PGA_SEC
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputInvertingSecondary(OPAMP_TypeDef *OPAMPx, uint32_t InputInver
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_VMSSEL, InputInverting);
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 424


 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inverting input secondary connection.
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VMSSEL         LL_OPAMP_GetInputInvertingSecondary
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0_SEC
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1_SEC
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_PGA_SEC
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputInvertingSecondary(OPAMP_TypeDef *OPAMPx)
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_VMSSEL));
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inputs multiplexer mode.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     TCMEN          LL_OPAMP_SetInputsMuxMode
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputsMuxMode This parameter can be one of the following values:
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_DISABLE
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM1_CH6
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM8_CH6
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM20_CH6  (1)
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         On this STM32 series, this value is not available on all devices. Refer to datasheet fo
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputsMuxMode(OPAMP_TypeDef *OPAMPx, uint32_t InputsMuxMode)
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_T1CMEN | OPAMP_TCMR_T8CMEN | OPAMP_TCMR_T20CMEN, InputsMuxMod
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inputs multiplexer mode.
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     TCMEN          LL_OPAMP_GetInputsMuxMode
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_DISABLE
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM1_CH6
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM8_CH6
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM20_CH6  (1)
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         On this STM32 series, this value is not available on all devices. Refer to datasheet fo
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputsMuxMode(OPAMP_TypeDef *OPAMPx)
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_T1CMEN | OPAMP_TCMR_T8CMEN | OPAMP_TCMR_T20CM
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP internal output.
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP internal output is used to link OPAMP output to ADC input internally.
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPINTEN     LL_OPAMP_SetInternalOutput
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InternalOutput This parameter can be one of the following values:
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_DISABLED
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_ENABLED
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
ARM GAS  /tmp/ccA1EUYa.s 			page 425


 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInternalOutput(OPAMP_TypeDef *OPAMPx, uint32_t InternalOutput)
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_OPAMPINTEN, InternalOutput);
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP internal output state.
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPINTEN     LL_OPAMP_GetInternalOutput
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_DISABLED
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_ENABLED
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInternalOutput(OPAMP_TypeDef *OPAMPx)
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return READ_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPINTEN);
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_OPAMP_TRIMMING Configuration and operation of OPAMP trimming
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP trimming mode.
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      USERTRIM       LL_OPAMP_SetTrimmingMode
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TrimmingMode This parameter can be one of the following values:
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_FACTORY
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_USER
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetTrimmingMode(OPAMP_TypeDef *OPAMPx, uint32_t TrimmingMode)
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_USERTRIM, TrimmingMode);
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP trimming mode.
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      USERTRIM       LL_OPAMP_GetTrimmingMode
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_FACTORY
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_USER
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetTrimmingMode(OPAMP_TypeDef *OPAMPx)
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_USERTRIM));
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP offset to calibrate the selected transistors
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS.
ARM GAS  /tmp/ccA1EUYa.s 			page 426


 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode calibration
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetMode().
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALSEL         LL_OPAMP_SetCalibrationSelection
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TransistorsDiffPair This parameter can be one of the following values:
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS            (1)
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS            (1)
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (1) Default parameters to be used for calibration
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             using two trimming steps (one with each transistors differential
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             pair NMOS and PMOS)
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetCalibrationSelection(OPAMP_TypeDef *OPAMPx, uint32_t TransistorsDi
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Parameter used with mask "OPAMP_TRIMMING_SELECT_MASK" because            */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* containing other bits reserved for other purpose.                        */
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_CALSEL, (TransistorsDiffPair & OPAMP_TRIMMING_SELECT_MASK));
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP offset to calibrate the selected transistors
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS.
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode calibration
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetMode().
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALSEL         LL_OPAMP_GetCalibrationSelection
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS            (1)
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS            (1)
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (1) Default parameters to be used for calibration
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             using two trimming steps (one with each transistors differential
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             pair NMOS and PMOS)
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetCalibrationSelection(OPAMP_TypeDef *OPAMPx)
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t CalibrationSelection = (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_CALSEL));
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (CalibrationSelection |
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****           (((CalibrationSelection & OPAMP_CSR_CALSEL_1) == 0UL) ? OPAMP_CSR_TRIMOFFSETP : OPAMP_CSR
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP calibration result of toggling output.
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   This functions returns:
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         0 if OPAMP calibration output is reset
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         1 if OPAMP calibration output is set
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OUTCAL         LL_OPAMP_IsCalibrationOutputSet
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval State of bit (1 or 0).
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_IsCalibrationOutputSet(OPAMP_TypeDef *OPAMPx)
ARM GAS  /tmp/ccA1EUYa.s 			page 427


 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return ((READ_BIT(OPAMPx->CSR, OPAMP_CSR_OUTCAL) == OPAMP_CSR_OUTCAL) ? 1UL : 0UL);
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP trimming factor for the selected transistors
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS, corresponding to the selected
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         power mode.
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      TRIMOFFSETN    LL_OPAMP_SetTrimmingValue\n
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         CSR      TRIMOFFSETP    LL_OPAMP_SetTrimmingValue
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TransistorsDiffPair This parameter can be one of the following values:
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TrimmingValue 0x00...0x1F
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetTrimmingValue(OPAMP_TypeDef *OPAMPx, uint32_t TransistorsDiffPair,
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                uint32_t TrimmingValue)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR,
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****              (TransistorsDiffPair & OPAMP_TRIMMING_VALUE_MASK),
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****              TrimmingValue << ((TransistorsDiffPair == LL_OPAMP_TRIMMING_NMOS) ? OPAMP_CSR_TRIMOFFS
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP trimming factor for the selected transistors
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS, corresponding to the selected
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         power mode.
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      TRIMOFFSETN    LL_OPAMP_GetTrimmingValue\n
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         CSR      TRIMOFFSETP    LL_OPAMP_GetTrimmingValue
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TransistorsDiffPair This parameter can be one of the following values:
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval 0x0...0x1F
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetTrimmingValue(OPAMP_TypeDef *OPAMPx, uint32_t TransistorsDiffP
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, (TransistorsDiffPair & OPAMP_TRIMMING_VALUE_MASK))
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                     >> ((TransistorsDiffPair == LL_OPAMP_TRIMMING_NMOS) ? OPAMP_CSR_TRIMOFFSETN_Pos
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_OPERATION Operation on OPAMP instance
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Enable OPAMP instance.
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   After enable from off state, OPAMP requires a delay
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to fulfill wake up time specification.
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Refer to device datasheet, parameter "tWAKEUP".
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPXEN       LL_OPAMP_Enable
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
ARM GAS  /tmp/ccA1EUYa.s 			page 428


 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_Enable(OPAMP_TypeDef *OPAMPx)
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 2906              		.loc 7 909 1
 2907              		.cfi_startproc
 2908              		@ args = 0, pretend = 0, frame = 8
 2909              		@ frame_needed = 1, uses_anonymous_args = 0
 2910              		@ link register save eliminated.
 2911 0000 80B4     		push	{r7}
 2912              	.LCFI312:
 2913              		.cfi_def_cfa_offset 4
 2914              		.cfi_offset 7, -4
 2915 0002 83B0     		sub	sp, sp, #12
 2916              	.LCFI313:
 2917              		.cfi_def_cfa_offset 16
 2918 0004 00AF     		add	r7, sp, #0
 2919              	.LCFI314:
 2920              		.cfi_def_cfa_register 7
 2921 0006 7860     		str	r0, [r7, #4]
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   SET_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPxEN);
 2922              		.loc 7 910 3
 2923 0008 7B68     		ldr	r3, [r7, #4]
 2924 000a 1B68     		ldr	r3, [r3]
 2925 000c 43F00102 		orr	r2, r3, #1
 2926 0010 7B68     		ldr	r3, [r7, #4]
 2927 0012 1A60     		str	r2, [r3]
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 2928              		.loc 7 911 1
 2929 0014 00BF     		nop
 2930 0016 0C37     		adds	r7, r7, #12
 2931              	.LCFI315:
 2932              		.cfi_def_cfa_offset 4
 2933 0018 BD46     		mov	sp, r7
 2934              	.LCFI316:
 2935              		.cfi_def_cfa_register 13
 2936              		@ sp needed
 2937 001a 5DF8047B 		ldr	r7, [sp], #4
 2938              	.LCFI317:
 2939              		.cfi_restore 7
 2940              		.cfi_def_cfa_offset 0
 2941 001e 7047     		bx	lr
 2942              		.cfi_endproc
 2943              	.LFE1395:
 2945              		.section	.text.R3_2_Init,"ax",%progbits
 2946              		.align	1
 2947              		.weak	R3_2_Init
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2951              		.fpu fpv4-sp-d16
 2953              	R3_2_Init:
 2954              	.LFB1438:
 2955              		.file 8 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @file    r3_2_g4xx_pwm_curr_fdbk.c
ARM GAS  /tmp/ccA1EUYa.s 			page 429


   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief   This file provides firmware functions that implement current sensor
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *          class to be stantiated when the three shunts current sensing
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *          topology is used.
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *          It is specifically designed for STM32G4XX microcontrollers and
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *          implements the successive sampling of motor current using two ADCs.
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *           + MCU peripheral and handle initialization function
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *           + three shunts current sensing
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *           + space vector modulation function
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *           + ADC sampling function
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   ******************************************************************************
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @attention
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * All rights reserved.</center></h2>
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * This software component is licensed by ST under Ultimate Liberty license
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * the License. You may obtain a copy of the License at:
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *                             www.st.com/SLA0044
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   ******************************************************************************
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @ingroup R3_2_G4XX_pwm_curr_fdbk
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /* Includes ------------------------------------------------------------------*/
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #include "r3_2_g4xx_pwm_curr_fdbk.h"
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #include "pwm_common.h"
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #include "mc_type.h"
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /** @addtogroup MCSDK
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @{
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /** @addtogroup pwm_curr_fdbk
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @{
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /** @addtogroup R3_2_pwm_curr_fdbk
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @{
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /* Private defines -----------------------------------------------------------*/
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #define TIMxCCER_MASK_CH123        ((uint16_t)(LL_TIM_CHANNEL_CH1|LL_TIM_CHANNEL_CH1N|\
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                                LL_TIM_CHANNEL_CH2|LL_TIM_CHANNEL_CH2N|\
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                                LL_TIM_CHANNEL_CH3|LL_TIM_CHANNEL_CH3N))
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /* Private typedef -----------------------------------------------------------*/
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /* Private function prototypes -----------------------------------------------*/
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_TIMxInit(TIM_TypeDef *TIMx, PWMC_Handle_t *pHdl);
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_ADCxInit(ADC_TypeDef *ADCx);
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __STATIC_INLINE uint16_t R3_2_WriteTIMRegisters(PWMC_Handle_t *pHdl, uint16_t hCCR4Reg);
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_HFCurrentsPolarizationAB(PWMC_Handle_t *pHdl, ab_t *Iab);
ARM GAS  /tmp/ccA1EUYa.s 			page 430


  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_HFCurrentsPolarizationC(PWMC_Handle_t *pHdl, ab_t *Iab);
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_SetAOReferenceVoltage(uint32_t DAC_Channel, DAC_TypeDef *DACx, uint16_t hDACVref);
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** uint16_t R3_2_SetADCSampPointPolarization(PWMC_Handle_t *pHdl) ;
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_RLGetPhaseCurrents(PWMC_Handle_t *pHdl, ab_t *pStator_Currents);
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_RLTurnOnLowSides(PWMC_Handle_t *pHdl, uint32_t ticks);
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_RLSwitchOnPWM(PWMC_Handle_t *pHdl);
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Initializes TIMx, ADC, GPIO, DMA1 and NVIC for current reading
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         in three shunt topology using STM32G4XX and shared ADC.
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_Init(PWMC_R3_2_Handle_t *pHandle)
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 2956              		.loc 8 75 1
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 56
 2959              		@ frame_needed = 1, uses_anonymous_args = 0
 2960 0000 80B5     		push	{r7, lr}
 2961              	.LCFI318:
 2962              		.cfi_def_cfa_offset 8
 2963              		.cfi_offset 7, -8
 2964              		.cfi_offset 14, -4
 2965 0002 8EB0     		sub	sp, sp, #56
 2966              	.LCFI319:
 2967              		.cfi_def_cfa_offset 64
 2968 0004 00AF     		add	r7, sp, #0
 2969              	.LCFI320:
 2970              		.cfi_def_cfa_register 7
 2971 0006 7860     		str	r0, [r7, #4]
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_3_OPAMPParams_t *OPAMPParams = pHandle->pParams_str->OPAMPParams;
 2972              		.loc 8 84 46
 2973 0008 7B68     		ldr	r3, [r7, #4]
 2974 000a D3F89C30 		ldr	r3, [r3, #156]
 2975              		.loc 8 84 25
 2976 000e 5B68     		ldr	r3, [r3, #4]
 2977 0010 7B63     		str	r3, [r7, #52]
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     COMP_TypeDef *COMP_OCPAx = pHandle->pParams_str->CompOCPASelection;
 2978              		.loc 8 85 39
 2979 0012 7B68     		ldr	r3, [r7, #4]
 2980 0014 D3F89C30 		ldr	r3, [r3, #156]
 2981              		.loc 8 85 19
 2982 0018 9B68     		ldr	r3, [r3, #8]
 2983 001a 3B63     		str	r3, [r7, #48]
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     COMP_TypeDef *COMP_OCPBx = pHandle->pParams_str->CompOCPBSelection;
 2984              		.loc 8 86 39
 2985 001c 7B68     		ldr	r3, [r7, #4]
 2986 001e D3F89C30 		ldr	r3, [r3, #156]
ARM GAS  /tmp/ccA1EUYa.s 			page 431


 2987              		.loc 8 86 19
 2988 0022 DB68     		ldr	r3, [r3, #12]
 2989 0024 FB62     		str	r3, [r7, #44]
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     COMP_TypeDef *COMP_OCPCx = pHandle->pParams_str->CompOCPCSelection;
 2990              		.loc 8 87 39
 2991 0026 7B68     		ldr	r3, [r7, #4]
 2992 0028 D3F89C30 		ldr	r3, [r3, #156]
 2993              		.loc 8 87 19
 2994 002c 1B69     		ldr	r3, [r3, #16]
 2995 002e BB62     		str	r3, [r7, #40]
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     COMP_TypeDef *COMP_OVPx = pHandle->pParams_str->CompOVPSelection;
 2996              		.loc 8 88 38
 2997 0030 7B68     		ldr	r3, [r7, #4]
 2998 0032 D3F89C30 		ldr	r3, [r3, #156]
 2999              		.loc 8 88 19
 3000 0036 5B69     		ldr	r3, [r3, #20]
 3001 0038 7B62     		str	r3, [r7, #36]
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     DAC_TypeDef *DAC_OCPAx = pHandle->pParams_str->DAC_OCP_ASelection;
 3002              		.loc 8 89 37
 3003 003a 7B68     		ldr	r3, [r7, #4]
 3004 003c D3F89C30 		ldr	r3, [r3, #156]
 3005              		.loc 8 89 18
 3006 0040 9B69     		ldr	r3, [r3, #24]
 3007 0042 3B62     		str	r3, [r7, #32]
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     DAC_TypeDef *DAC_OCPBx = pHandle->pParams_str->DAC_OCP_BSelection;
 3008              		.loc 8 90 37
 3009 0044 7B68     		ldr	r3, [r7, #4]
 3010 0046 D3F89C30 		ldr	r3, [r3, #156]
 3011              		.loc 8 90 18
 3012 004a DB69     		ldr	r3, [r3, #28]
 3013 004c FB61     		str	r3, [r7, #28]
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     DAC_TypeDef *DAC_OCPCx = pHandle->pParams_str->DAC_OCP_CSelection;
 3014              		.loc 8 91 37
 3015 004e 7B68     		ldr	r3, [r7, #4]
 3016 0050 D3F89C30 		ldr	r3, [r3, #156]
 3017              		.loc 8 91 18
 3018 0054 1B6A     		ldr	r3, [r3, #32]
 3019 0056 BB61     		str	r3, [r7, #24]
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     DAC_TypeDef *DAC_OVPx = pHandle->pParams_str->DAC_OVP_Selection;
 3020              		.loc 8 92 36
 3021 0058 7B68     		ldr	r3, [r7, #4]
 3022 005a D3F89C30 		ldr	r3, [r3, #156]
 3023              		.loc 8 92 18
 3024 005e 5B6A     		ldr	r3, [r3, #36]
 3025 0060 7B61     		str	r3, [r7, #20]
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 3026              		.loc 8 93 32
 3027 0062 7B68     		ldr	r3, [r7, #4]
 3028 0064 D3F89C30 		ldr	r3, [r3, #156]
 3029              		.loc 8 93 18
 3030 0068 1B68     		ldr	r3, [r3]
 3031 006a 3B61     		str	r3, [r7, #16]
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADC_TypeDef *ADCx_1 = pHandle->pParams_str->ADCDataReg1[0];
 3032              		.loc 8 94 34
 3033 006c 7B68     		ldr	r3, [r7, #4]
 3034 006e D3F89C30 		ldr	r3, [r3, #156]
 3035              		.loc 8 94 18
ARM GAS  /tmp/ccA1EUYa.s 			page 432


 3036 0072 9B6B     		ldr	r3, [r3, #56]
 3037 0074 FB60     		str	r3, [r7, #12]
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADC_TypeDef *ADCx_2 = pHandle->pParams_str->ADCDataReg2[0];
 3038              		.loc 8 95 34
 3039 0076 7B68     		ldr	r3, [r7, #4]
 3040 0078 D3F89C30 		ldr	r3, [r3, #156]
 3041              		.loc 8 95 18
 3042 007c 1B6D     		ldr	r3, [r3, #80]
 3043 007e BB60     		str	r3, [r7, #8]
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Check that _Super is the first member of the structure PWMC_R3_2_Handle_t */
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if ((uint32_t)pHandle == (uint32_t)&pHandle->_Super) //cstat !MISRAC2012-Rule-11.4
 3044              		.loc 8 98 40
 3045 0080 7B68     		ldr	r3, [r7, #4]
 3046              		.loc 8 98 30
 3047 0082 1A46     		mov	r2, r3
 3048              		.loc 8 98 9
 3049 0084 7B68     		ldr	r3, [r7, #4]
 3050              		.loc 8 98 8
 3051 0086 9A42     		cmp	r2, r3
 3052 0088 40F0D480 		bne	.L132
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Disable IT and flags in case of LL driver usage
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****        * workaround for unwanted interrupt enabling done by LL driver */
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_DisableIT_EOC(ADCx_1);
 3053              		.loc 8 102 7
 3054 008c F868     		ldr	r0, [r7, #12]
 3055 008e FFF7FEFF 		bl	LL_ADC_DisableIT_EOC
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_ClearFlag_EOC(ADCx_1);
 3056              		.loc 8 103 7
 3057 0092 F868     		ldr	r0, [r7, #12]
 3058 0094 FFF7FEFF 		bl	LL_ADC_ClearFlag_EOC
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_DisableIT_JEOC(ADCx_1);
 3059              		.loc 8 104 7
 3060 0098 F868     		ldr	r0, [r7, #12]
 3061 009a FFF7FEFF 		bl	LL_ADC_DisableIT_JEOC
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_ClearFlag_JEOC(ADCx_1);
 3062              		.loc 8 105 7
 3063 009e F868     		ldr	r0, [r7, #12]
 3064 00a0 FFF7FEFF 		bl	LL_ADC_ClearFlag_JEOC
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_DisableIT_EOC(ADCx_2);
 3065              		.loc 8 106 7
 3066 00a4 B868     		ldr	r0, [r7, #8]
 3067 00a6 FFF7FEFF 		bl	LL_ADC_DisableIT_EOC
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_ClearFlag_EOC(ADCx_2);
 3068              		.loc 8 107 7
 3069 00aa B868     		ldr	r0, [r7, #8]
 3070 00ac FFF7FEFF 		bl	LL_ADC_ClearFlag_EOC
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_DisableIT_JEOC(ADCx_2);
 3071              		.loc 8 108 7
 3072 00b0 B868     		ldr	r0, [r7, #8]
 3073 00b2 FFF7FEFF 		bl	LL_ADC_DisableIT_JEOC
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_ADC_ClearFlag_JEOC(ADCx_2);
 3074              		.loc 8 109 7
 3075 00b6 B868     		ldr	r0, [r7, #8]
 3076 00b8 FFF7FEFF 		bl	LL_ADC_ClearFlag_JEOC
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 433


 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (TIM1 ==  TIMx)
 3077              		.loc 8 111 10
 3078 00bc 3B69     		ldr	r3, [r7, #16]
 3079 00be 5F4A     		ldr	r2, .L133
 3080 00c0 9342     		cmp	r3, r2
 3081 00c2 04D1     		bne	.L119
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* TIM1 Counter Clock stopped when the core is halted */
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_DBGMCU_APB2_GRP1_FreezePeriph(LL_DBGMCU_APB2_GRP1_TIM1_STOP);
 3082              		.loc 8 114 9
 3083 00c4 4FF40060 		mov	r0, #2048
 3084 00c8 FFF7FEFF 		bl	LL_DBGMCU_APB2_GRP1_FreezePeriph
 3085 00cc 03E0     		b	.L120
 3086              	.L119:
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined(TIM8)
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* TIM8 Counter Clock stopped when the core is halted */
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_DBGMCU_APB2_GRP1_FreezePeriph(LL_DBGMCU_APB2_GRP1_TIM8_STOP);
 3087              		.loc 8 120 9
 3088 00ce 4FF40050 		mov	r0, #8192
 3089 00d2 FFF7FEFF 		bl	LL_DBGMCU_APB2_GRP1_FreezePeriph
 3090              	.L120:
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (OPAMPParams != NULL)
 3091              		.loc 8 124 10
 3092 00d6 7B6B     		ldr	r3, [r7, #52]
 3093 00d8 002B     		cmp	r3, #0
 3094 00da 0ED0     		beq	.L121
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Enable OpAmp defined in OPAMPSelect_X table */
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_OPAMP_Enable(OPAMPParams->OPAMPSelect_1[0]);
 3095              		.loc 8 127 9
 3096 00dc 7B6B     		ldr	r3, [r7, #52]
 3097 00de 1B68     		ldr	r3, [r3]
 3098 00e0 1846     		mov	r0, r3
 3099 00e2 FFF7FEFF 		bl	LL_OPAMP_Enable
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_OPAMP_Enable(OPAMPParams->OPAMPSelect_1[1]);
 3100              		.loc 8 128 9
 3101 00e6 7B6B     		ldr	r3, [r7, #52]
 3102 00e8 5B68     		ldr	r3, [r3, #4]
 3103 00ea 1846     		mov	r0, r3
 3104 00ec FFF7FEFF 		bl	LL_OPAMP_Enable
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_OPAMP_Enable(OPAMPParams->OPAMPSelect_2[0]);
 3105              		.loc 8 129 9
 3106 00f0 7B6B     		ldr	r3, [r7, #52]
 3107 00f2 9B69     		ldr	r3, [r3, #24]
 3108 00f4 1846     		mov	r0, r3
 3109 00f6 FFF7FEFF 		bl	LL_OPAMP_Enable
 3110              	.L121:
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
ARM GAS  /tmp/ccA1EUYa.s 			page 434


 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Over current protection phase A */
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (COMP_OCPAx != NULL)
 3111              		.loc 8 137 10
 3112 00fa 3B6B     		ldr	r3, [r7, #48]
 3113 00fc 002B     		cmp	r3, #0
 3114 00fe 1CD0     		beq	.L122
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Inverting input */
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if ((pHandle->pParams_str->CompOCPAInvInput_MODE != EXT_MODE) && (DAC_OCPAx != MC_NULL))
 3115              		.loc 8 140 21
 3116 0100 7B68     		ldr	r3, [r7, #4]
 3117 0102 D3F89C30 		ldr	r3, [r3, #156]
 3118              		.loc 8 140 34
 3119 0106 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 3120              		.loc 8 140 12
 3121 010a 012B     		cmp	r3, #1
 3122 010c 0FD0     		beq	.L123
 3123              		.loc 8 140 71 discriminator 1
 3124 010e 3B6A     		ldr	r3, [r7, #32]
 3125 0110 002B     		cmp	r3, #0
 3126 0112 0CD0     		beq	.L123
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           R3_2_SetAOReferenceVoltage(pHandle->pParams_str->DAC_Channel_OCPA, DAC_OCPAx,
 3127              		.loc 8 142 45
 3128 0114 7B68     		ldr	r3, [r7, #4]
 3129 0116 D3F89C30 		ldr	r3, [r3, #156]
 3130              		.loc 8 142 11
 3131 011a 986A     		ldr	r0, [r3, #40]
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OCP_Threshold));
 3132              		.loc 8 143 56
 3133 011c 7B68     		ldr	r3, [r7, #4]
 3134 011e D3F89C30 		ldr	r3, [r3, #156]
 3135              		.loc 8 143 69
 3136 0122 B3F8A230 		ldrh	r3, [r3, #162]
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OCP_Threshold));
 3137              		.loc 8 142 11
 3138 0126 1A46     		mov	r2, r3
 3139 0128 396A     		ldr	r1, [r7, #32]
 3140 012a FFF7FEFF 		bl	R3_2_SetAOReferenceVoltage
 3141              	.L123:
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Nothing to do */
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Output */
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Enable(COMP_OCPAx);
 3142              		.loc 8 150 9
 3143 012e 386B     		ldr	r0, [r7, #48]
 3144 0130 FFF7FEFF 		bl	LL_COMP_Enable
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Lock(COMP_OCPAx);
 3145              		.loc 8 151 9
 3146 0134 386B     		ldr	r0, [r7, #48]
 3147 0136 FFF7FEFF 		bl	LL_COMP_Lock
 3148              	.L122:
ARM GAS  /tmp/ccA1EUYa.s 			page 435


 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Over current protection phase B */
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (COMP_OCPBx != NULL)
 3149              		.loc 8 159 10
 3150 013a FB6A     		ldr	r3, [r7, #44]
 3151 013c 002B     		cmp	r3, #0
 3152 013e 1CD0     		beq	.L124
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if ((pHandle->pParams_str->CompOCPBInvInput_MODE != EXT_MODE) && (DAC_OCPBx != MC_NULL))
 3153              		.loc 8 161 21
 3154 0140 7B68     		ldr	r3, [r7, #4]
 3155 0142 D3F89C30 		ldr	r3, [r3, #156]
 3156              		.loc 8 161 34
 3157 0146 93F8A830 		ldrb	r3, [r3, #168]	@ zero_extendqisi2
 3158              		.loc 8 161 12
 3159 014a 012B     		cmp	r3, #1
 3160 014c 0FD0     		beq	.L125
 3161              		.loc 8 161 71 discriminator 1
 3162 014e FB69     		ldr	r3, [r7, #28]
 3163 0150 002B     		cmp	r3, #0
 3164 0152 0CD0     		beq	.L125
 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           R3_2_SetAOReferenceVoltage(pHandle->pParams_str->DAC_Channel_OCPB, DAC_OCPBx,
 3165              		.loc 8 163 45
 3166 0154 7B68     		ldr	r3, [r7, #4]
 3167 0156 D3F89C30 		ldr	r3, [r3, #156]
 3168              		.loc 8 163 11
 3169 015a D86A     		ldr	r0, [r3, #44]
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OCP_Threshold));
 3170              		.loc 8 164 56
 3171 015c 7B68     		ldr	r3, [r7, #4]
 3172 015e D3F89C30 		ldr	r3, [r3, #156]
 3173              		.loc 8 164 69
 3174 0162 B3F8A230 		ldrh	r3, [r3, #162]
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OCP_Threshold));
 3175              		.loc 8 163 11
 3176 0166 1A46     		mov	r2, r3
 3177 0168 F969     		ldr	r1, [r7, #28]
 3178 016a FFF7FEFF 		bl	R3_2_SetAOReferenceVoltage
 3179              	.L125:
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Nothing to do */
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Enable(COMP_OCPBx);
 3180              		.loc 8 170 9
 3181 016e F86A     		ldr	r0, [r7, #44]
 3182 0170 FFF7FEFF 		bl	LL_COMP_Enable
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Lock(COMP_OCPBx);
 3183              		.loc 8 171 9
 3184 0174 F86A     		ldr	r0, [r7, #44]
ARM GAS  /tmp/ccA1EUYa.s 			page 436


 3185 0176 FFF7FEFF 		bl	LL_COMP_Lock
 3186              	.L124:
 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Over current protection phase C */
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (COMP_OCPCx != NULL)
 3187              		.loc 8 179 10
 3188 017a BB6A     		ldr	r3, [r7, #40]
 3189 017c 002B     		cmp	r3, #0
 3190 017e 1CD0     		beq	.L126
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if ((pHandle->pParams_str->CompOCPCInvInput_MODE != EXT_MODE)  && (DAC_OCPCx != MC_NULL))
 3191              		.loc 8 181 21
 3192 0180 7B68     		ldr	r3, [r7, #4]
 3193 0182 D3F89C30 		ldr	r3, [r3, #156]
 3194              		.loc 8 181 34
 3195 0186 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3196              		.loc 8 181 12
 3197 018a 012B     		cmp	r3, #1
 3198 018c 0FD0     		beq	.L127
 3199              		.loc 8 181 72 discriminator 1
 3200 018e BB69     		ldr	r3, [r7, #24]
 3201 0190 002B     		cmp	r3, #0
 3202 0192 0CD0     		beq	.L127
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           R3_2_SetAOReferenceVoltage(pHandle->pParams_str->DAC_Channel_OCPC, DAC_OCPCx,
 3203              		.loc 8 183 45
 3204 0194 7B68     		ldr	r3, [r7, #4]
 3205 0196 D3F89C30 		ldr	r3, [r3, #156]
 3206              		.loc 8 183 11
 3207 019a 186B     		ldr	r0, [r3, #48]
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OCP_Threshold));
 3208              		.loc 8 184 56
 3209 019c 7B68     		ldr	r3, [r7, #4]
 3210 019e D3F89C30 		ldr	r3, [r3, #156]
 3211              		.loc 8 184 69
 3212 01a2 B3F8A230 		ldrh	r3, [r3, #162]
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OCP_Threshold));
 3213              		.loc 8 183 11
 3214 01a6 1A46     		mov	r2, r3
 3215 01a8 B969     		ldr	r1, [r7, #24]
 3216 01aa FFF7FEFF 		bl	R3_2_SetAOReferenceVoltage
 3217              	.L127:
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Nothing to do */
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Enable(COMP_OCPCx);
 3218              		.loc 8 190 9
 3219 01ae B86A     		ldr	r0, [r7, #40]
 3220 01b0 FFF7FEFF 		bl	LL_COMP_Enable
 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Lock(COMP_OCPCx);
ARM GAS  /tmp/ccA1EUYa.s 			page 437


 3221              		.loc 8 191 9
 3222 01b4 B86A     		ldr	r0, [r7, #40]
 3223 01b6 FFF7FEFF 		bl	LL_COMP_Lock
 3224              	.L126:
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Over voltage protection */
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (COMP_OVPx != NULL)
 3225              		.loc 8 199 10
 3226 01ba 7B6A     		ldr	r3, [r7, #36]
 3227 01bc 002B     		cmp	r3, #0
 3228 01be 1CD0     		beq	.L128
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Inverting input */
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if ((pHandle->pParams_str->CompOVPInvInput_MODE != EXT_MODE) && (DAC_OVPx != MC_NULL))
 3229              		.loc 8 202 21
 3230 01c0 7B68     		ldr	r3, [r7, #4]
 3231 01c2 D3F89C30 		ldr	r3, [r3, #156]
 3232              		.loc 8 202 34
 3233 01c6 93F8AA30 		ldrb	r3, [r3, #170]	@ zero_extendqisi2
 3234              		.loc 8 202 12
 3235 01ca 012B     		cmp	r3, #1
 3236 01cc 0FD0     		beq	.L129
 3237              		.loc 8 202 70 discriminator 1
 3238 01ce 7B69     		ldr	r3, [r7, #20]
 3239 01d0 002B     		cmp	r3, #0
 3240 01d2 0CD0     		beq	.L129
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           R3_2_SetAOReferenceVoltage(pHandle->pParams_str->DAC_Channel_OVP, DAC_OVPx,
 3241              		.loc 8 204 45
 3242 01d4 7B68     		ldr	r3, [r7, #4]
 3243 01d6 D3F89C30 		ldr	r3, [r3, #156]
 3244              		.loc 8 204 11
 3245 01da 586B     		ldr	r0, [r3, #52]
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OVP_Threshold));
 3246              		.loc 8 205 56
 3247 01dc 7B68     		ldr	r3, [r7, #4]
 3248 01de D3F89C30 		ldr	r3, [r3, #156]
 3249              		.loc 8 205 69
 3250 01e2 B3F8A430 		ldrh	r3, [r3, #164]
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                      (uint16_t)(pHandle->pParams_str->DAC_OVP_Threshold));
 3251              		.loc 8 204 11
 3252 01e6 1A46     		mov	r2, r3
 3253 01e8 7969     		ldr	r1, [r7, #20]
 3254 01ea FFF7FEFF 		bl	R3_2_SetAOReferenceVoltage
 3255              	.L129:
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Nothing to do */
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Output */
 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Enable(COMP_OVPx);
ARM GAS  /tmp/ccA1EUYa.s 			page 438


 3256              		.loc 8 212 9
 3257 01ee 786A     		ldr	r0, [r7, #36]
 3258 01f0 FFF7FEFF 		bl	LL_COMP_Enable
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_COMP_Lock(COMP_OVPx);
 3259              		.loc 8 213 9
 3260 01f4 786A     		ldr	r0, [r7, #36]
 3261 01f6 FFF7FEFF 		bl	LL_COMP_Lock
 3262              	.L128:
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****      
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (0U == LL_ADC_IsEnabled(ADCx_1))
 3263              		.loc 8 222 17
 3264 01fa F868     		ldr	r0, [r7, #12]
 3265 01fc FFF7FEFF 		bl	LL_ADC_IsEnabled
 3266 0200 0346     		mov	r3, r0
 3267              		.loc 8 222 10
 3268 0202 002B     		cmp	r3, #0
 3269 0204 08D1     		bne	.L130
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         R3_2_ADCxInit(ADCx_1);
 3270              		.loc 8 224 9
 3271 0206 F868     		ldr	r0, [r7, #12]
 3272 0208 FFF7FEFF 		bl	R3_2_ADCxInit
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Only the Interrupt of the first ADC is enabled.
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****          * As Both ADCs are fired by HW at the same moment
 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****          * It is safe to consider that both conversion are ready at the same time */
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_ADC_ClearFlag_JEOS(ADCx_1);
 3273              		.loc 8 228 9
 3274 020c F868     		ldr	r0, [r7, #12]
 3275 020e FFF7FEFF 		bl	LL_ADC_ClearFlag_JEOS
 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_ADC_EnableIT_JEOS(ADCx_1);
 3276              		.loc 8 229 9
 3277 0212 F868     		ldr	r0, [r7, #12]
 3278 0214 FFF7FEFF 		bl	LL_ADC_EnableIT_JEOS
 3279              	.L130:
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do ADCx_1 already configured */
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (0U == LL_ADC_IsEnabled(ADCx_2))
 3280              		.loc 8 235 17
 3281 0218 B868     		ldr	r0, [r7, #8]
 3282 021a FFF7FEFF 		bl	LL_ADC_IsEnabled
 3283 021e 0346     		mov	r3, r0
 3284              		.loc 8 235 10
 3285 0220 002B     		cmp	r3, #0
 3286 0222 02D1     		bne	.L131
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         R3_2_ADCxInit(ADCx_2);
 3287              		.loc 8 237 9
ARM GAS  /tmp/ccA1EUYa.s 			page 439


 3288 0224 B868     		ldr	r0, [r7, #8]
 3289 0226 FFF7FEFF 		bl	R3_2_ADCxInit
 3290              	.L131:
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do ADCx_2 already configured */
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       R3_2_TIMxInit(TIMx, &pHandle->_Super);
 3291              		.loc 8 243 7
 3292 022a 7B68     		ldr	r3, [r7, #4]
 3293 022c 1946     		mov	r1, r3
 3294 022e 3869     		ldr	r0, [r7, #16]
 3295 0230 FFF7FEFF 		bl	R3_2_TIMxInit
 3296              	.L132:
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 3297              		.loc 8 252 1
 3298 0234 00BF     		nop
 3299 0236 3837     		adds	r7, r7, #56
 3300              	.LCFI321:
 3301              		.cfi_def_cfa_offset 8
 3302 0238 BD46     		mov	sp, r7
 3303              	.LCFI322:
 3304              		.cfi_def_cfa_register 13
 3305              		@ sp needed
 3306 023a 80BD     		pop	{r7, pc}
 3307              	.L134:
 3308              		.align	2
 3309              	.L133:
 3310 023c 002C0140 		.word	1073818624
 3311              		.cfi_endproc
 3312              	.LFE1438:
 3314              		.section	.text.R3_2_ADCxInit,"ax",%progbits
 3315              		.align	1
 3316              		.syntax unified
 3317              		.thumb
 3318              		.thumb_func
 3319              		.fpu fpv4-sp-d16
 3321              	R3_2_ADCxInit:
 3322              	.LFB1439:
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief Initializes @p ADCx peripheral for current sensing.
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_ADCxInit(ADC_TypeDef *ADCx)
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 3323              		.loc 8 258 1
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccA1EUYa.s 			page 440


 3326              		@ frame_needed = 1, uses_anonymous_args = 0
 3327 0000 80B5     		push	{r7, lr}
 3328              	.LCFI323:
 3329              		.cfi_def_cfa_offset 8
 3330              		.cfi_offset 7, -8
 3331              		.cfi_offset 14, -4
 3332 0002 84B0     		sub	sp, sp, #16
 3333              	.LCFI324:
 3334              		.cfi_def_cfa_offset 24
 3335 0004 00AF     		add	r7, sp, #0
 3336              	.LCFI325:
 3337              		.cfi_def_cfa_register 7
 3338 0006 7860     		str	r0, [r7, #4]
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* - Exit from deep-power-down mode */
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_DisableDeepPowerDown(ADCx);
 3339              		.loc 8 260 3
 3340 0008 7868     		ldr	r0, [r7, #4]
 3341 000a FFF7FEFF 		bl	LL_ADC_DisableDeepPowerDown
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (0U == LL_ADC_IsInternalRegulatorEnabled(ADCx))
 3342              		.loc 8 262 13
 3343 000e 7868     		ldr	r0, [r7, #4]
 3344 0010 FFF7FEFF 		bl	LL_ADC_IsInternalRegulatorEnabled
 3345 0014 0346     		mov	r3, r0
 3346              		.loc 8 262 6
 3347 0016 002B     		cmp	r3, #0
 3348 0018 12D1     		bne	.L136
 3349              	.LBB2:
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Enable ADC internal voltage regulator */
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_EnableInternalRegulator(ADCx);
 3350              		.loc 8 265 5
 3351 001a 7868     		ldr	r0, [r7, #4]
 3352 001c FFF7FEFF 		bl	LL_ADC_EnableInternalRegulator
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Wait for Regulator Startup time, once for both */
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Note: Variable divided by 2 to compensate partially              */
 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /*       CPU processing cycles, scaling in us split to not          */
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /*       exceed 32 bits register capacity and handle low frequency  */
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     volatile uint32_t wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL)
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                          * (SystemCoreClock / (100000UL * 2UL)));
 3353              		.loc 8 272 61
 3354 0020 1D4B     		ldr	r3, .L142
 3355 0022 1B68     		ldr	r3, [r3]
 3356 0024 9B09     		lsrs	r3, r3, #6
 3357 0026 1D4A     		ldr	r2, .L142+4
 3358 0028 A2FB0323 		umull	r2, r3, r2, r3
 3359 002c 9B09     		lsrs	r3, r3, #6
 3360              		.loc 8 272 42
 3361 002e 5B00     		lsls	r3, r3, #1
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                          * (SystemCoreClock / (100000UL * 2UL)));
 3362              		.loc 8 271 23
 3363 0030 FB60     		str	r3, [r7, #12]
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 3364              		.loc 8 273 11
 3365 0032 02E0     		b	.L137
 3366              	.L138:
ARM GAS  /tmp/ccA1EUYa.s 			page 441


 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       wait_loop_index--;
 3367              		.loc 8 275 22
 3368 0034 FB68     		ldr	r3, [r7, #12]
 3369 0036 013B     		subs	r3, r3, #1
 3370 0038 FB60     		str	r3, [r7, #12]
 3371              	.L137:
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 3372              		.loc 8 273 28
 3373 003a FB68     		ldr	r3, [r7, #12]
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 3374              		.loc 8 273 11
 3375 003c 002B     		cmp	r3, #0
 3376 003e F9D1     		bne	.L138
 3377              	.L136:
 3378              	.LBE2:
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_StartCalibration(ADCx, LL_ADC_SINGLE_ENDED);
 3379              		.loc 8 283 3
 3380 0040 7F21     		movs	r1, #127
 3381 0042 7868     		ldr	r0, [r7, #4]
 3382 0044 FFF7FEFF 		bl	LL_ADC_StartCalibration
 284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while (1U == LL_ADC_IsCalibrationOnGoing(ADCx))
 3383              		.loc 8 284 9
 3384 0048 00BF     		nop
 3385              	.L139:
 3386              		.loc 8 284 16 discriminator 1
 3387 004a 7868     		ldr	r0, [r7, #4]
 3388 004c FFF7FEFF 		bl	LL_ADC_IsCalibrationOnGoing
 3389 0050 0346     		mov	r3, r0
 3390              		.loc 8 284 9 discriminator 1
 3391 0052 012B     		cmp	r3, #1
 3392 0054 F9D0     		beq	.L139
 285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
 287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* ADC Enable (must be done after calibration) */
 289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* ADC5-140924: Enabling the ADC by setting ADEN bit soon after polling ADCAL=0
 290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * following a calibration phase, could have no effect on ADC
 291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * within certain AHB/ADC clock ratio
 292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while (0U == LL_ADC_IsActiveFlag_ADRDY(ADCx))
 3393              		.loc 8 293 9
 3394 0056 02E0     		b	.L140
 3395              	.L141:
 294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_Enable(ADCx);
 3396              		.loc 8 295 5
 3397 0058 7868     		ldr	r0, [r7, #4]
 3398 005a FFF7FEFF 		bl	LL_ADC_Enable
 3399              	.L140:
ARM GAS  /tmp/ccA1EUYa.s 			page 442


 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 3400              		.loc 8 293 16
 3401 005e 7868     		ldr	r0, [r7, #4]
 3402 0060 FFF7FEFF 		bl	LL_ADC_IsActiveFlag_ADRDY
 3403 0064 0346     		mov	r3, r0
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 3404              		.loc 8 293 9
 3405 0066 002B     		cmp	r3, #0
 3406 0068 F6D0     		beq	.L141
 296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Clear JSQR from CubeMX setting to avoid not wanting conversion */
 298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_INJ_StartConversion(ADCx);
 3407              		.loc 8 298 3
 3408 006a 7868     		ldr	r0, [r7, #4]
 3409 006c FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
 299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_INJ_StopConversion(ADCx);
 3410              		.loc 8 299 3
 3411 0070 7868     		ldr	r0, [r7, #4]
 3412 0072 FFF7FEFF 		bl	LL_ADC_INJ_StopConversion
 300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* TODO: check if not already done by MX */
 301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_INJ_SetQueueMode(ADCx, LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY);
 3413              		.loc 8 301 3
 3414 0076 4FF40011 		mov	r1, #2097152
 3415 007a 7868     		ldr	r0, [r7, #4]
 3416 007c FFF7FEFF 		bl	LL_ADC_INJ_SetQueueMode
 302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Dummy conversion (ES0431 doc chap. 2.5.8 ADC channel 0 converted instead of the required ADC c
 304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****      Note: Sequence length forced to zero in order to prevent ADC OverRun occurrence */
 305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_REG_SetSequencerLength(ADCx, 0U);
 3417              		.loc 8 305 3
 3418 0080 0021     		movs	r1, #0
 3419 0082 7868     		ldr	r0, [r7, #4]
 3420 0084 FFF7FEFF 		bl	LL_ADC_REG_SetSequencerLength
 306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_ADC_REG_StartConversion(ADCx);
 3421              		.loc 8 306 3
 3422 0088 7868     		ldr	r0, [r7, #4]
 3423 008a FFF7FEFF 		bl	LL_ADC_REG_StartConversion
 307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 3424              		.loc 8 307 1
 3425 008e 00BF     		nop
 3426 0090 1037     		adds	r7, r7, #16
 3427              	.LCFI326:
 3428              		.cfi_def_cfa_offset 8
 3429 0092 BD46     		mov	sp, r7
 3430              	.LCFI327:
 3431              		.cfi_def_cfa_register 13
 3432              		@ sp needed
 3433 0094 80BD     		pop	{r7, pc}
 3434              	.L143:
 3435 0096 00BF     		.align	2
 3436              	.L142:
 3437 0098 00000000 		.word	SystemCoreClock
 3438 009c 632D3E05 		.word	87960931
 3439              		.cfi_endproc
 3440              	.LFE1439:
 3442              		.section	.text.R3_2_TIMxInit,"ax",%progbits
 3443              		.align	1
ARM GAS  /tmp/ccA1EUYa.s 			page 443


 3444              		.syntax unified
 3445              		.thumb
 3446              		.thumb_func
 3447              		.fpu fpv4-sp-d16
 3449              	R3_2_TIMxInit:
 3450              	.LFB1440:
 308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Initializes @p TIMx peripheral with @p pHdl handler for PWM generation.
 311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
 312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_TIMxInit(TIM_TypeDef *TIMx, PWMC_Handle_t *pHdl)
 314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 3451              		.loc 8 314 1
 3452              		.cfi_startproc
 3453              		@ args = 0, pretend = 0, frame = 24
 3454              		@ frame_needed = 1, uses_anonymous_args = 0
 3455 0000 80B5     		push	{r7, lr}
 3456              	.LCFI328:
 3457              		.cfi_def_cfa_offset 8
 3458              		.cfi_offset 7, -8
 3459              		.cfi_offset 14, -4
 3460 0002 86B0     		sub	sp, sp, #24
 3461              	.LCFI329:
 3462              		.cfi_def_cfa_offset 32
 3463 0004 00AF     		add	r7, sp, #0
 3464              	.LCFI330:
 3465              		.cfi_def_cfa_register 7
 3466 0006 7860     		str	r0, [r7, #4]
 3467 0008 3960     		str	r1, [r7]
 315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 3468              		.loc 8 315 23
 3469 000a 3B68     		ldr	r3, [r7]
 3470 000c 3B61     		str	r3, [r7, #16]
 316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   volatile uint32_t Brk2Timeout = 1000;
 3471              		.loc 8 316 21
 3472 000e 4FF47A73 		mov	r3, #1000
 3473 0012 FB60     		str	r3, [r7, #12]
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Disable main TIM counter to ensure
 319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****    * a synchronous start by TIM2 trigger */
 320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_DisableCounter(TIMx);
 3474              		.loc 8 320 3
 3475 0014 7868     		ldr	r0, [r7, #4]
 3476 0016 FFF7FEFF 		bl	LL_TIM_DisableCounter
 321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_RESET);
 3477              		.loc 8 322 3
 3478 001a 0021     		movs	r1, #0
 3479 001c 7868     		ldr	r0, [r7, #4]
 3480 001e FFF7FEFF 		bl	LL_TIM_SetTriggerOutput
 323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enables the TIMx Preload on CC1 Register */
 325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_EnablePreload(TIMx, LL_TIM_CHANNEL_CH1);
 3481              		.loc 8 325 3
 3482 0022 0121     		movs	r1, #1
 3483 0024 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 444


 3484 0026 FFF7FEFF 		bl	LL_TIM_OC_EnablePreload
 326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enables the TIMx Preload on CC2 Register */
 327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_EnablePreload(TIMx, LL_TIM_CHANNEL_CH2);
 3485              		.loc 8 327 3
 3486 002a 1021     		movs	r1, #16
 3487 002c 7868     		ldr	r0, [r7, #4]
 3488 002e FFF7FEFF 		bl	LL_TIM_OC_EnablePreload
 328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enables the TIMx Preload on CC3 Register */
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_EnablePreload(TIMx, LL_TIM_CHANNEL_CH3);
 3489              		.loc 8 329 3
 3490 0032 4FF48071 		mov	r1, #256
 3491 0036 7868     		ldr	r0, [r7, #4]
 3492 0038 FFF7FEFF 		bl	LL_TIM_OC_EnablePreload
 330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enables the TIMx Preload on CC4 Register */
 331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_EnablePreload(TIMx, LL_TIM_CHANNEL_CH4);
 3493              		.loc 8 331 3
 3494 003c 4FF48051 		mov	r1, #4096
 3495 0040 7868     		ldr	r0, [r7, #4]
 3496 0042 FFF7FEFF 		bl	LL_TIM_OC_EnablePreload
 332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Prepare timer for synchronization */
 333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_GenerateEvent_UPDATE(TIMx);
 3497              		.loc 8 333 3
 3498 0046 7868     		ldr	r0, [r7, #4]
 3499 0048 FFF7FEFF 		bl	LL_TIM_GenerateEvent_UPDATE
 334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (2U == pHandle->pParams_str->FreqRatio)
 3500              		.loc 8 334 20
 3501 004c 3B69     		ldr	r3, [r7, #16]
 3502 004e D3F89C30 		ldr	r3, [r3, #156]
 3503              		.loc 8 334 33
 3504 0052 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 3505              		.loc 8 334 6
 3506 0056 022B     		cmp	r3, #2
 3507 0058 21D1     		bne	.L145
 335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (HIGHER_FREQ == pHandle->pParams_str->IsHigherFreqTim)
 3508              		.loc 8 336 31
 3509 005a 3B69     		ldr	r3, [r7, #16]
 3510 005c D3F89C30 		ldr	r3, [r3, #156]
 3511              		.loc 8 336 44
 3512 0060 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 3513              		.loc 8 336 8
 3514 0064 012B     		cmp	r3, #1
 3515 0066 11D1     		bne	.L146
 337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (3U == pHandle->pParams_str->RepetitionCounter)
 3516              		.loc 8 338 24
 3517 0068 3B69     		ldr	r3, [r7, #16]
 3518 006a D3F89C30 		ldr	r3, [r3, #156]
 3519              		.loc 8 338 37
 3520 006e 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 3521              		.loc 8 338 10
 3522 0072 032B     		cmp	r3, #3
 3523 0074 0AD1     		bne	.L146
 339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Set TIMx repetition counter to 1 */
 341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_SetRepetitionCounter(TIMx, 1);
 3524              		.loc 8 341 9
ARM GAS  /tmp/ccA1EUYa.s 			page 445


 3525 0076 0121     		movs	r1, #1
 3526 0078 7868     		ldr	r0, [r7, #4]
 3527 007a FFF7FEFF 		bl	LL_TIM_SetRepetitionCounter
 342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_GenerateEvent_UPDATE(TIMx);
 3528              		.loc 8 342 9
 3529 007e 7868     		ldr	r0, [r7, #4]
 3530 0080 FFF7FEFF 		bl	LL_TIM_GenerateEvent_UPDATE
 343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Repetition counter will be set to 3 at next Update */
 344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_SetRepetitionCounter(TIMx, 3);
 3531              		.loc 8 344 9
 3532 0084 0321     		movs	r1, #3
 3533 0086 7868     		ldr	r0, [r7, #4]
 3534 0088 FFF7FEFF 		bl	LL_TIM_SetRepetitionCounter
 3535              	.L146:
 345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
 349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 351:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
 352:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 353:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
 354:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 355:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_SetCounter(TIMx, (uint32_t)(pHandle->Half_PWMPeriod) - 1U);
 3536              		.loc 8 355 47
 3537 008c 3B69     		ldr	r3, [r7, #16]
 3538 008e B3F89430 		ldrh	r3, [r3, #148]
 3539              		.loc 8 355 5
 3540 0092 013B     		subs	r3, r3, #1
 3541 0094 1946     		mov	r1, r3
 3542 0096 7868     		ldr	r0, [r7, #4]
 3543 0098 FFF7FEFF 		bl	LL_TIM_SetCounter
 3544 009c 26E0     		b	.L147
 3545              	.L145:
 356:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 357:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else /* bFreqRatio equal to 1 or 3 */
 358:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 359:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (M1 == pHandle->_Super.Motor)
 3546              		.loc 8 359 30
 3547 009e 3B69     		ldr	r3, [r7, #16]
 3548 00a0 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 3549              		.loc 8 359 8
 3550 00a4 002B     		cmp	r3, #0
 3551 00a6 21D1     		bne	.L147
 360:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 361:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (1U == pHandle->pParams_str->RepetitionCounter)
 3552              		.loc 8 361 24
 3553 00a8 3B69     		ldr	r3, [r7, #16]
 3554 00aa D3F89C30 		ldr	r3, [r3, #156]
 3555              		.loc 8 361 37
 3556 00ae 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 3557              		.loc 8 361 10
 3558 00b2 012B     		cmp	r3, #1
 3559 00b4 08D1     		bne	.L148
 362:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 363:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_SetCounter(TIMx, (uint32_t)(pHandle->Half_PWMPeriod) - 1U);
ARM GAS  /tmp/ccA1EUYa.s 			page 446


 3560              		.loc 8 363 51
 3561 00b6 3B69     		ldr	r3, [r7, #16]
 3562 00b8 B3F89430 		ldrh	r3, [r3, #148]
 3563              		.loc 8 363 9
 3564 00bc 013B     		subs	r3, r3, #1
 3565 00be 1946     		mov	r1, r3
 3566 00c0 7868     		ldr	r0, [r7, #4]
 3567 00c2 FFF7FEFF 		bl	LL_TIM_SetCounter
 3568 00c6 11E0     		b	.L147
 3569              	.L148:
 364:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 365:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else if (3U == pHandle->pParams_str->RepetitionCounter)
 3570              		.loc 8 365 29
 3571 00c8 3B69     		ldr	r3, [r7, #16]
 3572 00ca D3F89C30 		ldr	r3, [r3, #156]
 3573              		.loc 8 365 42
 3574 00ce 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 3575              		.loc 8 365 15
 3576 00d2 032B     		cmp	r3, #3
 3577 00d4 0AD1     		bne	.L147
 366:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 367:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Set TIMx repetition counter to 1 */
 368:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_SetRepetitionCounter(TIMx, 1);
 3578              		.loc 8 368 9
 3579 00d6 0121     		movs	r1, #1
 3580 00d8 7868     		ldr	r0, [r7, #4]
 3581 00da FFF7FEFF 		bl	LL_TIM_SetRepetitionCounter
 369:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_GenerateEvent_UPDATE(TIMx);
 3582              		.loc 8 369 9
 3583 00de 7868     		ldr	r0, [r7, #4]
 3584 00e0 FFF7FEFF 		bl	LL_TIM_GenerateEvent_UPDATE
 370:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Repetition counter will be set to 3 at next Update */
 371:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_TIM_SetRepetitionCounter(TIMx, 3);
 3585              		.loc 8 371 9
 3586 00e4 0321     		movs	r1, #3
 3587 00e6 7868     		ldr	r0, [r7, #4]
 3588 00e8 FFF7FEFF 		bl	LL_TIM_SetRepetitionCounter
 3589              	.L147:
 372:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 373:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
 374:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 375:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
 376:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 377:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 378:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
 379:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 380:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
 381:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 382:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 383:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_BRK(TIMx);
 3590              		.loc 8 383 3
 3591 00ec 7868     		ldr	r0, [r7, #4]
 3592 00ee FFF7FEFF 		bl	LL_TIM_ClearFlag_BRK
 384:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   uint32_t result;
 385:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   result = LL_TIM_IsActiveFlag_BRK2(TIMx);
 3593              		.loc 8 385 12
 3594 00f2 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 447


 3595 00f4 FFF7FEFF 		bl	LL_TIM_IsActiveFlag_BRK2
 3596 00f8 7861     		str	r0, [r7, #20]
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while ((Brk2Timeout != 0u) && (1U == result))
 3597              		.loc 8 386 9
 3598 00fa 09E0     		b	.L149
 3599              	.L151:
 387:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 388:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_ClearFlag_BRK2(TIMx);
 3600              		.loc 8 388 5
 3601 00fc 7868     		ldr	r0, [r7, #4]
 3602 00fe FFF7FEFF 		bl	LL_TIM_ClearFlag_BRK2
 389:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Brk2Timeout--;
 3603              		.loc 8 389 16
 3604 0102 FB68     		ldr	r3, [r7, #12]
 3605 0104 013B     		subs	r3, r3, #1
 3606 0106 FB60     		str	r3, [r7, #12]
 390:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     result = LL_TIM_IsActiveFlag_BRK2(TIMx);
 3607              		.loc 8 390 14
 3608 0108 7868     		ldr	r0, [r7, #4]
 3609 010a FFF7FEFF 		bl	LL_TIM_IsActiveFlag_BRK2
 3610 010e 7861     		str	r0, [r7, #20]
 3611              	.L149:
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 3612              		.loc 8 386 23
 3613 0110 FB68     		ldr	r3, [r7, #12]
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 3614              		.loc 8 386 9
 3615 0112 002B     		cmp	r3, #0
 3616 0114 02D0     		beq	.L150
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 3617              		.loc 8 386 30 discriminator 1
 3618 0116 7B69     		ldr	r3, [r7, #20]
 3619 0118 012B     		cmp	r3, #1
 3620 011a EFD0     		beq	.L151
 3621              	.L150:
 391:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 392:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_EnableIT_BRK(TIMx);
 3622              		.loc 8 392 3
 3623 011c 7868     		ldr	r0, [r7, #4]
 3624 011e FFF7FEFF 		bl	LL_TIM_EnableIT_BRK
 393:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 394:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enable PWM channel */
 395:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_CC_EnableChannel(TIMx, TIMxCCER_MASK_CH123);
 3625              		.loc 8 395 3
 3626 0122 40F25551 		movw	r1, #1365
 3627 0126 7868     		ldr	r0, [r7, #4]
 3628 0128 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
 396:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 397:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 3629              		.loc 8 397 1
 3630 012c 00BF     		nop
 3631 012e 1837     		adds	r7, r7, #24
 3632              	.LCFI331:
 3633              		.cfi_def_cfa_offset 8
 3634 0130 BD46     		mov	sp, r7
 3635              	.LCFI332:
 3636              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccA1EUYa.s 			page 448


 3637              		@ sp needed
 3638 0132 80BD     		pop	{r7, pc}
 3639              		.cfi_endproc
 3640              	.LFE1440:
 3642              		.section	.text.R3_2_SetOffsetCalib,"ax",%progbits
 3643              		.align	1
 3644              		.weak	R3_2_SetOffsetCalib
 3645              		.syntax unified
 3646              		.thumb
 3647              		.thumb_func
 3648              		.fpu fpv4-sp-d16
 3650              	R3_2_SetOffsetCalib:
 3651              	.LFB1441:
 398:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 399:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 400:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Stores in the @p pHdl handler the calibrated @p offsets.
 401:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
 402:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 403:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_SetOffsetCalib(PWMC_Handle_t *pHdl, PolarizationOffsets_t *offsets)
 404:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 3652              		.loc 8 404 1
 3653              		.cfi_startproc
 3654              		@ args = 0, pretend = 0, frame = 16
 3655              		@ frame_needed = 1, uses_anonymous_args = 0
 3656              		@ link register save eliminated.
 3657 0000 80B4     		push	{r7}
 3658              	.LCFI333:
 3659              		.cfi_def_cfa_offset 4
 3660              		.cfi_offset 7, -4
 3661 0002 85B0     		sub	sp, sp, #20
 3662              	.LCFI334:
 3663              		.cfi_def_cfa_offset 24
 3664 0004 00AF     		add	r7, sp, #0
 3665              	.LCFI335:
 3666              		.cfi_def_cfa_register 7
 3667 0006 7860     		str	r0, [r7, #4]
 3668 0008 3960     		str	r1, [r7]
 405:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 406:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if ((MC_NULL == offsets) || (MC_NULL == pHdl))
 407:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 408:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
 409:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 410:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
 411:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 412:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 413:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 3669              		.loc 8 413 25
 3670 000a 7B68     		ldr	r3, [r7, #4]
 3671 000c FB60     		str	r3, [r7, #12]
 414:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 415:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseAOffset = (uint32_t)offsets->phaseAOffset;
 3672              		.loc 8 415 46
 3673 000e 3B68     		ldr	r3, [r7]
 3674 0010 1B68     		ldr	r3, [r3]
 3675              		.loc 8 415 29
 3676 0012 1A46     		mov	r2, r3
 3677              		.loc 8 415 27
ARM GAS  /tmp/ccA1EUYa.s 			page 449


 3678 0014 FB68     		ldr	r3, [r7, #12]
 3679 0016 C3F88820 		str	r2, [r3, #136]
 416:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseBOffset = (uint32_t)offsets->phaseBOffset;
 3680              		.loc 8 416 46
 3681 001a 3B68     		ldr	r3, [r7]
 3682 001c 5B68     		ldr	r3, [r3, #4]
 3683              		.loc 8 416 29
 3684 001e 1A46     		mov	r2, r3
 3685              		.loc 8 416 27
 3686 0020 FB68     		ldr	r3, [r7, #12]
 3687 0022 C3F88C20 		str	r2, [r3, #140]
 417:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseCOffset = (uint32_t)offsets->phaseCOffset;
 3688              		.loc 8 417 46
 3689 0026 3B68     		ldr	r3, [r7]
 3690 0028 9B68     		ldr	r3, [r3, #8]
 3691              		.loc 8 417 29
 3692 002a 1A46     		mov	r2, r3
 3693              		.loc 8 417 27
 3694 002c FB68     		ldr	r3, [r7, #12]
 3695 002e C3F89020 		str	r2, [r3, #144]
 418:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHdl->offsetCalibStatus = true;
 3696              		.loc 8 418 29
 3697 0032 7B68     		ldr	r3, [r7, #4]
 3698 0034 0122     		movs	r2, #1
 3699 0036 83F87F20 		strb	r2, [r3, #127]
 419:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 420:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 421:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 422:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 3700              		.loc 8 422 1
 3701 003a 00BF     		nop
 3702 003c 1437     		adds	r7, r7, #20
 3703              	.LCFI336:
 3704              		.cfi_def_cfa_offset 4
 3705 003e BD46     		mov	sp, r7
 3706              	.LCFI337:
 3707              		.cfi_def_cfa_register 13
 3708              		@ sp needed
 3709 0040 5DF8047B 		ldr	r7, [sp], #4
 3710              	.LCFI338:
 3711              		.cfi_restore 7
 3712              		.cfi_def_cfa_offset 0
 3713 0044 7047     		bx	lr
 3714              		.cfi_endproc
 3715              	.LFE1441:
 3717              		.section	.text.R3_2_GetOffsetCalib,"ax",%progbits
 3718              		.align	1
 3719              		.weak	R3_2_GetOffsetCalib
 3720              		.syntax unified
 3721              		.thumb
 3722              		.thumb_func
 3723              		.fpu fpv4-sp-d16
 3725              	R3_2_GetOffsetCalib:
 3726              	.LFB1442:
 423:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 424:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 425:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief Reads the calibrated @p offsets stored in @p pHdl handler.
ARM GAS  /tmp/ccA1EUYa.s 			page 450


 426:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
 427:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 428:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_GetOffsetCalib(PWMC_Handle_t *pHdl, PolarizationOffsets_t *offsets)
 429:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 3727              		.loc 8 429 1
 3728              		.cfi_startproc
 3729              		@ args = 0, pretend = 0, frame = 16
 3730              		@ frame_needed = 1, uses_anonymous_args = 0
 3731              		@ link register save eliminated.
 3732 0000 80B4     		push	{r7}
 3733              	.LCFI339:
 3734              		.cfi_def_cfa_offset 4
 3735              		.cfi_offset 7, -4
 3736 0002 85B0     		sub	sp, sp, #20
 3737              	.LCFI340:
 3738              		.cfi_def_cfa_offset 24
 3739 0004 00AF     		add	r7, sp, #0
 3740              	.LCFI341:
 3741              		.cfi_def_cfa_register 7
 3742 0006 7860     		str	r0, [r7, #4]
 3743 0008 3960     		str	r1, [r7]
 430:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 431:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == offsets)
 432:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 433:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
 434:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 435:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
 436:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 437:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 438:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 3744              		.loc 8 438 23
 3745 000a 7B68     		ldr	r3, [r7, #4]
 3746 000c FB60     		str	r3, [r7, #12]
 439:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 440:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   offsets->phaseAOffset = (int32_t)pHandle->PhaseAOffset;
 3747              		.loc 8 440 43
 3748 000e FB68     		ldr	r3, [r7, #12]
 3749 0010 D3F88830 		ldr	r3, [r3, #136]
 3750              		.loc 8 440 27
 3751 0014 1A46     		mov	r2, r3
 3752              		.loc 8 440 25
 3753 0016 3B68     		ldr	r3, [r7]
 3754 0018 1A60     		str	r2, [r3]
 441:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   offsets->phaseBOffset = (int32_t)pHandle->PhaseBOffset;
 3755              		.loc 8 441 43
 3756 001a FB68     		ldr	r3, [r7, #12]
 3757 001c D3F88C30 		ldr	r3, [r3, #140]
 3758              		.loc 8 441 27
 3759 0020 1A46     		mov	r2, r3
 3760              		.loc 8 441 25
 3761 0022 3B68     		ldr	r3, [r7]
 3762 0024 5A60     		str	r2, [r3, #4]
 442:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   offsets->phaseCOffset = (int32_t)pHandle->PhaseCOffset;
 3763              		.loc 8 442 43
 3764 0026 FB68     		ldr	r3, [r7, #12]
 3765 0028 D3F89030 		ldr	r3, [r3, #144]
 3766              		.loc 8 442 27
ARM GAS  /tmp/ccA1EUYa.s 			page 451


 3767 002c 1A46     		mov	r2, r3
 3768              		.loc 8 442 25
 3769 002e 3B68     		ldr	r3, [r7]
 3770 0030 9A60     		str	r2, [r3, #8]
 443:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 444:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 445:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 446:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 3771              		.loc 8 446 1
 3772 0032 00BF     		nop
 3773 0034 1437     		adds	r7, r7, #20
 3774              	.LCFI342:
 3775              		.cfi_def_cfa_offset 4
 3776 0036 BD46     		mov	sp, r7
 3777              	.LCFI343:
 3778              		.cfi_def_cfa_register 13
 3779              		@ sp needed
 3780 0038 5DF8047B 		ldr	r7, [sp], #4
 3781              	.LCFI344:
 3782              		.cfi_restore 7
 3783              		.cfi_def_cfa_offset 0
 3784 003c 7047     		bx	lr
 3785              		.cfi_endproc
 3786              	.LFE1442:
 3788              		.section	.text.R3_2_CurrentReadingPolarization,"ax",%progbits
 3789              		.align	1
 3790              		.weak	R3_2_CurrentReadingPolarization
 3791              		.syntax unified
 3792              		.thumb
 3793              		.thumb_func
 3794              		.fpu fpv4-sp-d16
 3796              	R3_2_CurrentReadingPolarization:
 3797              	.LFB1443:
 447:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 448:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 449:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Stores into the @p pHdl handler the voltage present on Ia and
 450:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         Ib current feedback analog channels when no current is flowing into the
 451:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         motor.
 452:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
 453:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 454:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_CurrentReadingPolarization(PWMC_Handle_t *pHdl)
 455:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 3798              		.loc 8 455 1
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 32
 3801              		@ frame_needed = 1, uses_anonymous_args = 0
 3802 0000 80B5     		push	{r7, lr}
 3803              	.LCFI345:
 3804              		.cfi_def_cfa_offset 8
 3805              		.cfi_offset 7, -8
 3806              		.cfi_offset 14, -4
 3807 0002 88B0     		sub	sp, sp, #32
 3808              	.LCFI346:
 3809              		.cfi_def_cfa_offset 40
 3810 0004 00AF     		add	r7, sp, #0
 3811              	.LCFI347:
 3812              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccA1EUYa.s 			page 452


 3813 0006 7860     		str	r0, [r7, #4]
 456:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 3814              		.loc 8 456 23
 3815 0008 7B68     		ldr	r3, [r7, #4]
 3816 000a FB61     		str	r3, [r7, #28]
 457:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 3817              		.loc 8 457 30
 3818 000c FB69     		ldr	r3, [r7, #28]
 3819 000e D3F89C30 		ldr	r3, [r3, #156]
 3820              		.loc 8 457 16
 3821 0012 1B68     		ldr	r3, [r3]
 3822 0014 BB61     		str	r3, [r7, #24]
 458:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   ADC_TypeDef *ADCx_1 = pHandle->pParams_str->ADCDataReg1[0];
 3823              		.loc 8 458 32
 3824 0016 FB69     		ldr	r3, [r7, #28]
 3825 0018 D3F89C30 		ldr	r3, [r3, #156]
 3826              		.loc 8 458 16
 3827 001c 9B6B     		ldr	r3, [r3, #56]
 3828 001e 7B61     		str	r3, [r7, #20]
 459:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   ADC_TypeDef *ADCx_2 = pHandle->pParams_str->ADCDataReg2[0];
 3829              		.loc 8 459 32
 3830 0020 FB69     		ldr	r3, [r7, #28]
 3831 0022 D3F89C30 		ldr	r3, [r3, #156]
 3832              		.loc 8 459 16
 3833 0026 1B6D     		ldr	r3, [r3, #80]
 3834 0028 3B61     		str	r3, [r7, #16]
 460:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   volatile PWMC_GetPhaseCurr_Cb_t GetPhaseCurrCbSave;
 461:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   volatile PWMC_SetSampPointSectX_Cb_t SetSampPointSectXCbSave;
 462:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 463:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (true == pHandle->_Super.offsetCalibStatus)
 3835              		.loc 8 463 30
 3836 002a FB69     		ldr	r3, [r7, #28]
 3837 002c 93F87F30 		ldrb	r3, [r3, #127]	@ zero_extendqisi2
 3838              		.loc 8 463 6
 3839 0030 002B     		cmp	r3, #0
 3840 0032 0AD0     		beq	.L155
 464:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 465:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_INJ_StartConversion(ADCx_1);
 3841              		.loc 8 465 5
 3842 0034 7869     		ldr	r0, [r7, #20]
 3843 0036 FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
 466:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_INJ_StartConversion(ADCx_2);
 3844              		.loc 8 466 5
 3845 003a 3869     		ldr	r0, [r7, #16]
 3846 003c FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
 467:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADC_ExternalPolarityInjected = (uint16_t)LL_ADC_INJ_TRIG_EXT_RISING;
 3847              		.loc 8 467 43
 3848 0040 FB69     		ldr	r3, [r7, #28]
 3849 0042 8022     		movs	r2, #128
 3850 0044 A3F89620 		strh	r2, [r3, #150]	@ movhi
 3851 0048 B4E0     		b	.L156
 3852              	.L155:
 468:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 469:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
 470:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 471:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Save callback routines */
 472:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     GetPhaseCurrCbSave = pHandle->_Super.pFctGetPhaseCurrents;
ARM GAS  /tmp/ccA1EUYa.s 			page 453


 3853              		.loc 8 472 41
 3854 004a FB69     		ldr	r3, [r7, #28]
 3855 004c 1B68     		ldr	r3, [r3]
 3856              		.loc 8 472 24
 3857 004e FB60     		str	r3, [r7, #12]
 473:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     SetSampPointSectXCbSave = pHandle->_Super.pFctSetADCSampPointSectX;
 3858              		.loc 8 473 46
 3859 0050 FB69     		ldr	r3, [r7, #28]
 3860 0052 5B69     		ldr	r3, [r3, #20]
 3861              		.loc 8 473 29
 3862 0054 BB60     		str	r3, [r7, #8]
 474:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 475:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseAOffset = 0U;
 3863              		.loc 8 475 27
 3864 0056 FB69     		ldr	r3, [r7, #28]
 3865 0058 0022     		movs	r2, #0
 3866 005a C3F88820 		str	r2, [r3, #136]
 476:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseBOffset = 0U;
 3867              		.loc 8 476 27
 3868 005e FB69     		ldr	r3, [r7, #28]
 3869 0060 0022     		movs	r2, #0
 3870 0062 C3F88C20 		str	r2, [r3, #140]
 477:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseCOffset = 0U;
 3871              		.loc 8 477 27
 3872 0066 FB69     		ldr	r3, [r7, #28]
 3873 0068 0022     		movs	r2, #0
 3874 006a C3F89020 		str	r2, [r3, #144]
 478:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PolarizationCounter = 0U;
 3875              		.loc 8 478 34
 3876 006e FB69     		ldr	r3, [r7, #28]
 3877 0070 0022     		movs	r2, #0
 3878 0072 83F89820 		strb	r2, [r3, #152]
 479:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 480:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* It forces inactive level on TIMx CHy and CHyN */
 481:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_DisableChannel(TIMx, TIMxCCER_MASK_CH123);
 3879              		.loc 8 481 5
 3880 0076 40F25551 		movw	r1, #1365
 3881 007a B869     		ldr	r0, [r7, #24]
 3882 007c FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
 482:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 483:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Offset calibration for all phases */
 484:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Change function to be executed in ADCx_ISR */
 485:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctGetPhaseCurrents = &R3_2_HFCurrentsPolarizationAB;
 3883              		.loc 8 485 42
 3884 0080 FB69     		ldr	r3, [r7, #28]
 3885 0082 524A     		ldr	r2, .L158
 3886 0084 1A60     		str	r2, [r3]
 486:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctSetADCSampPointSectX = &R3_2_SetADCSampPointPolarization;
 3887              		.loc 8 486 46
 3888 0086 FB69     		ldr	r3, [r7, #28]
 3889 0088 514A     		ldr	r2, .L158+4
 3890 008a 5A61     		str	r2, [r3, #20]
 487:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADC_ExternalPolarityInjected = (uint16_t)LL_ADC_INJ_TRIG_EXT_RISING;
 3891              		.loc 8 487 43
 3892 008c FB69     		ldr	r3, [r7, #28]
 3893 008e 8022     		movs	r2, #128
 3894 0090 A3F89620 		strh	r2, [r3, #150]	@ movhi
ARM GAS  /tmp/ccA1EUYa.s 			page 454


 488:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 489:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* We want to polarize calibration Phase A and Phase B, so we select SECTOR_5 */
 490:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PolarizationSector=SECTOR_5;
 3895              		.loc 8 490 32
 3896 0094 FB69     		ldr	r3, [r7, #28]
 3897 0096 0422     		movs	r2, #4
 3898 0098 83F89920 		strb	r2, [r3, #153]
 491:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Required to force first polarization conversion on SECTOR_5 */
 492:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Sector = SECTOR_5;
 3899              		.loc 8 492 28
 3900 009c FB69     		ldr	r3, [r7, #28]
 3901 009e 0422     		movs	r2, #4
 3902 00a0 83F87A20 		strb	r2, [r3, #122]
 493:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_2_SwitchOnPWM(&pHandle->_Super);
 3903              		.loc 8 493 5
 3904 00a4 FB69     		ldr	r3, [r7, #28]
 3905 00a6 1846     		mov	r0, r3
 3906 00a8 FFF7FEFF 		bl	R3_2_SwitchOnPWM
 494:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 495:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* IF CH4 is enabled, it means that JSQR is now configured to sample polarization current
 496:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****      * while ( LL_TIM_CC_IsEnabledChannel(TIMx, LL_TIM_CHANNEL_CH4) == 0u ) */
 497:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (((TIMx->CR2) & TIM_CR2_MMS_Msk) != LL_TIM_TRGO_OC4REF)
 3907              		.loc 8 497 11
 3908 00ac 00BF     		nop
 3909              	.L157:
 3910              		.loc 8 497 18 discriminator 1
 3911 00ae BB69     		ldr	r3, [r7, #24]
 3912 00b0 5A68     		ldr	r2, [r3, #4]
 3913              		.loc 8 497 25 discriminator 1
 3914 00b2 484B     		ldr	r3, .L158+8
 3915 00b4 1340     		ands	r3, r3, r2
 3916              		.loc 8 497 11 discriminator 1
 3917 00b6 702B     		cmp	r3, #112
 3918 00b8 F9D1     		bne	.L157
 498:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 499:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
 500:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 501:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* It is the right time to start the ADC without unwanted conversion */
 502:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Start ADC to wait for external trigger. This is series dependant */
 503:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_INJ_StartConversion(ADCx_1);
 3919              		.loc 8 503 5
 3920 00ba 7869     		ldr	r0, [r7, #20]
 3921 00bc FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
 504:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_INJ_StartConversion(ADCx_2);
 3922              		.loc 8 504 5
 3923 00c0 3869     		ldr	r0, [r7, #16]
 3924 00c2 FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
 505:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 506:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Wait for NB_CONVERSIONS to be executed */
 507:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     waitForPolarizationEnd(TIMx,
 3925              		.loc 8 507 5
 3926 00c6 FB69     		ldr	r3, [r7, #28]
 3927 00c8 03F15601 		add	r1, r3, #86
 508:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            &pHandle->_Super.SWerror,
 509:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            pHandle->pParams_str->RepetitionCounter,
 3928              		.loc 8 509 35
 3929 00cc FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccA1EUYa.s 			page 455


 3930 00ce D3F89C30 		ldr	r3, [r3, #156]
 507:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            &pHandle->_Super.SWerror,
 3931              		.loc 8 507 5
 3932 00d2 93F8A620 		ldrb	r2, [r3, #166]	@ zero_extendqisi2
 3933 00d6 FB69     		ldr	r3, [r7, #28]
 3934 00d8 9833     		adds	r3, r3, #152
 3935 00da B869     		ldr	r0, [r7, #24]
 3936 00dc FFF7FEFF 		bl	waitForPolarizationEnd
 510:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            &pHandle->PolarizationCounter);
 511:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 512:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_2_SwitchOffPWM(&pHandle->_Super);
 3937              		.loc 8 512 5
 3938 00e0 FB69     		ldr	r3, [r7, #28]
 3939 00e2 1846     		mov	r0, r3
 3940 00e4 FFF7FEFF 		bl	R3_2_SwitchOffPWM
 513:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 514:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Offset calibration for C phase */
 515:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PolarizationCounter = 0U;
 3941              		.loc 8 515 34
 3942 00e8 FB69     		ldr	r3, [r7, #28]
 3943 00ea 0022     		movs	r2, #0
 3944 00ec 83F89820 		strb	r2, [r3, #152]
 516:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 517:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Change function to be executed in ADCx_ISR */
 518:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctGetPhaseCurrents = &R3_2_HFCurrentsPolarizationC;
 3945              		.loc 8 518 42
 3946 00f0 FB69     		ldr	r3, [r7, #28]
 3947 00f2 394A     		ldr	r2, .L158+12
 3948 00f4 1A60     		str	r2, [r3]
 519:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* We want to polarize Phase C, so we select SECTOR_1 */
 520:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PolarizationSector=SECTOR_1;
 3949              		.loc 8 520 32
 3950 00f6 FB69     		ldr	r3, [r7, #28]
 3951 00f8 0022     		movs	r2, #0
 3952 00fa 83F89920 		strb	r2, [r3, #153]
 521:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Required to force first polarization conversion on SECTOR_1 */
 522:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Sector = SECTOR_1;
 3953              		.loc 8 522 28
 3954 00fe FB69     		ldr	r3, [r7, #28]
 3955 0100 0022     		movs	r2, #0
 3956 0102 83F87A20 		strb	r2, [r3, #122]
 523:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_2_SwitchOnPWM(&pHandle->_Super);
 3957              		.loc 8 523 5
 3958 0106 FB69     		ldr	r3, [r7, #28]
 3959 0108 1846     		mov	r0, r3
 3960 010a FFF7FEFF 		bl	R3_2_SwitchOnPWM
 524:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 525:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Wait for NB_CONVERSIONS to be executed */
 526:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     waitForPolarizationEnd(TIMx,
 3961              		.loc 8 526 5
 3962 010e FB69     		ldr	r3, [r7, #28]
 3963 0110 03F15601 		add	r1, r3, #86
 527:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            &pHandle->_Super.SWerror,
 528:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            pHandle->pParams_str->RepetitionCounter,
 3964              		.loc 8 528 35
 3965 0114 FB69     		ldr	r3, [r7, #28]
 3966 0116 D3F89C30 		ldr	r3, [r3, #156]
ARM GAS  /tmp/ccA1EUYa.s 			page 456


 526:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            &pHandle->_Super.SWerror,
 3967              		.loc 8 526 5
 3968 011a 93F8A620 		ldrb	r2, [r3, #166]	@ zero_extendqisi2
 3969 011e FB69     		ldr	r3, [r7, #28]
 3970 0120 9833     		adds	r3, r3, #152
 3971 0122 B869     		ldr	r0, [r7, #24]
 3972 0124 FFF7FEFF 		bl	waitForPolarizationEnd
 529:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                            &pHandle->PolarizationCounter);
 530:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 531:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_2_SwitchOffPWM(&pHandle->_Super);
 3973              		.loc 8 531 5
 3974 0128 FB69     		ldr	r3, [r7, #28]
 3975 012a 1846     		mov	r0, r3
 3976 012c FFF7FEFF 		bl	R3_2_SwitchOffPWM
 532:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseAOffset /= NB_CONVERSIONS;
 3977              		.loc 8 532 27
 3978 0130 FB69     		ldr	r3, [r7, #28]
 3979 0132 D3F88830 		ldr	r3, [r3, #136]
 3980 0136 1A09     		lsrs	r2, r3, #4
 3981 0138 FB69     		ldr	r3, [r7, #28]
 3982 013a C3F88820 		str	r2, [r3, #136]
 533:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseBOffset /= NB_CONVERSIONS;
 3983              		.loc 8 533 27
 3984 013e FB69     		ldr	r3, [r7, #28]
 3985 0140 D3F88C30 		ldr	r3, [r3, #140]
 3986 0144 1A09     		lsrs	r2, r3, #4
 3987 0146 FB69     		ldr	r3, [r7, #28]
 3988 0148 C3F88C20 		str	r2, [r3, #140]
 534:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseCOffset /= NB_CONVERSIONS;
 3989              		.loc 8 534 27
 3990 014c FB69     		ldr	r3, [r7, #28]
 3991 014e D3F89030 		ldr	r3, [r3, #144]
 3992 0152 1A09     		lsrs	r2, r3, #4
 3993 0154 FB69     		ldr	r3, [r7, #28]
 3994 0156 C3F89020 		str	r2, [r3, #144]
 535:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.offsetCalibStatus = true;
 3995              		.loc 8 535 39
 3996 015a FB69     		ldr	r3, [r7, #28]
 3997 015c 0122     		movs	r2, #1
 3998 015e 83F87F20 		strb	r2, [r3, #127]
 536:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 537:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Change back function to be executed in ADCx_ISR */
 538:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctGetPhaseCurrents = GetPhaseCurrCbSave;
 3999              		.loc 8 538 42
 4000 0162 FA68     		ldr	r2, [r7, #12]
 4001 0164 FB69     		ldr	r3, [r7, #28]
 4002 0166 1A60     		str	r2, [r3]
 539:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctSetADCSampPointSectX = SetSampPointSectXCbSave;
 4003              		.loc 8 539 46
 4004 0168 BA68     		ldr	r2, [r7, #8]
 4005 016a FB69     		ldr	r3, [r7, #28]
 4006 016c 5A61     		str	r2, [r3, #20]
 540:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 541:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* It over write TIMx CCRy wrongly written by FOC during calibration so as to
 542:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****      force 50% duty cycle on the three inverer legs */
 543:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Disable TIMx preload */
 544:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH1 (TIMx, pHandle->Half_PWMPeriod >> 1u);
ARM GAS  /tmp/ccA1EUYa.s 			page 457


 4007              		.loc 8 544 43
 4008 016e FB69     		ldr	r3, [r7, #28]
 4009 0170 B3F89430 		ldrh	r3, [r3, #148]
 4010              		.loc 8 544 5
 4011 0174 5B08     		lsrs	r3, r3, #1
 4012 0176 9BB2     		uxth	r3, r3
 4013 0178 1946     		mov	r1, r3
 4014 017a B869     		ldr	r0, [r7, #24]
 4015 017c FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
 545:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH2 (TIMx, pHandle->Half_PWMPeriod >> 1u);
 4016              		.loc 8 545 43
 4017 0180 FB69     		ldr	r3, [r7, #28]
 4018 0182 B3F89430 		ldrh	r3, [r3, #148]
 4019              		.loc 8 545 5
 4020 0186 5B08     		lsrs	r3, r3, #1
 4021 0188 9BB2     		uxth	r3, r3
 4022 018a 1946     		mov	r1, r3
 4023 018c B869     		ldr	r0, [r7, #24]
 4024 018e FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH2
 546:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH3 (TIMx, pHandle->Half_PWMPeriod >> 1u);
 4025              		.loc 8 546 43
 4026 0192 FB69     		ldr	r3, [r7, #28]
 4027 0194 B3F89430 		ldrh	r3, [r3, #148]
 4028              		.loc 8 546 5
 4029 0198 5B08     		lsrs	r3, r3, #1
 4030 019a 9BB2     		uxth	r3, r3
 4031 019c 1946     		mov	r1, r3
 4032 019e B869     		ldr	r0, [r7, #24]
 4033 01a0 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
 547:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* generate  COM event to apply new CC values */
 548:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_GenerateEvent_COM( TIMx );
 4034              		.loc 8 548 5
 4035 01a4 B869     		ldr	r0, [r7, #24]
 4036 01a6 FFF7FEFF 		bl	LL_TIM_GenerateEvent_COM
 549:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 550:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* It re-enable drive of TIMx CHy and CHyN by TIMx CHyRef */
 551:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_EnableChannel(TIMx, TIMxCCER_MASK_CH123);
 4037              		.loc 8 551 5
 4038 01aa 40F25551 		movw	r1, #1365
 4039 01ae B869     		ldr	r0, [r7, #24]
 4040 01b0 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
 4041              	.L156:
 552:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 553:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* At the end of calibration, all phases are at 50% we will sample A&B */
 554:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.Sector = SECTOR_5;
 4042              		.loc 8 554 26
 4043 01b4 FB69     		ldr	r3, [r7, #28]
 4044 01b6 0422     		movs	r2, #4
 4045 01b8 83F87A20 		strb	r2, [r3, #122]
 555:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 556:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.BrakeActionLock = false;
 4046              		.loc 8 556 35
 4047 01bc FB69     		ldr	r3, [r7, #28]
 4048 01be 0022     		movs	r2, #0
 4049 01c0 83F88320 		strb	r2, [r3, #131]
 557:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 558:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
ARM GAS  /tmp/ccA1EUYa.s 			page 458


 4050              		.loc 8 558 1
 4051 01c4 00BF     		nop
 4052 01c6 2037     		adds	r7, r7, #32
 4053              	.LCFI348:
 4054              		.cfi_def_cfa_offset 8
 4055 01c8 BD46     		mov	sp, r7
 4056              	.LCFI349:
 4057              		.cfi_def_cfa_register 13
 4058              		@ sp needed
 4059 01ca 80BD     		pop	{r7, pc}
 4060              	.L159:
 4061              		.align	2
 4062              	.L158:
 4063 01cc 00000000 		.word	R3_2_HFCurrentsPolarizationAB
 4064 01d0 00000000 		.word	R3_2_SetADCSampPointPolarization
 4065 01d4 70000002 		.word	33554544
 4066 01d8 00000000 		.word	R3_2_HFCurrentsPolarizationC
 4067              		.cfi_endproc
 4068              	.LFE1443:
 4070              		.section	.text.R3_2_GetPhaseCurrents,"ax",%progbits
 4071              		.align	1
 4072              		.weak	R3_2_GetPhaseCurrents
 4073              		.syntax unified
 4074              		.thumb
 4075              		.thumb_func
 4076              		.fpu fpv4-sp-d16
 4078              	R3_2_GetPhaseCurrents:
 4079              	.LFB1444:
 559:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 560:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
 561:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 562:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 563:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 564:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 565:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 566:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 567:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 568:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Computes and stores in @p pHdl handler the latest converted motor phase currents in @p 
 569:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
 570:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 571:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_GetPhaseCurrents(PWMC_Handle_t *pHdl, ab_t *Iab)
 572:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 4080              		.loc 8 572 1
 4081              		.cfi_startproc
 4082              		@ args = 0, pretend = 0, frame = 32
 4083              		@ frame_needed = 1, uses_anonymous_args = 0
 4084              		@ link register save eliminated.
 4085 0000 80B4     		push	{r7}
 4086              	.LCFI350:
 4087              		.cfi_def_cfa_offset 4
 4088              		.cfi_offset 7, -4
 4089 0002 89B0     		sub	sp, sp, #36
 4090              	.LCFI351:
 4091              		.cfi_def_cfa_offset 40
 4092 0004 00AF     		add	r7, sp, #0
 4093              	.LCFI352:
 4094              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccA1EUYa.s 			page 459


 4095 0006 7860     		str	r0, [r7, #4]
 4096 0008 3960     		str	r1, [r7]
 573:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 574:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == Iab)
 575:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 576:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
 577:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 578:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
 579:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 580:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 581:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     int32_t Aux;
 582:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg1;
 583:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg2;
 584:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl;  //cstat !MISRAC2012-Rule-11.3
 4097              		.loc 8 584 25
 4098 000a 7B68     		ldr	r3, [r7, #4]
 4099 000c FB61     		str	r3, [r7, #28]
 585:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 4100              		.loc 8 585 32
 4101 000e FB69     		ldr	r3, [r7, #28]
 4102 0010 D3F89C30 		ldr	r3, [r3, #156]
 4103              		.loc 8 585 18
 4104 0014 1B68     		ldr	r3, [r3]
 4105 0016 BB61     		str	r3, [r7, #24]
 586:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint8_t Sector;
 587:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 588:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Sector = (uint8_t)pHandle->_Super.Sector;
 4106              		.loc 8 588 12
 4107 0018 FB69     		ldr	r3, [r7, #28]
 4108 001a 93F87A30 		ldrb	r3, [r3, #122]
 4109 001e FB75     		strb	r3, [r7, #23]
 589:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADCDataReg1 = pHandle->pParams_str->ADCDataReg1[Sector]->JDR1;
 4110              		.loc 8 589 26
 4111 0020 FB69     		ldr	r3, [r7, #28]
 4112 0022 D3F89C30 		ldr	r3, [r3, #156]
 4113              		.loc 8 589 52
 4114 0026 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4115 0028 0E32     		adds	r2, r2, #14
 4116 002a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 4117              		.loc 8 589 17
 4118 002e D3F88030 		ldr	r3, [r3, #128]
 4119 0032 3B61     		str	r3, [r7, #16]
 590:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADCDataReg2 = pHandle->pParams_str->ADCDataReg2[Sector]->JDR1;
 4120              		.loc 8 590 26
 4121 0034 FB69     		ldr	r3, [r7, #28]
 4122 0036 D3F89C30 		ldr	r3, [r3, #156]
 4123              		.loc 8 590 52
 4124 003a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4125 003c 1432     		adds	r2, r2, #20
 4126 003e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 4127              		.loc 8 590 17
 4128 0042 D3F88030 		ldr	r3, [r3, #128]
 4129 0046 FB60     		str	r3, [r7, #12]
 591:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 592:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Disable ADC trigger source */
 593:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH4) */
 594:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****    // LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_RESET);
ARM GAS  /tmp/ccA1EUYa.s 			page 460


 595:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 596:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     switch (Sector)
 4130              		.loc 8 596 5
 4131 0048 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4132 004a 052B     		cmp	r3, #5
 4133 004c 00F2CD80 		bhi	.L185
 4134 0050 01A2     		adr	r2, .L163
 4135 0052 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4136 0056 00BF     		.p2align 2
 4137              	.L163:
 4138 0058 E7000000 		.word	.L162+1
 4139 005c 69010000 		.word	.L165+1
 4140 0060 69010000 		.word	.L165+1
 4141 0064 71000000 		.word	.L164+1
 4142 0068 71000000 		.word	.L164+1
 4143 006c E7000000 		.word	.L162+1
 4144              		.p2align 1
 4145              	.L164:
 597:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 598:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_4:
 599:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_5:
 600:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 601:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase C is not accessible     */
 602:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = PhaseAOffset - ADC converted value) */
 603:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = (int32_t)(pHandle->PhaseAOffset) - (int32_t)(ADCDataReg1);
 4146              		.loc 8 603 32
 4147 0070 FB69     		ldr	r3, [r7, #28]
 4148 0072 D3F88830 		ldr	r3, [r3, #136]
 4149              		.loc 8 603 15
 4150 0076 1A46     		mov	r2, r3
 4151              		.loc 8 603 50
 4152 0078 3B69     		ldr	r3, [r7, #16]
 4153              		.loc 8 603 13
 4154 007a D31A     		subs	r3, r2, r3
 4155 007c BB60     		str	r3, [r7, #8]
 604:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 605:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 606:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4156              		.loc 8 606 12
 4157 007e BB68     		ldr	r3, [r7, #8]
 4158 0080 13F5004F 		cmn	r3, #32768
 4159 0084 04DC     		bgt	.L166
 607:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 608:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 4160              		.loc 8 608 18
 4161 0086 3B68     		ldr	r3, [r7]
 4162 0088 48F20102 		movw	r2, #32769
 4163 008c 1A80     		strh	r2, [r3]	@ movhi
 4164 008e 0CE0     		b	.L167
 4165              	.L166:
 609:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 610:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4166              		.loc 8 610 18
 4167 0090 BB68     		ldr	r3, [r7, #8]
 4168 0092 B3F5004F 		cmp	r3, #32768
 4169 0096 04DB     		blt	.L168
 611:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
ARM GAS  /tmp/ccA1EUYa.s 			page 461


 612:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4170              		.loc 8 612 18
 4171 0098 3B68     		ldr	r3, [r7]
 4172 009a 47F6FF72 		movw	r2, #32767
 4173 009e 1A80     		strh	r2, [r3]	@ movhi
 4174 00a0 03E0     		b	.L167
 4175              	.L168:
 613:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 614:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 615:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 616:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 4176              		.loc 8 616 20
 4177 00a2 BB68     		ldr	r3, [r7, #8]
 4178 00a4 1AB2     		sxth	r2, r3
 4179              		.loc 8 616 18
 4180 00a6 3B68     		ldr	r3, [r7]
 4181 00a8 1A80     		strh	r2, [r3]	@ movhi
 4182              	.L167:
 617:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 618:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 619:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = PhaseBOffset - ADC converted value) */
 620:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = (int32_t)(pHandle->PhaseBOffset) - (int32_t)(ADCDataReg2);
 4183              		.loc 8 620 32
 4184 00aa FB69     		ldr	r3, [r7, #28]
 4185 00ac D3F88C30 		ldr	r3, [r3, #140]
 4186              		.loc 8 620 15
 4187 00b0 1A46     		mov	r2, r3
 4188              		.loc 8 620 50
 4189 00b2 FB68     		ldr	r3, [r7, #12]
 4190              		.loc 8 620 13
 4191 00b4 D31A     		subs	r3, r2, r3
 4192 00b6 BB60     		str	r3, [r7, #8]
 621:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 622:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 623:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4193              		.loc 8 623 12
 4194 00b8 BB68     		ldr	r3, [r7, #8]
 4195 00ba 13F5004F 		cmn	r3, #32768
 4196 00be 04DC     		bgt	.L169
 624:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 625:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 4197              		.loc 8 625 18
 4198 00c0 3B68     		ldr	r3, [r7]
 4199 00c2 48F20102 		movw	r2, #32769
 4200 00c6 5A80     		strh	r2, [r3, #2]	@ movhi
 626:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 627:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 628:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 629:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 630:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 631:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 632:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 633:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 634:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 635:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4201              		.loc 8 635 9
 4202 00c8 90E0     		b	.L172
ARM GAS  /tmp/ccA1EUYa.s 			page 462


 4203              	.L169:
 627:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4204              		.loc 8 627 18
 4205 00ca BB68     		ldr	r3, [r7, #8]
 4206 00cc B3F5004F 		cmp	r3, #32768
 4207 00d0 04DB     		blt	.L171
 629:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4208              		.loc 8 629 18
 4209 00d2 3B68     		ldr	r3, [r7]
 4210 00d4 47F6FF72 		movw	r2, #32767
 4211 00d8 5A80     		strh	r2, [r3, #2]	@ movhi
 4212              		.loc 8 635 9
 4213 00da 87E0     		b	.L172
 4214              	.L171:
 633:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4215              		.loc 8 633 20
 4216 00dc BB68     		ldr	r3, [r7, #8]
 4217 00de 1AB2     		sxth	r2, r3
 633:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4218              		.loc 8 633 18
 4219 00e0 3B68     		ldr	r3, [r7]
 4220 00e2 5A80     		strh	r2, [r3, #2]	@ movhi
 4221              		.loc 8 635 9
 4222 00e4 82E0     		b	.L172
 4223              	.L162:
 636:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 637:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 638:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_6:
 639:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_1:
 640:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 641:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase A is not accessible     */
 642:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = PhaseBOffset - ADC converted value) */
 643:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = (int32_t)(pHandle->PhaseBOffset) - (int32_t)(ADCDataReg1);
 4224              		.loc 8 643 32
 4225 00e6 FB69     		ldr	r3, [r7, #28]
 4226 00e8 D3F88C30 		ldr	r3, [r3, #140]
 4227              		.loc 8 643 15
 4228 00ec 1A46     		mov	r2, r3
 4229              		.loc 8 643 50
 4230 00ee 3B69     		ldr	r3, [r7, #16]
 4231              		.loc 8 643 13
 4232 00f0 D31A     		subs	r3, r2, r3
 4233 00f2 BB60     		str	r3, [r7, #8]
 644:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 645:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 646:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4234              		.loc 8 646 12
 4235 00f4 BB68     		ldr	r3, [r7, #8]
 4236 00f6 13F5004F 		cmn	r3, #32768
 4237 00fa 04DC     		bgt	.L173
 647:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 648:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 4238              		.loc 8 648 18
 4239 00fc 3B68     		ldr	r3, [r7]
 4240 00fe 48F20102 		movw	r2, #32769
 4241 0102 5A80     		strh	r2, [r3, #2]	@ movhi
 4242 0104 0CE0     		b	.L174
ARM GAS  /tmp/ccA1EUYa.s 			page 463


 4243              	.L173:
 649:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 650:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4244              		.loc 8 650 18
 4245 0106 BB68     		ldr	r3, [r7, #8]
 4246 0108 B3F5004F 		cmp	r3, #32768
 4247 010c 04DB     		blt	.L175
 651:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 652:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 4248              		.loc 8 652 18
 4249 010e 3B68     		ldr	r3, [r7]
 4250 0110 47F6FF72 		movw	r2, #32767
 4251 0114 5A80     		strh	r2, [r3, #2]	@ movhi
 4252 0116 03E0     		b	.L174
 4253              	.L175:
 653:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 654:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 655:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 656:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 4254              		.loc 8 656 20
 4255 0118 BB68     		ldr	r3, [r7, #8]
 4256 011a 1AB2     		sxth	r2, r3
 4257              		.loc 8 656 18
 4258 011c 3B68     		ldr	r3, [r7]
 4259 011e 5A80     		strh	r2, [r3, #2]	@ movhi
 4260              	.L174:
 657:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 658:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 659:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = -Ic -Ib */
 660:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = (int32_t)(ADCDataReg2) - (int32_t)(pHandle->PhaseCOffset); /* -Ic */
 4261              		.loc 8 660 15
 4262 0120 FB68     		ldr	r3, [r7, #12]
 4263              		.loc 8 660 57
 4264 0122 FA69     		ldr	r2, [r7, #28]
 4265 0124 D2F89020 		ldr	r2, [r2, #144]
 4266              		.loc 8 660 13
 4267 0128 9B1A     		subs	r3, r3, r2
 4268 012a BB60     		str	r3, [r7, #8]
 661:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux -= (int32_t)Iab->b;             /* Ia  */
 4269              		.loc 8 661 28
 4270 012c 3B68     		ldr	r3, [r7]
 4271 012e B3F90230 		ldrsh	r3, [r3, #2]
 4272              		.loc 8 661 16
 4273 0132 1A46     		mov	r2, r3
 4274              		.loc 8 661 13
 4275 0134 BB68     		ldr	r3, [r7, #8]
 4276 0136 9B1A     		subs	r3, r3, r2
 4277 0138 BB60     		str	r3, [r7, #8]
 662:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 663:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 664:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux > INT16_MAX)
 4278              		.loc 8 664 12
 4279 013a BB68     		ldr	r3, [r7, #8]
 4280 013c B3F5004F 		cmp	r3, #32768
 4281 0140 04DB     		blt	.L176
 665:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 666:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
ARM GAS  /tmp/ccA1EUYa.s 			page 464


 4282              		.loc 8 666 18
 4283 0142 3B68     		ldr	r3, [r7]
 4284 0144 47F6FF72 		movw	r2, #32767
 4285 0148 1A80     		strh	r2, [r3]	@ movhi
 667:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 668:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux < -INT16_MAX)
 669:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 670:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 671:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 672:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 673:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 674:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 675:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 676:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4286              		.loc 8 676 9
 4287 014a 4FE0     		b	.L172
 4288              	.L176:
 668:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4289              		.loc 8 668 18
 4290 014c BB68     		ldr	r3, [r7, #8]
 4291 014e 13F5004F 		cmn	r3, #32768
 4292 0152 04DC     		bgt	.L178
 670:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4293              		.loc 8 670 18
 4294 0154 3B68     		ldr	r3, [r7]
 4295 0156 48F20102 		movw	r2, #32769
 4296 015a 1A80     		strh	r2, [r3]	@ movhi
 4297              		.loc 8 676 9
 4298 015c 46E0     		b	.L172
 4299              	.L178:
 674:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4300              		.loc 8 674 20
 4301 015e BB68     		ldr	r3, [r7, #8]
 4302 0160 1AB2     		sxth	r2, r3
 674:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4303              		.loc 8 674 18
 4304 0162 3B68     		ldr	r3, [r7]
 4305 0164 1A80     		strh	r2, [r3]	@ movhi
 4306              		.loc 8 676 9
 4307 0166 41E0     		b	.L172
 4308              	.L165:
 677:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 678:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 679:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_2:
 680:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_3:
 681:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 682:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase B is not accessible     */
 683:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = PhaseAOffset - ADC converted value) */
 684:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = (int32_t)(pHandle->PhaseAOffset) - (int32_t)(ADCDataReg1);
 4309              		.loc 8 684 32
 4310 0168 FB69     		ldr	r3, [r7, #28]
 4311 016a D3F88830 		ldr	r3, [r3, #136]
 4312              		.loc 8 684 15
 4313 016e 1A46     		mov	r2, r3
 4314              		.loc 8 684 50
 4315 0170 3B69     		ldr	r3, [r7, #16]
 4316              		.loc 8 684 13
ARM GAS  /tmp/ccA1EUYa.s 			page 465


 4317 0172 D31A     		subs	r3, r2, r3
 4318 0174 BB60     		str	r3, [r7, #8]
 685:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 686:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 687:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4319              		.loc 8 687 12
 4320 0176 BB68     		ldr	r3, [r7, #8]
 4321 0178 13F5004F 		cmn	r3, #32768
 4322 017c 04DC     		bgt	.L179
 688:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 689:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 4323              		.loc 8 689 18
 4324 017e 3B68     		ldr	r3, [r7]
 4325 0180 48F20102 		movw	r2, #32769
 4326 0184 1A80     		strh	r2, [r3]	@ movhi
 4327 0186 0CE0     		b	.L180
 4328              	.L179:
 690:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 691:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4329              		.loc 8 691 18
 4330 0188 BB68     		ldr	r3, [r7, #8]
 4331 018a B3F5004F 		cmp	r3, #32768
 4332 018e 04DB     		blt	.L181
 692:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 693:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4333              		.loc 8 693 18
 4334 0190 3B68     		ldr	r3, [r7]
 4335 0192 47F6FF72 		movw	r2, #32767
 4336 0196 1A80     		strh	r2, [r3]	@ movhi
 4337 0198 03E0     		b	.L180
 4338              	.L181:
 694:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 695:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 696:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 697:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 4339              		.loc 8 697 20
 4340 019a BB68     		ldr	r3, [r7, #8]
 4341 019c 1AB2     		sxth	r2, r3
 4342              		.loc 8 697 18
 4343 019e 3B68     		ldr	r3, [r7]
 4344 01a0 1A80     		strh	r2, [r3]	@ movhi
 4345              	.L180:
 698:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 699:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 700:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = -Ic -Ia */
 701:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = (int32_t)(ADCDataReg2) - (int32_t)(pHandle->PhaseCOffset); /* -Ic */
 4346              		.loc 8 701 15
 4347 01a2 FB68     		ldr	r3, [r7, #12]
 4348              		.loc 8 701 57
 4349 01a4 FA69     		ldr	r2, [r7, #28]
 4350 01a6 D2F89020 		ldr	r2, [r2, #144]
 4351              		.loc 8 701 13
 4352 01aa 9B1A     		subs	r3, r3, r2
 4353 01ac BB60     		str	r3, [r7, #8]
 702:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux -= (int32_t)Iab->a;             /* Ib */
 4354              		.loc 8 702 28
 4355 01ae 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccA1EUYa.s 			page 466


 4356 01b0 B3F90030 		ldrsh	r3, [r3]
 4357              		.loc 8 702 16
 4358 01b4 1A46     		mov	r2, r3
 4359              		.loc 8 702 13
 4360 01b6 BB68     		ldr	r3, [r7, #8]
 4361 01b8 9B1A     		subs	r3, r3, r2
 4362 01ba BB60     		str	r3, [r7, #8]
 703:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 704:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 705:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux > INT16_MAX)
 4363              		.loc 8 705 12
 4364 01bc BB68     		ldr	r3, [r7, #8]
 4365 01be B3F5004F 		cmp	r3, #32768
 4366 01c2 04DB     		blt	.L182
 706:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 707:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 4367              		.loc 8 707 18
 4368 01c4 3B68     		ldr	r3, [r7]
 4369 01c6 47F6FF72 		movw	r2, #32767
 4370 01ca 5A80     		strh	r2, [r3, #2]	@ movhi
 708:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 709:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux < -INT16_MAX)
 710:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 711:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 712:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 713:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 714:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 715:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 716:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 717:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4371              		.loc 8 717 9
 4372 01cc 0EE0     		b	.L172
 4373              	.L182:
 709:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4374              		.loc 8 709 18
 4375 01ce BB68     		ldr	r3, [r7, #8]
 4376 01d0 13F5004F 		cmn	r3, #32768
 4377 01d4 04DC     		bgt	.L184
 711:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4378              		.loc 8 711 18
 4379 01d6 3B68     		ldr	r3, [r7]
 4380 01d8 48F20102 		movw	r2, #32769
 4381 01dc 5A80     		strh	r2, [r3, #2]	@ movhi
 4382              		.loc 8 717 9
 4383 01de 05E0     		b	.L172
 4384              	.L184:
 715:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4385              		.loc 8 715 20
 4386 01e0 BB68     		ldr	r3, [r7, #8]
 4387 01e2 1AB2     		sxth	r2, r3
 715:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4388              		.loc 8 715 18
 4389 01e4 3B68     		ldr	r3, [r7]
 4390 01e6 5A80     		strh	r2, [r3, #2]	@ movhi
 4391              		.loc 8 717 9
 4392 01e8 00E0     		b	.L172
 4393              	.L185:
ARM GAS  /tmp/ccA1EUYa.s 			page 467


 718:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 719:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 720:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       default:
 721:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4394              		.loc 8 721 9
 4395 01ea 00BF     		nop
 4396              	.L172:
 722:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 723:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 724:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Ia = Iab->a;
 4397              		.loc 8 724 29
 4398 01ec 3B68     		ldr	r3, [r7]
 4399 01ee B3F90020 		ldrsh	r2, [r3]
 4400              		.loc 8 724 24
 4401 01f2 FB69     		ldr	r3, [r7, #28]
 4402 01f4 A3F86220 		strh	r2, [r3, #98]	@ movhi
 725:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Ib = Iab->b;
 4403              		.loc 8 725 29
 4404 01f8 3B68     		ldr	r3, [r7]
 4405 01fa B3F90220 		ldrsh	r2, [r3, #2]
 4406              		.loc 8 725 24
 4407 01fe FB69     		ldr	r3, [r7, #28]
 4408 0200 A3F86420 		strh	r2, [r3, #100]	@ movhi
 726:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Ic = -Iab->a - Iab->b;
 4409              		.loc 8 726 30
 4410 0204 3B68     		ldr	r3, [r7]
 4411 0206 B3F90030 		ldrsh	r3, [r3]
 4412 020a 9BB2     		uxth	r3, r3
 4413              		.loc 8 726 34
 4414 020c 5B42     		rsbs	r3, r3, #0
 4415 020e 9AB2     		uxth	r2, r3
 4416              		.loc 8 726 39
 4417 0210 3B68     		ldr	r3, [r7]
 4418 0212 B3F90230 		ldrsh	r3, [r3, #2]
 4419 0216 9BB2     		uxth	r3, r3
 4420              		.loc 8 726 34
 4421 0218 D31A     		subs	r3, r2, r3
 4422 021a 9BB2     		uxth	r3, r3
 4423 021c 1AB2     		sxth	r2, r3
 4424              		.loc 8 726 24
 4425 021e FB69     		ldr	r3, [r7, #28]
 4426 0220 A3F86620 		strh	r2, [r3, #102]	@ movhi
 727:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 729:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 730:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 4427              		.loc 8 730 1
 4428 0224 00BF     		nop
 4429 0226 2437     		adds	r7, r7, #36
 4430              	.LCFI353:
 4431              		.cfi_def_cfa_offset 4
 4432 0228 BD46     		mov	sp, r7
 4433              	.LCFI354:
 4434              		.cfi_def_cfa_register 13
 4435              		@ sp needed
 4436 022a 5DF8047B 		ldr	r7, [sp], #4
 4437              	.LCFI355:
ARM GAS  /tmp/ccA1EUYa.s 			page 468


 4438              		.cfi_restore 7
 4439              		.cfi_def_cfa_offset 0
 4440 022e 7047     		bx	lr
 4441              		.cfi_endproc
 4442              	.LFE1444:
 4444              		.section	.text.R3_2_GetPhaseCurrents_OVM,"ax",%progbits
 4445              		.align	1
 4446              		.weak	R3_2_GetPhaseCurrents_OVM
 4447              		.syntax unified
 4448              		.thumb
 4449              		.thumb_func
 4450              		.fpu fpv4-sp-d16
 4452              	R3_2_GetPhaseCurrents_OVM:
 4453              	.LFB1445:
 731:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 732:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
 733:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 734:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 735:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 736:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 737:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 738:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 739:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
 740:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Computes and stores in @p pHdl handler the latest converted motor phase currents in @p 
 741:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
 742:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
 743:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_GetPhaseCurrents_OVM(PWMC_Handle_t *pHdl, ab_t *Iab)
 744:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 4454              		.loc 8 744 1
 4455              		.cfi_startproc
 4456              		@ args = 0, pretend = 0, frame = 32
 4457              		@ frame_needed = 1, uses_anonymous_args = 0
 4458              		@ link register save eliminated.
 4459 0000 80B4     		push	{r7}
 4460              	.LCFI356:
 4461              		.cfi_def_cfa_offset 4
 4462              		.cfi_offset 7, -4
 4463 0002 89B0     		sub	sp, sp, #36
 4464              	.LCFI357:
 4465              		.cfi_def_cfa_offset 40
 4466 0004 00AF     		add	r7, sp, #0
 4467              	.LCFI358:
 4468              		.cfi_def_cfa_register 7
 4469 0006 7860     		str	r0, [r7, #4]
 4470 0008 3960     		str	r1, [r7]
 745:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
 746:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == Iab)
 747:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 748:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
 749:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
 750:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
 751:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
 752:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
 753:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 4471              		.loc 8 753 25
 4472 000a 7B68     		ldr	r3, [r7, #4]
 4473 000c BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccA1EUYa.s 			page 469


 754:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 4474              		.loc 8 754 32
 4475 000e BB69     		ldr	r3, [r7, #24]
 4476 0010 D3F89C30 		ldr	r3, [r3, #156]
 4477              		.loc 8 754 18
 4478 0014 1B68     		ldr	r3, [r3]
 4479 0016 7B61     		str	r3, [r7, #20]
 755:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 756:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     int32_t Aux;
 757:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg1;
 758:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg2;
 759:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint8_t Sector;
 760:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 761:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Disable ADC trigger source */
 762:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****    // LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_RESET);
 763:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 764:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Sector = (uint8_t)pHandle->_Super.Sector;
 4480              		.loc 8 764 12
 4481 0018 BB69     		ldr	r3, [r7, #24]
 4482 001a 93F87A30 		ldrb	r3, [r3, #122]
 4483 001e FB74     		strb	r3, [r7, #19]
 765:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADCDataReg1 = pHandle->pParams_str->ADCDataReg1[Sector]->JDR1;
 4484              		.loc 8 765 26
 4485 0020 BB69     		ldr	r3, [r7, #24]
 4486 0022 D3F89C30 		ldr	r3, [r3, #156]
 4487              		.loc 8 765 52
 4488 0026 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 4489 0028 0E32     		adds	r2, r2, #14
 4490 002a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 4491              		.loc 8 765 17
 4492 002e D3F88030 		ldr	r3, [r3, #128]
 4493 0032 FB60     		str	r3, [r7, #12]
 766:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADCDataReg2 = pHandle->pParams_str->ADCDataReg2[Sector]->JDR1;
 4494              		.loc 8 766 26
 4495 0034 BB69     		ldr	r3, [r7, #24]
 4496 0036 D3F89C30 		ldr	r3, [r3, #156]
 4497              		.loc 8 766 52
 4498 003a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 4499 003c 1432     		adds	r2, r2, #20
 4500 003e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 4501              		.loc 8 766 17
 4502 0042 D3F88030 		ldr	r3, [r3, #128]
 4503 0046 BB60     		str	r3, [r7, #8]
 767:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 768:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     switch (Sector)
 4504              		.loc 8 768 5
 4505 0048 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4506 004a 052B     		cmp	r3, #5
 4507 004c 00F2DA81 		bhi	.L244
 4508 0050 01A2     		adr	r2, .L189
 4509 0052 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4510 0056 00BF     		.p2align 2
 4511              	.L189:
 4512 0058 2F020000 		.word	.L194+1
 4513 005c C7020000 		.word	.L193+1
 4514 0060 5F030000 		.word	.L192+1
 4515 0064 71000000 		.word	.L191+1
ARM GAS  /tmp/ccA1EUYa.s 			page 470


 4516 0068 FD000000 		.word	.L190+1
 4517 006c 89010000 		.word	.L188+1
 4518              		.p2align 1
 4519              	.L191:
 769:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 770:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_4:
 771:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 772:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase C is not accessible     */
 773:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = PhaseAOffset - ADC converted value) */
 774:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = ((int32_t)pHandle->PhaseAOffset) - ((int32_t)ADCDataReg1);
 4520              		.loc 8 774 32
 4521 0070 BB69     		ldr	r3, [r7, #24]
 4522 0072 D3F88830 		ldr	r3, [r3, #136]
 4523              		.loc 8 774 16
 4524 0076 1A46     		mov	r2, r3
 4525              		.loc 8 774 51
 4526 0078 FB68     		ldr	r3, [r7, #12]
 4527              		.loc 8 774 13
 4528 007a D31A     		subs	r3, r2, r3
 4529 007c FB61     		str	r3, [r7, #28]
 775:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 776:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 777:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4530              		.loc 8 777 12
 4531 007e FB69     		ldr	r3, [r7, #28]
 4532 0080 13F5004F 		cmn	r3, #32768
 4533 0084 04DC     		bgt	.L195
 778:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 779:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 4534              		.loc 8 779 18
 4535 0086 3B68     		ldr	r3, [r7]
 4536 0088 48F20102 		movw	r2, #32769
 4537 008c 1A80     		strh	r2, [r3]	@ movhi
 4538 008e 0CE0     		b	.L196
 4539              	.L195:
 780:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 781:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4540              		.loc 8 781 18
 4541 0090 FB69     		ldr	r3, [r7, #28]
 4542 0092 B3F5004F 		cmp	r3, #32768
 4543 0096 04DB     		blt	.L197
 782:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 783:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4544              		.loc 8 783 18
 4545 0098 3B68     		ldr	r3, [r7]
 4546 009a 47F6FF72 		movw	r2, #32767
 4547 009e 1A80     		strh	r2, [r3]	@ movhi
 4548 00a0 03E0     		b	.L196
 4549              	.L197:
 784:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 785:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 786:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 787:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 4550              		.loc 8 787 20
 4551 00a2 FB69     		ldr	r3, [r7, #28]
 4552 00a4 1AB2     		sxth	r2, r3
 4553              		.loc 8 787 18
ARM GAS  /tmp/ccA1EUYa.s 			page 471


 4554 00a6 3B68     		ldr	r3, [r7]
 4555 00a8 1A80     		strh	r2, [r3]	@ movhi
 4556              	.L196:
 788:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 789:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 790:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (true == pHandle->_Super.useEstCurrent)
 4557              		.loc 8 790 36
 4558 00aa BB69     		ldr	r3, [r7, #24]
 4559 00ac 93F88430 		ldrb	r3, [r3, #132]
 4560 00b0 DBB2     		uxtb	r3, r3
 4561              		.loc 8 790 12
 4562 00b2 002B     		cmp	r3, #0
 4563 00b4 04D0     		beq	.L198
 791:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 792:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           // Ib not available, use estimated Ib
 793:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t)(pHandle->_Super.IbEst);
 4564              		.loc 8 793 42
 4565 00b6 BB69     		ldr	r3, [r7, #24]
 4566 00b8 B3F96A30 		ldrsh	r3, [r3, #106]
 4567              		.loc 8 793 15
 4568 00bc FB61     		str	r3, [r7, #28]
 4569 00be 06E0     		b	.L199
 4570              	.L198:
 794:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 795:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 796:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 797:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Ib = PhaseBOffset - ADC converted value) */
 798:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = ((int32_t)pHandle->PhaseBOffset) - ((int32_t)ADCDataReg2);
 4571              		.loc 8 798 34
 4572 00c0 BB69     		ldr	r3, [r7, #24]
 4573 00c2 D3F88C30 		ldr	r3, [r3, #140]
 4574              		.loc 8 798 18
 4575 00c6 1A46     		mov	r2, r3
 4576              		.loc 8 798 53
 4577 00c8 BB68     		ldr	r3, [r7, #8]
 4578              		.loc 8 798 15
 4579 00ca D31A     		subs	r3, r2, r3
 4580 00cc FB61     		str	r3, [r7, #28]
 4581              	.L199:
 799:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 800:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 801:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 802:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4582              		.loc 8 802 12
 4583 00ce FB69     		ldr	r3, [r7, #28]
 4584 00d0 13F5004F 		cmn	r3, #32768
 4585 00d4 04DC     		bgt	.L200
 803:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 804:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 4586              		.loc 8 804 18
 4587 00d6 3B68     		ldr	r3, [r7]
 4588 00d8 48F20102 		movw	r2, #32769
 4589 00dc 5A80     		strh	r2, [r3, #2]	@ movhi
 805:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 806:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 807:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 808:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
ARM GAS  /tmp/ccA1EUYa.s 			page 472


 809:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 810:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 811:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 812:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 813:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 814:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4590              		.loc 8 814 9
 4591 00de 92E1     		b	.L203
 4592              	.L200:
 806:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4593              		.loc 8 806 18
 4594 00e0 FB69     		ldr	r3, [r7, #28]
 4595 00e2 B3F5004F 		cmp	r3, #32768
 4596 00e6 04DB     		blt	.L202
 808:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4597              		.loc 8 808 18
 4598 00e8 3B68     		ldr	r3, [r7]
 4599 00ea 47F6FF72 		movw	r2, #32767
 4600 00ee 5A80     		strh	r2, [r3, #2]	@ movhi
 4601              		.loc 8 814 9
 4602 00f0 89E1     		b	.L203
 4603              	.L202:
 812:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4604              		.loc 8 812 20
 4605 00f2 FB69     		ldr	r3, [r7, #28]
 4606 00f4 1AB2     		sxth	r2, r3
 812:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4607              		.loc 8 812 18
 4608 00f6 3B68     		ldr	r3, [r7]
 4609 00f8 5A80     		strh	r2, [r3, #2]	@ movhi
 4610              		.loc 8 814 9
 4611 00fa 84E1     		b	.L203
 4612              	.L190:
 815:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 816:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 817:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_5:
 818:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 819:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase C is not accessible     */
 820:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = PhaseAOffset - ADC converted value) */
 821:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (true == pHandle->_Super.useEstCurrent)
 4613              		.loc 8 821 36
 4614 00fc BB69     		ldr	r3, [r7, #24]
 4615 00fe 93F88430 		ldrb	r3, [r3, #132]
 4616 0102 DBB2     		uxtb	r3, r3
 4617              		.loc 8 821 12
 4618 0104 002B     		cmp	r3, #0
 4619 0106 04D0     		beq	.L204
 822:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 823:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Ia not available, use estimated Ia */
 824:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t)(pHandle->_Super.IaEst);
 4620              		.loc 8 824 42
 4621 0108 BB69     		ldr	r3, [r7, #24]
 4622 010a B3F96830 		ldrsh	r3, [r3, #104]
 4623              		.loc 8 824 15
 4624 010e FB61     		str	r3, [r7, #28]
 4625 0110 06E0     		b	.L205
 4626              	.L204:
ARM GAS  /tmp/ccA1EUYa.s 			page 473


 825:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 826:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 827:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 828:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = ((int32_t)pHandle->PhaseAOffset) - ((int32_t)ADCDataReg1);
 4627              		.loc 8 828 34
 4628 0112 BB69     		ldr	r3, [r7, #24]
 4629 0114 D3F88830 		ldr	r3, [r3, #136]
 4630              		.loc 8 828 18
 4631 0118 1A46     		mov	r2, r3
 4632              		.loc 8 828 53
 4633 011a FB68     		ldr	r3, [r7, #12]
 4634              		.loc 8 828 15
 4635 011c D31A     		subs	r3, r2, r3
 4636 011e FB61     		str	r3, [r7, #28]
 4637              	.L205:
 829:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 830:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 831:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 832:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4638              		.loc 8 832 12
 4639 0120 FB69     		ldr	r3, [r7, #28]
 4640 0122 13F5004F 		cmn	r3, #32768
 4641 0126 04DC     		bgt	.L206
 833:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 834:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 4642              		.loc 8 834 18
 4643 0128 3B68     		ldr	r3, [r7]
 4644 012a 48F20102 		movw	r2, #32769
 4645 012e 1A80     		strh	r2, [r3]	@ movhi
 4646 0130 0CE0     		b	.L207
 4647              	.L206:
 835:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 836:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4648              		.loc 8 836 18
 4649 0132 FB69     		ldr	r3, [r7, #28]
 4650 0134 B3F5004F 		cmp	r3, #32768
 4651 0138 04DB     		blt	.L208
 837:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 838:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4652              		.loc 8 838 18
 4653 013a 3B68     		ldr	r3, [r7]
 4654 013c 47F6FF72 		movw	r2, #32767
 4655 0140 1A80     		strh	r2, [r3]	@ movhi
 4656 0142 03E0     		b	.L207
 4657              	.L208:
 839:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 840:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 841:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 842:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 4658              		.loc 8 842 20
 4659 0144 FB69     		ldr	r3, [r7, #28]
 4660 0146 1AB2     		sxth	r2, r3
 4661              		.loc 8 842 18
 4662 0148 3B68     		ldr	r3, [r7]
 4663 014a 1A80     		strh	r2, [r3]	@ movhi
 4664              	.L207:
 843:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
ARM GAS  /tmp/ccA1EUYa.s 			page 474


 844:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 845:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = PhaseBOffset - ADC converted value) */
 846:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = ((int32_t)pHandle->PhaseBOffset) - ((int32_t)ADCDataReg2);
 4665              		.loc 8 846 32
 4666 014c BB69     		ldr	r3, [r7, #24]
 4667 014e D3F88C30 		ldr	r3, [r3, #140]
 4668              		.loc 8 846 16
 4669 0152 1A46     		mov	r2, r3
 4670              		.loc 8 846 51
 4671 0154 BB68     		ldr	r3, [r7, #8]
 4672              		.loc 8 846 13
 4673 0156 D31A     		subs	r3, r2, r3
 4674 0158 FB61     		str	r3, [r7, #28]
 847:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 848:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 849:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4675              		.loc 8 849 12
 4676 015a FB69     		ldr	r3, [r7, #28]
 4677 015c 13F5004F 		cmn	r3, #32768
 4678 0160 04DC     		bgt	.L209
 850:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 851:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 4679              		.loc 8 851 18
 4680 0162 3B68     		ldr	r3, [r7]
 4681 0164 48F20102 		movw	r2, #32769
 4682 0168 5A80     		strh	r2, [r3, #2]	@ movhi
 852:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 853:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 854:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 855:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 856:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 857:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 858:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 859:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 860:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 861:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4683              		.loc 8 861 9
 4684 016a 4CE1     		b	.L203
 4685              	.L209:
 853:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4686              		.loc 8 853 18
 4687 016c FB69     		ldr	r3, [r7, #28]
 4688 016e B3F5004F 		cmp	r3, #32768
 4689 0172 04DB     		blt	.L211
 855:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4690              		.loc 8 855 18
 4691 0174 3B68     		ldr	r3, [r7]
 4692 0176 47F6FF72 		movw	r2, #32767
 4693 017a 5A80     		strh	r2, [r3, #2]	@ movhi
 4694              		.loc 8 861 9
 4695 017c 43E1     		b	.L203
 4696              	.L211:
 859:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4697              		.loc 8 859 20
 4698 017e FB69     		ldr	r3, [r7, #28]
 4699 0180 1AB2     		sxth	r2, r3
 859:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
ARM GAS  /tmp/ccA1EUYa.s 			page 475


 4700              		.loc 8 859 18
 4701 0182 3B68     		ldr	r3, [r7]
 4702 0184 5A80     		strh	r2, [r3, #2]	@ movhi
 4703              		.loc 8 861 9
 4704 0186 3EE1     		b	.L203
 4705              	.L188:
 862:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 863:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 864:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_6:
 865:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 866:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase A is not accessible     */
 867:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = PhaseBOffset - ADC converted value) */
 868:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = ((int32_t)pHandle->PhaseBOffset) - ((int32_t)ADCDataReg1);
 4706              		.loc 8 868 32
 4707 0188 BB69     		ldr	r3, [r7, #24]
 4708 018a D3F88C30 		ldr	r3, [r3, #140]
 4709              		.loc 8 868 16
 4710 018e 1A46     		mov	r2, r3
 4711              		.loc 8 868 51
 4712 0190 FB68     		ldr	r3, [r7, #12]
 4713              		.loc 8 868 13
 4714 0192 D31A     		subs	r3, r2, r3
 4715 0194 FB61     		str	r3, [r7, #28]
 869:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 870:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 871:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4716              		.loc 8 871 12
 4717 0196 FB69     		ldr	r3, [r7, #28]
 4718 0198 13F5004F 		cmn	r3, #32768
 4719 019c 04DC     		bgt	.L212
 872:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 873:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 4720              		.loc 8 873 18
 4721 019e 3B68     		ldr	r3, [r7]
 4722 01a0 48F20102 		movw	r2, #32769
 4723 01a4 5A80     		strh	r2, [r3, #2]	@ movhi
 4724 01a6 0CE0     		b	.L213
 4725              	.L212:
 874:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 875:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4726              		.loc 8 875 18
 4727 01a8 FB69     		ldr	r3, [r7, #28]
 4728 01aa B3F5004F 		cmp	r3, #32768
 4729 01ae 04DB     		blt	.L214
 876:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 877:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 4730              		.loc 8 877 18
 4731 01b0 3B68     		ldr	r3, [r7]
 4732 01b2 47F6FF72 		movw	r2, #32767
 4733 01b6 5A80     		strh	r2, [r3, #2]	@ movhi
 4734 01b8 03E0     		b	.L213
 4735              	.L214:
 878:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 879:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 880:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 881:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 4736              		.loc 8 881 20
ARM GAS  /tmp/ccA1EUYa.s 			page 476


 4737 01ba FB69     		ldr	r3, [r7, #28]
 4738 01bc 1AB2     		sxth	r2, r3
 4739              		.loc 8 881 18
 4740 01be 3B68     		ldr	r3, [r7]
 4741 01c0 5A80     		strh	r2, [r3, #2]	@ movhi
 4742              	.L213:
 882:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 883:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 884:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (pHandle->_Super.useEstCurrent == true)
 4743              		.loc 8 884 28
 4744 01c2 BB69     		ldr	r3, [r7, #24]
 4745 01c4 93F88430 		ldrb	r3, [r3, #132]
 4746 01c8 DBB2     		uxtb	r3, r3
 4747              		.loc 8 884 12
 4748 01ca 002B     		cmp	r3, #0
 4749 01cc 0BD0     		beq	.L215
 885:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 886:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t) pHandle->_Super.IcEst ;  /* -Ic */
 4750              		.loc 8 886 42
 4751 01ce BB69     		ldr	r3, [r7, #24]
 4752 01d0 B3F96C30 		ldrsh	r3, [r3, #108]
 4753              		.loc 8 886 15
 4754 01d4 FB61     		str	r3, [r7, #28]
 887:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux -= (int32_t)Iab->b;
 4755              		.loc 8 887 30
 4756 01d6 3B68     		ldr	r3, [r7]
 4757 01d8 B3F90230 		ldrsh	r3, [r3, #2]
 4758              		.loc 8 887 18
 4759 01dc 1A46     		mov	r2, r3
 4760              		.loc 8 887 15
 4761 01de FB69     		ldr	r3, [r7, #28]
 4762 01e0 9B1A     		subs	r3, r3, r2
 4763 01e2 FB61     		str	r3, [r7, #28]
 4764 01e4 0CE0     		b	.L216
 4765              	.L215:
 888:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 889:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 890:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 891:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Ia = -Ic -Ib */
 892:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t)(ADCDataReg2) - (int32_t)(pHandle->PhaseCOffset); /* -Ic */
 4766              		.loc 8 892 17
 4767 01e6 BB68     		ldr	r3, [r7, #8]
 4768              		.loc 8 892 59
 4769 01e8 BA69     		ldr	r2, [r7, #24]
 4770 01ea D2F89020 		ldr	r2, [r2, #144]
 4771              		.loc 8 892 15
 4772 01ee 9B1A     		subs	r3, r3, r2
 4773 01f0 FB61     		str	r3, [r7, #28]
 893:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux -= (int32_t)Iab->b;             /* Ia  */
 4774              		.loc 8 893 30
 4775 01f2 3B68     		ldr	r3, [r7]
 4776 01f4 B3F90230 		ldrsh	r3, [r3, #2]
 4777              		.loc 8 893 18
 4778 01f8 1A46     		mov	r2, r3
 4779              		.loc 8 893 15
 4780 01fa FB69     		ldr	r3, [r7, #28]
 4781 01fc 9B1A     		subs	r3, r3, r2
ARM GAS  /tmp/ccA1EUYa.s 			page 477


 4782 01fe FB61     		str	r3, [r7, #28]
 4783              	.L216:
 894:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 895:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 896:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux > INT16_MAX)
 4784              		.loc 8 896 12
 4785 0200 FB69     		ldr	r3, [r7, #28]
 4786 0202 B3F5004F 		cmp	r3, #32768
 4787 0206 04DB     		blt	.L217
 897:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 898:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4788              		.loc 8 898 18
 4789 0208 3B68     		ldr	r3, [r7]
 4790 020a 47F6FF72 		movw	r2, #32767
 4791 020e 1A80     		strh	r2, [r3]	@ movhi
 899:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 900:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux < -INT16_MAX)
 901:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 902:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 903:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 904:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 905:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 906:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 907:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 908:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4792              		.loc 8 908 9
 4793 0210 F9E0     		b	.L203
 4794              	.L217:
 900:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4795              		.loc 8 900 18
 4796 0212 FB69     		ldr	r3, [r7, #28]
 4797 0214 13F5004F 		cmn	r3, #32768
 4798 0218 04DC     		bgt	.L219
 902:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4799              		.loc 8 902 18
 4800 021a 3B68     		ldr	r3, [r7]
 4801 021c 48F20102 		movw	r2, #32769
 4802 0220 1A80     		strh	r2, [r3]	@ movhi
 4803              		.loc 8 908 9
 4804 0222 F0E0     		b	.L203
 4805              	.L219:
 906:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4806              		.loc 8 906 20
 4807 0224 FB69     		ldr	r3, [r7, #28]
 4808 0226 1AB2     		sxth	r2, r3
 906:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4809              		.loc 8 906 18
 4810 0228 3B68     		ldr	r3, [r7]
 4811 022a 1A80     		strh	r2, [r3]	@ movhi
 4812              		.loc 8 908 9
 4813 022c EBE0     		b	.L203
 4814              	.L194:
 909:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 910:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 911:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_1:
 912:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 913:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase A is not accessible     */
ARM GAS  /tmp/ccA1EUYa.s 			page 478


 914:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = PhaseBOffset - ADC converted value) */
 915:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (true == pHandle->_Super.useEstCurrent)
 4815              		.loc 8 915 36
 4816 022e BB69     		ldr	r3, [r7, #24]
 4817 0230 93F88430 		ldrb	r3, [r3, #132]
 4818 0234 DBB2     		uxtb	r3, r3
 4819              		.loc 8 915 12
 4820 0236 002B     		cmp	r3, #0
 4821 0238 04D0     		beq	.L220
 916:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 917:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t) pHandle->_Super.IbEst;
 4822              		.loc 8 917 42
 4823 023a BB69     		ldr	r3, [r7, #24]
 4824 023c B3F96A30 		ldrsh	r3, [r3, #106]
 4825              		.loc 8 917 15
 4826 0240 FB61     		str	r3, [r7, #28]
 4827 0242 06E0     		b	.L221
 4828              	.L220:
 918:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 919:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 920:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 921:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = ((int32_t)pHandle->PhaseBOffset) - (int32_t)(ADCDataReg1);
 4829              		.loc 8 921 34
 4830 0244 BB69     		ldr	r3, [r7, #24]
 4831 0246 D3F88C30 		ldr	r3, [r3, #140]
 4832              		.loc 8 921 18
 4833 024a 1A46     		mov	r2, r3
 4834              		.loc 8 921 52
 4835 024c FB68     		ldr	r3, [r7, #12]
 4836              		.loc 8 921 15
 4837 024e D31A     		subs	r3, r2, r3
 4838 0250 FB61     		str	r3, [r7, #28]
 4839              	.L221:
 922:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 923:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 924:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4840              		.loc 8 924 12
 4841 0252 FB69     		ldr	r3, [r7, #28]
 4842 0254 13F5004F 		cmn	r3, #32768
 4843 0258 04DC     		bgt	.L222
 925:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 926:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 4844              		.loc 8 926 18
 4845 025a 3B68     		ldr	r3, [r7]
 4846 025c 48F20102 		movw	r2, #32769
 4847 0260 5A80     		strh	r2, [r3, #2]	@ movhi
 4848 0262 0CE0     		b	.L223
 4849              	.L222:
 927:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 928:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4850              		.loc 8 928 18
 4851 0264 FB69     		ldr	r3, [r7, #28]
 4852 0266 B3F5004F 		cmp	r3, #32768
 4853 026a 04DB     		blt	.L224
 929:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 930:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 4854              		.loc 8 930 18
ARM GAS  /tmp/ccA1EUYa.s 			page 479


 4855 026c 3B68     		ldr	r3, [r7]
 4856 026e 47F6FF72 		movw	r2, #32767
 4857 0272 5A80     		strh	r2, [r3, #2]	@ movhi
 4858 0274 03E0     		b	.L223
 4859              	.L224:
 931:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 932:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 933:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 934:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 4860              		.loc 8 934 20
 4861 0276 FB69     		ldr	r3, [r7, #28]
 4862 0278 1AB2     		sxth	r2, r3
 4863              		.loc 8 934 18
 4864 027a 3B68     		ldr	r3, [r7]
 4865 027c 5A80     		strh	r2, [r3, #2]	@ movhi
 4866              	.L223:
 935:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 936:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 937:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = -Ic -Ib */
 938:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = ((int32_t)ADCDataReg2) - ((int32_t)pHandle->PhaseCOffset); /* -Ic */
 4867              		.loc 8 938 16
 4868 027e BB68     		ldr	r3, [r7, #8]
 4869              		.loc 8 938 57
 4870 0280 BA69     		ldr	r2, [r7, #24]
 4871 0282 D2F89020 		ldr	r2, [r2, #144]
 4872              		.loc 8 938 13
 4873 0286 9B1A     		subs	r3, r3, r2
 4874 0288 FB61     		str	r3, [r7, #28]
 939:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux -= (int32_t)Iab->b;             /* Ia  */
 4875              		.loc 8 939 28
 4876 028a 3B68     		ldr	r3, [r7]
 4877 028c B3F90230 		ldrsh	r3, [r3, #2]
 4878              		.loc 8 939 16
 4879 0290 1A46     		mov	r2, r3
 4880              		.loc 8 939 13
 4881 0292 FB69     		ldr	r3, [r7, #28]
 4882 0294 9B1A     		subs	r3, r3, r2
 4883 0296 FB61     		str	r3, [r7, #28]
 940:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 941:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 942:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux > INT16_MAX)
 4884              		.loc 8 942 12
 4885 0298 FB69     		ldr	r3, [r7, #28]
 4886 029a B3F5004F 		cmp	r3, #32768
 4887 029e 04DB     		blt	.L225
 943:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 944:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4888              		.loc 8 944 18
 4889 02a0 3B68     		ldr	r3, [r7]
 4890 02a2 47F6FF72 		movw	r2, #32767
 4891 02a6 1A80     		strh	r2, [r3]	@ movhi
 945:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 946:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux < -INT16_MAX)
 947:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 948:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 949:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 950:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
ARM GAS  /tmp/ccA1EUYa.s 			page 480


 951:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 952:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 953:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 954:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4892              		.loc 8 954 9
 4893 02a8 ADE0     		b	.L203
 4894              	.L225:
 946:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4895              		.loc 8 946 18
 4896 02aa FB69     		ldr	r3, [r7, #28]
 4897 02ac 13F5004F 		cmn	r3, #32768
 4898 02b0 04DC     		bgt	.L227
 948:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4899              		.loc 8 948 18
 4900 02b2 3B68     		ldr	r3, [r7]
 4901 02b4 48F20102 		movw	r2, #32769
 4902 02b8 1A80     		strh	r2, [r3]	@ movhi
 4903              		.loc 8 954 9
 4904 02ba A4E0     		b	.L203
 4905              	.L227:
 952:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4906              		.loc 8 952 20
 4907 02bc FB69     		ldr	r3, [r7, #28]
 4908 02be 1AB2     		sxth	r2, r3
 952:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4909              		.loc 8 952 18
 4910 02c0 3B68     		ldr	r3, [r7]
 4911 02c2 1A80     		strh	r2, [r3]	@ movhi
 4912              		.loc 8 954 9
 4913 02c4 9FE0     		b	.L203
 4914              	.L193:
 955:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
 956:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 957:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_2:
 958:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
 959:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase B is not accessible     */
 960:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = PhaseAOffset - ADC converted value) */
 961:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (true == pHandle->_Super.useEstCurrent)
 4915              		.loc 8 961 36
 4916 02c6 BB69     		ldr	r3, [r7, #24]
 4917 02c8 93F88430 		ldrb	r3, [r3, #132]
 4918 02cc DBB2     		uxtb	r3, r3
 4919              		.loc 8 961 12
 4920 02ce 002B     		cmp	r3, #0
 4921 02d0 04D0     		beq	.L228
 962:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 963:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t)pHandle->_Super.IaEst;
 4922              		.loc 8 963 41
 4923 02d2 BB69     		ldr	r3, [r7, #24]
 4924 02d4 B3F96830 		ldrsh	r3, [r3, #104]
 4925              		.loc 8 963 15
 4926 02d8 FB61     		str	r3, [r7, #28]
 4927 02da 06E0     		b	.L229
 4928              	.L228:
 964:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 965:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 966:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
ARM GAS  /tmp/ccA1EUYa.s 			page 481


 967:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = ((int32_t)pHandle->PhaseAOffset) - ((int32_t)ADCDataReg1);
 4929              		.loc 8 967 34
 4930 02dc BB69     		ldr	r3, [r7, #24]
 4931 02de D3F88830 		ldr	r3, [r3, #136]
 4932              		.loc 8 967 18
 4933 02e2 1A46     		mov	r2, r3
 4934              		.loc 8 967 53
 4935 02e4 FB68     		ldr	r3, [r7, #12]
 4936              		.loc 8 967 15
 4937 02e6 D31A     		subs	r3, r2, r3
 4938 02e8 FB61     		str	r3, [r7, #28]
 4939              	.L229:
 968:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 969:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
 970:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 4940              		.loc 8 970 12
 4941 02ea FB69     		ldr	r3, [r7, #28]
 4942 02ec 13F5004F 		cmn	r3, #32768
 4943 02f0 04DC     		bgt	.L230
 971:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 972:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 4944              		.loc 8 972 18
 4945 02f2 3B68     		ldr	r3, [r7]
 4946 02f4 48F20102 		movw	r2, #32769
 4947 02f8 1A80     		strh	r2, [r3]	@ movhi
 4948 02fa 0CE0     		b	.L231
 4949              	.L230:
 973:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 974:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 4950              		.loc 8 974 18
 4951 02fc FB69     		ldr	r3, [r7, #28]
 4952 02fe B3F5004F 		cmp	r3, #32768
 4953 0302 04DB     		blt	.L232
 975:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 976:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 4954              		.loc 8 976 18
 4955 0304 3B68     		ldr	r3, [r7]
 4956 0306 47F6FF72 		movw	r2, #32767
 4957 030a 1A80     		strh	r2, [r3]	@ movhi
 4958 030c 03E0     		b	.L231
 4959              	.L232:
 977:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 978:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 979:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 980:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 4960              		.loc 8 980 20
 4961 030e FB69     		ldr	r3, [r7, #28]
 4962 0310 1AB2     		sxth	r2, r3
 4963              		.loc 8 980 18
 4964 0312 3B68     		ldr	r3, [r7]
 4965 0314 1A80     		strh	r2, [r3]	@ movhi
 4966              	.L231:
 981:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 982:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 983:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ib = -Ic -Ia */
 984:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = ((int32_t)ADCDataReg2) - ((int32_t)pHandle->PhaseCOffset); /* -Ic */
 4967              		.loc 8 984 16
ARM GAS  /tmp/ccA1EUYa.s 			page 482


 4968 0316 BB68     		ldr	r3, [r7, #8]
 4969              		.loc 8 984 57
 4970 0318 BA69     		ldr	r2, [r7, #24]
 4971 031a D2F89020 		ldr	r2, [r2, #144]
 4972              		.loc 8 984 13
 4973 031e 9B1A     		subs	r3, r3, r2
 4974 0320 FB61     		str	r3, [r7, #28]
 985:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux -= (int32_t)Iab->a;             /* Ib */
 4975              		.loc 8 985 28
 4976 0322 3B68     		ldr	r3, [r7]
 4977 0324 B3F90030 		ldrsh	r3, [r3]
 4978              		.loc 8 985 16
 4979 0328 1A46     		mov	r2, r3
 4980              		.loc 8 985 13
 4981 032a FB69     		ldr	r3, [r7, #28]
 4982 032c 9B1A     		subs	r3, r3, r2
 4983 032e FB61     		str	r3, [r7, #28]
 986:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
 987:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
 988:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux > INT16_MAX)
 4984              		.loc 8 988 12
 4985 0330 FB69     		ldr	r3, [r7, #28]
 4986 0332 B3F5004F 		cmp	r3, #32768
 4987 0336 04DB     		blt	.L233
 989:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 990:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 4988              		.loc 8 990 18
 4989 0338 3B68     		ldr	r3, [r7]
 4990 033a 47F6FF72 		movw	r2, #32767
 4991 033e 5A80     		strh	r2, [r3, #2]	@ movhi
 991:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 992:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux < -INT16_MAX)
 993:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 994:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
 995:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 996:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
 997:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 998:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
 999:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1000:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 4992              		.loc 8 1000 9
 4993 0340 61E0     		b	.L203
 4994              	.L233:
 992:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 4995              		.loc 8 992 18
 4996 0342 FB69     		ldr	r3, [r7, #28]
 4997 0344 13F5004F 		cmn	r3, #32768
 4998 0348 04DC     		bgt	.L235
 994:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 4999              		.loc 8 994 18
 5000 034a 3B68     		ldr	r3, [r7]
 5001 034c 48F20102 		movw	r2, #32769
 5002 0350 5A80     		strh	r2, [r3, #2]	@ movhi
 5003              		.loc 8 1000 9
 5004 0352 58E0     		b	.L203
 5005              	.L235:
 998:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
ARM GAS  /tmp/ccA1EUYa.s 			page 483


 5006              		.loc 8 998 20
 5007 0354 FB69     		ldr	r3, [r7, #28]
 5008 0356 1AB2     		sxth	r2, r3
 998:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 5009              		.loc 8 998 18
 5010 0358 3B68     		ldr	r3, [r7]
 5011 035a 5A80     		strh	r2, [r3, #2]	@ movhi
 5012              		.loc 8 1000 9
 5013 035c 53E0     		b	.L203
 5014              	.L192:
1001:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1002:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1003:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       case SECTOR_3:
1004:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1005:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Current on Phase B is not accessible     */
1006:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Ia = PhaseAOffset - ADC converted value) */
1007:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         Aux = ((int32_t)pHandle->PhaseAOffset) - ((int32_t)ADCDataReg1);
 5015              		.loc 8 1007 32
 5016 035e BB69     		ldr	r3, [r7, #24]
 5017 0360 D3F88830 		ldr	r3, [r3, #136]
 5018              		.loc 8 1007 16
 5019 0364 1A46     		mov	r2, r3
 5020              		.loc 8 1007 51
 5021 0366 FB68     		ldr	r3, [r7, #12]
 5022              		.loc 8 1007 13
 5023 0368 D31A     		subs	r3, r2, r3
 5024 036a FB61     		str	r3, [r7, #28]
1008:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1009:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ia */
1010:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux < -INT16_MAX)
 5025              		.loc 8 1010 12
 5026 036c FB69     		ldr	r3, [r7, #28]
 5027 036e 13F5004F 		cmn	r3, #32768
 5028 0372 04DC     		bgt	.L236
1011:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1012:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = -INT16_MAX;
 5029              		.loc 8 1012 18
 5030 0374 3B68     		ldr	r3, [r7]
 5031 0376 48F20102 		movw	r2, #32769
 5032 037a 1A80     		strh	r2, [r3]	@ movhi
 5033 037c 0CE0     		b	.L237
 5034              	.L236:
1013:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1014:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux > INT16_MAX)
 5035              		.loc 8 1014 18
 5036 037e FB69     		ldr	r3, [r7, #28]
 5037 0380 B3F5004F 		cmp	r3, #32768
 5038 0384 04DB     		blt	.L238
1015:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1016:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = INT16_MAX;
 5039              		.loc 8 1016 18
 5040 0386 3B68     		ldr	r3, [r7]
 5041 0388 47F6FF72 		movw	r2, #32767
 5042 038c 1A80     		strh	r2, [r3]	@ movhi
 5043 038e 03E0     		b	.L237
 5044              	.L238:
1017:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
ARM GAS  /tmp/ccA1EUYa.s 			page 484


1018:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
1019:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1020:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->a = (int16_t)Aux;
 5045              		.loc 8 1020 20
 5046 0390 FB69     		ldr	r3, [r7, #28]
 5047 0392 1AB2     		sxth	r2, r3
 5048              		.loc 8 1020 18
 5049 0394 3B68     		ldr	r3, [r7]
 5050 0396 1A80     		strh	r2, [r3]	@ movhi
 5051              	.L237:
1021:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1022:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1023:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (pHandle->_Super.useEstCurrent == true)
 5052              		.loc 8 1023 28
 5053 0398 BB69     		ldr	r3, [r7, #24]
 5054 039a 93F88430 		ldrb	r3, [r3, #132]
 5055 039e DBB2     		uxtb	r3, r3
 5056              		.loc 8 1023 12
 5057 03a0 002B     		cmp	r3, #0
 5058 03a2 0BD0     		beq	.L239
1024:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1025:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Ib = -Ic -Ia */
1026:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = (int32_t)pHandle->_Super.IcEst; /* -Ic */
 5059              		.loc 8 1026 41
 5060 03a4 BB69     		ldr	r3, [r7, #24]
 5061 03a6 B3F96C30 		ldrsh	r3, [r3, #108]
 5062              		.loc 8 1026 15
 5063 03aa FB61     		str	r3, [r7, #28]
1027:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux -= (int32_t)Iab->a;             /* Ib */
 5064              		.loc 8 1027 30
 5065 03ac 3B68     		ldr	r3, [r7]
 5066 03ae B3F90030 		ldrsh	r3, [r3]
 5067              		.loc 8 1027 18
 5068 03b2 1A46     		mov	r2, r3
 5069              		.loc 8 1027 15
 5070 03b4 FB69     		ldr	r3, [r7, #28]
 5071 03b6 9B1A     		subs	r3, r3, r2
 5072 03b8 FB61     		str	r3, [r7, #28]
 5073 03ba 0CE0     		b	.L240
 5074              	.L239:
1028:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1029:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
1030:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1031:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Ib = -Ic -Ia */
1032:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux = ((int32_t)ADCDataReg2) - ((int32_t)pHandle->PhaseCOffset); /* -Ic */
 5075              		.loc 8 1032 18
 5076 03bc BB68     		ldr	r3, [r7, #8]
 5077              		.loc 8 1032 59
 5078 03be BA69     		ldr	r2, [r7, #24]
 5079 03c0 D2F89020 		ldr	r2, [r2, #144]
 5080              		.loc 8 1032 15
 5081 03c4 9B1A     		subs	r3, r3, r2
 5082 03c6 FB61     		str	r3, [r7, #28]
1033:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Aux -= (int32_t)Iab->a;             /* Ib */
 5083              		.loc 8 1033 30
 5084 03c8 3B68     		ldr	r3, [r7]
 5085 03ca B3F90030 		ldrsh	r3, [r3]
ARM GAS  /tmp/ccA1EUYa.s 			page 485


 5086              		.loc 8 1033 18
 5087 03ce 1A46     		mov	r2, r3
 5088              		.loc 8 1033 15
 5089 03d0 FB69     		ldr	r3, [r7, #28]
 5090 03d2 9B1A     		subs	r3, r3, r2
 5091 03d4 FB61     		str	r3, [r7, #28]
 5092              	.L240:
1034:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1035:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1036:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Saturation of Ib */
1037:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (Aux > INT16_MAX)
 5093              		.loc 8 1037 12
 5094 03d6 FB69     		ldr	r3, [r7, #28]
 5095 03d8 B3F5004F 		cmp	r3, #32768
 5096 03dc 04DB     		blt	.L241
1038:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1039:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = INT16_MAX;
 5097              		.loc 8 1039 18
 5098 03de 3B68     		ldr	r3, [r7]
 5099 03e0 47F6FF72 		movw	r2, #32767
 5100 03e4 5A80     		strh	r2, [r3, #2]	@ movhi
1040:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1041:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else  if (Aux < -INT16_MAX)
1042:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1043:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = -INT16_MAX;
1044:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1045:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
1046:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1047:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           Iab->b = (int16_t)Aux;
1048:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1049:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 5101              		.loc 8 1049 9
 5102 03e6 0EE0     		b	.L203
 5103              	.L241:
1041:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
 5104              		.loc 8 1041 18
 5105 03e8 FB69     		ldr	r3, [r7, #28]
 5106 03ea 13F5004F 		cmn	r3, #32768
 5107 03ee 04DC     		bgt	.L243
1043:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 5108              		.loc 8 1043 18
 5109 03f0 3B68     		ldr	r3, [r7]
 5110 03f2 48F20102 		movw	r2, #32769
 5111 03f6 5A80     		strh	r2, [r3, #2]	@ movhi
 5112              		.loc 8 1049 9
 5113 03f8 05E0     		b	.L203
 5114              	.L243:
1047:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 5115              		.loc 8 1047 20
 5116 03fa FB69     		ldr	r3, [r7, #28]
 5117 03fc 1AB2     		sxth	r2, r3
1047:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
 5118              		.loc 8 1047 18
 5119 03fe 3B68     		ldr	r3, [r7]
 5120 0400 5A80     		strh	r2, [r3, #2]	@ movhi
 5121              		.loc 8 1049 9
 5122 0402 00E0     		b	.L203
ARM GAS  /tmp/ccA1EUYa.s 			page 486


 5123              	.L244:
1050:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1051:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1052:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       default:
1053:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         break;
 5124              		.loc 8 1053 9
 5125 0404 00BF     		nop
 5126              	.L203:
1054:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1055:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1056:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Ia = Iab->a;
 5127              		.loc 8 1056 29
 5128 0406 3B68     		ldr	r3, [r7]
 5129 0408 B3F90020 		ldrsh	r2, [r3]
 5130              		.loc 8 1056 24
 5131 040c BB69     		ldr	r3, [r7, #24]
 5132 040e A3F86220 		strh	r2, [r3, #98]	@ movhi
1057:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Ib = Iab->b;
 5133              		.loc 8 1057 29
 5134 0412 3B68     		ldr	r3, [r7]
 5135 0414 B3F90220 		ldrsh	r2, [r3, #2]
 5136              		.loc 8 1057 24
 5137 0418 BB69     		ldr	r3, [r7, #24]
 5138 041a A3F86420 		strh	r2, [r3, #100]	@ movhi
1058:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.Ic = -Iab->a - Iab->b;
 5139              		.loc 8 1058 30
 5140 041e 3B68     		ldr	r3, [r7]
 5141 0420 B3F90030 		ldrsh	r3, [r3]
 5142 0424 9BB2     		uxth	r3, r3
 5143              		.loc 8 1058 34
 5144 0426 5B42     		rsbs	r3, r3, #0
 5145 0428 9AB2     		uxth	r2, r3
 5146              		.loc 8 1058 39
 5147 042a 3B68     		ldr	r3, [r7]
 5148 042c B3F90230 		ldrsh	r3, [r3, #2]
 5149 0430 9BB2     		uxth	r3, r3
 5150              		.loc 8 1058 34
 5151 0432 D31A     		subs	r3, r2, r3
 5152 0434 9BB2     		uxth	r3, r3
 5153 0436 1AB2     		sxth	r2, r3
 5154              		.loc 8 1058 24
 5155 0438 BB69     		ldr	r3, [r7, #24]
 5156 043a A3F86620 		strh	r2, [r3, #102]	@ movhi
1059:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1060:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1061:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1062:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5157              		.loc 8 1062 1
 5158 043e 00BF     		nop
 5159 0440 2437     		adds	r7, r7, #36
 5160              	.LCFI359:
 5161              		.cfi_def_cfa_offset 4
 5162 0442 BD46     		mov	sp, r7
 5163              	.LCFI360:
 5164              		.cfi_def_cfa_register 13
 5165              		@ sp needed
 5166 0444 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccA1EUYa.s 			page 487


 5167              	.LCFI361:
 5168              		.cfi_restore 7
 5169              		.cfi_def_cfa_offset 0
 5170 0448 7047     		bx	lr
 5171              		.cfi_endproc
 5172              	.LFE1445:
 5174 044a 00BF     		.section	.text.R3_2_SetADCSampPointPolarization,"ax",%progbits
 5175              		.align	1
 5176              		.global	R3_2_SetADCSampPointPolarization
 5177              		.syntax unified
 5178              		.thumb
 5179              		.thumb_func
 5180              		.fpu fpv4-sp-d16
 5182              	R3_2_SetADCSampPointPolarization:
 5183              	.LFB1446:
1063:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1064:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
1065:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
1066:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
1067:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1068:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
1069:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1070:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1071:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1072:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Configures the ADC for the current sampling during calibration.
1073:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
1074:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It sets the ADC sequence length and channels, and the sampling point via TIMx_Ch4 value and pol
1075:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It then calls the WriteTIMRegisters method.
1076:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1077:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1078:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @retval Return value of R3_1_WriteTIMRegisters.
1079:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1080:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** uint16_t R3_2_SetADCSampPointPolarization(PWMC_Handle_t *pHdl)
1081:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5184              		.loc 8 1081 1
 5185              		.cfi_startproc
 5186              		@ args = 0, pretend = 0, frame = 16
 5187              		@ frame_needed = 1, uses_anonymous_args = 0
 5188 0000 80B5     		push	{r7, lr}
 5189              	.LCFI362:
 5190              		.cfi_def_cfa_offset 8
 5191              		.cfi_offset 7, -8
 5192              		.cfi_offset 14, -4
 5193 0002 84B0     		sub	sp, sp, #16
 5194              	.LCFI363:
 5195              		.cfi_def_cfa_offset 24
 5196 0004 00AF     		add	r7, sp, #0
 5197              	.LCFI364:
 5198              		.cfi_def_cfa_register 7
 5199 0006 7860     		str	r0, [r7, #4]
1082:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 5200              		.loc 8 1082 23
 5201 0008 7B68     		ldr	r3, [r7, #4]
 5202 000a FB60     		str	r3, [r7, #12]
1083:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.Sector = pHandle->PolarizationSector;
 5203              		.loc 8 1083 35
 5204 000c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccA1EUYa.s 			page 488


 5205 000e 93F89920 		ldrb	r2, [r3, #153]	@ zero_extendqisi2
 5206              		.loc 8 1083 26
 5207 0012 FB68     		ldr	r3, [r7, #12]
 5208 0014 83F87A20 		strb	r2, [r3, #122]
1084:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1085:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return R3_2_WriteTIMRegisters(&pHandle->_Super, (pHandle->Half_PWMPeriod - (uint16_t)1));
 5209              		.loc 8 1085 10
 5210 0018 FA68     		ldr	r2, [r7, #12]
 5211              		.loc 8 1085 59
 5212 001a FB68     		ldr	r3, [r7, #12]
 5213 001c B3F89430 		ldrh	r3, [r3, #148]
 5214              		.loc 8 1085 10
 5215 0020 013B     		subs	r3, r3, #1
 5216 0022 9BB2     		uxth	r3, r3
 5217 0024 1946     		mov	r1, r3
 5218 0026 1046     		mov	r0, r2
 5219 0028 FFF7FEFF 		bl	R3_2_WriteTIMRegisters
 5220 002c 0346     		mov	r3, r0
1086:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5221              		.loc 8 1086 1
 5222 002e 1846     		mov	r0, r3
 5223 0030 1037     		adds	r7, r7, #16
 5224              	.LCFI365:
 5225              		.cfi_def_cfa_offset 8
 5226 0032 BD46     		mov	sp, r7
 5227              	.LCFI366:
 5228              		.cfi_def_cfa_register 13
 5229              		@ sp needed
 5230 0034 80BD     		pop	{r7, pc}
 5231              		.cfi_endproc
 5232              	.LFE1446:
 5234              		.section	.text.R3_2_SetADCSampPointSectX,"ax",%progbits
 5235              		.align	1
 5236              		.global	R3_2_SetADCSampPointSectX
 5237              		.syntax unified
 5238              		.thumb
 5239              		.thumb_func
 5240              		.fpu fpv4-sp-d16
 5242              	R3_2_SetADCSampPointSectX:
 5243              	.LFB1447:
1087:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1088:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
1089:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
1090:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
1091:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1092:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
1093:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1094:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1095:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1096:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Configures the ADC for the current sampling related to sector X (X = [1..6] ).
1097:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
1098:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It sets the ADC sequence length and channels, and the sampling point via TIMx_Ch4 value and pol
1099:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It then calls the WriteTIMRegisters method.
1100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @retval Return value of R3_1_WriteTIMRegisters.
1103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 489


1104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** uint16_t R3_2_SetADCSampPointSectX(PWMC_Handle_t *pHdl)
1105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5244              		.loc 8 1105 1
 5245              		.cfi_startproc
 5246              		@ args = 0, pretend = 0, frame = 24
 5247              		@ frame_needed = 1, uses_anonymous_args = 0
 5248 0000 80B5     		push	{r7, lr}
 5249              	.LCFI367:
 5250              		.cfi_def_cfa_offset 8
 5251              		.cfi_offset 7, -8
 5252              		.cfi_offset 14, -4
 5253 0002 86B0     		sub	sp, sp, #24
 5254              	.LCFI368:
 5255              		.cfi_def_cfa_offset 32
 5256 0004 00AF     		add	r7, sp, #0
 5257              	.LCFI369:
 5258              		.cfi_def_cfa_register 7
 5259 0006 7860     		str	r0, [r7, #4]
1106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   uint16_t returnValue;
1107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHdl)
1109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     returnValue = 0U;
1111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl;  //cstat !MISRAC2012-Rule-11.3
 5260              		.loc 8 1115 25
 5261 0008 7B68     		ldr	r3, [r7, #4]
 5262 000a 3B61     		str	r3, [r7, #16]
1116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint16_t SamplingPoint;
1117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint16_t DeltaDuty;
1118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Verify that sampling is possible in the middle of PWM by checking the smallest duty cycle */
1120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if ((uint16_t)(pHandle->Half_PWMPeriod - pHdl->lowDuty) > pHandle->pParams_str->Tafter)
 5263              		.loc 8 1120 27
 5264 000c 3B69     		ldr	r3, [r7, #16]
 5265 000e B3F89420 		ldrh	r2, [r3, #148]
 5266              		.loc 8 1120 50
 5267 0012 7B68     		ldr	r3, [r7, #4]
 5268 0014 B3F85830 		ldrh	r3, [r3, #88]
 5269              		.loc 8 1120 9
 5270 0018 D31A     		subs	r3, r2, r3
 5271 001a 9AB2     		uxth	r2, r3
 5272              		.loc 8 1120 70
 5273 001c 3B69     		ldr	r3, [r7, #16]
 5274 001e D3F89C30 		ldr	r3, [r3, #156]
 5275              		.loc 8 1120 83
 5276 0022 B3F89830 		ldrh	r3, [r3, #152]
 5277              		.loc 8 1120 8
 5278 0026 9A42     		cmp	r2, r3
 5279 0028 09D9     		bls	.L248
1121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* When it is possible to sample in the middle of the PWM period, always sample the same phas
1123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****        * (AB are chosen) for all sectors in order to not induce current discontinuities when there 
1124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****        * between offsets */
ARM GAS  /tmp/ccA1EUYa.s 			page 490


1125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Sector number needed by GetPhaseCurrent, phase A and B are sampled which corresponds to se
1127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle->_Super.Sector = SECTOR_5;
 5280              		.loc 8 1127 30
 5281 002a 3B69     		ldr	r3, [r7, #16]
 5282 002c 0422     		movs	r2, #4
 5283 002e 83F87A20 		strb	r2, [r3, #122]
1128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* set sampling  point trigger in the middle of PWM period */
1130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       SamplingPoint =  pHandle->Half_PWMPeriod - (uint16_t)1;
 5284              		.loc 8 1130 31
 5285 0032 3B69     		ldr	r3, [r7, #16]
 5286 0034 B3F89430 		ldrh	r3, [r3, #148]
 5287              		.loc 8 1130 21
 5288 0038 013B     		subs	r3, r3, #1
 5289 003a FB82     		strh	r3, [r7, #22]	@ movhi
 5290 003c 3DE0     		b	.L249
 5291              	.L248:
1131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* In this case it is necessary to convert phases with Maximum and variable complementary dut
1135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* ADC Injected sequence configuration. The stator phase with minimum value of complementary
1137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           duty cycle is set as first. In every sector there is always one phase with maximum comple
1138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           one with minimum complementary duty and one with variable complementary duty. In this cas
1139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           with variable complementary duty and with maximum duty are converted and the first will b
1140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           the phase with variable complementary duty cycle */
1141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       DeltaDuty = (uint16_t)(pHdl->lowDuty - pHdl->midDuty);
 5292              		.loc 8 1141 34
 5293 003e 7B68     		ldr	r3, [r7, #4]
 5294 0040 B3F85820 		ldrh	r2, [r3, #88]
 5295              		.loc 8 1141 50
 5296 0044 7B68     		ldr	r3, [r7, #4]
 5297 0046 B3F85A30 		ldrh	r3, [r3, #90]
 5298              		.loc 8 1141 17
 5299 004a D31A     		subs	r3, r2, r3
 5300 004c FB81     		strh	r3, [r7, #14]	@ movhi
1142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Definition of crossing point */
1144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (DeltaDuty > ((uint16_t)(pHandle->Half_PWMPeriod - pHdl->lowDuty) * 2U))
 5301              		.loc 8 1144 21
 5302 004e FA89     		ldrh	r2, [r7, #14]
 5303              		.loc 8 1144 42
 5304 0050 3B69     		ldr	r3, [r7, #16]
 5305 0052 B3F89410 		ldrh	r1, [r3, #148]
 5306              		.loc 8 1144 65
 5307 0056 7B68     		ldr	r3, [r7, #4]
 5308 0058 B3F85830 		ldrh	r3, [r3, #88]
 5309              		.loc 8 1144 24
 5310 005c CB1A     		subs	r3, r1, r3
 5311 005e 9BB2     		uxth	r3, r3
 5312              		.loc 8 1144 76
 5313 0060 5B00     		lsls	r3, r3, #1
 5314              		.loc 8 1144 10
 5315 0062 9A42     		cmp	r2, r3
 5316 0064 0AD9     		bls	.L250
ARM GAS  /tmp/ccA1EUYa.s 			page 491


1145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         SamplingPoint = pHdl->lowDuty - pHandle->pParams_str->Tbefore;
 5317              		.loc 8 1146 29
 5318 0066 7B68     		ldr	r3, [r7, #4]
 5319 0068 B3F85820 		ldrh	r2, [r3, #88]
 5320              		.loc 8 1146 48
 5321 006c 3B69     		ldr	r3, [r7, #16]
 5322 006e D3F89C30 		ldr	r3, [r3, #156]
 5323              		.loc 8 1146 61
 5324 0072 B3F89C30 		ldrh	r3, [r3, #156]
 5325              		.loc 8 1146 23
 5326 0076 D31A     		subs	r3, r2, r3
 5327 0078 FB82     		strh	r3, [r7, #22]	@ movhi
 5328 007a 1EE0     		b	.L249
 5329              	.L250:
1147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         SamplingPoint = pHdl->lowDuty + pHandle->pParams_str->Tafter;
 5330              		.loc 8 1150 29
 5331 007c 7B68     		ldr	r3, [r7, #4]
 5332 007e B3F85820 		ldrh	r2, [r3, #88]
 5333              		.loc 8 1150 48
 5334 0082 3B69     		ldr	r3, [r7, #16]
 5335 0084 D3F89C30 		ldr	r3, [r3, #156]
 5336              		.loc 8 1150 61
 5337 0088 B3F89830 		ldrh	r3, [r3, #152]
 5338              		.loc 8 1150 23
 5339 008c 1344     		add	r3, r3, r2
 5340 008e FB82     		strh	r3, [r7, #22]	@ movhi
1151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if (SamplingPoint >= pHandle->Half_PWMPeriod)
 5341              		.loc 8 1152 37
 5342 0090 3B69     		ldr	r3, [r7, #16]
 5343 0092 B3F89430 		ldrh	r3, [r3, #148]
 5344              		.loc 8 1152 12
 5345 0096 FA8A     		ldrh	r2, [r7, #22]
 5346 0098 9A42     		cmp	r2, r3
 5347 009a 0ED3     		bcc	.L249
1153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* ADC trigger edge must be changed from positive to negative */
1155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           pHandle->ADC_ExternalPolarityInjected = (uint16_t)LL_ADC_INJ_TRIG_EXT_FALLING;
 5348              		.loc 8 1155 49
 5349 009c 3B69     		ldr	r3, [r7, #16]
 5350 009e 4FF48072 		mov	r2, #256
 5351 00a2 A3F89620 		strh	r2, [r3, #150]	@ movhi
1156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           SamplingPoint = (2U * pHandle->Half_PWMPeriod) - SamplingPoint - (uint16_t)1;
 5352              		.loc 8 1156 40
 5353 00a6 3B69     		ldr	r3, [r7, #16]
 5354 00a8 B3F89430 		ldrh	r3, [r3, #148]
 5355              		.loc 8 1156 31
 5356 00ac 5B00     		lsls	r3, r3, #1
 5357 00ae 9AB2     		uxth	r2, r3
 5358              		.loc 8 1156 58
 5359 00b0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5360 00b2 D31A     		subs	r3, r2, r3
 5361 00b4 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccA1EUYa.s 			page 492


 5362              		.loc 8 1156 25
 5363 00b6 013B     		subs	r3, r3, #1
 5364 00b8 FB82     		strh	r3, [r7, #22]	@ movhi
 5365              	.L249:
1157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
1159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* Nothing to do */
1161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     returnValue = R3_2_WriteTIMRegisters(&pHandle->_Super, SamplingPoint);
 5366              		.loc 8 1164 19
 5367 00ba 3B69     		ldr	r3, [r7, #16]
 5368 00bc FA8A     		ldrh	r2, [r7, #22]
 5369 00be 1146     		mov	r1, r2
 5370 00c0 1846     		mov	r0, r3
 5371 00c2 FFF7FEFF 		bl	R3_2_WriteTIMRegisters
 5372 00c6 0346     		mov	r3, r0
 5373 00c8 BB81     		strh	r3, [r7, #12]	@ movhi
1165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return (returnValue);
 5374              		.loc 8 1168 10
 5375 00ca BB89     		ldrh	r3, [r7, #12]
1169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5376              		.loc 8 1169 1
 5377 00cc 1846     		mov	r0, r3
 5378 00ce 1837     		adds	r7, r7, #24
 5379              	.LCFI370:
 5380              		.cfi_def_cfa_offset 8
 5381 00d0 BD46     		mov	sp, r7
 5382              	.LCFI371:
 5383              		.cfi_def_cfa_register 13
 5384              		@ sp needed
 5385 00d2 80BD     		pop	{r7, pc}
 5386              		.cfi_endproc
 5387              	.LFE1447:
 5389              		.section	.text.R3_2_SetADCSampPointSectX_OVM,"ax",%progbits
 5390              		.align	1
 5391              		.global	R3_2_SetADCSampPointSectX_OVM
 5392              		.syntax unified
 5393              		.thumb
 5394              		.thumb_func
 5395              		.fpu fpv4-sp-d16
 5397              	R3_2_SetADCSampPointSectX_OVM:
 5398              	.LFB1448:
1170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
1172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
1173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
1174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
1176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
ARM GAS  /tmp/ccA1EUYa.s 			page 493


1179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Configures the ADC for the current sampling related to sector X (X = [1..6] ) in case o
1180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
1181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It sets the ADC sequence length and channels, and the sampling point via TIMx_Ch4 value and pol
1182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It then calls the WriteTIMRegisters method.
1183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
1185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @retval Return value of R3_1_WriteTIMRegisters.
1186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** uint16_t R3_2_SetADCSampPointSectX_OVM(PWMC_Handle_t *pHdl)
1188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5399              		.loc 8 1188 1
 5400              		.cfi_startproc
 5401              		@ args = 0, pretend = 0, frame = 24
 5402              		@ frame_needed = 1, uses_anonymous_args = 0
 5403 0000 80B5     		push	{r7, lr}
 5404              	.LCFI372:
 5405              		.cfi_def_cfa_offset 8
 5406              		.cfi_offset 7, -8
 5407              		.cfi_offset 14, -4
 5408 0002 86B0     		sub	sp, sp, #24
 5409              	.LCFI373:
 5410              		.cfi_def_cfa_offset 32
 5411 0004 00AF     		add	r7, sp, #0
 5412              	.LCFI374:
 5413              		.cfi_def_cfa_register 7
 5414 0006 7860     		str	r0, [r7, #4]
1189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   uint16_t retVal;
1190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHdl)
1192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     retVal = 0U;
1194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl;    //cstat !MISRAC2012-Rule-11.3
 5415              		.loc 8 1198 25
 5416 0008 7B68     		ldr	r3, [r7, #4]
 5417 000a 3B61     		str	r3, [r7, #16]
1199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint16_t SamplingPoint;
1201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint16_t DeltaDuty;
1202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.useEstCurrent = false;
 5418              		.loc 8 1203 35
 5419 000c 3B69     		ldr	r3, [r7, #16]
 5420 000e 0022     		movs	r2, #0
 5421 0010 83F88420 		strb	r2, [r3, #132]
1204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     DeltaDuty = (uint16_t)(pHdl->lowDuty - pHdl->midDuty);
 5422              		.loc 8 1204 32
 5423 0014 7B68     		ldr	r3, [r7, #4]
 5424 0016 B3F85820 		ldrh	r2, [r3, #88]
 5425              		.loc 8 1204 48
 5426 001a 7B68     		ldr	r3, [r7, #4]
 5427 001c B3F85A30 		ldrh	r3, [r3, #90]
 5428              		.loc 8 1204 15
 5429 0020 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccA1EUYa.s 			page 494


 5430 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Case 1 (cf user manual) */
1207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if ((uint16_t)(pHandle->Half_PWMPeriod - pHdl->lowDuty) > pHandle->pParams_str->Tafter)
 5431              		.loc 8 1207 27
 5432 0024 3B69     		ldr	r3, [r7, #16]
 5433 0026 B3F89420 		ldrh	r2, [r3, #148]
 5434              		.loc 8 1207 50
 5435 002a 7B68     		ldr	r3, [r7, #4]
 5436 002c B3F85830 		ldrh	r3, [r3, #88]
 5437              		.loc 8 1207 9
 5438 0030 D31A     		subs	r3, r2, r3
 5439 0032 9AB2     		uxth	r2, r3
 5440              		.loc 8 1207 70
 5441 0034 3B69     		ldr	r3, [r7, #16]
 5442 0036 D3F89C30 		ldr	r3, [r3, #156]
 5443              		.loc 8 1207 83
 5444 003a B3F89830 		ldrh	r3, [r3, #152]
 5445              		.loc 8 1207 8
 5446 003e 9A42     		cmp	r2, r3
 5447 0040 09D9     		bls	.L253
1208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* When it is possible to sample in the middle of the PWM period, always sample the same phas
1210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****        * (AB are chosen) for all sectors in order to not induce current discontinuities when there 
1211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****        * between offsets */
1212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Sector number needed by GetPhaseCurrent, phase A and B are sampled which corresponds to se
1214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle->_Super.Sector = SECTOR_5;
 5448              		.loc 8 1214 30
 5449 0042 3B69     		ldr	r3, [r7, #16]
 5450 0044 0422     		movs	r2, #4
 5451 0046 83F87A20 		strb	r2, [r3, #122]
1215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Set sampling  point trigger in the middle of PWM period */
1217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       SamplingPoint =  pHandle->Half_PWMPeriod - (uint16_t) 1;
 5452              		.loc 8 1217 31
 5453 004a 3B69     		ldr	r3, [r7, #16]
 5454 004c B3F89430 		ldrh	r3, [r3, #148]
 5455              		.loc 8 1217 21
 5456 0050 013B     		subs	r3, r3, #1
 5457 0052 FB82     		strh	r3, [r7, #22]	@ movhi
 5458 0054 3AE0     		b	.L254
 5459              	.L253:
1218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else /* Case 2 (cf user manual) */
1220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (DeltaDuty >= pHandle->pParams_str->Tcase2)
 5460              		.loc 8 1221 31
 5461 0056 3B69     		ldr	r3, [r7, #16]
 5462 0058 D3F89C30 		ldr	r3, [r3, #156]
 5463              		.loc 8 1221 44
 5464 005c B3F89E30 		ldrh	r3, [r3, #158]
 5465              		.loc 8 1221 10
 5466 0060 FA89     		ldrh	r2, [r7, #14]
 5467 0062 9A42     		cmp	r2, r3
 5468 0064 0AD3     		bcc	.L255
1222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
ARM GAS  /tmp/ccA1EUYa.s 			page 495


1223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         SamplingPoint = pHdl->lowDuty - pHandle->pParams_str->Tbefore;
 5469              		.loc 8 1223 29
 5470 0066 7B68     		ldr	r3, [r7, #4]
 5471 0068 B3F85820 		ldrh	r2, [r3, #88]
 5472              		.loc 8 1223 48
 5473 006c 3B69     		ldr	r3, [r7, #16]
 5474 006e D3F89C30 		ldr	r3, [r3, #156]
 5475              		.loc 8 1223 61
 5476 0072 B3F89C30 		ldrh	r3, [r3, #156]
 5477              		.loc 8 1223 23
 5478 0076 D31A     		subs	r3, r2, r3
 5479 0078 FB82     		strh	r3, [r7, #22]	@ movhi
 5480 007a 27E0     		b	.L254
 5481              	.L255:
1224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Case 3 (cf user manual) */
1228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         if ((pHandle->Half_PWMPeriod - pHdl->lowDuty) > pHandle->pParams_str->Tcase3)
 5482              		.loc 8 1228 21
 5483 007c 3B69     		ldr	r3, [r7, #16]
 5484 007e B3F89430 		ldrh	r3, [r3, #148]
 5485 0082 1A46     		mov	r2, r3
 5486              		.loc 8 1228 44
 5487 0084 7B68     		ldr	r3, [r7, #4]
 5488 0086 B3F85830 		ldrh	r3, [r3, #88]
 5489              		.loc 8 1228 38
 5490 008a D31A     		subs	r3, r2, r3
 5491              		.loc 8 1228 64
 5492 008c 3A69     		ldr	r2, [r7, #16]
 5493 008e D2F89C20 		ldr	r2, [r2, #156]
 5494              		.loc 8 1228 77
 5495 0092 B2F8A020 		ldrh	r2, [r2, #160]
 5496              		.loc 8 1228 12
 5497 0096 9342     		cmp	r3, r2
 5498 0098 0FDD     		ble	.L256
1229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           /* ADC trigger edge must be changed from positive to negative */
1231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           pHandle->ADC_ExternalPolarityInjected = (uint16_t) LL_ADC_INJ_TRIG_EXT_FALLING;
 5499              		.loc 8 1231 49
 5500 009a 3B69     		ldr	r3, [r7, #16]
 5501 009c 4FF48072 		mov	r2, #256
 5502 00a0 A3F89620 		strh	r2, [r3, #150]	@ movhi
1232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           SamplingPoint = pHdl->lowDuty + pHandle->pParams_str->Tsampling;
 5503              		.loc 8 1232 31
 5504 00a4 7B68     		ldr	r3, [r7, #4]
 5505 00a6 B3F85820 		ldrh	r2, [r3, #88]
 5506              		.loc 8 1232 50
 5507 00aa 3B69     		ldr	r3, [r7, #16]
 5508 00ac D3F89C30 		ldr	r3, [r3, #156]
 5509              		.loc 8 1232 63
 5510 00b0 B3F89A30 		ldrh	r3, [r3, #154]
 5511              		.loc 8 1232 25
 5512 00b4 1344     		add	r3, r3, r2
 5513 00b6 FB82     		strh	r3, [r7, #22]	@ movhi
 5514 00b8 08E0     		b	.L254
 5515              	.L256:
ARM GAS  /tmp/ccA1EUYa.s 			page 496


1233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         else
1235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         {
1236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           SamplingPoint = pHandle->Half_PWMPeriod - 1U;
 5516              		.loc 8 1236 34
 5517 00ba 3B69     		ldr	r3, [r7, #16]
 5518 00bc B3F89430 		ldrh	r3, [r3, #148]
 5519              		.loc 8 1236 25
 5520 00c0 013B     		subs	r3, r3, #1
 5521 00c2 FB82     		strh	r3, [r7, #22]	@ movhi
1237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****           pHandle->_Super.useEstCurrent = true;
 5522              		.loc 8 1237 41
 5523 00c4 3B69     		ldr	r3, [r7, #16]
 5524 00c6 0122     		movs	r2, #1
 5525 00c8 83F88420 		strb	r2, [r3, #132]
 5526              	.L254:
1238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         }
1239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     retVal = R3_2_WriteTIMRegisters(&pHandle->_Super, SamplingPoint);
 5527              		.loc 8 1241 14
 5528 00cc 3B69     		ldr	r3, [r7, #16]
 5529 00ce FA8A     		ldrh	r2, [r7, #22]
 5530 00d0 1146     		mov	r1, r2
 5531 00d2 1846     		mov	r0, r3
 5532 00d4 FFF7FEFF 		bl	R3_2_WriteTIMRegisters
 5533 00d8 0346     		mov	r3, r0
 5534 00da BB81     		strh	r3, [r7, #12]	@ movhi
1242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return (retVal);
 5535              		.loc 8 1245 10
 5536 00dc BB89     		ldrh	r3, [r7, #12]
1246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5537              		.loc 8 1246 1
 5538 00de 1846     		mov	r0, r3
 5539 00e0 1837     		adds	r7, r7, #24
 5540              	.LCFI375:
 5541              		.cfi_def_cfa_offset 8
 5542 00e2 BD46     		mov	sp, r7
 5543              	.LCFI376:
 5544              		.cfi_def_cfa_register 13
 5545              		@ sp needed
 5546 00e4 80BD     		pop	{r7, pc}
 5547              		.cfi_endproc
 5548              	.LFE1448:
 5550              		.section	.text.R3_2_WriteTIMRegisters,"ax",%progbits
 5551              		.align	1
 5552              		.syntax unified
 5553              		.thumb
 5554              		.thumb_func
 5555              		.fpu fpv4-sp-d16
 5557              	R3_2_WriteTIMRegisters:
 5558              	.LFB1449:
1247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
ARM GAS  /tmp/ccA1EUYa.s 			page 497


1249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
1250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
1251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
1253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Writes into peripheral registers the new duty cycle and sampling point.
1257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
1259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  SamplingPoint: Point at which the ADC will be triggered, written in timer clock counts.
1260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @retval Returns #MC_NO_ERROR if no error occurred or #MC_DURATION if the duty cycles were
1261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         set too late for being taken into account in the next PWM cycle.
1262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __STATIC_INLINE uint16_t R3_2_WriteTIMRegisters(PWMC_Handle_t *pHdl, uint16_t SamplingPoint)
1264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5559              		.loc 8 1264 1
 5560              		.cfi_startproc
 5561              		@ args = 0, pretend = 0, frame = 24
 5562              		@ frame_needed = 1, uses_anonymous_args = 0
 5563 0000 80B5     		push	{r7, lr}
 5564              	.LCFI377:
 5565              		.cfi_def_cfa_offset 8
 5566              		.cfi_offset 7, -8
 5567              		.cfi_offset 14, -4
 5568 0002 86B0     		sub	sp, sp, #24
 5569              	.LCFI378:
 5570              		.cfi_def_cfa_offset 32
 5571 0004 00AF     		add	r7, sp, #0
 5572              	.LCFI379:
 5573              		.cfi_def_cfa_register 7
 5574 0006 7860     		str	r0, [r7, #4]
 5575 0008 0B46     		mov	r3, r1
 5576 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 5577              		.loc 8 1265 23
 5578 000c 7B68     		ldr	r3, [r7, #4]
 5579 000e 3B61     		str	r3, [r7, #16]
1266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 5580              		.loc 8 1266 30
 5581 0010 3B69     		ldr	r3, [r7, #16]
 5582 0012 D3F89C30 		ldr	r3, [r3, #156]
 5583              		.loc 8 1266 16
 5584 0016 1B68     		ldr	r3, [r3]
 5585 0018 FB60     		str	r3, [r7, #12]
1267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   uint16_t Aux;
1268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH1(TIMx, (uint32_t) pHandle->_Super.CntPhA);
 5586              		.loc 8 1269 59
 5587 001a 3B69     		ldr	r3, [r7, #16]
 5588 001c B3F85030 		ldrh	r3, [r3, #80]
 5589              		.loc 8 1269 3
 5590 0020 1946     		mov	r1, r3
 5591 0022 F868     		ldr	r0, [r7, #12]
 5592 0024 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
1270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH2(TIMx, (uint32_t) pHandle->_Super.CntPhB);
 5593              		.loc 8 1270 59
ARM GAS  /tmp/ccA1EUYa.s 			page 498


 5594 0028 3B69     		ldr	r3, [r7, #16]
 5595 002a B3F85230 		ldrh	r3, [r3, #82]
 5596              		.loc 8 1270 3
 5597 002e 1946     		mov	r1, r3
 5598 0030 F868     		ldr	r0, [r7, #12]
 5599 0032 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH2
1271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH3(TIMx, (uint32_t) pHandle->_Super.CntPhC);
 5600              		.loc 8 1271 59
 5601 0036 3B69     		ldr	r3, [r7, #16]
 5602 0038 B3F85430 		ldrh	r3, [r3, #84]
 5603              		.loc 8 1271 3
 5604 003c 1946     		mov	r1, r3
 5605 003e F868     		ldr	r0, [r7, #12]
 5606 0040 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
1272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH4(TIMx, (uint32_t) SamplingPoint);
 5607              		.loc 8 1272 3
 5608 0044 7B88     		ldrh	r3, [r7, #2]
 5609 0046 1946     		mov	r1, r3
 5610 0048 F868     		ldr	r0, [r7, #12]
 5611 004a FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH4
1273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Limit for update event */
1275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /*  if ( LL_TIM_CC_IsEnabledChannel(TIMx, LL_TIM_CHANNEL_CH4) == 1u ) */
1276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (((TIMx->CR2) & TIM_CR2_MMS_Msk) != LL_TIM_TRGO_RESET)
 5612              		.loc 8 1276 13
 5613 004e FB68     		ldr	r3, [r7, #12]
 5614 0050 5A68     		ldr	r2, [r3, #4]
 5615              		.loc 8 1276 20
 5616 0052 074B     		ldr	r3, .L262
 5617 0054 1340     		ands	r3, r3, r2
 5618              		.loc 8 1276 6
 5619 0056 002B     		cmp	r3, #0
 5620 0058 02D0     		beq	.L259
1277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Aux = MC_DURATION;
 5621              		.loc 8 1278 9
 5622 005a 0123     		movs	r3, #1
 5623 005c FB82     		strh	r3, [r7, #22]	@ movhi
 5624 005e 01E0     		b	.L260
 5625              	.L259:
1279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Aux = MC_NO_ERROR;
 5626              		.loc 8 1282 9
 5627 0060 0023     		movs	r3, #0
 5628 0062 FB82     		strh	r3, [r7, #22]	@ movhi
 5629              	.L260:
1283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return Aux;
 5630              		.loc 8 1284 10
 5631 0064 FB8A     		ldrh	r3, [r7, #22]
1285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5632              		.loc 8 1285 1
 5633 0066 1846     		mov	r0, r3
 5634 0068 1837     		adds	r7, r7, #24
 5635              	.LCFI380:
ARM GAS  /tmp/ccA1EUYa.s 			page 499


 5636              		.cfi_def_cfa_offset 8
 5637 006a BD46     		mov	sp, r7
 5638              	.LCFI381:
 5639              		.cfi_def_cfa_register 13
 5640              		@ sp needed
 5641 006c 80BD     		pop	{r7, pc}
 5642              	.L263:
 5643 006e 00BF     		.align	2
 5644              	.L262:
 5645 0070 70000002 		.word	33554544
 5646              		.cfi_endproc
 5647              	.LFE1449:
 5649              		.section	.text.R3_2_HFCurrentsPolarizationAB,"ax",%progbits
 5650              		.align	1
 5651              		.syntax unified
 5652              		.thumb
 5653              		.thumb_func
 5654              		.fpu fpv4-sp-d16
 5656              	R3_2_HFCurrentsPolarizationAB:
 5657              	.LFB1450:
1286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Implementation of PWMC_GetPhaseCurrents to be performed during polarization.
1289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
1290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It sums up injected conversion data into PhaseAOffset and
1291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * PhaseBOffset to compute the offset introduced in the current feedback
1292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * network. It is required to properly configure ADC inputs before in order to enable
1293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * the offset computation.
1294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  Iab: Pointer to the structure that will receive motor current
1297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         of phase A and B in ab_t format.
1298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_HFCurrentsPolarizationAB(PWMC_Handle_t *pHdl, ab_t *Iab)
1300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5658              		.loc 8 1300 1
 5659              		.cfi_startproc
 5660              		@ args = 0, pretend = 0, frame = 24
 5661              		@ frame_needed = 1, uses_anonymous_args = 0
 5662              		@ link register save eliminated.
 5663 0000 80B4     		push	{r7}
 5664              	.LCFI382:
 5665              		.cfi_def_cfa_offset 4
 5666              		.cfi_offset 7, -4
 5667 0002 87B0     		sub	sp, sp, #28
 5668              	.LCFI383:
 5669              		.cfi_def_cfa_offset 32
 5670 0004 00AF     		add	r7, sp, #0
 5671              	.LCFI384:
 5672              		.cfi_def_cfa_register 7
 5673 0006 7860     		str	r0, [r7, #4]
 5674 0008 3960     		str	r1, [r7]
1301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == Iab)
1303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
ARM GAS  /tmp/ccA1EUYa.s 			page 500


1306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 5675              		.loc 8 1309 25
 5676 000a 7B68     		ldr	r3, [r7, #4]
 5677 000c 7B61     		str	r3, [r7, #20]
1310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 5678              		.loc 8 1310 32
 5679 000e 7B69     		ldr	r3, [r7, #20]
 5680 0010 D3F89C30 		ldr	r3, [r3, #156]
 5681              		.loc 8 1310 18
 5682 0014 1B68     		ldr	r3, [r3]
 5683 0016 3B61     		str	r3, [r7, #16]
1311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg1 = pHandle->pParams_str->ADCDataReg1[pHandle->PolarizationSector]->JDR1;
 5684              		.loc 8 1311 35
 5685 0018 7B69     		ldr	r3, [r7, #20]
 5686 001a D3F89C30 		ldr	r3, [r3, #156]
 5687              		.loc 8 1311 69
 5688 001e 7A69     		ldr	r2, [r7, #20]
 5689 0020 92F89920 		ldrb	r2, [r2, #153]	@ zero_extendqisi2
 5690              		.loc 8 1311 61
 5691 0024 0E32     		adds	r2, r2, #14
 5692 0026 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5693              		.loc 8 1311 14
 5694 002a D3F88030 		ldr	r3, [r3, #128]
 5695 002e FB60     		str	r3, [r7, #12]
1312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg2 = pHandle->pParams_str->ADCDataReg2[pHandle->PolarizationSector]->JDR1;
 5696              		.loc 8 1312 35
 5697 0030 7B69     		ldr	r3, [r7, #20]
 5698 0032 D3F89C30 		ldr	r3, [r3, #156]
 5699              		.loc 8 1312 69
 5700 0036 7A69     		ldr	r2, [r7, #20]
 5701 0038 92F89920 		ldrb	r2, [r2, #153]	@ zero_extendqisi2
 5702              		.loc 8 1312 61
 5703 003c 1432     		adds	r2, r2, #20
 5704 003e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5705              		.loc 8 1312 14
 5706 0042 D3F88030 		ldr	r3, [r3, #128]
 5707 0046 BB60     		str	r3, [r7, #8]
1313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Disable ADC trigger source */
1315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH4) */
1316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   //  LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_RESET);
1317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (pHandle->PolarizationCounter < NB_CONVERSIONS)
 5708              		.loc 8 1318 16
 5709 0048 7B69     		ldr	r3, [r7, #20]
 5710 004a 93F89830 		ldrb	r3, [r3, #152]
 5711 004e DBB2     		uxtb	r3, r3
 5712              		.loc 8 1318 8
 5713 0050 0F2B     		cmp	r3, #15
 5714 0052 18D8     		bhi	.L265
1319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle-> PhaseAOffset += ADCDataReg1;
 5715              		.loc 8 1320 30
 5716 0054 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccA1EUYa.s 			page 501


 5717 0056 D3F88820 		ldr	r2, [r3, #136]
 5718 005a FB68     		ldr	r3, [r7, #12]
 5719 005c 1A44     		add	r2, r2, r3
 5720 005e 7B69     		ldr	r3, [r7, #20]
 5721 0060 C3F88820 		str	r2, [r3, #136]
1321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle-> PhaseBOffset += ADCDataReg2;
 5722              		.loc 8 1321 30
 5723 0064 7B69     		ldr	r3, [r7, #20]
 5724 0066 D3F88C20 		ldr	r2, [r3, #140]
 5725 006a BB68     		ldr	r3, [r7, #8]
 5726 006c 1A44     		add	r2, r2, r3
 5727 006e 7B69     		ldr	r3, [r7, #20]
 5728 0070 C3F88C20 		str	r2, [r3, #140]
1322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle->PolarizationCounter++;
 5729              		.loc 8 1322 14
 5730 0074 7B69     		ldr	r3, [r7, #20]
 5731 0076 93F89830 		ldrb	r3, [r3, #152]
 5732 007a DBB2     		uxtb	r3, r3
 5733              		.loc 8 1322 35
 5734 007c 0133     		adds	r3, r3, #1
 5735 007e DAB2     		uxtb	r2, r3
 5736 0080 7B69     		ldr	r3, [r7, #20]
 5737 0082 83F89820 		strb	r2, [r3, #152]
 5738              	.L265:
1323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* During offset calibration no current is flowing in the phases */
1330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Iab->a = 0;
 5739              		.loc 8 1330 12
 5740 0086 3B68     		ldr	r3, [r7]
 5741 0088 0022     		movs	r2, #0
 5742 008a 1A80     		strh	r2, [r3]	@ movhi
1331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Iab->b = 0;
 5743              		.loc 8 1331 12
 5744 008c 3B68     		ldr	r3, [r7]
 5745 008e 0022     		movs	r2, #0
 5746 0090 5A80     		strh	r2, [r3, #2]	@ movhi
1332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5747              		.loc 8 1335 1
 5748 0092 00BF     		nop
 5749 0094 1C37     		adds	r7, r7, #28
 5750              	.LCFI385:
 5751              		.cfi_def_cfa_offset 4
 5752 0096 BD46     		mov	sp, r7
 5753              	.LCFI386:
 5754              		.cfi_def_cfa_register 13
 5755              		@ sp needed
 5756 0098 5DF8047B 		ldr	r7, [sp], #4
 5757              	.LCFI387:
 5758              		.cfi_restore 7
ARM GAS  /tmp/ccA1EUYa.s 			page 502


 5759              		.cfi_def_cfa_offset 0
 5760 009c 7047     		bx	lr
 5761              		.cfi_endproc
 5762              	.LFE1450:
 5764              		.section	.text.R3_2_HFCurrentsPolarizationC,"ax",%progbits
 5765              		.align	1
 5766              		.syntax unified
 5767              		.thumb
 5768              		.thumb_func
 5769              		.fpu fpv4-sp-d16
 5771              	R3_2_HFCurrentsPolarizationC:
 5772              	.LFB1451:
1336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Implementation of PWMC_GetPhaseCurrents to be performed during polarization.
1339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
1340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * It sums up injected conversion data into PhaseCOffset to compute the
1341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * offset introduced in the current feedback
1342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * network. It is required to properly configure ADC inputs before enabling
1343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * the offset computation.
1344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  Iab: Pointer to the structure that will receive motor current
1347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         of phase A and B in ab_t format.
1348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_HFCurrentsPolarizationC(PWMC_Handle_t *pHdl, ab_t *Iab)
1350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5773              		.loc 8 1350 1
 5774              		.cfi_startproc
 5775              		@ args = 0, pretend = 0, frame = 24
 5776              		@ frame_needed = 1, uses_anonymous_args = 0
 5777              		@ link register save eliminated.
 5778 0000 80B4     		push	{r7}
 5779              	.LCFI388:
 5780              		.cfi_def_cfa_offset 4
 5781              		.cfi_offset 7, -4
 5782 0002 87B0     		sub	sp, sp, #28
 5783              	.LCFI389:
 5784              		.cfi_def_cfa_offset 32
 5785 0004 00AF     		add	r7, sp, #0
 5786              	.LCFI390:
 5787              		.cfi_def_cfa_register 7
 5788 0006 7860     		str	r0, [r7, #4]
 5789 0008 3960     		str	r1, [r7]
1351:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1352:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == Iab)
1353:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1354:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1355:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1356:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1357:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1358:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1359:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 5790              		.loc 8 1359 25
 5791 000a 7B68     		ldr	r3, [r7, #4]
 5792 000c 7B61     		str	r3, [r7, #20]
1360:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
ARM GAS  /tmp/ccA1EUYa.s 			page 503


 5793              		.loc 8 1360 32
 5794 000e 7B69     		ldr	r3, [r7, #20]
 5795 0010 D3F89C30 		ldr	r3, [r3, #156]
 5796              		.loc 8 1360 18
 5797 0014 1B68     		ldr	r3, [r3]
 5798 0016 3B61     		str	r3, [r7, #16]
1361:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t ADCDataReg2 = pHandle->pParams_str->ADCDataReg2[pHandle->PolarizationSector]->JDR1;
 5799              		.loc 8 1361 35
 5800 0018 7B69     		ldr	r3, [r7, #20]
 5801 001a D3F89C30 		ldr	r3, [r3, #156]
 5802              		.loc 8 1361 69
 5803 001e 7A69     		ldr	r2, [r7, #20]
 5804 0020 92F89920 		ldrb	r2, [r2, #153]	@ zero_extendqisi2
 5805              		.loc 8 1361 61
 5806 0024 1432     		adds	r2, r2, #20
 5807 0026 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5808              		.loc 8 1361 14
 5809 002a D3F88030 		ldr	r3, [r3, #128]
 5810 002e FB60     		str	r3, [r7, #12]
1362:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1363:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Disable ADC trigger source */
1364:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH4) */
1365:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   //  LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_RESET);
1366:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1367:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (pHandle->PolarizationCounter < NB_CONVERSIONS)
 5811              		.loc 8 1367 16
 5812 0030 7B69     		ldr	r3, [r7, #20]
 5813 0032 93F89830 		ldrb	r3, [r3, #152]
 5814 0036 DBB2     		uxtb	r3, r3
 5815              		.loc 8 1367 8
 5816 0038 0F2B     		cmp	r3, #15
 5817 003a 10D8     		bhi	.L267
1368:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1369:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Phase C is read from SECTOR_1, second value */
1370:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle-> PhaseCOffset += ADCDataReg2;
 5818              		.loc 8 1370 30
 5819 003c 7B69     		ldr	r3, [r7, #20]
 5820 003e D3F89020 		ldr	r2, [r3, #144]
 5821 0042 FB68     		ldr	r3, [r7, #12]
 5822 0044 1A44     		add	r2, r2, r3
 5823 0046 7B69     		ldr	r3, [r7, #20]
 5824 0048 C3F89020 		str	r2, [r3, #144]
1371:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle->PolarizationCounter++;
 5825              		.loc 8 1371 14
 5826 004c 7B69     		ldr	r3, [r7, #20]
 5827 004e 93F89830 		ldrb	r3, [r3, #152]
 5828 0052 DBB2     		uxtb	r3, r3
 5829              		.loc 8 1371 35
 5830 0054 0133     		adds	r3, r3, #1
 5831 0056 DAB2     		uxtb	r2, r3
 5832 0058 7B69     		ldr	r3, [r7, #20]
 5833 005a 83F89820 		strb	r2, [r3, #152]
 5834              	.L267:
1372:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1373:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1374:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1375:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
ARM GAS  /tmp/ccA1EUYa.s 			page 504


1376:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1377:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1378:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* During offset calibration no current is flowing in the phases */
1379:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Iab->a = 0;
 5835              		.loc 8 1379 12
 5836 005e 3B68     		ldr	r3, [r7]
 5837 0060 0022     		movs	r2, #0
 5838 0062 1A80     		strh	r2, [r3]	@ movhi
1380:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     Iab->b = 0;
 5839              		.loc 8 1380 12
 5840 0064 3B68     		ldr	r3, [r7]
 5841 0066 0022     		movs	r2, #0
 5842 0068 5A80     		strh	r2, [r3, #2]	@ movhi
1381:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1382:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1383:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1384:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5843              		.loc 8 1384 1
 5844 006a 00BF     		nop
 5845 006c 1C37     		adds	r7, r7, #28
 5846              	.LCFI391:
 5847              		.cfi_def_cfa_offset 4
 5848 006e BD46     		mov	sp, r7
 5849              	.LCFI392:
 5850              		.cfi_def_cfa_register 13
 5851              		@ sp needed
 5852 0070 5DF8047B 		ldr	r7, [sp], #4
 5853              	.LCFI393:
 5854              		.cfi_restore 7
 5855              		.cfi_def_cfa_offset 0
 5856 0074 7047     		bx	lr
 5857              		.cfi_endproc
 5858              	.LFE1451:
 5860              		.section	.text.R3_2_TurnOnLowSides,"ax",%progbits
 5861              		.align	1
 5862              		.weak	R3_2_TurnOnLowSides
 5863              		.syntax unified
 5864              		.thumb
 5865              		.thumb_func
 5866              		.fpu fpv4-sp-d16
 5868              	R3_2_TurnOnLowSides:
 5869              	.LFB1452:
1385:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1387:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Turns on low sides switches.
1388:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
1389:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * This function is intended to be used for charging boot capacitors of driving section. It has to
1390:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * called on each motor start-up when using high voltage drivers.
1391:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1392:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1393:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  ticks: Timer ticks value to be applied
1394:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *                Min value: 0 (low sides ON)
1395:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *                Max value: PWM_PERIOD_CYCLES/2 (low sides OFF)
1396:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1397:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_TurnOnLowSides(PWMC_Handle_t *pHdl, uint32_t ticks)
1398:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5870              		.loc 8 1398 1
ARM GAS  /tmp/ccA1EUYa.s 			page 505


 5871              		.cfi_startproc
 5872              		@ args = 0, pretend = 0, frame = 16
 5873              		@ frame_needed = 1, uses_anonymous_args = 0
 5874 0000 80B5     		push	{r7, lr}
 5875              	.LCFI394:
 5876              		.cfi_def_cfa_offset 8
 5877              		.cfi_offset 7, -8
 5878              		.cfi_offset 14, -4
 5879 0002 84B0     		sub	sp, sp, #16
 5880              	.LCFI395:
 5881              		.cfi_def_cfa_offset 24
 5882 0004 00AF     		add	r7, sp, #0
 5883              	.LCFI396:
 5884              		.cfi_def_cfa_register 7
 5885 0006 7860     		str	r0, [r7, #4]
 5886 0008 3960     		str	r1, [r7]
1399:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 5887              		.loc 8 1399 23
 5888 000a 7B68     		ldr	r3, [r7, #4]
 5889 000c FB60     		str	r3, [r7, #12]
1400:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 5890              		.loc 8 1400 30
 5891 000e FB68     		ldr	r3, [r7, #12]
 5892 0010 D3F89C30 		ldr	r3, [r3, #156]
 5893              		.loc 8 1400 16
 5894 0014 1B68     		ldr	r3, [r3]
 5895 0016 BB60     		str	r3, [r7, #8]
1401:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1402:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.TurnOnLowSidesAction = true;
 5896              		.loc 8 1402 40
 5897 0018 FB68     		ldr	r3, [r7, #12]
 5898 001a 0122     		movs	r2, #1
 5899 001c 83F87C20 		strb	r2, [r3, #124]
1403:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1404:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Clear Update Flag */
1405:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(pHandle->pParams_str->TIMx);
 5900              		.loc 8 1405 34
 5901 0020 FB68     		ldr	r3, [r7, #12]
 5902 0022 D3F89C30 		ldr	r3, [r3, #156]
 5903              		.loc 8 1405 3
 5904 0026 1B68     		ldr	r3, [r3]
 5905 0028 1846     		mov	r0, r3
 5906 002a FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
1406:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1407:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Turn on the three low side switches */
1408:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH1(TIMx, 100);
 5907              		.loc 8 1408 3
 5908 002e 6421     		movs	r1, #100
 5909 0030 B868     		ldr	r0, [r7, #8]
 5910 0032 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
1409:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH2(TIMx, 100);
 5911              		.loc 8 1409 3
 5912 0036 6421     		movs	r1, #100
 5913 0038 B868     		ldr	r0, [r7, #8]
 5914 003a FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH2
1410:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH3(TIMx, 100);
 5915              		.loc 8 1410 3
ARM GAS  /tmp/ccA1EUYa.s 			page 506


 5916 003e 6421     		movs	r1, #100
 5917 0040 B868     		ldr	r0, [r7, #8]
 5918 0042 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
1411:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1412:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Wait until next update */
1413:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 5919              		.loc 8 1413 9
 5920 0046 00BF     		nop
 5921              	.L269:
 5922              		.loc 8 1413 16 discriminator 1
 5923 0048 B868     		ldr	r0, [r7, #8]
 5924 004a FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 5925 004e 0346     		mov	r3, r0
 5926              		.loc 8 1413 9 discriminator 1
 5927 0050 002B     		cmp	r3, #0
 5928 0052 F9D0     		beq	.L269
1414:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1415:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1416:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1417:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1418:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1419:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   
1420:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Main PWM Output Enable */
1421:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_EnableAllOutputs(TIMx);
 5929              		.loc 8 1421 3
 5930 0054 B868     		ldr	r0, [r7, #8]
 5931 0056 FFF7FEFF 		bl	LL_TIM_EnableAllOutputs
1422:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1423:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if ((ES_GPIO == pHandle->_Super.LowSideOutputs))
 5932              		.loc 8 1423 34
 5933 005a FB68     		ldr	r3, [r7, #12]
 5934 005c 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 5935              		.loc 8 1423 6
 5936 0060 022B     		cmp	r3, #2
 5937 0062 1AD1     		bne	.L271
1424:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1425:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 5938              		.loc 8 1425 5
 5939 0064 FB68     		ldr	r3, [r7, #12]
 5940 0066 DA6B     		ldr	r2, [r3, #60]
 5941              		.loc 8 1425 72
 5942 0068 FB68     		ldr	r3, [r7, #12]
 5943 006a B3F84830 		ldrh	r3, [r3, #72]
 5944              		.loc 8 1425 5
 5945 006e 1946     		mov	r1, r3
 5946 0070 1046     		mov	r0, r2
 5947 0072 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
1426:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 5948              		.loc 8 1426 5
 5949 0076 FB68     		ldr	r3, [r7, #12]
 5950 0078 1A6C     		ldr	r2, [r3, #64]
 5951              		.loc 8 1426 72
 5952 007a FB68     		ldr	r3, [r7, #12]
 5953 007c B3F84A30 		ldrh	r3, [r3, #74]
 5954              		.loc 8 1426 5
 5955 0080 1946     		mov	r1, r3
 5956 0082 1046     		mov	r0, r2
ARM GAS  /tmp/ccA1EUYa.s 			page 507


 5957 0084 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
1427:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 5958              		.loc 8 1427 5
 5959 0088 FB68     		ldr	r3, [r7, #12]
 5960 008a 5A6C     		ldr	r2, [r3, #68]
 5961              		.loc 8 1427 72
 5962 008c FB68     		ldr	r3, [r7, #12]
 5963 008e B3F84C30 		ldrh	r3, [r3, #76]
 5964              		.loc 8 1427 5
 5965 0092 1946     		mov	r1, r3
 5966 0094 1046     		mov	r0, r2
 5967 0096 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
 5968              	.L271:
1428:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1429:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1430:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1431:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1432:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1433:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 5969              		.loc 8 1433 1
 5970 009a 00BF     		nop
 5971 009c 1037     		adds	r7, r7, #16
 5972              	.LCFI397:
 5973              		.cfi_def_cfa_offset 8
 5974 009e BD46     		mov	sp, r7
 5975              	.LCFI398:
 5976              		.cfi_def_cfa_register 13
 5977              		@ sp needed
 5978 00a0 80BD     		pop	{r7, pc}
 5979              		.cfi_endproc
 5980              	.LFE1452:
 5982              		.section	.text.R3_2_SwitchOnPWM,"ax",%progbits
 5983              		.align	1
 5984              		.weak	R3_2_SwitchOnPWM
 5985              		.syntax unified
 5986              		.thumb
 5987              		.thumb_func
 5988              		.fpu fpv4-sp-d16
 5990              	R3_2_SwitchOnPWM:
 5991              	.LFB1453:
1434:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1435:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1436:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1437:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Enables PWM generation on the proper Timer peripheral acting on MOE bit.
1438:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1439:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1440:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1441:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_SwitchOnPWM(PWMC_Handle_t *pHdl)
1442:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 5992              		.loc 8 1442 1
 5993              		.cfi_startproc
 5994              		@ args = 0, pretend = 0, frame = 16
 5995              		@ frame_needed = 1, uses_anonymous_args = 0
 5996 0000 80B5     		push	{r7, lr}
 5997              	.LCFI399:
 5998              		.cfi_def_cfa_offset 8
 5999              		.cfi_offset 7, -8
ARM GAS  /tmp/ccA1EUYa.s 			page 508


 6000              		.cfi_offset 14, -4
 6001 0002 84B0     		sub	sp, sp, #16
 6002              	.LCFI400:
 6003              		.cfi_def_cfa_offset 24
 6004 0004 00AF     		add	r7, sp, #0
 6005              	.LCFI401:
 6006              		.cfi_def_cfa_register 7
 6007 0006 7860     		str	r0, [r7, #4]
1443:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 6008              		.loc 8 1443 23
 6009 0008 7B68     		ldr	r3, [r7, #4]
 6010 000a FB60     		str	r3, [r7, #12]
1444:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 6011              		.loc 8 1444 30
 6012 000c FB68     		ldr	r3, [r7, #12]
 6013 000e D3F89C30 		ldr	r3, [r3, #156]
 6014              		.loc 8 1444 16
 6015 0012 1B68     		ldr	r3, [r3]
 6016 0014 BB60     		str	r3, [r7, #8]
1445:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* We forbid ADC usage for regular conversion on Systick */
1446:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->ADCRegularLocked = true;
 6017              		.loc 8 1446 29
 6018 0016 FB68     		ldr	r3, [r7, #12]
 6019 0018 0122     		movs	r2, #1
 6020 001a 83F8A020 		strb	r2, [r3, #160]
1447:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1448:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.TurnOnLowSidesAction = false;
 6021              		.loc 8 1448 40
 6022 001e FB68     		ldr	r3, [r7, #12]
 6023 0020 0022     		movs	r2, #0
 6024 0022 83F87C20 		strb	r2, [r3, #124]
1449:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1450:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Set all duty to 50% */
1451:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH1(TIMx, ((uint32_t)pHandle->Half_PWMPeriod / (uint32_t)2));
 6025              		.loc 8 1451 51
 6026 0026 FB68     		ldr	r3, [r7, #12]
 6027 0028 B3F89430 		ldrh	r3, [r3, #148]
 6028              		.loc 8 1451 3
 6029 002c 5B08     		lsrs	r3, r3, #1
 6030 002e 9BB2     		uxth	r3, r3
 6031 0030 1946     		mov	r1, r3
 6032 0032 B868     		ldr	r0, [r7, #8]
 6033 0034 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
1452:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH2(TIMx, ((uint32_t)pHandle->Half_PWMPeriod / (uint32_t)2));
 6034              		.loc 8 1452 51
 6035 0038 FB68     		ldr	r3, [r7, #12]
 6036 003a B3F89430 		ldrh	r3, [r3, #148]
 6037              		.loc 8 1452 3
 6038 003e 5B08     		lsrs	r3, r3, #1
 6039 0040 9BB2     		uxth	r3, r3
 6040 0042 1946     		mov	r1, r3
 6041 0044 B868     		ldr	r0, [r7, #8]
 6042 0046 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH2
1453:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH3(TIMx, ((uint32_t)pHandle->Half_PWMPeriod / (uint32_t)2));
 6043              		.loc 8 1453 51
 6044 004a FB68     		ldr	r3, [r7, #12]
 6045 004c B3F89430 		ldrh	r3, [r3, #148]
ARM GAS  /tmp/ccA1EUYa.s 			page 509


 6046              		.loc 8 1453 3
 6047 0050 5B08     		lsrs	r3, r3, #1
 6048 0052 9BB2     		uxth	r3, r3
 6049 0054 1946     		mov	r1, r3
 6050 0056 B868     		ldr	r0, [r7, #8]
 6051 0058 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
1454:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH4(TIMx, ((uint32_t)pHandle->Half_PWMPeriod - (uint32_t)5));
 6052              		.loc 8 1454 51
 6053 005c FB68     		ldr	r3, [r7, #12]
 6054 005e B3F89430 		ldrh	r3, [r3, #148]
 6055              		.loc 8 1454 3
 6056 0062 053B     		subs	r3, r3, #5
 6057 0064 1946     		mov	r1, r3
 6058 0066 B868     		ldr	r0, [r7, #8]
 6059 0068 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH4
1455:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1456:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Wait for a new PWM period */
1457:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(TIMx);
 6060              		.loc 8 1457 3
 6061 006c B868     		ldr	r0, [r7, #8]
 6062 006e FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
1458:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 6063              		.loc 8 1458 9
 6064 0072 00BF     		nop
 6065              	.L273:
 6066              		.loc 8 1458 16 discriminator 1
 6067 0074 B868     		ldr	r0, [r7, #8]
 6068 0076 FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 6069 007a 0346     		mov	r3, r0
 6070              		.loc 8 1458 9 discriminator 1
 6071 007c 002B     		cmp	r3, #0
 6072 007e F9D0     		beq	.L273
1459:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1460:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1461:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1462:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(TIMx);
 6073              		.loc 8 1462 3
 6074 0080 B868     		ldr	r0, [r7, #8]
 6075 0082 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
1463:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1464:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Main PWM Output Enable */
1465:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIMx->BDTR |= LL_TIM_OSSI_ENABLE;
 6076              		.loc 8 1465 14
 6077 0086 BB68     		ldr	r3, [r7, #8]
 6078 0088 5B6C     		ldr	r3, [r3, #68]
 6079 008a 43F48062 		orr	r2, r3, #1024
 6080 008e BB68     		ldr	r3, [r7, #8]
 6081 0090 5A64     		str	r2, [r3, #68]
1466:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_EnableAllOutputs(TIMx);
 6082              		.loc 8 1466 3
 6083 0092 B868     		ldr	r0, [r7, #8]
 6084 0094 FFF7FEFF 		bl	LL_TIM_EnableAllOutputs
1467:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1468:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1469:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1470:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if ((ES_GPIO == pHandle->_Super.LowSideOutputs))
 6085              		.loc 8 1470 34
ARM GAS  /tmp/ccA1EUYa.s 			page 510


 6086 0098 FB68     		ldr	r3, [r7, #12]
 6087 009a 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6088              		.loc 8 1470 6
 6089 009e 022B     		cmp	r3, #2
 6090 00a0 3DD1     		bne	.L274
1471:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1472:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if ((TIMx->CCER & TIMxCCER_MASK_CH123) != 0U)
 6091              		.loc 8 1472 14
 6092 00a2 BB68     		ldr	r3, [r7, #8]
 6093 00a4 1A6A     		ldr	r2, [r3, #32]
 6094              		.loc 8 1472 21
 6095 00a6 40F25553 		movw	r3, #1365
 6096 00aa 1340     		ands	r3, r3, r2
 6097              		.loc 8 1472 8
 6098 00ac 002B     		cmp	r3, #0
 6099 00ae 1BD0     		beq	.L275
1473:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1474:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 6100              		.loc 8 1474 7
 6101 00b0 FB68     		ldr	r3, [r7, #12]
 6102 00b2 DA6B     		ldr	r2, [r3, #60]
 6103              		.loc 8 1474 74
 6104 00b4 FB68     		ldr	r3, [r7, #12]
 6105 00b6 B3F84830 		ldrh	r3, [r3, #72]
 6106              		.loc 8 1474 7
 6107 00ba 1946     		mov	r1, r3
 6108 00bc 1046     		mov	r0, r2
 6109 00be FFF7FEFF 		bl	LL_GPIO_SetOutputPin
1475:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 6110              		.loc 8 1475 7
 6111 00c2 FB68     		ldr	r3, [r7, #12]
 6112 00c4 1A6C     		ldr	r2, [r3, #64]
 6113              		.loc 8 1475 74
 6114 00c6 FB68     		ldr	r3, [r7, #12]
 6115 00c8 B3F84A30 		ldrh	r3, [r3, #74]
 6116              		.loc 8 1475 7
 6117 00cc 1946     		mov	r1, r3
 6118 00ce 1046     		mov	r0, r2
 6119 00d0 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
1476:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 6120              		.loc 8 1476 7
 6121 00d4 FB68     		ldr	r3, [r7, #12]
 6122 00d6 5A6C     		ldr	r2, [r3, #68]
 6123              		.loc 8 1476 74
 6124 00d8 FB68     		ldr	r3, [r7, #12]
 6125 00da B3F84C30 		ldrh	r3, [r3, #76]
 6126              		.loc 8 1476 7
 6127 00de 1946     		mov	r1, r3
 6128 00e0 1046     		mov	r0, r2
 6129 00e2 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
 6130 00e6 1AE0     		b	.L274
 6131              	.L275:
1477:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1478:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1479:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1480:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* It is executed during calibration phase the EN signal shall stay off */
1481:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
ARM GAS  /tmp/ccA1EUYa.s 			page 511


 6132              		.loc 8 1481 7
 6133 00e8 FB68     		ldr	r3, [r7, #12]
 6134 00ea DA6B     		ldr	r2, [r3, #60]
 6135              		.loc 8 1481 76
 6136 00ec FB68     		ldr	r3, [r7, #12]
 6137 00ee B3F84830 		ldrh	r3, [r3, #72]
 6138              		.loc 8 1481 7
 6139 00f2 1946     		mov	r1, r3
 6140 00f4 1046     		mov	r0, r2
 6141 00f6 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
1482:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 6142              		.loc 8 1482 7
 6143 00fa FB68     		ldr	r3, [r7, #12]
 6144 00fc 1A6C     		ldr	r2, [r3, #64]
 6145              		.loc 8 1482 76
 6146 00fe FB68     		ldr	r3, [r7, #12]
 6147 0100 B3F84A30 		ldrh	r3, [r3, #74]
 6148              		.loc 8 1482 7
 6149 0104 1946     		mov	r1, r3
 6150 0106 1046     		mov	r0, r2
 6151 0108 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
1483:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 6152              		.loc 8 1483 7
 6153 010c FB68     		ldr	r3, [r7, #12]
 6154 010e 5A6C     		ldr	r2, [r3, #68]
 6155              		.loc 8 1483 76
 6156 0110 FB68     		ldr	r3, [r7, #12]
 6157 0112 B3F84C30 		ldrh	r3, [r3, #76]
 6158              		.loc 8 1483 7
 6159 0116 1946     		mov	r1, r3
 6160 0118 1046     		mov	r0, r2
 6161 011a FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 6162              	.L274:
1484:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1485:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1486:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1487:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1488:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1489:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1490:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Clear Update Flag */
1491:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(TIMx);
 6163              		.loc 8 1491 3
 6164 011e B868     		ldr	r0, [r7, #8]
 6165 0120 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
1492:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enable Update IRQ */
1493:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_EnableIT_UPDATE(TIMx);
 6166              		.loc 8 1493 3
 6167 0124 B868     		ldr	r0, [r7, #8]
 6168 0126 FFF7FEFF 		bl	LL_TIM_EnableIT_UPDATE
1494:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  
1495:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 6169              		.loc 8 1495 1
 6170 012a 00BF     		nop
 6171 012c 1037     		adds	r7, r7, #16
 6172              	.LCFI402:
 6173              		.cfi_def_cfa_offset 8
 6174 012e BD46     		mov	sp, r7
ARM GAS  /tmp/ccA1EUYa.s 			page 512


 6175              	.LCFI403:
 6176              		.cfi_def_cfa_register 13
 6177              		@ sp needed
 6178 0130 80BD     		pop	{r7, pc}
 6179              		.cfi_endproc
 6180              	.LFE1453:
 6182              		.section	.text.R3_2_SwitchOffPWM,"ax",%progbits
 6183              		.align	1
 6184              		.weak	R3_2_SwitchOffPWM
 6185              		.syntax unified
 6186              		.thumb
 6187              		.thumb_func
 6188              		.fpu fpv4-sp-d16
 6190              	R3_2_SwitchOffPWM:
 6191              	.LFB1454:
1496:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1497:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1498:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1499:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Disables PWM generation on the proper Timer peripheral acting on MOE bit.
1500:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1501:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1502:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1503:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void R3_2_SwitchOffPWM(PWMC_Handle_t *pHdl)
1504:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 6192              		.loc 8 1504 1
 6193              		.cfi_startproc
 6194              		@ args = 0, pretend = 0, frame = 16
 6195              		@ frame_needed = 1, uses_anonymous_args = 0
 6196 0000 80B5     		push	{r7, lr}
 6197              	.LCFI404:
 6198              		.cfi_def_cfa_offset 8
 6199              		.cfi_offset 7, -8
 6200              		.cfi_offset 14, -4
 6201 0002 84B0     		sub	sp, sp, #16
 6202              	.LCFI405:
 6203              		.cfi_def_cfa_offset 24
 6204 0004 00AF     		add	r7, sp, #0
 6205              	.LCFI406:
 6206              		.cfi_def_cfa_register 7
 6207 0006 7860     		str	r0, [r7, #4]
1505:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 6208              		.loc 8 1505 23
 6209 0008 7B68     		ldr	r3, [r7, #4]
 6210 000a FB60     		str	r3, [r7, #12]
1506:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 6211              		.loc 8 1506 30
 6212 000c FB68     		ldr	r3, [r7, #12]
 6213 000e D3F89C30 		ldr	r3, [r3, #156]
 6214              		.loc 8 1506 16
 6215 0012 1B68     		ldr	r3, [r3]
 6216 0014 BB60     		str	r3, [r7, #8]
1507:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1508:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Disable UPDATE ISR */
1509:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_DisableIT_UPDATE(TIMx);
 6217              		.loc 8 1509 3
 6218 0016 B868     		ldr	r0, [r7, #8]
 6219 0018 FFF7FEFF 		bl	LL_TIM_DisableIT_UPDATE
ARM GAS  /tmp/ccA1EUYa.s 			page 513


1510:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1511:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.TurnOnLowSidesAction = false;
 6220              		.loc 8 1511 40
 6221 001c FB68     		ldr	r3, [r7, #12]
 6222 001e 0022     		movs	r2, #0
 6223 0020 83F87C20 		strb	r2, [r3, #124]
1512:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1513:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Main PWM Output Disable */
1514:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_DisableAllOutputs(TIMx);
 6224              		.loc 8 1514 3
 6225 0024 B868     		ldr	r0, [r7, #8]
 6226 0026 FFF7FEFF 		bl	LL_TIM_DisableAllOutputs
1515:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (true == pHandle->_Super.BrakeActionLock)
 6227              		.loc 8 1515 30
 6228 002a FB68     		ldr	r3, [r7, #12]
 6229 002c 93F88330 		ldrb	r3, [r3, #131]	@ zero_extendqisi2
 6230              		.loc 8 1515 6
 6231 0030 002B     		cmp	r3, #0
 6232 0032 1FD1     		bne	.L277
1516:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1517:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1518:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1519:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1520:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1521:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (ES_GPIO == pHandle->_Super.LowSideOutputs)
 6233              		.loc 8 1521 35
 6234 0034 FB68     		ldr	r3, [r7, #12]
 6235 0036 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6236              		.loc 8 1521 8
 6237 003a 022B     		cmp	r3, #2
 6238 003c 1AD1     		bne	.L277
1522:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1523:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 6239              		.loc 8 1523 7
 6240 003e FB68     		ldr	r3, [r7, #12]
 6241 0040 DA6B     		ldr	r2, [r3, #60]
 6242              		.loc 8 1523 76
 6243 0042 FB68     		ldr	r3, [r7, #12]
 6244 0044 B3F84830 		ldrh	r3, [r3, #72]
 6245              		.loc 8 1523 7
 6246 0048 1946     		mov	r1, r3
 6247 004a 1046     		mov	r0, r2
 6248 004c FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
1524:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 6249              		.loc 8 1524 7
 6250 0050 FB68     		ldr	r3, [r7, #12]
 6251 0052 1A6C     		ldr	r2, [r3, #64]
 6252              		.loc 8 1524 76
 6253 0054 FB68     		ldr	r3, [r7, #12]
 6254 0056 B3F84A30 		ldrh	r3, [r3, #74]
 6255              		.loc 8 1524 7
 6256 005a 1946     		mov	r1, r3
 6257 005c 1046     		mov	r0, r2
 6258 005e FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
1525:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 6259              		.loc 8 1525 7
 6260 0062 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccA1EUYa.s 			page 514


 6261 0064 5A6C     		ldr	r2, [r3, #68]
 6262              		.loc 8 1525 76
 6263 0066 FB68     		ldr	r3, [r7, #12]
 6264 0068 B3F84C30 		ldrh	r3, [r3, #76]
 6265              		.loc 8 1525 7
 6266 006c 1946     		mov	r1, r3
 6267 006e 1046     		mov	r0, r2
 6268 0070 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 6269              	.L277:
1526:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1527:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1528:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1529:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1530:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1531:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1532:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1533:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Wait for a new PWM period to flush last HF task */
1534:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(TIMx);
 6270              		.loc 8 1534 3
 6271 0074 B868     		ldr	r0, [r7, #8]
 6272 0076 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
1535:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 6273              		.loc 8 1535 9
 6274 007a 00BF     		nop
 6275              	.L278:
 6276              		.loc 8 1535 16 discriminator 1
 6277 007c B868     		ldr	r0, [r7, #8]
 6278 007e FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 6279 0082 0346     		mov	r3, r0
 6280              		.loc 8 1535 9 discriminator 1
 6281 0084 002B     		cmp	r3, #0
 6282 0086 F9D0     		beq	.L278
1536:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1537:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1538:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1539:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(TIMx);
 6283              		.loc 8 1539 3
 6284 0088 B868     		ldr	r0, [r7, #8]
 6285 008a FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
1540:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1541:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* We allow ADC usage for regular conversion on Systick */
1542:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->ADCRegularLocked = false;
 6286              		.loc 8 1542 29
 6287 008e FB68     		ldr	r3, [r7, #12]
 6288 0090 0022     		movs	r2, #0
 6289 0092 83F8A020 		strb	r2, [r3, #160]
1543:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 6290              		.loc 8 1543 1
 6291 0096 00BF     		nop
 6292 0098 1037     		adds	r7, r7, #16
 6293              	.LCFI407:
 6294              		.cfi_def_cfa_offset 8
 6295 009a BD46     		mov	sp, r7
 6296              	.LCFI408:
 6297              		.cfi_def_cfa_register 13
 6298              		@ sp needed
 6299 009c 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccA1EUYa.s 			page 515


 6300              		.cfi_endproc
 6301              	.LFE1454:
 6303              		.section	.text.fun1,"ax",%progbits
 6304              		.align	1
 6305              		.global	fun1
 6306              		.syntax unified
 6307              		.thumb
 6308              		.thumb_func
 6309              		.fpu fpv4-sp-d16
 6311              	fun1:
 6312              	.LFB1455:
1544:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1545:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
1546:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
1547:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
1548:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1549:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
1550:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1551:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1552:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1553:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1554:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** void fun1(PWMC_R3_2_Handle_t *pHandle)
1555:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 6313              		.loc 8 1555 1
 6314              		.cfi_startproc
 6315              		@ args = 0, pretend = 0, frame = 24
 6316              		@ frame_needed = 1, uses_anonymous_args = 0
 6317              		@ link register save eliminated.
 6318 0000 80B4     		push	{r7}
 6319              	.LCFI409:
 6320              		.cfi_def_cfa_offset 4
 6321              		.cfi_offset 7, -4
 6322 0002 87B0     		sub	sp, sp, #28
 6323              	.LCFI410:
 6324              		.cfi_def_cfa_offset 32
 6325 0004 00AF     		add	r7, sp, #0
 6326              	.LCFI411:
 6327              		.cfi_def_cfa_register 7
 6328 0006 7860     		str	r0, [r7, #4]
1556:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
1557:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1558:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1559:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1560:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
1561:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1562:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1563:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1564:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1565:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1566:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1567:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1568:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_3_OPAMPParams_t *OPAMPParams = pHandle->pParams_str->OPAMPParams;
 6329              		.loc 8 1568 46
 6330 0008 7B68     		ldr	r3, [r7, #4]
 6331 000a D3F89C30 		ldr	r3, [r3, #156]
 6332              		.loc 8 1568 25
 6333 000e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 516


 6334 0010 7B61     		str	r3, [r7, #20]
1569:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     OPAMP_TypeDef *operationAmp;
1570:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t OpampConfig;
1571:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1572:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Clear the update interrupt flag */
1573:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (OPAMPParams != NULL)
 6335              		.loc 8 1573 8
 6336 0012 7B69     		ldr	r3, [r7, #20]
 6337 0014 002B     		cmp	r3, #0
 6338 0016 4BD0     		beq	.L280
1574:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1575:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle->_Super.Sector = 2;
 6339              		.loc 8 1575 30
 6340 0018 7B68     		ldr	r3, [r7, #4]
 6341 001a 0222     		movs	r2, #2
 6342 001c 83F87A20 		strb	r2, [r3, #122]
1576:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       // /* We can not change OPAMP source if ADC acquisition is ongoing (Dual motor with internal 
1577:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       while (0x0u != pHandle->pParams_str->ADCDataReg1[pHandle->_Super.Sector]->JSQR)
 6343              		.loc 8 1577 13
 6344 0020 00BF     		nop
 6345              	.L281:
 6346              		.loc 8 1577 29 discriminator 1
 6347 0022 7B68     		ldr	r3, [r7, #4]
 6348 0024 D3F89C30 		ldr	r3, [r3, #156]
 6349              		.loc 8 1577 71 discriminator 1
 6350 0028 7A68     		ldr	r2, [r7, #4]
 6351 002a 92F87A20 		ldrb	r2, [r2, #122]	@ zero_extendqisi2
 6352              		.loc 8 1577 55 discriminator 1
 6353 002e 0E32     		adds	r2, r2, #14
 6354 0030 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6355              		.loc 8 1577 79 discriminator 1
 6356 0034 DB6C     		ldr	r3, [r3, #76]
 6357              		.loc 8 1577 13 discriminator 1
 6358 0036 002B     		cmp	r3, #0
 6359 0038 F3D1     		bne	.L281
1578:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1579:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1580:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1581:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****    //   return ;
1582:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* We need to manage the Operational amplifier internal output enable - Dedicated to G4 and t
1583:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       OpampConfig = OPAMPParams->OPAMPConfig1[pHandle->_Super.Sector];
 6360              		.loc 8 1583 62
 6361 003a 7B68     		ldr	r3, [r7, #4]
 6362 003c 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6363 0040 1A46     		mov	r2, r3
 6364              		.loc 8 1583 19
 6365 0042 7B69     		ldr	r3, [r7, #20]
 6366 0044 0C32     		adds	r2, r2, #12
 6367 0046 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6368 004a 3B61     		str	r3, [r7, #16]
1584:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (OpampConfig != OPAMP_UNCHANGED)
 6369              		.loc 8 1584 10
 6370 004c 3B69     		ldr	r3, [r7, #16]
 6371 004e B3F1FF3F 		cmp	r3, #-1
 6372 0052 0FD0     		beq	.L282
1585:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1586:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         operationAmp = OPAMPParams->OPAMPSelect_1[pHandle->_Super.Sector];
ARM GAS  /tmp/ccA1EUYa.s 			page 517


 6373              		.loc 8 1586 66
 6374 0054 7B68     		ldr	r3, [r7, #4]
 6375 0056 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6376 005a 1A46     		mov	r2, r3
 6377              		.loc 8 1586 22
 6378 005c 7B69     		ldr	r3, [r7, #20]
 6379 005e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6380 0062 FB60     		str	r3, [r7, #12]
1587:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         MODIFY_REG(operationAmp->CSR, (OPAMP_CSR_OPAMPINTEN | OPAMP_CSR_VPSEL), OpampConfig);
 6381              		.loc 8 1587 9
 6382 0064 FB68     		ldr	r3, [r7, #12]
 6383 0066 1B68     		ldr	r3, [r3]
 6384 0068 23F48672 		bic	r2, r3, #268
 6385 006c 3B69     		ldr	r3, [r7, #16]
 6386 006e 1A43     		orrs	r2, r2, r3
 6387 0070 FB68     		ldr	r3, [r7, #12]
 6388 0072 1A60     		str	r2, [r3]
 6389              	.L282:
1588:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1589:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1590:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1591:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1592:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1593:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       OpampConfig = OPAMPParams->OPAMPConfig2[pHandle->_Super.Sector];
 6390              		.loc 8 1593 62
 6391 0074 7B68     		ldr	r3, [r7, #4]
 6392 0076 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6393 007a 1A46     		mov	r2, r3
 6394              		.loc 8 1593 19
 6395 007c 7B69     		ldr	r3, [r7, #20]
 6396 007e 1232     		adds	r2, r2, #18
 6397 0080 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6398 0084 3B61     		str	r3, [r7, #16]
1594:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (OpampConfig != OPAMP_UNCHANGED)
 6399              		.loc 8 1594 10
 6400 0086 3B69     		ldr	r3, [r7, #16]
 6401 0088 B3F1FF3F 		cmp	r3, #-1
 6402 008c 10D0     		beq	.L280
1595:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1596:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         operationAmp = OPAMPParams->OPAMPSelect_2[pHandle->_Super.Sector];
 6403              		.loc 8 1596 66
 6404 008e 7B68     		ldr	r3, [r7, #4]
 6405 0090 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6406 0094 1A46     		mov	r2, r3
 6407              		.loc 8 1596 22
 6408 0096 7B69     		ldr	r3, [r7, #20]
 6409 0098 0632     		adds	r2, r2, #6
 6410 009a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6411 009e FB60     		str	r3, [r7, #12]
1597:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         MODIFY_REG(operationAmp->CSR, (OPAMP_CSR_OPAMPINTEN | OPAMP_CSR_VPSEL), OpampConfig);
 6412              		.loc 8 1597 9
 6413 00a0 FB68     		ldr	r3, [r7, #12]
 6414 00a2 1B68     		ldr	r3, [r3]
 6415 00a4 23F48672 		bic	r2, r3, #268
 6416 00a8 3B69     		ldr	r3, [r7, #16]
 6417 00aa 1A43     		orrs	r2, r2, r3
 6418 00ac FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccA1EUYa.s 			page 518


 6419 00ae 1A60     		str	r2, [r3]
 6420              	.L280:
1598:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1599:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1600:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1601:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1602:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1603:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1604:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1605:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1606:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1607:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1608:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1609:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     
1610:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->pParams_str->ADCDataReg1[pHandle->_Super.Sector]->JSQR = pHandle->pParams_str->ADCConf
 6421              		.loc 8 1610 78
 6422 00b0 7B68     		ldr	r3, [r7, #4]
 6423 00b2 D3F89C30 		ldr	r3, [r3, #156]
 6424              		.loc 8 1610 119
 6425 00b6 7A68     		ldr	r2, [r7, #4]
 6426 00b8 92F87A20 		ldrb	r2, [r2, #122]	@ zero_extendqisi2
 6427              		.loc 8 1610 103
 6428 00bc 1A32     		adds	r2, r2, #26
 6429 00be 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6430              		.loc 8 1610 148
 6431 00c2 7B68     		ldr	r3, [r7, #4]
 6432 00c4 B3F89630 		ldrh	r3, [r3, #150]
 6433              		.loc 8 1610 130
 6434 00c8 1846     		mov	r0, r3
 6435              		.loc 8 1610 12
 6436 00ca 7B68     		ldr	r3, [r7, #4]
 6437 00cc D3F89C30 		ldr	r3, [r3, #156]
 6438              		.loc 8 1610 54
 6439 00d0 7968     		ldr	r1, [r7, #4]
 6440 00d2 91F87A10 		ldrb	r1, [r1, #122]	@ zero_extendqisi2
 6441              		.loc 8 1610 38
 6442 00d6 0E31     		adds	r1, r1, #14
 6443 00d8 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6444              		.loc 8 1610 128
 6445 00dc 0243     		orrs	r2, r2, r0
 6446              		.loc 8 1610 69
 6447 00de DA64     		str	r2, [r3, #76]
1611:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->pParams_str->ADCDataReg2[pHandle->_Super.Sector]->JSQR = pHandle->pParams_str->ADCConf
 6448              		.loc 8 1611 78
 6449 00e0 7B68     		ldr	r3, [r7, #4]
 6450 00e2 D3F89C30 		ldr	r3, [r3, #156]
 6451              		.loc 8 1611 119
 6452 00e6 7A68     		ldr	r2, [r7, #4]
 6453 00e8 92F87A20 		ldrb	r2, [r2, #122]	@ zero_extendqisi2
 6454              		.loc 8 1611 103
 6455 00ec 2032     		adds	r2, r2, #32
 6456 00ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6457              		.loc 8 1611 148
 6458 00f2 7B68     		ldr	r3, [r7, #4]
 6459 00f4 B3F89630 		ldrh	r3, [r3, #150]
 6460              		.loc 8 1611 130
 6461 00f8 1846     		mov	r0, r3
ARM GAS  /tmp/ccA1EUYa.s 			page 519


 6462              		.loc 8 1611 12
 6463 00fa 7B68     		ldr	r3, [r7, #4]
 6464 00fc D3F89C30 		ldr	r3, [r3, #156]
 6465              		.loc 8 1611 54
 6466 0100 7968     		ldr	r1, [r7, #4]
 6467 0102 91F87A10 		ldrb	r1, [r1, #122]	@ zero_extendqisi2
 6468              		.loc 8 1611 38
 6469 0106 1431     		adds	r1, r1, #20
 6470 0108 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6471              		.loc 8 1611 128
 6472 010c 0243     		orrs	r2, r2, r0
 6473              		.loc 8 1611 69
 6474 010e DA64     		str	r2, [r3, #76]
1612:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1613:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Enable ADC trigger source */
1614:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1615:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADC_ExternalPolarityInjected = (uint16_t)LL_ADC_INJ_TRIG_EXT_RISING;
 6475              		.loc 8 1615 43
 6476 0110 7B68     		ldr	r3, [r7, #4]
 6477 0112 8022     		movs	r2, #128
 6478 0114 A3F89620 		strh	r2, [r3, #150]	@ movhi
1616:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     tempPointer = &(pHandle->_Super.Motor);
 6479              		.loc 8 1616 17
 6480 0118 7B68     		ldr	r3, [r7, #4]
 6481 011a 7833     		adds	r3, r3, #120
 6482 011c BB60     		str	r3, [r7, #8]
1617:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1618:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1619:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1620:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return (tempPointer);
 6483              		.loc 8 1620 10
 6484 011e 00BF     		nop
1621:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 6485              		.loc 8 1621 1
 6486 0120 1C37     		adds	r7, r7, #28
 6487              	.LCFI412:
 6488              		.cfi_def_cfa_offset 4
 6489 0122 BD46     		mov	sp, r7
 6490              	.LCFI413:
 6491              		.cfi_def_cfa_register 13
 6492              		@ sp needed
 6493 0124 5DF8047B 		ldr	r7, [sp], #4
 6494              	.LCFI414:
 6495              		.cfi_restore 7
 6496              		.cfi_def_cfa_offset 0
 6497 0128 7047     		bx	lr
 6498              		.cfi_endproc
 6499              	.LFE1455:
 6501              		.section	.text.R3_2_TIMx_UP_IRQHandler,"ax",%progbits
 6502              		.align	1
 6503              		.weak	R3_2_TIMx_UP_IRQHandler
 6504              		.syntax unified
 6505              		.thumb
 6506              		.thumb_func
 6507              		.fpu fpv4-sp-d16
 6509              	R3_2_TIMx_UP_IRQHandler:
 6510              	.LFB1456:
ARM GAS  /tmp/ccA1EUYa.s 			page 520


1622:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1623:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1624:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Contains the TIMx Update event interrupt.
1625:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1626:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
1627:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1628:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __weak void *R3_2_TIMx_UP_IRQHandler(PWMC_R3_2_Handle_t *pHandle)
1629:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 6511              		.loc 8 1629 1
 6512              		.cfi_startproc
 6513              		@ args = 0, pretend = 0, frame = 32
 6514              		@ frame_needed = 1, uses_anonymous_args = 0
 6515 0000 80B5     		push	{r7, lr}
 6516              	.LCFI415:
 6517              		.cfi_def_cfa_offset 8
 6518              		.cfi_offset 7, -8
 6519              		.cfi_offset 14, -4
 6520 0002 88B0     		sub	sp, sp, #32
 6521              	.LCFI416:
 6522              		.cfi_def_cfa_offset 40
 6523 0004 00AF     		add	r7, sp, #0
 6524              	.LCFI417:
 6525              		.cfi_def_cfa_register 7
 6526 0006 7860     		str	r0, [r7, #4]
1630:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
1631:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1632:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1633:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1634:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
1635:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1636:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1637:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1638:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1639:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 6527              		.loc 8 1639 32
 6528 0008 7B68     		ldr	r3, [r7, #4]
 6529 000a D3F89C30 		ldr	r3, [r3, #156]
 6530              		.loc 8 1639 18
 6531 000e 1B68     		ldr	r3, [r3]
 6532 0010 FB61     		str	r3, [r7, #28]
1640:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     R3_3_OPAMPParams_t *OPAMPParams = pHandle->pParams_str->OPAMPParams;
 6533              		.loc 8 1640 46
 6534 0012 7B68     		ldr	r3, [r7, #4]
 6535 0014 D3F89C30 		ldr	r3, [r3, #156]
 6536              		.loc 8 1640 25
 6537 0018 5B68     		ldr	r3, [r3, #4]
 6538 001a BB61     		str	r3, [r7, #24]
1641:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     OPAMP_TypeDef *operationAmp;
1642:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t OpampConfig;
1643:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1644:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Clear the update interrupt flag */
1645:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (OPAMPParams != NULL)
 6539              		.loc 8 1645 8
 6540 001c BB69     		ldr	r3, [r7, #24]
 6541 001e 002B     		cmp	r3, #0
 6542 0020 47D0     		beq	.L285
1646:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
ARM GAS  /tmp/ccA1EUYa.s 			page 521


1647:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* We can not change OPAMP source if ADC acquisition is ongoing (Dual motor with internal opa
1648:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       while (0x0u != pHandle->pParams_str->ADCDataReg1[pHandle->_Super.Sector]->JSQR)
 6543              		.loc 8 1648 13
 6544 0022 00BF     		nop
 6545              	.L286:
 6546              		.loc 8 1648 29 discriminator 1
 6547 0024 7B68     		ldr	r3, [r7, #4]
 6548 0026 D3F89C30 		ldr	r3, [r3, #156]
 6549              		.loc 8 1648 71 discriminator 1
 6550 002a 7A68     		ldr	r2, [r7, #4]
 6551 002c 92F87A20 		ldrb	r2, [r2, #122]	@ zero_extendqisi2
 6552              		.loc 8 1648 55 discriminator 1
 6553 0030 0E32     		adds	r2, r2, #14
 6554 0032 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6555              		.loc 8 1648 79 discriminator 1
 6556 0036 DB6C     		ldr	r3, [r3, #76]
 6557              		.loc 8 1648 13 discriminator 1
 6558 0038 002B     		cmp	r3, #0
 6559 003a F3D1     		bne	.L286
1649:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1650:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1651:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1652:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* We need to manage the Operational amplifier internal output enable - Dedicated to G4 and t
1653:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       OpampConfig = OPAMPParams->OPAMPConfig1[pHandle->_Super.Sector];
 6560              		.loc 8 1653 62
 6561 003c 7B68     		ldr	r3, [r7, #4]
 6562 003e 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6563 0042 1A46     		mov	r2, r3
 6564              		.loc 8 1653 19
 6565 0044 BB69     		ldr	r3, [r7, #24]
 6566 0046 0C32     		adds	r2, r2, #12
 6567 0048 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6568 004c 7B61     		str	r3, [r7, #20]
1654:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (OpampConfig != OPAMP_UNCHANGED)
 6569              		.loc 8 1654 10
 6570 004e 7B69     		ldr	r3, [r7, #20]
 6571 0050 B3F1FF3F 		cmp	r3, #-1
 6572 0054 0FD0     		beq	.L287
1655:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1656:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         operationAmp = OPAMPParams->OPAMPSelect_1[pHandle->_Super.Sector];
 6573              		.loc 8 1656 66
 6574 0056 7B68     		ldr	r3, [r7, #4]
 6575 0058 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6576 005c 1A46     		mov	r2, r3
 6577              		.loc 8 1656 22
 6578 005e BB69     		ldr	r3, [r7, #24]
 6579 0060 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6580 0064 3B61     		str	r3, [r7, #16]
1657:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         MODIFY_REG(operationAmp->CSR, (OPAMP_CSR_OPAMPINTEN | OPAMP_CSR_VPSEL), OpampConfig);
 6581              		.loc 8 1657 9
 6582 0066 3B69     		ldr	r3, [r7, #16]
 6583 0068 1B68     		ldr	r3, [r3]
 6584 006a 23F48672 		bic	r2, r3, #268
 6585 006e 7B69     		ldr	r3, [r7, #20]
 6586 0070 1A43     		orrs	r2, r2, r3
 6587 0072 3B69     		ldr	r3, [r7, #16]
 6588 0074 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccA1EUYa.s 			page 522


 6589              	.L287:
1658:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1659:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1660:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1661:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1662:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1663:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       OpampConfig = OPAMPParams->OPAMPConfig2[pHandle->_Super.Sector];
 6590              		.loc 8 1663 62
 6591 0076 7B68     		ldr	r3, [r7, #4]
 6592 0078 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6593 007c 1A46     		mov	r2, r3
 6594              		.loc 8 1663 19
 6595 007e BB69     		ldr	r3, [r7, #24]
 6596 0080 1232     		adds	r2, r2, #18
 6597 0082 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6598 0086 7B61     		str	r3, [r7, #20]
1664:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (OpampConfig != OPAMP_UNCHANGED)
 6599              		.loc 8 1664 10
 6600 0088 7B69     		ldr	r3, [r7, #20]
 6601 008a B3F1FF3F 		cmp	r3, #-1
 6602 008e 10D0     		beq	.L285
1665:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1666:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         operationAmp = OPAMPParams->OPAMPSelect_2[pHandle->_Super.Sector];
 6603              		.loc 8 1666 66
 6604 0090 7B68     		ldr	r3, [r7, #4]
 6605 0092 93F87A30 		ldrb	r3, [r3, #122]	@ zero_extendqisi2
 6606 0096 1A46     		mov	r2, r3
 6607              		.loc 8 1666 22
 6608 0098 BB69     		ldr	r3, [r7, #24]
 6609 009a 0632     		adds	r2, r2, #6
 6610 009c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6611 00a0 3B61     		str	r3, [r7, #16]
1667:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         MODIFY_REG(operationAmp->CSR, (OPAMP_CSR_OPAMPINTEN | OPAMP_CSR_VPSEL), OpampConfig);
 6612              		.loc 8 1667 9
 6613 00a2 3B69     		ldr	r3, [r7, #16]
 6614 00a4 1B68     		ldr	r3, [r3]
 6615 00a6 23F48672 		bic	r2, r3, #268
 6616 00aa 7B69     		ldr	r3, [r7, #20]
 6617 00ac 1A43     		orrs	r2, r2, r3
 6618 00ae 3B69     		ldr	r3, [r7, #16]
 6619 00b0 1A60     		str	r2, [r3]
 6620              	.L285:
1668:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1669:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1670:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1671:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1672:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1673:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1674:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1675:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1676:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1677:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1678:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1679:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   //  pHandle->pParams_str->ADCDataReg1[pHandle->_Super.Sector]->JSQR = pHandle->pParams_str->ADCCo
1680:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   //  pHandle->pParams_str->ADCDataReg2[pHandle->_Super.Sector]->JSQR = pHandle->pParams_str->ADCCo
1681:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1682:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Enable ADC trigger source */
ARM GAS  /tmp/ccA1EUYa.s 			page 523


1683:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1684:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH4) */
1685:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****      LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_OC4REF);
 6621              		.loc 8 1685 6
 6622 00b2 7021     		movs	r1, #112
 6623 00b4 F869     		ldr	r0, [r7, #28]
 6624 00b6 FFF7FEFF 		bl	LL_TIM_SetTriggerOutput
1686:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1687:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADC_ExternalPolarityInjected = (uint16_t)LL_ADC_INJ_TRIG_EXT_RISING;
 6625              		.loc 8 1687 43
 6626 00ba 7B68     		ldr	r3, [r7, #4]
 6627 00bc 8022     		movs	r2, #128
 6628 00be A3F89620 		strh	r2, [r3, #150]	@ movhi
1688:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     tempPointer = &(pHandle->_Super.Motor);
 6629              		.loc 8 1688 17
 6630 00c2 7B68     		ldr	r3, [r7, #4]
 6631 00c4 7833     		adds	r3, r3, #120
 6632 00c6 FB60     		str	r3, [r7, #12]
1689:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1690:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1691:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1692:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return (tempPointer);
 6633              		.loc 8 1692 10
 6634 00c8 FB68     		ldr	r3, [r7, #12]
1693:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 6635              		.loc 8 1693 1
 6636 00ca 1846     		mov	r0, r3
 6637 00cc 2037     		adds	r7, r7, #32
 6638              	.LCFI418:
 6639              		.cfi_def_cfa_offset 8
 6640 00ce BD46     		mov	sp, r7
 6641              	.LCFI419:
 6642              		.cfi_def_cfa_register 13
 6643              		@ sp needed
 6644 00d0 80BD     		pop	{r7, pc}
 6645              		.cfi_endproc
 6646              	.LFE1456:
 6648              		.section	.text.R3_2_SetAOReferenceVoltage,"ax",%progbits
 6649              		.align	1
 6650              		.syntax unified
 6651              		.thumb
 6652              		.thumb_func
 6653              		.fpu fpv4-sp-d16
 6655              	R3_2_SetAOReferenceVoltage:
 6656              	.LFB1457:
1694:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1695:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1696:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Configures the analog output used for protection thresholds.
1697:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1698:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  DAC_Channel: the selected DAC channel.
1699:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *          This parameter can be:
1700:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected.
1701:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected.
1702:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  DACx: DAC to be configured.
1703:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  hDACVref: Value of DAC reference expressed as 16bit unsigned integer.
1704:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         Ex. 0 = 0V 65536 = VDD_DAC.
1705:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
ARM GAS  /tmp/ccA1EUYa.s 			page 524


1706:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_SetAOReferenceVoltage(uint32_t DAC_Channel, DAC_TypeDef *DACx, uint16_t hDACVref)
1707:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 6657              		.loc 8 1707 1
 6658              		.cfi_startproc
 6659              		@ args = 0, pretend = 0, frame = 24
 6660              		@ frame_needed = 1, uses_anonymous_args = 0
 6661 0000 80B5     		push	{r7, lr}
 6662              	.LCFI420:
 6663              		.cfi_def_cfa_offset 8
 6664              		.cfi_offset 7, -8
 6665              		.cfi_offset 14, -4
 6666 0002 86B0     		sub	sp, sp, #24
 6667              	.LCFI421:
 6668              		.cfi_def_cfa_offset 32
 6669 0004 00AF     		add	r7, sp, #0
 6670              	.LCFI422:
 6671              		.cfi_def_cfa_register 7
 6672 0006 F860     		str	r0, [r7, #12]
 6673 0008 B960     		str	r1, [r7, #8]
 6674 000a 1346     		mov	r3, r2
 6675 000c FB80     		strh	r3, [r7, #6]	@ movhi
1708:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_DAC_ConvertData12LeftAligned(DACx, DAC_Channel, hDACVref);
 6676              		.loc 8 1708 3
 6677 000e FB88     		ldrh	r3, [r7, #6]
 6678 0010 1A46     		mov	r2, r3
 6679 0012 F968     		ldr	r1, [r7, #12]
 6680 0014 B868     		ldr	r0, [r7, #8]
 6681 0016 FFF7FEFF 		bl	LL_DAC_ConvertData12LeftAligned
1709:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1710:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Enable DAC Channel */
1711:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_DAC_TrigSWConversion(DACx, DAC_Channel);
 6682              		.loc 8 1711 3
 6683 001a F968     		ldr	r1, [r7, #12]
 6684 001c B868     		ldr	r0, [r7, #8]
 6685 001e FFF7FEFF 		bl	LL_DAC_TrigSWConversion
1712:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1713:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (1U == LL_DAC_IsEnabled(DACx, DAC_Channel))
 6686              		.loc 8 1713 13
 6687 0022 F968     		ldr	r1, [r7, #12]
 6688 0024 B868     		ldr	r0, [r7, #8]
 6689 0026 FFF7FEFF 		bl	LL_DAC_IsEnabled
 6690 002a 0346     		mov	r3, r0
 6691              		.loc 8 1713 6
 6692 002c 012B     		cmp	r3, #1
 6693 002e 11D1     		bne	.L290
 6694              	.LBB3:
1714:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1715:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* If DAC is already enable, we wait LL_DAC_DELAY_VOLTAGE_SETTLING_US */
1716:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     volatile uint32_t wait_loop_index = ((LL_DAC_DELAY_VOLTAGE_SETTLING_US) * (SystemCoreClock / (1
 6695              		.loc 8 1716 96
 6696 0030 144B     		ldr	r3, .L297
 6697 0032 1B68     		ldr	r3, [r3]
 6698 0034 144A     		ldr	r2, .L297+4
 6699 0036 A2FB0323 		umull	r2, r3, r2, r3
 6700 003a DA0C     		lsrs	r2, r3, #19
 6701              		.loc 8 1716 77
 6702 003c 1346     		mov	r3, r2
ARM GAS  /tmp/ccA1EUYa.s 			page 525


 6703 003e 5B00     		lsls	r3, r3, #1
 6704 0040 1344     		add	r3, r3, r2
 6705              		.loc 8 1716 23
 6706 0042 7B61     		str	r3, [r7, #20]
1717:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 6707              		.loc 8 1717 11
 6708 0044 02E0     		b	.L291
 6709              	.L292:
1718:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1719:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       wait_loop_index--;
 6710              		.loc 8 1719 22
 6711 0046 7B69     		ldr	r3, [r7, #20]
 6712 0048 013B     		subs	r3, r3, #1
 6713 004a 7B61     		str	r3, [r7, #20]
 6714              	.L291:
1717:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 6715              		.loc 8 1717 28
 6716 004c 7B69     		ldr	r3, [r7, #20]
1717:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 6717              		.loc 8 1717 11
 6718 004e 002B     		cmp	r3, #0
 6719 0050 F9D1     		bne	.L292
 6720              	.LBE3:
1720:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1721:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1722:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1723:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1724:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* If DAC is not enabled, we must wait LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US */
1725:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_DAC_Enable(DACx, DAC_Channel);
1726:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     volatile uint32_t wait_loop_index = ((LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US)
1727:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                          * (SystemCoreClock / (1000000UL * 2UL)));
1728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
1729:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1730:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       wait_loop_index--;
1731:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1732:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1733:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 6721              		.loc 8 1733 1
 6722 0052 12E0     		b	.L296
 6723              	.L290:
 6724              	.LBB4:
1725:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     volatile uint32_t wait_loop_index = ((LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US)
 6725              		.loc 8 1725 5
 6726 0054 F968     		ldr	r1, [r7, #12]
 6727 0056 B868     		ldr	r0, [r7, #8]
 6728 0058 FFF7FEFF 		bl	LL_DAC_Enable
1727:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 6729              		.loc 8 1727 61
 6730 005c 094B     		ldr	r3, .L297
 6731 005e 1B68     		ldr	r3, [r3]
 6732 0060 094A     		ldr	r2, .L297+4
 6733 0062 A2FB0323 		umull	r2, r3, r2, r3
 6734 0066 DB0C     		lsrs	r3, r3, #19
1727:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (wait_loop_index != 0UL)
 6735              		.loc 8 1727 42
 6736 0068 DB00     		lsls	r3, r3, #3
1726:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****                                          * (SystemCoreClock / (1000000UL * 2UL)));
ARM GAS  /tmp/ccA1EUYa.s 			page 526


 6737              		.loc 8 1726 23
 6738 006a 3B61     		str	r3, [r7, #16]
1728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 6739              		.loc 8 1728 11
 6740 006c 02E0     		b	.L294
 6741              	.L295:
1730:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
 6742              		.loc 8 1730 22
 6743 006e 3B69     		ldr	r3, [r7, #16]
 6744 0070 013B     		subs	r3, r3, #1
 6745 0072 3B61     		str	r3, [r7, #16]
 6746              	.L294:
1728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 6747              		.loc 8 1728 28
 6748 0074 3B69     		ldr	r3, [r7, #16]
1728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
 6749              		.loc 8 1728 11
 6750 0076 002B     		cmp	r3, #0
 6751 0078 F9D1     		bne	.L295
 6752              	.L296:
 6753              	.LBE4:
 6754              		.loc 8 1733 1
 6755 007a 00BF     		nop
 6756 007c 1837     		adds	r7, r7, #24
 6757              	.LCFI423:
 6758              		.cfi_def_cfa_offset 8
 6759 007e BD46     		mov	sp, r7
 6760              	.LCFI424:
 6761              		.cfi_def_cfa_register 13
 6762              		@ sp needed
 6763 0080 80BD     		pop	{r7, pc}
 6764              	.L298:
 6765 0082 00BF     		.align	2
 6766              	.L297:
 6767 0084 00000000 		.word	SystemCoreClock
 6768 0088 83DE1B43 		.word	1125899907
 6769              		.cfi_endproc
 6770              	.LFE1457:
 6772              		.section	.text.R3_2_RLDetectionModeEnable,"ax",%progbits
 6773              		.align	1
 6774              		.global	R3_2_RLDetectionModeEnable
 6775              		.syntax unified
 6776              		.thumb
 6777              		.thumb_func
 6778              		.fpu fpv4-sp-d16
 6780              	R3_2_RLDetectionModeEnable:
 6781              	.LFB1458:
1734:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1735:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1736:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Sets the PWM mode for R/L detection.
1737:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1738:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1739:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1740:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** void R3_2_RLDetectionModeEnable(PWMC_Handle_t *pHdl)
1741:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 6782              		.loc 8 1741 1
 6783              		.cfi_startproc
ARM GAS  /tmp/ccA1EUYa.s 			page 527


 6784              		@ args = 0, pretend = 0, frame = 16
 6785              		@ frame_needed = 1, uses_anonymous_args = 0
 6786 0000 80B5     		push	{r7, lr}
 6787              	.LCFI425:
 6788              		.cfi_def_cfa_offset 8
 6789              		.cfi_offset 7, -8
 6790              		.cfi_offset 14, -4
 6791 0002 84B0     		sub	sp, sp, #16
 6792              	.LCFI426:
 6793              		.cfi_def_cfa_offset 24
 6794 0004 00AF     		add	r7, sp, #0
 6795              	.LCFI427:
 6796              		.cfi_def_cfa_register 7
 6797 0006 7860     		str	r0, [r7, #4]
1742:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 6798              		.loc 8 1742 23
 6799 0008 7B68     		ldr	r3, [r7, #4]
 6800 000a FB60     		str	r3, [r7, #12]
1743:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 6801              		.loc 8 1743 30
 6802 000c FB68     		ldr	r3, [r7, #12]
 6803 000e D3F89C30 		ldr	r3, [r3, #156]
 6804              		.loc 8 1743 16
 6805 0012 1B68     		ldr	r3, [r3]
 6806 0014 BB60     		str	r3, [r7, #8]
1744:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1745:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (false == pHandle->_Super.RLDetectionMode)
 6807              		.loc 8 1745 31
 6808 0016 FB68     		ldr	r3, [r7, #12]
 6809 0018 93F87E30 		ldrb	r3, [r3, #126]	@ zero_extendqisi2
 6810              		.loc 8 1745 13
 6811 001c 83F00103 		eor	r3, r3, #1
 6812 0020 DBB2     		uxtb	r3, r3
 6813              		.loc 8 1745 6
 6814 0022 002B     		cmp	r3, #0
 6815 0024 4BD0     		beq	.L300
1746:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1747:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Channel1 configuration */
1748:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH1, LL_TIM_OCMODE_PWM1);
 6816              		.loc 8 1748 5
 6817 0026 6022     		movs	r2, #96
 6818 0028 0121     		movs	r1, #1
 6819 002a B868     		ldr	r0, [r7, #8]
 6820 002c FFF7FEFF 		bl	LL_TIM_OC_SetMode
1749:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH1);
 6821              		.loc 8 1749 5
 6822 0030 0121     		movs	r1, #1
 6823 0032 B868     		ldr	r0, [r7, #8]
 6824 0034 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
1750:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH1N);
 6825              		.loc 8 1750 5
 6826 0038 0421     		movs	r1, #4
 6827 003a B868     		ldr	r0, [r7, #8]
 6828 003c FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
1751:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH1(TIMx, 0U);
 6829              		.loc 8 1751 5
 6830 0040 0021     		movs	r1, #0
ARM GAS  /tmp/ccA1EUYa.s 			page 528


 6831 0042 B868     		ldr	r0, [r7, #8]
 6832 0044 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
1752:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1753:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Channel2 configuration */
1754:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (LS_PWM_TIMER == pHandle->_Super.LowSideOutputs)
 6833              		.loc 8 1754 40
 6834 0048 FB68     		ldr	r3, [r7, #12]
 6835 004a 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6836              		.loc 8 1754 8
 6837 004e 012B     		cmp	r3, #1
 6838 0050 0DD1     		bne	.L301
1755:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1756:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH2, LL_TIM_OCMODE_ACTIVE);
 6839              		.loc 8 1756 7
 6840 0052 1022     		movs	r2, #16
 6841 0054 1021     		movs	r1, #16
 6842 0056 B868     		ldr	r0, [r7, #8]
 6843 0058 FFF7FEFF 		bl	LL_TIM_OC_SetMode
1757:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH2);
 6844              		.loc 8 1757 7
 6845 005c 1021     		movs	r1, #16
 6846 005e B868     		ldr	r0, [r7, #8]
 6847 0060 FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
1758:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH2N);
 6848              		.loc 8 1758 7
 6849 0064 4021     		movs	r1, #64
 6850 0066 B868     		ldr	r0, [r7, #8]
 6851 0068 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
 6852 006c 11E0     		b	.L302
 6853              	.L301:
1759:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1760:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else if (ES_GPIO ==  pHandle->_Super.LowSideOutputs)
 6854              		.loc 8 1760 41
 6855 006e FB68     		ldr	r3, [r7, #12]
 6856 0070 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6857              		.loc 8 1760 13
 6858 0074 022B     		cmp	r3, #2
 6859 0076 0CD1     		bne	.L302
1761:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1762:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH2, LL_TIM_OCMODE_INACTIVE);
 6860              		.loc 8 1762 7
 6861 0078 2022     		movs	r2, #32
 6862 007a 1021     		movs	r1, #16
 6863 007c B868     		ldr	r0, [r7, #8]
 6864 007e FFF7FEFF 		bl	LL_TIM_OC_SetMode
1763:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH2);
 6865              		.loc 8 1763 7
 6866 0082 1021     		movs	r1, #16
 6867 0084 B868     		ldr	r0, [r7, #8]
 6868 0086 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
1764:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH2N);
 6869              		.loc 8 1764 7
 6870 008a 4021     		movs	r1, #64
 6871 008c B868     		ldr	r0, [r7, #8]
 6872 008e FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
 6873              	.L302:
1765:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
ARM GAS  /tmp/ccA1EUYa.s 			page 529


1766:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1767:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1768:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1769:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1770:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1771:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Channel3 configuration */
1772:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH3, LL_TIM_OCMODE_PWM2);
 6874              		.loc 8 1772 5
 6875 0092 7022     		movs	r2, #112
 6876 0094 4FF48071 		mov	r1, #256
 6877 0098 B868     		ldr	r0, [r7, #8]
 6878 009a FFF7FEFF 		bl	LL_TIM_OC_SetMode
1773:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH3);
 6879              		.loc 8 1773 5
 6880 009e 4FF48071 		mov	r1, #256
 6881 00a2 B868     		ldr	r0, [r7, #8]
 6882 00a4 FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
1774:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH3N);
 6883              		.loc 8 1774 5
 6884 00a8 4FF48061 		mov	r1, #1024
 6885 00ac B868     		ldr	r0, [r7, #8]
 6886 00ae FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
1775:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1776:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->PhaseAOffset = pHandle->PhaseBOffset; /* Use only the offset of phB */
 6887              		.loc 8 1776 36
 6888 00b2 FB68     		ldr	r3, [r7, #12]
 6889 00b4 D3F88C20 		ldr	r2, [r3, #140]
 6890              		.loc 8 1776 27
 6891 00b8 FB68     		ldr	r3, [r7, #12]
 6892 00ba C3F88820 		str	r2, [r3, #136]
 6893              	.L300:
1777:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1778:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1779:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1780:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1781:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1782:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1783:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.pFctGetPhaseCurrents = &R3_2_RLGetPhaseCurrents;
 6894              		.loc 8 1783 40
 6895 00be FB68     		ldr	r3, [r7, #12]
 6896 00c0 094A     		ldr	r2, .L303
 6897 00c2 1A60     		str	r2, [r3]
1784:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.pFctTurnOnLowSides = &R3_2_RLTurnOnLowSides;
 6898              		.loc 8 1784 38
 6899 00c4 FB68     		ldr	r3, [r7, #12]
 6900 00c6 094A     		ldr	r2, .L303+4
 6901 00c8 1A61     		str	r2, [r3, #16]
1785:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.pFctSwitchOnPwm = &R3_2_RLSwitchOnPWM;
 6902              		.loc 8 1785 35
 6903 00ca FB68     		ldr	r3, [r7, #12]
 6904 00cc 084A     		ldr	r2, .L303+8
 6905 00ce 9A60     		str	r2, [r3, #8]
1786:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.pFctSwitchOffPwm = &R3_2_SwitchOffPWM;
 6906              		.loc 8 1786 36
 6907 00d0 FB68     		ldr	r3, [r7, #12]
 6908 00d2 084A     		ldr	r2, .L303+12
 6909 00d4 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccA1EUYa.s 			page 530


1787:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1788:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->_Super.RLDetectionMode = true;
 6910              		.loc 8 1788 35
 6911 00d6 FB68     		ldr	r3, [r7, #12]
 6912 00d8 0122     		movs	r2, #1
 6913 00da 83F87E20 		strb	r2, [r3, #126]
1789:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 6914              		.loc 8 1789 1
 6915 00de 00BF     		nop
 6916 00e0 1037     		adds	r7, r7, #16
 6917              	.LCFI428:
 6918              		.cfi_def_cfa_offset 8
 6919 00e2 BD46     		mov	sp, r7
 6920              	.LCFI429:
 6921              		.cfi_def_cfa_register 13
 6922              		@ sp needed
 6923 00e4 80BD     		pop	{r7, pc}
 6924              	.L304:
 6925 00e6 00BF     		.align	2
 6926              	.L303:
 6927 00e8 00000000 		.word	R3_2_RLGetPhaseCurrents
 6928 00ec 00000000 		.word	R3_2_RLTurnOnLowSides
 6929 00f0 00000000 		.word	R3_2_RLSwitchOnPWM
 6930 00f4 00000000 		.word	R3_2_SwitchOffPWM
 6931              		.cfi_endproc
 6932              	.LFE1458:
 6934              		.section	.text.R3_2_RLDetectionModeDisable,"ax",%progbits
 6935              		.align	1
 6936              		.global	R3_2_RLDetectionModeDisable
 6937              		.syntax unified
 6938              		.thumb
 6939              		.thumb_func
 6940              		.fpu fpv4-sp-d16
 6942              	R3_2_RLDetectionModeDisable:
 6943              	.LFB1459:
1790:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1791:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1792:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Disables the PWM mode for R/L detection.
1793:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1794:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1795:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1796:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** void R3_2_RLDetectionModeDisable(PWMC_Handle_t *pHdl)
1797:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 6944              		.loc 8 1797 1
 6945              		.cfi_startproc
 6946              		@ args = 0, pretend = 0, frame = 16
 6947              		@ frame_needed = 1, uses_anonymous_args = 0
 6948 0000 80B5     		push	{r7, lr}
 6949              	.LCFI430:
 6950              		.cfi_def_cfa_offset 8
 6951              		.cfi_offset 7, -8
 6952              		.cfi_offset 14, -4
 6953 0002 84B0     		sub	sp, sp, #16
 6954              	.LCFI431:
 6955              		.cfi_def_cfa_offset 24
 6956 0004 00AF     		add	r7, sp, #0
 6957              	.LCFI432:
ARM GAS  /tmp/ccA1EUYa.s 			page 531


 6958              		.cfi_def_cfa_register 7
 6959 0006 7860     		str	r0, [r7, #4]
1798:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 6960              		.loc 8 1798 23
 6961 0008 7B68     		ldr	r3, [r7, #4]
 6962 000a FB60     		str	r3, [r7, #12]
1799:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 6963              		.loc 8 1799 30
 6964 000c FB68     		ldr	r3, [r7, #12]
 6965 000e D3F89C30 		ldr	r3, [r3, #156]
 6966              		.loc 8 1799 16
 6967 0012 1B68     		ldr	r3, [r3]
 6968 0014 BB60     		str	r3, [r7, #8]
1800:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1801:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (true ==  pHandle->_Super.RLDetectionMode)
 6969              		.loc 8 1801 31
 6970 0016 FB68     		ldr	r3, [r7, #12]
 6971 0018 93F87E30 		ldrb	r3, [r3, #126]	@ zero_extendqisi2
 6972              		.loc 8 1801 6
 6973 001c 002B     		cmp	r3, #0
 6974 001e 00F08380 		beq	.L313
1802:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1803:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Channel1 configuration */
1804:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH1, LL_TIM_OCMODE_PWM1);
 6975              		.loc 8 1804 5
 6976 0022 6022     		movs	r2, #96
 6977 0024 0121     		movs	r1, #1
 6978 0026 B868     		ldr	r0, [r7, #8]
 6979 0028 FFF7FEFF 		bl	LL_TIM_OC_SetMode
1805:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH1);
 6980              		.loc 8 1805 5
 6981 002c 0121     		movs	r1, #1
 6982 002e B868     		ldr	r0, [r7, #8]
 6983 0030 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
1806:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1807:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (LS_PWM_TIMER == pHandle->_Super.LowSideOutputs)
 6984              		.loc 8 1807 40
 6985 0034 FB68     		ldr	r3, [r7, #12]
 6986 0036 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6987              		.loc 8 1807 8
 6988 003a 012B     		cmp	r3, #1
 6989 003c 04D1     		bne	.L307
1808:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1809:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH1N);
 6990              		.loc 8 1809 7
 6991 003e 0421     		movs	r1, #4
 6992 0040 B868     		ldr	r0, [r7, #8]
 6993 0042 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
 6994 0046 08E0     		b	.L308
 6995              	.L307:
1810:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1811:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else if (ES_GPIO == pHandle->_Super.LowSideOutputs)
 6996              		.loc 8 1811 40
 6997 0048 FB68     		ldr	r3, [r7, #12]
 6998 004a 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 6999              		.loc 8 1811 13
 7000 004e 022B     		cmp	r3, #2
ARM GAS  /tmp/ccA1EUYa.s 			page 532


 7001 0050 03D1     		bne	.L308
1812:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1813:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH1N);
 7002              		.loc 8 1813 7
 7003 0052 0421     		movs	r1, #4
 7004 0054 B868     		ldr	r0, [r7, #8]
 7005 0056 FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
 7006              	.L308:
1814:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1815:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1816:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1817:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1818:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1819:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1820:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH1(TIMx, ((uint32_t)pHandle->Half_PWMPeriod) >> 1);
 7007              		.loc 8 1820 53
 7008 005a FB68     		ldr	r3, [r7, #12]
 7009 005c B3F89430 		ldrh	r3, [r3, #148]
 7010              		.loc 8 1820 5
 7011 0060 5B08     		lsrs	r3, r3, #1
 7012 0062 9BB2     		uxth	r3, r3
 7013 0064 1946     		mov	r1, r3
 7014 0066 B868     		ldr	r0, [r7, #8]
 7015 0068 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
1821:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1822:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Channel2 configuration */
1823:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH2, LL_TIM_OCMODE_PWM1);
 7016              		.loc 8 1823 5
 7017 006c 6022     		movs	r2, #96
 7018 006e 1021     		movs	r1, #16
 7019 0070 B868     		ldr	r0, [r7, #8]
 7020 0072 FFF7FEFF 		bl	LL_TIM_OC_SetMode
1824:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH2);
 7021              		.loc 8 1824 5
 7022 0076 1021     		movs	r1, #16
 7023 0078 B868     		ldr	r0, [r7, #8]
 7024 007a FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
1825:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1826:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (LS_PWM_TIMER == pHandle->_Super.LowSideOutputs)
 7025              		.loc 8 1826 40
 7026 007e FB68     		ldr	r3, [r7, #12]
 7027 0080 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7028              		.loc 8 1826 8
 7029 0084 012B     		cmp	r3, #1
 7030 0086 04D1     		bne	.L309
1827:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1828:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH2N);
 7031              		.loc 8 1828 7
 7032 0088 4021     		movs	r1, #64
 7033 008a B868     		ldr	r0, [r7, #8]
 7034 008c FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
 7035 0090 08E0     		b	.L310
 7036              	.L309:
1829:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1830:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else if (ES_GPIO == pHandle->_Super.LowSideOutputs)
 7037              		.loc 8 1830 40
 7038 0092 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccA1EUYa.s 			page 533


 7039 0094 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7040              		.loc 8 1830 13
 7041 0098 022B     		cmp	r3, #2
 7042 009a 03D1     		bne	.L310
1831:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1832:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH2N);
 7043              		.loc 8 1832 7
 7044 009c 4021     		movs	r1, #64
 7045 009e B868     		ldr	r0, [r7, #8]
 7046 00a0 FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
 7047              	.L310:
1833:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1834:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1835:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1836:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1837:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1838:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1839:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH2(TIMx, ((uint32_t)pHandle->Half_PWMPeriod) >> 1);
 7048              		.loc 8 1839 53
 7049 00a4 FB68     		ldr	r3, [r7, #12]
 7050 00a6 B3F89430 		ldrh	r3, [r3, #148]
 7051              		.loc 8 1839 5
 7052 00aa 5B08     		lsrs	r3, r3, #1
 7053 00ac 9BB2     		uxth	r3, r3
 7054 00ae 1946     		mov	r1, r3
 7055 00b0 B868     		ldr	r0, [r7, #8]
 7056 00b2 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH2
1840:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1841:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Channel3 configuration */
1842:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH3, LL_TIM_OCMODE_PWM1);
 7057              		.loc 8 1842 5
 7058 00b6 6022     		movs	r2, #96
 7059 00b8 4FF48071 		mov	r1, #256
 7060 00bc B868     		ldr	r0, [r7, #8]
 7061 00be FFF7FEFF 		bl	LL_TIM_OC_SetMode
1843:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH3);
 7062              		.loc 8 1843 5
 7063 00c2 4FF48071 		mov	r1, #256
 7064 00c6 B868     		ldr	r0, [r7, #8]
 7065 00c8 FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
1844:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1845:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (LS_PWM_TIMER == pHandle->_Super.LowSideOutputs)
 7066              		.loc 8 1845 40
 7067 00cc FB68     		ldr	r3, [r7, #12]
 7068 00ce 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7069              		.loc 8 1845 8
 7070 00d2 012B     		cmp	r3, #1
 7071 00d4 05D1     		bne	.L311
1846:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1847:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH3N);
 7072              		.loc 8 1847 7
 7073 00d6 4FF48061 		mov	r1, #1024
 7074 00da B868     		ldr	r0, [r7, #8]
 7075 00dc FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
 7076 00e0 09E0     		b	.L312
 7077              	.L311:
1848:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
ARM GAS  /tmp/ccA1EUYa.s 			page 534


1849:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else if (ES_GPIO == pHandle->_Super.LowSideOutputs)
 7078              		.loc 8 1849 40
 7079 00e2 FB68     		ldr	r3, [r7, #12]
 7080 00e4 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7081              		.loc 8 1849 13
 7082 00e8 022B     		cmp	r3, #2
 7083 00ea 04D1     		bne	.L312
1850:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1851:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_TIM_CC_DisableChannel(TIMx, LL_TIM_CHANNEL_CH3N);
 7084              		.loc 8 1851 7
 7085 00ec 4FF48061 		mov	r1, #1024
 7086 00f0 B868     		ldr	r0, [r7, #8]
 7087 00f2 FFF7FEFF 		bl	LL_TIM_CC_DisableChannel
 7088              	.L312:
1852:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1853:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1854:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1855:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1856:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1857:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1858:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH3(TIMx, ((uint32_t)pHandle->Half_PWMPeriod) >> 1);
 7089              		.loc 8 1858 53
 7090 00f6 FB68     		ldr	r3, [r7, #12]
 7091 00f8 B3F89430 		ldrh	r3, [r3, #148]
 7092              		.loc 8 1858 5
 7093 00fc 5B08     		lsrs	r3, r3, #1
 7094 00fe 9BB2     		uxth	r3, r3
 7095 0100 1946     		mov	r1, r3
 7096 0102 B868     		ldr	r0, [r7, #8]
 7097 0104 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
1859:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1860:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctGetPhaseCurrents = &R3_2_GetPhaseCurrents;
 7098              		.loc 8 1860 42
 7099 0108 FB68     		ldr	r3, [r7, #12]
 7100 010a 094A     		ldr	r2, .L314
 7101 010c 1A60     		str	r2, [r3]
1861:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctTurnOnLowSides = &R3_2_TurnOnLowSides;
 7102              		.loc 8 1861 40
 7103 010e FB68     		ldr	r3, [r7, #12]
 7104 0110 084A     		ldr	r2, .L314+4
 7105 0112 1A61     		str	r2, [r3, #16]
1862:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctSwitchOnPwm = &R3_2_SwitchOnPWM;
 7106              		.loc 8 1862 37
 7107 0114 FB68     		ldr	r3, [r7, #12]
 7108 0116 084A     		ldr	r2, .L314+8
 7109 0118 9A60     		str	r2, [r3, #8]
1863:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.pFctSwitchOffPwm = &R3_2_SwitchOffPWM;
 7110              		.loc 8 1863 38
 7111 011a FB68     		ldr	r3, [r7, #12]
 7112 011c 074A     		ldr	r2, .L314+12
 7113 011e 5A60     		str	r2, [r3, #4]
1864:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1865:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.RLDetectionMode = false;
 7114              		.loc 8 1865 37
 7115 0120 FB68     		ldr	r3, [r7, #12]
 7116 0122 0022     		movs	r2, #0
 7117 0124 83F87E20 		strb	r2, [r3, #126]
ARM GAS  /tmp/ccA1EUYa.s 			page 535


 7118              	.L313:
1866:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1867:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1868:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1869:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1870:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1871:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 7119              		.loc 8 1871 1
 7120 0128 00BF     		nop
 7121 012a 1037     		adds	r7, r7, #16
 7122              	.LCFI433:
 7123              		.cfi_def_cfa_offset 8
 7124 012c BD46     		mov	sp, r7
 7125              	.LCFI434:
 7126              		.cfi_def_cfa_register 13
 7127              		@ sp needed
 7128 012e 80BD     		pop	{r7, pc}
 7129              	.L315:
 7130              		.align	2
 7131              	.L314:
 7132 0130 00000000 		.word	R3_2_GetPhaseCurrents
 7133 0134 00000000 		.word	R3_2_TurnOnLowSides
 7134 0138 00000000 		.word	R3_2_SwitchOnPWM
 7135 013c 00000000 		.word	R3_2_SwitchOffPWM
 7136              		.cfi_endproc
 7137              	.LFE1459:
 7139              		.section	.text.R3_2_RLDetectionModeSetDuty,"ax",%progbits
 7140              		.align	1
 7141              		.global	R3_2_RLDetectionModeSetDuty
 7142              		.syntax unified
 7143              		.thumb
 7144              		.thumb_func
 7145              		.fpu fpv4-sp-d16
 7147              	R3_2_RLDetectionModeSetDuty:
 7148              	.LFB1460:
1872:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1873:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1874:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Sets the PWM dutycycle for R/L detection.
1875:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1876:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1877:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  hDuty: Duty cycle to apply, written in uint16_t.
1878:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @retval Returns #MC_NO_ERROR if no error occurred or #MC_DURATION if the duty cycles were
1879:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         set too late for being taken into account in the next PWM cycle.
1880:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1881:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** uint16_t R3_2_RLDetectionModeSetDuty(PWMC_Handle_t *pHdl, uint16_t hDuty)
1882:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 7149              		.loc 8 1882 1
 7150              		.cfi_startproc
 7151              		@ args = 0, pretend = 0, frame = 32
 7152              		@ frame_needed = 1, uses_anonymous_args = 0
 7153 0000 80B5     		push	{r7, lr}
 7154              	.LCFI435:
 7155              		.cfi_def_cfa_offset 8
 7156              		.cfi_offset 7, -8
 7157              		.cfi_offset 14, -4
 7158 0002 88B0     		sub	sp, sp, #32
 7159              	.LCFI436:
ARM GAS  /tmp/ccA1EUYa.s 			page 536


 7160              		.cfi_def_cfa_offset 40
 7161 0004 00AF     		add	r7, sp, #0
 7162              	.LCFI437:
 7163              		.cfi_def_cfa_register 7
 7164 0006 7860     		str	r0, [r7, #4]
 7165 0008 0B46     		mov	r3, r1
 7166 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1883:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   uint16_t tempValue;
1884:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1885:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHdl)
1886:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1887:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     tempValue = 0U;
1888:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1889:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1890:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1891:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1892:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 7167              		.loc 8 1892 25
 7168 000c 7B68     		ldr	r3, [r7, #4]
 7169 000e BB61     		str	r3, [r7, #24]
1893:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 7170              		.loc 8 1893 32
 7171 0010 BB69     		ldr	r3, [r7, #24]
 7172 0012 D3F89C30 		ldr	r3, [r3, #156]
 7173              		.loc 8 1893 18
 7174 0016 1B68     		ldr	r3, [r3]
 7175 0018 7B61     		str	r3, [r7, #20]
1894:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint32_t val;
1895:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     uint16_t hAux;
1896:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1897:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADCRegularLocked = true;
 7176              		.loc 8 1897 31
 7177 001a BB69     		ldr	r3, [r7, #24]
 7178 001c 0122     		movs	r2, #1
 7179 001e 83F8A020 		strb	r2, [r3, #160]
1898:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1899:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     val = (((uint32_t)pHandle->Half_PWMPeriod) * ((uint32_t)hDuty)) >> 16;
 7180              		.loc 8 1899 30
 7181 0022 BB69     		ldr	r3, [r7, #24]
 7182 0024 B3F89430 		ldrh	r3, [r3, #148]
 7183              		.loc 8 1899 13
 7184 0028 1A46     		mov	r2, r3
 7185              		.loc 8 1899 51
 7186 002a 7B88     		ldrh	r3, [r7, #2]
 7187              		.loc 8 1899 48
 7188 002c 02FB03F3 		mul	r3, r2, r3
 7189              		.loc 8 1899 9
 7190 0030 1B0C     		lsrs	r3, r3, #16
 7191 0032 3B61     		str	r3, [r7, #16]
1900:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->_Super.CntPhA = (uint16_t)val;
 7192              		.loc 8 1900 30
 7193 0034 3B69     		ldr	r3, [r7, #16]
 7194 0036 9AB2     		uxth	r2, r3
 7195              		.loc 8 1900 28
 7196 0038 BB69     		ldr	r3, [r7, #24]
 7197 003a A3F85020 		strh	r2, [r3, #80]	@ movhi
1901:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
ARM GAS  /tmp/ccA1EUYa.s 			page 537


1902:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Set CC4 as PWM mode 2 (default) */
1903:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetMode(TIMx, LL_TIM_CHANNEL_CH4, LL_TIM_OCMODE_PWM2);
 7198              		.loc 8 1903 5
 7199 003e 7022     		movs	r2, #112
 7200 0040 4FF48051 		mov	r1, #4096
 7201 0044 7869     		ldr	r0, [r7, #20]
 7202 0046 FFF7FEFF 		bl	LL_TIM_OC_SetMode
1904:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1905:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH4(TIMx, (((uint32_t)pHandle->Half_PWMPeriod) - ((uint32_t)pHandle->_Super
 7203              		.loc 8 1905 54
 7204 004a BB69     		ldr	r3, [r7, #24]
 7205 004c B3F89430 		ldrh	r3, [r3, #148]
 7206              		.loc 8 1905 37
 7207 0050 1A46     		mov	r2, r3
 7208              		.loc 8 1905 100
 7209 0052 BB69     		ldr	r3, [r7, #24]
 7210 0054 B3F87430 		ldrh	r3, [r3, #116]
 7211              		.loc 8 1905 5
 7212 0058 D31A     		subs	r3, r2, r3
 7213 005a 1946     		mov	r1, r3
 7214 005c 7869     		ldr	r0, [r7, #20]
 7215 005e FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH4
1906:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH3(TIMx, (uint32_t)pHandle->_Super.Toff);
 7216              		.loc 8 1906 60
 7217 0062 BB69     		ldr	r3, [r7, #24]
 7218 0064 B3F87630 		ldrh	r3, [r3, #118]
 7219              		.loc 8 1906 5
 7220 0068 1946     		mov	r1, r3
 7221 006a 7869     		ldr	r0, [r7, #20]
 7222 006c FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
1907:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH1(TIMx, (uint32_t)pHandle->_Super.CntPhA);
 7223              		.loc 8 1907 60
 7224 0070 BB69     		ldr	r3, [r7, #24]
 7225 0072 B3F85030 		ldrh	r3, [r3, #80]
 7226              		.loc 8 1907 5
 7227 0076 1946     		mov	r1, r3
 7228 0078 7869     		ldr	r0, [r7, #20]
 7229 007a FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
1908:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1909:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Enabling next Trigger */
1910:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH4) */
1911:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_OC4REF);
 7230              		.loc 8 1911 5
 7231 007e 7021     		movs	r1, #112
 7232 0080 7869     		ldr	r0, [r7, #20]
 7233 0082 FFF7FEFF 		bl	LL_TIM_SetTriggerOutput
1912:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Set the sector that correspond to Phase A and B sampling */
1913:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHdl->Sector = SECTOR_4;
 7234              		.loc 8 1913 18
 7235 0086 7B68     		ldr	r3, [r7, #4]
 7236 0088 0322     		movs	r2, #3
 7237 008a 83F87A20 		strb	r2, [r3, #122]
1914:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1915:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Limit for update event */
1916:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Check the status flag. If an update event has occurred before to set new
1917:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     values of regs the FOC rate is too high */
1918:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (((TIMx->CR2) & TIM_CR2_MMS_Msk) != LL_TIM_TRGO_RESET)
ARM GAS  /tmp/ccA1EUYa.s 			page 538


 7238              		.loc 8 1918 15
 7239 008e 7B69     		ldr	r3, [r7, #20]
 7240 0090 5A68     		ldr	r2, [r3, #4]
 7241              		.loc 8 1918 22
 7242 0092 0D4B     		ldr	r3, .L321
 7243 0094 1340     		ands	r3, r3, r2
 7244              		.loc 8 1918 8
 7245 0096 002B     		cmp	r3, #0
 7246 0098 02D0     		beq	.L317
1919:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1920:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       hAux = MC_DURATION;
 7247              		.loc 8 1920 12
 7248 009a 0123     		movs	r3, #1
 7249 009c FB83     		strh	r3, [r7, #30]	@ movhi
 7250 009e 01E0     		b	.L318
 7251              	.L317:
1921:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1922:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1923:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1924:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       hAux = MC_NO_ERROR;
 7252              		.loc 8 1924 12
 7253 00a0 0023     		movs	r3, #0
 7254 00a2 FB83     		strh	r3, [r7, #30]	@ movhi
 7255              	.L318:
1925:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1926:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (1U ==  pHandle->_Super.SWerror)
 7256              		.loc 8 1926 31
 7257 00a4 BB69     		ldr	r3, [r7, #24]
 7258 00a6 B3F85630 		ldrh	r3, [r3, #86]
 7259              		.loc 8 1926 8
 7260 00aa 012B     		cmp	r3, #1
 7261 00ac 05D1     		bne	.L319
1927:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1928:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       hAux = MC_DURATION;
 7262              		.loc 8 1928 12
 7263 00ae 0123     		movs	r3, #1
 7264 00b0 FB83     		strh	r3, [r7, #30]	@ movhi
1929:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       pHandle->_Super.SWerror = 0U;
 7265              		.loc 8 1929 31
 7266 00b2 BB69     		ldr	r3, [r7, #24]
 7267 00b4 0022     		movs	r2, #0
 7268 00b6 A3F85620 		strh	r2, [r3, #86]	@ movhi
 7269              	.L319:
1930:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1931:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1932:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1933:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
1934:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1935:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     tempValue = hAux;
 7270              		.loc 8 1935 15
 7271 00ba FB8B     		ldrh	r3, [r7, #30]	@ movhi
 7272 00bc FB81     		strh	r3, [r7, #14]	@ movhi
1936:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1937:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1938:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1939:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   return (tempValue);
 7273              		.loc 8 1939 10
ARM GAS  /tmp/ccA1EUYa.s 			page 539


 7274 00be FB89     		ldrh	r3, [r7, #14]
1940:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 7275              		.loc 8 1940 1
 7276 00c0 1846     		mov	r0, r3
 7277 00c2 2037     		adds	r7, r7, #32
 7278              	.LCFI438:
 7279              		.cfi_def_cfa_offset 8
 7280 00c4 BD46     		mov	sp, r7
 7281              	.LCFI439:
 7282              		.cfi_def_cfa_register 13
 7283              		@ sp needed
 7284 00c6 80BD     		pop	{r7, pc}
 7285              	.L322:
 7286              		.align	2
 7287              	.L321:
 7288 00c8 70000002 		.word	33554544
 7289              		.cfi_endproc
 7290              	.LFE1460:
 7292              		.section	.text.R3_2_RLGetPhaseCurrents,"ax",%progbits
 7293              		.align	1
 7294              		.syntax unified
 7295              		.thumb
 7296              		.thumb_func
 7297              		.fpu fpv4-sp-d16
 7299              	R3_2_RLGetPhaseCurrents:
 7300              	.LFB1461:
1941:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1942:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (CCMRAM)
1943:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #if defined (__ICCARM__)
1944:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #pragma location = ".ccmram"
1945:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1946:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
1947:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1948:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1949:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
1950:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Computes and stores into @p pHandle latest converted motor phase currents
1951:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         during RL detection phase.
1952:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
1953:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
1954:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pStator_Currents: Pointer to the structure that will receive motor current
1955:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *         of phase A and B in ab_t format.
1956:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
1957:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_RLGetPhaseCurrents(PWMC_Handle_t *pHdl, ab_t *pStator_Currents)
1958:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 7301              		.loc 8 1958 1
 7302              		.cfi_startproc
 7303              		@ args = 0, pretend = 0, frame = 24
 7304              		@ frame_needed = 1, uses_anonymous_args = 0
 7305              		@ link register save eliminated.
 7306 0000 80B4     		push	{r7}
 7307              	.LCFI440:
 7308              		.cfi_def_cfa_offset 4
 7309              		.cfi_offset 7, -4
 7310 0002 87B0     		sub	sp, sp, #28
 7311              	.LCFI441:
 7312              		.cfi_def_cfa_offset 32
 7313 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccA1EUYa.s 			page 540


 7314              	.LCFI442:
 7315              		.cfi_def_cfa_register 7
 7316 0006 7860     		str	r0, [r7, #4]
 7317 0008 3960     		str	r1, [r7]
1959:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1960:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pStator_Currents)
1961:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1962:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
1963:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1964:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
1965:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
1966:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1967:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 7318              		.loc 8 1967 25
 7319 000a 7B68     		ldr	r3, [r7, #4]
 7320 000c 3B61     		str	r3, [r7, #16]
1968:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 7321              		.loc 8 1968 32
 7322 000e 3B69     		ldr	r3, [r7, #16]
 7323 0010 D3F89C30 		ldr	r3, [r3, #156]
 7324              		.loc 8 1968 18
 7325 0014 1B68     		ldr	r3, [r3]
 7326 0016 FB60     		str	r3, [r7, #12]
1969:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     int32_t wAux;
1970:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1971:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Disable ADC trigger source */
1972:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  //   LL_TIM_SetTriggerOutput(TIMx, LL_TIM_TRGO_RESET);
1973:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1974:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     wAux = ((int32_t)pHandle->PhaseBOffset)
 7327              		.loc 8 1974 29
 7328 0018 3B69     		ldr	r3, [r7, #16]
 7329 001a D3F88C30 		ldr	r3, [r3, #140]
 7330              		.loc 8 1974 13
 7331 001e 1946     		mov	r1, r3
1975:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****          - ((int32_t)(pHandle->pParams_str->ADCDataReg2[pHandle->_Super.Sector]->JDR1));
 7332              		.loc 8 1975 30
 7333 0020 3B69     		ldr	r3, [r7, #16]
 7334 0022 D3F89C30 		ldr	r3, [r3, #156]
 7335              		.loc 8 1975 72
 7336 0026 3A69     		ldr	r2, [r7, #16]
 7337 0028 92F87A20 		ldrb	r2, [r2, #122]	@ zero_extendqisi2
 7338              		.loc 8 1975 56
 7339 002c 1432     		adds	r2, r2, #20
 7340 002e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7341              		.loc 8 1975 80
 7342 0032 D3F88030 		ldr	r3, [r3, #128]
1974:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****          - ((int32_t)(pHandle->pParams_str->ADCDataReg2[pHandle->_Super.Sector]->JDR1));
 7343              		.loc 8 1974 10
 7344 0036 CB1A     		subs	r3, r1, r3
 7345 0038 7B61     		str	r3, [r7, #20]
1976:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1977:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Check saturation */
1978:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (wAux > -INT16_MAX)
 7346              		.loc 8 1978 8
 7347 003a 7B69     		ldr	r3, [r7, #20]
 7348 003c 0D4A     		ldr	r2, .L326
 7349 003e 9342     		cmp	r3, r2
ARM GAS  /tmp/ccA1EUYa.s 			page 541


 7350 0040 08DB     		blt	.L324
1979:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1980:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if (wAux < INT16_MAX)
 7351              		.loc 8 1980 10
 7352 0042 7B69     		ldr	r3, [r7, #20]
 7353 0044 47F6FE72 		movw	r2, #32766
 7354 0048 9342     		cmp	r3, r2
 7355 004a 05DD     		ble	.L325
1981:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1982:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* Nothing to do */
1983:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1984:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
1985:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
1986:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         wAux = INT16_MAX;
 7356              		.loc 8 1986 14
 7357 004c 47F6FF73 		movw	r3, #32767
 7358 0050 7B61     		str	r3, [r7, #20]
 7359 0052 01E0     		b	.L325
 7360              	.L324:
1987:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
1988:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1989:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
1990:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
1991:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       wAux = -INT16_MAX;
 7361              		.loc 8 1991 12
 7362 0054 084B     		ldr	r3, .L326+4
 7363 0056 7B61     		str	r3, [r7, #20]
 7364              	.L325:
1992:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
1993:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
1994:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pStator_Currents->a = (int16_t)wAux;
 7365              		.loc 8 1994 27
 7366 0058 7B69     		ldr	r3, [r7, #20]
 7367 005a 1AB2     		sxth	r2, r3
 7368              		.loc 8 1994 25
 7369 005c 3B68     		ldr	r3, [r7]
 7370 005e 1A80     		strh	r2, [r3]	@ movhi
1995:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pStator_Currents->b = (int16_t)wAux;
 7371              		.loc 8 1995 27
 7372 0060 7B69     		ldr	r3, [r7, #20]
 7373 0062 1AB2     		sxth	r2, r3
 7374              		.loc 8 1995 25
 7375 0064 3B68     		ldr	r3, [r7]
 7376 0066 5A80     		strh	r2, [r3, #2]	@ movhi
1996:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
1997:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
1998:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
1999:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 7377              		.loc 8 1999 1
 7378 0068 00BF     		nop
 7379 006a 1C37     		adds	r7, r7, #28
 7380              	.LCFI443:
 7381              		.cfi_def_cfa_offset 4
 7382 006c BD46     		mov	sp, r7
 7383              	.LCFI444:
 7384              		.cfi_def_cfa_register 13
 7385              		@ sp needed
ARM GAS  /tmp/ccA1EUYa.s 			page 542


 7386 006e 5DF8047B 		ldr	r7, [sp], #4
 7387              	.LCFI445:
 7388              		.cfi_restore 7
 7389              		.cfi_def_cfa_offset 0
 7390 0072 7047     		bx	lr
 7391              	.L327:
 7392              		.align	2
 7393              	.L326:
 7394 0074 0280FFFF 		.word	-32766
 7395 0078 0180FFFF 		.word	-32767
 7396              		.cfi_endproc
 7397              	.LFE1461:
 7399              		.section	.text.R3_2_RLTurnOnLowSides,"ax",%progbits
 7400              		.align	1
 7401              		.syntax unified
 7402              		.thumb
 7403              		.thumb_func
 7404              		.fpu fpv4-sp-d16
 7406              	R3_2_RLTurnOnLowSides:
 7407              	.LFB1462:
2000:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2001:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
2002:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Turns on low sides switches.
2003:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
2004:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * This function is intended to be used for charging boot capacitors
2005:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * of driving section. It has to be called at each motor start-up when
2006:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * using high voltage drivers.
2007:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * This function is specific for RL detection phase.
2008:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
2009:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
2010:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  ticks: Duty cycle of the boot capacitors charge, specific to motor.
2011:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
2012:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_RLTurnOnLowSides(PWMC_Handle_t *pHdl, uint32_t ticks)
2013:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 7408              		.loc 8 2013 1
 7409              		.cfi_startproc
 7410              		@ args = 0, pretend = 0, frame = 16
 7411              		@ frame_needed = 1, uses_anonymous_args = 0
 7412 0000 80B5     		push	{r7, lr}
 7413              	.LCFI446:
 7414              		.cfi_def_cfa_offset 8
 7415              		.cfi_offset 7, -8
 7416              		.cfi_offset 14, -4
 7417 0002 84B0     		sub	sp, sp, #16
 7418              	.LCFI447:
 7419              		.cfi_def_cfa_offset 24
 7420 0004 00AF     		add	r7, sp, #0
 7421              	.LCFI448:
 7422              		.cfi_def_cfa_register 7
 7423 0006 7860     		str	r0, [r7, #4]
 7424 0008 3960     		str	r1, [r7]
2014:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 7425              		.loc 8 2014 23
 7426 000a 7B68     		ldr	r3, [r7, #4]
 7427 000c FB60     		str	r3, [r7, #12]
2015:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 7428              		.loc 8 2015 30
ARM GAS  /tmp/ccA1EUYa.s 			page 543


 7429 000e FB68     		ldr	r3, [r7, #12]
 7430 0010 D3F89C30 		ldr	r3, [r3, #156]
 7431              		.loc 8 2015 16
 7432 0014 1B68     		ldr	r3, [r3]
 7433 0016 BB60     		str	r3, [r7, #8]
2016:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2017:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   pHandle->ADCRegularLocked = true;
 7434              		.loc 8 2017 29
 7435 0018 FB68     		ldr	r3, [r7, #12]
 7436 001a 0122     		movs	r2, #1
 7437 001c 83F8A020 		strb	r2, [r3, #160]
2018:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Turn on the phase A low side switch */
2019:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_OC_SetCompareCH1(TIMx, 0u);
 7438              		.loc 8 2019 3
 7439 0020 0021     		movs	r1, #0
 7440 0022 B868     		ldr	r0, [r7, #8]
 7441 0024 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
2020:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2021:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Clear Update Flag */
2022:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_ClearFlag_UPDATE(TIMx);
 7442              		.loc 8 2022 3
 7443 0028 B868     		ldr	r0, [r7, #8]
 7444 002a FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
2023:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2024:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Wait until next update */
2025:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 7445              		.loc 8 2025 9
 7446 002e 00BF     		nop
 7447              	.L329:
 7448              		.loc 8 2025 16 discriminator 1
 7449 0030 B868     		ldr	r0, [r7, #8]
 7450 0032 FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 7451 0036 0346     		mov	r3, r0
 7452              		.loc 8 2025 9 discriminator 1
 7453 0038 002B     		cmp	r3, #0
 7454 003a F9D0     		beq	.L329
2026:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2027:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
2028:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2029:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2030:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   /* Main PWM Output Enable */
2031:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   LL_TIM_EnableAllOutputs(TIMx);
 7455              		.loc 8 2031 3
 7456 003c B868     		ldr	r0, [r7, #8]
 7457 003e FFF7FEFF 		bl	LL_TIM_EnableAllOutputs
2032:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2033:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (ES_GPIO == pHandle->_Super.LowSideOutputs)
 7458              		.loc 8 2033 33
 7459 0042 FB68     		ldr	r3, [r7, #12]
 7460 0044 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7461              		.loc 8 2033 6
 7462 0048 022B     		cmp	r3, #2
 7463 004a 1AD1     		bne	.L331
2034:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2035:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 7464              		.loc 8 2035 5
 7465 004c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccA1EUYa.s 			page 544


 7466 004e DA6B     		ldr	r2, [r3, #60]
 7467              		.loc 8 2035 72
 7468 0050 FB68     		ldr	r3, [r7, #12]
 7469 0052 B3F84830 		ldrh	r3, [r3, #72]
 7470              		.loc 8 2035 5
 7471 0056 1946     		mov	r1, r3
 7472 0058 1046     		mov	r0, r2
 7473 005a FFF7FEFF 		bl	LL_GPIO_SetOutputPin
2036:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 7474              		.loc 8 2036 5
 7475 005e FB68     		ldr	r3, [r7, #12]
 7476 0060 1A6C     		ldr	r2, [r3, #64]
 7477              		.loc 8 2036 74
 7478 0062 FB68     		ldr	r3, [r7, #12]
 7479 0064 B3F84A30 		ldrh	r3, [r3, #74]
 7480              		.loc 8 2036 5
 7481 0068 1946     		mov	r1, r3
 7482 006a 1046     		mov	r0, r2
 7483 006c FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
2037:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 7484              		.loc 8 2037 5
 7485 0070 FB68     		ldr	r3, [r7, #12]
 7486 0072 5A6C     		ldr	r2, [r3, #68]
 7487              		.loc 8 2037 74
 7488 0074 FB68     		ldr	r3, [r7, #12]
 7489 0076 B3F84C30 		ldrh	r3, [r3, #76]
 7490              		.loc 8 2037 5
 7491 007a 1946     		mov	r1, r3
 7492 007c 1046     		mov	r0, r2
 7493 007e FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 7494              	.L331:
2038:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2039:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
2040:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2041:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
2042:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2043:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 7495              		.loc 8 2043 1
 7496 0082 00BF     		nop
 7497 0084 1037     		adds	r7, r7, #16
 7498              	.LCFI449:
 7499              		.cfi_def_cfa_offset 8
 7500 0086 BD46     		mov	sp, r7
 7501              	.LCFI450:
 7502              		.cfi_def_cfa_register 13
 7503              		@ sp needed
 7504 0088 80BD     		pop	{r7, pc}
 7505              		.cfi_endproc
 7506              	.LFE1462:
 7508              		.section	.text.R3_2_RLSwitchOnPWM,"ax",%progbits
 7509              		.align	1
 7510              		.syntax unified
 7511              		.thumb
 7512              		.thumb_func
 7513              		.fpu fpv4-sp-d16
 7515              	R3_2_RLSwitchOnPWM:
 7516              	.LFB1463:
ARM GAS  /tmp/ccA1EUYa.s 			page 545


2044:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2045:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2046:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
2047:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @brief  Enables PWM generation on the proper Timer peripheral.
2048:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * 
2049:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * This function is specific for RL detection phase.
2050:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   *
2051:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
2052:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   */
2053:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** static void R3_2_RLSwitchOnPWM( PWMC_Handle_t *pHdl)
2054:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 7517              		.loc 8 2054 1
 7518              		.cfi_startproc
 7519              		@ args = 0, pretend = 0, frame = 24
 7520              		@ frame_needed = 1, uses_anonymous_args = 0
 7521 0000 80B5     		push	{r7, lr}
 7522              	.LCFI451:
 7523              		.cfi_def_cfa_offset 8
 7524              		.cfi_offset 7, -8
 7525              		.cfi_offset 14, -4
 7526 0002 86B0     		sub	sp, sp, #24
 7527              	.LCFI452:
 7528              		.cfi_def_cfa_offset 32
 7529 0004 00AF     		add	r7, sp, #0
 7530              	.LCFI453:
 7531              		.cfi_def_cfa_register 7
 7532 0006 7860     		str	r0, [r7, #4]
2055:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
2056:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHdl)
2057:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2058:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
2059:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2060:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
2061:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2062:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
2063:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 7533              		.loc 8 2063 25
 7534 0008 7B68     		ldr	r3, [r7, #4]
 7535 000a 7B61     		str	r3, [r7, #20]
2064:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 7536              		.loc 8 2064 32
 7537 000c 7B69     		ldr	r3, [r7, #20]
 7538 000e D3F89C30 		ldr	r3, [r3, #156]
 7539              		.loc 8 2064 18
 7540 0012 1B68     		ldr	r3, [r3]
 7541 0014 3B61     		str	r3, [r7, #16]
2065:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADC_TypeDef *ADCx_1 = pHandle->pParams_str->ADCDataReg1[0];
 7542              		.loc 8 2065 34
 7543 0016 7B69     		ldr	r3, [r7, #20]
 7544 0018 D3F89C30 		ldr	r3, [r3, #156]
 7545              		.loc 8 2065 18
 7546 001c 9B6B     		ldr	r3, [r3, #56]
 7547 001e FB60     		str	r3, [r7, #12]
2066:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     ADC_TypeDef *ADCx_2 = pHandle->pParams_str->ADCDataReg2[0];
 7548              		.loc 8 2066 34
 7549 0020 7B69     		ldr	r3, [r7, #20]
 7550 0022 D3F89C30 		ldr	r3, [r3, #156]
ARM GAS  /tmp/ccA1EUYa.s 			page 546


 7551              		.loc 8 2066 18
 7552 0026 1B6D     		ldr	r3, [r3, #80]
 7553 0028 BB60     		str	r3, [r7, #8]
2067:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2068:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADCRegularLocked=true;
 7554              		.loc 8 2068 30
 7555 002a 7B69     		ldr	r3, [r7, #20]
 7556 002c 0122     		movs	r2, #1
 7557 002e 83F8A020 		strb	r2, [r3, #160]
2069:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Wait for a new PWM period */
2070:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_ClearFlag_UPDATE(TIMx);
 7558              		.loc 8 2070 5
 7559 0032 3869     		ldr	r0, [r7, #16]
 7560 0034 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
2071:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 7561              		.loc 8 2071 11
 7562 0038 00BF     		nop
 7563              	.L333:
 7564              		.loc 8 2071 18 discriminator 1
 7565 003a 3869     		ldr	r0, [r7, #16]
 7566 003c FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 7567 0040 0346     		mov	r3, r0
 7568              		.loc 8 2071 11 discriminator 1
 7569 0042 002B     		cmp	r3, #0
 7570 0044 F9D0     		beq	.L333
2072:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2073:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
2074:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2075:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Clear Update Flag */
2076:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_ClearFlag_UPDATE(TIMx);
 7571              		.loc 8 2076 5
 7572 0046 3869     		ldr	r0, [r7, #16]
 7573 0048 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
2077:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2078:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH1(TIMx, 1U);
 7574              		.loc 8 2078 5
 7575 004c 0121     		movs	r1, #1
 7576 004e 3869     		ldr	r0, [r7, #16]
 7577 0050 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
2079:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH4(TIMx, ((uint32_t )pHandle->Half_PWMPeriod) - 5U);
 7578              		.loc 8 2079 54
 7579 0054 7B69     		ldr	r3, [r7, #20]
 7580 0056 B3F89430 		ldrh	r3, [r3, #148]
 7581              		.loc 8 2079 5
 7582 005a 053B     		subs	r3, r3, #5
 7583 005c 1946     		mov	r1, r3
 7584 005e 3869     		ldr	r0, [r7, #16]
 7585 0060 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH4
2080:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2081:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 7586              		.loc 8 2081 11
 7587 0064 00BF     		nop
 7588              	.L334:
 7589              		.loc 8 2081 18 discriminator 1
 7590 0066 3869     		ldr	r0, [r7, #16]
 7591 0068 FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 7592 006c 0346     		mov	r3, r0
ARM GAS  /tmp/ccA1EUYa.s 			page 547


 7593              		.loc 8 2081 11 discriminator 1
 7594 006e 002B     		cmp	r3, #0
 7595 0070 F9D0     		beq	.L334
2082:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2083:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
2084:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2085:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2086:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Enable TIMx update interrupt */
2087:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_EnableIT_UPDATE(TIMx);
 7596              		.loc 8 2087 5
 7597 0072 3869     		ldr	r0, [r7, #16]
 7598 0074 FFF7FEFF 		bl	LL_TIM_EnableIT_UPDATE
2088:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2089:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Main PWM Output Enable */
2090:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIMx->BDTR |= LL_TIM_OSSI_ENABLE ;
 7599              		.loc 8 2090 16
 7600 0078 3B69     		ldr	r3, [r7, #16]
 7601 007a 5B6C     		ldr	r3, [r3, #68]
 7602 007c 43F48062 		orr	r2, r3, #1024
 7603 0080 3B69     		ldr	r3, [r7, #16]
 7604 0082 5A64     		str	r2, [r3, #68]
2091:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_EnableAllOutputs(TIMx);
 7605              		.loc 8 2091 5
 7606 0084 3869     		ldr	r0, [r7, #16]
 7607 0086 FFF7FEFF 		bl	LL_TIM_EnableAllOutputs
2092:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2093:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (ES_GPIO ==  pHandle->_Super.LowSideOutputs)
 7608              		.loc 8 2093 36
 7609 008a 7B69     		ldr	r3, [r7, #20]
 7610 008c 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7611              		.loc 8 2093 8
 7612 0090 022B     		cmp	r3, #2
 7613 0092 3DD1     		bne	.L335
2094:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2095:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       if ((TIMx->CCER & TIMxCCER_MASK_CH123 ) != 0U)
 7614              		.loc 8 2095 16
 7615 0094 3B69     		ldr	r3, [r7, #16]
 7616 0096 1A6A     		ldr	r2, [r3, #32]
 7617              		.loc 8 2095 23
 7618 0098 40F25553 		movw	r3, #1365
 7619 009c 1340     		ands	r3, r3, r2
 7620              		.loc 8 2095 10
 7621 009e 002B     		cmp	r3, #0
 7622 00a0 1BD0     		beq	.L336
2096:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
2097:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 7623              		.loc 8 2097 9
 7624 00a2 7B69     		ldr	r3, [r7, #20]
 7625 00a4 DA6B     		ldr	r2, [r3, #60]
 7626              		.loc 8 2097 76
 7627 00a6 7B69     		ldr	r3, [r7, #20]
 7628 00a8 B3F84830 		ldrh	r3, [r3, #72]
 7629              		.loc 8 2097 9
 7630 00ac 1946     		mov	r1, r3
 7631 00ae 1046     		mov	r0, r2
 7632 00b0 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
2098:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
ARM GAS  /tmp/ccA1EUYa.s 			page 548


 7633              		.loc 8 2098 9
 7634 00b4 7B69     		ldr	r3, [r7, #20]
 7635 00b6 1A6C     		ldr	r2, [r3, #64]
 7636              		.loc 8 2098 76
 7637 00b8 7B69     		ldr	r3, [r7, #20]
 7638 00ba B3F84A30 		ldrh	r3, [r3, #74]
 7639              		.loc 8 2098 9
 7640 00be 1946     		mov	r1, r3
 7641 00c0 1046     		mov	r0, r2
 7642 00c2 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
2099:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 7643              		.loc 8 2099 9
 7644 00c6 7B69     		ldr	r3, [r7, #20]
 7645 00c8 5A6C     		ldr	r2, [r3, #68]
 7646              		.loc 8 2099 78
 7647 00ca 7B69     		ldr	r3, [r7, #20]
 7648 00cc B3F84C30 		ldrh	r3, [r3, #76]
 7649              		.loc 8 2099 9
 7650 00d0 1946     		mov	r1, r3
 7651 00d2 1046     		mov	r0, r2
 7652 00d4 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 7653 00d8 1AE0     		b	.L335
 7654              	.L336:
2100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
2101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       else
2102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       {
2103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         /* It is executed during calibration phase the EN signal shall stay off */
2104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 7655              		.loc 8 2104 9
 7656 00da 7B69     		ldr	r3, [r7, #20]
 7657 00dc DA6B     		ldr	r2, [r3, #60]
 7658              		.loc 8 2104 78
 7659 00de 7B69     		ldr	r3, [r7, #20]
 7660 00e0 B3F84830 		ldrh	r3, [r3, #72]
 7661              		.loc 8 2104 9
 7662 00e4 1946     		mov	r1, r3
 7663 00e6 1046     		mov	r0, r2
 7664 00e8 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
2105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 7665              		.loc 8 2105 9
 7666 00ec 7B69     		ldr	r3, [r7, #20]
 7667 00ee 1A6C     		ldr	r2, [r3, #64]
 7668              		.loc 8 2105 78
 7669 00f0 7B69     		ldr	r3, [r7, #20]
 7670 00f2 B3F84A30 		ldrh	r3, [r3, #74]
 7671              		.loc 8 2105 9
 7672 00f6 1946     		mov	r1, r3
 7673 00f8 1046     		mov	r0, r2
 7674 00fa FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
2106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 7675              		.loc 8 2106 9
 7676 00fe 7B69     		ldr	r3, [r7, #20]
 7677 0100 5A6C     		ldr	r2, [r3, #68]
 7678              		.loc 8 2106 78
 7679 0102 7B69     		ldr	r3, [r7, #20]
 7680 0104 B3F84C30 		ldrh	r3, [r3, #76]
 7681              		.loc 8 2106 9
ARM GAS  /tmp/ccA1EUYa.s 			page 549


 7682 0108 1946     		mov	r1, r3
 7683 010a 1046     		mov	r0, r2
 7684 010c FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 7685              	.L335:
2107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       }
2108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
2110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
2112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Set the sector that correspond to Phase B and C sampling
2115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****      * B will be sampled by ADCx_1 */
2116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHdl->Sector = SECTOR_4;
 7686              		.loc 8 2116 18
 7687 0110 7B68     		ldr	r3, [r7, #4]
 7688 0112 0322     		movs	r2, #3
 7689 0114 83F87A20 		strb	r2, [r3, #122]
2117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_INJ_StartConversion(ADCx_1);
 7690              		.loc 8 2118 5
 7691 0118 F868     		ldr	r0, [r7, #12]
 7692 011a FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
2119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_ADC_INJ_StartConversion(ADCx_2);
 7693              		.loc 8 2119 5
 7694 011e B868     		ldr	r0, [r7, #8]
 7695 0120 FFF7FEFF 		bl	LL_ADC_INJ_StartConversion
2120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
2121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
2123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 7696              		.loc 8 2123 1
 7697 0124 00BF     		nop
 7698 0126 1837     		adds	r7, r7, #24
 7699              	.LCFI454:
 7700              		.cfi_def_cfa_offset 8
 7701 0128 BD46     		mov	sp, r7
 7702              	.LCFI455:
 7703              		.cfi_def_cfa_register 13
 7704              		@ sp needed
 7705 012a 80BD     		pop	{r7, pc}
 7706              		.cfi_endproc
 7707              	.LFE1463:
 7709              		.section	.text.R3_2_RLTurnOnLowSidesAndStart,"ax",%progbits
 7710              		.align	1
 7711              		.global	R3_2_RLTurnOnLowSidesAndStart
 7712              		.syntax unified
 7713              		.thumb
 7714              		.thumb_func
 7715              		.fpu fpv4-sp-d16
 7717              	R3_2_RLTurnOnLowSidesAndStart:
 7718              	.LFB1464:
2124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** /*
2126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  * @brief  Turns on low sides switches and start ADC triggering.
2127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  * 
2128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  * This function is specific for MP phase.
ARM GAS  /tmp/ccA1EUYa.s 			page 550


2129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  *
2130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  * @param  pHdl: Handler of the current instance of the PWM component.
2131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****  */
2132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** void R3_2_RLTurnOnLowSidesAndStart(PWMC_Handle_t *pHdl)
2133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** {
 7719              		.loc 8 2133 1
 7720              		.cfi_startproc
 7721              		@ args = 0, pretend = 0, frame = 16
 7722              		@ frame_needed = 1, uses_anonymous_args = 0
 7723 0000 80B5     		push	{r7, lr}
 7724              	.LCFI456:
 7725              		.cfi_def_cfa_offset 8
 7726              		.cfi_offset 7, -8
 7727              		.cfi_offset 14, -4
 7728 0002 84B0     		sub	sp, sp, #16
 7729              	.LCFI457:
 7730              		.cfi_def_cfa_offset 24
 7731 0004 00AF     		add	r7, sp, #0
 7732              	.LCFI458:
 7733              		.cfi_def_cfa_register 7
 7734 0006 7860     		str	r0, [r7, #4]
2134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
2135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   if (MC_NULL == pHdl)
2136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Nothing to do */
2138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   else
2140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   {
2141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
2142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     PWMC_R3_2_Handle_t *pHandle = (PWMC_R3_2_Handle_t *)pHdl; //cstat !MISRAC2012-Rule-11.3
 7735              		.loc 8 2142 25
 7736 0008 7B68     		ldr	r3, [r7, #4]
 7737 000a FB60     		str	r3, [r7, #12]
2143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIM_TypeDef *TIMx = pHandle->pParams_str->TIMx;
 7738              		.loc 8 2143 32
 7739 000c FB68     		ldr	r3, [r7, #12]
 7740 000e D3F89C30 		ldr	r3, [r3, #156]
 7741              		.loc 8 2143 18
 7742 0012 1B68     		ldr	r3, [r3]
 7743 0014 BB60     		str	r3, [r7, #8]
2144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHandle->ADCRegularLocked=true;
 7744              		.loc 8 2145 30
 7745 0016 FB68     		ldr	r3, [r7, #12]
 7746 0018 0122     		movs	r2, #1
 7747 001a 83F8A020 		strb	r2, [r3, #160]
2146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_ClearFlag_UPDATE(TIMx);
 7748              		.loc 8 2147 5
 7749 001e B868     		ldr	r0, [r7, #8]
 7750 0020 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
2148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 7751              		.loc 8 2148 11
 7752 0024 00BF     		nop
 7753              	.L338:
 7754              		.loc 8 2148 18 discriminator 1
 7755 0026 B868     		ldr	r0, [r7, #8]
ARM GAS  /tmp/ccA1EUYa.s 			page 551


 7756 0028 FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 7757 002c 0346     		mov	r3, r0
 7758              		.loc 8 2148 11 discriminator 1
 7759 002e 002B     		cmp	r3, #0
 7760 0030 F9D0     		beq	.L338
2149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
2151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Clear Update Flag */
2153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_ClearFlag_UPDATE(TIMx);
 7761              		.loc 8 2153 5
 7762 0032 B868     		ldr	r0, [r7, #8]
 7763 0034 FFF7FEFF 		bl	LL_TIM_ClearFlag_UPDATE
2154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH1(TIMx, 0x0U);
 7764              		.loc 8 2155 5
 7765 0038 0021     		movs	r1, #0
 7766 003a B868     		ldr	r0, [r7, #8]
 7767 003c FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
2156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH2(TIMx, 0x0U);
 7768              		.loc 8 2156 5
 7769 0040 0021     		movs	r1, #0
 7770 0042 B868     		ldr	r0, [r7, #8]
 7771 0044 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH2
2157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH3(TIMx, 0x0U);
 7772              		.loc 8 2157 5
 7773 0048 0021     		movs	r1, #0
 7774 004a B868     		ldr	r0, [r7, #8]
 7775 004c FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH3
2158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_OC_SetCompareCH4(TIMx, ((uint32_t )pHandle->Half_PWMPeriod) - 5U);
 7776              		.loc 8 2158 54
 7777 0050 FB68     		ldr	r3, [r7, #12]
 7778 0052 B3F89430 		ldrh	r3, [r3, #148]
 7779              		.loc 8 2158 5
 7780 0056 053B     		subs	r3, r3, #5
 7781 0058 1946     		mov	r1, r3
 7782 005a B868     		ldr	r0, [r7, #8]
 7783 005c FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH4
2159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     while (0U == LL_TIM_IsActiveFlag_UPDATE(TIMx))
 7784              		.loc 8 2160 11
 7785 0060 00BF     		nop
 7786              	.L339:
 7787              		.loc 8 2160 18 discriminator 1
 7788 0062 B868     		ldr	r0, [r7, #8]
 7789 0064 FFF7FEFF 		bl	LL_TIM_IsActiveFlag_UPDATE
 7790 0068 0346     		mov	r3, r0
 7791              		.loc 8 2160 11 discriminator 1
 7792 006a 002B     		cmp	r3, #0
 7793 006c F9D0     		beq	.L339
2161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
2163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     /* Main PWM Output Enable */
2166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     TIMx->BDTR |= LL_TIM_OSSI_ENABLE ;
 7794              		.loc 8 2166 16
ARM GAS  /tmp/ccA1EUYa.s 			page 552


 7795 006e BB68     		ldr	r3, [r7, #8]
 7796 0070 5B6C     		ldr	r3, [r3, #68]
 7797 0072 43F48062 		orr	r2, r3, #1024
 7798 0076 BB68     		ldr	r3, [r7, #8]
 7799 0078 5A64     		str	r2, [r3, #68]
2167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_EnableAllOutputs (TIMx);
 7800              		.loc 8 2167 5
 7801 007a B868     		ldr	r0, [r7, #8]
 7802 007c FFF7FEFF 		bl	LL_TIM_EnableAllOutputs
2168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     if (ES_GPIO == pHandle->_Super.LowSideOutputs )
 7803              		.loc 8 2169 35
 7804 0080 FB68     		ldr	r3, [r7, #12]
 7805 0082 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7806              		.loc 8 2169 8
 7807 0086 022B     		cmp	r3, #2
 7808 0088 1AD1     		bne	.L340
2170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* It is executed during calibration phase the EN signal shall stay off */
2172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_u_port, pHandle->_Super.pwm_en_u_pin);
 7809              		.loc 8 2172 7
 7810 008a FB68     		ldr	r3, [r7, #12]
 7811 008c DA6B     		ldr	r2, [r3, #60]
 7812              		.loc 8 2172 74
 7813 008e FB68     		ldr	r3, [r7, #12]
 7814 0090 B3F84830 		ldrh	r3, [r3, #72]
 7815              		.loc 8 2172 7
 7816 0094 1946     		mov	r1, r3
 7817 0096 1046     		mov	r0, r2
 7818 0098 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
2173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_v_port, pHandle->_Super.pwm_en_v_pin);
 7819              		.loc 8 2173 7
 7820 009c FB68     		ldr	r3, [r7, #12]
 7821 009e 1A6C     		ldr	r2, [r3, #64]
 7822              		.loc 8 2173 74
 7823 00a0 FB68     		ldr	r3, [r7, #12]
 7824 00a2 B3F84A30 		ldrh	r3, [r3, #74]
 7825              		.loc 8 2173 7
 7826 00a6 1946     		mov	r1, r3
 7827 00a8 1046     		mov	r0, r2
 7828 00aa FFF7FEFF 		bl	LL_GPIO_SetOutputPin
2174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       LL_GPIO_SetOutputPin(pHandle->_Super.pwm_en_w_port, pHandle->_Super.pwm_en_w_pin);
 7829              		.loc 8 2174 7
 7830 00ae FB68     		ldr	r3, [r7, #12]
 7831 00b0 5A6C     		ldr	r2, [r3, #68]
 7832              		.loc 8 2174 74
 7833 00b2 FB68     		ldr	r3, [r7, #12]
 7834 00b4 B3F84C30 		ldrh	r3, [r3, #76]
 7835              		.loc 8 2174 7
 7836 00b8 1946     		mov	r1, r3
 7837 00ba 1046     		mov	r0, r2
 7838 00bc FFF7FEFF 		bl	LL_GPIO_SetOutputPin
 7839              	.L340:
2175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     else
2177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     {
2178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****       /* Nothing to do */
ARM GAS  /tmp/ccA1EUYa.s 			page 553


2179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     }
2180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     pHdl->Sector = SECTOR_4;
 7840              		.loc 8 2181 18
 7841 00c0 7B68     		ldr	r3, [r7, #4]
 7842 00c2 0322     		movs	r2, #3
 7843 00c4 83F87A20 		strb	r2, [r3, #122]
2182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_CC_EnableChannel(TIMx, LL_TIM_CHANNEL_CH4);
 7844              		.loc 8 2183 5
 7845 00c8 4FF48051 		mov	r1, #4096
 7846 00cc B868     		ldr	r0, [r7, #8]
 7847 00ce FFF7FEFF 		bl	LL_TIM_CC_EnableChannel
2184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** 
2185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****     LL_TIM_EnableIT_UPDATE(TIMx);
 7848              		.loc 8 2185 5
 7849 00d2 B868     		ldr	r0, [r7, #8]
 7850 00d4 FFF7FEFF 		bl	LL_TIM_EnableIT_UPDATE
2186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_R3_2_PWM_CURR_FDB
2187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c ****   }
2188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** #endif
2189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/r3_2_g4xx_pwm_curr_fdbk.c **** }
 7851              		.loc 8 2189 1
 7852 00d8 00BF     		nop
 7853 00da 1037     		adds	r7, r7, #16
 7854              	.LCFI459:
 7855              		.cfi_def_cfa_offset 8
 7856 00dc BD46     		mov	sp, r7
 7857              	.LCFI460:
 7858              		.cfi_def_cfa_register 13
 7859              		@ sp needed
 7860 00de 80BD     		pop	{r7, pc}
 7861              		.cfi_endproc
 7862              	.LFE1464:
 7864              		.text
 7865              	.Letext0:
 7866              		.file 9 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 7867              		.file 10 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 7868              		.file 11 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 7869              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 7870              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 7871              		.file 14 "Inc/mc_type.h"
 7872              		.file 15 "Inc/pwm_curr_fdbk.h"
 7873              		.file 16 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/r3_2_g4xx_pwm_curr_fdbk.h"
 7874              		.file 17 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
ARM GAS  /tmp/ccA1EUYa.s 			page 554


DEFINED SYMBOLS
                            *ABS*:0000000000000000 r3_2_g4xx_pwm_curr_fdbk.c
     /tmp/ccA1EUYa.s:18     .text.LL_DBGMCU_APB2_GRP1_FreezePeriph:0000000000000000 $t
     /tmp/ccA1EUYa.s:25     .text.LL_DBGMCU_APB2_GRP1_FreezePeriph:0000000000000000 LL_DBGMCU_APB2_GRP1_FreezePeriph
     /tmp/ccA1EUYa.s:68     .text.LL_DBGMCU_APB2_GRP1_FreezePeriph:0000000000000020 $d
     /tmp/ccA1EUYa.s:73     .text.LL_ADC_REG_SetSequencerLength:0000000000000000 $t
     /tmp/ccA1EUYa.s:79     .text.LL_ADC_REG_SetSequencerLength:0000000000000000 LL_ADC_REG_SetSequencerLength
     /tmp/ccA1EUYa.s:125    .text.LL_ADC_INJ_SetQueueMode:0000000000000000 $t
     /tmp/ccA1EUYa.s:131    .text.LL_ADC_INJ_SetQueueMode:0000000000000000 LL_ADC_INJ_SetQueueMode
     /tmp/ccA1EUYa.s:177    .text.LL_ADC_DisableDeepPowerDown:0000000000000000 $t
     /tmp/ccA1EUYa.s:183    .text.LL_ADC_DisableDeepPowerDown:0000000000000000 LL_ADC_DisableDeepPowerDown
     /tmp/ccA1EUYa.s:226    .text.LL_ADC_EnableInternalRegulator:0000000000000000 $t
     /tmp/ccA1EUYa.s:232    .text.LL_ADC_EnableInternalRegulator:0000000000000000 LL_ADC_EnableInternalRegulator
     /tmp/ccA1EUYa.s:276    .text.LL_ADC_IsInternalRegulatorEnabled:0000000000000000 $t
     /tmp/ccA1EUYa.s:282    .text.LL_ADC_IsInternalRegulatorEnabled:0000000000000000 LL_ADC_IsInternalRegulatorEnabled
     /tmp/ccA1EUYa.s:332    .text.LL_ADC_Enable:0000000000000000 $t
     /tmp/ccA1EUYa.s:338    .text.LL_ADC_Enable:0000000000000000 LL_ADC_Enable
     /tmp/ccA1EUYa.s:382    .text.LL_ADC_IsEnabled:0000000000000000 $t
     /tmp/ccA1EUYa.s:388    .text.LL_ADC_IsEnabled:0000000000000000 LL_ADC_IsEnabled
     /tmp/ccA1EUYa.s:438    .text.LL_ADC_StartCalibration:0000000000000000 $t
     /tmp/ccA1EUYa.s:444    .text.LL_ADC_StartCalibration:0000000000000000 LL_ADC_StartCalibration
     /tmp/ccA1EUYa.s:492    .text.LL_ADC_IsCalibrationOnGoing:0000000000000000 $t
     /tmp/ccA1EUYa.s:498    .text.LL_ADC_IsCalibrationOnGoing:0000000000000000 LL_ADC_IsCalibrationOnGoing
     /tmp/ccA1EUYa.s:548    .text.LL_ADC_REG_StartConversion:0000000000000000 $t
     /tmp/ccA1EUYa.s:554    .text.LL_ADC_REG_StartConversion:0000000000000000 LL_ADC_REG_StartConversion
     /tmp/ccA1EUYa.s:598    .text.LL_ADC_INJ_StartConversion:0000000000000000 $t
     /tmp/ccA1EUYa.s:604    .text.LL_ADC_INJ_StartConversion:0000000000000000 LL_ADC_INJ_StartConversion
     /tmp/ccA1EUYa.s:648    .text.LL_ADC_INJ_StopConversion:0000000000000000 $t
     /tmp/ccA1EUYa.s:654    .text.LL_ADC_INJ_StopConversion:0000000000000000 LL_ADC_INJ_StopConversion
     /tmp/ccA1EUYa.s:698    .text.LL_ADC_IsActiveFlag_ADRDY:0000000000000000 $t
     /tmp/ccA1EUYa.s:704    .text.LL_ADC_IsActiveFlag_ADRDY:0000000000000000 LL_ADC_IsActiveFlag_ADRDY
     /tmp/ccA1EUYa.s:754    .text.LL_ADC_ClearFlag_EOC:0000000000000000 $t
     /tmp/ccA1EUYa.s:760    .text.LL_ADC_ClearFlag_EOC:0000000000000000 LL_ADC_ClearFlag_EOC
     /tmp/ccA1EUYa.s:800    .text.LL_ADC_ClearFlag_JEOC:0000000000000000 $t
     /tmp/ccA1EUYa.s:806    .text.LL_ADC_ClearFlag_JEOC:0000000000000000 LL_ADC_ClearFlag_JEOC
     /tmp/ccA1EUYa.s:846    .text.LL_ADC_ClearFlag_JEOS:0000000000000000 $t
     /tmp/ccA1EUYa.s:852    .text.LL_ADC_ClearFlag_JEOS:0000000000000000 LL_ADC_ClearFlag_JEOS
     /tmp/ccA1EUYa.s:892    .text.LL_ADC_EnableIT_JEOS:0000000000000000 $t
     /tmp/ccA1EUYa.s:898    .text.LL_ADC_EnableIT_JEOS:0000000000000000 LL_ADC_EnableIT_JEOS
     /tmp/ccA1EUYa.s:940    .text.LL_ADC_DisableIT_EOC:0000000000000000 $t
     /tmp/ccA1EUYa.s:946    .text.LL_ADC_DisableIT_EOC:0000000000000000 LL_ADC_DisableIT_EOC
     /tmp/ccA1EUYa.s:988    .text.LL_ADC_DisableIT_JEOC:0000000000000000 $t
     /tmp/ccA1EUYa.s:994    .text.LL_ADC_DisableIT_JEOC:0000000000000000 LL_ADC_DisableIT_JEOC
     /tmp/ccA1EUYa.s:1036   .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccA1EUYa.s:1039   .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/ccA1EUYa.s:1042   .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccA1EUYa.s:1045   .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/ccA1EUYa.s:1048   .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccA1EUYa.s:1051   .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/ccA1EUYa.s:1054   .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccA1EUYa.s:1057   .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/ccA1EUYa.s:1060   .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccA1EUYa.s:1063   .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/ccA1EUYa.s:1066   .text.LL_TIM_DisableCounter:0000000000000000 $t
     /tmp/ccA1EUYa.s:1072   .text.LL_TIM_DisableCounter:0000000000000000 LL_TIM_DisableCounter
     /tmp/ccA1EUYa.s:1115   .text.LL_TIM_SetCounter:0000000000000000 $t
     /tmp/ccA1EUYa.s:1121   .text.LL_TIM_SetCounter:0000000000000000 LL_TIM_SetCounter
ARM GAS  /tmp/ccA1EUYa.s 			page 555


     /tmp/ccA1EUYa.s:1162   .text.LL_TIM_SetRepetitionCounter:0000000000000000 $t
     /tmp/ccA1EUYa.s:1168   .text.LL_TIM_SetRepetitionCounter:0000000000000000 LL_TIM_SetRepetitionCounter
     /tmp/ccA1EUYa.s:1209   .text.LL_TIM_CC_EnableChannel:0000000000000000 $t
     /tmp/ccA1EUYa.s:1215   .text.LL_TIM_CC_EnableChannel:0000000000000000 LL_TIM_CC_EnableChannel
     /tmp/ccA1EUYa.s:1259   .text.LL_TIM_CC_DisableChannel:0000000000000000 $t
     /tmp/ccA1EUYa.s:1265   .text.LL_TIM_CC_DisableChannel:0000000000000000 LL_TIM_CC_DisableChannel
     /tmp/ccA1EUYa.s:1310   .text.LL_TIM_OC_SetMode:0000000000000000 $t
     /tmp/ccA1EUYa.s:1316   .text.LL_TIM_OC_SetMode:0000000000000000 LL_TIM_OC_SetMode
     /tmp/ccA1EUYa.s:1463   .text.LL_TIM_OC_SetMode:00000000000000b8 $d
     /tmp/ccA1EUYa.s:1470   .text.LL_TIM_OC_EnablePreload:0000000000000000 $t
     /tmp/ccA1EUYa.s:1476   .text.LL_TIM_OC_EnablePreload:0000000000000000 LL_TIM_OC_EnablePreload
     /tmp/ccA1EUYa.s:1614   .text.LL_TIM_OC_EnablePreload:00000000000000a4 $d
     /tmp/ccA1EUYa.s:1620   .text.LL_TIM_OC_SetCompareCH1:0000000000000000 $t
     /tmp/ccA1EUYa.s:1626   .text.LL_TIM_OC_SetCompareCH1:0000000000000000 LL_TIM_OC_SetCompareCH1
     /tmp/ccA1EUYa.s:1667   .text.LL_TIM_OC_SetCompareCH2:0000000000000000 $t
     /tmp/ccA1EUYa.s:1673   .text.LL_TIM_OC_SetCompareCH2:0000000000000000 LL_TIM_OC_SetCompareCH2
     /tmp/ccA1EUYa.s:1714   .text.LL_TIM_OC_SetCompareCH3:0000000000000000 $t
     /tmp/ccA1EUYa.s:1720   .text.LL_TIM_OC_SetCompareCH3:0000000000000000 LL_TIM_OC_SetCompareCH3
     /tmp/ccA1EUYa.s:1761   .text.LL_TIM_OC_SetCompareCH4:0000000000000000 $t
     /tmp/ccA1EUYa.s:1767   .text.LL_TIM_OC_SetCompareCH4:0000000000000000 LL_TIM_OC_SetCompareCH4
     /tmp/ccA1EUYa.s:1808   .text.LL_TIM_SetTriggerOutput:0000000000000000 $t
     /tmp/ccA1EUYa.s:1814   .text.LL_TIM_SetTriggerOutput:0000000000000000 LL_TIM_SetTriggerOutput
     /tmp/ccA1EUYa.s:1860   .text.LL_TIM_EnableAllOutputs:0000000000000000 $t
     /tmp/ccA1EUYa.s:1866   .text.LL_TIM_EnableAllOutputs:0000000000000000 LL_TIM_EnableAllOutputs
     /tmp/ccA1EUYa.s:1908   .text.LL_TIM_DisableAllOutputs:0000000000000000 $t
     /tmp/ccA1EUYa.s:1914   .text.LL_TIM_DisableAllOutputs:0000000000000000 LL_TIM_DisableAllOutputs
     /tmp/ccA1EUYa.s:1956   .text.LL_TIM_ClearFlag_UPDATE:0000000000000000 $t
     /tmp/ccA1EUYa.s:1962   .text.LL_TIM_ClearFlag_UPDATE:0000000000000000 LL_TIM_ClearFlag_UPDATE
     /tmp/ccA1EUYa.s:2002   .text.LL_TIM_IsActiveFlag_UPDATE:0000000000000000 $t
     /tmp/ccA1EUYa.s:2008   .text.LL_TIM_IsActiveFlag_UPDATE:0000000000000000 LL_TIM_IsActiveFlag_UPDATE
     /tmp/ccA1EUYa.s:2058   .text.LL_TIM_ClearFlag_BRK:0000000000000000 $t
     /tmp/ccA1EUYa.s:2064   .text.LL_TIM_ClearFlag_BRK:0000000000000000 LL_TIM_ClearFlag_BRK
     /tmp/ccA1EUYa.s:2104   .text.LL_TIM_ClearFlag_BRK2:0000000000000000 $t
     /tmp/ccA1EUYa.s:2110   .text.LL_TIM_ClearFlag_BRK2:0000000000000000 LL_TIM_ClearFlag_BRK2
     /tmp/ccA1EUYa.s:2150   .text.LL_TIM_IsActiveFlag_BRK2:0000000000000000 $t
     /tmp/ccA1EUYa.s:2156   .text.LL_TIM_IsActiveFlag_BRK2:0000000000000000 LL_TIM_IsActiveFlag_BRK2
     /tmp/ccA1EUYa.s:2206   .text.LL_TIM_EnableIT_UPDATE:0000000000000000 $t
     /tmp/ccA1EUYa.s:2212   .text.LL_TIM_EnableIT_UPDATE:0000000000000000 LL_TIM_EnableIT_UPDATE
     /tmp/ccA1EUYa.s:2254   .text.LL_TIM_DisableIT_UPDATE:0000000000000000 $t
     /tmp/ccA1EUYa.s:2260   .text.LL_TIM_DisableIT_UPDATE:0000000000000000 LL_TIM_DisableIT_UPDATE
     /tmp/ccA1EUYa.s:2302   .text.LL_TIM_EnableIT_BRK:0000000000000000 $t
     /tmp/ccA1EUYa.s:2308   .text.LL_TIM_EnableIT_BRK:0000000000000000 LL_TIM_EnableIT_BRK
     /tmp/ccA1EUYa.s:2350   .text.LL_TIM_GenerateEvent_UPDATE:0000000000000000 $t
     /tmp/ccA1EUYa.s:2356   .text.LL_TIM_GenerateEvent_UPDATE:0000000000000000 LL_TIM_GenerateEvent_UPDATE
     /tmp/ccA1EUYa.s:2398   .text.LL_TIM_GenerateEvent_COM:0000000000000000 $t
     /tmp/ccA1EUYa.s:2404   .text.LL_TIM_GenerateEvent_COM:0000000000000000 LL_TIM_GenerateEvent_COM
     /tmp/ccA1EUYa.s:2446   .text.LL_GPIO_SetOutputPin:0000000000000000 $t
     /tmp/ccA1EUYa.s:2452   .text.LL_GPIO_SetOutputPin:0000000000000000 LL_GPIO_SetOutputPin
     /tmp/ccA1EUYa.s:2494   .text.LL_GPIO_ResetOutputPin:0000000000000000 $t
     /tmp/ccA1EUYa.s:2500   .text.LL_GPIO_ResetOutputPin:0000000000000000 LL_GPIO_ResetOutputPin
     /tmp/ccA1EUYa.s:2541   .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccA1EUYa.s:2544   .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB
     /tmp/ccA1EUYa.s:2558   .text.LL_DAC_Enable:0000000000000000 $t
     /tmp/ccA1EUYa.s:2564   .text.LL_DAC_Enable:0000000000000000 LL_DAC_Enable
     /tmp/ccA1EUYa.s:2612   .text.LL_DAC_IsEnabled:0000000000000000 $t
     /tmp/ccA1EUYa.s:2618   .text.LL_DAC_IsEnabled:0000000000000000 LL_DAC_IsEnabled
     /tmp/ccA1EUYa.s:2679   .text.LL_DAC_TrigSWConversion:0000000000000000 $t
ARM GAS  /tmp/ccA1EUYa.s 			page 556


     /tmp/ccA1EUYa.s:2685   .text.LL_DAC_TrigSWConversion:0000000000000000 LL_DAC_TrigSWConversion
     /tmp/ccA1EUYa.s:2730   .text.LL_DAC_ConvertData12LeftAligned:0000000000000000 $t
     /tmp/ccA1EUYa.s:2736   .text.LL_DAC_ConvertData12LeftAligned:0000000000000000 LL_DAC_ConvertData12LeftAligned
     /tmp/ccA1EUYa.s:2794   .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccA1EUYa.s:2797   .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccA1EUYa.s:2800   .text.LL_COMP_Enable:0000000000000000 $t
     /tmp/ccA1EUYa.s:2806   .text.LL_COMP_Enable:0000000000000000 LL_COMP_Enable
     /tmp/ccA1EUYa.s:2849   .text.LL_COMP_Lock:0000000000000000 $t
     /tmp/ccA1EUYa.s:2855   .text.LL_COMP_Lock:0000000000000000 LL_COMP_Lock
     /tmp/ccA1EUYa.s:2897   .text.LL_OPAMP_Enable:0000000000000000 $t
     /tmp/ccA1EUYa.s:2903   .text.LL_OPAMP_Enable:0000000000000000 LL_OPAMP_Enable
     /tmp/ccA1EUYa.s:2946   .text.R3_2_Init:0000000000000000 $t
     /tmp/ccA1EUYa.s:2953   .text.R3_2_Init:0000000000000000 R3_2_Init
     /tmp/ccA1EUYa.s:6655   .text.R3_2_SetAOReferenceVoltage:0000000000000000 R3_2_SetAOReferenceVoltage
     /tmp/ccA1EUYa.s:3321   .text.R3_2_ADCxInit:0000000000000000 R3_2_ADCxInit
     /tmp/ccA1EUYa.s:3449   .text.R3_2_TIMxInit:0000000000000000 R3_2_TIMxInit
     /tmp/ccA1EUYa.s:3310   .text.R3_2_Init:000000000000023c $d
     /tmp/ccA1EUYa.s:3315   .text.R3_2_ADCxInit:0000000000000000 $t
     /tmp/ccA1EUYa.s:3437   .text.R3_2_ADCxInit:0000000000000098 $d
     /tmp/ccA1EUYa.s:3443   .text.R3_2_TIMxInit:0000000000000000 $t
     /tmp/ccA1EUYa.s:3643   .text.R3_2_SetOffsetCalib:0000000000000000 $t
     /tmp/ccA1EUYa.s:3650   .text.R3_2_SetOffsetCalib:0000000000000000 R3_2_SetOffsetCalib
     /tmp/ccA1EUYa.s:3718   .text.R3_2_GetOffsetCalib:0000000000000000 $t
     /tmp/ccA1EUYa.s:3725   .text.R3_2_GetOffsetCalib:0000000000000000 R3_2_GetOffsetCalib
     /tmp/ccA1EUYa.s:3789   .text.R3_2_CurrentReadingPolarization:0000000000000000 $t
     /tmp/ccA1EUYa.s:3796   .text.R3_2_CurrentReadingPolarization:0000000000000000 R3_2_CurrentReadingPolarization
     /tmp/ccA1EUYa.s:5990   .text.R3_2_SwitchOnPWM:0000000000000000 R3_2_SwitchOnPWM
     /tmp/ccA1EUYa.s:6190   .text.R3_2_SwitchOffPWM:0000000000000000 R3_2_SwitchOffPWM
     /tmp/ccA1EUYa.s:4063   .text.R3_2_CurrentReadingPolarization:00000000000001cc $d
     /tmp/ccA1EUYa.s:5656   .text.R3_2_HFCurrentsPolarizationAB:0000000000000000 R3_2_HFCurrentsPolarizationAB
     /tmp/ccA1EUYa.s:5182   .text.R3_2_SetADCSampPointPolarization:0000000000000000 R3_2_SetADCSampPointPolarization
     /tmp/ccA1EUYa.s:5771   .text.R3_2_HFCurrentsPolarizationC:0000000000000000 R3_2_HFCurrentsPolarizationC
     /tmp/ccA1EUYa.s:4071   .text.R3_2_GetPhaseCurrents:0000000000000000 $t
     /tmp/ccA1EUYa.s:4078   .text.R3_2_GetPhaseCurrents:0000000000000000 R3_2_GetPhaseCurrents
     /tmp/ccA1EUYa.s:4138   .text.R3_2_GetPhaseCurrents:0000000000000058 $d
     /tmp/ccA1EUYa.s:4144   .text.R3_2_GetPhaseCurrents:0000000000000070 $t
     /tmp/ccA1EUYa.s:4445   .text.R3_2_GetPhaseCurrents_OVM:0000000000000000 $t
     /tmp/ccA1EUYa.s:4452   .text.R3_2_GetPhaseCurrents_OVM:0000000000000000 R3_2_GetPhaseCurrents_OVM
     /tmp/ccA1EUYa.s:4512   .text.R3_2_GetPhaseCurrents_OVM:0000000000000058 $d
     /tmp/ccA1EUYa.s:4518   .text.R3_2_GetPhaseCurrents_OVM:0000000000000070 $t
     /tmp/ccA1EUYa.s:5175   .text.R3_2_SetADCSampPointPolarization:0000000000000000 $t
     /tmp/ccA1EUYa.s:5557   .text.R3_2_WriteTIMRegisters:0000000000000000 R3_2_WriteTIMRegisters
     /tmp/ccA1EUYa.s:5235   .text.R3_2_SetADCSampPointSectX:0000000000000000 $t
     /tmp/ccA1EUYa.s:5242   .text.R3_2_SetADCSampPointSectX:0000000000000000 R3_2_SetADCSampPointSectX
     /tmp/ccA1EUYa.s:5390   .text.R3_2_SetADCSampPointSectX_OVM:0000000000000000 $t
     /tmp/ccA1EUYa.s:5397   .text.R3_2_SetADCSampPointSectX_OVM:0000000000000000 R3_2_SetADCSampPointSectX_OVM
     /tmp/ccA1EUYa.s:5551   .text.R3_2_WriteTIMRegisters:0000000000000000 $t
     /tmp/ccA1EUYa.s:5645   .text.R3_2_WriteTIMRegisters:0000000000000070 $d
     /tmp/ccA1EUYa.s:5650   .text.R3_2_HFCurrentsPolarizationAB:0000000000000000 $t
     /tmp/ccA1EUYa.s:5765   .text.R3_2_HFCurrentsPolarizationC:0000000000000000 $t
     /tmp/ccA1EUYa.s:5861   .text.R3_2_TurnOnLowSides:0000000000000000 $t
     /tmp/ccA1EUYa.s:5868   .text.R3_2_TurnOnLowSides:0000000000000000 R3_2_TurnOnLowSides
     /tmp/ccA1EUYa.s:5983   .text.R3_2_SwitchOnPWM:0000000000000000 $t
     /tmp/ccA1EUYa.s:6183   .text.R3_2_SwitchOffPWM:0000000000000000 $t
     /tmp/ccA1EUYa.s:6304   .text.fun1:0000000000000000 $t
     /tmp/ccA1EUYa.s:6311   .text.fun1:0000000000000000 fun1
     /tmp/ccA1EUYa.s:6502   .text.R3_2_TIMx_UP_IRQHandler:0000000000000000 $t
ARM GAS  /tmp/ccA1EUYa.s 			page 557


     /tmp/ccA1EUYa.s:6509   .text.R3_2_TIMx_UP_IRQHandler:0000000000000000 R3_2_TIMx_UP_IRQHandler
     /tmp/ccA1EUYa.s:6649   .text.R3_2_SetAOReferenceVoltage:0000000000000000 $t
     /tmp/ccA1EUYa.s:6767   .text.R3_2_SetAOReferenceVoltage:0000000000000084 $d
     /tmp/ccA1EUYa.s:6773   .text.R3_2_RLDetectionModeEnable:0000000000000000 $t
     /tmp/ccA1EUYa.s:6780   .text.R3_2_RLDetectionModeEnable:0000000000000000 R3_2_RLDetectionModeEnable
     /tmp/ccA1EUYa.s:6927   .text.R3_2_RLDetectionModeEnable:00000000000000e8 $d
     /tmp/ccA1EUYa.s:7299   .text.R3_2_RLGetPhaseCurrents:0000000000000000 R3_2_RLGetPhaseCurrents
     /tmp/ccA1EUYa.s:7406   .text.R3_2_RLTurnOnLowSides:0000000000000000 R3_2_RLTurnOnLowSides
     /tmp/ccA1EUYa.s:7515   .text.R3_2_RLSwitchOnPWM:0000000000000000 R3_2_RLSwitchOnPWM
     /tmp/ccA1EUYa.s:6935   .text.R3_2_RLDetectionModeDisable:0000000000000000 $t
     /tmp/ccA1EUYa.s:6942   .text.R3_2_RLDetectionModeDisable:0000000000000000 R3_2_RLDetectionModeDisable
     /tmp/ccA1EUYa.s:7132   .text.R3_2_RLDetectionModeDisable:0000000000000130 $d
     /tmp/ccA1EUYa.s:7140   .text.R3_2_RLDetectionModeSetDuty:0000000000000000 $t
     /tmp/ccA1EUYa.s:7147   .text.R3_2_RLDetectionModeSetDuty:0000000000000000 R3_2_RLDetectionModeSetDuty
     /tmp/ccA1EUYa.s:7288   .text.R3_2_RLDetectionModeSetDuty:00000000000000c8 $d
     /tmp/ccA1EUYa.s:7293   .text.R3_2_RLGetPhaseCurrents:0000000000000000 $t
     /tmp/ccA1EUYa.s:7394   .text.R3_2_RLGetPhaseCurrents:0000000000000074 $d
     /tmp/ccA1EUYa.s:7400   .text.R3_2_RLTurnOnLowSides:0000000000000000 $t
     /tmp/ccA1EUYa.s:7509   .text.R3_2_RLSwitchOnPWM:0000000000000000 $t
     /tmp/ccA1EUYa.s:7710   .text.R3_2_RLTurnOnLowSidesAndStart:0000000000000000 $t
     /tmp/ccA1EUYa.s:7717   .text.R3_2_RLTurnOnLowSidesAndStart:0000000000000000 R3_2_RLTurnOnLowSidesAndStart

UNDEFINED SYMBOLS
SystemCoreClock
waitForPolarizationEnd
