ARM GAS  /tmp/cctuZX3B.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"register_interface.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
  22      04040404 
  22      3838
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
  28      00000800 
  28      0008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
  34      00000800 
  34      0000
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
  40      080A0C0E 
  40      1014
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
  46      04050607 
  46      080A
  47              		.section	.rodata.USART_PRESCALER_TAB,"a"
  48              		.align	2
  51              	USART_PRESCALER_TAB:
  52 0000 01000000 		.word	1
  53 0004 02000000 		.word	2
  54 0008 04000000 		.word	4
  55 000c 06000000 		.word	6
  56 0010 08000000 		.word	8
  57 0014 0A000000 		.word	10
  58 0018 0C000000 		.word	12
  59 001c 10000000 		.word	16
ARM GAS  /tmp/cctuZX3B.s 			page 2


  60 0020 20000000 		.word	32
  61 0024 40000000 		.word	64
  62 0028 80000000 		.word	128
  63 002c 00010000 		.word	256
  64              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  65              		.align	2
  68              	CHANNEL_OFFSET_TAB:
  69 0000 081C3044 		.ascii	"\010\0340DXl"
  69      586C
  70              		.section	.text.SPD_GetElAngle,"ax",%progbits
  71              		.align	1
  72              		.arch armv7e-m
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	SPD_GetElAngle:
  79              	.LFB1440:
  80              		.file 1 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @file    speed_pos_fdbk.h
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @brief   This file provides all definitions and functions prototypes
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *          of the Speed & Position Feedback component of the Motor Control SDK.
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   ******************************************************************************
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @attention
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * All rights reserved.</center></h2>
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * This software component is licensed by ST under Ultimate Liberty license
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * the License. You may obtain a copy of the License at:
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *                             www.st.com/SLA0044
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   ******************************************************************************
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @ingroup SpeednPosFdbk
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   */
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #ifndef SPEEDNPOSFDBK_H
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #define SPEEDNPOSFDBK_H
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #ifdef __cplusplus
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** extern "C" {
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #endif /* __cplusplus */
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /* Includes ------------------------------------------------------------------*/
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /* Already into mc_type.h */
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /* #include "stdint.h" */
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #include "mc_type.h"
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /** @addtogroup MCSDK
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @{
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   */
ARM GAS  /tmp/cctuZX3B.s 			page 3


  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /** @addtogroup SpeednPosFdbk
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @{
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   */
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /* Exported types ------------------------------------------------------------*/
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /**
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @brief  SpeednPosFdbk  handles definitions of mechanical and electrical speed, mechanical accel
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *                        and electrical angle and all constants and scale values for a reliable m
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   *                        computation in appropriated unit.
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   */
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** typedef struct
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** {
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint8_t bSpeedErrorNumber;          /*!< Number of time the average mechanical speed is not valid
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint8_t bElToMecRatio;              /*!< Coefficient used to transform electrical to mechanical q
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            viceversa. It usually coincides with motor pole pairs nu
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint8_t SpeedUnit;                  /*!< The speed unit value is defined into mc_stm_types.h by
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            [SPEED_UNIT](measurement_units.md) in tenth of Hertz.*/
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint8_t bMaximumSpeedErrorsNumber;  /*!< Maximum value of not valid speed measurements before an 
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int16_t hElAngle;                   /*!< Estimated electrical angle reported by the implemented s
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            method. */
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int16_t hMecAngle;                  /*!< Instantaneous measure of rotor mechanical angle. */
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int32_t wMecAngle;                  /*!< Mechanical angle frame based on coefficient #bElToMecRat
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int16_t hAvrMecSpeedUnit;           /*!< Average mechanical speed expressed in the unit defined b
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            [SPEED_UNIT](measurement_units.md). */
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int16_t hElSpeedDpp;                /*!< Instantaneous electrical speed expressed in Digit Per co
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            ([dpp](measurement_units.md)),
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            expresses the angular speed as the variation of the elec
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int16_t InstantaneousElSpeedDpp;    /*!< Instantaneous computed electrical speed, expressed in
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            [dpp](measurement_units.md). */
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   int16_t hMecAccelUnitP;             /*!< Average mechanical acceleration expressed in the unit de
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            only reported with encoder implementation */
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint16_t hMaxReliableMecSpeedUnit;  /*!< Maximum value of measured mechanical speed that is consi
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            Expressed in the unit defined by [SPEED_UNIT](measuremen
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint16_t hMinReliableMecSpeedUnit;  /*!< Minimum value of measured mechanical speed that is consi
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            Expressed in the unit defined by [SPEED_UNIT](measuremen
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint16_t hMaxReliableMecAccelUnitP; /*!< Maximum value of measured acceleration that is considere
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            Constant value equal to 65535, expressed in the unit def
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            [SPEED_UNIT](measurement_units.md). */
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint16_t hMeasurementFrequency;     /*!< Frequency at which the user will request a measurement o
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            electrical angle. Expressed in PWM_FREQ_SCALING * Hz. */
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint32_t DPPConvFactor;             /*!< Conversion factor (65536/#PWM_FREQ_SCALING) used to conv
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            from the unit defined by [SPEED_UNIT](measurement_units.
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****                                            [dpp](measurement_units.md). */
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** } SpeednPosFdbk_Handle_t;
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /**
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @brief input structure type definition for SPD_CalcAngle
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   */
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** typedef struct
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** {
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   alphabeta_t  Valfa_beta;            /*!< Voltage Components in alfa beta reference frame */
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   alphabeta_t  Ialfa_beta;            /*!< Current Components in alfa beta reference frame */
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   uint16_t     Vbus;                  /*!< Virtual Bus Voltage information */
ARM GAS  /tmp/cctuZX3B.s 			page 4


  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** } Observer_Inputs_t;
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** int32_t SPD_GetMecAngle(const SpeednPosFdbk_Handle_t *pHandle);
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** int16_t SPD_GetAvrgMecSpeedUnit(const SpeednPosFdbk_Handle_t *pHandle);
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** int16_t SPD_GetElSpeedDpp(const SpeednPosFdbk_Handle_t *pHandle);
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** bool SPD_IsMecSpeedReliable(SpeednPosFdbk_Handle_t *pHandle, const int16_t *pMecSpeedUnit);
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** int16_t SPD_GetS16Speed(const SpeednPosFdbk_Handle_t *pHandle);
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** uint8_t SPD_GetElToMecRatio(const SpeednPosFdbk_Handle_t *pHandle);
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** void SPD_SetElToMecRatio(SpeednPosFdbk_Handle_t *pHandle, uint8_t bPP);
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** 
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** /**
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @brief  Returns the last computed rotor electrical angle, expressed in [s16degrees](measurement
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @param  pHandle: handler of the current instance of the SpeednPosFdbk component.
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   * @retval int16_t rotor electrical angle.
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   */
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** static inline int16_t SPD_GetElAngle(const SpeednPosFdbk_Handle_t *pHandle)
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** {
  81              		.loc 1 119 1
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0000 80B4     		push	{r7}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 7, -4
  90 0002 83B0     		sub	sp, sp, #12
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 16
  93 0004 00AF     		add	r7, sp, #0
  94              	.LCFI2:
  95              		.cfi_def_cfa_register 7
  96 0006 7860     		str	r0, [r7, #4]
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_SPD_POS_FBK
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   return ((MC_NULL == pHandle) ? 0 : pHandle->hElAngle);
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #else
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h ****   return (pHandle->hElAngle);
  97              		.loc 1 123 18
  98 0008 7B68     		ldr	r3, [r7, #4]
  99 000a B3F90430 		ldrsh	r3, [r3, #4]
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** #endif
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h **** }
 100              		.loc 1 125 1
 101 000e 1846     		mov	r0, r3
 102 0010 0C37     		adds	r7, r7, #12
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 4
 105 0012 BD46     		mov	sp, r7
 106              	.LCFI4:
 107              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cctuZX3B.s 			page 5


 108              		@ sp needed
 109 0014 5DF8047B 		ldr	r7, [sp], #4
 110              	.LCFI5:
 111              		.cfi_restore 7
 112              		.cfi_def_cfa_offset 0
 113 0018 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE1440:
 117              		.section	.text.RUC_GetNumberOfPhases,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	RUC_GetNumberOfPhases:
 125              	.LFB1458:
 126              		.file 2 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @file    revup_ctrl.h
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief   This file contains all definitions and functions prototypes for the
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *          RevUpCtrl component of the Motor Control SDK.
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   ******************************************************************************
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @attention
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * All rights reserved.</center></h2>
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * This software component is licensed by ST under Ultimate Liberty license
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * the License. You may obtain a copy of the License at:
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *                             www.st.com/SLA0044
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   ******************************************************************************
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @ingroup RevUpCtrlFOC
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifndef REVUP_CTRL_H
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #define REVUP_CTRL_H
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef __cplusplus
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** extern "C" {
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif /* __cplusplus */
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Includes ------------------------------------------------------------------*/
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #include "mc_type.h"
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #include "speed_torq_ctrl.h"
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #include "virtual_speed_sensor.h"
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #include "sto_speed_pos_fdbk.h"
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #include "pwm_curr_fdbk.h"
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /** @addtogroup MCSDK
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @{
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
ARM GAS  /tmp/cctuZX3B.s 			page 6


  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /** @addtogroup RevUpCtrl
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @{
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /** @addtogroup RevUpCtrlFOC
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @{
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Exported constants --------------------------------------------------------*/
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief Maximum number of phases allowed for RevUp process.
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #define RUC_MAX_PHASE_NUMBER 5u
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief RevUpCtrl_PhaseParams_t structure used for phases definition
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** typedef struct
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** {
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint16_t hDurationms;       /**< @brief Duration of the RevUp phase. This parameter is expressed 
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   int16_t hFinalMecSpeedUnit; /**< @brief Mechanical speed assumed by VSS at the end of the RevUp p
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                    the unit defined by #SPEED_UNIT */
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   int16_t hFinalTorque;       /**< @brief Motor torque reference imposed by STC at the end of RevUp
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                    represents actually the Iq current expressed in digit.*/
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   void *pNext;                /**< @brief Pointer on the next phase section to proceed
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                    This parameter is NULL for the last element. */
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** } RevUpCtrl_PhaseParams_t;
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief  Handle structure of the RevUpCtrl.
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** typedef struct
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** {
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint16_t hRUCFrequencyHz;                                 /**< @brief Frequency call to main RevU
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  This parameter is equal to speed l
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   int16_t hStartingMecAngle;                                /**< @brief Starting angle of programme
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint16_t hPhaseRemainingTicks;                            /**< @brief Number of clock events rema
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  phase. */
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   int16_t hDirection;                                       /**< @brief Motor direction.
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  This parameter can be any value -1
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   RevUpCtrl_PhaseParams_t *pCurrentPhaseParams;             /**< @brief Pointer on the current RevU
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   RevUpCtrl_PhaseParams_t ParamsData[RUC_MAX_PHASE_NUMBER]; /**< @brief Start up Phases sequences u
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  controller. Up to five phases can 
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                   up. */
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint8_t bPhaseNbr;                                        /**< @brief Number of phases relative t
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  RevUp sequence. This parameter can
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  to 5 */
ARM GAS  /tmp/cctuZX3B.s 			page 7


  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint8_t bFirstAccelerationStage;                          /**< @brief Indicates the phase to star
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  acceleration.
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  At start of this stage sensor-less
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint16_t hMinStartUpValidSpeed;                           /**< @brief Minimum rotor speed require
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  startup.
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  This parameter is expressed in SPP
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint16_t hMinStartUpFlySpeed;                             /**< @brief Minimum rotor speed require
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  the fly. This parameter is express
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  defined by #SPEED_UNIT */
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   int16_t hOTFFinalRevUpCurrent;                            /**< @brief Final targetted torque for 
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint16_t hOTFSection1Duration;                            /**< @brief On-the-fly phase duration, 
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  This parameter is expressed in mil
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   bool OTFStartupEnabled;                                   /**< @brief Flag for OTF feature activa
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  Feature disabled when set to false
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint8_t bOTFRelCounter;                                   /**< @brief Counts the number of reliab
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  observer */
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   bool OTFSCLowside;                                        /**< @brief Flag to indicate status of 
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  This parameter can be true when Lo
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  otherwise set to false. */
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   bool EnteredZone1;                                        /**< @brief Flag to indicate that the m
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  has been reached. */
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint8_t bResetPLLTh;                                      /**< @brief Threshold to reset PLL duri
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint8_t bResetPLLCnt;                                     /**< @brief Counter to reset PLL during
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  threshold is reached. */
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   uint8_t bStageCnt;                                        /**< @brief Counter of executed phases.
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  This parameter can be any value fr
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   RevUpCtrl_PhaseParams_t OTFPhaseParams;                   /**< @brief RevUp phase parameter of OT
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   SpeednTorqCtrl_Handle_t *pSTC;                            /**< @brief Speed and torque controller
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****                                                                  RevUpCtrl.*/
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   VirtualSpeedSensor_Handle_t *pVSS;                        /**< @brief Virtual speed sensor object
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   STO_Handle_t *pSNSL;                                      /**< @brief STO sensor object used by O
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   PWMC_Handle_t *pPWM;                                      /**< @brief PWM object used by OTF star
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** } RevUpCtrl_Handle_t;
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Exported functions ------------------------------------------------------- */
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /*  Initializes and configures the RevUpCtrl Component */
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** void RUC_Init(RevUpCtrl_Handle_t *pHandle, SpeednTorqCtrl_Handle_t *pSTC, VirtualSpeedSensor_Handle
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****               STO_Handle_t *pSNSL, PWMC_Handle_t *pPWM);
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Initializes the internal RevUp controller state */
 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** void RUC_Clear(RevUpCtrl_Handle_t *pHandle, int16_t hMotorDirection);
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Main Rev-Up controller procedure executing overall programmed phases */
ARM GAS  /tmp/cctuZX3B.s 			page 8


 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** bool RUC_Exec(RevUpCtrl_Handle_t *pHandle);
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Main Rev-Up controller procedure that executes overall programmed phases and on-the-fly startup 
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** bool RUC_OTF_Exec(RevUpCtrl_Handle_t *pHandle);
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Checks that alignment and first acceleration stage are completed */
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** bool RUC_FirstAccelerationStageReached(RevUpCtrl_Handle_t *pHandle);
 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Allows to modify duration (ms unit) of a selected phase */
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** void RUC_SetPhaseDurationms(RevUpCtrl_Handle_t *pHandle, uint8_t bPhase, uint16_t hDurationms);
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Allows to modify targeted mechanical speed of a selected phase */
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** void RUC_SetPhaseFinalMecSpeedUnit(RevUpCtrl_Handle_t *pHandle, uint8_t bPhase, int16_t hFinalMecSp
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Allows to modify targeted the motor torque of a selected phase */
 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** void RUC_SetPhaseFinalTorque(RevUpCtrl_Handle_t *pHandle, uint8_t bPhase, int16_t hFinalTorque);
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Allows to read duration set in selected phase */
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** uint16_t RUC_GetPhaseDurationms(RevUpCtrl_Handle_t *pHandle, uint8_t bPhase);
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Allows to read targeted Rotor speed set in selected phase */
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** int16_t RUC_GetPhaseFinalMecSpeedUnit(RevUpCtrl_Handle_t *pHandle, uint8_t bPhase);
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* Allows to read targeted motor torque set in selected phase */
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** int16_t RUC_GetPhaseFinalTorque(RevUpCtrl_Handle_t *pHandle, uint8_t bPhase);
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /* @brief  It checks if this stage is used for align motor. */
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** uint8_t RUC_IsAlignStageNow(RevUpCtrl_Handle_t *pHandle);
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief  Allow to exit from Rev-Up process at the current rotor speed.
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @param  pHandle: Pointer on Handle structure of RevUp controller.
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** static inline void RUC_Stop(RevUpCtrl_Handle_t *pHandle)
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** {
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   if (MC_NULL == pHandle)
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   {
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     /* Nothing to do */
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   }
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   else
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   {
 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     VirtualSpeedSensor_Handle_t *pVSS = pHandle->pVSS;
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     pHandle->pCurrentPhaseParams = MC_NULL;
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     pHandle->hPhaseRemainingTicks = 0U;
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     VSS_SetMecAcceleration(pVSS, SPD_GetAvrgMecSpeedUnit(&pVSS->_Super), 0U);
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   }
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** }
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief  Provide current state of Rev-Up controller procedure.
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @param  pHandle: Pointer on Handle structure of RevUp controller.
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *  @retval Boolean set to true when entire Rev-Up phases have been completed.
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
ARM GAS  /tmp/cctuZX3B.s 			page 9


 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** static inline bool RUC_Completed(RevUpCtrl_Handle_t *pHandle)
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** {
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   bool retVal = false;
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   if (MC_NULL == pHandle)
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   {
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     /* Nothing to do */
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   }
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   else
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   {
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     if (MC_NULL == pHandle->pCurrentPhaseParams)
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     {
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****       retVal = true;
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     }
 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     else
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     {
 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****       /* Nothing to do */
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     }
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   }
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   return (retVal);
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** }
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief  Allow to configure a Rev-Up phase.
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @param  pHandle: Pointer on Handle structure of Rev-Up controller.
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @param  phaseNumber : number of phases relative to the programmed Rev-Up
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @param  phaseData:
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *       - RevUp phase where new motor torque shall be modified.
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *              This parameter must be a number between 0 and 6.
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *            - RevUp phase where new mechanical speed shall be modified.
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *             This parameter must be a number between 0 and 6.
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *            - New duration value required for associated phase in ms unit.
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *  @retval Boolean set to true
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** static inline bool RUC_SetPhase(RevUpCtrl_Handle_t *pHandle, uint8_t phaseNumber, RevUpCtrl_PhasePa
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** {
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   bool retValue = true;
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   if ((MC_NULL == pHandle) || (MC_NULL == phaseData))
 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   {
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     retValue = false;
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   }
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   else
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   {
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     pHandle->ParamsData[phaseNumber].hFinalTorque = phaseData->hFinalTorque;
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     pHandle->ParamsData[phaseNumber].hFinalMecSpeedUnit = phaseData->hFinalMecSpeedUnit;
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****     pHandle->ParamsData[phaseNumber].hDurationms = phaseData->hDurationms;
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   }
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   return (retValue);
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** }
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
ARM GAS  /tmp/cctuZX3B.s 			page 10


 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** /**
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @brief  Allow to read total number of programmed phases.
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   * @param  pHandle: Pointer on Handle structure of RevUp controller.
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *  @retval Returns number of phases relative to the programmed Rev-Up.
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   *
 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   */
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** 
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** static inline uint8_t RUC_GetNumberOfPhases(RevUpCtrl_Handle_t *pHandle)
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** {
 127              		.loc 2 277 1
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 8
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              	.LCFI6:
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 83B0     		sub	sp, sp, #12
 137              	.LCFI7:
 138              		.cfi_def_cfa_offset 16
 139 0004 00AF     		add	r7, sp, #0
 140              	.LCFI8:
 141              		.cfi_def_cfa_register 7
 142 0006 7860     		str	r0, [r7, #4]
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #ifdef NULL_PTR_CHECK_REV_UP_CTL
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   return ((MC_NULL == pHandle) ? 0U : (uint8_t)pHandle->bPhaseNbr);
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #else
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h ****   return ((uint8_t)pHandle->bPhaseNbr);
 143              		.loc 2 281 11
 144 0008 7B68     		ldr	r3, [r7, #4]
 145 000a 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** #endif
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h **** }
 146              		.loc 2 283 1
 147 000e 1846     		mov	r0, r3
 148 0010 0C37     		adds	r7, r7, #12
 149              	.LCFI9:
 150              		.cfi_def_cfa_offset 4
 151 0012 BD46     		mov	sp, r7
 152              	.LCFI10:
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 0014 5DF8047B 		ldr	r7, [sp], #4
 156              	.LCFI11:
 157              		.cfi_restore 7
 158              		.cfi_def_cfa_offset 0
 159 0018 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE1458:
 163              		.section	.text.STO_PLL_GetEstimatedBemfLevel,"ax",%progbits
 164              		.align	1
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	STO_PLL_GetEstimatedBemfLevel:
ARM GAS  /tmp/cctuZX3B.s 			page 11


 171              	.LFB1464:
 172              		.file 3 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @file    sto_pll_speed_pos_fdbk.h
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief   This file contains all definitions and functions prototypes for the
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *          State Observer + PLL Speed & Position Feedback component of the Motor
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *          Control SDK.
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   ******************************************************************************
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @attention
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * All rights reserved.</center></h2>
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * This software component is licensed by ST under Ultimate Liberty license
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * the License. You may obtain a copy of the License at:
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *                             www.st.com/SLA0044
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   ******************************************************************************
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @ingroup SpeednPosFdbk_STO_PLL
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifndef STO_PLL_SPEEDNPOSFDBK_H
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #define STO_PLL_SPEEDNPOSFDBK_H
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Includes ------------------------------------------------------------------*/
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #include "speed_pos_fdbk.h"
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #include "sto_speed_pos_fdbk.h"
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #include "pid_regulator.h"
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /** @addtogroup MCSDK
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @{
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /** @addtogroup SpeednPosFdbk_STO_PLL
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @{
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief Handle of the Speed and Position Feedback STO PLL component.
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** typedef struct
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** {
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   SpeednPosFdbk_Handle_t _Super;          /**< @brief Speed and torque component handler. */
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hC1;                           /*!< @brief State observer constant @f$ C_1 @f$.
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Can be computed as : @f$ (F_1 × R_s) / (L_s × Stat
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ F_1 @f$ in Hertz [**Hz**]. \n
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ R_s @f$ in Ohm @f$[\Omega]@f$. \n
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ L_s @f$ in Henry [**H**]. \n
ARM GAS  /tmp/cctuZX3B.s 			page 12


  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  State Observer Execution Rate in Hertz [**Hz**].
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hC2;                           /**< @brief State observer constant @f$ C_2 @f$.
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Can be computed as : @f$ (F_1 × K_1) / (State Obser
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ F_1 @f$ in Hertz [**Hz**]. \n 
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ K_1 @f$ being one of the two observer gains. \n
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                      observer execution rate [Hz] being K1 one
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                      of the two observer gains   */
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hC3;                 /*!< Variable containing state observer constant
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Can be computed as : @f$ (F_1 × Max Application Spe
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ F_1 @f$ in Hertz [**Hz**]. \n
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Max Application Speed in Rotation per minute [**rpm*
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Motor Bemf Constant in Voltage line to line root mea
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ L_s @f$ in Henry [**H**]. \n
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Max Measurable Current in Ampere [**A**]. \n
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  State Observer Execution Rate in Hertz [**Hz**].
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hC4;                           /**< @brief State Observer constant @f$ C_4 @f$.
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Can be computed as @f$ K_2 × Max Measurable Current
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ K_2 @f$ being one of the two observer gains. \n
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Max Measurable Current in Ampere [**A**]. \n
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Max Application Speed in Rotation per minute [**rpm*
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Motor Bemf Constant in Voltage line to line root mea
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  State Observer Execution Rate in Hertz [**Hz**]. \n
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hC5;                           /**< @brief State observer constant @f$ C_5 @f$. 
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Can be computed as @f$ F_1 × Max Measurable Voltage
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ F_1 @f$ in Hertz [**Hz**]. \n
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Max Measurable Voltage in Volt [**V**]. \n
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  @f$ L_s @f$ in Henry [**H**]. \n
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Max Measurable Current in Ampere [**A**]. \n
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  State Observer Execution Rate in Hertz [**Hz**].
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hC6;                           /**< @brief State observer constant @f$ C_6 @f$. Computed
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hF1;                           /**< @brief State observer scaling factor @f$ F_1 @f$. */
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hF2;                           /**< @brief State observer scaling factor @f$ F_2 @f$. */
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t  hF3;                           /**< @brief State observer scaling factor @f$ F_3 @f$. */
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t F3POW2;                        /**< @brief State observer scaling factor @f$ F_3 @f$ exp
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  E.g. If gain divisor is 512 the value must be 9 beca
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   PID_Handle_t PIRegulator;               /**< @brief PI regulator component handle, used for PLL i
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t Ialfa_est;                      /**< @brief Estimated @f$ I_{alpha} @f$ current. */
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t Ibeta_est;                      /**< @brief Estimated @f$ I_{beta} @f$ current. */
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t wBemf_alfa_est;                 /**< @brief Estimated Bemf alpha. */
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t wBemf_beta_est;                 /**< @brief Estimated Bemf beta. */
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t hBemf_alfa_est;                 /**< @brief Estimated Bemf alpha in int16_t format. */
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t hBemf_beta_est;                 /**< @brief Estimated Bemf beta in int16_t format. */
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t Speed_Buffer[64];               /**< @brief Estimated speed FIFO, it contains latest Spee
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t Speed_Buffer_Index;             /**< @brief Index of latest estimated speed in buffer Spe
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   bool IsSpeedReliable;                   /**< @brief Estimated speed reliability information.
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
ARM GAS  /tmp/cctuZX3B.s 			page 13


 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Updated during speed average computation in STO_PLL_
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  True if the speed measurement variance is lower than
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t ConsistencyCounter;             /**< @brief Counter of passed tests for start-up validati
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t ReliabilityCounter;             /**< @brief Counter for checking reliability of Bemf and 
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   bool IsAlgorithmConverged;              /**< @brief Observer convergence flag. */
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   bool IsBemfConsistent;                  /**< @brief Reliability of estimated Bemf flag.
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  Updated by STO_PLL_CalcAvrgMecSpeedUnit, set to true
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t Obs_Bemf_Level;                 /**< @brief Magnitude of observed Bemf level squared. */
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t Est_Bemf_Level;                 /**< @brief Magnitude of estimated Bemf Level squared bas
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   bool EnableDualCheck;                   /**< @brief Enable additional reliability check based on 
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int32_t DppBufferSum;                   /**< @brief Sum of speed buffer elements [**DPP**]. */
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int16_t SpeedBufferOldestEl;            /**< @brief Oldest element of the speed buffer. */
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t SpeedBufferSizeUnit;            /**< @brief Depth of FIFO used to calculate the average e
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Must be an integer number in range[1..64].
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t SpeedBufferSizeDpp;             /**< @brief Depth of FIFO used to calculate both average 
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Must be an integer number between 1 and Speed
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t VariancePercentage;            /**< @brief Maximum allowed variance of speed estimation.
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t SpeedValidationBand_H;          /**< @brief Upper bound below which the estimated speed i
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         despite exceeding the force stator electrical
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         during start-up. The measurement unit is 1/16
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         speed.
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t SpeedValidationBand_L;          /**< @brief Lower bound above which the estimated speed i
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         despite subceeding the force stator electrica
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         during start-up. The measurement unit is 1/16
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         speed.
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t MinStartUpValidSpeed;          /**< @brief Absolute value of minimum mechanical
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         speed required to validate the start-up.
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Expressed in the unit defined by #SPEED_UNIT.
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t StartUpConsistThreshold;        /**< @brief Number of consecutive tests on speed
 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         consistency to be passed before
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         validating the start-up.
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t BemfConsistencyCheck;           /**< @brief Degree of consistency of the observed Bemfs. 
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Must be an integer number ranging from 1 (ver
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         consistency) down to 64 (very poor consistenc
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint8_t BemfConsistencyGain;            /**< @brief Gain to be applied when checking Bemfs consis
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Default value is 64 (neutral), max value 105
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         (x1.64 amplification), min value 1 (/64 atten
 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t MaxAppPositiveMecSpeedUnit;    /**< @brief Maximum positive value of rotor speed. \n
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Expressed in the unit defined by #SPEED_UNIT.
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *         Can be x1.1 greater than max application spee
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t F1LOG;                         /**< @brief @f$ F_1 @f$ gain divisor expressed as power o
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  E.g. if gain divisor is 512 the value must be 9 beca
ARM GAS  /tmp/cctuZX3B.s 			page 14


 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t F2LOG;                         /**< @brief @f$ F_2 @f$ gain divisor expressed as power o
 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  E.g. if gain divisor is 512 the value must be 9 beca
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   uint16_t SpeedBufferSizeDppLOG;         /**< @brief bSpeedBufferSizedpp expressed as power of 2.
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             *  E.g. if gain divisor is 512 the value must be 9 beca
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                             */
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   bool ForceConvergency;                  /**< @brief Variable to force observer convergence. */
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   bool ForceConvergency2;                 /**< @brief Variable to force observer convergence. */
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   int8_t hForcedDirection;                /**< @brief Variable to force rotation direction. */
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** } STO_PLL_Handle_t;
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Exported functions ------------------------------------------------------- */
 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Initializes the handler of STate Observer (STO) PLL component */
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_Init(STO_PLL_Handle_t *pHandle);
 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Necessary empty return to implement fictitious IRQ_Handler */
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_Return(STO_PLL_Handle_t *pHandle, uint8_t flag);
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Clears state observer component by re-initializing private variables in the handler */
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_Clear(STO_PLL_Handle_t *pHandle);
 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Calculates the estimated electrical angle */
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** int16_t STO_PLL_CalcElAngle(STO_PLL_Handle_t *pHandle, Observer_Inputs_t *pInputs);
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Computes and returns the average mechanical speed */
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** bool STO_PLL_CalcAvrgMecSpeedUnit(STO_PLL_Handle_t *pHandle, int16_t *pMecSpeedUnit);
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Resets the PLL integral term during on-the-fly startup */
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_OTF_ResetPLL(STO_Handle_t *pHandle);
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Checks if the state observer algorithm converged */
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** bool STO_PLL_IsObserverConverged(STO_PLL_Handle_t *pHandle, int16_t *phForcedMecSpeedUnit);
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Computes and updates the average electrical speed */
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_CalcAvrgElSpeedDpp(STO_PLL_Handle_t *pHandle);
 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Exports estimated Bemf alpha-beta from the handler */
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** alphabeta_t STO_PLL_GetEstimatedBemf(STO_PLL_Handle_t *pHandle);
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Exports from the handler the stator current alpha-beta as estimated by state observer */
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** alphabeta_t STO_PLL_GetEstimatedCurrent(STO_PLL_Handle_t *pHandle);
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Stores in the handler the new values for observer gains */
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_SetObserverGains(STO_PLL_Handle_t *pHandle, int16_t hhC1, int16_t hhC2);
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Exports current observer gains from the handler to parameters hhC2 and hhC4 */
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_GetObserverGains(STO_PLL_Handle_t *pHandle, int16_t *phC2, int16_t *phC4);
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Exports the current PLL gains from the handler to parameters pPgain and pIgain */
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_GetPLLGains(STO_PLL_Handle_t *pHandle, int16_t *pPgain, int16_t *pIgain);
ARM GAS  /tmp/cctuZX3B.s 			page 15


 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Empty function. Could be declared to set instantaneous information on rotor mechanical angle */
 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_SetMecAngle(STO_PLL_Handle_t *pHandle, int16_t hMecAngle);
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Enables/Disables additional reliability check based on observed Bemf */
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_BemfConsistencyCheckSwitch(STO_PLL_Handle_t *pHandle, bool bSel);
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Checks if the Bemf is consistent */
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** bool STO_PLL_IsBemfConsistent(STO_PLL_Handle_t *pHandle);
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Checks the value of the variance */
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** bool STO_PLL_IsVarianceTight(const STO_Handle_t *pHandle);
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Forces the state-observer to declare convergency */
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_ForceConvergency1(STO_Handle_t *pHandle);
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Forces the state-observer to declare convergency */
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** void STO_PLL_ForceConvergency2(STO_Handle_t *pHandle);
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /* Sets the rotation direction in the handler */
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** __weak void STO_SetDirection(STO_PLL_Handle_t *pHandle, int8_t direction);
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief  Stores in @p pHandle the new values @p hPgain and @p hIgain for PLL gains.
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * 
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** static inline void STO_SetPLLGains(STO_PLL_Handle_t *pHandle, int16_t hPgain, int16_t hIgain)
 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** {
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   if (MC_NULL == pHandle)
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   {
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     /* Nothing to do */
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   }
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   else
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   {
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     PID_SetKP(&pHandle->PIRegulator, hPgain);
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     PID_SetKI(&pHandle->PIRegulator, hIgain);
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   }
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** }
 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief  Resets the PLL integral term.
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * 
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @param  pHandle: Handler of the current instance of the STO component.
 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** static inline void STO_ResetPLL(STO_PLL_Handle_t *pHandle)
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** {
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   if (MC_NULL == pHandle)
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   {
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     /* Nothing to do */
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   }
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   else
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   {
ARM GAS  /tmp/cctuZX3B.s 			page 16


 284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     PID_SetIntegralTerm(&pHandle->PIRegulator, (int32_t)0);
 286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   }
 288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** }
 290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
 292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief  Sends locking info for PLL.
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * 
 294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @param  pHandle: Handler of the current instance of the STO component.
 295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @param  hElSpeedDpp: Estimated average electrical speed expressed in dpp.
 296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @param  hElAngle: Estimated electrical angle expressed in s16Degrees.
 297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
 298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** static inline void STO_SetPLL(STO_PLL_Handle_t *pHandle, int16_t hElSpeedDpp, int16_t hElAngle)
 299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** {
 300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   if (MC_NULL == pHandle)
 302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   {
 303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     /* Nothing to do */
 304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   }
 305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   else
 306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   {
 307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     PID_SetIntegralTerm(&pHandle->PIRegulator, ((int32_t)hElSpeedDpp)
 309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****                                               * (int32_t)(PID_GetKIDivisor(&pHandle->PIRegulator)))
 310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****     pHandle->_Super.hElAngle = hElAngle;
 311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   }
 313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** }
 315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief  Exports estimated Bemf squared level stored in @p pHandle.
 318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * 
 319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @retval int32_t Magnitude of estimated Bemf Level squared based on speed measurement.
 320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
 321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** static inline int32_t STO_PLL_GetEstimatedBemfLevel(STO_PLL_Handle_t *pHandle)
 322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** {
 173              		.loc 3 322 1
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 0000 80B4     		push	{r7}
 179              	.LCFI12:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 83B0     		sub	sp, sp, #12
 183              	.LCFI13:
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI14:
 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
 323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   return ((MC_NULL == pHandle) ? 0 : pHandle->Est_Bemf_Level);
ARM GAS  /tmp/cctuZX3B.s 			page 17


 325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #else
 326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   return (pHandle->Est_Bemf_Level);
 189              		.loc 3 326 18
 190 0008 7B68     		ldr	r3, [r7, #4]
 191 000a D3F80031 		ldr	r3, [r3, #256]
 327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** }
 192              		.loc 3 328 1
 193 000e 1846     		mov	r0, r3
 194 0010 0C37     		adds	r7, r7, #12
 195              	.LCFI15:
 196              		.cfi_def_cfa_offset 4
 197 0012 BD46     		mov	sp, r7
 198              	.LCFI16:
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 0014 5DF8047B 		ldr	r7, [sp], #4
 202              	.LCFI17:
 203              		.cfi_restore 7
 204              		.cfi_def_cfa_offset 0
 205 0018 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE1464:
 209              		.section	.text.STO_PLL_GetObservedBemfLevel,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	STO_PLL_GetObservedBemfLevel:
 217              	.LFB1465:
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** 
 330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** /**
 331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @brief  Exports observed Bemf squared level stored in @p pHandle.
 332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   *
 333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   * @retval int32_t Magnitude of observed Bemf level squared.
 334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   */
 335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** static inline int32_t STO_PLL_GetObservedBemfLevel(STO_PLL_Handle_t *pHandle)
 336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** {
 218              		.loc 3 336 1
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              	.LCFI18:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI19:
 229              		.cfi_def_cfa_offset 16
 230 0004 00AF     		add	r7, sp, #0
 231              	.LCFI20:
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #ifdef NULL_PTR_CHECK_STO_PLL_SPD_POS_FDB
 338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   return ((MC_NULL == pHandle) ? 0 : pHandle->Obs_Bemf_Level);
ARM GAS  /tmp/cctuZX3B.s 			page 18


 339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #else
 340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h ****   return (pHandle->Obs_Bemf_Level);
 234              		.loc 3 340 18
 235 0008 7B68     		ldr	r3, [r7, #4]
 236 000a D3F8FC30 		ldr	r3, [r3, #252]
 341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** #endif
 342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h **** }
 237              		.loc 3 342 1
 238 000e 1846     		mov	r0, r3
 239 0010 0C37     		adds	r7, r7, #12
 240              	.LCFI21:
 241              		.cfi_def_cfa_offset 4
 242 0012 BD46     		mov	sp, r7
 243              	.LCFI22:
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0014 5DF8047B 		ldr	r7, [sp], #4
 247              	.LCFI23:
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0018 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE1465:
 254              		.section	.text.OTT_GetNominalSpeed,"ax",%progbits
 255              		.align	1
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	OTT_GetNominalSpeed:
 262              	.LFB1510:
 263              		.file 4 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @file    mp_one_touch_tuning.h
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief   This file contains all definitions and functions prototypes for
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *          for the One Touch Tuning component
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   ******************************************************************************
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @attention
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * All rights reserved.</center></h2>
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * This software component is licensed by ST under Ultimate Liberty license
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * the License. You may obtain a copy of the License at:
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *                             www.st.com/SLA0044
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   ******************************************************************************
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @ingroup OneTouchTuning
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #ifndef MP_ONE_TOUCH_TUNING_H
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #define MP_ONE_TOUCH_TUNING_H
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
ARM GAS  /tmp/cctuZX3B.s 			page 19


  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /* Includes ------------------------------------------------------------------*/
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "mc_type.h"
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "pid_regulator.h"
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "sto_pll_speed_pos_fdbk.h"
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "speed_torq_ctrl.h"
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "ramp_ext_mngr.h"
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "mc_math.h"
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** #include "arm_math.h"
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /** @addtogroup STM32_PMSM_MC_Library
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @{
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /** @addtogroup OneTouchTuning
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @{
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /** @defgroup OneTouchTuning_class_exported_types OneTouchTuning class exported types
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @{
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Public OneTouchTuning class definition
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  OneTouchTuning class parameters definition
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** typedef const struct
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   RampExtMngr_Handle_t rampExtMngrParams; /*!< Ramp manager used by SCC.*/
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fBWdef;               /*!< Default bandwidth of speed regulator.*/
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fMeasWin;             /*!< Duration of measurement window for speed and
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    current Iq, expressed in seconds.*/
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint8_t bPolesPairs;        /*!< Number of motor poles pairs.*/
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hMaxPositiveTorque;/*!< Maximum positive value of motor
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    torque. This value represents
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    actually the maximum Iq current
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    expressed in digit.*/
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fCurrtRegStabTimeSec; /*!< Current regulation stabilization time in seconds.*/
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fOttLowSpeedPerc;     /*!< OTT lower speed percentage.*/
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fOttHighSpeedPerc;    /*!< OTT higher speed percentage.*/
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fSpeedStabTimeSec;    /*!< Speed stabilization time in seconds.*/
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fTimeOutSec;          /*!< Timeout for speed stabilization.*/
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fSpeedMargin;         /*!< Speed margin percentage to validate speed ctrl.*/
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int32_t wNominalSpeed;      /*!< Nominal speed set by the user expressed in RPM.*/
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdKp;                /*!< Initial KP factor of the speed regulator to be tuned.*/
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdKi;                /*!< Initial KI factor of the speed regulator to be tuned.*/
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdKs;                /*!< Initial antiwindup factor of the speed regulator to be tuned.*/
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fRshunt;              /*!< Value of shunt resistor.*/
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fAmplificationGain;   /*!< Current sensing amplification gain.*/
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** } OTT_Params_t, *pOTT_Params_t;
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  OTT_State_t enum type definition, it lists all the possible OTT state
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****           machine states.
ARM GAS  /tmp/cctuZX3B.s 			page 20


  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** typedef enum
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_IDLE,
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_NOMINAL_SPEED_DET,
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_DYNAMICS_DET_RAMP_DOWN,
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_DYNAMICS_DET_SET_TORQUE,
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_DYNAMICS_DETECTION,
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_RAMP_DOWN_H_SPEED,
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_H_SPEED_TEST,
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_RAMP_DOWN_L_SPEED,
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_L_SPEED_TEST,
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_TORQUE_STEP,
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_END
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** } OTT_State_t;
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  OneTouchTuning class members definition
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** typedef struct
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   SpeednPosFdbk_Handle_t *pSpeedSensor;       /*!< Related speed sensor used. */
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pFOCVars_t pFOCVars;  /*!< Related structure of FOC vars.*/
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   PID_Handle_t *pPIDSpeed;           /*!< Related speed controller used. */
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   SpeednTorqCtrl_Handle_t *pSTC;            /*!< Speed and torque controller used.*/
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   RampExtMngr_Handle_t *pREMng;           /*!< Ramp manager used.*/
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hFDetIq[2];      /*!< Array used to store Iq measurements done during F estimation.*/
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fFDetOmega[2];     /*!< Array used to store Omega values during F estimation.*/
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fF;                /*!< Stores the last F estimation.*/
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fOmegaTh;          /*!< Stores the last omega threshold.*/
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fTau;              /*!< Stores the last computed mechanical time constant.*/
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fJ;                /*!< Stores the last J estimation.*/
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fBW;               /*!< Bandwidth of speed regulator.*/
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   OTT_State_t bState;      /*!< State macchine state.*/
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int32_t wIqsum;          /*!< Sum of measured Iq.*/
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int32_t wSpeed01Hzsum;   /*!< Sum of average mechanical speed.*/
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hIqCnt;         /*!< Counter for Iq acquisitions.*/
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int32_t wCnt;            /*!< 32bit counter.*/
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hSpeed01HzMean;  /*!< Mean value of mechanical speed.*/
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hSpeed01HzDelta; /*!< Delta speed between mechanical speed.*/
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hCurRegStabCnt; /*!< Stabilization counter.*/
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hJdetCnt;       /*!< Counter to measure the mechanical time constant.*/
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fEstNominalSpdRPM; /*!< Estimated nominal speed.*/
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hIqNominal;      /*!< Current measured at nominal speed steady state.*/
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hIqAcc;          /*!< Current used to accelerate the motor.*/
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hTargetLRPM;     /*!< Lower speed used for OTT.*/
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int16_t hTargetHRPM;     /*!< Higher speed used for OTT.*/
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hMeasWinTicks;  /*!< Number of ticks of the measurement window.*/
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hCurRegStabTks; /*!< Number of ticks for current regulation stabilization time.*/
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hSpeedStabTks;  /*!< Number of ticks for speed stabilization time.*/
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   bool bPI_Tuned;          /*!< True is PI is tuned, false otherwise.*/
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fKp;               /*!< Computed Kp.*/
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fKi;               /*!< Computed Ki.*/
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int8_t stabCnt;          /*!< Stabilization counter.*/
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fSpeed;            /*!< Internal target reference.*/
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hTimeOutTks;    /*!< Number of tick for timeout.*/
ARM GAS  /tmp/cctuZX3B.s 			page 21


 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint8_t bPolesPairs;     /*!< Motor poles pairs.*/
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint16_t hMaxPositiveTorque;/*!< Maximum positive value of motor
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    torque. This value represents
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    actually the maximum Iq current
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                    expressed in digit.*/
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fRPMTh;            /*!< Speed threshold for mecchanical constant
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                 time estimation.*/
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   int32_t wNominalSpeed;   /*!< Nominal speed set by the user expressed in RPM.*/
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdKp;             /*!< KP factor of the speed regulator to be tuned.*/
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdKi;             /*!< KI factor of the speed regulator to be tuned.*/
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdKs;             /*!< Antiwindup factor of the speed regulator to be tuned.*/
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdIntTerm;        /*!< Integral term of the speed regulator to be tuned.*/
 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float spdAntiWindTerm;   /*!< Antiwindup term of the speed regulator to be tuned.*/
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fKe;               /*!< Stores the last Ke estimation.*/
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pOTT_Params_t pOTT_Params_str;  /**< OTT parameters */
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** } OTT_Handle_t;
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @}
 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Initializes all the object variables, usually it has to be called
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *         once right after object creation.
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  pOTT_Init pointer to the OTT init structure.
 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none.
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** void OTT_Init(OTT_Handle_t *pHandle);
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It should be called before each motor restart. It initialize
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *         internal state of OTT.
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none.
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** void OTT_Clear(OTT_Handle_t *pHandle);
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It should be called at MF and execute the OTT algorithm.
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none.
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** void OTT_MF(OTT_Handle_t *pHandle);
 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It should be called in START_RUN state. It begins the OTT procedure.
 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none.
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** void OTT_SR(OTT_Handle_t *pHandle);
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
ARM GAS  /tmp/cctuZX3B.s 			page 22


 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Call this method before start motor to force new OTT procedure.
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none.
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** void OTT_ForceTuning(OTT_Handle_t *pHandle);
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It returns the nominal speed estimated by OTT in RPM.
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval float It returns the nominal speed in RPM estimated by OTT.
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** float OTT_fGetNominalSpeedRPM(OTT_Handle_t *pHandle);
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It should be called before each motor stop.
 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none.
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** void OTT_Stop(OTT_Handle_t *pHandle);
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It returns the nominal speed estimated by OTT.
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval uint32_t It returns the nominal speed estimated by OTT, it is a
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *         floating point number codified into a 32bit integer.
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline uint32_t OTT_GetNominalSpeed(OTT_Handle_t *pHandle)
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 264              		.loc 4 224 1
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI24:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              	.LCFI25:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI26:
 278              		.cfi_def_cfa_register 7
 279 0006 7860     		str	r0, [r7, #4]
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return MCM_floatToIntBit(pHandle->fEstNominalSpdRPM);
 280              		.loc 4 225 10
 281 0008 7B68     		ldr	r3, [r7, #4]
 282 000a D3ED147A 		vldr.32	s15, [r3, #80]
 283 000e B0EE670A 		vmov.f32	s0, s15
 284 0012 FFF7FEFF 		bl	MCM_floatToIntBit
 285 0016 0346     		mov	r3, r0
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 286              		.loc 4 226 1
 287 0018 1846     		mov	r0, r3
 288 001a 0837     		adds	r7, r7, #8
 289              	.LCFI27:
 290              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cctuZX3B.s 			page 23


 291 001c BD46     		mov	sp, r7
 292              	.LCFI28:
 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 001e 80BD     		pop	{r7, pc}
 296              		.cfi_endproc
 297              	.LFE1510:
 299              		.section	.text.OTT_GetSteps,"ax",%progbits
 300              		.align	1
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	OTT_GetSteps:
 307              	.LFB1511:
 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It returns the number of states of OTT.
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval uint8_t It returns the number of states of Selfcommissioning procedure.
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline uint8_t OTT_GetSteps(OTT_Handle_t *pHandle)
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 308              		.loc 4 234 1
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              	.LCFI29:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 83B0     		sub	sp, sp, #12
 318              	.LCFI30:
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI31:
 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return ((uint8_t)(OTT_END) + 1u);
 324              		.loc 4 235 10
 325 0008 0B23     		movs	r3, #11
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 326              		.loc 4 236 1
 327 000a 1846     		mov	r0, r3
 328 000c 0C37     		adds	r7, r7, #12
 329              	.LCFI32:
 330              		.cfi_def_cfa_offset 4
 331 000e BD46     		mov	sp, r7
 332              	.LCFI33:
 333              		.cfi_def_cfa_register 13
 334              		@ sp needed
 335 0010 5DF8047B 		ldr	r7, [sp], #4
 336              	.LCFI34:
 337              		.cfi_restore 7
 338              		.cfi_def_cfa_offset 0
 339 0014 7047     		bx	lr
ARM GAS  /tmp/cctuZX3B.s 			page 24


 340              		.cfi_endproc
 341              	.LFE1511:
 343              		.section	.text.OTT_GetState,"ax",%progbits
 344              		.align	1
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv4-sp-d16
 350              	OTT_GetState:
 351              	.LFB1512:
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It returns the state of OTT.
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval uint8_t It returns the state of OTT.
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline uint8_t OTT_GetState(OTT_Handle_t *pHandle)
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 352              		.loc 4 244 1
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 16
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              	.LCFI35:
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 85B0     		sub	sp, sp, #20
 362              	.LCFI36:
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              	.LCFI37:
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   uint8_t retVal = pHandle->bState;
 368              		.loc 4 245 11
 369 0008 7B68     		ldr	r3, [r7, #4]
 370 000a 93F83430 		ldrb	r3, [r3, #52]
 371 000e FB73     		strb	r3, [r7, #15]
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return (uint8_t)(retVal);
 372              		.loc 4 246 10
 373 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 374              		.loc 4 247 1
 375 0012 1846     		mov	r0, r3
 376 0014 1437     		adds	r7, r7, #20
 377              	.LCFI38:
 378              		.cfi_def_cfa_offset 4
 379 0016 BD46     		mov	sp, r7
 380              	.LCFI39:
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 0018 5DF8047B 		ldr	r7, [sp], #4
 384              	.LCFI40:
 385              		.cfi_restore 7
 386              		.cfi_def_cfa_offset 0
 387 001c 7047     		bx	lr
ARM GAS  /tmp/cctuZX3B.s 			page 25


 388              		.cfi_endproc
 389              	.LFE1512:
 391              		.section	.text.OTT_SetPolesPairs,"ax",%progbits
 392              		.align	1
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	OTT_SetPolesPairs:
 399              	.LFB1514:
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  It returns true if OTT procedure has been completed, false otherwise.
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval bool It returns true if OTT procedure has been completed, false otherwise.
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline bool OTT_IsSpeedPITuned(OTT_Handle_t *pHandle)
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   bool retVal = false;
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   if (pHandle->bState == OTT_END)
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   {
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****     retVal = true;
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   }
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return retVal;
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Sets the number of motor poles pairs.
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  bPP Number of motor poles pairs to be set.
 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline void OTT_SetPolesPairs(OTT_Handle_t *pHandle, uint8_t bPP)
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 400              		.loc 4 272 1
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 0000 80B4     		push	{r7}
 406              	.LCFI41:
 407              		.cfi_def_cfa_offset 4
 408              		.cfi_offset 7, -4
 409 0002 83B0     		sub	sp, sp, #12
 410              	.LCFI42:
 411              		.cfi_def_cfa_offset 16
 412 0004 00AF     		add	r7, sp, #0
 413              	.LCFI43:
 414              		.cfi_def_cfa_register 7
 415 0006 7860     		str	r0, [r7, #4]
 416 0008 0B46     		mov	r3, r1
 417 000a FB70     		strb	r3, [r7, #3]
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pHandle->bPolesPairs = bPP;
 418              		.loc 4 273 24
 419 000c 7B68     		ldr	r3, [r7, #4]
 420 000e FA78     		ldrb	r2, [r7, #3]
ARM GAS  /tmp/cctuZX3B.s 			page 26


 421 0010 83F87620 		strb	r2, [r3, #118]
 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 422              		.loc 4 274 1
 423 0014 00BF     		nop
 424 0016 0C37     		adds	r7, r7, #12
 425              	.LCFI44:
 426              		.cfi_def_cfa_offset 4
 427 0018 BD46     		mov	sp, r7
 428              	.LCFI45:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 001a 5DF8047B 		ldr	r7, [sp], #4
 432              	.LCFI46:
 433              		.cfi_restore 7
 434              		.cfi_def_cfa_offset 0
 435 001e 7047     		bx	lr
 436              		.cfi_endproc
 437              	.LFE1514:
 439              		.section	.text.OTT_SetSpeedRegulatorBandwidth,"ax",%progbits
 440              		.align	1
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	OTT_SetSpeedRegulatorBandwidth:
 447              	.LFB1516:
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Change the nominal current.
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  hNominalCurrent This value represents actually the maximum Iq current
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****             expressed in digit.
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline void OTT_SetNominalCurrent(OTT_Handle_t *pHandle, uint16_t hNominalCurrent)
 284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pHandle->hMaxPositiveTorque = hNominalCurrent;
 286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Change the speed regulator bandwidth.
 290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  fBW Current regulator bandwidth espressed in rad/s.
 292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline void OTT_SetSpeedRegulatorBandwidth(OTT_Handle_t *pHandle, float fBW)
 295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 448              		.loc 4 295 1
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              	.LCFI47:
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cctuZX3B.s 			page 27


 458              	.LCFI48:
 459              		.cfi_def_cfa_offset 16
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI49:
 462              		.cfi_def_cfa_register 7
 463 0006 7860     		str	r0, [r7, #4]
 464 0008 87ED000A 		vstr.32	s0, [r7]
 296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pHandle->fBW = fBW;
 465              		.loc 4 296 16
 466 000c 7B68     		ldr	r3, [r7, #4]
 467 000e 3A68     		ldr	r2, [r7]	@ float
 468 0010 1A63     		str	r2, [r3, #48]	@ float
 297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 469              		.loc 4 297 1
 470 0012 00BF     		nop
 471 0014 0C37     		adds	r7, r7, #12
 472              	.LCFI50:
 473              		.cfi_def_cfa_offset 4
 474 0016 BD46     		mov	sp, r7
 475              	.LCFI51:
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 0018 5DF8047B 		ldr	r7, [sp], #4
 479              	.LCFI52:
 480              		.cfi_restore 7
 481              		.cfi_def_cfa_offset 0
 482 001c 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE1516:
 486              		.section	.text.OTT_GetSpeedRegulatorBandwidth,"ax",%progbits
 487              		.align	1
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
 493              	OTT_GetSpeedRegulatorBandwidth:
 494              	.LFB1517:
 298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Get the speed regulator bandwidth.
 301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval float Current regulator bandwidth espressed in rad/s.
 303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline float OTT_GetSpeedRegulatorBandwidth(OTT_Handle_t *pHandle)
 305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 495              		.loc 4 305 1
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 8
 498              		@ frame_needed = 1, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 500 0000 80B4     		push	{r7}
 501              	.LCFI53:
 502              		.cfi_def_cfa_offset 4
 503              		.cfi_offset 7, -4
 504 0002 83B0     		sub	sp, sp, #12
 505              	.LCFI54:
 506              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cctuZX3B.s 			page 28


 507 0004 00AF     		add	r7, sp, #0
 508              	.LCFI55:
 509              		.cfi_def_cfa_register 7
 510 0006 7860     		str	r0, [r7, #4]
 306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return pHandle->fBW;
 511              		.loc 4 306 17
 512 0008 7B68     		ldr	r3, [r7, #4]
 513 000a 1B6B     		ldr	r3, [r3, #48]	@ float
 514 000c 07EE903A 		vmov	s15, r3
 307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 515              		.loc 4 307 1
 516 0010 B0EE670A 		vmov.f32	s0, s15
 517 0014 0C37     		adds	r7, r7, #12
 518              	.LCFI56:
 519              		.cfi_def_cfa_offset 4
 520 0016 BD46     		mov	sp, r7
 521              	.LCFI57:
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 0018 5DF8047B 		ldr	r7, [sp], #4
 525              	.LCFI58:
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 001c 7047     		bx	lr
 529              		.cfi_endproc
 530              	.LFE1517:
 532              		.section	.text.OTT_GetJ,"ax",%progbits
 533              		.align	1
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu fpv4-sp-d16
 539              	OTT_GetJ:
 540              	.LFB1518:
 308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Get the measured inertia of the motor.
 311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval float Measured inertia of the motor expressed in Kgm^2.
 313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline float OTT_GetJ(OTT_Handle_t *pHandle)
 315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 541              		.loc 4 315 1
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 16
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546 0000 80B4     		push	{r7}
 547              	.LCFI59:
 548              		.cfi_def_cfa_offset 4
 549              		.cfi_offset 7, -4
 550 0002 85B0     		sub	sp, sp, #20
 551              	.LCFI60:
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              	.LCFI61:
 555              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cctuZX3B.s 			page 29


 556 0006 7860     		str	r0, [r7, #4]
 316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fFact = 5.88913e-7;
 557              		.loc 4 316 9
 558 0008 124B     		ldr	r3, .L21
 559 000a FB60     		str	r3, [r7, #12]	@ float
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return (pHandle->fJ * fFact * pHandle->fKe) / (pHandle->pOTT_Params_str->fRshunt 
 560              		.loc 4 317 18
 561 000c 7B68     		ldr	r3, [r7, #4]
 562 000e 93ED0B7A 		vldr.32	s14, [r3, #44]
 563              		.loc 4 317 23
 564 0012 D7ED037A 		vldr.32	s15, [r7, #12]
 565 0016 27EE277A 		vmul.f32	s14, s14, s15
 566              		.loc 4 317 40
 567 001a 7B68     		ldr	r3, [r7, #4]
 568 001c D3ED267A 		vldr.32	s15, [r3, #152]
 569              		.loc 4 317 31
 570 0020 27EE277A 		vmul.f32	s14, s14, s15
 571              		.loc 4 317 57
 572 0024 7B68     		ldr	r3, [r7, #4]
 573 0026 D3F89C30 		ldr	r3, [r3, #156]
 574              		.loc 4 317 74
 575 002a D3ED136A 		vldr.32	s13, [r3, #76]
 318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                                 * pHandle->pOTT_Params_str->fAmplificationGain);
 576              		.loc 4 318 58
 577 002e 7B68     		ldr	r3, [r7, #4]
 578 0030 D3F89C30 		ldr	r3, [r3, #156]
 579              		.loc 4 318 75
 580 0034 D3ED147A 		vldr.32	s15, [r3, #80]
 581              		.loc 4 318 49
 582 0038 66EEA77A 		vmul.f32	s15, s13, s15
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return (pHandle->fJ * fFact * pHandle->fKe) / (pHandle->pOTT_Params_str->fRshunt 
 583              		.loc 4 317 47
 584 003c C7EE276A 		vdiv.f32	s13, s14, s15
 585 0040 F0EE667A 		vmov.f32	s15, s13
 319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 586              		.loc 4 319 1
 587 0044 B0EE670A 		vmov.f32	s0, s15
 588 0048 1437     		adds	r7, r7, #20
 589              	.LCFI62:
 590              		.cfi_def_cfa_offset 4
 591 004a BD46     		mov	sp, r7
 592              	.LCFI63:
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 004c 5DF8047B 		ldr	r7, [sp], #4
 596              	.LCFI64:
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 0050 7047     		bx	lr
 600              	.L22:
 601 0052 00BF     		.align	2
 602              	.L21:
 603 0054 CB151E35 		.word	891164107
 604              		.cfi_endproc
 605              	.LFE1518:
 607              		.section	.text.OTT_GetF,"ax",%progbits
 608              		.align	1
ARM GAS  /tmp/cctuZX3B.s 			page 30


 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	OTT_GetF:
 615              	.LFB1519:
 320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Get the measured friction of the motor.
 323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval float Measured friction of the motor expressed in Nms.
 325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline float OTT_GetF( OTT_Handle_t * pHandle )
 327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 616              		.loc 4 327 1
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 16
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI65:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 85B0     		sub	sp, sp, #20
 626              	.LCFI66:
 627              		.cfi_def_cfa_offset 24
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI67:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   float fFact = 5.88913e-7;
 632              		.loc 4 328 9
 633 0008 124B     		ldr	r3, .L25
 634 000a FB60     		str	r3, [r7, #12]	@ float
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return (pHandle->fF * fFact * pHandle->fKe) / (pHandle->pOTT_Params_str->fRshunt 
 635              		.loc 4 329 18
 636 000c 7B68     		ldr	r3, [r7, #4]
 637 000e 93ED087A 		vldr.32	s14, [r3, #32]
 638              		.loc 4 329 23
 639 0012 D7ED037A 		vldr.32	s15, [r7, #12]
 640 0016 27EE277A 		vmul.f32	s14, s14, s15
 641              		.loc 4 329 40
 642 001a 7B68     		ldr	r3, [r7, #4]
 643 001c D3ED267A 		vldr.32	s15, [r3, #152]
 644              		.loc 4 329 31
 645 0020 27EE277A 		vmul.f32	s14, s14, s15
 646              		.loc 4 329 57
 647 0024 7B68     		ldr	r3, [r7, #4]
 648 0026 D3F89C30 		ldr	r3, [r3, #156]
 649              		.loc 4 329 74
 650 002a D3ED136A 		vldr.32	s13, [r3, #76]
 330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****                                                 * pHandle->pOTT_Params_str->fAmplificationGain);
 651              		.loc 4 330 58
 652 002e 7B68     		ldr	r3, [r7, #4]
 653 0030 D3F89C30 		ldr	r3, [r3, #156]
 654              		.loc 4 330 75
 655 0034 D3ED147A 		vldr.32	s15, [r3, #80]
ARM GAS  /tmp/cctuZX3B.s 			page 31


 656              		.loc 4 330 49
 657 0038 66EEA77A 		vmul.f32	s15, s13, s15
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return (pHandle->fF * fFact * pHandle->fKe) / (pHandle->pOTT_Params_str->fRshunt 
 658              		.loc 4 329 47
 659 003c C7EE276A 		vdiv.f32	s13, s14, s15
 660 0040 F0EE667A 		vmov.f32	s15, s13
 331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 661              		.loc 4 331 1
 662 0044 B0EE670A 		vmov.f32	s0, s15
 663 0048 1437     		adds	r7, r7, #20
 664              	.LCFI68:
 665              		.cfi_def_cfa_offset 4
 666 004a BD46     		mov	sp, r7
 667              	.LCFI69:
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 004c 5DF8047B 		ldr	r7, [sp], #4
 671              	.LCFI70:
 672              		.cfi_restore 7
 673              		.cfi_def_cfa_offset 0
 674 0050 7047     		bx	lr
 675              	.L26:
 676 0052 00BF     		.align	2
 677              	.L25:
 678 0054 CB151E35 		.word	891164107
 679              		.cfi_endproc
 680              	.LFE1519:
 682              		.section	.text.OTT_IsMotorAlreadyProfiled,"ax",%progbits
 683              		.align	1
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv4-sp-d16
 689              	OTT_IsMotorAlreadyProfiled:
 690              	.LFB1522:
 332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Set the nominal speed according motor datasheet.
 335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *         This function shall be called before the start
 336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *         of the MP procedure.
 337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  wNominalSpeed Nominal speed expressed in RPM.
 339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none
 340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline void OTT_SetNominalSpeed(OTT_Handle_t *pHandle, int32_t wNominalSpeed)
 342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pHandle->wNominalSpeed = wNominalSpeed;
 344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Store the Ke measured by the SCC for the OTT purpouses.
 348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  fKe Last measured Ke.
 350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval none
 351:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 352:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline void OTT_SetKe(OTT_Handle_t *pHandle, float fKe)
 353:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
ARM GAS  /tmp/cctuZX3B.s 			page 32


 354:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   pHandle->fKe = fKe;
 355:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 356:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** 
 357:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** /**
 358:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @brief  Return true if the motor has been already profiled.
 359:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @param  this related object of class COTT.
 360:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   * @retval bool TRUE if the if the motor has been already profiled,
 361:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   *         FALSE otherwise.
 362:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   */
 363:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** static inline bool OTT_IsMotorAlreadyProfiled(OTT_Handle_t *pHandle)
 364:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** {
 691              		.loc 4 364 1
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 8
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 696 0000 80B4     		push	{r7}
 697              	.LCFI71:
 698              		.cfi_def_cfa_offset 4
 699              		.cfi_offset 7, -4
 700 0002 83B0     		sub	sp, sp, #12
 701              	.LCFI72:
 702              		.cfi_def_cfa_offset 16
 703 0004 00AF     		add	r7, sp, #0
 704              	.LCFI73:
 705              		.cfi_def_cfa_register 7
 706 0006 7860     		str	r0, [r7, #4]
 365:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h ****   return pHandle->bPI_Tuned;
 707              		.loc 4 365 17
 708 0008 7B68     		ldr	r3, [r7, #4]
 709 000a 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 366:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h **** }
 710              		.loc 4 366 1
 711 000e 1846     		mov	r0, r3
 712 0010 0C37     		adds	r7, r7, #12
 713              	.LCFI74:
 714              		.cfi_def_cfa_offset 4
 715 0012 BD46     		mov	sp, r7
 716              	.LCFI75:
 717              		.cfi_def_cfa_register 13
 718              		@ sp needed
 719 0014 5DF8047B 		ldr	r7, [sp], #4
 720              	.LCFI76:
 721              		.cfi_restore 7
 722              		.cfi_def_cfa_offset 0
 723 0018 7047     		bx	lr
 724              		.cfi_endproc
 725              	.LFE1522:
 727              		.section	.text.SCC_GetSteps,"ax",%progbits
 728              		.align	1
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv4-sp-d16
 734              	SCC_GetSteps:
 735              	.LFB1527:
 736              		.file 5 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h"
ARM GAS  /tmp/cctuZX3B.s 			page 33


   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @file    mp_self_com_ctrl.h
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief   This file contains all definitions and functions prototypes for
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *          for the SelfComCtrl component
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   ******************************************************************************
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @attention
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * All rights reserved.</center></h2>
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * This software component is licensed by ST under Ultimate Liberty license
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * the License. You may obtain a copy of the License at:
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *                             www.st.com/SLA0044
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   ******************************************************************************
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #ifndef MP_SELF_COM_CTRL_H
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define MP_SELF_COM_CTRL_H
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /* Includes ------------------------------------------------------------------*/
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "mc_type.h"
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "pwm_curr_fdbk.h"
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "ramp_ext_mngr.h"
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "bus_voltage_sensor.h"
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "speed_pos_fdbk.h"
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "virtual_speed_sensor.h"
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "open_loop.h"
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "circle_limitation.h"
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "pid_regulator.h"
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "revup_ctrl.h"
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "speed_torq_ctrl.h"
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "r_divider_bus_voltage_sensor.h"
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "sto_pll_speed_pos_fdbk.h"
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "mp_one_touch_tuning.h"
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "mp_hall_tuning.h"
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "mc_math.h"
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #include "arm_math.h"
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /** @addtogroup STM32_PMSM_MC_Library
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @{
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /** @addtogroup SelfComCtrl
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @{
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define RSCURRLEVELNUM 4u
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define EMF_BUFF_VAL 5u
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_SC_STOP 0u
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_SC_START 1u
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_HT_START 2u
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_HT_RESTART 3u
ARM GAS  /tmp/cctuZX3B.s 			page 34


  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_HT_ABORT 4u
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_HT_END 5u
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define CMD_PPD_START 6u
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** #define PB_CHARACTERIZATION_DISABLE 0
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /** @defgroup SelfComCtrl_class_private_types SelfComCtrl class private types
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @{
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  LS detection states
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** typedef enum
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   LSDET_DECAY,
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   LSDET_HOLD,
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   LSDET_RISE
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** } LSDetState_t;
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  KE detection states
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** typedef enum
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDET_REVUP,
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDET_DETECTION,
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDET_SET_OBS_PARAMS,
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDET_STABILIZEPLL,
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDET_RUN,
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDET_RESTART
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** } KEDetState_t;
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  SCC_State_t enum type definition, it lists all the possible SCC state
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****           machine states.
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** typedef enum
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_IDLE,
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_DUTY_DETECTING_PHASE,
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_ALIGN_PHASE,
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_RS_DETECTING_PHASE_RAMP,
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_RS_DETECTING_PHASE,
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_LS_DETECTING_PHASE,
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_WAIT_RESTART,
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_RESTART_SCC,
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_KE_DETECTING_PHASE,
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_PHASE_STOP,
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_CALIBRATION_END,
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_PP_DETECTION_RAMP,
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_PP_DETECTION_PHASE_RAMP,
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_PP_DETECTION_PHASE
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** } SCC_State_t;
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  KE detection speed ramp status
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
ARM GAS  /tmp/cctuZX3B.s 			page 35


 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** typedef enum
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RampIdle,    /* Ramp not started yet */
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RampOngoing, /* Ramp is ongoing */
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RampSucces,  /* The motor has been accelerated up to the target speed */
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   MotorStill,  /* Motor didn't move at all */
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   LoseControl, /* Motor start to follow acceleration but didn't reach the target speed */
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** } AccResult_t;
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  SelfComCtrl parameters definition
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** typedef struct
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RampExtMngr_Handle_t rampExtMngrParams; /*!< Ramp manager used by SCC.*/
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fRshunt;                         /*!< Value of shunt resistor.*/
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fAmplificationGain;              /*!< Current sensing amplification gain.*/
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fVbusConvFactor;                 /*!< Bus voltage conversion factor.*/
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fVbusPartitioningFactor;         /*!< Bus voltage partitioning factor.
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                               (Vmcu / Bus voltage conversion factor).*/
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fRVNK;                           /*!< Power stage calibration factor.
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                               (Measured experimentally).*/
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fRSMeasCurrLevelMax;             /*!< Maximum level of DC current used
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                               for RS measurement.*/
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hDutyRampDuration;            /*!< Duration of voltage ramp executed
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                               for the duty cycle determination
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                               stage.*/
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hAlignmentDuration;           /*!< Duration of the alignment stage.*/
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hRSDetectionDuration;         /*!< Duration of R detection stage.*/
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fLdLqRatio;                      /*!< Ld vs Lq ratio.*/
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fCurrentBW;                      /*!< Bandwidth of current regulator.*/
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint8_t bPBCharacterization;           /*!< Set to 1 for characterization
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                               of power board, otherwise false.*/
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   int32_t wNominalSpeed;                 /*!< Nominal speed set by the user expressed in RPM.*/
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hPWMFreqHz;                   /*!< PWM frequency used for the test.*/
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint8_t bFOCRepRate;                   /*!< FOC repetition rate used for the test.*/
 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fMCUPowerSupply;                 /*!< MCU Power Supply */
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float IThreshold;
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** } SCC_Params_t, *pSCC_Params_t;
 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * * @brief  Handle structure of the SelfComCtrl.
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** typedef struct
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   PWMC_Handle_t *pPWMC;          /*!< Current feedback and PWM object used.*/
 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RDivider_Handle_t *pVBS;           /*!< Bus voltage sensor used.*/
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pFOCVars_t pFOCVars;  /*!< Related structure of FOC vars.*/
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   MCI_Handle_t  *pMCI;           /*!< State machine of related MC.*/
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   VirtualSpeedSensor_Handle_t *pVSS;            /*!< VSS used.*/
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   CircleLimitation_Handle_t *pCLM;            /*!< Circle limitation used.*/
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   PID_Handle_t *pPIDIq;           /*!< Iq PID used.*/
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   PID_Handle_t *pPIDId;           /*!< Id PID used.*/
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RevUpCtrl_Handle_t *pRevupCtrl; /*!< RUC used.*/
 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   STO_PLL_Handle_t *pSTO;            /*!< State Observer used.*/
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SpeednTorqCtrl_Handle_t *pSTC;            /*!< Speed and torque controller used.*/
ARM GAS  /tmp/cctuZX3B.s 			page 36


 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   OTT_Handle_t *pOTT;
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   HT_Handle_t *pHT;
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   SCC_State_t sm_state; /*!< SCC state machine state.*/
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   RampExtMngr_Handle_t *pREMng;        /*!< Ramp manager used.*/
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hDutyMax;    /*!< Duty cycle to be applied to reach the target current.*/
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   LSDetState_t LSDetState;/*!< Internal state during LS detection. */
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   KEDetState_t KEDetState;/*!< Internal state during KE detection. */
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fTPWM;            /*!< PWM period in second. */
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fFocRate;         /*!< FOC execution rate. */
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fPP;              /*!< Motor poles pairs. */
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   int16_t hMax_voltage;   /*!< Maximum readable voltage. */
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fMax_current;     /*!< Maximum readable current. */
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fTargetCurr;      /*!< Instantaneous value of target current used for R
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                estimation.*/
 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fLastTargetCurr;  /*!< Last value of set nominal current used for R
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                estimation.*/
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fRSCurrLevelStep; /*!< Step of current used for R estimation.*/
 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fBusV;            /*!< Stores the last Vbus measurement.*/
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fRS;              /*!< Stores the last R estimation.*/
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fLS;              /*!< Stores the last L estimation.*/
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fKe;              /*!< Stores the last Ke estimation.*/
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fImaxArray[RSCURRLEVELNUM]; /*!< Array to store current measurement
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                          values for R estimation.*/
 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fVmaxArray[RSCURRLEVELNUM]; /*!< Array to store voltage measurement
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                          values for R estimation.*/
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint8_t bRSCurrLevelTests;        /*!< Counter to store I and V values for R
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                          estimation.*/
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fImax;            /*!< Stores the last current measurement done, it
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                will be used to compute the 63% for electrical
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                time constant measurement.*/
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fItau;            /*!< Stores the last computed electrical time constant.*/
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint8_t  bDutyDetTest;  /*!< Number of test done in duty determination phase.*/
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wLSTimeCnt;    /*!< Time counter for LS determination.*/
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wLSTestCnt;    /*!< Counter for LS tests. */
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fLSsum;           /*!< Sum of estimated LS for mean.*/
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fIsum;            /*!< Sum of measured current for mean.*/
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fVsum;            /*!< Sum of estimated voltage for mean.*/
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wICnt;         /*!< Counter of I and V acquired.*/
 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t index;         /*!< Counter of I and V acquired.*/
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fIqsum;           /*!< Sum of measured Iq for mean.*/
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fVqsum;           /*!< Sum of measured Vq for mean.*/
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fVdsum;           /*!< Sum of measured Vd for mean.*/
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fFesum;           /*!< Sum of electrical frequency for mean.*/
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wKeAcqCnt;     /*!< Counter of Iq, Vq and Vd acquired.*/
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fEstNominalSpdRPM;/*!< Estimated nominal speed.*/
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float k1, k2;           /*!< Coefficient computed for state observer tuning.*/
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   int8_t stabCnt;         /*!< Stabilization counter.*/
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fLdLqRatio;       /*!< Ld vs Lq ratio.*/
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   int32_t wNominalSpeed;  /*!< Nominal speed set by the user expressed in RPM.*/
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   int32_t wMaxOLSpeed;    /*!< Maximum speed that can be sustained in the startup.*/
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wAccRPMs;      /*!< Acceleration ramp for the motor expressed in
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                RMP/s.*/
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   bool accRampLock;       /*!< It become true if the motor follow the acceleration. */
 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fEm_val[EMF_BUFF_VAL]; /*!< Buffer used for linear regression (BEMF amplitude).*/
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fw_val[EMF_BUFF_VAL]; /*!< Buffer used for linear regression (Angular velocity).*/
ARM GAS  /tmp/cctuZX3B.s 			page 37


 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hVal_ctn;       /*!< Counter for the buffer used for linear regression.*/
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   bool startComputation;  /*!< It becomes true if the buffer used for linear
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                regression has been filled.*/
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hTimeOutCnt;    /*!< Time out counter to assert the motor still
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                condition during acceleration ramp.*/
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wLoseControlAtRPM; /*!< Last speed forced before loosing control during
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****                                  acceleration ramp.*/
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   AccResult_t res;        /*!< Result state of the last acceleration ramp.*/
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fLastValidI;      /*!< Last valid current measurement during SCC_DUTY_DETECTING_PHASE */
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hMFCount;      /*!< Counter of MF to be wait after OC or loose control.*/
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint16_t hMFTimeout;      /*!< Counter of MF to be wait after OC or loose control.*/
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float fCurrentBW;       /*!< Bandwidth of speed regulator.*/
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint8_t bMPOngoing;     /*!< It is 1 if MP is ongoing, 0 otherwise.*/
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t wSpeedThToValidateStartupRPM; /*!< Speed threshold to validate the startup.*/
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   float IaBuff[256];
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   bool detectBemfState;
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   bool polePairDetection; //profiler ppDetection
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   uint32_t ppDtcCnt;           /*!< Counter of pole pairs detection time.*/
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pSCC_Params_t pSCC_Params_str;  /**< SelfComCtrl parameters */
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** } SCC_Handle_t;
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Initializes all the object variables, usually it has to be called
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         once right after object creation.
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  this related object of class CSCC.
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none.
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** void SCC_Init(SCC_Handle_t *pHandle);
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It should be called before each motor restart.
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param this related object of class CSCC.
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval bool It return false if function fails to start the SCC.
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** bool SCC_Start(SCC_Handle_t *pHandle);
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It should be called before each motor stop.
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param this related object of class CSCC.
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none.
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** void SCC_Stop(SCC_Handle_t *pHandle);
 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It feed the required phase voltage to the inverter.
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  this related object of class CSCC.
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval It returns the code error 'MC_DURATION' if any, 'MC_NO_ERROR'
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         otherwise. These error codes are defined in mc_type.h
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** uint16_t SCC_SetPhaseVoltage(SCC_Handle_t *pHandle);
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Medium frequency task.
 285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  this related object of class CSCC.
ARM GAS  /tmp/cctuZX3B.s 			page 38


 286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none
 287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** void SCC_MF(SCC_Handle_t *pHandle);
 289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Check overcurrent during RL detetction and restart the procedure
 292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         with less current.
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  this related object of class CSCC.
 294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none.
 295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** void SCC_CheckOC_RL(SCC_Handle_t *pHandle);
 297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It returns the number of states of Selfcommissioning procedure.
 300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint8_t It returns the state of Selfcommissioning procedure.
 302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint8_t SCC_GetSteps(SCC_Handle_t *pHandle)
 304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 737              		.loc 5 304 1
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              	.LCFI77:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 0002 83B0     		sub	sp, sp, #12
 747              	.LCFI78:
 748              		.cfi_def_cfa_offset 16
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI79:
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
 305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return 5u;
 753              		.loc 5 305 10
 754 0008 0523     		movs	r3, #5
 306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 755              		.loc 5 306 1
 756 000a 1846     		mov	r0, r3
 757 000c 0C37     		adds	r7, r7, #12
 758              	.LCFI80:
 759              		.cfi_def_cfa_offset 4
 760 000e BD46     		mov	sp, r7
 761              	.LCFI81:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 0010 5DF8047B 		ldr	r7, [sp], #4
 765              	.LCFI82:
 766              		.cfi_restore 7
 767              		.cfi_def_cfa_offset 0
 768 0014 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE1527:
 772              		.section	.text.SCC_GetRs,"ax",%progbits
 773              		.align	1
ARM GAS  /tmp/cctuZX3B.s 			page 39


 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	SCC_GetRs:
 780              	.LFB1528:
 307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It returns the measured Rs.
 310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint32_t It returns the measured Rs, it is a floating point number
 312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         codified into a 32bit integer.
 313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint32_t SCC_GetRs(SCC_Handle_t *pHandle)
 315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 781              		.loc 5 315 1
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              	.LCFI83:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              	.LCFI84:
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              	.LCFI85:
 795              		.cfi_def_cfa_register 7
 796 0006 7860     		str	r0, [r7, #4]
 316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return MCM_floatToIntBit(pHandle->fRS);
 797              		.loc 5 316 10
 798 0008 7B68     		ldr	r3, [r7, #4]
 799 000a D3ED197A 		vldr.32	s15, [r3, #100]
 800 000e B0EE670A 		vmov.f32	s0, s15
 801 0012 FFF7FEFF 		bl	MCM_floatToIntBit
 802 0016 0346     		mov	r3, r0
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 803              		.loc 5 317 1
 804 0018 1846     		mov	r0, r3
 805 001a 0837     		adds	r7, r7, #8
 806              	.LCFI86:
 807              		.cfi_def_cfa_offset 8
 808 001c BD46     		mov	sp, r7
 809              	.LCFI87:
 810              		.cfi_def_cfa_register 13
 811              		@ sp needed
 812 001e 80BD     		pop	{r7, pc}
 813              		.cfi_endproc
 814              	.LFE1528:
 816              		.section	.text.SCC_GetLs,"ax",%progbits
 817              		.align	1
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctuZX3B.s 			page 40


 823              	SCC_GetLs:
 824              	.LFB1529:
 318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It returns the measured Ls.
 321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint32_t It returns the measured Ls, it is a floating point number
 323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         codified into a 32bit integer.
 324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint32_t SCC_GetLs(SCC_Handle_t *pHandle)
 326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 825              		.loc 5 326 1
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 8
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829 0000 80B5     		push	{r7, lr}
 830              	.LCFI88:
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 7, -8
 833              		.cfi_offset 14, -4
 834 0002 82B0     		sub	sp, sp, #8
 835              	.LCFI89:
 836              		.cfi_def_cfa_offset 16
 837 0004 00AF     		add	r7, sp, #0
 838              	.LCFI90:
 839              		.cfi_def_cfa_register 7
 840 0006 7860     		str	r0, [r7, #4]
 327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return MCM_floatToIntBit(pHandle->fLS);
 841              		.loc 5 327 10
 842 0008 7B68     		ldr	r3, [r7, #4]
 843 000a D3ED1A7A 		vldr.32	s15, [r3, #104]
 844 000e B0EE670A 		vmov.f32	s0, s15
 845 0012 FFF7FEFF 		bl	MCM_floatToIntBit
 846 0016 0346     		mov	r3, r0
 328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 847              		.loc 5 328 1
 848 0018 1846     		mov	r0, r3
 849 001a 0837     		adds	r7, r7, #8
 850              	.LCFI91:
 851              		.cfi_def_cfa_offset 8
 852 001c BD46     		mov	sp, r7
 853              	.LCFI92:
 854              		.cfi_def_cfa_register 13
 855              		@ sp needed
 856 001e 80BD     		pop	{r7, pc}
 857              		.cfi_endproc
 858              	.LFE1529:
 860              		.section	.text.SCC_GetKe,"ax",%progbits
 861              		.align	1
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu fpv4-sp-d16
 867              	SCC_GetKe:
 868              	.LFB1530:
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
ARM GAS  /tmp/cctuZX3B.s 			page 41


 331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It returns the measured Ke.
 332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint32_t It returns the measured Ke, it is a floating point number
 334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         codified into a 32bit integer.
 335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint32_t SCC_GetKe(SCC_Handle_t *pHandle)
 337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 869              		.loc 5 337 1
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873 0000 80B5     		push	{r7, lr}
 874              	.LCFI93:
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 7, -8
 877              		.cfi_offset 14, -4
 878 0002 82B0     		sub	sp, sp, #8
 879              	.LCFI94:
 880              		.cfi_def_cfa_offset 16
 881 0004 00AF     		add	r7, sp, #0
 882              	.LCFI95:
 883              		.cfi_def_cfa_register 7
 884 0006 7860     		str	r0, [r7, #4]
 338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return MCM_floatToIntBit(pHandle->fKe);
 885              		.loc 5 338 10
 886 0008 7B68     		ldr	r3, [r7, #4]
 887 000a D3ED1B7A 		vldr.32	s15, [r3, #108]
 888 000e B0EE670A 		vmov.f32	s0, s15
 889 0012 FFF7FEFF 		bl	MCM_floatToIntBit
 890 0016 0346     		mov	r3, r0
 339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 891              		.loc 5 339 1
 892 0018 1846     		mov	r0, r3
 893 001a 0837     		adds	r7, r7, #8
 894              	.LCFI96:
 895              		.cfi_def_cfa_offset 8
 896 001c BD46     		mov	sp, r7
 897              	.LCFI97:
 898              		.cfi_def_cfa_register 13
 899              		@ sp needed
 900 001e 80BD     		pop	{r7, pc}
 901              		.cfi_endproc
 902              	.LFE1530:
 904              		.section	.text.SCC_GetVbus,"ax",%progbits
 905              		.align	1
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	SCC_GetVbus:
 912              	.LFB1531:
 340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  It returns the measured VBus.
 343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint32_t It returns the measured Vbus, it is a floating point number
 345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         codified into a 32bit integer.
ARM GAS  /tmp/cctuZX3B.s 			page 42


 346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint32_t SCC_GetVbus(SCC_Handle_t *pHandle)
 348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 913              		.loc 5 348 1
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              	.LCFI98:
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 82B0     		sub	sp, sp, #8
 923              	.LCFI99:
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              	.LCFI100:
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
 349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return MCM_floatToIntBit(pHandle->fBusV);
 929              		.loc 5 349 10
 930 0008 7B68     		ldr	r3, [r7, #4]
 931 000a D3ED187A 		vldr.32	s15, [r3, #96]
 932 000e B0EE670A 		vmov.f32	s0, s15
 933 0012 FFF7FEFF 		bl	MCM_floatToIntBit
 934 0016 0346     		mov	r3, r0
 350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 935              		.loc 5 350 1
 936 0018 1846     		mov	r0, r3
 937 001a 0837     		adds	r7, r7, #8
 938              	.LCFI101:
 939              		.cfi_def_cfa_offset 8
 940 001c BD46     		mov	sp, r7
 941              	.LCFI102:
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 001e 80BD     		pop	{r7, pc}
 945              		.cfi_endproc
 946              	.LFE1531:
 948              		.section	.text.SCC_SetPolesPairs,"ax",%progbits
 949              		.align	1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	SCC_SetPolesPairs:
 956              	.LFB1532:
 351:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 352:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 353:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Sets the number of motor poles pairs.
 354:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function shall be called before the start
 355:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         of the MP procedure.
 356:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 357:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  bPP Number of motor poles pairs to be set.
 358:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none
 359:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 360:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline void SCC_SetPolesPairs(SCC_Handle_t *pHandle, uint8_t bPP)
ARM GAS  /tmp/cctuZX3B.s 			page 43


 361:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 957              		.loc 5 361 1
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 8
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961              		@ link register save eliminated.
 962 0000 80B4     		push	{r7}
 963              	.LCFI103:
 964              		.cfi_def_cfa_offset 4
 965              		.cfi_offset 7, -4
 966 0002 83B0     		sub	sp, sp, #12
 967              	.LCFI104:
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              	.LCFI105:
 971              		.cfi_def_cfa_register 7
 972 0006 7860     		str	r0, [r7, #4]
 973 0008 0B46     		mov	r3, r1
 974 000a FB70     		strb	r3, [r7, #3]
 362:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pHandle->fPP = (float)(bPP);
 975              		.loc 5 362 18
 976 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 977 000e 07EE903A 		vmov	s15, r3	@ int
 978 0012 F8EE677A 		vcvt.f32.u32	s15, s15
 979              		.loc 5 362 16
 980 0016 7B68     		ldr	r3, [r7, #4]
 981 0018 C3ED127A 		vstr.32	s15, [r3, #72]
 363:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 982              		.loc 5 363 1
 983 001c 00BF     		nop
 984 001e 0C37     		adds	r7, r7, #12
 985              	.LCFI106:
 986              		.cfi_def_cfa_offset 4
 987 0020 BD46     		mov	sp, r7
 988              	.LCFI107:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0022 5DF8047B 		ldr	r7, [sp], #4
 992              	.LCFI108:
 993              		.cfi_restore 7
 994              		.cfi_def_cfa_offset 0
 995 0026 7047     		bx	lr
 996              		.cfi_endproc
 997              	.LFE1532:
 999              		.section	.text.SCC_GetNominalCurrent,"ax",%progbits
 1000              		.align	1
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv4-sp-d16
 1006              	SCC_GetNominalCurrent:
 1007              	.LFB1533:
 364:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 365:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 366:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the nominal current used for RL determination.
 367:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 368:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval float Nominal current used for RL determination.
ARM GAS  /tmp/cctuZX3B.s 			page 44


 369:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 370:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline float SCC_GetNominalCurrent(SCC_Handle_t *pHandle)
 371:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1008              		.loc 5 371 1
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012              		@ link register save eliminated.
 1013 0000 80B4     		push	{r7}
 1014              	.LCFI109:
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 7, -4
 1017 0002 83B0     		sub	sp, sp, #12
 1018              	.LCFI110:
 1019              		.cfi_def_cfa_offset 16
 1020 0004 00AF     		add	r7, sp, #0
 1021              	.LCFI111:
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 372:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->fLastTargetCurr;
 1024              		.loc 5 372 17
 1025 0008 7B68     		ldr	r3, [r7, #4]
 1026 000a 9B6D     		ldr	r3, [r3, #88]	@ float
 1027 000c 07EE903A 		vmov	s15, r3
 373:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1028              		.loc 5 373 1
 1029 0010 B0EE670A 		vmov.f32	s0, s15
 1030 0014 0C37     		adds	r7, r7, #12
 1031              	.LCFI112:
 1032              		.cfi_def_cfa_offset 4
 1033 0016 BD46     		mov	sp, r7
 1034              	.LCFI113:
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 0018 5DF8047B 		ldr	r7, [sp], #4
 1038              	.LCFI114:
 1039              		.cfi_restore 7
 1040              		.cfi_def_cfa_offset 0
 1041 001c 7047     		bx	lr
 1042              		.cfi_endproc
 1043              	.LFE1533:
 1045              		.section	.text.SCC_SetLdLqRatio,"ax",%progbits
 1046              		.align	1
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1050              		.fpu fpv4-sp-d16
 1052              	SCC_SetLdLqRatio:
 1053              	.LFB1534:
 374:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 375:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 376:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Set the Ld/Lq ratio.
 377:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function shall be called before the start
 378:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         of the MP procedure.
 379:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 380:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  fLdLqRatio New value of Lq/Lq ratio used by MP for tuning of
 381:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****             current regulators.
ARM GAS  /tmp/cctuZX3B.s 			page 45


 382:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none
 383:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 384:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline void SCC_SetLdLqRatio(SCC_Handle_t *pHandle, float fLdLqRatio)
 385:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1054              		.loc 5 385 1
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 8
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058              		@ link register save eliminated.
 1059 0000 80B4     		push	{r7}
 1060              	.LCFI115:
 1061              		.cfi_def_cfa_offset 4
 1062              		.cfi_offset 7, -4
 1063 0002 83B0     		sub	sp, sp, #12
 1064              	.LCFI116:
 1065              		.cfi_def_cfa_offset 16
 1066 0004 00AF     		add	r7, sp, #0
 1067              	.LCFI117:
 1068              		.cfi_def_cfa_register 7
 1069 0006 7860     		str	r0, [r7, #4]
 1070 0008 87ED000A 		vstr.32	s0, [r7]
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pHandle->fLdLqRatio = fLdLqRatio;
 1071              		.loc 5 386 23
 1072 000c 7B68     		ldr	r3, [r7, #4]
 1073 000e 3A68     		ldr	r2, [r7]	@ float
 1074 0010 C3F8E020 		str	r2, [r3, #224]	@ float
 387:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1075              		.loc 5 387 1
 1076 0014 00BF     		nop
 1077 0016 0C37     		adds	r7, r7, #12
 1078              	.LCFI118:
 1079              		.cfi_def_cfa_offset 4
 1080 0018 BD46     		mov	sp, r7
 1081              	.LCFI119:
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 001a 5DF8047B 		ldr	r7, [sp], #4
 1085              	.LCFI120:
 1086              		.cfi_restore 7
 1087              		.cfi_def_cfa_offset 0
 1088 001e 7047     		bx	lr
 1089              		.cfi_endproc
 1090              	.LFE1534:
 1092              		.section	.text.SCC_GetLdLqRatio,"ax",%progbits
 1093              		.align	1
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu fpv4-sp-d16
 1099              	SCC_GetLdLqRatio:
 1100              	.LFB1535:
 388:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 389:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 390:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the Ld/Lq ratio.
 391:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 392:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval float New value of Lq/Lq ratio used by MP for tuning of
 393:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****             current regulators.
ARM GAS  /tmp/cctuZX3B.s 			page 46


 394:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 395:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline float SCC_GetLdLqRatio(SCC_Handle_t *pHandle)
 396:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1101              		.loc 5 396 1
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 8
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106 0000 80B4     		push	{r7}
 1107              	.LCFI121:
 1108              		.cfi_def_cfa_offset 4
 1109              		.cfi_offset 7, -4
 1110 0002 83B0     		sub	sp, sp, #12
 1111              	.LCFI122:
 1112              		.cfi_def_cfa_offset 16
 1113 0004 00AF     		add	r7, sp, #0
 1114              	.LCFI123:
 1115              		.cfi_def_cfa_register 7
 1116 0006 7860     		str	r0, [r7, #4]
 397:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->fLdLqRatio;
 1117              		.loc 5 397 17
 1118 0008 7B68     		ldr	r3, [r7, #4]
 1119 000a D3F8E030 		ldr	r3, [r3, #224]	@ float
 1120 000e 07EE903A 		vmov	s15, r3
 398:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1121              		.loc 5 398 1
 1122 0012 B0EE670A 		vmov.f32	s0, s15
 1123 0016 0C37     		adds	r7, r7, #12
 1124              	.LCFI124:
 1125              		.cfi_def_cfa_offset 4
 1126 0018 BD46     		mov	sp, r7
 1127              	.LCFI125:
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 001a 5DF8047B 		ldr	r7, [sp], #4
 1131              	.LCFI126:
 1132              		.cfi_restore 7
 1133              		.cfi_def_cfa_offset 0
 1134 001e 7047     		bx	lr
 1135              		.cfi_endproc
 1136              	.LFE1535:
 1138              		.section	.text.SCC_GetNominalSpeed,"ax",%progbits
 1139              		.align	1
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv4-sp-d16
 1145              	SCC_GetNominalSpeed:
 1146              	.LFB1536:
 399:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 400:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 401:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the last nominal speed set by SCC_SetNominalSpeed.
 402:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         Note that this is not the estimated one.
 403:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 404:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval int32_t Nominal speed expressed in RPM.
 405:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 406:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline int32_t SCC_GetNominalSpeed(SCC_Handle_t *pHandle)
ARM GAS  /tmp/cctuZX3B.s 			page 47


 407:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1147              		.loc 5 407 1
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152 0000 80B4     		push	{r7}
 1153              	.LCFI127:
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 7, -4
 1156 0002 83B0     		sub	sp, sp, #12
 1157              	.LCFI128:
 1158              		.cfi_def_cfa_offset 16
 1159 0004 00AF     		add	r7, sp, #0
 1160              	.LCFI129:
 1161              		.cfi_def_cfa_register 7
 1162 0006 7860     		str	r0, [r7, #4]
 408:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->wNominalSpeed;
 1163              		.loc 5 408 17
 1164 0008 7B68     		ldr	r3, [r7, #4]
 1165 000a D3F8E430 		ldr	r3, [r3, #228]
 409:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1166              		.loc 5 409 1
 1167 000e 1846     		mov	r0, r3
 1168 0010 0C37     		adds	r7, r7, #12
 1169              	.LCFI130:
 1170              		.cfi_def_cfa_offset 4
 1171 0012 BD46     		mov	sp, r7
 1172              	.LCFI131:
 1173              		.cfi_def_cfa_register 13
 1174              		@ sp needed
 1175 0014 5DF8047B 		ldr	r7, [sp], #4
 1176              	.LCFI132:
 1177              		.cfi_restore 7
 1178              		.cfi_def_cfa_offset 0
 1179 0018 7047     		bx	lr
 1180              		.cfi_endproc
 1181              	.LFE1536:
 1183              		.section	.text.SCC_GetEstMaxOLSpeed,"ax",%progbits
 1184              		.align	1
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
 1190              	SCC_GetEstMaxOLSpeed:
 1191              	.LFB1537:
 410:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 411:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 412:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the estimated maximum speed that can be
 413:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         sustained in the startup open loop acceleration.
 414:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function must be called only after that the
 415:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         MP procedure is completed successfully.
 416:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 417:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval int32_t Estimated maximum open loop speed expressed in RPM.
 418:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 419:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline int32_t SCC_GetEstMaxOLSpeed(SCC_Handle_t *pHandle)
 420:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
ARM GAS  /tmp/cctuZX3B.s 			page 48


 1192              		.loc 5 420 1
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 8
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 1197 0000 80B4     		push	{r7}
 1198              	.LCFI133:
 1199              		.cfi_def_cfa_offset 4
 1200              		.cfi_offset 7, -4
 1201 0002 83B0     		sub	sp, sp, #12
 1202              	.LCFI134:
 1203              		.cfi_def_cfa_offset 16
 1204 0004 00AF     		add	r7, sp, #0
 1205              	.LCFI135:
 1206              		.cfi_def_cfa_register 7
 1207 0006 7860     		str	r0, [r7, #4]
 421:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->wMaxOLSpeed;
 1208              		.loc 5 421 17
 1209 0008 7B68     		ldr	r3, [r7, #4]
 1210 000a D3F8E830 		ldr	r3, [r3, #232]
 422:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1211              		.loc 5 422 1
 1212 000e 1846     		mov	r0, r3
 1213 0010 0C37     		adds	r7, r7, #12
 1214              	.LCFI136:
 1215              		.cfi_def_cfa_offset 4
 1216 0012 BD46     		mov	sp, r7
 1217              	.LCFI137:
 1218              		.cfi_def_cfa_register 13
 1219              		@ sp needed
 1220 0014 5DF8047B 		ldr	r7, [sp], #4
 1221              	.LCFI138:
 1222              		.cfi_restore 7
 1223              		.cfi_def_cfa_offset 0
 1224 0018 7047     		bx	lr
 1225              		.cfi_endproc
 1226              	.LFE1537:
 1228              		.section	.text.SCC_GetEstMaxAcceleration,"ax",%progbits
 1229              		.align	1
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	SCC_GetEstMaxAcceleration:
 1236              	.LFB1538:
 423:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 424:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 425:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the estimated maximum acceleration that can be
 426:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         sustained in the startup using the estimated
 427:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         startup current. You can retrieve the max startup
 428:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         current using the SCC_GetStartupCurrentX function.
 429:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function must be called only after that the
 430:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         MP procedure is completed successfully.
 431:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 432:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval int32_t Estimated maximum open loop acceleration
 433:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         expressed in RPM/s.
 434:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
ARM GAS  /tmp/cctuZX3B.s 			page 49


 435:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline int32_t SCC_GetEstMaxAcceleration(SCC_Handle_t *pHandle)
 436:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1237              		.loc 5 436 1
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 8
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242 0000 80B4     		push	{r7}
 1243              	.LCFI139:
 1244              		.cfi_def_cfa_offset 4
 1245              		.cfi_offset 7, -4
 1246 0002 83B0     		sub	sp, sp, #12
 1247              	.LCFI140:
 1248              		.cfi_def_cfa_offset 16
 1249 0004 00AF     		add	r7, sp, #0
 1250              	.LCFI141:
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 437:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->wAccRPMs;
 1253              		.loc 5 437 17
 1254 0008 7B68     		ldr	r3, [r7, #4]
 1255 000a D3F8EC30 		ldr	r3, [r3, #236]
 438:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1256              		.loc 5 438 1
 1257 000e 1846     		mov	r0, r3
 1258 0010 0C37     		adds	r7, r7, #12
 1259              	.LCFI142:
 1260              		.cfi_def_cfa_offset 4
 1261 0012 BD46     		mov	sp, r7
 1262              	.LCFI143:
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 0014 5DF8047B 		ldr	r7, [sp], #4
 1266              	.LCFI144:
 1267              		.cfi_restore 7
 1268              		.cfi_def_cfa_offset 0
 1269 0018 7047     		bx	lr
 1270              		.cfi_endproc
 1271              	.LFE1538:
 1273              		.section	.text.SCC_GetStartupCurrentAmp,"ax",%progbits
 1274              		.align	1
 1275              		.syntax unified
 1276              		.thumb
 1277              		.thumb_func
 1278              		.fpu fpv4-sp-d16
 1280              	SCC_GetStartupCurrentAmp:
 1281              	.LFB1539:
 439:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 440:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 441:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the estimated maximum startup current that
 442:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         can be applied to the selected motor.
 443:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function must be called only after that the
 444:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         MP procedure is completed successfully.
 445:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 446:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval int16_t Estimated maximum open loop current
 447:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         expressed in Ampere.
 448:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
ARM GAS  /tmp/cctuZX3B.s 			page 50


 449:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline float SCC_GetStartupCurrentAmp(SCC_Handle_t *pHandle)
 450:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1282              		.loc 5 450 1
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 8
 1285              		@ frame_needed = 1, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 1287 0000 80B4     		push	{r7}
 1288              	.LCFI145:
 1289              		.cfi_def_cfa_offset 4
 1290              		.cfi_offset 7, -4
 1291 0002 83B0     		sub	sp, sp, #12
 1292              	.LCFI146:
 1293              		.cfi_def_cfa_offset 16
 1294 0004 00AF     		add	r7, sp, #0
 1295              	.LCFI147:
 1296              		.cfi_def_cfa_register 7
 1297 0006 7860     		str	r0, [r7, #4]
 451:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->fLastTargetCurr;
 1298              		.loc 5 451 17
 1299 0008 7B68     		ldr	r3, [r7, #4]
 1300 000a 9B6D     		ldr	r3, [r3, #88]	@ float
 1301 000c 07EE903A 		vmov	s15, r3
 452:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1302              		.loc 5 452 1
 1303 0010 B0EE670A 		vmov.f32	s0, s15
 1304 0014 0C37     		adds	r7, r7, #12
 1305              	.LCFI148:
 1306              		.cfi_def_cfa_offset 4
 1307 0016 BD46     		mov	sp, r7
 1308              	.LCFI149:
 1309              		.cfi_def_cfa_register 13
 1310              		@ sp needed
 1311 0018 5DF8047B 		ldr	r7, [sp], #4
 1312              	.LCFI150:
 1313              		.cfi_restore 7
 1314              		.cfi_def_cfa_offset 0
 1315 001c 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE1539:
 1319              		.section	.text.SCC_SetCurrentBandwidth,"ax",%progbits
 1320              		.align	1
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1324              		.fpu fpv4-sp-d16
 1326              	SCC_SetCurrentBandwidth:
 1327              	.LFB1540:
 453:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 454:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 455:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Set the bandwidth used to tune the current regulators.
 456:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function shall be called before the start
 457:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         of the MP procedure.
 458:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 459:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  fCurrentBW Bandwidth used to tune the current regulators expressed in rad/s.
 460:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval none
 461:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
ARM GAS  /tmp/cctuZX3B.s 			page 51


 462:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline void SCC_SetCurrentBandwidth(SCC_Handle_t *pHandle, float fCurrentBW)
 463:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1328              		.loc 5 463 1
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 8
 1331              		@ frame_needed = 1, uses_anonymous_args = 0
 1332              		@ link register save eliminated.
 1333 0000 80B4     		push	{r7}
 1334              	.LCFI151:
 1335              		.cfi_def_cfa_offset 4
 1336              		.cfi_offset 7, -4
 1337 0002 83B0     		sub	sp, sp, #12
 1338              	.LCFI152:
 1339              		.cfi_def_cfa_offset 16
 1340 0004 00AF     		add	r7, sp, #0
 1341              	.LCFI153:
 1342              		.cfi_def_cfa_register 7
 1343 0006 7860     		str	r0, [r7, #4]
 1344 0008 87ED000A 		vstr.32	s0, [r7]
 464:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pHandle->fCurrentBW = fCurrentBW;
 1345              		.loc 5 464 23
 1346 000c 7B68     		ldr	r3, [r7, #4]
 1347 000e 3A68     		ldr	r2, [r7]	@ float
 1348 0010 C3F83421 		str	r2, [r3, #308]	@ float
 465:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1349              		.loc 5 465 1
 1350 0014 00BF     		nop
 1351 0016 0C37     		adds	r7, r7, #12
 1352              	.LCFI154:
 1353              		.cfi_def_cfa_offset 4
 1354 0018 BD46     		mov	sp, r7
 1355              	.LCFI155:
 1356              		.cfi_def_cfa_register 13
 1357              		@ sp needed
 1358 001a 5DF8047B 		ldr	r7, [sp], #4
 1359              	.LCFI156:
 1360              		.cfi_restore 7
 1361              		.cfi_def_cfa_offset 0
 1362 001e 7047     		bx	lr
 1363              		.cfi_endproc
 1364              	.LFE1540:
 1366              		.section	.text.SCC_GetCurrentBandwidth,"ax",%progbits
 1367              		.align	1
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv4-sp-d16
 1373              	SCC_GetCurrentBandwidth:
 1374              	.LFB1541:
 466:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 467:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 468:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the bandwidth used to tune the current regulators.
 469:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 470:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         This function must be called only after that the
 471:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         MP procedure is completed successfully.
 472:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval float Bandwidth used to tune the current regulators expressed in
 473:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         rad/s.
ARM GAS  /tmp/cctuZX3B.s 			page 52


 474:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 475:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline float SCC_GetCurrentBandwidth(SCC_Handle_t *pHandle)
 476:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1375              		.loc 5 476 1
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              	.LCFI157:
 1382              		.cfi_def_cfa_offset 4
 1383              		.cfi_offset 7, -4
 1384 0002 83B0     		sub	sp, sp, #12
 1385              	.LCFI158:
 1386              		.cfi_def_cfa_offset 16
 1387 0004 00AF     		add	r7, sp, #0
 1388              	.LCFI159:
 1389              		.cfi_def_cfa_register 7
 1390 0006 7860     		str	r0, [r7, #4]
 477:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->fCurrentBW;
 1391              		.loc 5 477 17
 1392 0008 7B68     		ldr	r3, [r7, #4]
 1393 000a D3F83431 		ldr	r3, [r3, #308]	@ float
 1394 000e 07EE903A 		vmov	s15, r3
 478:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1395              		.loc 5 478 1
 1396 0012 B0EE670A 		vmov.f32	s0, s15
 1397 0016 0C37     		adds	r7, r7, #12
 1398              	.LCFI160:
 1399              		.cfi_def_cfa_offset 4
 1400 0018 BD46     		mov	sp, r7
 1401              	.LCFI161:
 1402              		.cfi_def_cfa_register 13
 1403              		@ sp needed
 1404 001a 5DF8047B 		ldr	r7, [sp], #4
 1405              	.LCFI162:
 1406              		.cfi_restore 7
 1407              		.cfi_def_cfa_offset 0
 1408 001e 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE1541:
 1412              		.section	.text.SCC_GetPWMFrequencyHz,"ax",%progbits
 1413              		.align	1
 1414              		.syntax unified
 1415              		.thumb
 1416              		.thumb_func
 1417              		.fpu fpv4-sp-d16
 1419              	SCC_GetPWMFrequencyHz:
 1420              	.LFB1542:
 479:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 480:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 481:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the PWM frequency used by the test.
 482:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 483:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint16_t PWM frequency used by the test expressed in Hz.
 484:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 485:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint16_t SCC_GetPWMFrequencyHz(SCC_Handle_t *pHandle)
 486:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
ARM GAS  /tmp/cctuZX3B.s 			page 53


 1421              		.loc 5 486 1
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 8
 1424              		@ frame_needed = 1, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
 1426 0000 80B4     		push	{r7}
 1427              	.LCFI163:
 1428              		.cfi_def_cfa_offset 4
 1429              		.cfi_offset 7, -4
 1430 0002 83B0     		sub	sp, sp, #12
 1431              	.LCFI164:
 1432              		.cfi_def_cfa_offset 16
 1433 0004 00AF     		add	r7, sp, #0
 1434              	.LCFI165:
 1435              		.cfi_def_cfa_register 7
 1436 0006 7860     		str	r0, [r7, #4]
 487:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->pSCC_Params_str->hPWMFreqHz;
 1437              		.loc 5 487 17
 1438 0008 7B68     		ldr	r3, [r7, #4]
 1439 000a D3F84835 		ldr	r3, [r3, #1352]
 1440              		.loc 5 487 34
 1441 000e B3F84830 		ldrh	r3, [r3, #72]
 488:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1442              		.loc 5 488 1
 1443 0012 1846     		mov	r0, r3
 1444 0014 0C37     		adds	r7, r7, #12
 1445              	.LCFI166:
 1446              		.cfi_def_cfa_offset 4
 1447 0016 BD46     		mov	sp, r7
 1448              	.LCFI167:
 1449              		.cfi_def_cfa_register 13
 1450              		@ sp needed
 1451 0018 5DF8047B 		ldr	r7, [sp], #4
 1452              	.LCFI168:
 1453              		.cfi_restore 7
 1454              		.cfi_def_cfa_offset 0
 1455 001c 7047     		bx	lr
 1456              		.cfi_endproc
 1457              	.LFE1542:
 1459              		.section	.text.SCC_GetFOCRepRate,"ax",%progbits
 1460              		.align	1
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu fpv4-sp-d16
 1466              	SCC_GetFOCRepRate:
 1467              	.LFB1543:
 489:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 490:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 491:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  Get the FOC repetition rate. It is the number of PWM
 492:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   *         periods elapsed before executing one FOC control cycle.
 493:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 494:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval uint8_t FOC repetition used by the test.
 495:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 496:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint8_t SCC_GetFOCRepRate(SCC_Handle_t *pHandle)
 497:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1468              		.loc 5 497 1
ARM GAS  /tmp/cctuZX3B.s 			page 54


 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 8
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472              		@ link register save eliminated.
 1473 0000 80B4     		push	{r7}
 1474              	.LCFI169:
 1475              		.cfi_def_cfa_offset 4
 1476              		.cfi_offset 7, -4
 1477 0002 83B0     		sub	sp, sp, #12
 1478              	.LCFI170:
 1479              		.cfi_def_cfa_offset 16
 1480 0004 00AF     		add	r7, sp, #0
 1481              	.LCFI171:
 1482              		.cfi_def_cfa_register 7
 1483 0006 7860     		str	r0, [r7, #4]
 498:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return pHandle->pSCC_Params_str->bFOCRepRate;
 1484              		.loc 5 498 17
 1485 0008 7B68     		ldr	r3, [r7, #4]
 1486 000a D3F84835 		ldr	r3, [r3, #1352]
 1487              		.loc 5 498 34
 1488 000e 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 499:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1489              		.loc 5 499 1
 1490 0012 1846     		mov	r0, r3
 1491 0014 0C37     		adds	r7, r7, #12
 1492              	.LCFI172:
 1493              		.cfi_def_cfa_offset 4
 1494 0016 BD46     		mov	sp, r7
 1495              	.LCFI173:
 1496              		.cfi_def_cfa_register 13
 1497              		@ sp needed
 1498 0018 5DF8047B 		ldr	r7, [sp], #4
 1499              	.LCFI174:
 1500              		.cfi_restore 7
 1501              		.cfi_def_cfa_offset 0
 1502 001c 7047     		bx	lr
 1503              		.cfi_endproc
 1504              	.LFE1543:
 1506              		.global	__aeabi_i2d
 1507              		.global	__aeabi_d2uiz
 1508              		.section	.text.SCC_GetOverVoltageThreshold,"ax",%progbits
 1509              		.align	1
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1513              		.fpu fpv4-sp-d16
 1515              	SCC_GetOverVoltageThreshold:
 1516              	.LFB1544:
 500:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 501:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 502:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 503:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  get OverVoltageThreshold
 504:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 505:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval 
 506:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 507:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint16_t SCC_GetOverVoltageThreshold(SCC_Handle_t *pHandle)
 508:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
ARM GAS  /tmp/cctuZX3B.s 			page 55


 1517              		.loc 5 508 1
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 8
 1520              		@ frame_needed = 1, uses_anonymous_args = 0
 1521 0000 80B5     		push	{r7, lr}
 1522              	.LCFI175:
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 82B0     		sub	sp, sp, #8
 1527              	.LCFI176:
 1528              		.cfi_def_cfa_offset 16
 1529 0004 00AF     		add	r7, sp, #0
 1530              	.LCFI177:
 1531              		.cfi_def_cfa_register 7
 1532 0006 7860     		str	r0, [r7, #4]
 509:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return (uint16_t) round(pHandle->pVBS->OverVoltageThreshold*pHandle->pVBS->_Super.ConversionFacto
 1533              		.loc 5 509 34
 1534 0008 7B68     		ldr	r3, [r7, #4]
 1535 000a 5B68     		ldr	r3, [r3, #4]
 1536              		.loc 5 509 40
 1537 000c 9B89     		ldrh	r3, [r3, #12]
 1538 000e 1A46     		mov	r2, r3
 1539              		.loc 5 509 70
 1540 0010 7B68     		ldr	r3, [r7, #4]
 1541 0012 5B68     		ldr	r3, [r3, #4]
 1542              		.loc 5 509 84
 1543 0014 5B88     		ldrh	r3, [r3, #2]
 1544              		.loc 5 509 62
 1545 0016 02FB03F3 		mul	r3, r2, r3
 1546              		.loc 5 509 101
 1547 001a 0B4A     		ldr	r2, .L62
 1548 001c 82FB0312 		smull	r1, r2, r2, r3
 1549 0020 1A44     		add	r2, r2, r3
 1550 0022 D213     		asrs	r2, r2, #15
 1551 0024 DB17     		asrs	r3, r3, #31
 1552 0026 D31A     		subs	r3, r2, r3
 1553              		.loc 5 509 21
 1554 0028 1846     		mov	r0, r3
 1555 002a FFF7FEFF 		bl	__aeabi_i2d
 1556 002e 0246     		mov	r2, r0
 1557 0030 0B46     		mov	r3, r1
 1558              		.loc 5 509 10
 1559 0032 1046     		mov	r0, r2
 1560 0034 1946     		mov	r1, r3
 1561 0036 FFF7FEFF 		bl	__aeabi_d2uiz
 1562 003a 0346     		mov	r3, r0
 1563 003c 9BB2     		uxth	r3, r3
 510:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1564              		.loc 5 510 1
 1565 003e 1846     		mov	r0, r3
 1566 0040 0837     		adds	r7, r7, #8
 1567              	.LCFI178:
 1568              		.cfi_def_cfa_offset 8
 1569 0042 BD46     		mov	sp, r7
 1570              	.LCFI179:
 1571              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cctuZX3B.s 			page 56


 1572              		@ sp needed
 1573 0044 80BD     		pop	{r7, pc}
 1574              	.L63:
 1575 0046 00BF     		.align	2
 1576              	.L62:
 1577 0048 01800080 		.word	-2147450879
 1578              		.cfi_endproc
 1579              	.LFE1544:
 1581              		.section	.text.SCC_GetUnderVoltageThreshold,"ax",%progbits
 1582              		.align	1
 1583              		.syntax unified
 1584              		.thumb
 1585              		.thumb_func
 1586              		.fpu fpv4-sp-d16
 1588              	SCC_GetUnderVoltageThreshold:
 1589              	.LFB1545:
 511:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 512:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 513:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  get UnderVoltageThreshold
 514:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component. 
 515:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval 
 516:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 517:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline uint16_t SCC_GetUnderVoltageThreshold(SCC_Handle_t *pHandle)
 518:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1590              		.loc 5 518 1
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 8
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594 0000 80B5     		push	{r7, lr}
 1595              	.LCFI180:
 1596              		.cfi_def_cfa_offset 8
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
 1599 0002 82B0     		sub	sp, sp, #8
 1600              	.LCFI181:
 1601              		.cfi_def_cfa_offset 16
 1602 0004 00AF     		add	r7, sp, #0
 1603              	.LCFI182:
 1604              		.cfi_def_cfa_register 7
 1605 0006 7860     		str	r0, [r7, #4]
 519:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   return (uint16_t) round(pHandle->pVBS->UnderVoltageThreshold*pHandle->pVBS->_Super.ConversionFact
 1606              		.loc 5 519 34
 1607 0008 7B68     		ldr	r3, [r7, #4]
 1608 000a 5B68     		ldr	r3, [r3, #4]
 1609              		.loc 5 519 40
 1610 000c 5B8A     		ldrh	r3, [r3, #18]
 1611 000e 1A46     		mov	r2, r3
 1612              		.loc 5 519 71
 1613 0010 7B68     		ldr	r3, [r7, #4]
 1614 0012 5B68     		ldr	r3, [r3, #4]
 1615              		.loc 5 519 85
 1616 0014 5B88     		ldrh	r3, [r3, #2]
 1617              		.loc 5 519 63
 1618 0016 02FB03F3 		mul	r3, r2, r3
 1619              		.loc 5 519 102
 1620 001a 0B4A     		ldr	r2, .L66
 1621 001c 82FB0312 		smull	r1, r2, r2, r3
ARM GAS  /tmp/cctuZX3B.s 			page 57


 1622 0020 1A44     		add	r2, r2, r3
 1623 0022 D213     		asrs	r2, r2, #15
 1624 0024 DB17     		asrs	r3, r3, #31
 1625 0026 D31A     		subs	r3, r2, r3
 1626              		.loc 5 519 21
 1627 0028 1846     		mov	r0, r3
 1628 002a FFF7FEFF 		bl	__aeabi_i2d
 1629 002e 0246     		mov	r2, r0
 1630 0030 0B46     		mov	r3, r1
 1631              		.loc 5 519 10
 1632 0032 1046     		mov	r0, r2
 1633 0034 1946     		mov	r1, r3
 1634 0036 FFF7FEFF 		bl	__aeabi_d2uiz
 1635 003a 0346     		mov	r3, r0
 1636 003c 9BB2     		uxth	r3, r3
 520:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1637              		.loc 5 520 1
 1638 003e 1846     		mov	r0, r3
 1639 0040 0837     		adds	r7, r7, #8
 1640              	.LCFI183:
 1641              		.cfi_def_cfa_offset 8
 1642 0042 BD46     		mov	sp, r7
 1643              	.LCFI184:
 1644              		.cfi_def_cfa_register 13
 1645              		@ sp needed
 1646 0044 80BD     		pop	{r7, pc}
 1647              	.L67:
 1648 0046 00BF     		.align	2
 1649              	.L66:
 1650 0048 01800080 		.word	-2147450879
 1651              		.cfi_endproc
 1652              	.LFE1545:
 1654              		.section	.text.SCC_SetOverVoltageThreshold,"ax",%progbits
 1655              		.align	1
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1659              		.fpu fpv4-sp-d16
 1661              	SCC_SetOverVoltageThreshold:
 1662              	.LFB1546:
 521:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 522:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
 523:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  set OverVoltage Threshold
 524:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component. 
 525:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param value: value of new overvoltage Threshold
 526:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval 
 527:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 528:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline void SCC_SetOverVoltageThreshold(SCC_Handle_t *pHandle,uint16_t value)
 529:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1663              		.loc 5 529 1
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 8
 1666              		@ frame_needed = 1, uses_anonymous_args = 0
 1667              		@ link register save eliminated.
 1668 0000 80B4     		push	{r7}
 1669              	.LCFI185:
 1670              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cctuZX3B.s 			page 58


 1671              		.cfi_offset 7, -4
 1672 0002 83B0     		sub	sp, sp, #12
 1673              	.LCFI186:
 1674              		.cfi_def_cfa_offset 16
 1675 0004 00AF     		add	r7, sp, #0
 1676              	.LCFI187:
 1677              		.cfi_def_cfa_register 7
 1678 0006 7860     		str	r0, [r7, #4]
 1679 0008 0B46     		mov	r3, r1
 1680 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 530:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pHandle->pVBS->OverVoltageThreshold = (uint16_t)((value*65535)/pHandle->pVBS->_Super.ConversionFa
 1681              		.loc 5 530 58
 1682 000c 7A88     		ldrh	r2, [r7, #2]
 1683 000e 1346     		mov	r3, r2
 1684 0010 1B04     		lsls	r3, r3, #16
 1685 0012 9B1A     		subs	r3, r3, r2
 1686              		.loc 5 530 73
 1687 0014 7A68     		ldr	r2, [r7, #4]
 1688 0016 5268     		ldr	r2, [r2, #4]
 1689              		.loc 5 530 87
 1690 0018 5288     		ldrh	r2, [r2, #2]
 1691              		.loc 5 530 65
 1692 001a 93FBF2F2 		sdiv	r2, r3, r2
 1693              		.loc 5 530 10
 1694 001e 7B68     		ldr	r3, [r7, #4]
 1695 0020 5B68     		ldr	r3, [r3, #4]
 1696              		.loc 5 530 41
 1697 0022 92B2     		uxth	r2, r2
 1698              		.loc 5 530 39
 1699 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 531:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1700              		.loc 5 531 1
 1701 0026 00BF     		nop
 1702 0028 0C37     		adds	r7, r7, #12
 1703              	.LCFI188:
 1704              		.cfi_def_cfa_offset 4
 1705 002a BD46     		mov	sp, r7
 1706              	.LCFI189:
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 002c 5DF8047B 		ldr	r7, [sp], #4
 1710              	.LCFI190:
 1711              		.cfi_restore 7
 1712              		.cfi_def_cfa_offset 0
 1713 0030 7047     		bx	lr
 1714              		.cfi_endproc
 1715              	.LFE1546:
 1717              		.section	.text.SCC_SetUnderVoltageThreshold,"ax",%progbits
 1718              		.align	1
 1719              		.syntax unified
 1720              		.thumb
 1721              		.thumb_func
 1722              		.fpu fpv4-sp-d16
 1724              	SCC_SetUnderVoltageThreshold:
 1725              	.LFB1547:
 532:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** 
 533:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** /**
ARM GAS  /tmp/cctuZX3B.s 			page 59


 534:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @brief  set UnderVoltage Threshold
 535:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param  pHandle: handler of SCC component.
 536:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @param value: value of new UnderVoltage Threshold 
 537:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   * @retval 
 538:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   */
 539:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** static inline void SCC_SetUnderVoltageThreshold(SCC_Handle_t *pHandle,uint16_t value)
 540:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** {
 1726              		.loc 5 540 1
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 8
 1729              		@ frame_needed = 1, uses_anonymous_args = 0
 1730              		@ link register save eliminated.
 1731 0000 80B4     		push	{r7}
 1732              	.LCFI191:
 1733              		.cfi_def_cfa_offset 4
 1734              		.cfi_offset 7, -4
 1735 0002 83B0     		sub	sp, sp, #12
 1736              	.LCFI192:
 1737              		.cfi_def_cfa_offset 16
 1738 0004 00AF     		add	r7, sp, #0
 1739              	.LCFI193:
 1740              		.cfi_def_cfa_register 7
 1741 0006 7860     		str	r0, [r7, #4]
 1742 0008 0B46     		mov	r3, r1
 1743 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 541:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h ****   pHandle->pVBS->UnderVoltageThreshold = (uint16_t)((value*65535)/pHandle->pVBS->_Super.ConversionF
 1744              		.loc 5 541 59
 1745 000c 7A88     		ldrh	r2, [r7, #2]
 1746 000e 1346     		mov	r3, r2
 1747 0010 1B04     		lsls	r3, r3, #16
 1748 0012 9B1A     		subs	r3, r3, r2
 1749              		.loc 5 541 74
 1750 0014 7A68     		ldr	r2, [r7, #4]
 1751 0016 5268     		ldr	r2, [r2, #4]
 1752              		.loc 5 541 88
 1753 0018 5288     		ldrh	r2, [r2, #2]
 1754              		.loc 5 541 66
 1755 001a 93FBF2F2 		sdiv	r2, r3, r2
 1756              		.loc 5 541 10
 1757 001e 7B68     		ldr	r3, [r7, #4]
 1758 0020 5B68     		ldr	r3, [r3, #4]
 1759              		.loc 5 541 42
 1760 0022 92B2     		uxth	r2, r2
 1761              		.loc 5 541 40
 1762 0024 5A82     		strh	r2, [r3, #18]	@ movhi
 542:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h **** }
 1763              		.loc 5 542 1
 1764 0026 00BF     		nop
 1765 0028 0C37     		adds	r7, r7, #12
 1766              	.LCFI194:
 1767              		.cfi_def_cfa_offset 4
 1768 002a BD46     		mov	sp, r7
 1769              	.LCFI195:
 1770              		.cfi_def_cfa_register 13
 1771              		@ sp needed
 1772 002c 5DF8047B 		ldr	r7, [sp], #4
 1773              	.LCFI196:
ARM GAS  /tmp/cctuZX3B.s 			page 60


 1774              		.cfi_restore 7
 1775              		.cfi_def_cfa_offset 0
 1776 0030 7047     		bx	lr
 1777              		.cfi_endproc
 1778              	.LFE1547:
 1780              		.section	.text.RI_SetRegisterGlobal,"ax",%progbits
 1781              		.align	1
 1782              		.global	RI_SetRegisterGlobal
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1786              		.fpu fpv4-sp-d16
 1788              	RI_SetRegisterGlobal:
 1789              	.LFB1713:
 1790              		.file 6 "Src/register_interface.c"
   1:Src/register_interface.c **** 
   2:Src/register_interface.c **** /**
   3:Src/register_interface.c ****   ******************************************************************************
   4:Src/register_interface.c ****   * @file    register_interface.c
   5:Src/register_interface.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/register_interface.c ****   * @brief   This file provides firmware functions that implement the register access for the MCP p
   7:Src/register_interface.c ****   *
   8:Src/register_interface.c ****   *
   9:Src/register_interface.c ****   ******************************************************************************
  10:Src/register_interface.c ****   * @attention
  11:Src/register_interface.c ****   *
  12:Src/register_interface.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  13:Src/register_interface.c ****   * All rights reserved.</center></h2>
  14:Src/register_interface.c ****   *
  15:Src/register_interface.c ****   * This software component is licensed by ST under Ultimate Liberty license
  16:Src/register_interface.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  17:Src/register_interface.c ****   * the License. You may obtain a copy of the License at:
  18:Src/register_interface.c ****   *                             www.st.com/SLA0044
  19:Src/register_interface.c ****   *
  20:Src/register_interface.c ****   ******************************************************************************
  21:Src/register_interface.c ****   */
  22:Src/register_interface.c **** 
  23:Src/register_interface.c **** #include "mc_type.h"
  24:Src/register_interface.c **** #include "string.h"
  25:Src/register_interface.c **** #include "register_interface.h"
  26:Src/register_interface.c **** #include "mc_config.h"
  27:Src/register_interface.c **** #include "mcp.h"
  28:Src/register_interface.c **** #include "mcp_config.h"
  29:Src/register_interface.c **** #include "mcpa.h"
  30:Src/register_interface.c **** #include "mp_one_touch_tuning.h"
  31:Src/register_interface.c **** #include "mp_self_com_ctrl.h"
  32:Src/register_interface.c **** #include "mc_configuration_registers.h"
  33:Src/register_interface.c **** 
  34:Src/register_interface.c **** uint8_t RI_SetRegisterGlobal(uint16_t regID, uint8_t typeID, uint8_t *data, uint16_t *size, int16_t
  35:Src/register_interface.c **** {
 1791              		.loc 6 35 1
 1792              		.cfi_startproc
 1793              		@ args = 4, pretend = 0, frame = 24
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
 1796 0000 80B4     		push	{r7}
 1797              	.LCFI197:
ARM GAS  /tmp/cctuZX3B.s 			page 61


 1798              		.cfi_def_cfa_offset 4
 1799              		.cfi_offset 7, -4
 1800 0002 87B0     		sub	sp, sp, #28
 1801              	.LCFI198:
 1802              		.cfi_def_cfa_offset 32
 1803 0004 00AF     		add	r7, sp, #0
 1804              	.LCFI199:
 1805              		.cfi_def_cfa_register 7
 1806 0006 BA60     		str	r2, [r7, #8]
 1807 0008 7B60     		str	r3, [r7, #4]
 1808 000a 0346     		mov	r3, r0	@ movhi
 1809 000c FB81     		strh	r3, [r7, #14]	@ movhi
 1810 000e 0B46     		mov	r3, r1
 1811 0010 7B73     		strb	r3, [r7, #13]
  36:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
 1812              		.loc 6 36 11
 1813 0012 0023     		movs	r3, #0
 1814 0014 FB75     		strb	r3, [r7, #23]
  37:Src/register_interface.c ****   switch(typeID)
 1815              		.loc 6 37 3
 1816 0016 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1817 0018 282B     		cmp	r3, #40
 1818 001a 4AD0     		beq	.L71
 1819 001c 282B     		cmp	r3, #40
 1820 001e 73DC     		bgt	.L72
 1821 0020 182B     		cmp	r3, #24
 1822 0022 39D0     		beq	.L73
 1823 0024 182B     		cmp	r3, #24
 1824 0026 6FDC     		bgt	.L72
 1825 0028 082B     		cmp	r3, #8
 1826 002a 02D0     		beq	.L74
 1827 002c 102B     		cmp	r3, #16
 1828 002e 0DD0     		beq	.L75
 1829 0030 6AE0     		b	.L72
 1830              	.L74:
  38:Src/register_interface.c ****   {
  39:Src/register_interface.c ****     case TYPE_DATA_8BIT:
  40:Src/register_interface.c ****     {
  41:Src/register_interface.c ****       switch (regID)
 1831              		.loc 6 41 7
 1832 0032 FB89     		ldrh	r3, [r7, #14]
 1833 0034 482B     		cmp	r3, #72
 1834 0036 02D1     		bne	.L76
  42:Src/register_interface.c ****       {
  43:Src/register_interface.c ****         case MC_REG_STATUS:
  44:Src/register_interface.c ****         {
  45:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 1835              		.loc 6 45 18
 1836 0038 0423     		movs	r3, #4
 1837 003a FB75     		strb	r3, [r7, #23]
  46:Src/register_interface.c ****           break;
 1838              		.loc 6 46 11
 1839 003c 02E0     		b	.L77
 1840              	.L76:
  47:Src/register_interface.c ****         }
  48:Src/register_interface.c **** 
  49:Src/register_interface.c ****         default:
ARM GAS  /tmp/cctuZX3B.s 			page 62


  50:Src/register_interface.c ****         {
  51:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 1841              		.loc 6 51 18
 1842 003e 0523     		movs	r3, #5
 1843 0040 FB75     		strb	r3, [r7, #23]
  52:Src/register_interface.c ****           break;
 1844              		.loc 6 52 11
 1845 0042 00BF     		nop
 1846              	.L77:
  53:Src/register_interface.c ****         }
  54:Src/register_interface.c ****       }
  55:Src/register_interface.c ****       *size = 1;
 1847              		.loc 6 55 13
 1848 0044 7B68     		ldr	r3, [r7, #4]
 1849 0046 0122     		movs	r2, #1
 1850 0048 1A80     		strh	r2, [r3]	@ movhi
  56:Src/register_interface.c ****       break;
 1851              		.loc 6 56 7
 1852 004a 63E0     		b	.L78
 1853              	.L75:
  57:Src/register_interface.c ****     }
  58:Src/register_interface.c **** 
  59:Src/register_interface.c ****     case TYPE_DATA_16BIT:
  60:Src/register_interface.c ****     {
  61:Src/register_interface.c ****       switch (regID)
 1854              		.loc 6 61 7
 1855 004c FB89     		ldrh	r3, [r7, #14]
 1856 004e 41F65832 		movw	r2, #7000
 1857 0052 9342     		cmp	r3, r2
 1858 0054 15D0     		beq	.L79
 1859 0056 41F65832 		movw	r2, #7000
 1860 005a 9342     		cmp	r3, r2
 1861 005c 14DC     		bgt	.L80
 1862 005e B3F5696F 		cmp	r3, #3728
 1863 0062 14D0     		beq	.L90
 1864 0064 B3F5696F 		cmp	r3, #3728
 1865 0068 0EDC     		bgt	.L80
 1866 006a B3F5656F 		cmp	r3, #3664
 1867 006e 0ED0     		beq	.L90
 1868 0070 B3F5656F 		cmp	r3, #3664
 1869 0074 08DC     		bgt	.L80
 1870 0076 B3F5B26F 		cmp	r3, #1424
 1871 007a 02D0     		beq	.L79
 1872 007c B3F5BA6F 		cmp	r3, #1488
 1873 0080 02D1     		bne	.L80
 1874              	.L79:
  62:Src/register_interface.c ****       {
  63:Src/register_interface.c **** 
  64:Src/register_interface.c ****         case MC_REG_BUS_VOLTAGE:
  65:Src/register_interface.c ****         case MC_REG_HEATS_TEMP:
  66:Src/register_interface.c ****         case MC_REG_MOTOR_POWER:
  67:Src/register_interface.c ****         {
  68:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 1875              		.loc 6 68 18
 1876 0082 0423     		movs	r3, #4
 1877 0084 FB75     		strb	r3, [r7, #23]
  69:Src/register_interface.c ****           break;
ARM GAS  /tmp/cctuZX3B.s 			page 63


 1878              		.loc 6 69 11
 1879 0086 03E0     		b	.L82
 1880              	.L80:
  70:Src/register_interface.c ****         }
  71:Src/register_interface.c **** 
  72:Src/register_interface.c ****         case MC_REG_DAC_USER1:
  73:Src/register_interface.c ****         case MC_REG_DAC_USER2:
  74:Src/register_interface.c ****         break;
  75:Src/register_interface.c **** 
  76:Src/register_interface.c ****         default:
  77:Src/register_interface.c ****         {
  78:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 1881              		.loc 6 78 18
 1882 0088 0523     		movs	r3, #5
 1883 008a FB75     		strb	r3, [r7, #23]
  79:Src/register_interface.c ****           break;
 1884              		.loc 6 79 11
 1885 008c 00E0     		b	.L82
 1886              	.L90:
  74:Src/register_interface.c **** 
 1887              		.loc 6 74 9
 1888 008e 00BF     		nop
 1889              	.L82:
  80:Src/register_interface.c ****         }
  81:Src/register_interface.c ****       }
  82:Src/register_interface.c ****       *size = 2;
 1890              		.loc 6 82 13
 1891 0090 7B68     		ldr	r3, [r7, #4]
 1892 0092 0222     		movs	r2, #2
 1893 0094 1A80     		strh	r2, [r3]	@ movhi
  83:Src/register_interface.c ****       break;
 1894              		.loc 6 83 7
 1895 0096 3DE0     		b	.L78
 1896              	.L73:
  84:Src/register_interface.c ****     }
  85:Src/register_interface.c **** 
  86:Src/register_interface.c ****     case TYPE_DATA_32BIT:
  87:Src/register_interface.c ****     {
  88:Src/register_interface.c **** 
  89:Src/register_interface.c ****       switch (regID)
 1897              		.loc 6 89 7
 1898 0098 FB89     		ldrh	r3, [r7, #14]
 1899 009a 182B     		cmp	r3, #24
 1900 009c 02D1     		bne	.L83
  90:Src/register_interface.c ****       {
  91:Src/register_interface.c ****         case MC_REG_FAULTS_FLAGS:
  92:Src/register_interface.c ****         {
  93:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 1901              		.loc 6 93 18
 1902 009e 0423     		movs	r3, #4
 1903 00a0 FB75     		strb	r3, [r7, #23]
  94:Src/register_interface.c ****           break;
 1904              		.loc 6 94 11
 1905 00a2 02E0     		b	.L84
 1906              	.L83:
  95:Src/register_interface.c ****         }
  96:Src/register_interface.c **** 
ARM GAS  /tmp/cctuZX3B.s 			page 64


  97:Src/register_interface.c ****         default:
  98:Src/register_interface.c ****         {
  99:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 1907              		.loc 6 99 18
 1908 00a4 0523     		movs	r3, #5
 1909 00a6 FB75     		strb	r3, [r7, #23]
 100:Src/register_interface.c ****           break;
 1910              		.loc 6 100 11
 1911 00a8 00BF     		nop
 1912              	.L84:
 101:Src/register_interface.c ****         }
 102:Src/register_interface.c ****       }
 103:Src/register_interface.c ****       *size = 4;
 1913              		.loc 6 103 13
 1914 00aa 7B68     		ldr	r3, [r7, #4]
 1915 00ac 0422     		movs	r2, #4
 1916 00ae 1A80     		strh	r2, [r3]	@ movhi
 104:Src/register_interface.c ****       break;
 1917              		.loc 6 104 7
 1918 00b0 30E0     		b	.L78
 1919              	.L71:
 1920              	.LBB2:
 105:Src/register_interface.c ****     }
 106:Src/register_interface.c **** 
 107:Src/register_interface.c ****     case TYPE_DATA_RAW:
 108:Src/register_interface.c ****     {
 109:Src/register_interface.c ****       uint16_t rawSize = *(uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 1921              		.loc 6 109 16
 1922 00b2 BB68     		ldr	r3, [r7, #8]
 1923 00b4 1B88     		ldrh	r3, [r3]	@ movhi
 1924 00b6 BB82     		strh	r3, [r7, #20]	@ movhi
 110:Src/register_interface.c ****       /* The size consumed by the structure is the structure size + 2 bytes used to store the size 
 111:Src/register_interface.c ****       *size = rawSize + 2U;
 1925              		.loc 6 111 23
 1926 00b8 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1927 00ba 0233     		adds	r3, r3, #2
 1928 00bc 9AB2     		uxth	r2, r3
 1929              		.loc 6 111 13
 1930 00be 7B68     		ldr	r3, [r7, #4]
 1931 00c0 1A80     		strh	r2, [r3]	@ movhi
 112:Src/register_interface.c ****       uint8_t *rawData = data; /* rawData points to the first data (after size extraction) */
 1932              		.loc 6 112 16
 1933 00c2 BB68     		ldr	r3, [r7, #8]
 1934 00c4 3B61     		str	r3, [r7, #16]
 113:Src/register_interface.c ****       rawData++;
 1935              		.loc 6 113 14
 1936 00c6 3B69     		ldr	r3, [r7, #16]
 1937 00c8 0133     		adds	r3, r3, #1
 1938 00ca 3B61     		str	r3, [r7, #16]
 114:Src/register_interface.c ****       rawData++;
 1939              		.loc 6 114 14
 1940 00cc 3B69     		ldr	r3, [r7, #16]
 1941 00ce 0133     		adds	r3, r3, #1
 1942 00d0 3B61     		str	r3, [r7, #16]
 115:Src/register_interface.c **** 
 116:Src/register_interface.c ****       if (*size > (uint16_t)dataAvailable)
 1943              		.loc 6 116 11
ARM GAS  /tmp/cctuZX3B.s 			page 65


 1944 00d2 7B68     		ldr	r3, [r7, #4]
 1945 00d4 1A88     		ldrh	r2, [r3]
 1946              		.loc 6 116 17
 1947 00d6 3B8C     		ldrh	r3, [r7, #32]
 1948              		.loc 6 116 10
 1949 00d8 9A42     		cmp	r2, r3
 1950 00da 05D9     		bls	.L85
 117:Src/register_interface.c ****       {
 118:Src/register_interface.c ****         /* The decoded size of the raw structure can not match with transmitted buffer, error in bu
 119:Src/register_interface.c ****            construction */
 120:Src/register_interface.c ****         *size = 0;
 1951              		.loc 6 120 15
 1952 00dc 7B68     		ldr	r3, [r7, #4]
 1953 00de 0022     		movs	r2, #0
 1954 00e0 1A80     		strh	r2, [r3]	@ movhi
 121:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_RAW_FORMAT; /* This error stop the parsing of the CMD buffer */
 1955              		.loc 6 121 16
 1956 00e2 0A23     		movs	r3, #10
 1957 00e4 FB75     		strb	r3, [r7, #23]
 122:Src/register_interface.c ****       }
 123:Src/register_interface.c ****       else
 124:Src/register_interface.c ****       {
 125:Src/register_interface.c ****         switch (regID)
 126:Src/register_interface.c ****         {
 127:Src/register_interface.c ****           case MC_REG_APPLICATION_CONFIG:
 128:Src/register_interface.c ****           case MC_REG_GLOBAL_CONFIG:
 129:Src/register_interface.c ****           case MC_REG_FOCFW_CONFIG:
 130:Src/register_interface.c ****           {
 131:Src/register_interface.c ****             retVal = MCP_ERROR_RO_REG;
 132:Src/register_interface.c ****             break;
 133:Src/register_interface.c ****           }
 134:Src/register_interface.c **** 
 135:Src/register_interface.c ****           default:
 136:Src/register_interface.c ****           {
 137:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 138:Src/register_interface.c ****             break;
 139:Src/register_interface.c ****           }
 140:Src/register_interface.c ****         }
 141:Src/register_interface.c **** 
 142:Src/register_interface.c ****       }
 143:Src/register_interface.c ****       break;
 1958              		.loc 6 143 7
 1959 00e6 15E0     		b	.L78
 1960              	.L85:
 125:Src/register_interface.c ****         {
 1961              		.loc 6 125 9
 1962 00e8 FB89     		ldrh	r3, [r7, #14]
 1963 00ea E82B     		cmp	r3, #232
 1964 00ec 05D0     		beq	.L87
 1965 00ee E82B     		cmp	r3, #232
 1966 00f0 06DC     		bgt	.L88
 1967 00f2 282B     		cmp	r3, #40
 1968 00f4 01D0     		beq	.L87
 1969 00f6 A82B     		cmp	r3, #168
 1970 00f8 02D1     		bne	.L88
 1971              	.L87:
 131:Src/register_interface.c ****             break;
ARM GAS  /tmp/cctuZX3B.s 			page 66


 1972              		.loc 6 131 20
 1973 00fa 0423     		movs	r3, #4
 1974 00fc FB75     		strb	r3, [r7, #23]
 132:Src/register_interface.c ****           }
 1975              		.loc 6 132 13
 1976 00fe 02E0     		b	.L86
 1977              	.L88:
 137:Src/register_interface.c ****             break;
 1978              		.loc 6 137 20
 1979 0100 0523     		movs	r3, #5
 1980 0102 FB75     		strb	r3, [r7, #23]
 138:Src/register_interface.c ****           }
 1981              		.loc 6 138 13
 1982 0104 00BF     		nop
 1983              	.L86:
 1984              		.loc 6 143 7
 1985 0106 05E0     		b	.L78
 1986              	.L72:
 1987              	.LBE2:
 144:Src/register_interface.c ****     }
 145:Src/register_interface.c **** 
 146:Src/register_interface.c ****     default:
 147:Src/register_interface.c ****     {
 148:Src/register_interface.c ****       retVal = MCP_ERROR_BAD_DATA_TYPE;
 1988              		.loc 6 148 14
 1989 0108 0723     		movs	r3, #7
 1990 010a FB75     		strb	r3, [r7, #23]
 149:Src/register_interface.c ****       *size =0; /* From this point we are not able anymore to decode the RX buffer */
 1991              		.loc 6 149 13
 1992 010c 7B68     		ldr	r3, [r7, #4]
 1993 010e 0022     		movs	r2, #0
 1994 0110 1A80     		strh	r2, [r3]	@ movhi
 150:Src/register_interface.c ****       break;
 1995              		.loc 6 150 7
 1996 0112 00BF     		nop
 1997              	.L78:
 151:Src/register_interface.c ****     }
 152:Src/register_interface.c ****   }
 153:Src/register_interface.c ****   return (retVal);
 1998              		.loc 6 153 10
 1999 0114 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 154:Src/register_interface.c **** }
 2000              		.loc 6 154 1
 2001 0116 1846     		mov	r0, r3
 2002 0118 1C37     		adds	r7, r7, #28
 2003              	.LCFI200:
 2004              		.cfi_def_cfa_offset 4
 2005 011a BD46     		mov	sp, r7
 2006              	.LCFI201:
 2007              		.cfi_def_cfa_register 13
 2008              		@ sp needed
 2009 011c 5DF8047B 		ldr	r7, [sp], #4
 2010              	.LCFI202:
 2011              		.cfi_restore 7
 2012              		.cfi_def_cfa_offset 0
 2013 0120 7047     		bx	lr
 2014              		.cfi_endproc
ARM GAS  /tmp/cctuZX3B.s 			page 67


 2015              	.LFE1713:
 2017              		.section	.text.RI_SetRegisterMotor1,"ax",%progbits
 2018              		.align	1
 2019              		.global	RI_SetRegisterMotor1
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2023              		.fpu fpv4-sp-d16
 2025              	RI_SetRegisterMotor1:
 2026              	.LFB1714:
 155:Src/register_interface.c **** 
 156:Src/register_interface.c **** uint8_t RI_SetRegisterMotor1(uint16_t regID, uint8_t typeID, uint8_t *data, uint16_t *size, int16_t
 157:Src/register_interface.c **** {
 2027              		.loc 6 157 1
 2028              		.cfi_startproc
 2029              		@ args = 4, pretend = 0, frame = 80
 2030              		@ frame_needed = 1, uses_anonymous_args = 0
 2031 0000 80B5     		push	{r7, lr}
 2032              	.LCFI203:
 2033              		.cfi_def_cfa_offset 8
 2034              		.cfi_offset 7, -8
 2035              		.cfi_offset 14, -4
 2036 0002 94B0     		sub	sp, sp, #80
 2037              	.LCFI204:
 2038              		.cfi_def_cfa_offset 88
 2039 0004 00AF     		add	r7, sp, #0
 2040              	.LCFI205:
 2041              		.cfi_def_cfa_register 7
 2042 0006 BA60     		str	r2, [r7, #8]
 2043 0008 7B60     		str	r3, [r7, #4]
 2044 000a 0346     		mov	r3, r0	@ movhi
 2045 000c FB81     		strh	r3, [r7, #14]	@ movhi
 2046 000e 0B46     		mov	r3, r1
 2047 0010 7B73     		strb	r3, [r7, #13]
 158:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
 2048              		.loc 6 158 11
 2049 0012 0023     		movs	r3, #0
 2050 0014 87F84F30 		strb	r3, [r7, #79]
 159:Src/register_interface.c ****   uint8_t motorID=0;
 2051              		.loc 6 159 11
 2052 0018 0023     		movs	r3, #0
 2053 001a 87F84E30 		strb	r3, [r7, #78]
 160:Src/register_interface.c ****   MCI_Handle_t *pMCIN = &Mci[motorID];
 2054              		.loc 6 160 29
 2055 001e 97F84E30 		ldrb	r3, [r7, #78]	@ zero_extendqisi2
 2056              		.loc 6 160 17
 2057 0022 2C22     		movs	r2, #44
 2058 0024 02FB03F3 		mul	r3, r2, r3
 2059 0028 4D4A     		ldr	r2, .L153
 2060 002a 1344     		add	r3, r3, r2
 2061 002c BB64     		str	r3, [r7, #72]
 161:Src/register_interface.c **** 
 162:Src/register_interface.c ****   switch(typeID)
 2062              		.loc 6 162 3
 2063 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2064 0030 282B     		cmp	r3, #40
 2065 0032 00F02D83 		beq	.L92
ARM GAS  /tmp/cctuZX3B.s 			page 68


 2066 0036 282B     		cmp	r3, #40
 2067 0038 00F37483 		bgt	.L93
 2068 003c 182B     		cmp	r3, #24
 2069 003e 00F0E081 		beq	.L94
 2070 0042 182B     		cmp	r3, #24
 2071 0044 00F36E83 		bgt	.L93
 2072 0048 082B     		cmp	r3, #8
 2073 004a 03D0     		beq	.L95
 2074 004c 102B     		cmp	r3, #16
 2075 004e 00F09180 		beq	.L96
 2076 0052 67E3     		b	.L93
 2077              	.L95:
 163:Src/register_interface.c ****   {
 164:Src/register_interface.c ****     case TYPE_DATA_8BIT:
 165:Src/register_interface.c ****     {
 166:Src/register_interface.c ****       switch (regID)
 2078              		.loc 6 166 7
 2079 0054 FB89     		ldrh	r3, [r7, #14]
 2080 0056 B3F5E96F 		cmp	r3, #1864
 2081 005a 6FD0     		beq	.L97
 2082 005c B3F5E96F 		cmp	r3, #1864
 2083 0060 75DC     		bgt	.L98
 2084 0062 B3F5A16F 		cmp	r3, #1288
 2085 0066 65D0     		beq	.L99
 2086 0068 B3F5A16F 		cmp	r3, #1288
 2087 006c 6FDC     		bgt	.L98
 2088 006e B3F5996F 		cmp	r3, #1224
 2089 0072 5FD0     		beq	.L99
 2090 0074 B3F5996F 		cmp	r3, #1224
 2091 0078 69DC     		bgt	.L98
 2092 007a B3F5916F 		cmp	r3, #1160
 2093 007e 41D0     		beq	.L100
 2094 0080 B3F5916F 		cmp	r3, #1160
 2095 0084 63DC     		bgt	.L98
 2096 0086 B3F5896F 		cmp	r3, #1096
 2097 008a 53D0     		beq	.L99
 2098 008c B3F5896F 		cmp	r3, #1096
 2099 0090 5DDC     		bgt	.L98
 2100 0092 B3F5816F 		cmp	r3, #1032
 2101 0096 4DD0     		beq	.L99
 2102 0098 B3F5816F 		cmp	r3, #1032
 2103 009c 57DC     		bgt	.L98
 2104 009e B3F5727F 		cmp	r3, #968
 2105 00a2 47D0     		beq	.L99
 2106 00a4 B3F5727F 		cmp	r3, #968
 2107 00a8 51DC     		bgt	.L98
 2108 00aa C82B     		cmp	r3, #200
 2109 00ac 26D0     		beq	.L101
 2110 00ae C82B     		cmp	r3, #200
 2111 00b0 4DDC     		bgt	.L98
 2112 00b2 482B     		cmp	r3, #72
 2113 00b4 02D0     		beq	.L102
 2114 00b6 882B     		cmp	r3, #136
 2115 00b8 04D0     		beq	.L103
 2116 00ba 48E0     		b	.L98
 2117              	.L102:
 167:Src/register_interface.c ****       {
ARM GAS  /tmp/cctuZX3B.s 			page 69


 168:Src/register_interface.c ****         case MC_REG_STATUS:
 169:Src/register_interface.c ****           {
 170:Src/register_interface.c ****             retVal = MCP_ERROR_RO_REG;
 2118              		.loc 6 170 20
 2119 00bc 0423     		movs	r3, #4
 2120 00be 87F84F30 		strb	r3, [r7, #79]
 171:Src/register_interface.c ****             break;
 2121              		.loc 6 171 13
 2122 00c2 49E0     		b	.L104
 2123              	.L103:
 2124              	.LBB3:
 172:Src/register_interface.c ****           }
 173:Src/register_interface.c ****         case MC_REG_CONTROL_MODE:
 174:Src/register_interface.c ****         {
 175:Src/register_interface.c ****           uint8_t regdata8 = *data;
 2125              		.loc 6 175 19
 2126 00c4 BB68     		ldr	r3, [r7, #8]
 2127 00c6 1B78     		ldrb	r3, [r3]
 2128 00c8 FB76     		strb	r3, [r7, #27]
 176:Src/register_interface.c **** 
 177:Src/register_interface.c ****           if ((uint8_t)MCM_TORQUE_MODE == regdata8)
 2129              		.loc 6 177 14
 2130 00ca FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 2131 00cc 042B     		cmp	r3, #4
 2132 00ce 08D1     		bne	.L105
 178:Src/register_interface.c ****           {
 179:Src/register_interface.c **** 
 180:Src/register_interface.c ****             MCI_ExecTorqueRamp(pMCIN, MCI_GetTeref(pMCIN), 0);
 2133              		.loc 6 180 13
 2134 00d0 B86C     		ldr	r0, [r7, #72]
 2135 00d2 FFF7FEFF 		bl	MCI_GetTeref
 2136 00d6 0346     		mov	r3, r0
 2137 00d8 0022     		movs	r2, #0
 2138 00da 1946     		mov	r1, r3
 2139 00dc B86C     		ldr	r0, [r7, #72]
 2140 00de FFF7FEFF 		bl	MCI_ExecTorqueRamp
 2141              	.L105:
 181:Src/register_interface.c ****           }
 182:Src/register_interface.c ****           else
 183:Src/register_interface.c ****           {
 184:Src/register_interface.c ****             /* Nothing to do */
 185:Src/register_interface.c ****           }
 186:Src/register_interface.c **** 
 187:Src/register_interface.c ****           if ((uint8_t)MCM_SPEED_MODE == regdata8)
 2142              		.loc 6 187 14
 2143 00e2 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 2144 00e4 032B     		cmp	r3, #3
 2145 00e6 36D1     		bne	.L151
 188:Src/register_interface.c ****           {
 189:Src/register_interface.c ****             MCI_ExecSpeedRamp(pMCIN, MCI_GetMecSpeedRefUnit(pMCIN), 0);
 2146              		.loc 6 189 13
 2147 00e8 B86C     		ldr	r0, [r7, #72]
 2148 00ea FFF7FEFF 		bl	MCI_GetMecSpeedRefUnit
 2149 00ee 0346     		mov	r3, r0
 2150 00f0 0022     		movs	r2, #0
 2151 00f2 1946     		mov	r1, r3
 2152 00f4 B86C     		ldr	r0, [r7, #72]
ARM GAS  /tmp/cctuZX3B.s 			page 70


 2153 00f6 FFF7FEFF 		bl	MCI_ExecSpeedRamp
 190:Src/register_interface.c ****           }
 191:Src/register_interface.c ****           else
 192:Src/register_interface.c ****           {
 193:Src/register_interface.c ****             /* Nothing to do */
 194:Src/register_interface.c ****           }
 195:Src/register_interface.c ****           break;
 2154              		.loc 6 195 11
 2155 00fa 2CE0     		b	.L151
 2156              	.L101:
 2157              	.LBE3:
 196:Src/register_interface.c ****         }
 197:Src/register_interface.c **** 
 198:Src/register_interface.c ****         case MC_REG_RUC_STAGE_NBR:
 199:Src/register_interface.c ****         {
 200:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2158              		.loc 6 200 18
 2159 00fc 0423     		movs	r3, #4
 2160 00fe 87F84F30 		strb	r3, [r7, #79]
 201:Src/register_interface.c ****           break;
 2161              		.loc 6 201 11
 2162 0102 29E0     		b	.L104
 2163              	.L100:
 2164              	.LBB4:
 202:Src/register_interface.c ****         }
 203:Src/register_interface.c ****         case MC_REG_SC_PP:
 204:Src/register_interface.c ****         {
 205:Src/register_interface.c ****           uint8_t regdataU8 = *(uint8_t *)data;
 2165              		.loc 6 205 19
 2166 0104 BB68     		ldr	r3, [r7, #8]
 2167 0106 1B78     		ldrb	r3, [r3]
 2168 0108 3B77     		strb	r3, [r7, #28]
 206:Src/register_interface.c ****           SPD_SetElToMecRatio(&STO_PLL_M1._Super, regdataU8);
 2169              		.loc 6 206 11
 2170 010a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2171 010c 1946     		mov	r1, r3
 2172 010e 1548     		ldr	r0, .L153+4
 2173 0110 FFF7FEFF 		bl	SPD_SetElToMecRatio
 207:Src/register_interface.c ****           SPD_SetElToMecRatio(&VirtualSpeedSensorM1._Super, regdataU8);
 2174              		.loc 6 207 11
 2175 0114 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2176 0116 1946     		mov	r1, r3
 2177 0118 1348     		ldr	r0, .L153+8
 2178 011a FFF7FEFF 		bl	SPD_SetElToMecRatio
 208:Src/register_interface.c ****           SCC_SetPolesPairs(&SCC, regdataU8);
 2179              		.loc 6 208 11
 2180 011e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2181 0120 1946     		mov	r1, r3
 2182 0122 1248     		ldr	r0, .L153+12
 2183 0124 FFF7FEFF 		bl	SCC_SetPolesPairs
 209:Src/register_interface.c ****           OTT_SetPolesPairs(&OTT, regdataU8);
 2184              		.loc 6 209 11
 2185 0128 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2186 012a 1946     		mov	r1, r3
 2187 012c 1048     		ldr	r0, .L153+16
 2188 012e FFF7FEFF 		bl	OTT_SetPolesPairs
 210:Src/register_interface.c ****           break;
ARM GAS  /tmp/cctuZX3B.s 			page 71


 2189              		.loc 6 210 11
 2190 0132 11E0     		b	.L104
 2191              	.L99:
 2192              	.LBE4:
 211:Src/register_interface.c ****         }
 212:Src/register_interface.c **** 
 213:Src/register_interface.c ****         case MC_REG_SC_CHECK:
 214:Src/register_interface.c ****         case MC_REG_SC_STATE:
 215:Src/register_interface.c ****         case MC_REG_SC_STEPS:
 216:Src/register_interface.c ****         case MC_REG_SC_FOC_REP_RATE:
 217:Src/register_interface.c ****         case MC_REG_SC_COMPLETED:
 218:Src/register_interface.c ****         {
 219:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2193              		.loc 6 219 18
 2194 0134 0423     		movs	r3, #4
 2195 0136 87F84F30 		strb	r3, [r7, #79]
 220:Src/register_interface.c ****           break;
 2196              		.loc 6 220 11
 2197 013a 0DE0     		b	.L104
 2198              	.L97:
 2199              	.LBB5:
 221:Src/register_interface.c ****         }
 222:Src/register_interface.c **** 
 223:Src/register_interface.c ****           case MC_REG_PB_CHARACTERIZATION:
 224:Src/register_interface.c ****         {
 225:Src/register_interface.c ****           uint8_t regdataU8 = *(uint8_t *)data;
 2200              		.loc 6 225 19
 2201 013c BB68     		ldr	r3, [r7, #8]
 2202 013e 1B78     		ldrb	r3, [r3]
 2203 0140 7B77     		strb	r3, [r7, #29]
 226:Src/register_interface.c ****           SCC_SetPBCharacterization(&SCC,regdataU8);
 2204              		.loc 6 226 11
 2205 0142 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2206 0144 1946     		mov	r1, r3
 2207 0146 0948     		ldr	r0, .L153+12
 2208 0148 FFF7FEFF 		bl	SCC_SetPBCharacterization
 227:Src/register_interface.c ****           break;
 2209              		.loc 6 227 11
 2210 014c 04E0     		b	.L104
 2211              	.L98:
 2212              	.LBE5:
 228:Src/register_interface.c ****         }
 229:Src/register_interface.c **** 
 230:Src/register_interface.c ****         default:
 231:Src/register_interface.c ****         {
 232:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 2213              		.loc 6 232 18
 2214 014e 0523     		movs	r3, #5
 2215 0150 87F84F30 		strb	r3, [r7, #79]
 233:Src/register_interface.c ****           break;
 2216              		.loc 6 233 11
 2217 0154 00E0     		b	.L104
 2218              	.L151:
 2219              	.LBB6:
 195:Src/register_interface.c ****         }
 2220              		.loc 6 195 11
 2221 0156 00BF     		nop
ARM GAS  /tmp/cctuZX3B.s 			page 72


 2222              	.L104:
 2223              	.LBE6:
 234:Src/register_interface.c ****         }
 235:Src/register_interface.c ****       }
 236:Src/register_interface.c ****       *size = 1;
 2224              		.loc 6 236 13
 2225 0158 7B68     		ldr	r3, [r7, #4]
 2226 015a 0122     		movs	r2, #1
 2227 015c 1A80     		strh	r2, [r3]	@ movhi
 237:Src/register_interface.c ****       break;
 2228              		.loc 6 237 7
 2229 015e E8E2     		b	.L107
 2230              	.L154:
 2231              		.align	2
 2232              	.L153:
 2233 0160 00000000 		.word	Mci
 2234 0164 00000000 		.word	STO_PLL_M1
 2235 0168 00000000 		.word	VirtualSpeedSensorM1
 2236 016c 00000000 		.word	SCC
 2237 0170 00000000 		.word	OTT
 2238              	.L96:
 2239              	.LBB7:
 238:Src/register_interface.c ****     }
 239:Src/register_interface.c **** 
 240:Src/register_interface.c ****     case TYPE_DATA_16BIT:
 241:Src/register_interface.c ****     {
 242:Src/register_interface.c ****       uint16_t regdata16 = *(uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 2240              		.loc 6 242 16
 2241 0174 BB68     		ldr	r3, [r7, #8]
 2242 0176 1B88     		ldrh	r3, [r3]	@ movhi
 2243 0178 FB83     		strh	r3, [r7, #30]	@ movhi
 243:Src/register_interface.c ****       switch (regID)
 2244              		.loc 6 243 7
 2245 017a FB89     		ldrh	r3, [r7, #14]
 2246 017c 41F65042 		movw	r2, #7248
 2247 0180 9342     		cmp	r3, r2
 2248 0182 00F02B81 		beq	.L108
 2249 0186 41F65042 		movw	r2, #7248
 2250 018a 9342     		cmp	r3, r2
 2251 018c 00F33081 		bgt	.L109
 2252 0190 41F61042 		movw	r2, #7184
 2253 0194 9342     		cmp	r3, r2
 2254 0196 00F01B81 		beq	.L110
 2255 019a 41F61042 		movw	r2, #7184
 2256 019e 9342     		cmp	r3, r2
 2257 01a0 00F32681 		bgt	.L109
 2258 01a4 41F65832 		movw	r2, #7000
 2259 01a8 9342     		cmp	r3, r2
 2260 01aa 00F0CD80 		beq	.L111
 2261 01ae 41F65832 		movw	r2, #7000
 2262 01b2 9342     		cmp	r3, r2
 2263 01b4 00F31C81 		bgt	.L109
 2264 01b8 41F25032 		movw	r2, #4944
 2265 01bc 9342     		cmp	r3, r2
 2266 01be 00F01381 		beq	.L112
 2267 01c2 41F25032 		movw	r2, #4944
 2268 01c6 9342     		cmp	r3, r2
ARM GAS  /tmp/cctuZX3B.s 			page 73


 2269 01c8 00F31281 		bgt	.L109
 2270 01cc 41F25002 		movw	r2, #4176
 2271 01d0 9342     		cmp	r3, r2
 2272 01d2 00F0F980 		beq	.L113
 2273 01d6 41F25002 		movw	r2, #4176
 2274 01da 9342     		cmp	r3, r2
 2275 01dc 00F30881 		bgt	.L109
 2276 01e0 41F21002 		movw	r2, #4112
 2277 01e4 9342     		cmp	r3, r2
 2278 01e6 00F0EF80 		beq	.L113
 2279 01ea 41F21002 		movw	r2, #4112
 2280 01ee 9342     		cmp	r3, r2
 2281 01f0 00F3FE80 		bgt	.L109
 2282 01f4 B3F57D6F 		cmp	r3, #4048
 2283 01f8 00F0E680 		beq	.L113
 2284 01fc B3F57D6F 		cmp	r3, #4048
 2285 0200 00F3F680 		bgt	.L109
 2286 0204 B3F5796F 		cmp	r3, #3984
 2287 0208 00F0DE80 		beq	.L113
 2288 020c B3F5796F 		cmp	r3, #3984
 2289 0210 00F3EE80 		bgt	.L109
 2290 0214 B3F5696F 		cmp	r3, #3728
 2291 0218 00F0EE80 		beq	.L152
 2292 021c B3F5696F 		cmp	r3, #3728
 2293 0220 00F3E680 		bgt	.L109
 2294 0224 B3F5656F 		cmp	r3, #3664
 2295 0228 00F0E680 		beq	.L152
 2296 022c B3F5656F 		cmp	r3, #3664
 2297 0230 00F3DE80 		bgt	.L109
 2298 0234 B3F5496F 		cmp	r3, #3216
 2299 0238 00F0C280 		beq	.L115
 2300 023c B3F5496F 		cmp	r3, #3216
 2301 0240 00F3D680 		bgt	.L109
 2302 0244 B3F5456F 		cmp	r3, #3152
 2303 0248 00F0BA80 		beq	.L115
 2304 024c B3F5456F 		cmp	r3, #3152
 2305 0250 00F3CE80 		bgt	.L109
 2306 0254 B3F5396F 		cmp	r3, #2960
 2307 0258 00F0B280 		beq	.L115
 2308 025c B3F5396F 		cmp	r3, #2960
 2309 0260 00F3C680 		bgt	.L109
 2310 0264 B3F5356F 		cmp	r3, #2896
 2311 0268 00F0AA80 		beq	.L115
 2312 026c B3F5356F 		cmp	r3, #2896
 2313 0270 00F3BE80 		bgt	.L109
 2314 0274 B3F5296F 		cmp	r3, #2704
 2315 0278 6ED0     		beq	.L116
 2316 027a B3F5296F 		cmp	r3, #2704
 2317 027e 00F3B780 		bgt	.L109
 2318 0282 B3F5256F 		cmp	r3, #2640
 2319 0286 67D0     		beq	.L116
 2320 0288 B3F5256F 		cmp	r3, #2640
 2321 028c 00F3B080 		bgt	.L109
 2322 0290 B3F5216F 		cmp	r3, #2576
 2323 0294 60D0     		beq	.L116
 2324 0296 B3F5216F 		cmp	r3, #2576
 2325 029a 00F3A980 		bgt	.L109
ARM GAS  /tmp/cctuZX3B.s 			page 74


 2326 029e B3F51D6F 		cmp	r3, #2512
 2327 02a2 59D0     		beq	.L116
 2328 02a4 B3F51D6F 		cmp	r3, #2512
 2329 02a8 00F3A280 		bgt	.L109
 2330 02ac B3F5F26F 		cmp	r3, #1936
 2331 02b0 4ED0     		beq	.L117
 2332 02b2 B3F5F26F 		cmp	r3, #1936
 2333 02b6 00F39B80 		bgt	.L109
 2334 02ba B3F5BA6F 		cmp	r3, #1488
 2335 02be 43D0     		beq	.L111
 2336 02c0 B3F5BA6F 		cmp	r3, #1488
 2337 02c4 00F39480 		bgt	.L109
 2338 02c8 B3F5B26F 		cmp	r3, #1424
 2339 02cc 3CD0     		beq	.L111
 2340 02ce B3F5B26F 		cmp	r3, #1424
 2341 02d2 00F38D80 		bgt	.L109
 2342 02d6 B3F5926F 		cmp	r3, #1168
 2343 02da 6AD0     		beq	.L118
 2344 02dc B3F5926F 		cmp	r3, #1168
 2345 02e0 00F38680 		bgt	.L109
 2346 02e4 B3F58A6F 		cmp	r3, #1104
 2347 02e8 5CD0     		beq	.L119
 2348 02ea B3F58A6F 		cmp	r3, #1104
 2349 02ee 7FDC     		bgt	.L109
 2350 02f0 B3F5647F 		cmp	r3, #912
 2351 02f4 45D0     		beq	.L120
 2352 02f6 B3F5647F 		cmp	r3, #912
 2353 02fa 79DC     		bgt	.L109
 2354 02fc B3F5547F 		cmp	r3, #848
 2355 0300 2ED0     		beq	.L121
 2356 0302 B3F5547F 		cmp	r3, #848
 2357 0306 73DC     		bgt	.L109
 2358 0308 B3F5887F 		cmp	r3, #272
 2359 030c 15D0     		beq	.L122
 2360 030e B3F5887F 		cmp	r3, #272
 2361 0312 6DDC     		bgt	.L109
 2362 0314 902B     		cmp	r3, #144
 2363 0316 02D0     		beq	.L123
 2364 0318 D02B     		cmp	r3, #208
 2365 031a 07D0     		beq	.L124
 2366 031c 68E0     		b	.L109
 2367              	.L123:
 244:Src/register_interface.c ****       {
 245:Src/register_interface.c ****         case MC_REG_SPEED_KP:
 246:Src/register_interface.c ****         {
 247:Src/register_interface.c ****           PID_SetKP(&PIDSpeedHandle_M1, (int16_t)regdata16);
 2368              		.loc 6 247 11
 2369 031e B7F91E30 		ldrsh	r3, [r7, #30]
 2370 0322 1946     		mov	r1, r3
 2371 0324 B948     		ldr	r0, .L155
 2372 0326 FFF7FEFF 		bl	PID_SetKP
 248:Src/register_interface.c ****           break;
 2373              		.loc 6 248 11
 2374 032a 66E0     		b	.L125
 2375              	.L124:
 249:Src/register_interface.c ****         }
 250:Src/register_interface.c **** 
ARM GAS  /tmp/cctuZX3B.s 			page 75


 251:Src/register_interface.c ****         case MC_REG_SPEED_KI:
 252:Src/register_interface.c ****         {
 253:Src/register_interface.c ****           PID_SetKI(&PIDSpeedHandle_M1, (int16_t)regdata16);
 2376              		.loc 6 253 11
 2377 032c B7F91E30 		ldrsh	r3, [r7, #30]
 2378 0330 1946     		mov	r1, r3
 2379 0332 B648     		ldr	r0, .L155
 2380 0334 FFF7FEFF 		bl	PID_SetKI
 254:Src/register_interface.c ****           break;
 2381              		.loc 6 254 11
 2382 0338 5FE0     		b	.L125
 2383              	.L122:
 255:Src/register_interface.c ****         }
 256:Src/register_interface.c **** 
 257:Src/register_interface.c ****         case MC_REG_SPEED_KD:
 258:Src/register_interface.c ****         {
 259:Src/register_interface.c ****           PID_SetKD(&PIDSpeedHandle_M1, (int16_t)regdata16);
 2384              		.loc 6 259 11
 2385 033a B7F91E30 		ldrsh	r3, [r7, #30]
 2386 033e 1946     		mov	r1, r3
 2387 0340 B248     		ldr	r0, .L155
 2388 0342 FFF7FEFF 		bl	PID_SetKD
 260:Src/register_interface.c ****           break;
 2389              		.loc 6 260 11
 2390 0346 58E0     		b	.L125
 2391              	.L111:
 261:Src/register_interface.c ****         }
 262:Src/register_interface.c **** 
 263:Src/register_interface.c ****         case MC_REG_BUS_VOLTAGE:
 264:Src/register_interface.c ****         case MC_REG_HEATS_TEMP:
 265:Src/register_interface.c ****         case MC_REG_MOTOR_POWER:
 266:Src/register_interface.c ****         {
 267:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2392              		.loc 6 267 18
 2393 0348 0423     		movs	r3, #4
 2394 034a 87F84F30 		strb	r3, [r7, #79]
 268:Src/register_interface.c ****           break;
 2395              		.loc 6 268 11
 2396 034e 54E0     		b	.L125
 2397              	.L117:
 269:Src/register_interface.c ****         }
 270:Src/register_interface.c **** 
 271:Src/register_interface.c ****         case MC_REG_FLUXWK_BUS_MEAS:
 272:Src/register_interface.c ****         {
 273:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2398              		.loc 6 273 18
 2399 0350 0423     		movs	r3, #4
 2400 0352 87F84F30 		strb	r3, [r7, #79]
 274:Src/register_interface.c ****           break;
 2401              		.loc 6 274 11
 2402 0356 50E0     		b	.L125
 2403              	.L116:
 275:Src/register_interface.c ****         }
 276:Src/register_interface.c **** 
 277:Src/register_interface.c ****         case MC_REG_V_Q:
 278:Src/register_interface.c ****         case MC_REG_V_D:
 279:Src/register_interface.c ****         case MC_REG_V_ALPHA:
ARM GAS  /tmp/cctuZX3B.s 			page 76


 280:Src/register_interface.c ****         case MC_REG_V_BETA:
 281:Src/register_interface.c ****         {
 282:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2404              		.loc 6 282 18
 2405 0358 0423     		movs	r3, #4
 2406 035a 87F84F30 		strb	r3, [r7, #79]
 283:Src/register_interface.c ****           break;
 2407              		.loc 6 283 11
 2408 035e 4CE0     		b	.L125
 2409              	.L121:
 2410              	.LBB8:
 284:Src/register_interface.c ****         }
 285:Src/register_interface.c **** 
 286:Src/register_interface.c ****         case MC_REG_STOPLL_C1:
 287:Src/register_interface.c ****         {
 288:Src/register_interface.c ****           int16_t hC1;
 289:Src/register_interface.c ****           int16_t hC2;
 290:Src/register_interface.c ****           STO_PLL_GetObserverGains(&STO_PLL_M1, &hC1, &hC2);
 2411              		.loc 6 290 11
 2412 0360 07F11602 		add	r2, r7, #22
 2413 0364 07F11803 		add	r3, r7, #24
 2414 0368 1946     		mov	r1, r3
 2415 036a A948     		ldr	r0, .L155+4
 2416 036c FFF7FEFF 		bl	STO_PLL_GetObserverGains
 291:Src/register_interface.c ****           STO_PLL_SetObserverGains(&STO_PLL_M1, (int16_t)regdata16, hC2);
 2417              		.loc 6 291 11
 2418 0370 B7F91E30 		ldrsh	r3, [r7, #30]
 2419 0374 B7F91620 		ldrsh	r2, [r7, #22]
 2420 0378 1946     		mov	r1, r3
 2421 037a A548     		ldr	r0, .L155+4
 2422 037c FFF7FEFF 		bl	STO_PLL_SetObserverGains
 292:Src/register_interface.c ****           break;
 2423              		.loc 6 292 11
 2424 0380 3BE0     		b	.L125
 2425              	.L120:
 2426              	.LBE8:
 2427              	.LBB9:
 293:Src/register_interface.c ****         }
 294:Src/register_interface.c **** 
 295:Src/register_interface.c ****         case MC_REG_STOPLL_C2:
 296:Src/register_interface.c ****         {
 297:Src/register_interface.c ****           int16_t hC1;
 298:Src/register_interface.c ****           int16_t hC2;
 299:Src/register_interface.c ****           STO_PLL_GetObserverGains(&STO_PLL_M1, &hC1, &hC2);
 2428              		.loc 6 299 11
 2429 0382 07F11202 		add	r2, r7, #18
 2430 0386 07F11403 		add	r3, r7, #20
 2431 038a 1946     		mov	r1, r3
 2432 038c A048     		ldr	r0, .L155+4
 2433 038e FFF7FEFF 		bl	STO_PLL_GetObserverGains
 300:Src/register_interface.c ****           STO_PLL_SetObserverGains(&STO_PLL_M1, hC1, (int16_t)regdata16);
 2434              		.loc 6 300 11
 2435 0392 B7F91430 		ldrsh	r3, [r7, #20]
 2436 0396 B7F91E20 		ldrsh	r2, [r7, #30]
 2437 039a 1946     		mov	r1, r3
 2438 039c 9C48     		ldr	r0, .L155+4
 2439 039e FFF7FEFF 		bl	STO_PLL_SetObserverGains
ARM GAS  /tmp/cctuZX3B.s 			page 77


 301:Src/register_interface.c ****           break;
 2440              		.loc 6 301 11
 2441 03a2 2AE0     		b	.L125
 2442              	.L119:
 2443              	.LBE9:
 302:Src/register_interface.c ****         }
 303:Src/register_interface.c **** 
 304:Src/register_interface.c ****         case MC_REG_STOPLL_KI:
 305:Src/register_interface.c ****         {
 306:Src/register_interface.c ****           PID_SetKI (&(&STO_PLL_M1)->PIRegulator, (int16_t)regdata16);
 2444              		.loc 6 306 11
 2445 03a4 B7F91E30 		ldrsh	r3, [r7, #30]
 2446 03a8 1946     		mov	r1, r3
 2447 03aa 9A48     		ldr	r0, .L155+8
 2448 03ac FFF7FEFF 		bl	PID_SetKI
 307:Src/register_interface.c ****           break;
 2449              		.loc 6 307 11
 2450 03b0 23E0     		b	.L125
 2451              	.L118:
 308:Src/register_interface.c ****         }
 309:Src/register_interface.c **** 
 310:Src/register_interface.c ****         case MC_REG_STOPLL_KP:
 311:Src/register_interface.c ****         {
 312:Src/register_interface.c ****           PID_SetKP (&(&STO_PLL_M1)->PIRegulator, (int16_t)regdata16);
 2452              		.loc 6 312 11
 2453 03b2 B7F91E30 		ldrsh	r3, [r7, #30]
 2454 03b6 1946     		mov	r1, r3
 2455 03b8 9648     		ldr	r0, .L155+8
 2456 03ba FFF7FEFF 		bl	PID_SetKP
 313:Src/register_interface.c ****           break;
 2457              		.loc 6 313 11
 2458 03be 1CE0     		b	.L125
 2459              	.L115:
 314:Src/register_interface.c ****         }
 315:Src/register_interface.c **** 
 316:Src/register_interface.c ****         case MC_REG_STOPLL_EL_ANGLE:
 317:Src/register_interface.c ****         case MC_REG_STOPLL_ROT_SPEED:
 318:Src/register_interface.c ****         case MC_REG_STOPLL_BEMF_ALPHA:
 319:Src/register_interface.c ****         case MC_REG_STOPLL_BEMF_BETA:
 320:Src/register_interface.c ****         {
 321:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2460              		.loc 6 321 18
 2461 03c0 0423     		movs	r3, #4
 2462 03c2 87F84F30 		strb	r3, [r7, #79]
 322:Src/register_interface.c ****           break;
 2463              		.loc 6 322 11
 2464 03c6 18E0     		b	.L125
 2465              	.L113:
 323:Src/register_interface.c ****         }
 324:Src/register_interface.c **** 
 325:Src/register_interface.c ****         case MC_REG_DAC_USER1:
 326:Src/register_interface.c ****         case MC_REG_DAC_USER2:
 327:Src/register_interface.c ****           break;
 328:Src/register_interface.c **** 
 329:Src/register_interface.c ****         case MC_REG_FF_VQ:
 330:Src/register_interface.c ****         case MC_REG_FF_VD:
 331:Src/register_interface.c ****         case MC_REG_FF_VQ_PIOUT:
ARM GAS  /tmp/cctuZX3B.s 			page 78


 332:Src/register_interface.c ****         case MC_REG_FF_VD_PIOUT:
 333:Src/register_interface.c ****         {
 334:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2466              		.loc 6 334 18
 2467 03c8 0423     		movs	r3, #4
 2468 03ca 87F84F30 		strb	r3, [r7, #79]
 335:Src/register_interface.c ****           break;
 2469              		.loc 6 335 11
 2470 03ce 14E0     		b	.L125
 2471              	.L110:
 336:Src/register_interface.c ****         }
 337:Src/register_interface.c **** 
 338:Src/register_interface.c ****         case MC_REG_OVERVOLTAGETHRESHOLD:
 339:Src/register_interface.c ****         {
 340:Src/register_interface.c ****           SCC_SetOverVoltageThreshold(&SCC,regdata16);
 2472              		.loc 6 340 11
 2473 03d0 FB8B     		ldrh	r3, [r7, #30]
 2474 03d2 1946     		mov	r1, r3
 2475 03d4 9048     		ldr	r0, .L155+12
 2476 03d6 FFF7FEFF 		bl	SCC_SetOverVoltageThreshold
 341:Src/register_interface.c ****           break;
 2477              		.loc 6 341 11
 2478 03da 0EE0     		b	.L125
 2479              	.L108:
 342:Src/register_interface.c ****         }
 343:Src/register_interface.c **** 
 344:Src/register_interface.c ****         case MC_REG_UNDERVOLTAGETHRESHOLD:
 345:Src/register_interface.c ****         {
 346:Src/register_interface.c ****           SCC_SetUnderVoltageThreshold(&SCC,regdata16);
 2480              		.loc 6 346 11
 2481 03dc FB8B     		ldrh	r3, [r7, #30]
 2482 03de 1946     		mov	r1, r3
 2483 03e0 8D48     		ldr	r0, .L155+12
 2484 03e2 FFF7FEFF 		bl	SCC_SetUnderVoltageThreshold
 347:Src/register_interface.c ****           break;
 2485              		.loc 6 347 11
 2486 03e6 08E0     		b	.L125
 2487              	.L112:
 348:Src/register_interface.c ****         }
 349:Src/register_interface.c **** 
 350:Src/register_interface.c ****         case MC_REG_SC_PWM_FREQUENCY:
 351:Src/register_interface.c ****         {
 352:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2488              		.loc 6 352 18
 2489 03e8 0423     		movs	r3, #4
 2490 03ea 87F84F30 		strb	r3, [r7, #79]
 353:Src/register_interface.c ****           break;
 2491              		.loc 6 353 11
 2492 03ee 04E0     		b	.L125
 2493              	.L109:
 354:Src/register_interface.c ****         }
 355:Src/register_interface.c **** 
 356:Src/register_interface.c ****         default:
 357:Src/register_interface.c ****         {
 358:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 2494              		.loc 6 358 18
 2495 03f0 0523     		movs	r3, #5
ARM GAS  /tmp/cctuZX3B.s 			page 79


 2496 03f2 87F84F30 		strb	r3, [r7, #79]
 359:Src/register_interface.c ****           break;
 2497              		.loc 6 359 11
 2498 03f6 00E0     		b	.L125
 2499              	.L152:
 327:Src/register_interface.c **** 
 2500              		.loc 6 327 11
 2501 03f8 00BF     		nop
 2502              	.L125:
 360:Src/register_interface.c ****         }
 361:Src/register_interface.c ****       }
 362:Src/register_interface.c ****       *size = 2;
 2503              		.loc 6 362 13
 2504 03fa 7B68     		ldr	r3, [r7, #4]
 2505 03fc 0222     		movs	r2, #2
 2506 03fe 1A80     		strh	r2, [r3]	@ movhi
 363:Src/register_interface.c ****       break;
 2507              		.loc 6 363 7
 2508 0400 97E1     		b	.L107
 2509              	.L94:
 2510              	.LBE7:
 2511              	.LBB10:
 364:Src/register_interface.c ****     }
 365:Src/register_interface.c **** 
 366:Src/register_interface.c ****     case TYPE_DATA_32BIT:
 367:Src/register_interface.c ****     {
 368:Src/register_interface.c ****       uint32_t regdata32 = *(uint32_t *)data; //cstat !MISRAC2012-Rule-11.3
 2512              		.loc 6 368 16
 2513 0402 BB68     		ldr	r3, [r7, #8]
 2514 0404 1B68     		ldr	r3, [r3]
 2515 0406 7B63     		str	r3, [r7, #52]
 369:Src/register_interface.c **** 
 370:Src/register_interface.c ****       switch (regID)
 2516              		.loc 6 370 7
 2517 0408 FB89     		ldrh	r3, [r7, #14]
 2518 040a 41F61852 		movw	r2, #7448
 2519 040e 9342     		cmp	r3, r2
 2520 0410 00F02981 		beq	.L126
 2521 0414 41F61852 		movw	r2, #7448
 2522 0418 9342     		cmp	r3, r2
 2523 041a 00F33181 		bgt	.L127
 2524 041e 41F65822 		movw	r2, #6744
 2525 0422 9342     		cmp	r3, r2
 2526 0424 00F02881 		beq	.L128
 2527 0428 41F65822 		movw	r2, #6744
 2528 042c 9342     		cmp	r3, r2
 2529 042e 00F32781 		bgt	.L127
 2530 0432 41F61822 		movw	r2, #6680
 2531 0436 9342     		cmp	r3, r2
 2532 0438 00F01E81 		beq	.L128
 2533 043c 41F61822 		movw	r2, #6680
 2534 0440 9342     		cmp	r3, r2
 2535 0442 00F31D81 		bgt	.L127
 2536 0446 41F6D812 		movw	r2, #6616
 2537 044a 9342     		cmp	r3, r2
 2538 044c 00F01481 		beq	.L128
 2539 0450 41F6D812 		movw	r2, #6616
ARM GAS  /tmp/cctuZX3B.s 			page 80


 2540 0454 9342     		cmp	r3, r2
 2541 0456 00F31381 		bgt	.L127
 2542 045a 41F69812 		movw	r2, #6552
 2543 045e 9342     		cmp	r3, r2
 2544 0460 00F00A81 		beq	.L128
 2545 0464 41F69812 		movw	r2, #6552
 2546 0468 9342     		cmp	r3, r2
 2547 046a 00F30981 		bgt	.L127
 2548 046e 41F65812 		movw	r2, #6488
 2549 0472 9342     		cmp	r3, r2
 2550 0474 00F00081 		beq	.L128
 2551 0478 41F65812 		movw	r2, #6488
 2552 047c 9342     		cmp	r3, r2
 2553 047e 00F3FF80 		bgt	.L127
 2554 0482 41F61812 		movw	r2, #6424
 2555 0486 9342     		cmp	r3, r2
 2556 0488 00F0E480 		beq	.L129
 2557 048c 41F61812 		movw	r2, #6424
 2558 0490 9342     		cmp	r3, r2
 2559 0492 00F3F580 		bgt	.L127
 2560 0496 41F6D802 		movw	r2, #6360
 2561 049a 9342     		cmp	r3, r2
 2562 049c 00F0D480 		beq	.L130
 2563 04a0 41F6D802 		movw	r2, #6360
 2564 04a4 9342     		cmp	r3, r2
 2565 04a6 00F3EB80 		bgt	.L127
 2566 04aa 41F69802 		movw	r2, #6296
 2567 04ae 9342     		cmp	r3, r2
 2568 04b0 00F0C180 		beq	.L131
 2569 04b4 41F69802 		movw	r2, #6296
 2570 04b8 9342     		cmp	r3, r2
 2571 04ba 00F3E180 		bgt	.L127
 2572 04be 41F65802 		movw	r2, #6232
 2573 04c2 9342     		cmp	r3, r2
 2574 04c4 00F0AE80 		beq	.L132
 2575 04c8 41F65802 		movw	r2, #6232
 2576 04cc 9342     		cmp	r3, r2
 2577 04ce 00F3D780 		bgt	.L127
 2578 04d2 41F61802 		movw	r2, #6168
 2579 04d6 9342     		cmp	r3, r2
 2580 04d8 00F08080 		beq	.L133
 2581 04dc 41F61802 		movw	r2, #6168
 2582 04e0 9342     		cmp	r3, r2
 2583 04e2 00F3CD80 		bgt	.L127
 2584 04e6 41F2D872 		movw	r2, #6104
 2585 04ea 9342     		cmp	r3, r2
 2586 04ec 72D0     		beq	.L134
 2587 04ee 41F2D872 		movw	r2, #6104
 2588 04f2 9342     		cmp	r3, r2
 2589 04f4 00F3C480 		bgt	.L127
 2590 04f8 41F29872 		movw	r2, #6040
 2591 04fc 9342     		cmp	r3, r2
 2592 04fe 69D0     		beq	.L134
 2593 0500 41F29872 		movw	r2, #6040
 2594 0504 9342     		cmp	r3, r2
 2595 0506 00F3BB80 		bgt	.L127
 2596 050a 41F25872 		movw	r2, #5976
ARM GAS  /tmp/cctuZX3B.s 			page 81


 2597 050e 9342     		cmp	r3, r2
 2598 0510 60D0     		beq	.L134
 2599 0512 41F25872 		movw	r2, #5976
 2600 0516 9342     		cmp	r3, r2
 2601 0518 00F3B280 		bgt	.L127
 2602 051c 41F21872 		movw	r2, #5912
 2603 0520 9342     		cmp	r3, r2
 2604 0522 57D0     		beq	.L134
 2605 0524 41F21872 		movw	r2, #5912
 2606 0528 9342     		cmp	r3, r2
 2607 052a 00F3A980 		bgt	.L127
 2608 052e 41F2D862 		movw	r2, #5848
 2609 0532 9342     		cmp	r3, r2
 2610 0534 4ED0     		beq	.L134
 2611 0536 41F2D862 		movw	r2, #5848
 2612 053a 9342     		cmp	r3, r2
 2613 053c 00F3A080 		bgt	.L127
 2614 0540 B3F5167F 		cmp	r3, #600
 2615 0544 42D0     		beq	.L135
 2616 0546 B3F5167F 		cmp	r3, #600
 2617 054a 00F39980 		bgt	.L127
 2618 054e B3F5067F 		cmp	r3, #536
 2619 0552 37D0     		beq	.L136
 2620 0554 B3F5067F 		cmp	r3, #536
 2621 0558 00F39280 		bgt	.L127
 2622 055c B3F5EC7F 		cmp	r3, #472
 2623 0560 2CD0     		beq	.L137
 2624 0562 B3F5EC7F 		cmp	r3, #472
 2625 0566 00F38B80 		bgt	.L127
 2626 056a B3F58C7F 		cmp	r3, #280
 2627 056e 21D0     		beq	.L138
 2628 0570 B3F58C7F 		cmp	r3, #280
 2629 0574 00F38480 		bgt	.L127
 2630 0578 D82B     		cmp	r3, #216
 2631 057a 1BD0     		beq	.L138
 2632 057c D82B     		cmp	r3, #216
 2633 057e 7FDC     		bgt	.L127
 2634 0580 982B     		cmp	r3, #152
 2635 0582 09D0     		beq	.L139
 2636 0584 982B     		cmp	r3, #152
 2637 0586 7BDC     		bgt	.L127
 2638 0588 182B     		cmp	r3, #24
 2639 058a 01D0     		beq	.L140
 2640 058c 582B     		cmp	r3, #88
 2641 058e 77D1     		bne	.L127
 2642              	.L140:
 371:Src/register_interface.c ****       {
 372:Src/register_interface.c ****         case MC_REG_FAULTS_FLAGS:
 373:Src/register_interface.c ****         case MC_REG_SPEED_MEAS:
 374:Src/register_interface.c ****         {
 375:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2643              		.loc 6 375 18
 2644 0590 0423     		movs	r3, #4
 2645 0592 87F84F30 		strb	r3, [r7, #79]
 376:Src/register_interface.c ****           break;
 2646              		.loc 6 376 11
 2647 0596 77E0     		b	.L141
ARM GAS  /tmp/cctuZX3B.s 			page 82


 2648              	.L139:
 377:Src/register_interface.c ****         }
 378:Src/register_interface.c **** 
 379:Src/register_interface.c ****         case MC_REG_SPEED_REF:
 380:Src/register_interface.c ****         {
 381:Src/register_interface.c ****           MCI_ExecSpeedRamp(pMCIN,((((int16_t)regdata32) * ((int16_t)SPEED_UNIT)) / (int16_t)U_RPM)
 2649              		.loc 6 381 38
 2650 0598 7B6B     		ldr	r3, [r7, #52]
 2651 059a 1BB2     		sxth	r3, r3
 2652              		.loc 6 381 11
 2653 059c 1F4A     		ldr	r2, .L155+16
 2654 059e 82FB0312 		smull	r1, r2, r2, r3
 2655 05a2 DB17     		asrs	r3, r3, #31
 2656 05a4 D31A     		subs	r3, r2, r3
 2657 05a6 1BB2     		sxth	r3, r3
 2658 05a8 0022     		movs	r2, #0
 2659 05aa 1946     		mov	r1, r3
 2660 05ac B86C     		ldr	r0, [r7, #72]
 2661 05ae FFF7FEFF 		bl	MCI_ExecSpeedRamp
 382:Src/register_interface.c ****           break;
 2662              		.loc 6 382 11
 2663 05b2 69E0     		b	.L141
 2664              	.L138:
 383:Src/register_interface.c ****         }
 384:Src/register_interface.c **** 
 385:Src/register_interface.c ****         case MC_REG_STOPLL_EST_BEMF:
 386:Src/register_interface.c ****         case MC_REG_STOPLL_OBS_BEMF:
 387:Src/register_interface.c ****         {
 388:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2665              		.loc 6 388 18
 2666 05b4 0423     		movs	r3, #4
 2667 05b6 87F84F30 		strb	r3, [r7, #79]
 389:Src/register_interface.c ****           break;
 2668              		.loc 6 389 11
 2669 05ba 65E0     		b	.L141
 2670              	.L137:
 390:Src/register_interface.c ****         }
 391:Src/register_interface.c **** 
 392:Src/register_interface.c ****         case MC_REG_FF_1Q:
 393:Src/register_interface.c ****         {
 394:Src/register_interface.c ****           FF_M1.wConstant_1Q = (int32_t)regdata32;
 2671              		.loc 6 394 32
 2672 05bc 7B6B     		ldr	r3, [r7, #52]
 2673              		.loc 6 394 30
 2674 05be 184A     		ldr	r2, .L155+20
 2675 05c0 1361     		str	r3, [r2, #16]
 395:Src/register_interface.c ****           break;
 2676              		.loc 6 395 11
 2677 05c2 61E0     		b	.L141
 2678              	.L136:
 396:Src/register_interface.c ****         }
 397:Src/register_interface.c **** 
 398:Src/register_interface.c ****         case MC_REG_FF_1D:
 399:Src/register_interface.c ****         {
 400:Src/register_interface.c ****           FF_M1.wConstant_1D = (int32_t)regdata32;
 2679              		.loc 6 400 32
 2680 05c4 7B6B     		ldr	r3, [r7, #52]
ARM GAS  /tmp/cctuZX3B.s 			page 83


 2681              		.loc 6 400 30
 2682 05c6 164A     		ldr	r2, .L155+20
 2683 05c8 D360     		str	r3, [r2, #12]
 401:Src/register_interface.c ****           break;
 2684              		.loc 6 401 11
 2685 05ca 5DE0     		b	.L141
 2686              	.L135:
 402:Src/register_interface.c ****         }
 403:Src/register_interface.c **** 
 404:Src/register_interface.c ****         case MC_REG_FF_2:
 405:Src/register_interface.c ****         {
 406:Src/register_interface.c ****           FF_M1.wConstant_2 = (int32_t)regdata32;
 2687              		.loc 6 406 31
 2688 05cc 7B6B     		ldr	r3, [r7, #52]
 2689              		.loc 6 406 29
 2690 05ce 144A     		ldr	r2, .L155+20
 2691 05d0 5361     		str	r3, [r2, #20]
 407:Src/register_interface.c ****           break;
 2692              		.loc 6 407 11
 2693 05d2 59E0     		b	.L141
 2694              	.L134:
 408:Src/register_interface.c ****         }
 409:Src/register_interface.c **** 
 410:Src/register_interface.c ****         case MC_REG_SC_RS:
 411:Src/register_interface.c ****         case MC_REG_SC_LS:
 412:Src/register_interface.c ****         case MC_REG_SC_KE:
 413:Src/register_interface.c ****         case MC_REG_SC_VBUS:
 414:Src/register_interface.c ****         case MC_REG_SC_MEAS_NOMINALSPEED:
 415:Src/register_interface.c ****         {
 416:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2695              		.loc 6 416 18
 2696 05d4 0423     		movs	r3, #4
 2697 05d6 87F84F30 		strb	r3, [r7, #79]
 417:Src/register_interface.c ****           break;
 2698              		.loc 6 417 11
 2699 05da 55E0     		b	.L141
 2700              	.L133:
 418:Src/register_interface.c ****         }
 419:Src/register_interface.c **** 
 420:Src/register_interface.c ****         case MC_REG_SC_CURRENT:
 421:Src/register_interface.c ****         { /* Profiler is supported only by series supporting unaligned access */
 422:Src/register_interface.c ****           if(SCC.sm_state==SCC_IDLE || SCC_CALIBRATION_END==SCC.sm_state)
 2701              		.loc 6 422 17
 2702 05dc 0E4B     		ldr	r3, .L155+12
 2703 05de 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 2704              		.loc 6 422 13
 2705 05e2 002B     		cmp	r3, #0
 2706 05e4 04D0     		beq	.L142
 2707              		.loc 6 422 64 discriminator 1
 2708 05e6 0C4B     		ldr	r3, .L155+12
 2709 05e8 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 2710              		.loc 6 422 37 discriminator 1
 2711 05ec 0A2B     		cmp	r3, #10
 2712 05ee 09D1     		bne	.L143
 2713              	.L142:
 2714              	.LBB11:
 423:Src/register_interface.c ****           {
ARM GAS  /tmp/cctuZX3B.s 			page 84


 424:Src/register_interface.c ****             float fregdata = *(float*)data; //cstat !MISRAC2012-Rule-11.3
 2715              		.loc 6 424 19
 2716 05f0 BB68     		ldr	r3, [r7, #8]
 2717 05f2 1B68     		ldr	r3, [r3]	@ float
 2718 05f4 3B62     		str	r3, [r7, #32]	@ float
 425:Src/register_interface.c ****             SCC_SetNominalCurrent(&SCC, fregdata);
 2719              		.loc 6 425 13
 2720 05f6 97ED080A 		vldr.32	s0, [r7, #32]
 2721 05fa 0748     		ldr	r0, .L155+12
 2722 05fc FFF7FEFF 		bl	SCC_SetNominalCurrent
 2723              	.LBE11:
 423:Src/register_interface.c ****           {
 2724              		.loc 6 423 11
 2725 0600 00BF     		nop
 426:Src/register_interface.c ****           }
 427:Src/register_interface.c ****           else{
 428:Src/register_interface.c ****               retVal = MCP_ERROR_RO_REG;
 429:Src/register_interface.c ****           }
 430:Src/register_interface.c ****           break;
 2726              		.loc 6 430 11
 2727 0602 41E0     		b	.L141
 2728              	.L143:
 428:Src/register_interface.c ****           }
 2729              		.loc 6 428 22
 2730 0604 0423     		movs	r3, #4
 2731 0606 87F84F30 		strb	r3, [r7, #79]
 2732              		.loc 6 430 11
 2733 060a 3DE0     		b	.L141
 2734              	.L156:
 2735              		.align	2
 2736              	.L155:
 2737 060c 00000000 		.word	PIDSpeedHandle_M1
 2738 0610 00000000 		.word	STO_PLL_M1
 2739 0614 34000000 		.word	STO_PLL_M1+52
 2740 0618 00000000 		.word	SCC
 2741 061c ABAAAA2A 		.word	715827883
 2742 0620 00000000 		.word	FF_M1
 2743              	.L132:
 2744              	.LBB12:
 431:Src/register_interface.c ****         }
 432:Src/register_interface.c **** 
 433:Src/register_interface.c ****         case MC_REG_SC_SPDBANDWIDTH:
 434:Src/register_interface.c ****         {
 435:Src/register_interface.c ****           float fregdata = *(float*)data; //cstat !MISRAC2012-Rule-11.3
 2745              		.loc 6 435 17
 2746 0624 BB68     		ldr	r3, [r7, #8]
 2747 0626 1B68     		ldr	r3, [r3]	@ float
 2748 0628 7B62     		str	r3, [r7, #36]	@ float
 436:Src/register_interface.c ****           OTT_SetSpeedRegulatorBandwidth(&OTT, fregdata);
 2749              		.loc 6 436 11
 2750 062a 97ED090A 		vldr.32	s0, [r7, #36]
 2751 062e 4448     		ldr	r0, .L157
 2752 0630 FFF7FEFF 		bl	OTT_SetSpeedRegulatorBandwidth
 437:Src/register_interface.c ****           break;
 2753              		.loc 6 437 11
 2754 0634 28E0     		b	.L141
 2755              	.L131:
ARM GAS  /tmp/cctuZX3B.s 			page 85


 2756              	.LBE12:
 2757              	.LBB13:
 438:Src/register_interface.c ****         }
 439:Src/register_interface.c **** 
 440:Src/register_interface.c ****         case MC_REG_SC_LDLQRATIO:
 441:Src/register_interface.c ****         {
 442:Src/register_interface.c ****           float fregdata = *(float*)data; //cstat !MISRAC2012-Rule-11.3
 2758              		.loc 6 442 17
 2759 0636 BB68     		ldr	r3, [r7, #8]
 2760 0638 1B68     		ldr	r3, [r3]	@ float
 2761 063a BB62     		str	r3, [r7, #40]	@ float
 443:Src/register_interface.c ****           SCC_SetLdLqRatio(&SCC, fregdata);
 2762              		.loc 6 443 11
 2763 063c 97ED0A0A 		vldr.32	s0, [r7, #40]
 2764 0640 4048     		ldr	r0, .L157+4
 2765 0642 FFF7FEFF 		bl	SCC_SetLdLqRatio
 444:Src/register_interface.c ****           break;
 2766              		.loc 6 444 11
 2767 0646 1FE0     		b	.L141
 2768              	.L130:
 2769              	.LBE13:
 445:Src/register_interface.c ****         }
 446:Src/register_interface.c **** 
 447:Src/register_interface.c ****         case MC_REG_SC_NOMINAL_SPEED:
 448:Src/register_interface.c ****         {
 449:Src/register_interface.c ****           SCC_SetNominalSpeed (&SCC, (int32_t) regdata32);
 2770              		.loc 6 449 11
 2771 0648 7B6B     		ldr	r3, [r7, #52]
 2772 064a 1946     		mov	r1, r3
 2773 064c 3D48     		ldr	r0, .L157+4
 2774 064e FFF7FEFF 		bl	SCC_SetNominalSpeed
 450:Src/register_interface.c ****           break;
 2775              		.loc 6 450 11
 2776 0652 19E0     		b	.L141
 2777              	.L129:
 2778              	.LBB14:
 451:Src/register_interface.c ****         }
 452:Src/register_interface.c **** 
 453:Src/register_interface.c ****         case MC_REG_SC_CURRBANDWIDTH:
 454:Src/register_interface.c ****         {
 455:Src/register_interface.c ****           float fregdata = *(float*)data; //cstat !MISRAC2012-Rule-11.3
 2779              		.loc 6 455 17
 2780 0654 BB68     		ldr	r3, [r7, #8]
 2781 0656 1B68     		ldr	r3, [r3]	@ float
 2782 0658 FB62     		str	r3, [r7, #44]	@ float
 456:Src/register_interface.c ****           SCC_SetCurrentBandwidth(&SCC, fregdata);
 2783              		.loc 6 456 11
 2784 065a 97ED0B0A 		vldr.32	s0, [r7, #44]
 2785 065e 3948     		ldr	r0, .L157+4
 2786 0660 FFF7FEFF 		bl	SCC_SetCurrentBandwidth
 457:Src/register_interface.c ****           break;
 2787              		.loc 6 457 11
 2788 0664 10E0     		b	.L141
 2789              	.L126:
 2790              	.LBE14:
 2791              	.LBB15:
 458:Src/register_interface.c ****         }
ARM GAS  /tmp/cctuZX3B.s 			page 86


 459:Src/register_interface.c ****         case MC_REG_RESISTOR_OFFSET:
 460:Src/register_interface.c ****         {
 461:Src/register_interface.c ****           float fregdata = *(float*)data;
 2792              		.loc 6 461 17
 2793 0666 BB68     		ldr	r3, [r7, #8]
 2794 0668 1B68     		ldr	r3, [r3]	@ float
 2795 066a 3B63     		str	r3, [r7, #48]	@ float
 462:Src/register_interface.c ****           SCC_SetResistorOffset(&SCC,fregdata);
 2796              		.loc 6 462 11
 2797 066c 97ED0C0A 		vldr.32	s0, [r7, #48]
 2798 0670 3448     		ldr	r0, .L157+4
 2799 0672 FFF7FEFF 		bl	SCC_SetResistorOffset
 463:Src/register_interface.c ****           break;
 2800              		.loc 6 463 11
 2801 0676 07E0     		b	.L141
 2802              	.L128:
 2803              	.LBE15:
 464:Src/register_interface.c ****         }
 465:Src/register_interface.c ****         case MC_REG_SC_J:
 466:Src/register_interface.c ****         case MC_REG_SC_F:
 467:Src/register_interface.c ****         case MC_REG_SC_MAX_CURRENT:
 468:Src/register_interface.c ****         case MC_REG_SC_STARTUP_SPEED:
 469:Src/register_interface.c ****         case MC_REG_SC_STARTUP_ACC:
 470:Src/register_interface.c ****         {
 471:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 2804              		.loc 6 471 18
 2805 0678 0423     		movs	r3, #4
 2806 067a 87F84F30 		strb	r3, [r7, #79]
 472:Src/register_interface.c ****           break;
 2807              		.loc 6 472 11
 2808 067e 03E0     		b	.L141
 2809              	.L127:
 473:Src/register_interface.c ****         }
 474:Src/register_interface.c **** 
 475:Src/register_interface.c ****         default:
 476:Src/register_interface.c ****         {
 477:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 2810              		.loc 6 477 18
 2811 0680 0523     		movs	r3, #5
 2812 0682 87F84F30 		strb	r3, [r7, #79]
 478:Src/register_interface.c ****           break;
 2813              		.loc 6 478 11
 2814 0686 00BF     		nop
 2815              	.L141:
 479:Src/register_interface.c ****         }
 480:Src/register_interface.c ****       }
 481:Src/register_interface.c ****       *size = 4;
 2816              		.loc 6 481 13
 2817 0688 7B68     		ldr	r3, [r7, #4]
 2818 068a 0422     		movs	r2, #4
 2819 068c 1A80     		strh	r2, [r3]	@ movhi
 482:Src/register_interface.c ****       break;
 2820              		.loc 6 482 7
 2821 068e 50E0     		b	.L107
 2822              	.L92:
 2823              	.LBE10:
 2824              	.LBB16:
ARM GAS  /tmp/cctuZX3B.s 			page 87


 483:Src/register_interface.c ****     }
 484:Src/register_interface.c **** 
 485:Src/register_interface.c ****     case TYPE_DATA_RAW:
 486:Src/register_interface.c ****     {
 487:Src/register_interface.c ****       uint16_t rawSize = *(uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 2825              		.loc 6 487 16
 2826 0690 BB68     		ldr	r3, [r7, #8]
 2827 0692 1B88     		ldrh	r3, [r3]	@ movhi
 2828 0694 A7F84630 		strh	r3, [r7, #70]	@ movhi
 488:Src/register_interface.c ****       /* The size consumed by the structure is the structure size + 2 bytes used to store the size 
 489:Src/register_interface.c ****       *size = rawSize + 2U;
 2829              		.loc 6 489 23
 2830 0698 B7F84630 		ldrh	r3, [r7, #70]	@ movhi
 2831 069c 0233     		adds	r3, r3, #2
 2832 069e 9AB2     		uxth	r2, r3
 2833              		.loc 6 489 13
 2834 06a0 7B68     		ldr	r3, [r7, #4]
 2835 06a2 1A80     		strh	r2, [r3]	@ movhi
 490:Src/register_interface.c ****       uint8_t *rawData = data; /* rawData points to the first data (after size extraction) */
 2836              		.loc 6 490 16
 2837 06a4 BB68     		ldr	r3, [r7, #8]
 2838 06a6 3B64     		str	r3, [r7, #64]
 491:Src/register_interface.c ****       rawData++;
 2839              		.loc 6 491 14
 2840 06a8 3B6C     		ldr	r3, [r7, #64]
 2841 06aa 0133     		adds	r3, r3, #1
 2842 06ac 3B64     		str	r3, [r7, #64]
 492:Src/register_interface.c ****       rawData++;
 2843              		.loc 6 492 14
 2844 06ae 3B6C     		ldr	r3, [r7, #64]
 2845 06b0 0133     		adds	r3, r3, #1
 2846 06b2 3B64     		str	r3, [r7, #64]
 493:Src/register_interface.c **** 
 494:Src/register_interface.c ****       if (*size > (uint16_t)dataAvailable)
 2847              		.loc 6 494 11
 2848 06b4 7B68     		ldr	r3, [r7, #4]
 2849 06b6 1A88     		ldrh	r2, [r3]
 2850              		.loc 6 494 17
 2851 06b8 B7F85830 		ldrh	r3, [r7, #88]
 2852              		.loc 6 494 10
 2853 06bc 9A42     		cmp	r2, r3
 2854 06be 06D9     		bls	.L145
 495:Src/register_interface.c ****       {
 496:Src/register_interface.c ****         /* The decoded size of the raw structure can not match with transmitted buffer, error in bu
 497:Src/register_interface.c ****            construction */
 498:Src/register_interface.c ****         *size = 0;
 2855              		.loc 6 498 15
 2856 06c0 7B68     		ldr	r3, [r7, #4]
 2857 06c2 0022     		movs	r2, #0
 2858 06c4 1A80     		strh	r2, [r3]	@ movhi
 499:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_RAW_FORMAT; /* This error stop the parsing of the CMD buffer */
 2859              		.loc 6 499 16
 2860 06c6 0A23     		movs	r3, #10
 2861 06c8 87F84F30 		strb	r3, [r7, #79]
 500:Src/register_interface.c ****       }
 501:Src/register_interface.c ****       else
 502:Src/register_interface.c ****       {
ARM GAS  /tmp/cctuZX3B.s 			page 88


 503:Src/register_interface.c ****         switch (regID)
 504:Src/register_interface.c ****         {
 505:Src/register_interface.c ****           case MC_REG_APPLICATION_CONFIG:
 506:Src/register_interface.c ****           case MC_REG_GLOBAL_CONFIG:
 507:Src/register_interface.c ****           case MC_REG_FOCFW_CONFIG:
 508:Src/register_interface.c ****           {
 509:Src/register_interface.c ****             retVal = MCP_ERROR_RO_REG;
 510:Src/register_interface.c ****             break;
 511:Src/register_interface.c ****           }
 512:Src/register_interface.c **** 
 513:Src/register_interface.c ****           case MC_REG_SPEED_RAMP:
 514:Src/register_interface.c ****           {
 515:Src/register_interface.c ****             int32_t rpm;
 516:Src/register_interface.c ****             uint16_t duration;
 517:Src/register_interface.c **** 
 518:Src/register_interface.c ****             rpm = *(int32_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 519:Src/register_interface.c ****             duration = *(uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 520:Src/register_interface.c ****             MCI_ExecSpeedRamp(pMCIN, (int16_t)((rpm * SPEED_UNIT) / U_RPM), duration);
 521:Src/register_interface.c ****             break;
 522:Src/register_interface.c ****           }
 523:Src/register_interface.c **** 
 524:Src/register_interface.c ****           default:
 525:Src/register_interface.c ****           {
 526:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 527:Src/register_interface.c ****             break;
 528:Src/register_interface.c ****           }
 529:Src/register_interface.c ****         }
 530:Src/register_interface.c ****       }
 531:Src/register_interface.c ****       break;
 2862              		.loc 6 531 7
 2863 06cc 31E0     		b	.L107
 2864              	.L145:
 503:Src/register_interface.c ****         {
 2865              		.loc 6 503 9
 2866 06ce FB89     		ldrh	r3, [r7, #14]
 2867 06d0 B3F5D47F 		cmp	r3, #424
 2868 06d4 0ED0     		beq	.L147
 2869 06d6 B3F5D47F 		cmp	r3, #424
 2870 06da 1EDC     		bgt	.L148
 2871 06dc E82B     		cmp	r3, #232
 2872 06de 05D0     		beq	.L149
 2873 06e0 E82B     		cmp	r3, #232
 2874 06e2 1ADC     		bgt	.L148
 2875 06e4 282B     		cmp	r3, #40
 2876 06e6 01D0     		beq	.L149
 2877 06e8 A82B     		cmp	r3, #168
 2878 06ea 16D1     		bne	.L148
 2879              	.L149:
 509:Src/register_interface.c ****             break;
 2880              		.loc 6 509 20
 2881 06ec 0423     		movs	r3, #4
 2882 06ee 87F84F30 		strb	r3, [r7, #79]
 510:Src/register_interface.c ****           }
 2883              		.loc 6 510 13
 2884 06f2 16E0     		b	.L146
 2885              	.L147:
 2886              	.LBB17:
ARM GAS  /tmp/cctuZX3B.s 			page 89


 518:Src/register_interface.c ****             duration = *(uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 2887              		.loc 6 518 17
 2888 06f4 3B6C     		ldr	r3, [r7, #64]
 2889 06f6 1B68     		ldr	r3, [r3]
 2890 06f8 FB63     		str	r3, [r7, #60]
 519:Src/register_interface.c ****             MCI_ExecSpeedRamp(pMCIN, (int16_t)((rpm * SPEED_UNIT) / U_RPM), duration);
 2891              		.loc 6 519 22
 2892 06fa 3B6C     		ldr	r3, [r7, #64]
 2893 06fc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2894 06fe 7B87     		strh	r3, [r7, #58]	@ movhi
 520:Src/register_interface.c ****             break;
 2895              		.loc 6 520 67
 2896 0700 FB6B     		ldr	r3, [r7, #60]
 2897 0702 114A     		ldr	r2, .L157+8
 2898 0704 82FB0312 		smull	r1, r2, r2, r3
 2899 0708 DB17     		asrs	r3, r3, #31
 2900 070a D31A     		subs	r3, r2, r3
 520:Src/register_interface.c ****             break;
 2901              		.loc 6 520 13
 2902 070c 1BB2     		sxth	r3, r3
 2903 070e 7A8F     		ldrh	r2, [r7, #58]
 2904 0710 1946     		mov	r1, r3
 2905 0712 B86C     		ldr	r0, [r7, #72]
 2906 0714 FFF7FEFF 		bl	MCI_ExecSpeedRamp
 521:Src/register_interface.c ****           }
 2907              		.loc 6 521 13
 2908 0718 03E0     		b	.L146
 2909              	.L148:
 2910              	.LBE17:
 526:Src/register_interface.c ****             break;
 2911              		.loc 6 526 20
 2912 071a 0523     		movs	r3, #5
 2913 071c 87F84F30 		strb	r3, [r7, #79]
 527:Src/register_interface.c ****           }
 2914              		.loc 6 527 13
 2915 0720 00BF     		nop
 2916              	.L146:
 2917              		.loc 6 531 7
 2918 0722 06E0     		b	.L107
 2919              	.L93:
 2920              	.LBE16:
 532:Src/register_interface.c ****     }
 533:Src/register_interface.c **** 
 534:Src/register_interface.c ****     default:
 535:Src/register_interface.c ****     {
 536:Src/register_interface.c ****       retVal = MCP_ERROR_BAD_DATA_TYPE;
 2921              		.loc 6 536 14
 2922 0724 0723     		movs	r3, #7
 2923 0726 87F84F30 		strb	r3, [r7, #79]
 537:Src/register_interface.c ****       *size =0; /* From this point we are not able anymore to decode the RX buffer */
 2924              		.loc 6 537 13
 2925 072a 7B68     		ldr	r3, [r7, #4]
 2926 072c 0022     		movs	r2, #0
 2927 072e 1A80     		strh	r2, [r3]	@ movhi
 538:Src/register_interface.c ****       break;
 2928              		.loc 6 538 7
 2929 0730 00BF     		nop
ARM GAS  /tmp/cctuZX3B.s 			page 90


 2930              	.L107:
 539:Src/register_interface.c ****     }
 540:Src/register_interface.c ****   }
 541:Src/register_interface.c ****   return (retVal);
 2931              		.loc 6 541 10
 2932 0732 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 542:Src/register_interface.c **** }
 2933              		.loc 6 542 1
 2934 0736 1846     		mov	r0, r3
 2935 0738 5037     		adds	r7, r7, #80
 2936              	.LCFI206:
 2937              		.cfi_def_cfa_offset 8
 2938 073a BD46     		mov	sp, r7
 2939              	.LCFI207:
 2940              		.cfi_def_cfa_register 13
 2941              		@ sp needed
 2942 073c 80BD     		pop	{r7, pc}
 2943              	.L158:
 2944 073e 00BF     		.align	2
 2945              	.L157:
 2946 0740 00000000 		.word	OTT
 2947 0744 00000000 		.word	SCC
 2948 0748 ABAAAA2A 		.word	715827883
 2949              		.cfi_endproc
 2950              	.LFE1714:
 2952              		.section	.text.RI_GetRegisterGlobal,"ax",%progbits
 2953              		.align	1
 2954              		.global	RI_GetRegisterGlobal
 2955              		.syntax unified
 2956              		.thumb
 2957              		.thumb_func
 2958              		.fpu fpv4-sp-d16
 2960              	RI_GetRegisterGlobal:
 2961              	.LFB1715:
 543:Src/register_interface.c **** 
 544:Src/register_interface.c **** uint8_t RI_GetRegisterGlobal(uint16_t regID,uint8_t typeID,uint8_t * data,uint16_t *size,int16_t fr
 2962              		.loc 6 544 108
 2963              		.cfi_startproc
 2964              		@ args = 4, pretend = 0, frame = 48
 2965              		@ frame_needed = 1, uses_anonymous_args = 0
 2966 0000 80B5     		push	{r7, lr}
 2967              	.LCFI208:
 2968              		.cfi_def_cfa_offset 8
 2969              		.cfi_offset 7, -8
 2970              		.cfi_offset 14, -4
 2971 0002 8CB0     		sub	sp, sp, #48
 2972              	.LCFI209:
 2973              		.cfi_def_cfa_offset 56
 2974 0004 00AF     		add	r7, sp, #0
 2975              	.LCFI210:
 2976              		.cfi_def_cfa_register 7
 2977 0006 BA60     		str	r2, [r7, #8]
 2978 0008 7B60     		str	r3, [r7, #4]
 2979 000a 0346     		mov	r3, r0	@ movhi
 2980 000c FB81     		strh	r3, [r7, #14]	@ movhi
 2981 000e 0B46     		mov	r3, r1
 2982 0010 7B73     		strb	r3, [r7, #13]
ARM GAS  /tmp/cctuZX3B.s 			page 91


 545:Src/register_interface.c ****     uint8_t retVal = MCP_CMD_OK;
 2983              		.loc 6 545 13
 2984 0012 0023     		movs	r3, #0
 2985 0014 87F82F30 		strb	r3, [r7, #47]
 546:Src/register_interface.c ****     uint8_t motorID=0;
 2986              		.loc 6 546 13
 2987 0018 0023     		movs	r3, #0
 2988 001a 87F82E30 		strb	r3, [r7, #46]
 547:Src/register_interface.c ****     MCI_Handle_t *pMCIN = &Mci[motorID];
 2989              		.loc 6 547 31
 2990 001e 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 2991              		.loc 6 547 19
 2992 0022 2C22     		movs	r2, #44
 2993 0024 02FB03F3 		mul	r3, r2, r3
 2994 0028 804A     		ldr	r2, .L188
 2995 002a 1344     		add	r3, r3, r2
 2996 002c BB62     		str	r3, [r7, #40]
 548:Src/register_interface.c ****     switch (typeID)
 2997              		.loc 6 548 5
 2998 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2999 0030 083B     		subs	r3, r3, #8
 3000 0032 202B     		cmp	r3, #32
 3001 0034 00F2EF80 		bhi	.L160
 3002 0038 01A2     		adr	r2, .L162
 3003 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3004 003e 00BF     		.p2align 2
 3005              	.L162:
 3006 0040 C5000000 		.word	.L166+1
 3007 0044 17020000 		.word	.L160+1
 3008 0048 17020000 		.word	.L160+1
 3009 004c 17020000 		.word	.L160+1
 3010 0050 17020000 		.word	.L160+1
 3011 0054 17020000 		.word	.L160+1
 3012 0058 17020000 		.word	.L160+1
 3013 005c 17020000 		.word	.L160+1
 3014 0060 E5000000 		.word	.L165+1
 3015 0064 17020000 		.word	.L160+1
 3016 0068 17020000 		.word	.L160+1
 3017 006c 17020000 		.word	.L160+1
 3018 0070 17020000 		.word	.L160+1
 3019 0074 17020000 		.word	.L160+1
 3020 0078 17020000 		.word	.L160+1
 3021 007c 17020000 		.word	.L160+1
 3022 0080 15010000 		.word	.L164+1
 3023 0084 17020000 		.word	.L160+1
 3024 0088 17020000 		.word	.L160+1
 3025 008c 17020000 		.word	.L160+1
 3026 0090 17020000 		.word	.L160+1
 3027 0094 17020000 		.word	.L160+1
 3028 0098 17020000 		.word	.L160+1
 3029 009c 17020000 		.word	.L160+1
 3030 00a0 AB010000 		.word	.L163+1
 3031 00a4 17020000 		.word	.L160+1
 3032 00a8 17020000 		.word	.L160+1
 3033 00ac 17020000 		.word	.L160+1
 3034 00b0 17020000 		.word	.L160+1
 3035 00b4 17020000 		.word	.L160+1
ARM GAS  /tmp/cctuZX3B.s 			page 92


 3036 00b8 17020000 		.word	.L160+1
 3037 00bc 17020000 		.word	.L160+1
 3038 00c0 BB010000 		.word	.L161+1
 3039              		.p2align 1
 3040              	.L166:
 549:Src/register_interface.c ****     {
 550:Src/register_interface.c ****       case TYPE_DATA_8BIT:
 551:Src/register_interface.c ****       {
 552:Src/register_interface.c ****         if (freeSpace > 0)
 3041              		.loc 6 552 12
 3042 00c4 B7F93830 		ldrsh	r3, [r7, #56]
 3043 00c8 002B     		cmp	r3, #0
 3044 00ca 07DD     		ble	.L167
 553:Src/register_interface.c ****         {
 554:Src/register_interface.c ****           switch (regID)
 555:Src/register_interface.c ****           {
 556:Src/register_interface.c ****             default:
 557:Src/register_interface.c ****             {
 558:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 3045              		.loc 6 558 22
 3046 00cc 0523     		movs	r3, #5
 3047 00ce 87F82F30 		strb	r3, [r7, #47]
 559:Src/register_interface.c ****               break;
 3048              		.loc 6 559 15
 3049 00d2 00BF     		nop
 560:Src/register_interface.c ****             }
 561:Src/register_interface.c ****           }
 562:Src/register_interface.c ****           *size = 1;
 3050              		.loc 6 562 17
 3051 00d4 7B68     		ldr	r3, [r7, #4]
 3052 00d6 0122     		movs	r2, #1
 3053 00d8 1A80     		strh	r2, [r3]	@ movhi
 563:Src/register_interface.c ****         }
 564:Src/register_interface.c ****         else
 565:Src/register_interface.c ****         {
 566:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 567:Src/register_interface.c ****         }
 568:Src/register_interface.c ****         break;
 3054              		.loc 6 568 9
 3055 00da A0E0     		b	.L169
 3056              	.L167:
 566:Src/register_interface.c ****         }
 3057              		.loc 6 566 18
 3058 00dc 0823     		movs	r3, #8
 3059 00de 87F82F30 		strb	r3, [r7, #47]
 3060              		.loc 6 568 9
 3061 00e2 9CE0     		b	.L169
 3062              	.L165:
 569:Src/register_interface.c ****       }
 570:Src/register_interface.c **** 
 571:Src/register_interface.c ****       case TYPE_DATA_16BIT:
 572:Src/register_interface.c ****       {
 573:Src/register_interface.c ****         if (freeSpace >= 2)
 3063              		.loc 6 573 12
 3064 00e4 B7F93830 		ldrsh	r3, [r7, #56]
 3065 00e8 012B     		cmp	r3, #1
 3066 00ea 0FDD     		ble	.L170
ARM GAS  /tmp/cctuZX3B.s 			page 93


 574:Src/register_interface.c ****         {
 575:Src/register_interface.c ****           switch (regID)
 3067              		.loc 6 575 11
 3068 00ec FB89     		ldrh	r3, [r7, #14]
 3069 00ee B3F5656F 		cmp	r3, #3664
 3070 00f2 06D0     		beq	.L187
 3071 00f4 B3F5696F 		cmp	r3, #3728
 3072 00f8 03D0     		beq	.L187
 576:Src/register_interface.c ****           {
 577:Src/register_interface.c ****             case MC_REG_DAC_USER1:
 578:Src/register_interface.c ****             case MC_REG_DAC_USER2:
 579:Src/register_interface.c ****               break;
 580:Src/register_interface.c **** 
 581:Src/register_interface.c ****             default:
 582:Src/register_interface.c ****             {
 583:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 3073              		.loc 6 583 22
 3074 00fa 0523     		movs	r3, #5
 3075 00fc 87F82F30 		strb	r3, [r7, #47]
 584:Src/register_interface.c ****               break;
 3076              		.loc 6 584 15
 3077 0100 00E0     		b	.L173
 3078              	.L187:
 579:Src/register_interface.c **** 
 3079              		.loc 6 579 15
 3080 0102 00BF     		nop
 3081              	.L173:
 585:Src/register_interface.c ****             }
 586:Src/register_interface.c ****           }
 587:Src/register_interface.c ****           *size = 2;
 3082              		.loc 6 587 17
 3083 0104 7B68     		ldr	r3, [r7, #4]
 3084 0106 0222     		movs	r2, #2
 3085 0108 1A80     		strh	r2, [r3]	@ movhi
 588:Src/register_interface.c ****         }
 589:Src/register_interface.c ****         else
 590:Src/register_interface.c ****         {
 591:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 592:Src/register_interface.c ****         }
 593:Src/register_interface.c ****         break;
 3086              		.loc 6 593 9
 3087 010a 88E0     		b	.L169
 3088              	.L170:
 591:Src/register_interface.c ****         }
 3089              		.loc 6 591 18
 3090 010c 0823     		movs	r3, #8
 3091 010e 87F82F30 		strb	r3, [r7, #47]
 3092              		.loc 6 593 9
 3093 0112 84E0     		b	.L169
 3094              	.L164:
 3095              	.LBB18:
 594:Src/register_interface.c ****       }
 595:Src/register_interface.c **** 
 596:Src/register_interface.c ****       case TYPE_DATA_32BIT:
 597:Src/register_interface.c ****       {
 598:Src/register_interface.c ****         uint32_t *regdataU32 = (uint32_t *)data; //cstat !MISRAC2012-Rule-11.3
 3096              		.loc 6 598 19
ARM GAS  /tmp/cctuZX3B.s 			page 94


 3097 0114 BB68     		ldr	r3, [r7, #8]
 3098 0116 FB61     		str	r3, [r7, #28]
 599:Src/register_interface.c ****         if (freeSpace >= 4)
 3099              		.loc 6 599 12
 3100 0118 B7F93830 		ldrsh	r3, [r7, #56]
 3101 011c 032B     		cmp	r3, #3
 3102 011e 40DD     		ble	.L175
 600:Src/register_interface.c ****         {
 601:Src/register_interface.c ****           switch (regID)
 3103              		.loc 6 601 11
 3104 0120 FB89     		ldrh	r3, [r7, #14]
 3105 0122 41F29862 		movw	r2, #5784
 3106 0126 9342     		cmp	r3, r2
 3107 0128 26D0     		beq	.L176
 3108 012a 41F29862 		movw	r2, #5784
 3109 012e 9342     		cmp	r3, r2
 3110 0130 2FDC     		bgt	.L177
 3111 0132 41F21862 		movw	r2, #5656
 3112 0136 9342     		cmp	r3, r2
 3113 0138 04D0     		beq	.L178
 3114 013a 41F25862 		movw	r2, #5720
 3115 013e 9342     		cmp	r3, r2
 3116 0140 0DD0     		beq	.L179
 3117 0142 26E0     		b	.L177
 3118              	.L178:
 3119              	.LBB19:
 602:Src/register_interface.c ****           {
 603:Src/register_interface.c ****             case MC_REG_PERF_CPU_LOAD:
 604:Src/register_interface.c ****             {
 605:Src/register_interface.c ****               FloatToU32 ReadVal;
 606:Src/register_interface.c ****               ReadVal.Float_Val = MC_Perf_GetCPU_Load(pMCIN->pPerfMeasure);
 3120              		.loc 6 606 60
 3121 0144 BB6A     		ldr	r3, [r7, #40]
 3122 0146 9B6A     		ldr	r3, [r3, #40]
 3123              		.loc 6 606 35
 3124 0148 1846     		mov	r0, r3
 3125 014a FFF7FEFF 		bl	MC_Perf_GetCPU_Load
 3126 014e F0EE407A 		vmov.f32	s15, s0
 3127              		.loc 6 606 33
 3128 0152 C7ED067A 		vstr.32	s15, [r7, #24]
 607:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 3129              		.loc 6 607 36
 3130 0156 BA69     		ldr	r2, [r7, #24]
 3131              		.loc 6 607 27
 3132 0158 FB69     		ldr	r3, [r7, #28]
 3133 015a 1A60     		str	r2, [r3]
 608:Src/register_interface.c ****               break;
 3134              		.loc 6 608 15
 3135 015c 1DE0     		b	.L180
 3136              	.L179:
 3137              	.LBE19:
 3138              	.LBB20:
 609:Src/register_interface.c ****             }
 610:Src/register_interface.c **** 
 611:Src/register_interface.c ****             case MC_REG_PERF_MIN_CPU_LOAD:
 612:Src/register_interface.c ****             {
 613:Src/register_interface.c ****               FloatToU32 ReadVal;
ARM GAS  /tmp/cctuZX3B.s 			page 95


 614:Src/register_interface.c ****               ReadVal.Float_Val = MC_Perf_GetMinCPU_Load(pMCIN->pPerfMeasure);
 3139              		.loc 6 614 63
 3140 015e BB6A     		ldr	r3, [r7, #40]
 3141 0160 9B6A     		ldr	r3, [r3, #40]
 3142              		.loc 6 614 35
 3143 0162 1846     		mov	r0, r3
 3144 0164 FFF7FEFF 		bl	MC_Perf_GetMinCPU_Load
 3145 0168 F0EE407A 		vmov.f32	s15, s0
 3146              		.loc 6 614 33
 3147 016c C7ED057A 		vstr.32	s15, [r7, #20]
 615:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 3148              		.loc 6 615 36
 3149 0170 7A69     		ldr	r2, [r7, #20]
 3150              		.loc 6 615 27
 3151 0172 FB69     		ldr	r3, [r7, #28]
 3152 0174 1A60     		str	r2, [r3]
 616:Src/register_interface.c ****               break;
 3153              		.loc 6 616 15
 3154 0176 10E0     		b	.L180
 3155              	.L176:
 3156              	.LBE20:
 3157              	.LBB21:
 617:Src/register_interface.c ****             }
 618:Src/register_interface.c **** 
 619:Src/register_interface.c ****             case MC_REG_PERF_MAX_CPU_LOAD:
 620:Src/register_interface.c ****             {
 621:Src/register_interface.c ****               FloatToU32 ReadVal;
 622:Src/register_interface.c ****               ReadVal.Float_Val = MC_Perf_GetMaxCPU_Load(pMCIN->pPerfMeasure);
 3158              		.loc 6 622 63
 3159 0178 BB6A     		ldr	r3, [r7, #40]
 3160 017a 9B6A     		ldr	r3, [r3, #40]
 3161              		.loc 6 622 35
 3162 017c 1846     		mov	r0, r3
 3163 017e FFF7FEFF 		bl	MC_Perf_GetMaxCPU_Load
 3164 0182 F0EE407A 		vmov.f32	s15, s0
 3165              		.loc 6 622 33
 3166 0186 C7ED047A 		vstr.32	s15, [r7, #16]
 623:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 3167              		.loc 6 623 36
 3168 018a 3A69     		ldr	r2, [r7, #16]
 3169              		.loc 6 623 27
 3170 018c FB69     		ldr	r3, [r7, #28]
 3171 018e 1A60     		str	r2, [r3]
 624:Src/register_interface.c ****               break;
 3172              		.loc 6 624 15
 3173 0190 03E0     		b	.L180
 3174              	.L177:
 3175              	.LBE21:
 625:Src/register_interface.c ****             }
 626:Src/register_interface.c **** 
 627:Src/register_interface.c ****             default:
 628:Src/register_interface.c ****             {
 629:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 3176              		.loc 6 629 22
 3177 0192 0523     		movs	r3, #5
 3178 0194 87F82F30 		strb	r3, [r7, #47]
 630:Src/register_interface.c ****               break;
ARM GAS  /tmp/cctuZX3B.s 			page 96


 3179              		.loc 6 630 15
 3180 0198 00BF     		nop
 3181              	.L180:
 631:Src/register_interface.c ****             }
 632:Src/register_interface.c ****           }
 633:Src/register_interface.c ****           *size = 4;
 3182              		.loc 6 633 17
 3183 019a 7B68     		ldr	r3, [r7, #4]
 3184 019c 0422     		movs	r2, #4
 3185 019e 1A80     		strh	r2, [r3]	@ movhi
 634:Src/register_interface.c ****         }
 635:Src/register_interface.c ****         else
 636:Src/register_interface.c ****         {
 637:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 638:Src/register_interface.c ****         }
 639:Src/register_interface.c ****         break;
 3186              		.loc 6 639 9
 3187 01a0 3DE0     		b	.L169
 3188              	.L175:
 637:Src/register_interface.c ****         }
 3189              		.loc 6 637 18
 3190 01a2 0823     		movs	r3, #8
 3191 01a4 87F82F30 		strb	r3, [r7, #47]
 3192              		.loc 6 639 9
 3193 01a8 39E0     		b	.L169
 3194              	.L163:
 3195              	.LBE18:
 640:Src/register_interface.c ****       }
 641:Src/register_interface.c **** 
 642:Src/register_interface.c ****       case TYPE_DATA_STRING:
 643:Src/register_interface.c ****       {
 644:Src/register_interface.c ****         switch (regID)
 645:Src/register_interface.c ****         {
 646:Src/register_interface.c ****           default:
 647:Src/register_interface.c ****           {
 648:Src/register_interface.c **** 
 649:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 3196              		.loc 6 649 20
 3197 01aa 0523     		movs	r3, #5
 3198 01ac 87F82F30 		strb	r3, [r7, #47]
 650:Src/register_interface.c ****             *size= 0 ; /* */
 3199              		.loc 6 650 18
 3200 01b0 7B68     		ldr	r3, [r7, #4]
 3201 01b2 0022     		movs	r2, #0
 3202 01b4 1A80     		strh	r2, [r3]	@ movhi
 651:Src/register_interface.c **** 
 652:Src/register_interface.c ****             break;
 3203              		.loc 6 652 13
 3204 01b6 00BF     		nop
 653:Src/register_interface.c ****           }
 654:Src/register_interface.c ****         }
 655:Src/register_interface.c ****         break;
 3205              		.loc 6 655 9
 3206 01b8 31E0     		b	.L169
 3207              	.L161:
 3208              	.LBB22:
 656:Src/register_interface.c **** 
ARM GAS  /tmp/cctuZX3B.s 			page 97


 657:Src/register_interface.c ****       }
 658:Src/register_interface.c ****       case TYPE_DATA_RAW:
 659:Src/register_interface.c ****       {
 660:Src/register_interface.c ****         /* First 2 bytes of the answer is reserved to the size */
 661:Src/register_interface.c ****         uint16_t *rawSize = (uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 3209              		.loc 6 661 19
 3210 01ba BB68     		ldr	r3, [r7, #8]
 3211 01bc 7B62     		str	r3, [r7, #36]
 662:Src/register_interface.c ****         uint8_t * rawData = data;
 3212              		.loc 6 662 19
 3213 01be BB68     		ldr	r3, [r7, #8]
 3214 01c0 3B62     		str	r3, [r7, #32]
 663:Src/register_interface.c ****         rawData++;
 3215              		.loc 6 663 16
 3216 01c2 3B6A     		ldr	r3, [r7, #32]
 3217 01c4 0133     		adds	r3, r3, #1
 3218 01c6 3B62     		str	r3, [r7, #32]
 664:Src/register_interface.c ****         rawData++;
 3219              		.loc 6 664 16
 3220 01c8 3B6A     		ldr	r3, [r7, #32]
 3221 01ca 0133     		adds	r3, r3, #1
 3222 01cc 3B62     		str	r3, [r7, #32]
 665:Src/register_interface.c **** 
 666:Src/register_interface.c ****         switch (regID)
 3223              		.loc 6 666 9
 3224 01ce FB89     		ldrh	r3, [r7, #14]
 3225 01d0 282B     		cmp	r3, #40
 3226 01d2 15D1     		bne	.L182
 667:Src/register_interface.c ****         {
 668:Src/register_interface.c ****           case MC_REG_GLOBAL_CONFIG:
 669:Src/register_interface.c ****           {
 670:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(GlobalConfig_reg_t);
 3227              		.loc 6 670 22
 3228 01d4 7B6A     		ldr	r3, [r7, #36]
 3229 01d6 0A22     		movs	r2, #10
 3230 01d8 1A80     		strh	r2, [r3]	@ movhi
 671:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 3231              		.loc 6 671 19
 3232 01da 7B6A     		ldr	r3, [r7, #36]
 3233 01dc 1B88     		ldrh	r3, [r3]
 3234              		.loc 6 671 29
 3235 01de 0233     		adds	r3, r3, #2
 3236              		.loc 6 671 37
 3237 01e0 3A8F     		ldrh	r2, [r7, #56]
 3238              		.loc 6 671 16
 3239 01e2 9342     		cmp	r3, r2
 3240 01e4 03D9     		bls	.L183
 672:Src/register_interface.c ****             {
 673:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 3241              		.loc 6 673 22
 3242 01e6 0823     		movs	r3, #8
 3243 01e8 87F82F30 		strb	r3, [r7, #47]
 674:Src/register_interface.c ****             }
 675:Src/register_interface.c ****             else
 676:Src/register_interface.c ****             {
 677:Src/register_interface.c ****               (void)memcpy(rawData, &globalConfig_reg, sizeof(GlobalConfig_reg_t));
 678:Src/register_interface.c ****             }
ARM GAS  /tmp/cctuZX3B.s 			page 98


 679:Src/register_interface.c ****             break;
 3244              		.loc 6 679 13
 3245 01ec 0CE0     		b	.L185
 3246              	.L183:
 677:Src/register_interface.c ****             }
 3247              		.loc 6 677 21
 3248 01ee 3B6A     		ldr	r3, [r7, #32]
 3249 01f0 0F4A     		ldr	r2, .L188+4
 3250 01f2 1068     		ldr	r0, [r2]	@ unaligned
 3251 01f4 5168     		ldr	r1, [r2, #4]	@ unaligned
 3252 01f6 1860     		str	r0, [r3]	@ unaligned
 3253 01f8 5960     		str	r1, [r3, #4]	@ unaligned
 3254 01fa 1289     		ldrh	r2, [r2, #8]	@ unaligned
 3255 01fc 1A81     		strh	r2, [r3, #8]	@ unaligned
 3256              		.loc 6 679 13
 3257 01fe 03E0     		b	.L185
 3258              	.L182:
 680:Src/register_interface.c ****           }
 681:Src/register_interface.c ****           case MC_REG_ASYNC_UARTA:
 682:Src/register_interface.c ****           case MC_REG_ASYNC_UARTB:
 683:Src/register_interface.c ****           case MC_REG_ASYNC_STLNK:
 684:Src/register_interface.c ****           default:
 685:Src/register_interface.c ****           {
 686:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 3259              		.loc 6 686 20
 3260 0200 0523     		movs	r3, #5
 3261 0202 87F82F30 		strb	r3, [r7, #47]
 687:Src/register_interface.c ****             break;
 3262              		.loc 6 687 13
 3263 0206 00BF     		nop
 3264              	.L185:
 688:Src/register_interface.c ****           }
 689:Src/register_interface.c ****         }
 690:Src/register_interface.c **** 
 691:Src/register_interface.c ****         /* Size of the answer is size of the data + 2 bytes containing data size */
 692:Src/register_interface.c ****         *size = (*rawSize) + 2U;
 3265              		.loc 6 692 18
 3266 0208 7B6A     		ldr	r3, [r7, #36]
 3267 020a 1B88     		ldrh	r3, [r3]
 3268              		.loc 6 692 28
 3269 020c 0233     		adds	r3, r3, #2
 3270 020e 9AB2     		uxth	r2, r3
 3271              		.loc 6 692 15
 3272 0210 7B68     		ldr	r3, [r7, #4]
 3273 0212 1A80     		strh	r2, [r3]	@ movhi
 693:Src/register_interface.c ****         break;
 3274              		.loc 6 693 9
 3275 0214 03E0     		b	.L169
 3276              	.L160:
 3277              	.LBE22:
 694:Src/register_interface.c ****       }
 695:Src/register_interface.c **** 
 696:Src/register_interface.c ****       default:
 697:Src/register_interface.c ****       {
 698:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_DATA_TYPE;
 3278              		.loc 6 698 16
 3279 0216 0723     		movs	r3, #7
ARM GAS  /tmp/cctuZX3B.s 			page 99


 3280 0218 87F82F30 		strb	r3, [r7, #47]
 699:Src/register_interface.c ****         break;
 3281              		.loc 6 699 9
 3282 021c 00BF     		nop
 3283              	.L169:
 700:Src/register_interface.c ****       }
 701:Src/register_interface.c ****     }
 702:Src/register_interface.c ****   return (retVal);
 3284              		.loc 6 702 10
 3285 021e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 703:Src/register_interface.c **** }
 3286              		.loc 6 703 1
 3287 0222 1846     		mov	r0, r3
 3288 0224 3037     		adds	r7, r7, #48
 3289              	.LCFI211:
 3290              		.cfi_def_cfa_offset 8
 3291 0226 BD46     		mov	sp, r7
 3292              	.LCFI212:
 3293              		.cfi_def_cfa_register 13
 3294              		@ sp needed
 3295 0228 80BD     		pop	{r7, pc}
 3296              	.L189:
 3297 022a 00BF     		.align	2
 3298              	.L188:
 3299 022c 00000000 		.word	Mci
 3300 0230 00000000 		.word	globalConfig_reg
 3301              		.cfi_endproc
 3302              	.LFE1715:
 3304              		.section	.text.RI_GetRegisterMotor1,"ax",%progbits
 3305              		.align	1
 3306              		.global	RI_GetRegisterMotor1
 3307              		.syntax unified
 3308              		.thumb
 3309              		.thumb_func
 3310              		.fpu fpv4-sp-d16
 3312              	RI_GetRegisterMotor1:
 3313              	.LFB1716:
 704:Src/register_interface.c **** 
 705:Src/register_interface.c ****   uint8_t RI_GetRegisterMotor1(uint16_t regID,uint8_t typeID,uint8_t * data,uint16_t *size,int16_t 
 3314              		.loc 6 705 111
 3315              		.cfi_startproc
 3316              		@ args = 4, pretend = 0, frame = 160
 3317              		@ frame_needed = 1, uses_anonymous_args = 0
 3318 0000 90B5     		push	{r4, r7, lr}
 3319              	.LCFI213:
 3320              		.cfi_def_cfa_offset 12
 3321              		.cfi_offset 4, -12
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 A9B0     		sub	sp, sp, #164
 3325              	.LCFI214:
 3326              		.cfi_def_cfa_offset 176
 3327 0004 00AF     		add	r7, sp, #0
 3328              	.LCFI215:
 3329              		.cfi_def_cfa_register 7
 3330 0006 BA60     		str	r2, [r7, #8]
 3331 0008 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/cctuZX3B.s 			page 100


 3332 000a 0346     		mov	r3, r0	@ movhi
 3333 000c FB81     		strh	r3, [r7, #14]	@ movhi
 3334 000e 0B46     		mov	r3, r1
 3335 0010 7B73     		strb	r3, [r7, #13]
 706:Src/register_interface.c ****     uint8_t retVal = MCP_CMD_OK;
 3336              		.loc 6 706 13
 3337 0012 0023     		movs	r3, #0
 3338 0014 87F89F30 		strb	r3, [r7, #159]
 707:Src/register_interface.c ****     uint8_t motorID=0;
 3339              		.loc 6 707 13
 3340 0018 0023     		movs	r3, #0
 3341 001a 87F89E30 		strb	r3, [r7, #158]
 708:Src/register_interface.c ****     MCI_Handle_t *pMCIN = &Mci[motorID];
 3342              		.loc 6 708 31
 3343 001e 97F89E30 		ldrb	r3, [r7, #158]	@ zero_extendqisi2
 3344              		.loc 6 708 19
 3345 0022 2C22     		movs	r2, #44
 3346 0024 02FB03F3 		mul	r3, r2, r3
 3347 0028 7B4A     		ldr	r2, .L284
 3348 002a 1344     		add	r3, r3, r2
 3349 002c C7F89830 		str	r3, [r7, #152]
 709:Src/register_interface.c ****     BusVoltageSensor_Handle_t* BusVoltageSensor= &BusVoltageSensor_M1._Super;
 3350              		.loc 6 709 32
 3351 0030 7A4B     		ldr	r3, .L284+4
 3352 0032 C7F89430 		str	r3, [r7, #148]
 710:Src/register_interface.c ****     switch (typeID)
 3353              		.loc 6 710 5
 3354 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3355 0038 083B     		subs	r3, r3, #8
 3356 003a 202B     		cmp	r3, #32
 3357 003c 00F25785 		bhi	.L191
 3358 0040 01A2     		adr	r2, .L193
 3359 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3360 0046 00BF     		.p2align 2
 3361              	.L193:
 3362 0048 CD000000 		.word	.L197+1
 3363 004c EF0A0000 		.word	.L191+1
 3364 0050 EF0A0000 		.word	.L191+1
 3365 0054 EF0A0000 		.word	.L191+1
 3366 0058 EF0A0000 		.word	.L191+1
 3367 005c EF0A0000 		.word	.L191+1
 3368 0060 EF0A0000 		.word	.L191+1
 3369 0064 EF0A0000 		.word	.L191+1
 3370 0068 31020000 		.word	.L196+1
 3371 006c EF0A0000 		.word	.L191+1
 3372 0070 EF0A0000 		.word	.L191+1
 3373 0074 EF0A0000 		.word	.L191+1
 3374 0078 EF0A0000 		.word	.L191+1
 3375 007c EF0A0000 		.word	.L191+1
 3376 0080 EF0A0000 		.word	.L191+1
 3377 0084 EF0A0000 		.word	.L191+1
 3378 0088 D1050000 		.word	.L195+1
 3379 008c EF0A0000 		.word	.L191+1
 3380 0090 EF0A0000 		.word	.L191+1
 3381 0094 EF0A0000 		.word	.L191+1
 3382 0098 EF0A0000 		.word	.L191+1
 3383 009c EF0A0000 		.word	.L191+1
ARM GAS  /tmp/cctuZX3B.s 			page 101


 3384 00a0 EF0A0000 		.word	.L191+1
 3385 00a4 EF0A0000 		.word	.L191+1
 3386 00a8 63090000 		.word	.L194+1
 3387 00ac EF0A0000 		.word	.L191+1
 3388 00b0 EF0A0000 		.word	.L191+1
 3389 00b4 EF0A0000 		.word	.L191+1
 3390 00b8 EF0A0000 		.word	.L191+1
 3391 00bc EF0A0000 		.word	.L191+1
 3392 00c0 EF0A0000 		.word	.L191+1
 3393 00c4 EF0A0000 		.word	.L191+1
 3394 00c8 73090000 		.word	.L192+1
 3395              		.p2align 1
 3396              	.L197:
 711:Src/register_interface.c ****     {
 712:Src/register_interface.c ****       case TYPE_DATA_8BIT:
 713:Src/register_interface.c ****       {
 714:Src/register_interface.c ****         if (freeSpace > 0)
 3397              		.loc 6 714 12
 3398 00cc B7F9B030 		ldrsh	r3, [r7, #176]
 3399 00d0 002B     		cmp	r3, #0
 3400 00d2 40F39C80 		ble	.L198
 715:Src/register_interface.c ****         {
 716:Src/register_interface.c ****           switch (regID)
 3401              		.loc 6 716 11
 3402 00d6 FB89     		ldrh	r3, [r7, #14]
 3403 00d8 B3F5A16F 		cmp	r3, #1288
 3404 00dc 00F08680 		beq	.L199
 3405 00e0 B3F5A16F 		cmp	r3, #1288
 3406 00e4 00F38A80 		bgt	.L200
 3407 00e8 B3F5996F 		cmp	r3, #1224
 3408 00ec 76D0     		beq	.L201
 3409 00ee B3F5996F 		cmp	r3, #1224
 3410 00f2 00F38380 		bgt	.L200
 3411 00f6 B3F5916F 		cmp	r3, #1160
 3412 00fa 67D0     		beq	.L202
 3413 00fc B3F5916F 		cmp	r3, #1160
 3414 0100 7CDC     		bgt	.L200
 3415 0102 B3F5896F 		cmp	r3, #1096
 3416 0106 4AD0     		beq	.L203
 3417 0108 B3F5896F 		cmp	r3, #1096
 3418 010c 76DC     		bgt	.L200
 3419 010e B3F5816F 		cmp	r3, #1032
 3420 0112 2FD0     		beq	.L204
 3421 0114 B3F5816F 		cmp	r3, #1032
 3422 0118 70DC     		bgt	.L200
 3423 011a B3F5727F 		cmp	r3, #968
 3424 011e 25D0     		beq	.L205
 3425 0120 B3F5727F 		cmp	r3, #968
 3426 0124 6ADC     		bgt	.L200
 3427 0126 C82B     		cmp	r3, #200
 3428 0128 18D0     		beq	.L206
 3429 012a C82B     		cmp	r3, #200
 3430 012c 66DC     		bgt	.L200
 3431 012e 482B     		cmp	r3, #72
 3432 0130 02D0     		beq	.L207
 3433 0132 882B     		cmp	r3, #136
 3434 0134 09D0     		beq	.L208
ARM GAS  /tmp/cctuZX3B.s 			page 102


 3435 0136 61E0     		b	.L200
 3436              	.L207:
 717:Src/register_interface.c ****           {
 718:Src/register_interface.c ****             case MC_REG_STATUS:
 719:Src/register_interface.c ****             {
 720:Src/register_interface.c ****               *data = (uint8_t)MCI_GetSTMState(pMCIN);
 3437              		.loc 6 720 32
 3438 0138 D7F89800 		ldr	r0, [r7, #152]
 3439 013c FFF7FEFF 		bl	MCI_GetSTMState
 3440 0140 0346     		mov	r3, r0
 3441 0142 1A46     		mov	r2, r3
 3442              		.loc 6 720 21
 3443 0144 BB68     		ldr	r3, [r7, #8]
 3444 0146 1A70     		strb	r2, [r3]
 721:Src/register_interface.c ****               break;
 3445              		.loc 6 721 15
 3446 0148 5CE0     		b	.L209
 3447              	.L208:
 722:Src/register_interface.c ****             }
 723:Src/register_interface.c **** 
 724:Src/register_interface.c ****             case MC_REG_CONTROL_MODE:
 725:Src/register_interface.c ****             {
 726:Src/register_interface.c ****               *data = (uint8_t)MCI_GetControlMode(pMCIN);
 3448              		.loc 6 726 32
 3449 014a D7F89800 		ldr	r0, [r7, #152]
 3450 014e FFF7FEFF 		bl	MCI_GetControlMode
 3451 0152 0346     		mov	r3, r0
 3452 0154 1A46     		mov	r2, r3
 3453              		.loc 6 726 21
 3454 0156 BB68     		ldr	r3, [r7, #8]
 3455 0158 1A70     		strb	r2, [r3]
 727:Src/register_interface.c ****               break;
 3456              		.loc 6 727 15
 3457 015a 53E0     		b	.L209
 3458              	.L206:
 728:Src/register_interface.c ****             }
 729:Src/register_interface.c **** 
 730:Src/register_interface.c ****             case MC_REG_RUC_STAGE_NBR:
 731:Src/register_interface.c ****             {
 732:Src/register_interface.c ****               *data = (uint8_t)RUC_GetNumberOfPhases(&RevUpControlM1);
 3459              		.loc 6 732 32
 3460 015c 3048     		ldr	r0, .L284+8
 3461 015e FFF7FEFF 		bl	RUC_GetNumberOfPhases
 3462 0162 0346     		mov	r3, r0
 3463 0164 1A46     		mov	r2, r3
 3464              		.loc 6 732 21
 3465 0166 BB68     		ldr	r3, [r7, #8]
 3466 0168 1A70     		strb	r2, [r3]
 733:Src/register_interface.c ****               break;
 3467              		.loc 6 733 15
 3468 016a 4BE0     		b	.L209
 3469              	.L205:
 734:Src/register_interface.c ****             }
 735:Src/register_interface.c **** 
 736:Src/register_interface.c ****             case MC_REG_SC_CHECK:
 737:Src/register_interface.c ****             {
 738:Src/register_interface.c ****               *data = (uint8_t) 1u;
ARM GAS  /tmp/cctuZX3B.s 			page 103


 3470              		.loc 6 738 21
 3471 016c BB68     		ldr	r3, [r7, #8]
 3472 016e 0122     		movs	r2, #1
 3473 0170 1A70     		strb	r2, [r3]
 739:Src/register_interface.c ****               break;
 3474              		.loc 6 739 15
 3475 0172 47E0     		b	.L209
 3476              	.L204:
 3477              	.LBB23:
 740:Src/register_interface.c ****             }
 741:Src/register_interface.c **** 
 742:Src/register_interface.c ****             case MC_REG_SC_STATE:
 743:Src/register_interface.c ****             {
 744:Src/register_interface.c ****               uint8_t state ;
 745:Src/register_interface.c ****               state = SCC_GetState(&SCC);
 3478              		.loc 6 745 23
 3479 0174 2B48     		ldr	r0, .L284+12
 3480 0176 FFF7FEFF 		bl	SCC_GetState
 3481 017a 0346     		mov	r3, r0
 3482 017c 87F86A30 		strb	r3, [r7, #106]
 746:Src/register_interface.c ****               state += OTT_GetState (&OTT);
 3483              		.loc 6 746 24
 3484 0180 2948     		ldr	r0, .L284+16
 3485 0182 FFF7FEFF 		bl	OTT_GetState
 3486 0186 0346     		mov	r3, r0
 3487 0188 1A46     		mov	r2, r3
 3488              		.loc 6 746 21
 3489 018a 97F86A30 		ldrb	r3, [r7, #106]
 3490 018e 1344     		add	r3, r3, r2
 3491 0190 87F86A30 		strb	r3, [r7, #106]
 747:Src/register_interface.c ****               *data = state;
 3492              		.loc 6 747 21
 3493 0194 BB68     		ldr	r3, [r7, #8]
 3494 0196 97F86A20 		ldrb	r2, [r7, #106]
 3495 019a 1A70     		strb	r2, [r3]
 748:Src/register_interface.c ****               break;
 3496              		.loc 6 748 15
 3497 019c 32E0     		b	.L209
 3498              	.L203:
 3499              	.LBE23:
 3500              	.LBB24:
 749:Src/register_interface.c ****             }
 750:Src/register_interface.c **** 
 751:Src/register_interface.c ****             case MC_REG_SC_STEPS:
 752:Src/register_interface.c ****             {
 753:Src/register_interface.c ****               uint8_t steps ;
 754:Src/register_interface.c ****               steps = SCC_GetSteps(&SCC);
 3501              		.loc 6 754 23
 3502 019e 2148     		ldr	r0, .L284+12
 3503 01a0 FFF7FEFF 		bl	SCC_GetSteps
 3504 01a4 0346     		mov	r3, r0
 3505 01a6 87F86B30 		strb	r3, [r7, #107]
 755:Src/register_interface.c ****               steps += OTT_GetSteps (&OTT);
 3506              		.loc 6 755 24
 3507 01aa 1F48     		ldr	r0, .L284+16
 3508 01ac FFF7FEFF 		bl	OTT_GetSteps
 3509 01b0 0346     		mov	r3, r0
ARM GAS  /tmp/cctuZX3B.s 			page 104


 3510 01b2 1A46     		mov	r2, r3
 3511              		.loc 6 755 21
 3512 01b4 97F86B30 		ldrb	r3, [r7, #107]
 3513 01b8 1344     		add	r3, r3, r2
 3514 01ba 87F86B30 		strb	r3, [r7, #107]
 756:Src/register_interface.c ****               *data = steps-1u;
 3515              		.loc 6 756 28
 3516 01be 97F86B30 		ldrb	r3, [r7, #107]
 3517 01c2 013B     		subs	r3, r3, #1
 3518 01c4 DAB2     		uxtb	r2, r3
 3519              		.loc 6 756 21
 3520 01c6 BB68     		ldr	r3, [r7, #8]
 3521 01c8 1A70     		strb	r2, [r3]
 757:Src/register_interface.c ****               break;
 3522              		.loc 6 757 15
 3523 01ca 1BE0     		b	.L209
 3524              	.L202:
 3525              	.LBE24:
 758:Src/register_interface.c ****             }
 759:Src/register_interface.c **** 
 760:Src/register_interface.c ****             case MC_REG_SC_PP:
 761:Src/register_interface.c ****             {
 762:Src/register_interface.c ****               *data = SPD_GetElToMecRatio(&STO_PLL_M1._Super);
 3526              		.loc 6 762 23
 3527 01cc 1748     		ldr	r0, .L284+20
 3528 01ce FFF7FEFF 		bl	SPD_GetElToMecRatio
 3529 01d2 0346     		mov	r3, r0
 3530 01d4 1A46     		mov	r2, r3
 3531              		.loc 6 762 21
 3532 01d6 BB68     		ldr	r3, [r7, #8]
 3533 01d8 1A70     		strb	r2, [r3]
 763:Src/register_interface.c ****               break;
 3534              		.loc 6 763 15
 3535 01da 13E0     		b	.L209
 3536              	.L201:
 764:Src/register_interface.c ****             }
 765:Src/register_interface.c **** 
 766:Src/register_interface.c ****             case MC_REG_SC_FOC_REP_RATE:
 767:Src/register_interface.c ****             {
 768:Src/register_interface.c ****               *data = SCC_GetFOCRepRate(&SCC);
 3537              		.loc 6 768 23
 3538 01dc 1148     		ldr	r0, .L284+12
 3539 01de FFF7FEFF 		bl	SCC_GetFOCRepRate
 3540 01e2 0346     		mov	r3, r0
 3541 01e4 1A46     		mov	r2, r3
 3542              		.loc 6 768 21
 3543 01e6 BB68     		ldr	r3, [r7, #8]
 3544 01e8 1A70     		strb	r2, [r3]
 769:Src/register_interface.c ****               break;
 3545              		.loc 6 769 15
 3546 01ea 0BE0     		b	.L209
 3547              	.L199:
 770:Src/register_interface.c ****             }
 771:Src/register_interface.c **** 
 772:Src/register_interface.c ****             case MC_REG_SC_COMPLETED:
 773:Src/register_interface.c ****             {
 774:Src/register_interface.c ****               *data = OTT_IsMotorAlreadyProfiled(&OTT);
ARM GAS  /tmp/cctuZX3B.s 			page 105


 3548              		.loc 6 774 23
 3549 01ec 0E48     		ldr	r0, .L284+16
 3550 01ee FFF7FEFF 		bl	OTT_IsMotorAlreadyProfiled
 3551 01f2 0346     		mov	r3, r0
 3552 01f4 1A46     		mov	r2, r3
 3553              		.loc 6 774 21
 3554 01f6 BB68     		ldr	r3, [r7, #8]
 3555 01f8 1A70     		strb	r2, [r3]
 775:Src/register_interface.c ****               break;
 3556              		.loc 6 775 15
 3557 01fa 03E0     		b	.L209
 3558              	.L200:
 776:Src/register_interface.c ****              }
 777:Src/register_interface.c **** 
 778:Src/register_interface.c ****             default:
 779:Src/register_interface.c ****             {
 780:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 3559              		.loc 6 780 22
 3560 01fc 0523     		movs	r3, #5
 3561 01fe 87F89F30 		strb	r3, [r7, #159]
 781:Src/register_interface.c ****               break;
 3562              		.loc 6 781 15
 3563 0202 00BF     		nop
 3564              	.L209:
 782:Src/register_interface.c ****             }
 783:Src/register_interface.c ****           }
 784:Src/register_interface.c ****           *size = 1;
 3565              		.loc 6 784 17
 3566 0204 7B68     		ldr	r3, [r7, #4]
 3567 0206 0122     		movs	r2, #1
 3568 0208 1A80     		strh	r2, [r3]	@ movhi
 785:Src/register_interface.c ****         }
 786:Src/register_interface.c ****         else
 787:Src/register_interface.c ****         {
 788:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 789:Src/register_interface.c ****         }
 790:Src/register_interface.c ****         break;
 3569              		.loc 6 790 9
 3570 020a 00F074BC 		b	.L211
 3571              	.L198:
 788:Src/register_interface.c ****         }
 3572              		.loc 6 788 18
 3573 020e 0823     		movs	r3, #8
 3574 0210 87F89F30 		strb	r3, [r7, #159]
 3575              		.loc 6 790 9
 3576 0214 00F06FBC 		b	.L211
 3577              	.L285:
 3578              		.align	2
 3579              	.L284:
 3580 0218 00000000 		.word	Mci
 3581 021c 00000000 		.word	BusVoltageSensor_M1
 3582 0220 00000000 		.word	RevUpControlM1
 3583 0224 00000000 		.word	SCC
 3584 0228 00000000 		.word	OTT
 3585 022c 00000000 		.word	STO_PLL_M1
 3586              	.L196:
 3587              	.LBB25:
ARM GAS  /tmp/cctuZX3B.s 			page 106


 791:Src/register_interface.c ****       }
 792:Src/register_interface.c **** 
 793:Src/register_interface.c ****       case TYPE_DATA_16BIT:
 794:Src/register_interface.c ****       {
 795:Src/register_interface.c ****         uint16_t *regdataU16 = (uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 3588              		.loc 6 795 19
 3589 0230 BB68     		ldr	r3, [r7, #8]
 3590 0232 3B67     		str	r3, [r7, #112]
 796:Src/register_interface.c ****         int16_t *regdata16 = (int16_t *) data; //cstat !MISRAC2012-Rule-11.3
 3591              		.loc 6 796 18
 3592 0234 BB68     		ldr	r3, [r7, #8]
 3593 0236 FB66     		str	r3, [r7, #108]
 797:Src/register_interface.c **** 
 798:Src/register_interface.c ****         if (freeSpace >= 2)
 3594              		.loc 6 798 12
 3595 0238 B7F9B030 		ldrsh	r3, [r7, #176]
 3596 023c 012B     		cmp	r3, #1
 3597 023e 40F3B781 		ble	.L212
 799:Src/register_interface.c ****         {
 800:Src/register_interface.c ****           switch (regID)
 3598              		.loc 6 800 11
 3599 0242 FB89     		ldrh	r3, [r7, #14]
 3600 0244 41F65042 		movw	r2, #7248
 3601 0248 9342     		cmp	r3, r2
 3602 024a 00F0A081 		beq	.L213
 3603 024e 41F65042 		movw	r2, #7248
 3604 0252 9342     		cmp	r3, r2
 3605 0254 00F3A381 		bgt	.L214
 3606 0258 41F61042 		movw	r2, #7184
 3607 025c 9342     		cmp	r3, r2
 3608 025e 00F08E81 		beq	.L215
 3609 0262 41F61042 		movw	r2, #7184
 3610 0266 9342     		cmp	r3, r2
 3611 0268 00F39981 		bgt	.L214
 3612 026c 41F25032 		movw	r2, #4944
 3613 0270 9342     		cmp	r3, r2
 3614 0272 00F07C81 		beq	.L216
 3615 0276 41F25032 		movw	r2, #4944
 3616 027a 9342     		cmp	r3, r2
 3617 027c 00F38F81 		bgt	.L214
 3618 0280 41F25002 		movw	r2, #4176
 3619 0284 9342     		cmp	r3, r2
 3620 0286 00F06881 		beq	.L217
 3621 028a 41F25002 		movw	r2, #4176
 3622 028e 9342     		cmp	r3, r2
 3623 0290 00F38581 		bgt	.L214
 3624 0294 41F21002 		movw	r2, #4112
 3625 0298 9342     		cmp	r3, r2
 3626 029a 00F05481 		beq	.L218
 3627 029e 41F21002 		movw	r2, #4112
 3628 02a2 9342     		cmp	r3, r2
 3629 02a4 00F37B81 		bgt	.L214
 3630 02a8 B3F57D6F 		cmp	r3, #4048
 3631 02ac 00F04181 		beq	.L219
 3632 02b0 B3F57D6F 		cmp	r3, #4048
 3633 02b4 00F37381 		bgt	.L214
 3634 02b8 B3F5796F 		cmp	r3, #3984
ARM GAS  /tmp/cctuZX3B.s 			page 107


 3635 02bc 00F02F81 		beq	.L220
 3636 02c0 B3F5796F 		cmp	r3, #3984
 3637 02c4 00F36B81 		bgt	.L214
 3638 02c8 B3F5696F 		cmp	r3, #3728
 3639 02cc 00F06B81 		beq	.L283
 3640 02d0 B3F5696F 		cmp	r3, #3728
 3641 02d4 00F36381 		bgt	.L214
 3642 02d8 B3F5656F 		cmp	r3, #3664
 3643 02dc 00F06381 		beq	.L283
 3644 02e0 B3F5656F 		cmp	r3, #3664
 3645 02e4 00F35B81 		bgt	.L214
 3646 02e8 B3F5496F 		cmp	r3, #3216
 3647 02ec 00F0E380 		beq	.L222
 3648 02f0 B3F5496F 		cmp	r3, #3216
 3649 02f4 00F35381 		bgt	.L214
 3650 02f8 B3F5456F 		cmp	r3, #3152
 3651 02fc 00F0D180 		beq	.L223
 3652 0300 B3F5456F 		cmp	r3, #3152
 3653 0304 00F34B81 		bgt	.L214
 3654 0308 B3F5396F 		cmp	r3, #2960
 3655 030c 00F0C180 		beq	.L224
 3656 0310 B3F5396F 		cmp	r3, #2960
 3657 0314 00F34381 		bgt	.L214
 3658 0318 B3F5356F 		cmp	r3, #2896
 3659 031c 00F0B180 		beq	.L225
 3660 0320 B3F5356F 		cmp	r3, #2896
 3661 0324 00F33B81 		bgt	.L214
 3662 0328 B3F5296F 		cmp	r3, #2704
 3663 032c 00F09E80 		beq	.L226
 3664 0330 B3F5296F 		cmp	r3, #2704
 3665 0334 00F33381 		bgt	.L214
 3666 0338 B3F5256F 		cmp	r3, #2640
 3667 033c 00F08B80 		beq	.L227
 3668 0340 B3F5256F 		cmp	r3, #2640
 3669 0344 00F32B81 		bgt	.L214
 3670 0348 B3F5216F 		cmp	r3, #2576
 3671 034c 78D0     		beq	.L228
 3672 034e B3F5216F 		cmp	r3, #2576
 3673 0352 00F32481 		bgt	.L214
 3674 0356 B3F51D6F 		cmp	r3, #2512
 3675 035a 66D0     		beq	.L229
 3676 035c B3F51D6F 		cmp	r3, #2512
 3677 0360 00F31D81 		bgt	.L214
 3678 0364 B3F5BA6F 		cmp	r3, #1488
 3679 0368 57D0     		beq	.L230
 3680 036a B3F5BA6F 		cmp	r3, #1488
 3681 036e 00F31681 		bgt	.L214
 3682 0372 B3F5B26F 		cmp	r3, #1424
 3683 0376 47D0     		beq	.L231
 3684 0378 B3F5B26F 		cmp	r3, #1424
 3685 037c 00F30F81 		bgt	.L214
 3686 0380 B3F5926F 		cmp	r3, #1168
 3687 0384 00F0C380 		beq	.L232
 3688 0388 B3F5926F 		cmp	r3, #1168
 3689 038c 00F30781 		bgt	.L214
 3690 0390 B3F58A6F 		cmp	r3, #1104
 3691 0394 00F0B380 		beq	.L233
ARM GAS  /tmp/cctuZX3B.s 			page 108


 3692 0398 B3F58A6F 		cmp	r3, #1104
 3693 039c 00F3FF80 		bgt	.L214
 3694 03a0 B3F5647F 		cmp	r3, #912
 3695 03a4 00F09E80 		beq	.L234
 3696 03a8 B3F5647F 		cmp	r3, #912
 3697 03ac 00F3F780 		bgt	.L214
 3698 03b0 B3F5547F 		cmp	r3, #848
 3699 03b4 00F08980 		beq	.L235
 3700 03b8 B3F5547F 		cmp	r3, #848
 3701 03bc 00F3EF80 		bgt	.L214
 3702 03c0 B3F5887F 		cmp	r3, #272
 3703 03c4 18D0     		beq	.L236
 3704 03c6 B3F5887F 		cmp	r3, #272
 3705 03ca 00F3E880 		bgt	.L214
 3706 03ce 902B     		cmp	r3, #144
 3707 03d0 02D0     		beq	.L237
 3708 03d2 D02B     		cmp	r3, #208
 3709 03d4 08D0     		beq	.L238
 3710 03d6 E2E0     		b	.L214
 3711              	.L237:
 801:Src/register_interface.c ****           {
 802:Src/register_interface.c ****             case MC_REG_SPEED_KP:
 803:Src/register_interface.c ****             {
 804:Src/register_interface.c ****               *regdata16 = PID_GetKP(&PIDSpeedHandle_M1);
 3712              		.loc 6 804 28
 3713 03d8 7748     		ldr	r0, .L286
 3714 03da FFF7FEFF 		bl	PID_GetKP
 3715 03de 0346     		mov	r3, r0
 3716 03e0 1A46     		mov	r2, r3
 3717              		.loc 6 804 26
 3718 03e2 FB6E     		ldr	r3, [r7, #108]
 3719 03e4 1A80     		strh	r2, [r3]	@ movhi
 805:Src/register_interface.c ****               break;
 3720              		.loc 6 805 15
 3721 03e6 DFE0     		b	.L239
 3722              	.L238:
 806:Src/register_interface.c ****             }
 807:Src/register_interface.c **** 
 808:Src/register_interface.c ****             case MC_REG_SPEED_KI:
 809:Src/register_interface.c ****             {
 810:Src/register_interface.c ****               *regdata16 = PID_GetKI(&PIDSpeedHandle_M1);
 3723              		.loc 6 810 28
 3724 03e8 7348     		ldr	r0, .L286
 3725 03ea FFF7FEFF 		bl	PID_GetKI
 3726 03ee 0346     		mov	r3, r0
 3727 03f0 1A46     		mov	r2, r3
 3728              		.loc 6 810 26
 3729 03f2 FB6E     		ldr	r3, [r7, #108]
 3730 03f4 1A80     		strh	r2, [r3]	@ movhi
 811:Src/register_interface.c ****               break;
 3731              		.loc 6 811 15
 3732 03f6 D7E0     		b	.L239
 3733              	.L236:
 812:Src/register_interface.c ****             }
 813:Src/register_interface.c **** 
 814:Src/register_interface.c ****             case MC_REG_SPEED_KD:
 815:Src/register_interface.c ****             {
ARM GAS  /tmp/cctuZX3B.s 			page 109


 816:Src/register_interface.c ****               *regdata16 = PID_GetKD(&PIDSpeedHandle_M1);
 3734              		.loc 6 816 28
 3735 03f8 6F48     		ldr	r0, .L286
 3736 03fa FFF7FEFF 		bl	PID_GetKD
 3737 03fe 0346     		mov	r3, r0
 3738 0400 1A46     		mov	r2, r3
 3739              		.loc 6 816 26
 3740 0402 FB6E     		ldr	r3, [r7, #108]
 3741 0404 1A80     		strh	r2, [r3]	@ movhi
 817:Src/register_interface.c ****               break;
 3742              		.loc 6 817 15
 3743 0406 CFE0     		b	.L239
 3744              	.L231:
 818:Src/register_interface.c ****             }
 819:Src/register_interface.c **** 
 820:Src/register_interface.c ****             case MC_REG_BUS_VOLTAGE:
 821:Src/register_interface.c ****             {
 822:Src/register_interface.c ****               *regdataU16 = VBS_GetAvBusVoltage_V(BusVoltageSensor);
 3745              		.loc 6 822 29
 3746 0408 D7F89400 		ldr	r0, [r7, #148]
 3747 040c FFF7FEFF 		bl	VBS_GetAvBusVoltage_V
 3748 0410 0346     		mov	r3, r0
 3749 0412 1A46     		mov	r2, r3
 3750              		.loc 6 822 27
 3751 0414 3B6F     		ldr	r3, [r7, #112]
 3752 0416 1A80     		strh	r2, [r3]	@ movhi
 823:Src/register_interface.c ****               break;
 3753              		.loc 6 823 15
 3754 0418 C6E0     		b	.L239
 3755              	.L230:
 824:Src/register_interface.c ****             }
 825:Src/register_interface.c **** 
 826:Src/register_interface.c ****             case MC_REG_HEATS_TEMP:
 827:Src/register_interface.c ****             {
 828:Src/register_interface.c ****               *regdata16 = NTC_GetAvTemp_C(&TempSensor_M1);
 3756              		.loc 6 828 28
 3757 041a 6848     		ldr	r0, .L286+4
 3758 041c FFF7FEFF 		bl	NTC_GetAvTemp_C
 3759 0420 0346     		mov	r3, r0
 3760 0422 1A46     		mov	r2, r3
 3761              		.loc 6 828 26
 3762 0424 FB6E     		ldr	r3, [r7, #108]
 3763 0426 1A80     		strh	r2, [r3]	@ movhi
 829:Src/register_interface.c ****               break;
 3764              		.loc 6 829 15
 3765 0428 BEE0     		b	.L239
 3766              	.L229:
 830:Src/register_interface.c ****             }
 831:Src/register_interface.c **** 
 832:Src/register_interface.c ****             case MC_REG_V_Q:
 833:Src/register_interface.c ****             {
 834:Src/register_interface.c ****               *regdata16 = MCI_GetVqd(pMCIN).q;
 3767              		.loc 6 834 28
 3768 042a D7F89800 		ldr	r0, [r7, #152]
 3769 042e FFF7FEFF 		bl	MCI_GetVqd
 3770 0432 0346     		mov	r3, r0
 3771 0434 3B64     		str	r3, [r7, #64]
ARM GAS  /tmp/cctuZX3B.s 			page 110


 3772              		.loc 6 834 45
 3773 0436 B7F94020 		ldrsh	r2, [r7, #64]
 3774              		.loc 6 834 26
 3775 043a FB6E     		ldr	r3, [r7, #108]
 3776 043c 1A80     		strh	r2, [r3]	@ movhi
 835:Src/register_interface.c ****               break;
 3777              		.loc 6 835 15
 3778 043e B3E0     		b	.L239
 3779              	.L228:
 836:Src/register_interface.c ****             }
 837:Src/register_interface.c **** 
 838:Src/register_interface.c ****             case MC_REG_V_D:
 839:Src/register_interface.c ****             {
 840:Src/register_interface.c ****               *regdata16 = MCI_GetVqd(pMCIN).d;
 3780              		.loc 6 840 28
 3781 0440 D7F89800 		ldr	r0, [r7, #152]
 3782 0444 FFF7FEFF 		bl	MCI_GetVqd
 3783 0448 0346     		mov	r3, r0
 3784 044a 7B64     		str	r3, [r7, #68]
 3785              		.loc 6 840 45
 3786 044c B7F94620 		ldrsh	r2, [r7, #70]
 3787              		.loc 6 840 26
 3788 0450 FB6E     		ldr	r3, [r7, #108]
 3789 0452 1A80     		strh	r2, [r3]	@ movhi
 841:Src/register_interface.c ****               break;
 3790              		.loc 6 841 15
 3791 0454 A8E0     		b	.L239
 3792              	.L227:
 842:Src/register_interface.c ****             }
 843:Src/register_interface.c **** 
 844:Src/register_interface.c ****             case MC_REG_V_ALPHA:
 845:Src/register_interface.c ****             {
 846:Src/register_interface.c ****               *regdata16 = MCI_GetValphabeta(pMCIN).alpha;
 3793              		.loc 6 846 28
 3794 0456 D7F89800 		ldr	r0, [r7, #152]
 3795 045a FFF7FEFF 		bl	MCI_GetValphabeta
 3796 045e 0346     		mov	r3, r0
 3797 0460 BB64     		str	r3, [r7, #72]
 3798              		.loc 6 846 52
 3799 0462 B7F94820 		ldrsh	r2, [r7, #72]
 3800              		.loc 6 846 26
 3801 0466 FB6E     		ldr	r3, [r7, #108]
 3802 0468 1A80     		strh	r2, [r3]	@ movhi
 847:Src/register_interface.c ****               break;
 3803              		.loc 6 847 15
 3804 046a 9DE0     		b	.L239
 3805              	.L226:
 848:Src/register_interface.c ****             }
 849:Src/register_interface.c **** 
 850:Src/register_interface.c ****             case MC_REG_V_BETA:
 851:Src/register_interface.c ****             {
 852:Src/register_interface.c ****               *regdata16 = MCI_GetValphabeta(pMCIN).beta;
 3806              		.loc 6 852 28
 3807 046c D7F89800 		ldr	r0, [r7, #152]
 3808 0470 FFF7FEFF 		bl	MCI_GetValphabeta
 3809 0474 0346     		mov	r3, r0
 3810 0476 FB64     		str	r3, [r7, #76]
ARM GAS  /tmp/cctuZX3B.s 			page 111


 3811              		.loc 6 852 52
 3812 0478 B7F94E20 		ldrsh	r2, [r7, #78]
 3813              		.loc 6 852 26
 3814 047c FB6E     		ldr	r3, [r7, #108]
 3815 047e 1A80     		strh	r2, [r3]	@ movhi
 853:Src/register_interface.c ****               break;
 3816              		.loc 6 853 15
 3817 0480 92E0     		b	.L239
 3818              	.L225:
 854:Src/register_interface.c ****             }
 855:Src/register_interface.c **** 
 856:Src/register_interface.c ****             case MC_REG_STOPLL_EL_ANGLE:
 857:Src/register_interface.c ****             {
 858:Src/register_interface.c ****               //cstat !MISRAC2012-Rule-11.3
 859:Src/register_interface.c ****               *regdata16 = SPD_GetElAngle((SpeednPosFdbk_Handle_t *)&STO_PLL_M1);
 3819              		.loc 6 859 28
 3820 0482 4F48     		ldr	r0, .L286+8
 3821 0484 FFF7FEFF 		bl	SPD_GetElAngle
 3822 0488 0346     		mov	r3, r0
 3823 048a 1A46     		mov	r2, r3
 3824              		.loc 6 859 26
 3825 048c FB6E     		ldr	r3, [r7, #108]
 3826 048e 1A80     		strh	r2, [r3]	@ movhi
 860:Src/register_interface.c ****               break;
 3827              		.loc 6 860 15
 3828 0490 8AE0     		b	.L239
 3829              	.L224:
 861:Src/register_interface.c ****             }
 862:Src/register_interface.c **** 
 863:Src/register_interface.c ****             case MC_REG_STOPLL_ROT_SPEED:
 864:Src/register_interface.c ****             {
 865:Src/register_interface.c ****               //cstat !MISRAC2012-Rule-11.3
 866:Src/register_interface.c ****               *regdata16 = SPD_GetS16Speed((SpeednPosFdbk_Handle_t *)&STO_PLL_M1);
 3830              		.loc 6 866 28
 3831 0492 4B48     		ldr	r0, .L286+8
 3832 0494 FFF7FEFF 		bl	SPD_GetS16Speed
 3833 0498 0346     		mov	r3, r0
 3834 049a 1A46     		mov	r2, r3
 3835              		.loc 6 866 26
 3836 049c FB6E     		ldr	r3, [r7, #108]
 3837 049e 1A80     		strh	r2, [r3]	@ movhi
 867:Src/register_interface.c ****               break;
 3838              		.loc 6 867 15
 3839 04a0 82E0     		b	.L239
 3840              	.L223:
 868:Src/register_interface.c ****             }
 869:Src/register_interface.c **** 
 870:Src/register_interface.c ****             case MC_REG_STOPLL_BEMF_ALPHA:
 871:Src/register_interface.c ****             {
 872:Src/register_interface.c ****               *regdata16 = STO_PLL_GetEstimatedBemf(&STO_PLL_M1).alpha;
 3841              		.loc 6 872 28
 3842 04a2 4748     		ldr	r0, .L286+8
 3843 04a4 FFF7FEFF 		bl	STO_PLL_GetEstimatedBemf
 3844 04a8 0346     		mov	r3, r0
 3845 04aa 3B65     		str	r3, [r7, #80]
 3846              		.loc 6 872 65
 3847 04ac B7F95020 		ldrsh	r2, [r7, #80]
ARM GAS  /tmp/cctuZX3B.s 			page 112


 3848              		.loc 6 872 26
 3849 04b0 FB6E     		ldr	r3, [r7, #108]
 3850 04b2 1A80     		strh	r2, [r3]	@ movhi
 873:Src/register_interface.c ****               break;
 3851              		.loc 6 873 15
 3852 04b4 78E0     		b	.L239
 3853              	.L222:
 874:Src/register_interface.c ****             }
 875:Src/register_interface.c **** 
 876:Src/register_interface.c ****             case MC_REG_STOPLL_BEMF_BETA:
 877:Src/register_interface.c ****             {
 878:Src/register_interface.c ****               *regdata16 = STO_PLL_GetEstimatedBemf(&STO_PLL_M1).beta;
 3854              		.loc 6 878 28
 3855 04b6 4248     		ldr	r0, .L286+8
 3856 04b8 FFF7FEFF 		bl	STO_PLL_GetEstimatedBemf
 3857 04bc 0346     		mov	r3, r0
 3858 04be 7B65     		str	r3, [r7, #84]
 3859              		.loc 6 878 65
 3860 04c0 B7F95620 		ldrsh	r2, [r7, #86]
 3861              		.loc 6 878 26
 3862 04c4 FB6E     		ldr	r3, [r7, #108]
 3863 04c6 1A80     		strh	r2, [r3]	@ movhi
 879:Src/register_interface.c ****               break;
 3864              		.loc 6 879 15
 3865 04c8 6EE0     		b	.L239
 3866              	.L235:
 3867              	.LBB26:
 880:Src/register_interface.c ****             }
 881:Src/register_interface.c **** 
 882:Src/register_interface.c ****             case MC_REG_STOPLL_C1:
 883:Src/register_interface.c ****             {
 884:Src/register_interface.c ****               int16_t hC1;
 885:Src/register_interface.c ****               int16_t hC2;
 886:Src/register_interface.c ****               STO_PLL_GetObserverGains(&STO_PLL_M1, &hC1, &hC2);
 3868              		.loc 6 886 15
 3869 04ca 07F13C02 		add	r2, r7, #60
 3870 04ce 07F13E03 		add	r3, r7, #62
 3871 04d2 1946     		mov	r1, r3
 3872 04d4 3A48     		ldr	r0, .L286+8
 3873 04d6 FFF7FEFF 		bl	STO_PLL_GetObserverGains
 887:Src/register_interface.c ****               *regdata16 = hC1;
 3874              		.loc 6 887 26
 3875 04da B7F93E20 		ldrsh	r2, [r7, #62]
 3876 04de FB6E     		ldr	r3, [r7, #108]
 3877 04e0 1A80     		strh	r2, [r3]	@ movhi
 888:Src/register_interface.c ****               break;
 3878              		.loc 6 888 15
 3879 04e2 61E0     		b	.L239
 3880              	.L234:
 3881              	.LBE26:
 3882              	.LBB27:
 889:Src/register_interface.c ****             }
 890:Src/register_interface.c **** 
 891:Src/register_interface.c ****             case MC_REG_STOPLL_C2:
 892:Src/register_interface.c ****             {
 893:Src/register_interface.c ****               int16_t hC1;
 894:Src/register_interface.c ****               int16_t hC2;
ARM GAS  /tmp/cctuZX3B.s 			page 113


 895:Src/register_interface.c ****               STO_PLL_GetObserverGains(&STO_PLL_M1, &hC1, &hC2);
 3883              		.loc 6 895 15
 3884 04e4 07F13802 		add	r2, r7, #56
 3885 04e8 07F13A03 		add	r3, r7, #58
 3886 04ec 1946     		mov	r1, r3
 3887 04ee 3448     		ldr	r0, .L286+8
 3888 04f0 FFF7FEFF 		bl	STO_PLL_GetObserverGains
 896:Src/register_interface.c ****               *regdata16 = hC2;
 3889              		.loc 6 896 26
 3890 04f4 B7F93820 		ldrsh	r2, [r7, #56]
 3891 04f8 FB6E     		ldr	r3, [r7, #108]
 3892 04fa 1A80     		strh	r2, [r3]	@ movhi
 897:Src/register_interface.c ****               break;
 3893              		.loc 6 897 15
 3894 04fc 54E0     		b	.L239
 3895              	.L233:
 3896              	.LBE27:
 898:Src/register_interface.c ****             }
 899:Src/register_interface.c **** 
 900:Src/register_interface.c ****             case MC_REG_STOPLL_KI:
 901:Src/register_interface.c ****             {
 902:Src/register_interface.c ****               *regdata16 = PID_GetKI (&(&STO_PLL_M1)->PIRegulator);
 3897              		.loc 6 902 28
 3898 04fe 3148     		ldr	r0, .L286+12
 3899 0500 FFF7FEFF 		bl	PID_GetKI
 3900 0504 0346     		mov	r3, r0
 3901 0506 1A46     		mov	r2, r3
 3902              		.loc 6 902 26
 3903 0508 FB6E     		ldr	r3, [r7, #108]
 3904 050a 1A80     		strh	r2, [r3]	@ movhi
 903:Src/register_interface.c ****               break;
 3905              		.loc 6 903 15
 3906 050c 4CE0     		b	.L239
 3907              	.L232:
 904:Src/register_interface.c ****             }
 905:Src/register_interface.c **** 
 906:Src/register_interface.c ****             case MC_REG_STOPLL_KP:
 907:Src/register_interface.c ****             {
 908:Src/register_interface.c ****               *regdata16 = PID_GetKP (&(&STO_PLL_M1)->PIRegulator);
 3908              		.loc 6 908 28
 3909 050e 2D48     		ldr	r0, .L286+12
 3910 0510 FFF7FEFF 		bl	PID_GetKP
 3911 0514 0346     		mov	r3, r0
 3912 0516 1A46     		mov	r2, r3
 3913              		.loc 6 908 26
 3914 0518 FB6E     		ldr	r3, [r7, #108]
 3915 051a 1A80     		strh	r2, [r3]	@ movhi
 909:Src/register_interface.c ****               break;
 3916              		.loc 6 909 15
 3917 051c 44E0     		b	.L239
 3918              	.L220:
 910:Src/register_interface.c ****             }
 911:Src/register_interface.c **** 
 912:Src/register_interface.c ****             case MC_REG_DAC_USER1:
 913:Src/register_interface.c ****             case MC_REG_DAC_USER2:
 914:Src/register_interface.c ****               break;
 915:Src/register_interface.c **** 
ARM GAS  /tmp/cctuZX3B.s 			page 114


 916:Src/register_interface.c ****             case MC_REG_FF_VQ:
 917:Src/register_interface.c ****             {
 918:Src/register_interface.c ****               *regdata16 = FF_GetVqdff(&FF_M1).q;
 3919              		.loc 6 918 28
 3920 051e 2A48     		ldr	r0, .L286+16
 3921 0520 FFF7FEFF 		bl	FF_GetVqdff
 3922 0524 0346     		mov	r3, r0
 3923 0526 BB65     		str	r3, [r7, #88]
 3924              		.loc 6 918 47
 3925 0528 B7F95820 		ldrsh	r2, [r7, #88]
 3926              		.loc 6 918 26
 3927 052c FB6E     		ldr	r3, [r7, #108]
 3928 052e 1A80     		strh	r2, [r3]	@ movhi
 919:Src/register_interface.c ****               break;
 3929              		.loc 6 919 15
 3930 0530 3AE0     		b	.L239
 3931              	.L219:
 920:Src/register_interface.c ****             }
 921:Src/register_interface.c **** 
 922:Src/register_interface.c ****             case MC_REG_FF_VD:
 923:Src/register_interface.c ****             {
 924:Src/register_interface.c ****               *regdata16 = FF_GetVqdff(&FF_M1).d;
 3932              		.loc 6 924 28
 3933 0532 2548     		ldr	r0, .L286+16
 3934 0534 FFF7FEFF 		bl	FF_GetVqdff
 3935 0538 0346     		mov	r3, r0
 3936 053a FB65     		str	r3, [r7, #92]
 3937              		.loc 6 924 47
 3938 053c B7F95E20 		ldrsh	r2, [r7, #94]
 3939              		.loc 6 924 26
 3940 0540 FB6E     		ldr	r3, [r7, #108]
 3941 0542 1A80     		strh	r2, [r3]	@ movhi
 925:Src/register_interface.c ****               break;
 3942              		.loc 6 925 15
 3943 0544 30E0     		b	.L239
 3944              	.L218:
 926:Src/register_interface.c ****             }
 927:Src/register_interface.c **** 
 928:Src/register_interface.c ****             case MC_REG_FF_VQ_PIOUT:
 929:Src/register_interface.c ****             {
 930:Src/register_interface.c ****               *regdata16 = FF_GetVqdAvPIout(&FF_M1).q;
 3945              		.loc 6 930 28
 3946 0546 2048     		ldr	r0, .L286+16
 3947 0548 FFF7FEFF 		bl	FF_GetVqdAvPIout
 3948 054c 0346     		mov	r3, r0
 3949 054e 3B66     		str	r3, [r7, #96]
 3950              		.loc 6 930 52
 3951 0550 B7F96020 		ldrsh	r2, [r7, #96]
 3952              		.loc 6 930 26
 3953 0554 FB6E     		ldr	r3, [r7, #108]
 3954 0556 1A80     		strh	r2, [r3]	@ movhi
 931:Src/register_interface.c ****               break;
 3955              		.loc 6 931 15
 3956 0558 26E0     		b	.L239
 3957              	.L217:
 932:Src/register_interface.c ****             }
 933:Src/register_interface.c **** 
ARM GAS  /tmp/cctuZX3B.s 			page 115


 934:Src/register_interface.c ****             case MC_REG_FF_VD_PIOUT:
 935:Src/register_interface.c ****             {
 936:Src/register_interface.c ****               *regdata16 = FF_GetVqdAvPIout(&FF_M1).d;
 3958              		.loc 6 936 28
 3959 055a 1B48     		ldr	r0, .L286+16
 3960 055c FFF7FEFF 		bl	FF_GetVqdAvPIout
 3961 0560 0346     		mov	r3, r0
 3962 0562 7B66     		str	r3, [r7, #100]
 3963              		.loc 6 936 52
 3964 0564 B7F96620 		ldrsh	r2, [r7, #102]
 3965              		.loc 6 936 26
 3966 0568 FB6E     		ldr	r3, [r7, #108]
 3967 056a 1A80     		strh	r2, [r3]	@ movhi
 937:Src/register_interface.c ****               break;
 3968              		.loc 6 937 15
 3969 056c 1CE0     		b	.L239
 3970              	.L216:
 938:Src/register_interface.c ****             }
 939:Src/register_interface.c **** 
 940:Src/register_interface.c ****             case MC_REG_SC_PWM_FREQUENCY:
 941:Src/register_interface.c ****               *regdataU16 = SCC_GetPWMFrequencyHz(&SCC);
 3971              		.loc 6 941 29
 3972 056e 1748     		ldr	r0, .L286+20
 3973 0570 FFF7FEFF 		bl	SCC_GetPWMFrequencyHz
 3974 0574 0346     		mov	r3, r0
 3975 0576 1A46     		mov	r2, r3
 3976              		.loc 6 941 27
 3977 0578 3B6F     		ldr	r3, [r7, #112]
 3978 057a 1A80     		strh	r2, [r3]	@ movhi
 942:Src/register_interface.c ****               break;
 3979              		.loc 6 942 15
 3980 057c 14E0     		b	.L239
 3981              	.L215:
 943:Src/register_interface.c ****             case MC_REG_OVERVOLTAGETHRESHOLD:
 944:Src/register_interface.c ****             {
 945:Src/register_interface.c ****               *regdataU16 = SCC_GetOverVoltageThreshold(&SCC);
 3982              		.loc 6 945 29
 3983 057e 1348     		ldr	r0, .L286+20
 3984 0580 FFF7FEFF 		bl	SCC_GetOverVoltageThreshold
 3985 0584 0346     		mov	r3, r0
 3986 0586 1A46     		mov	r2, r3
 3987              		.loc 6 945 27
 3988 0588 3B6F     		ldr	r3, [r7, #112]
 3989 058a 1A80     		strh	r2, [r3]	@ movhi
 946:Src/register_interface.c ****               break;
 3990              		.loc 6 946 15
 3991 058c 0CE0     		b	.L239
 3992              	.L213:
 947:Src/register_interface.c ****             }
 948:Src/register_interface.c **** 
 949:Src/register_interface.c ****             case MC_REG_UNDERVOLTAGETHRESHOLD:
 950:Src/register_interface.c ****               {
 951:Src/register_interface.c ****                 *regdata16 = SCC_GetUnderVoltageThreshold(&SCC);
 3993              		.loc 6 951 30
 3994 058e 0F48     		ldr	r0, .L286+20
 3995 0590 FFF7FEFF 		bl	SCC_GetUnderVoltageThreshold
 3996 0594 0346     		mov	r3, r0
ARM GAS  /tmp/cctuZX3B.s 			page 116


 3997 0596 1AB2     		sxth	r2, r3
 3998              		.loc 6 951 28
 3999 0598 FB6E     		ldr	r3, [r7, #108]
 4000 059a 1A80     		strh	r2, [r3]	@ movhi
 952:Src/register_interface.c ****               break;
 4001              		.loc 6 952 15
 4002 059c 04E0     		b	.L239
 4003              	.L214:
 953:Src/register_interface.c ****             }
 954:Src/register_interface.c **** 
 955:Src/register_interface.c ****             default:
 956:Src/register_interface.c ****             {
 957:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 4004              		.loc 6 957 22
 4005 059e 0523     		movs	r3, #5
 4006 05a0 87F89F30 		strb	r3, [r7, #159]
 958:Src/register_interface.c ****               break;
 4007              		.loc 6 958 15
 4008 05a4 00E0     		b	.L239
 4009              	.L283:
 914:Src/register_interface.c **** 
 4010              		.loc 6 914 15
 4011 05a6 00BF     		nop
 4012              	.L239:
 959:Src/register_interface.c ****             }
 960:Src/register_interface.c ****           }
 961:Src/register_interface.c ****           *size = 2;
 4013              		.loc 6 961 17
 4014 05a8 7B68     		ldr	r3, [r7, #4]
 4015 05aa 0222     		movs	r2, #2
 4016 05ac 1A80     		strh	r2, [r3]	@ movhi
 962:Src/register_interface.c ****         }
 963:Src/register_interface.c ****         else
 964:Src/register_interface.c ****         {
 965:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 966:Src/register_interface.c ****         }
 967:Src/register_interface.c ****         break;
 4017              		.loc 6 967 9
 4018 05ae A2E2     		b	.L211
 4019              	.L212:
 965:Src/register_interface.c ****         }
 4020              		.loc 6 965 18
 4021 05b0 0823     		movs	r3, #8
 4022 05b2 87F89F30 		strb	r3, [r7, #159]
 4023              		.loc 6 967 9
 4024 05b6 9EE2     		b	.L211
 4025              	.L287:
 4026              		.align	2
 4027              	.L286:
 4028 05b8 00000000 		.word	PIDSpeedHandle_M1
 4029 05bc 00000000 		.word	TempSensor_M1
 4030 05c0 00000000 		.word	STO_PLL_M1
 4031 05c4 34000000 		.word	STO_PLL_M1+52
 4032 05c8 00000000 		.word	FF_M1
 4033 05cc 00000000 		.word	SCC
 4034              	.L195:
 4035              	.LBE25:
ARM GAS  /tmp/cctuZX3B.s 			page 117


 4036              	.LBB28:
 968:Src/register_interface.c ****       }
 969:Src/register_interface.c **** 
 970:Src/register_interface.c ****       case TYPE_DATA_32BIT:
 971:Src/register_interface.c ****       {
 972:Src/register_interface.c ****         uint32_t *regdataU32 = (uint32_t *)data; //cstat !MISRAC2012-Rule-11.3
 4037              		.loc 6 972 19
 4038 05d0 BB68     		ldr	r3, [r7, #8]
 4039 05d2 BB67     		str	r3, [r7, #120]
 973:Src/register_interface.c ****         int32_t *regdata32 = (int32_t *)data; //cstat !MISRAC2012-Rule-11.3
 4040              		.loc 6 973 18
 4041 05d4 BB68     		ldr	r3, [r7, #8]
 4042 05d6 7B67     		str	r3, [r7, #116]
 974:Src/register_interface.c **** 
 975:Src/register_interface.c ****         if (freeSpace >= 4)
 4043              		.loc 6 975 12
 4044 05d8 B7F9B030 		ldrsh	r3, [r7, #176]
 4045 05dc 032B     		cmp	r3, #3
 4046 05de 40F3BC81 		ble	.L241
 976:Src/register_interface.c ****         {
 977:Src/register_interface.c ****           switch (regID)
 4047              		.loc 6 977 11
 4048 05e2 FB89     		ldrh	r3, [r7, #14]
 4049 05e4 41F61852 		movw	r2, #7448
 4050 05e8 9342     		cmp	r3, r2
 4051 05ea 00F0A281 		beq	.L242
 4052 05ee 41F61852 		movw	r2, #7448
 4053 05f2 9342     		cmp	r3, r2
 4054 05f4 00F3A981 		bgt	.L243
 4055 05f8 41F65832 		movw	r2, #7000
 4056 05fc 9342     		cmp	r3, r2
 4057 05fe 00F00681 		beq	.L244
 4058 0602 41F65832 		movw	r2, #7000
 4059 0606 9342     		cmp	r3, r2
 4060 0608 00F39F81 		bgt	.L243
 4061 060c 41F65822 		movw	r2, #6744
 4062 0610 9342     		cmp	r3, r2
 4063 0612 00F08781 		beq	.L245
 4064 0616 41F65822 		movw	r2, #6744
 4065 061a 9342     		cmp	r3, r2
 4066 061c 00F39581 		bgt	.L243
 4067 0620 41F61822 		movw	r2, #6680
 4068 0624 9342     		cmp	r3, r2
 4069 0626 00F07681 		beq	.L246
 4070 062a 41F61822 		movw	r2, #6680
 4071 062e 9342     		cmp	r3, r2
 4072 0630 00F38B81 		bgt	.L243
 4073 0634 41F6D812 		movw	r2, #6616
 4074 0638 9342     		cmp	r3, r2
 4075 063a 00F06181 		beq	.L247
 4076 063e 41F6D812 		movw	r2, #6616
 4077 0642 9342     		cmp	r3, r2
 4078 0644 00F38181 		bgt	.L243
 4079 0648 41F69812 		movw	r2, #6552
 4080 064c 9342     		cmp	r3, r2
 4081 064e 00F04C81 		beq	.L248
 4082 0652 41F69812 		movw	r2, #6552
ARM GAS  /tmp/cctuZX3B.s 			page 118


 4083 0656 9342     		cmp	r3, r2
 4084 0658 00F37781 		bgt	.L243
 4085 065c 41F65812 		movw	r2, #6488
 4086 0660 9342     		cmp	r3, r2
 4087 0662 00F03781 		beq	.L249
 4088 0666 41F65812 		movw	r2, #6488
 4089 066a 9342     		cmp	r3, r2
 4090 066c 00F36D81 		bgt	.L243
 4091 0670 41F61812 		movw	r2, #6424
 4092 0674 9342     		cmp	r3, r2
 4093 0676 00F02281 		beq	.L250
 4094 067a 41F61812 		movw	r2, #6424
 4095 067e 9342     		cmp	r3, r2
 4096 0680 00F36381 		bgt	.L243
 4097 0684 41F6D802 		movw	r2, #6360
 4098 0688 9342     		cmp	r3, r2
 4099 068a 00F01181 		beq	.L251
 4100 068e 41F6D802 		movw	r2, #6360
 4101 0692 9342     		cmp	r3, r2
 4102 0694 00F35981 		bgt	.L243
 4103 0698 41F69802 		movw	r2, #6296
 4104 069c 9342     		cmp	r3, r2
 4105 069e 00F0FC80 		beq	.L252
 4106 06a2 41F69802 		movw	r2, #6296
 4107 06a6 9342     		cmp	r3, r2
 4108 06a8 00F34F81 		bgt	.L243
 4109 06ac 41F65802 		movw	r2, #6232
 4110 06b0 9342     		cmp	r3, r2
 4111 06b2 00F0E780 		beq	.L253
 4112 06b6 41F65802 		movw	r2, #6232
 4113 06ba 9342     		cmp	r3, r2
 4114 06bc 00F34581 		bgt	.L243
 4115 06c0 41F61802 		movw	r2, #6168
 4116 06c4 9342     		cmp	r3, r2
 4117 06c6 00F0D280 		beq	.L254
 4118 06ca 41F61802 		movw	r2, #6168
 4119 06ce 9342     		cmp	r3, r2
 4120 06d0 00F33B81 		bgt	.L243
 4121 06d4 41F2D872 		movw	r2, #6104
 4122 06d8 9342     		cmp	r3, r2
 4123 06da 00F0C180 		beq	.L255
 4124 06de 41F2D872 		movw	r2, #6104
 4125 06e2 9342     		cmp	r3, r2
 4126 06e4 00F33181 		bgt	.L243
 4127 06e8 41F29872 		movw	r2, #6040
 4128 06ec 9342     		cmp	r3, r2
 4129 06ee 00F0B080 		beq	.L256
 4130 06f2 41F29872 		movw	r2, #6040
 4131 06f6 9342     		cmp	r3, r2
 4132 06f8 00F32781 		bgt	.L243
 4133 06fc 41F25872 		movw	r2, #5976
 4134 0700 9342     		cmp	r3, r2
 4135 0702 00F09F80 		beq	.L257
 4136 0706 41F25872 		movw	r2, #5976
 4137 070a 9342     		cmp	r3, r2
 4138 070c 00F31D81 		bgt	.L243
 4139 0710 41F21872 		movw	r2, #5912
ARM GAS  /tmp/cctuZX3B.s 			page 119


 4140 0714 9342     		cmp	r3, r2
 4141 0716 00F08E80 		beq	.L258
 4142 071a 41F21872 		movw	r2, #5912
 4143 071e 9342     		cmp	r3, r2
 4144 0720 00F31381 		bgt	.L243
 4145 0724 41F2D862 		movw	r2, #5848
 4146 0728 9342     		cmp	r3, r2
 4147 072a 7DD0     		beq	.L259
 4148 072c 41F2D862 		movw	r2, #5848
 4149 0730 9342     		cmp	r3, r2
 4150 0732 00F30A81 		bgt	.L243
 4151 0736 B3F5167F 		cmp	r3, #600
 4152 073a 63D0     		beq	.L260
 4153 073c B3F5167F 		cmp	r3, #600
 4154 0740 00F30381 		bgt	.L243
 4155 0744 B3F5067F 		cmp	r3, #536
 4156 0748 57D0     		beq	.L261
 4157 074a B3F5067F 		cmp	r3, #536
 4158 074e 00F3FC80 		bgt	.L243
 4159 0752 B3F5EC7F 		cmp	r3, #472
 4160 0756 4BD0     		beq	.L262
 4161 0758 B3F5EC7F 		cmp	r3, #472
 4162 075c 00F3F580 		bgt	.L243
 4163 0760 B3F58C7F 		cmp	r3, #280
 4164 0764 3DD0     		beq	.L263
 4165 0766 B3F58C7F 		cmp	r3, #280
 4166 076a 00F3EE80 		bgt	.L243
 4167 076e D82B     		cmp	r3, #216
 4168 0770 30D0     		beq	.L264
 4169 0772 D82B     		cmp	r3, #216
 4170 0774 00F3E980 		bgt	.L243
 4171 0778 982B     		cmp	r3, #152
 4172 077a 1DD0     		beq	.L265
 4173 077c 982B     		cmp	r3, #152
 4174 077e 00F3E480 		bgt	.L243
 4175 0782 182B     		cmp	r3, #24
 4176 0784 02D0     		beq	.L266
 4177 0786 582B     		cmp	r3, #88
 4178 0788 08D0     		beq	.L267
 4179 078a DEE0     		b	.L243
 4180              	.L266:
 978:Src/register_interface.c ****           {
 979:Src/register_interface.c ****             case MC_REG_FAULTS_FLAGS:
 980:Src/register_interface.c ****             {
 981:Src/register_interface.c ****               *regdataU32 = MCI_GetFaultState(pMCIN);
 4181              		.loc 6 981 29
 4182 078c D7F89800 		ldr	r0, [r7, #152]
 4183 0790 FFF7FEFF 		bl	MCI_GetFaultState
 4184 0794 0246     		mov	r2, r0
 4185              		.loc 6 981 27
 4186 0796 BB6F     		ldr	r3, [r7, #120]
 4187 0798 1A60     		str	r2, [r3]
 982:Src/register_interface.c ****               break;
 4188              		.loc 6 982 15
 4189 079a DAE0     		b	.L268
 4190              	.L267:
 983:Src/register_interface.c ****             }
ARM GAS  /tmp/cctuZX3B.s 			page 120


 984:Src/register_interface.c ****             case MC_REG_SPEED_MEAS:
 985:Src/register_interface.c ****             {
 986:Src/register_interface.c ****               *regdata32 = (((int32_t)MCI_GetAvrgMecSpeedUnit(pMCIN) * U_RPM) / SPEED_UNIT);
 4191              		.loc 6 986 39
 4192 079c D7F89800 		ldr	r0, [r7, #152]
 4193 07a0 FFF7FEFF 		bl	MCI_GetAvrgMecSpeedUnit
 4194 07a4 0346     		mov	r3, r0
 4195              		.loc 6 986 30
 4196 07a6 1A46     		mov	r2, r3
 4197              		.loc 6 986 79
 4198 07a8 1346     		mov	r3, r2
 4199 07aa 5B00     		lsls	r3, r3, #1
 4200 07ac 1344     		add	r3, r3, r2
 4201 07ae 5B00     		lsls	r3, r3, #1
 4202 07b0 1A46     		mov	r2, r3
 4203              		.loc 6 986 26
 4204 07b2 7B6F     		ldr	r3, [r7, #116]
 4205 07b4 1A60     		str	r2, [r3]
 987:Src/register_interface.c ****               break;
 4206              		.loc 6 987 15
 4207 07b6 CCE0     		b	.L268
 4208              	.L265:
 988:Src/register_interface.c ****             }
 989:Src/register_interface.c **** 
 990:Src/register_interface.c ****             case MC_REG_SPEED_REF:
 991:Src/register_interface.c ****             {
 992:Src/register_interface.c ****               *regdata32 = (((int32_t)MCI_GetMecSpeedRefUnit(pMCIN) * U_RPM) / SPEED_UNIT);
 4209              		.loc 6 992 39
 4210 07b8 D7F89800 		ldr	r0, [r7, #152]
 4211 07bc FFF7FEFF 		bl	MCI_GetMecSpeedRefUnit
 4212 07c0 0346     		mov	r3, r0
 4213              		.loc 6 992 30
 4214 07c2 1A46     		mov	r2, r3
 4215              		.loc 6 992 78
 4216 07c4 1346     		mov	r3, r2
 4217 07c6 5B00     		lsls	r3, r3, #1
 4218 07c8 1344     		add	r3, r3, r2
 4219 07ca 5B00     		lsls	r3, r3, #1
 4220 07cc 1A46     		mov	r2, r3
 4221              		.loc 6 992 26
 4222 07ce 7B6F     		ldr	r3, [r7, #116]
 4223 07d0 1A60     		str	r2, [r3]
 993:Src/register_interface.c ****               break;
 4224              		.loc 6 993 15
 4225 07d2 BEE0     		b	.L268
 4226              	.L264:
 994:Src/register_interface.c ****             }
 995:Src/register_interface.c **** 
 996:Src/register_interface.c ****             case MC_REG_STOPLL_EST_BEMF:
 997:Src/register_interface.c ****             {
 998:Src/register_interface.c ****               *regdata32 = STO_PLL_GetEstimatedBemfLevel(&STO_PLL_M1);
 4227              		.loc 6 998 28
 4228 07d4 A548     		ldr	r0, .L288
 4229 07d6 FFF7FEFF 		bl	STO_PLL_GetEstimatedBemfLevel
 4230 07da 0246     		mov	r2, r0
 4231              		.loc 6 998 26
 4232 07dc 7B6F     		ldr	r3, [r7, #116]
ARM GAS  /tmp/cctuZX3B.s 			page 121


 4233 07de 1A60     		str	r2, [r3]
 999:Src/register_interface.c ****               break;
 4234              		.loc 6 999 15
 4235 07e0 B7E0     		b	.L268
 4236              	.L263:
1000:Src/register_interface.c ****             }
1001:Src/register_interface.c **** 
1002:Src/register_interface.c ****             case MC_REG_STOPLL_OBS_BEMF:
1003:Src/register_interface.c ****             {
1004:Src/register_interface.c ****               *regdata32 = STO_PLL_GetObservedBemfLevel(&STO_PLL_M1);
 4237              		.loc 6 1004 28
 4238 07e2 A248     		ldr	r0, .L288
 4239 07e4 FFF7FEFF 		bl	STO_PLL_GetObservedBemfLevel
 4240 07e8 0246     		mov	r2, r0
 4241              		.loc 6 1004 26
 4242 07ea 7B6F     		ldr	r3, [r7, #116]
 4243 07ec 1A60     		str	r2, [r3]
1005:Src/register_interface.c ****               break;
 4244              		.loc 6 1005 15
 4245 07ee B0E0     		b	.L268
 4246              	.L262:
1006:Src/register_interface.c ****             }
1007:Src/register_interface.c **** 
1008:Src/register_interface.c ****             case MC_REG_FF_1Q:
1009:Src/register_interface.c ****             {
1010:Src/register_interface.c ****               *regdata32 = FF_M1.wConstant_1Q;
 4247              		.loc 6 1010 33
 4248 07f0 9F4B     		ldr	r3, .L288+4
 4249 07f2 1A69     		ldr	r2, [r3, #16]
 4250              		.loc 6 1010 26
 4251 07f4 7B6F     		ldr	r3, [r7, #116]
 4252 07f6 1A60     		str	r2, [r3]
1011:Src/register_interface.c ****               break;
 4253              		.loc 6 1011 15
 4254 07f8 ABE0     		b	.L268
 4255              	.L261:
1012:Src/register_interface.c ****             }
1013:Src/register_interface.c **** 
1014:Src/register_interface.c ****             case MC_REG_FF_1D:
1015:Src/register_interface.c ****             {
1016:Src/register_interface.c ****               *regdata32 = FF_M1.wConstant_1D;
 4256              		.loc 6 1016 33
 4257 07fa 9D4B     		ldr	r3, .L288+4
 4258 07fc DA68     		ldr	r2, [r3, #12]
 4259              		.loc 6 1016 26
 4260 07fe 7B6F     		ldr	r3, [r7, #116]
 4261 0800 1A60     		str	r2, [r3]
1017:Src/register_interface.c ****               break;
 4262              		.loc 6 1017 15
 4263 0802 A6E0     		b	.L268
 4264              	.L260:
1018:Src/register_interface.c ****             }
1019:Src/register_interface.c **** 
1020:Src/register_interface.c ****             case MC_REG_FF_2:
1021:Src/register_interface.c ****             {
1022:Src/register_interface.c ****               *regdata32 = FF_M1.wConstant_2;
 4265              		.loc 6 1022 33
ARM GAS  /tmp/cctuZX3B.s 			page 122


 4266 0804 9A4B     		ldr	r3, .L288+4
 4267 0806 5A69     		ldr	r2, [r3, #20]
 4268              		.loc 6 1022 26
 4269 0808 7B6F     		ldr	r3, [r7, #116]
 4270 080a 1A60     		str	r2, [r3]
1023:Src/register_interface.c ****               break;
 4271              		.loc 6 1023 15
 4272 080c A1E0     		b	.L268
 4273              	.L244:
 4274              	.LBB29:
1024:Src/register_interface.c ****             }
1025:Src/register_interface.c **** 
1026:Src/register_interface.c ****             case MC_REG_MOTOR_POWER:
1027:Src/register_interface.c ****             {
1028:Src/register_interface.c ****               FloatToU32 ReadVal; //cstat !MISRAC2012-Rule-19.2
1029:Src/register_interface.c ****               ReadVal.Float_Val = PQD_GetAvrgElMotorPowerW(pMPM[M1]);
 4275              		.loc 6 1029 64
 4276 080e 994B     		ldr	r3, .L288+8
 4277 0810 1B68     		ldr	r3, [r3]
 4278              		.loc 6 1029 35
 4279 0812 1846     		mov	r0, r3
 4280 0814 FFF7FEFF 		bl	PQD_GetAvrgElMotorPowerW
 4281 0818 F0EE407A 		vmov.f32	s15, s0
 4282              		.loc 6 1029 33
 4283 081c C7ED0D7A 		vstr.32	s15, [r7, #52]
1030:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val; //cstat !UNION-type-punning
 4284              		.loc 6 1030 36
 4285 0820 7A6B     		ldr	r2, [r7, #52]
 4286              		.loc 6 1030 27
 4287 0822 BB6F     		ldr	r3, [r7, #120]
 4288 0824 1A60     		str	r2, [r3]
1031:Src/register_interface.c ****               break;
 4289              		.loc 6 1031 15
 4290 0826 94E0     		b	.L268
 4291              	.L259:
 4292              	.LBE29:
1032:Src/register_interface.c ****             }
1033:Src/register_interface.c **** 
1034:Src/register_interface.c ****             case MC_REG_SC_RS:
1035:Src/register_interface.c ****             {
1036:Src/register_interface.c ****               *regdataU32 = SCC_GetRs(&SCC);
 4293              		.loc 6 1036 29
 4294 0828 9348     		ldr	r0, .L288+12
 4295 082a FFF7FEFF 		bl	SCC_GetRs
 4296 082e 0246     		mov	r2, r0
 4297              		.loc 6 1036 27
 4298 0830 BB6F     		ldr	r3, [r7, #120]
 4299 0832 1A60     		str	r2, [r3]
1037:Src/register_interface.c ****               break;
 4300              		.loc 6 1037 15
 4301 0834 8DE0     		b	.L268
 4302              	.L258:
1038:Src/register_interface.c ****             }
1039:Src/register_interface.c **** 
1040:Src/register_interface.c ****             case MC_REG_SC_LS:
1041:Src/register_interface.c ****             {
1042:Src/register_interface.c ****               *regdataU32 = SCC_GetLs(&SCC);
ARM GAS  /tmp/cctuZX3B.s 			page 123


 4303              		.loc 6 1042 29
 4304 0836 9048     		ldr	r0, .L288+12
 4305 0838 FFF7FEFF 		bl	SCC_GetLs
 4306 083c 0246     		mov	r2, r0
 4307              		.loc 6 1042 27
 4308 083e BB6F     		ldr	r3, [r7, #120]
 4309 0840 1A60     		str	r2, [r3]
1043:Src/register_interface.c ****               break;
 4310              		.loc 6 1043 15
 4311 0842 86E0     		b	.L268
 4312              	.L257:
1044:Src/register_interface.c ****             }
1045:Src/register_interface.c **** 
1046:Src/register_interface.c ****             case MC_REG_SC_KE:
1047:Src/register_interface.c ****             {
1048:Src/register_interface.c ****               *regdataU32 = SCC_GetKe(&SCC);
 4313              		.loc 6 1048 29
 4314 0844 8C48     		ldr	r0, .L288+12
 4315 0846 FFF7FEFF 		bl	SCC_GetKe
 4316 084a 0246     		mov	r2, r0
 4317              		.loc 6 1048 27
 4318 084c BB6F     		ldr	r3, [r7, #120]
 4319 084e 1A60     		str	r2, [r3]
1049:Src/register_interface.c ****               break;
 4320              		.loc 6 1049 15
 4321 0850 7FE0     		b	.L268
 4322              	.L256:
1050:Src/register_interface.c ****             }
1051:Src/register_interface.c **** 
1052:Src/register_interface.c ****             case MC_REG_SC_VBUS:
1053:Src/register_interface.c ****             {
1054:Src/register_interface.c ****               *regdataU32 = SCC_GetVbus(&SCC);
 4323              		.loc 6 1054 29
 4324 0852 8948     		ldr	r0, .L288+12
 4325 0854 FFF7FEFF 		bl	SCC_GetVbus
 4326 0858 0246     		mov	r2, r0
 4327              		.loc 6 1054 27
 4328 085a BB6F     		ldr	r3, [r7, #120]
 4329 085c 1A60     		str	r2, [r3]
1055:Src/register_interface.c ****               break;
 4330              		.loc 6 1055 15
 4331 085e 78E0     		b	.L268
 4332              	.L255:
1056:Src/register_interface.c ****             }
1057:Src/register_interface.c **** 
1058:Src/register_interface.c ****             case MC_REG_SC_MEAS_NOMINALSPEED:
1059:Src/register_interface.c ****             {
1060:Src/register_interface.c ****               *regdataU32 = OTT_GetNominalSpeed(&OTT);
 4333              		.loc 6 1060 29
 4334 0860 8648     		ldr	r0, .L288+16
 4335 0862 FFF7FEFF 		bl	OTT_GetNominalSpeed
 4336 0866 0246     		mov	r2, r0
 4337              		.loc 6 1060 27
 4338 0868 BB6F     		ldr	r3, [r7, #120]
 4339 086a 1A60     		str	r2, [r3]
1061:Src/register_interface.c ****               break;
 4340              		.loc 6 1061 15
ARM GAS  /tmp/cctuZX3B.s 			page 124


 4341 086c 71E0     		b	.L268
 4342              	.L254:
 4343              	.LBB30:
1062:Src/register_interface.c ****             }
1063:Src/register_interface.c **** 
1064:Src/register_interface.c ****             case MC_REG_SC_CURRENT:
1065:Src/register_interface.c ****             {
1066:Src/register_interface.c ****               FloatToU32 ReadVal;
1067:Src/register_interface.c ****               ReadVal.Float_Val = SCC_GetNominalCurrent(&SCC);
 4344              		.loc 6 1067 35
 4345 086e 8248     		ldr	r0, .L288+12
 4346 0870 FFF7FEFF 		bl	SCC_GetNominalCurrent
 4347 0874 F0EE407A 		vmov.f32	s15, s0
 4348              		.loc 6 1067 33
 4349 0878 C7ED0C7A 		vstr.32	s15, [r7, #48]
1068:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4350              		.loc 6 1068 36
 4351 087c 3A6B     		ldr	r2, [r7, #48]
 4352              		.loc 6 1068 27
 4353 087e BB6F     		ldr	r3, [r7, #120]
 4354 0880 1A60     		str	r2, [r3]
1069:Src/register_interface.c ****               break;
 4355              		.loc 6 1069 15
 4356 0882 66E0     		b	.L268
 4357              	.L253:
 4358              	.LBE30:
 4359              	.LBB31:
1070:Src/register_interface.c ****             }
1071:Src/register_interface.c **** 
1072:Src/register_interface.c ****             case MC_REG_SC_SPDBANDWIDTH:
1073:Src/register_interface.c ****             {
1074:Src/register_interface.c ****               FloatToU32 ReadVal;
1075:Src/register_interface.c ****               ReadVal.Float_Val = OTT_GetSpeedRegulatorBandwidth(&OTT);
 4360              		.loc 6 1075 35
 4361 0884 7D48     		ldr	r0, .L288+16
 4362 0886 FFF7FEFF 		bl	OTT_GetSpeedRegulatorBandwidth
 4363 088a F0EE407A 		vmov.f32	s15, s0
 4364              		.loc 6 1075 33
 4365 088e C7ED0B7A 		vstr.32	s15, [r7, #44]
1076:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4366              		.loc 6 1076 36
 4367 0892 FA6A     		ldr	r2, [r7, #44]
 4368              		.loc 6 1076 27
 4369 0894 BB6F     		ldr	r3, [r7, #120]
 4370 0896 1A60     		str	r2, [r3]
1077:Src/register_interface.c ****               break;
 4371              		.loc 6 1077 15
 4372 0898 5BE0     		b	.L268
 4373              	.L252:
 4374              	.LBE31:
 4375              	.LBB32:
1078:Src/register_interface.c ****             }
1079:Src/register_interface.c **** 
1080:Src/register_interface.c ****             case MC_REG_SC_LDLQRATIO:
1081:Src/register_interface.c ****             {
1082:Src/register_interface.c ****               FloatToU32 ReadVal;
1083:Src/register_interface.c ****               ReadVal.Float_Val = SCC_GetLdLqRatio(&SCC);
ARM GAS  /tmp/cctuZX3B.s 			page 125


 4376              		.loc 6 1083 35
 4377 089a 7748     		ldr	r0, .L288+12
 4378 089c FFF7FEFF 		bl	SCC_GetLdLqRatio
 4379 08a0 F0EE407A 		vmov.f32	s15, s0
 4380              		.loc 6 1083 33
 4381 08a4 C7ED0A7A 		vstr.32	s15, [r7, #40]
1084:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4382              		.loc 6 1084 36
 4383 08a8 BA6A     		ldr	r2, [r7, #40]
 4384              		.loc 6 1084 27
 4385 08aa BB6F     		ldr	r3, [r7, #120]
 4386 08ac 1A60     		str	r2, [r3]
1085:Src/register_interface.c ****               break;
 4387              		.loc 6 1085 15
 4388 08ae 50E0     		b	.L268
 4389              	.L251:
 4390              	.LBE32:
1086:Src/register_interface.c ****             }
1087:Src/register_interface.c **** 
1088:Src/register_interface.c ****             case MC_REG_SC_NOMINAL_SPEED:
1089:Src/register_interface.c ****             {
1090:Src/register_interface.c ****               *regdata32 = SCC_GetNominalSpeed(&SCC);
 4391              		.loc 6 1090 28
 4392 08b0 7148     		ldr	r0, .L288+12
 4393 08b2 FFF7FEFF 		bl	SCC_GetNominalSpeed
 4394 08b6 0246     		mov	r2, r0
 4395              		.loc 6 1090 26
 4396 08b8 7B6F     		ldr	r3, [r7, #116]
 4397 08ba 1A60     		str	r2, [r3]
1091:Src/register_interface.c ****               break;
 4398              		.loc 6 1091 15
 4399 08bc 49E0     		b	.L268
 4400              	.L250:
 4401              	.LBB33:
1092:Src/register_interface.c ****             }
1093:Src/register_interface.c **** 
1094:Src/register_interface.c ****             case MC_REG_SC_CURRBANDWIDTH:
1095:Src/register_interface.c ****             {
1096:Src/register_interface.c ****               FloatToU32 ReadVal;
1097:Src/register_interface.c ****               ReadVal.Float_Val = SCC_GetCurrentBandwidth(&SCC);
 4402              		.loc 6 1097 35
 4403 08be 6E48     		ldr	r0, .L288+12
 4404 08c0 FFF7FEFF 		bl	SCC_GetCurrentBandwidth
 4405 08c4 F0EE407A 		vmov.f32	s15, s0
 4406              		.loc 6 1097 33
 4407 08c8 C7ED097A 		vstr.32	s15, [r7, #36]
1098:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4408              		.loc 6 1098 36
 4409 08cc 7A6A     		ldr	r2, [r7, #36]
 4410              		.loc 6 1098 27
 4411 08ce BB6F     		ldr	r3, [r7, #120]
 4412 08d0 1A60     		str	r2, [r3]
1099:Src/register_interface.c ****               break;
 4413              		.loc 6 1099 15
 4414 08d2 3EE0     		b	.L268
 4415              	.L249:
 4416              	.LBE33:
ARM GAS  /tmp/cctuZX3B.s 			page 126


 4417              	.LBB34:
1100:Src/register_interface.c ****             }
1101:Src/register_interface.c **** 
1102:Src/register_interface.c ****             case MC_REG_SC_J:
1103:Src/register_interface.c ****             {
1104:Src/register_interface.c ****               FloatToU32 ReadVal;
1105:Src/register_interface.c ****               ReadVal.Float_Val = OTT_GetJ(&OTT);
 4418              		.loc 6 1105 35
 4419 08d4 6948     		ldr	r0, .L288+16
 4420 08d6 FFF7FEFF 		bl	OTT_GetJ
 4421 08da F0EE407A 		vmov.f32	s15, s0
 4422              		.loc 6 1105 33
 4423 08de C7ED087A 		vstr.32	s15, [r7, #32]
1106:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4424              		.loc 6 1106 36
 4425 08e2 3A6A     		ldr	r2, [r7, #32]
 4426              		.loc 6 1106 27
 4427 08e4 BB6F     		ldr	r3, [r7, #120]
 4428 08e6 1A60     		str	r2, [r3]
1107:Src/register_interface.c ****               break;
 4429              		.loc 6 1107 15
 4430 08e8 33E0     		b	.L268
 4431              	.L248:
 4432              	.LBE34:
 4433              	.LBB35:
1108:Src/register_interface.c ****             }
1109:Src/register_interface.c **** 
1110:Src/register_interface.c ****             case MC_REG_SC_F:
1111:Src/register_interface.c ****             {
1112:Src/register_interface.c ****               FloatToU32 ReadVal;
1113:Src/register_interface.c ****               ReadVal.Float_Val = OTT_GetF(&OTT);
 4434              		.loc 6 1113 35
 4435 08ea 6448     		ldr	r0, .L288+16
 4436 08ec FFF7FEFF 		bl	OTT_GetF
 4437 08f0 F0EE407A 		vmov.f32	s15, s0
 4438              		.loc 6 1113 33
 4439 08f4 C7ED077A 		vstr.32	s15, [r7, #28]
1114:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4440              		.loc 6 1114 36
 4441 08f8 FA69     		ldr	r2, [r7, #28]
 4442              		.loc 6 1114 27
 4443 08fa BB6F     		ldr	r3, [r7, #120]
 4444 08fc 1A60     		str	r2, [r3]
1115:Src/register_interface.c ****               break;
 4445              		.loc 6 1115 15
 4446 08fe 28E0     		b	.L268
 4447              	.L247:
 4448              	.LBE35:
 4449              	.LBB36:
1116:Src/register_interface.c ****             }
1117:Src/register_interface.c **** 
1118:Src/register_interface.c ****             case MC_REG_SC_MAX_CURRENT:
1119:Src/register_interface.c ****             {
1120:Src/register_interface.c ****               FloatToU32 ReadVal;
1121:Src/register_interface.c ****               ReadVal.Float_Val = SCC_GetStartupCurrentAmp(&SCC);
 4450              		.loc 6 1121 35
 4451 0900 5D48     		ldr	r0, .L288+12
ARM GAS  /tmp/cctuZX3B.s 			page 127


 4452 0902 FFF7FEFF 		bl	SCC_GetStartupCurrentAmp
 4453 0906 F0EE407A 		vmov.f32	s15, s0
 4454              		.loc 6 1121 33
 4455 090a C7ED067A 		vstr.32	s15, [r7, #24]
1122:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 4456              		.loc 6 1122 36
 4457 090e BA69     		ldr	r2, [r7, #24]
 4458              		.loc 6 1122 27
 4459 0910 BB6F     		ldr	r3, [r7, #120]
 4460 0912 1A60     		str	r2, [r3]
1123:Src/register_interface.c ****               break;
 4461              		.loc 6 1123 15
 4462 0914 1DE0     		b	.L268
 4463              	.L246:
 4464              	.LBE36:
1124:Src/register_interface.c ****             }
1125:Src/register_interface.c **** 
1126:Src/register_interface.c ****             case MC_REG_SC_STARTUP_SPEED:
1127:Src/register_interface.c ****             {
1128:Src/register_interface.c ****               *regdata32 = SCC_GetEstMaxOLSpeed(&SCC);
 4465              		.loc 6 1128 28
 4466 0916 5848     		ldr	r0, .L288+12
 4467 0918 FFF7FEFF 		bl	SCC_GetEstMaxOLSpeed
 4468 091c 0246     		mov	r2, r0
 4469              		.loc 6 1128 26
 4470 091e 7B6F     		ldr	r3, [r7, #116]
 4471 0920 1A60     		str	r2, [r3]
1129:Src/register_interface.c ****               break;
 4472              		.loc 6 1129 15
 4473 0922 16E0     		b	.L268
 4474              	.L245:
1130:Src/register_interface.c ****             }
1131:Src/register_interface.c **** 
1132:Src/register_interface.c ****             case MC_REG_SC_STARTUP_ACC:
1133:Src/register_interface.c ****             {
1134:Src/register_interface.c ****               *regdata32 = SCC_GetEstMaxAcceleration(&SCC);
 4475              		.loc 6 1134 28
 4476 0924 5448     		ldr	r0, .L288+12
 4477 0926 FFF7FEFF 		bl	SCC_GetEstMaxAcceleration
 4478 092a 0246     		mov	r2, r0
 4479              		.loc 6 1134 26
 4480 092c 7B6F     		ldr	r3, [r7, #116]
 4481 092e 1A60     		str	r2, [r3]
1135:Src/register_interface.c ****               break;
 4482              		.loc 6 1135 15
 4483 0930 0FE0     		b	.L268
 4484              	.L242:
 4485              	.LBB37:
1136:Src/register_interface.c ****             }
1137:Src/register_interface.c ****             case MC_REG_RESISTOR_OFFSET:
1138:Src/register_interface.c ****             {
1139:Src/register_interface.c ****               FloatToU32 ReadVal;
1140:Src/register_interface.c ****               ReadVal.Float_Val=SCC_GetResistorOffset(&SCC);
 4486              		.loc 6 1140 33
 4487 0932 5148     		ldr	r0, .L288+12
 4488 0934 FFF7FEFF 		bl	SCC_GetResistorOffset
 4489 0938 F0EE407A 		vmov.f32	s15, s0
ARM GAS  /tmp/cctuZX3B.s 			page 128


 4490              		.loc 6 1140 32
 4491 093c C7ED057A 		vstr.32	s15, [r7, #20]
1141:Src/register_interface.c ****               *regdata32 =ReadVal.U32_Val;
 4492              		.loc 6 1141 34
 4493 0940 7B69     		ldr	r3, [r7, #20]
 4494 0942 1A46     		mov	r2, r3
 4495              		.loc 6 1141 26
 4496 0944 7B6F     		ldr	r3, [r7, #116]
 4497 0946 1A60     		str	r2, [r3]
1142:Src/register_interface.c ****               break;
 4498              		.loc 6 1142 15
 4499 0948 03E0     		b	.L268
 4500              	.L243:
 4501              	.LBE37:
1143:Src/register_interface.c ****             }
1144:Src/register_interface.c **** 
1145:Src/register_interface.c ****             default:
1146:Src/register_interface.c ****             {
1147:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 4502              		.loc 6 1147 22
 4503 094a 0523     		movs	r3, #5
 4504 094c 87F89F30 		strb	r3, [r7, #159]
1148:Src/register_interface.c ****               break;
 4505              		.loc 6 1148 15
 4506 0950 00BF     		nop
 4507              	.L268:
1149:Src/register_interface.c ****             }
1150:Src/register_interface.c ****           }
1151:Src/register_interface.c ****           *size = 4;
 4508              		.loc 6 1151 17
 4509 0952 7B68     		ldr	r3, [r7, #4]
 4510 0954 0422     		movs	r2, #4
 4511 0956 1A80     		strh	r2, [r3]	@ movhi
1152:Src/register_interface.c ****         }
1153:Src/register_interface.c ****         else
1154:Src/register_interface.c ****         {
1155:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
1156:Src/register_interface.c ****         }
1157:Src/register_interface.c ****         break;
 4512              		.loc 6 1157 9
 4513 0958 CDE0     		b	.L211
 4514              	.L241:
1155:Src/register_interface.c ****         }
 4515              		.loc 6 1155 18
 4516 095a 0823     		movs	r3, #8
 4517 095c 87F89F30 		strb	r3, [r7, #159]
 4518              		.loc 6 1157 9
 4519 0960 C9E0     		b	.L211
 4520              	.L194:
 4521              	.LBE28:
1158:Src/register_interface.c ****       }
1159:Src/register_interface.c **** 
1160:Src/register_interface.c ****       case TYPE_DATA_STRING:
1161:Src/register_interface.c ****       {
1162:Src/register_interface.c ****         switch (regID)
1163:Src/register_interface.c ****         {
1164:Src/register_interface.c **** 
ARM GAS  /tmp/cctuZX3B.s 			page 129


1165:Src/register_interface.c ****           default:
1166:Src/register_interface.c ****           {
1167:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 4522              		.loc 6 1167 20
 4523 0962 0523     		movs	r3, #5
 4524 0964 87F89F30 		strb	r3, [r7, #159]
1168:Src/register_interface.c ****             *size= 0 ; /* */
 4525              		.loc 6 1168 18
 4526 0968 7B68     		ldr	r3, [r7, #4]
 4527 096a 0022     		movs	r2, #0
 4528 096c 1A80     		strh	r2, [r3]	@ movhi
1169:Src/register_interface.c ****             break;
 4529              		.loc 6 1169 13
 4530 096e 00BF     		nop
1170:Src/register_interface.c ****           }
1171:Src/register_interface.c ****         }
1172:Src/register_interface.c ****         break;
 4531              		.loc 6 1172 9
 4532 0970 C1E0     		b	.L211
 4533              	.L192:
 4534              	.LBB38:
1173:Src/register_interface.c ****       }
1174:Src/register_interface.c **** 
1175:Src/register_interface.c ****       case TYPE_DATA_RAW:
1176:Src/register_interface.c ****       {
1177:Src/register_interface.c ****         /* First 2 bytes of the answer is reserved to the size */
1178:Src/register_interface.c ****         uint16_t *rawSize = (uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 4535              		.loc 6 1178 19
 4536 0972 BB68     		ldr	r3, [r7, #8]
 4537 0974 C7F89030 		str	r3, [r7, #144]
1179:Src/register_interface.c ****         uint8_t * rawData = data;
 4538              		.loc 6 1179 19
 4539 0978 BB68     		ldr	r3, [r7, #8]
 4540 097a C7F88C30 		str	r3, [r7, #140]
1180:Src/register_interface.c ****         rawData++;
 4541              		.loc 6 1180 16
 4542 097e D7F88C30 		ldr	r3, [r7, #140]
 4543 0982 0133     		adds	r3, r3, #1
 4544 0984 C7F88C30 		str	r3, [r7, #140]
1181:Src/register_interface.c ****         rawData++;
 4545              		.loc 6 1181 16
 4546 0988 D7F88C30 		ldr	r3, [r7, #140]
 4547 098c 0133     		adds	r3, r3, #1
 4548 098e C7F88C30 		str	r3, [r7, #140]
1182:Src/register_interface.c **** 
1183:Src/register_interface.c ****         switch (regID)
 4549              		.loc 6 1183 9
 4550 0992 FB89     		ldrh	r3, [r7, #14]
 4551 0994 B3F5D47F 		cmp	r3, #424
 4552 0998 78D0     		beq	.L270
 4553 099a B3F5D47F 		cmp	r3, #424
 4554 099e 00F39A80 		bgt	.L271
 4555 09a2 B3F5947F 		cmp	r3, #296
 4556 09a6 44D0     		beq	.L272
 4557 09a8 B3F5947F 		cmp	r3, #296
 4558 09ac 00F39380 		bgt	.L271
 4559 09b0 A82B     		cmp	r3, #168
ARM GAS  /tmp/cctuZX3B.s 			page 130


 4560 09b2 02D0     		beq	.L273
 4561 09b4 E82B     		cmp	r3, #232
 4562 09b6 1DD0     		beq	.L274
 4563 09b8 8DE0     		b	.L271
 4564              	.L273:
1184:Src/register_interface.c ****         {
1185:Src/register_interface.c ****           case MC_REG_APPLICATION_CONFIG:
1186:Src/register_interface.c ****           {
1187:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(ApplicationConfig_reg_t);
 4565              		.loc 6 1187 22
 4566 09ba D7F89030 		ldr	r3, [r7, #144]
 4567 09be 1022     		movs	r2, #16
 4568 09c0 1A80     		strh	r2, [r3]	@ movhi
1188:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 4569              		.loc 6 1188 19
 4570 09c2 D7F89030 		ldr	r3, [r7, #144]
 4571 09c6 1B88     		ldrh	r3, [r3]
 4572              		.loc 6 1188 29
 4573 09c8 0233     		adds	r3, r3, #2
 4574              		.loc 6 1188 37
 4575 09ca B7F8B020 		ldrh	r2, [r7, #176]
 4576              		.loc 6 1188 16
 4577 09ce 9342     		cmp	r3, r2
 4578 09d0 03D9     		bls	.L275
1189:Src/register_interface.c ****             {
1190:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 4579              		.loc 6 1190 22
 4580 09d2 0823     		movs	r3, #8
 4581 09d4 87F89F30 		strb	r3, [r7, #159]
1191:Src/register_interface.c ****             }
1192:Src/register_interface.c ****             else
1193:Src/register_interface.c ****             {
1194:Src/register_interface.c ****               ApplicationConfig_reg_t const *pApplicationConfig_reg = ApplicationConfig_reg[motorID
1195:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pApplicationConfig_reg, sizeof(ApplicationConf
1196:Src/register_interface.c ****             }
1197:Src/register_interface.c ****             break;
 4582              		.loc 6 1197 13
 4583 09d8 81E0     		b	.L277
 4584              	.L275:
 4585              	.LBB39:
1194:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pApplicationConfig_reg, sizeof(ApplicationConf
 4586              		.loc 6 1194 92
 4587 09da 97F89E30 		ldrb	r3, [r7, #158]	@ zero_extendqisi2
1194:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pApplicationConfig_reg, sizeof(ApplicationConf
 4588              		.loc 6 1194 46
 4589 09de 284A     		ldr	r2, .L288+20
 4590 09e0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4591 09e4 FB67     		str	r3, [r7, #124]
1195:Src/register_interface.c ****             }
 4592              		.loc 6 1195 21
 4593 09e6 1022     		movs	r2, #16
 4594 09e8 F96F     		ldr	r1, [r7, #124]
 4595 09ea D7F88C00 		ldr	r0, [r7, #140]
 4596 09ee FFF7FEFF 		bl	memcpy
 4597              	.LBE39:
 4598              		.loc 6 1197 13
 4599 09f2 74E0     		b	.L277
ARM GAS  /tmp/cctuZX3B.s 			page 131


 4600              	.L274:
1198:Src/register_interface.c ****           }
1199:Src/register_interface.c **** 
1200:Src/register_interface.c ****           case MC_REG_FOCFW_CONFIG:
1201:Src/register_interface.c ****           {
1202:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(FOCFwConfig_reg_t);
 4601              		.loc 6 1202 22
 4602 09f4 D7F89030 		ldr	r3, [r7, #144]
 4603 09f8 0E22     		movs	r2, #14
 4604 09fa 1A80     		strh	r2, [r3]	@ movhi
1203:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 4605              		.loc 6 1203 19
 4606 09fc D7F89030 		ldr	r3, [r7, #144]
 4607 0a00 1B88     		ldrh	r3, [r3]
 4608              		.loc 6 1203 29
 4609 0a02 0233     		adds	r3, r3, #2
 4610              		.loc 6 1203 37
 4611 0a04 B7F8B020 		ldrh	r2, [r7, #176]
 4612              		.loc 6 1203 16
 4613 0a08 9342     		cmp	r3, r2
 4614 0a0a 03D9     		bls	.L278
1204:Src/register_interface.c ****             {
1205:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 4615              		.loc 6 1205 22
 4616 0a0c 0823     		movs	r3, #8
 4617 0a0e 87F89F30 		strb	r3, [r7, #159]
1206:Src/register_interface.c ****             }
1207:Src/register_interface.c ****             else
1208:Src/register_interface.c ****             {
1209:Src/register_interface.c ****               FOCFwConfig_reg_t const *pFOCConfig_reg = FOCConfig_reg[motorID];
1210:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pFOCConfig_reg, sizeof(FOCFwConfig_reg_t));
1211:Src/register_interface.c ****             }
1212:Src/register_interface.c **** 
1213:Src/register_interface.c ****             break;
 4618              		.loc 6 1213 13
 4619 0a12 64E0     		b	.L277
 4620              	.L278:
 4621              	.LBB40:
1209:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pFOCConfig_reg, sizeof(FOCFwConfig_reg_t));
 4622              		.loc 6 1209 70
 4623 0a14 97F89E30 		ldrb	r3, [r7, #158]	@ zero_extendqisi2
1209:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pFOCConfig_reg, sizeof(FOCFwConfig_reg_t));
 4624              		.loc 6 1209 40
 4625 0a18 1A4A     		ldr	r2, .L288+24
 4626 0a1a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4627 0a1e C7F88030 		str	r3, [r7, #128]
1210:Src/register_interface.c ****             }
 4628              		.loc 6 1210 21
 4629 0a22 0E22     		movs	r2, #14
 4630 0a24 D7F88010 		ldr	r1, [r7, #128]
 4631 0a28 D7F88C00 		ldr	r0, [r7, #140]
 4632 0a2c FFF7FEFF 		bl	memcpy
 4633              	.LBE40:
 4634              		.loc 6 1213 13
 4635 0a30 55E0     		b	.L277
 4636              	.L272:
1214:Src/register_interface.c ****           }
ARM GAS  /tmp/cctuZX3B.s 			page 132


1215:Src/register_interface.c ****           case MC_REG_SCALE_CONFIG:
1216:Src/register_interface.c ****           {
1217:Src/register_interface.c ****             *rawSize = 12;
 4637              		.loc 6 1217 22
 4638 0a32 D7F89030 		ldr	r3, [r7, #144]
 4639 0a36 0C22     		movs	r2, #12
 4640 0a38 1A80     		strh	r2, [r3]	@ movhi
1218:Src/register_interface.c ****             if ((*rawSize) +2U > (uint16_t)freeSpace)
 4641              		.loc 6 1218 18
 4642 0a3a D7F89030 		ldr	r3, [r7, #144]
 4643 0a3e 1B88     		ldrh	r3, [r3]
 4644              		.loc 6 1218 28
 4645 0a40 0233     		adds	r3, r3, #2
 4646              		.loc 6 1218 34
 4647 0a42 B7F8B020 		ldrh	r2, [r7, #176]
 4648              		.loc 6 1218 16
 4649 0a46 9342     		cmp	r3, r2
 4650 0a48 03D9     		bls	.L280
1219:Src/register_interface.c ****             {
1220:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 4651              		.loc 6 1220 22
 4652 0a4a 0823     		movs	r3, #8
 4653 0a4c 87F89F30 		strb	r3, [r7, #159]
1221:Src/register_interface.c ****             }
1222:Src/register_interface.c ****             else
1223:Src/register_interface.c ****             {
1224:Src/register_interface.c ****               memcpy(rawData, &scaleParams_M1, sizeof(ScaleParams_t) );
1225:Src/register_interface.c ****             }
1226:Src/register_interface.c ****             break;
 4654              		.loc 6 1226 13
 4655 0a50 45E0     		b	.L277
 4656              	.L280:
1224:Src/register_interface.c ****             }
 4657              		.loc 6 1224 15
 4658 0a52 D7F88C30 		ldr	r3, [r7, #140]
 4659 0a56 0C4A     		ldr	r2, .L288+28
 4660 0a58 1468     		ldr	r4, [r2]	@ unaligned
 4661 0a5a 5068     		ldr	r0, [r2, #4]	@ unaligned
 4662 0a5c 9168     		ldr	r1, [r2, #8]	@ unaligned
 4663 0a5e D268     		ldr	r2, [r2, #12]	@ unaligned
 4664 0a60 1C60     		str	r4, [r3]	@ unaligned
 4665 0a62 5860     		str	r0, [r3, #4]	@ unaligned
 4666 0a64 9960     		str	r1, [r3, #8]	@ unaligned
 4667 0a66 DA60     		str	r2, [r3, #12]	@ unaligned
 4668              		.loc 6 1226 13
 4669 0a68 39E0     		b	.L277
 4670              	.L289:
 4671 0a6a 00BF     		.align	2
 4672              	.L288:
 4673 0a6c 00000000 		.word	STO_PLL_M1
 4674 0a70 00000000 		.word	FF_M1
 4675 0a74 00000000 		.word	pMPM
 4676 0a78 00000000 		.word	SCC
 4677 0a7c 00000000 		.word	OTT
 4678 0a80 00000000 		.word	ApplicationConfig_reg
 4679 0a84 00000000 		.word	FOCConfig_reg
 4680 0a88 00000000 		.word	scaleParams_M1
ARM GAS  /tmp/cctuZX3B.s 			page 133


 4681              	.L270:
 4682              	.LBB41:
1227:Src/register_interface.c ****           }
1228:Src/register_interface.c ****           case MC_REG_SPEED_RAMP:
1229:Src/register_interface.c ****           {
1230:Src/register_interface.c ****             int32_t *rpm = (int32_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 4683              		.loc 6 1230 22
 4684 0a8c D7F88C30 		ldr	r3, [r7, #140]
 4685 0a90 C7F88830 		str	r3, [r7, #136]
1231:Src/register_interface.c ****             uint16_t *duration = (uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 4686              		.loc 6 1231 23
 4687 0a94 D7F88C30 		ldr	r3, [r7, #140]
 4688 0a98 0433     		adds	r3, r3, #4
 4689 0a9a C7F88430 		str	r3, [r7, #132]
1232:Src/register_interface.c ****             *rpm = (((int32_t)MCI_GetLastRampFinalSpeed(pMCIN) * U_RPM) / (int32_t)SPEED_UNIT);
 4690              		.loc 6 1232 31
 4691 0a9e D7F89800 		ldr	r0, [r7, #152]
 4692 0aa2 FFF7FEFF 		bl	MCI_GetLastRampFinalSpeed
 4693 0aa6 0346     		mov	r3, r0
 4694              		.loc 6 1232 22
 4695 0aa8 1A46     		mov	r2, r3
 4696              		.loc 6 1232 73
 4697 0aaa 1346     		mov	r3, r2
 4698 0aac 5B00     		lsls	r3, r3, #1
 4699 0aae 1344     		add	r3, r3, r2
 4700 0ab0 5B00     		lsls	r3, r3, #1
 4701 0ab2 1A46     		mov	r2, r3
 4702              		.loc 6 1232 18
 4703 0ab4 D7F88830 		ldr	r3, [r7, #136]
 4704 0ab8 1A60     		str	r2, [r3]
1233:Src/register_interface.c ****             *duration = MCI_GetLastRampFinalDuration(pMCIN);
 4705              		.loc 6 1233 25
 4706 0aba D7F89800 		ldr	r0, [r7, #152]
 4707 0abe FFF7FEFF 		bl	MCI_GetLastRampFinalDuration
 4708 0ac2 0346     		mov	r3, r0
 4709 0ac4 1A46     		mov	r2, r3
 4710              		.loc 6 1233 23
 4711 0ac6 D7F88430 		ldr	r3, [r7, #132]
 4712 0aca 1A80     		strh	r2, [r3]	@ movhi
1234:Src/register_interface.c ****             *rawSize = 6;
 4713              		.loc 6 1234 22
 4714 0acc D7F89030 		ldr	r3, [r7, #144]
 4715 0ad0 0622     		movs	r2, #6
 4716 0ad2 1A80     		strh	r2, [r3]	@ movhi
1235:Src/register_interface.c ****             break;
 4717              		.loc 6 1235 13
 4718 0ad4 03E0     		b	.L277
 4719              	.L271:
 4720              	.LBE41:
1236:Src/register_interface.c ****           }
1237:Src/register_interface.c **** 
1238:Src/register_interface.c ****           case MC_REG_ASYNC_UARTA:
1239:Src/register_interface.c ****           case MC_REG_ASYNC_UARTB:
1240:Src/register_interface.c ****           case MC_REG_ASYNC_STLNK:
1241:Src/register_interface.c ****           default:
1242:Src/register_interface.c ****           {
1243:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
ARM GAS  /tmp/cctuZX3B.s 			page 134


 4721              		.loc 6 1243 20
 4722 0ad6 0523     		movs	r3, #5
 4723 0ad8 87F89F30 		strb	r3, [r7, #159]
1244:Src/register_interface.c ****             break;
 4724              		.loc 6 1244 13
 4725 0adc 00BF     		nop
 4726              	.L277:
1245:Src/register_interface.c ****           }
1246:Src/register_interface.c ****         }
1247:Src/register_interface.c **** 
1248:Src/register_interface.c ****         /* Size of the answer is size of the data + 2 bytes containing data size */
1249:Src/register_interface.c ****         *size = (*rawSize) + 2U;
 4727              		.loc 6 1249 18
 4728 0ade D7F89030 		ldr	r3, [r7, #144]
 4729 0ae2 1B88     		ldrh	r3, [r3]
 4730              		.loc 6 1249 28
 4731 0ae4 0233     		adds	r3, r3, #2
 4732 0ae6 9AB2     		uxth	r2, r3
 4733              		.loc 6 1249 15
 4734 0ae8 7B68     		ldr	r3, [r7, #4]
 4735 0aea 1A80     		strh	r2, [r3]	@ movhi
1250:Src/register_interface.c ****         break;
 4736              		.loc 6 1250 9
 4737 0aec 03E0     		b	.L211
 4738              	.L191:
 4739              	.LBE38:
1251:Src/register_interface.c ****       }
1252:Src/register_interface.c **** 
1253:Src/register_interface.c ****       default:
1254:Src/register_interface.c ****       {
1255:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_DATA_TYPE;
 4740              		.loc 6 1255 16
 4741 0aee 0723     		movs	r3, #7
 4742 0af0 87F89F30 		strb	r3, [r7, #159]
1256:Src/register_interface.c ****         break;
 4743              		.loc 6 1256 9
 4744 0af4 00BF     		nop
 4745              	.L211:
1257:Src/register_interface.c ****       }
1258:Src/register_interface.c ****     }
1259:Src/register_interface.c ****     return (retVal);
 4746              		.loc 6 1259 12
 4747 0af6 97F89F30 		ldrb	r3, [r7, #159]	@ zero_extendqisi2
1260:Src/register_interface.c ****   }
 4748              		.loc 6 1260 3
 4749 0afa 1846     		mov	r0, r3
 4750 0afc A437     		adds	r7, r7, #164
 4751              	.LCFI216:
 4752              		.cfi_def_cfa_offset 12
 4753 0afe BD46     		mov	sp, r7
 4754              	.LCFI217:
 4755              		.cfi_def_cfa_register 13
 4756              		@ sp needed
 4757 0b00 90BD     		pop	{r4, r7, pc}
 4758              		.cfi_endproc
 4759              	.LFE1716:
 4761 0b02 00BF     		.section	.text.RI_GetIDSize,"ax",%progbits
ARM GAS  /tmp/cctuZX3B.s 			page 135


 4762              		.align	1
 4763              		.global	RI_GetIDSize
 4764              		.syntax unified
 4765              		.thumb
 4766              		.thumb_func
 4767              		.fpu fpv4-sp-d16
 4769              	RI_GetIDSize:
 4770              	.LFB1717:
1261:Src/register_interface.c **** 
1262:Src/register_interface.c **** uint8_t RI_GetIDSize(uint16_t dataID)
1263:Src/register_interface.c **** {
 4771              		.loc 6 1263 1
 4772              		.cfi_startproc
 4773              		@ args = 0, pretend = 0, frame = 16
 4774              		@ frame_needed = 1, uses_anonymous_args = 0
 4775              		@ link register save eliminated.
 4776 0000 80B4     		push	{r7}
 4777              	.LCFI218:
 4778              		.cfi_def_cfa_offset 4
 4779              		.cfi_offset 7, -4
 4780 0002 85B0     		sub	sp, sp, #20
 4781              	.LCFI219:
 4782              		.cfi_def_cfa_offset 24
 4783 0004 00AF     		add	r7, sp, #0
 4784              	.LCFI220:
 4785              		.cfi_def_cfa_register 7
 4786 0006 0346     		mov	r3, r0
 4787 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1264:Src/register_interface.c ****   uint8_t typeID = ((uint8_t)dataID) & TYPE_MASK;
 4788              		.loc 6 1264 21
 4789 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 4790 000c DBB2     		uxtb	r3, r3
 4791              		.loc 6 1264 11
 4792 000e 03F03803 		and	r3, r3, #56
 4793 0012 BB73     		strb	r3, [r7, #14]
1265:Src/register_interface.c ****   uint8_t result;
1266:Src/register_interface.c **** 
1267:Src/register_interface.c ****   switch (typeID)
 4794              		.loc 6 1267 3
 4795 0014 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4796 0016 182B     		cmp	r3, #24
 4797 0018 0CD0     		beq	.L291
 4798 001a 182B     		cmp	r3, #24
 4799 001c 0DDC     		bgt	.L292
 4800 001e 082B     		cmp	r3, #8
 4801 0020 02D0     		beq	.L293
 4802 0022 102B     		cmp	r3, #16
 4803 0024 03D0     		beq	.L294
 4804 0026 08E0     		b	.L292
 4805              	.L293:
1268:Src/register_interface.c ****   {
1269:Src/register_interface.c ****     case TYPE_DATA_8BIT:
1270:Src/register_interface.c ****     {
1271:Src/register_interface.c ****       result = 1;
 4806              		.loc 6 1271 14
 4807 0028 0123     		movs	r3, #1
 4808 002a FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/cctuZX3B.s 			page 136


1272:Src/register_interface.c ****       break;
 4809              		.loc 6 1272 7
 4810 002c 08E0     		b	.L295
 4811              	.L294:
1273:Src/register_interface.c ****     }
1274:Src/register_interface.c **** 
1275:Src/register_interface.c ****     case TYPE_DATA_16BIT:
1276:Src/register_interface.c ****     {
1277:Src/register_interface.c ****       result = 2;
 4812              		.loc 6 1277 14
 4813 002e 0223     		movs	r3, #2
 4814 0030 FB73     		strb	r3, [r7, #15]
1278:Src/register_interface.c ****       break;
 4815              		.loc 6 1278 7
 4816 0032 05E0     		b	.L295
 4817              	.L291:
1279:Src/register_interface.c ****     }
1280:Src/register_interface.c **** 
1281:Src/register_interface.c ****     case TYPE_DATA_32BIT:
1282:Src/register_interface.c ****     {
1283:Src/register_interface.c ****       result = 4;
 4818              		.loc 6 1283 14
 4819 0034 0423     		movs	r3, #4
 4820 0036 FB73     		strb	r3, [r7, #15]
1284:Src/register_interface.c ****       break;
 4821              		.loc 6 1284 7
 4822 0038 02E0     		b	.L295
 4823              	.L292:
1285:Src/register_interface.c ****     }
1286:Src/register_interface.c **** 
1287:Src/register_interface.c ****     default:
1288:Src/register_interface.c ****     {
1289:Src/register_interface.c ****       result=0;
 4824              		.loc 6 1289 13
 4825 003a 0023     		movs	r3, #0
 4826 003c FB73     		strb	r3, [r7, #15]
1290:Src/register_interface.c ****       break;
 4827              		.loc 6 1290 7
 4828 003e 00BF     		nop
 4829              	.L295:
1291:Src/register_interface.c ****     }
1292:Src/register_interface.c ****   }
1293:Src/register_interface.c **** 
1294:Src/register_interface.c ****   return (result);
 4830              		.loc 6 1294 10
 4831 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1295:Src/register_interface.c **** }
 4832              		.loc 6 1295 1
 4833 0042 1846     		mov	r0, r3
 4834 0044 1437     		adds	r7, r7, #20
 4835              	.LCFI221:
 4836              		.cfi_def_cfa_offset 4
 4837 0046 BD46     		mov	sp, r7
 4838              	.LCFI222:
 4839              		.cfi_def_cfa_register 13
 4840              		@ sp needed
 4841 0048 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cctuZX3B.s 			page 137


 4842              	.LCFI223:
 4843              		.cfi_restore 7
 4844              		.cfi_def_cfa_offset 0
 4845 004c 7047     		bx	lr
 4846              		.cfi_endproc
 4847              	.LFE1717:
 4849              		.section	.text.RI_GetPtrReg,"ax",%progbits
 4850              		.align	1
 4851              		.weak	RI_GetPtrReg
 4852              		.syntax unified
 4853              		.thumb
 4854              		.thumb_func
 4855              		.fpu fpv4-sp-d16
 4857              	RI_GetPtrReg:
 4858              	.LFB1718:
1296:Src/register_interface.c **** 
1297:Src/register_interface.c **** __weak uint8_t RI_GetPtrReg(uint16_t dataID, void **dataPtr)
1298:Src/register_interface.c **** {
 4859              		.loc 6 1298 1
 4860              		.cfi_startproc
 4861              		@ args = 0, pretend = 0, frame = 24
 4862              		@ frame_needed = 1, uses_anonymous_args = 0
 4863              		@ link register save eliminated.
 4864 0000 80B4     		push	{r7}
 4865              	.LCFI224:
 4866              		.cfi_def_cfa_offset 4
 4867              		.cfi_offset 7, -4
 4868 0002 87B0     		sub	sp, sp, #28
 4869              	.LCFI225:
 4870              		.cfi_def_cfa_offset 32
 4871 0004 00AF     		add	r7, sp, #0
 4872              	.LCFI226:
 4873              		.cfi_def_cfa_register 7
 4874 0006 0346     		mov	r3, r0
 4875 0008 3960     		str	r1, [r7]
 4876 000a FB80     		strh	r3, [r7, #6]	@ movhi
1299:Src/register_interface.c **** 
1300:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
 4877              		.loc 6 1300 11
 4878 000c 0023     		movs	r3, #0
 4879 000e FB75     		strb	r3, [r7, #23]
1301:Src/register_interface.c ****   static uint16_t nullData16=0;
1302:Src/register_interface.c **** 
1303:Src/register_interface.c **** #ifdef NULL_PTR_CHECK_REG_INT
1304:Src/register_interface.c ****   if (MC_NULL == dataPtr)
1305:Src/register_interface.c ****   {
1306:Src/register_interface.c ****     retVal = MCP_CMD_NOK;
1307:Src/register_interface.c ****   }
1308:Src/register_interface.c ****   else
1309:Src/register_interface.c ****   {
1310:Src/register_interface.c **** #endif
1311:Src/register_interface.c **** 
1312:Src/register_interface.c ****     MCI_Handle_t *pMCIN = &Mci[0];
 4880              		.loc 6 1312 19
 4881 0010 3C4B     		ldr	r3, .L311
 4882 0012 3B61     		str	r3, [r7, #16]
1313:Src/register_interface.c ****     uint16_t regID = dataID & REG_MASK;
ARM GAS  /tmp/cctuZX3B.s 			page 138


 4883              		.loc 6 1313 14
 4884 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 4885 0016 23F00703 		bic	r3, r3, #7
 4886 001a FB81     		strh	r3, [r7, #14]	@ movhi
1314:Src/register_interface.c ****     uint8_t typeID = ((uint8_t)dataID) & TYPE_MASK;
 4887              		.loc 6 1314 23
 4888 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 4889 001e DBB2     		uxtb	r3, r3
 4890              		.loc 6 1314 13
 4891 0020 03F03803 		and	r3, r3, #56
 4892 0024 7B73     		strb	r3, [r7, #13]
1315:Src/register_interface.c **** 
1316:Src/register_interface.c ****     switch (typeID)
 4893              		.loc 6 1316 5
 4894 0026 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4895 0028 102B     		cmp	r3, #16
 4896 002a 5ED1     		bne	.L298
1317:Src/register_interface.c ****     {
1318:Src/register_interface.c ****       case TYPE_DATA_16BIT:
1319:Src/register_interface.c ****       {
1320:Src/register_interface.c ****         switch (regID)
 4897              		.loc 6 1320 9
 4898 002c FB89     		ldrh	r3, [r7, #14]
 4899 002e B3F5496F 		cmp	r3, #3216
 4900 0032 4FD0     		beq	.L299
 4901 0034 B3F5496F 		cmp	r3, #3216
 4902 0038 50DC     		bgt	.L300
 4903 003a B3F5456F 		cmp	r3, #3152
 4904 003e 45D0     		beq	.L301
 4905 0040 B3F5456F 		cmp	r3, #3152
 4906 0044 4ADC     		bgt	.L300
 4907 0046 B3F5396F 		cmp	r3, #2960
 4908 004a 37D0     		beq	.L302
 4909 004c B3F5396F 		cmp	r3, #2960
 4910 0050 44DC     		bgt	.L300
 4911 0052 B3F5356F 		cmp	r3, #2896
 4912 0056 35D0     		beq	.L303
 4913 0058 B3F5356F 		cmp	r3, #2896
 4914 005c 3EDC     		bgt	.L300
 4915 005e B3F5296F 		cmp	r3, #2704
 4916 0062 24D0     		beq	.L304
 4917 0064 B3F5296F 		cmp	r3, #2704
 4918 0068 38DC     		bgt	.L300
 4919 006a B3F5256F 		cmp	r3, #2640
 4920 006e 17D0     		beq	.L305
 4921 0070 B3F5256F 		cmp	r3, #2640
 4922 0074 32DC     		bgt	.L300
 4923 0076 B3F51D6F 		cmp	r3, #2512
 4924 007a 03D0     		beq	.L306
 4925 007c B3F5216F 		cmp	r3, #2576
 4926 0080 07D0     		beq	.L307
 4927 0082 2BE0     		b	.L300
 4928              	.L306:
1321:Src/register_interface.c ****         {
1322:Src/register_interface.c **** 
1323:Src/register_interface.c ****           case MC_REG_V_Q:
1324:Src/register_interface.c ****           {
ARM GAS  /tmp/cctuZX3B.s 			page 139


1325:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Vqd.q);
 4929              		.loc 6 1325 31
 4930 0084 3B69     		ldr	r3, [r7, #16]
 4931 0086 5B68     		ldr	r3, [r3, #4]
 4932              		.loc 6 1325 24
 4933 0088 03F11602 		add	r2, r3, #22
 4934              		.loc 6 1325 22
 4935 008c 3B68     		ldr	r3, [r7]
 4936 008e 1A60     		str	r2, [r3]
1326:Src/register_interface.c ****             break;
 4937              		.loc 6 1326 13
 4938 0090 2AE0     		b	.L308
 4939              	.L307:
1327:Src/register_interface.c ****           }
1328:Src/register_interface.c **** 
1329:Src/register_interface.c ****           case MC_REG_V_D:
1330:Src/register_interface.c ****           {
1331:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Vqd.d);
 4940              		.loc 6 1331 31
 4941 0092 3B69     		ldr	r3, [r7, #16]
 4942 0094 5B68     		ldr	r3, [r3, #4]
 4943              		.loc 6 1331 24
 4944 0096 03F11802 		add	r2, r3, #24
 4945              		.loc 6 1331 22
 4946 009a 3B68     		ldr	r3, [r7]
 4947 009c 1A60     		str	r2, [r3]
1332:Src/register_interface.c ****             break;
 4948              		.loc 6 1332 13
 4949 009e 23E0     		b	.L308
 4950              	.L305:
1333:Src/register_interface.c ****           }
1334:Src/register_interface.c **** 
1335:Src/register_interface.c ****           case MC_REG_V_ALPHA:
1336:Src/register_interface.c ****           {
1337:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Valphabeta.alpha);
 4951              		.loc 6 1337 31
 4952 00a0 3B69     		ldr	r3, [r7, #16]
 4953 00a2 5B68     		ldr	r3, [r3, #4]
 4954              		.loc 6 1337 24
 4955 00a4 03F11A02 		add	r2, r3, #26
 4956              		.loc 6 1337 22
 4957 00a8 3B68     		ldr	r3, [r7]
 4958 00aa 1A60     		str	r2, [r3]
1338:Src/register_interface.c ****             break;
 4959              		.loc 6 1338 13
 4960 00ac 1CE0     		b	.L308
 4961              	.L304:
1339:Src/register_interface.c ****           }
1340:Src/register_interface.c **** 
1341:Src/register_interface.c ****           case MC_REG_V_BETA:
1342:Src/register_interface.c ****           {
1343:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Valphabeta.beta);
 4962              		.loc 6 1343 31
 4963 00ae 3B69     		ldr	r3, [r7, #16]
 4964 00b0 5B68     		ldr	r3, [r3, #4]
 4965              		.loc 6 1343 24
 4966 00b2 03F11C02 		add	r2, r3, #28
ARM GAS  /tmp/cctuZX3B.s 			page 140


 4967              		.loc 6 1343 22
 4968 00b6 3B68     		ldr	r3, [r7]
 4969 00b8 1A60     		str	r2, [r3]
1344:Src/register_interface.c ****             break;
 4970              		.loc 6 1344 13
 4971 00ba 15E0     		b	.L308
 4972              	.L302:
1345:Src/register_interface.c ****           }
1346:Src/register_interface.c **** 
1347:Src/register_interface.c ****           case MC_REG_STOPLL_ROT_SPEED:
1348:Src/register_interface.c ****           {
1349:Src/register_interface.c ****             *dataPtr = &((&STO_PLL_M1)->_Super.hAvrMecSpeedUnit);
 4973              		.loc 6 1349 22
 4974 00bc 3B68     		ldr	r3, [r7]
 4975 00be 124A     		ldr	r2, .L311+4
 4976 00c0 1A60     		str	r2, [r3]
1350:Src/register_interface.c ****             break;
 4977              		.loc 6 1350 13
 4978 00c2 11E0     		b	.L308
 4979              	.L303:
1351:Src/register_interface.c ****           }
1352:Src/register_interface.c **** 
1353:Src/register_interface.c ****           case MC_REG_STOPLL_EL_ANGLE:
1354:Src/register_interface.c ****           {
1355:Src/register_interface.c ****             *dataPtr = &((&STO_PLL_M1)->_Super.hElAngle);
 4980              		.loc 6 1355 22
 4981 00c4 3B68     		ldr	r3, [r7]
 4982 00c6 114A     		ldr	r2, .L311+8
 4983 00c8 1A60     		str	r2, [r3]
1356:Src/register_interface.c ****             break;
 4984              		.loc 6 1356 13
 4985 00ca 0DE0     		b	.L308
 4986              	.L301:
1357:Src/register_interface.c ****           }
1358:Src/register_interface.c **** 
1359:Src/register_interface.c **** #ifdef NOT_IMPLEMENTED /* Not yet implemented */
1360:Src/register_interface.c ****           case MC_REG_STOPLL_I_ALPHA:
1361:Src/register_interface.c ****           case MC_REG_STOPLL_I_BETA:
1362:Src/register_interface.c ****             break;
1363:Src/register_interface.c **** #endif
1364:Src/register_interface.c **** 
1365:Src/register_interface.c ****           case MC_REG_STOPLL_BEMF_ALPHA:
1366:Src/register_interface.c ****           {
1367:Src/register_interface.c ****             *dataPtr = &((&STO_PLL_M1)->hBemf_alfa_est);
 4987              		.loc 6 1367 22
 4988 00cc 3B68     		ldr	r3, [r7]
 4989 00ce 104A     		ldr	r2, .L311+12
 4990 00d0 1A60     		str	r2, [r3]
1368:Src/register_interface.c ****             break;
 4991              		.loc 6 1368 13
 4992 00d2 09E0     		b	.L308
 4993              	.L299:
1369:Src/register_interface.c ****           }
1370:Src/register_interface.c **** 
1371:Src/register_interface.c ****           case MC_REG_STOPLL_BEMF_BETA:
1372:Src/register_interface.c ****           {
1373:Src/register_interface.c ****             *dataPtr = &((&STO_PLL_M1)->hBemf_beta_est);
ARM GAS  /tmp/cctuZX3B.s 			page 141


 4994              		.loc 6 1373 22
 4995 00d4 3B68     		ldr	r3, [r7]
 4996 00d6 0F4A     		ldr	r2, .L311+16
 4997 00d8 1A60     		str	r2, [r3]
1374:Src/register_interface.c ****             break;
 4998              		.loc 6 1374 13
 4999 00da 05E0     		b	.L308
 5000              	.L300:
1375:Src/register_interface.c ****           }
1376:Src/register_interface.c **** 
1377:Src/register_interface.c ****           default:
1378:Src/register_interface.c ****           {
1379:Src/register_interface.c ****             *dataPtr = &nullData16;
 5001              		.loc 6 1379 22
 5002 00dc 3B68     		ldr	r3, [r7]
 5003 00de 0E4A     		ldr	r2, .L311+20
 5004 00e0 1A60     		str	r2, [r3]
1380:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 5005              		.loc 6 1380 20
 5006 00e2 0523     		movs	r3, #5
 5007 00e4 FB75     		strb	r3, [r7, #23]
1381:Src/register_interface.c ****             break;
 5008              		.loc 6 1381 13
 5009 00e6 00BF     		nop
 5010              	.L308:
1382:Src/register_interface.c ****           }
1383:Src/register_interface.c ****         }
1384:Src/register_interface.c ****         break;
 5011              		.loc 6 1384 9
 5012 00e8 05E0     		b	.L309
 5013              	.L298:
1385:Src/register_interface.c ****       }
1386:Src/register_interface.c **** 
1387:Src/register_interface.c ****       default:
1388:Src/register_interface.c ****       {
1389:Src/register_interface.c ****         *dataPtr = &nullData16;
 5014              		.loc 6 1389 18
 5015 00ea 3B68     		ldr	r3, [r7]
 5016 00ec 0A4A     		ldr	r2, .L311+20
 5017 00ee 1A60     		str	r2, [r3]
1390:Src/register_interface.c ****         retVal = MCP_ERROR_UNKNOWN_REG;
 5018              		.loc 6 1390 16
 5019 00f0 0523     		movs	r3, #5
 5020 00f2 FB75     		strb	r3, [r7, #23]
1391:Src/register_interface.c ****         break;
 5021              		.loc 6 1391 9
 5022 00f4 00BF     		nop
 5023              	.L309:
1392:Src/register_interface.c ****       }
1393:Src/register_interface.c ****     }
1394:Src/register_interface.c **** #ifdef NULL_PTR_CHECK_REG_INT
1395:Src/register_interface.c ****   }
1396:Src/register_interface.c **** #endif
1397:Src/register_interface.c ****   return (retVal);
 5024              		.loc 6 1397 10
 5025 00f6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1398:Src/register_interface.c **** }
ARM GAS  /tmp/cctuZX3B.s 			page 142


 5026              		.loc 6 1398 1
 5027 00f8 1846     		mov	r0, r3
 5028 00fa 1C37     		adds	r7, r7, #28
 5029              	.LCFI227:
 5030              		.cfi_def_cfa_offset 4
 5031 00fc BD46     		mov	sp, r7
 5032              	.LCFI228:
 5033              		.cfi_def_cfa_register 13
 5034              		@ sp needed
 5035 00fe 5DF8047B 		ldr	r7, [sp], #4
 5036              	.LCFI229:
 5037              		.cfi_restore 7
 5038              		.cfi_def_cfa_offset 0
 5039 0102 7047     		bx	lr
 5040              	.L312:
 5041              		.align	2
 5042              	.L311:
 5043 0104 00000000 		.word	Mci
 5044 0108 0C000000 		.word	STO_PLL_M1+12
 5045 010c 04000000 		.word	STO_PLL_M1+4
 5046 0110 70000000 		.word	STO_PLL_M1+112
 5047 0114 72000000 		.word	STO_PLL_M1+114
 5048 0118 00000000 		.word	nullData16.0
 5049              		.cfi_endproc
 5050              	.LFE1718:
 5052              		.section	.bss.nullData16.0,"aw",%nobits
 5053              		.align	1
 5056              	nullData16.0:
 5057 0000 0000     		.space	2
 5058              		.text
 5059              	.Letext0:
 5060              		.file 7 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 5061              		.file 8 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 5062              		.file 9 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 5063              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 5064              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 5065              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 5066              		.file 13 "Inc/mc_type.h"
 5067              		.file 14 "Inc/pwm_curr_fdbk.h"
 5068              		.file 15 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 5069              		.file 16 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 5070              		.file 17 "Inc/mc_perf.h"
 5071              		.file 18 "Inc/mc_interface.h"
 5072              		.file 19 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 5073              		.file 20 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 5074              		.file 21 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 5075              		.file 22 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 5076              		.file 23 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 5077              		.file 24 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 5078              		.file 25 "Inc/hall_speed_pos_fdbk.h"
 5079              		.file 26 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_hall_tuning.h"
 5080              		.file 27 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 5081              		.file 28 "Inc/mc_configuration_registers.h"
 5082              		.file 29 "Inc/mc_parameters.h"
 5083              		.file 30 "Inc/mc_config_common.h"
 5084              		.file 31 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/feed_forward_ctrl.h"
 5085              		.file 32 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/pqd_motor_power_measurement.h"
ARM GAS  /tmp/cctuZX3B.s 			page 143


 5086              		.file 33 "Inc/mc_config.h"
ARM GAS  /tmp/cctuZX3B.s 			page 144


DEFINED SYMBOLS
                            *ABS*:0000000000000000 register_interface.c
     /tmp/cctuZX3B.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cctuZX3B.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/cctuZX3B.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cctuZX3B.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/cctuZX3B.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cctuZX3B.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/cctuZX3B.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cctuZX3B.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/cctuZX3B.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/cctuZX3B.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/cctuZX3B.s:48     .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/cctuZX3B.s:51     .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB
     /tmp/cctuZX3B.s:65     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cctuZX3B.s:68     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/cctuZX3B.s:71     .text.SPD_GetElAngle:0000000000000000 $t
     /tmp/cctuZX3B.s:78     .text.SPD_GetElAngle:0000000000000000 SPD_GetElAngle
     /tmp/cctuZX3B.s:118    .text.RUC_GetNumberOfPhases:0000000000000000 $t
     /tmp/cctuZX3B.s:124    .text.RUC_GetNumberOfPhases:0000000000000000 RUC_GetNumberOfPhases
     /tmp/cctuZX3B.s:164    .text.STO_PLL_GetEstimatedBemfLevel:0000000000000000 $t
     /tmp/cctuZX3B.s:170    .text.STO_PLL_GetEstimatedBemfLevel:0000000000000000 STO_PLL_GetEstimatedBemfLevel
     /tmp/cctuZX3B.s:210    .text.STO_PLL_GetObservedBemfLevel:0000000000000000 $t
     /tmp/cctuZX3B.s:216    .text.STO_PLL_GetObservedBemfLevel:0000000000000000 STO_PLL_GetObservedBemfLevel
     /tmp/cctuZX3B.s:255    .text.OTT_GetNominalSpeed:0000000000000000 $t
     /tmp/cctuZX3B.s:261    .text.OTT_GetNominalSpeed:0000000000000000 OTT_GetNominalSpeed
     /tmp/cctuZX3B.s:300    .text.OTT_GetSteps:0000000000000000 $t
     /tmp/cctuZX3B.s:306    .text.OTT_GetSteps:0000000000000000 OTT_GetSteps
     /tmp/cctuZX3B.s:344    .text.OTT_GetState:0000000000000000 $t
     /tmp/cctuZX3B.s:350    .text.OTT_GetState:0000000000000000 OTT_GetState
     /tmp/cctuZX3B.s:392    .text.OTT_SetPolesPairs:0000000000000000 $t
     /tmp/cctuZX3B.s:398    .text.OTT_SetPolesPairs:0000000000000000 OTT_SetPolesPairs
     /tmp/cctuZX3B.s:440    .text.OTT_SetSpeedRegulatorBandwidth:0000000000000000 $t
     /tmp/cctuZX3B.s:446    .text.OTT_SetSpeedRegulatorBandwidth:0000000000000000 OTT_SetSpeedRegulatorBandwidth
     /tmp/cctuZX3B.s:487    .text.OTT_GetSpeedRegulatorBandwidth:0000000000000000 $t
     /tmp/cctuZX3B.s:493    .text.OTT_GetSpeedRegulatorBandwidth:0000000000000000 OTT_GetSpeedRegulatorBandwidth
     /tmp/cctuZX3B.s:533    .text.OTT_GetJ:0000000000000000 $t
     /tmp/cctuZX3B.s:539    .text.OTT_GetJ:0000000000000000 OTT_GetJ
     /tmp/cctuZX3B.s:603    .text.OTT_GetJ:0000000000000054 $d
     /tmp/cctuZX3B.s:608    .text.OTT_GetF:0000000000000000 $t
     /tmp/cctuZX3B.s:614    .text.OTT_GetF:0000000000000000 OTT_GetF
     /tmp/cctuZX3B.s:678    .text.OTT_GetF:0000000000000054 $d
     /tmp/cctuZX3B.s:683    .text.OTT_IsMotorAlreadyProfiled:0000000000000000 $t
     /tmp/cctuZX3B.s:689    .text.OTT_IsMotorAlreadyProfiled:0000000000000000 OTT_IsMotorAlreadyProfiled
     /tmp/cctuZX3B.s:728    .text.SCC_GetSteps:0000000000000000 $t
     /tmp/cctuZX3B.s:734    .text.SCC_GetSteps:0000000000000000 SCC_GetSteps
     /tmp/cctuZX3B.s:773    .text.SCC_GetRs:0000000000000000 $t
     /tmp/cctuZX3B.s:779    .text.SCC_GetRs:0000000000000000 SCC_GetRs
     /tmp/cctuZX3B.s:817    .text.SCC_GetLs:0000000000000000 $t
     /tmp/cctuZX3B.s:823    .text.SCC_GetLs:0000000000000000 SCC_GetLs
     /tmp/cctuZX3B.s:861    .text.SCC_GetKe:0000000000000000 $t
     /tmp/cctuZX3B.s:867    .text.SCC_GetKe:0000000000000000 SCC_GetKe
     /tmp/cctuZX3B.s:905    .text.SCC_GetVbus:0000000000000000 $t
     /tmp/cctuZX3B.s:911    .text.SCC_GetVbus:0000000000000000 SCC_GetVbus
     /tmp/cctuZX3B.s:949    .text.SCC_SetPolesPairs:0000000000000000 $t
     /tmp/cctuZX3B.s:955    .text.SCC_SetPolesPairs:0000000000000000 SCC_SetPolesPairs
     /tmp/cctuZX3B.s:1000   .text.SCC_GetNominalCurrent:0000000000000000 $t
ARM GAS  /tmp/cctuZX3B.s 			page 145


     /tmp/cctuZX3B.s:1006   .text.SCC_GetNominalCurrent:0000000000000000 SCC_GetNominalCurrent
     /tmp/cctuZX3B.s:1046   .text.SCC_SetLdLqRatio:0000000000000000 $t
     /tmp/cctuZX3B.s:1052   .text.SCC_SetLdLqRatio:0000000000000000 SCC_SetLdLqRatio
     /tmp/cctuZX3B.s:1093   .text.SCC_GetLdLqRatio:0000000000000000 $t
     /tmp/cctuZX3B.s:1099   .text.SCC_GetLdLqRatio:0000000000000000 SCC_GetLdLqRatio
     /tmp/cctuZX3B.s:1139   .text.SCC_GetNominalSpeed:0000000000000000 $t
     /tmp/cctuZX3B.s:1145   .text.SCC_GetNominalSpeed:0000000000000000 SCC_GetNominalSpeed
     /tmp/cctuZX3B.s:1184   .text.SCC_GetEstMaxOLSpeed:0000000000000000 $t
     /tmp/cctuZX3B.s:1190   .text.SCC_GetEstMaxOLSpeed:0000000000000000 SCC_GetEstMaxOLSpeed
     /tmp/cctuZX3B.s:1229   .text.SCC_GetEstMaxAcceleration:0000000000000000 $t
     /tmp/cctuZX3B.s:1235   .text.SCC_GetEstMaxAcceleration:0000000000000000 SCC_GetEstMaxAcceleration
     /tmp/cctuZX3B.s:1274   .text.SCC_GetStartupCurrentAmp:0000000000000000 $t
     /tmp/cctuZX3B.s:1280   .text.SCC_GetStartupCurrentAmp:0000000000000000 SCC_GetStartupCurrentAmp
     /tmp/cctuZX3B.s:1320   .text.SCC_SetCurrentBandwidth:0000000000000000 $t
     /tmp/cctuZX3B.s:1326   .text.SCC_SetCurrentBandwidth:0000000000000000 SCC_SetCurrentBandwidth
     /tmp/cctuZX3B.s:1367   .text.SCC_GetCurrentBandwidth:0000000000000000 $t
     /tmp/cctuZX3B.s:1373   .text.SCC_GetCurrentBandwidth:0000000000000000 SCC_GetCurrentBandwidth
     /tmp/cctuZX3B.s:1413   .text.SCC_GetPWMFrequencyHz:0000000000000000 $t
     /tmp/cctuZX3B.s:1419   .text.SCC_GetPWMFrequencyHz:0000000000000000 SCC_GetPWMFrequencyHz
     /tmp/cctuZX3B.s:1460   .text.SCC_GetFOCRepRate:0000000000000000 $t
     /tmp/cctuZX3B.s:1466   .text.SCC_GetFOCRepRate:0000000000000000 SCC_GetFOCRepRate
     /tmp/cctuZX3B.s:1509   .text.SCC_GetOverVoltageThreshold:0000000000000000 $t
     /tmp/cctuZX3B.s:1515   .text.SCC_GetOverVoltageThreshold:0000000000000000 SCC_GetOverVoltageThreshold
     /tmp/cctuZX3B.s:1577   .text.SCC_GetOverVoltageThreshold:0000000000000048 $d
     /tmp/cctuZX3B.s:1582   .text.SCC_GetUnderVoltageThreshold:0000000000000000 $t
     /tmp/cctuZX3B.s:1588   .text.SCC_GetUnderVoltageThreshold:0000000000000000 SCC_GetUnderVoltageThreshold
     /tmp/cctuZX3B.s:1650   .text.SCC_GetUnderVoltageThreshold:0000000000000048 $d
     /tmp/cctuZX3B.s:1655   .text.SCC_SetOverVoltageThreshold:0000000000000000 $t
     /tmp/cctuZX3B.s:1661   .text.SCC_SetOverVoltageThreshold:0000000000000000 SCC_SetOverVoltageThreshold
     /tmp/cctuZX3B.s:1718   .text.SCC_SetUnderVoltageThreshold:0000000000000000 $t
     /tmp/cctuZX3B.s:1724   .text.SCC_SetUnderVoltageThreshold:0000000000000000 SCC_SetUnderVoltageThreshold
     /tmp/cctuZX3B.s:1781   .text.RI_SetRegisterGlobal:0000000000000000 $t
     /tmp/cctuZX3B.s:1788   .text.RI_SetRegisterGlobal:0000000000000000 RI_SetRegisterGlobal
     /tmp/cctuZX3B.s:2018   .text.RI_SetRegisterMotor1:0000000000000000 $t
     /tmp/cctuZX3B.s:2025   .text.RI_SetRegisterMotor1:0000000000000000 RI_SetRegisterMotor1
     /tmp/cctuZX3B.s:2233   .text.RI_SetRegisterMotor1:0000000000000160 $d
     /tmp/cctuZX3B.s:2241   .text.RI_SetRegisterMotor1:0000000000000174 $t
     /tmp/cctuZX3B.s:2737   .text.RI_SetRegisterMotor1:000000000000060c $d
     /tmp/cctuZX3B.s:2746   .text.RI_SetRegisterMotor1:0000000000000624 $t
     /tmp/cctuZX3B.s:2946   .text.RI_SetRegisterMotor1:0000000000000740 $d
     /tmp/cctuZX3B.s:2953   .text.RI_GetRegisterGlobal:0000000000000000 $t
     /tmp/cctuZX3B.s:2960   .text.RI_GetRegisterGlobal:0000000000000000 RI_GetRegisterGlobal
     /tmp/cctuZX3B.s:3006   .text.RI_GetRegisterGlobal:0000000000000040 $d
     /tmp/cctuZX3B.s:3039   .text.RI_GetRegisterGlobal:00000000000000c4 $t
     /tmp/cctuZX3B.s:3299   .text.RI_GetRegisterGlobal:000000000000022c $d
     /tmp/cctuZX3B.s:3305   .text.RI_GetRegisterMotor1:0000000000000000 $t
     /tmp/cctuZX3B.s:3312   .text.RI_GetRegisterMotor1:0000000000000000 RI_GetRegisterMotor1
     /tmp/cctuZX3B.s:3362   .text.RI_GetRegisterMotor1:0000000000000048 $d
     /tmp/cctuZX3B.s:3395   .text.RI_GetRegisterMotor1:00000000000000cc $t
     /tmp/cctuZX3B.s:3580   .text.RI_GetRegisterMotor1:0000000000000218 $d
     /tmp/cctuZX3B.s:3589   .text.RI_GetRegisterMotor1:0000000000000230 $t
     /tmp/cctuZX3B.s:4028   .text.RI_GetRegisterMotor1:00000000000005b8 $d
     /tmp/cctuZX3B.s:4038   .text.RI_GetRegisterMotor1:00000000000005d0 $t
     /tmp/cctuZX3B.s:4673   .text.RI_GetRegisterMotor1:0000000000000a6c $d
     /tmp/cctuZX3B.s:4684   .text.RI_GetRegisterMotor1:0000000000000a8c $t
     /tmp/cctuZX3B.s:4762   .text.RI_GetIDSize:0000000000000000 $t
     /tmp/cctuZX3B.s:4769   .text.RI_GetIDSize:0000000000000000 RI_GetIDSize
ARM GAS  /tmp/cctuZX3B.s 			page 146


     /tmp/cctuZX3B.s:4850   .text.RI_GetPtrReg:0000000000000000 $t
     /tmp/cctuZX3B.s:4857   .text.RI_GetPtrReg:0000000000000000 RI_GetPtrReg
     /tmp/cctuZX3B.s:5043   .text.RI_GetPtrReg:0000000000000104 $d
     /tmp/cctuZX3B.s:5056   .bss.nullData16.0:0000000000000000 nullData16.0
     /tmp/cctuZX3B.s:5053   .bss.nullData16.0:0000000000000000 $d

UNDEFINED SYMBOLS
MCM_floatToIntBit
__aeabi_i2d
__aeabi_d2uiz
MCI_GetTeref
MCI_ExecTorqueRamp
MCI_GetMecSpeedRefUnit
MCI_ExecSpeedRamp
SPD_SetElToMecRatio
SCC_SetPBCharacterization
Mci
STO_PLL_M1
VirtualSpeedSensorM1
SCC
OTT
PID_SetKP
PID_SetKI
PID_SetKD
STO_PLL_GetObserverGains
STO_PLL_SetObserverGains
SCC_SetNominalCurrent
PIDSpeedHandle_M1
FF_M1
SCC_SetNominalSpeed
SCC_SetResistorOffset
MC_Perf_GetCPU_Load
MC_Perf_GetMinCPU_Load
MC_Perf_GetMaxCPU_Load
globalConfig_reg
MCI_GetSTMState
MCI_GetControlMode
SCC_GetState
SPD_GetElToMecRatio
BusVoltageSensor_M1
RevUpControlM1
PID_GetKP
PID_GetKI
PID_GetKD
VBS_GetAvBusVoltage_V
NTC_GetAvTemp_C
MCI_GetVqd
MCI_GetValphabeta
SPD_GetS16Speed
STO_PLL_GetEstimatedBemf
FF_GetVqdff
FF_GetVqdAvPIout
TempSensor_M1
MCI_GetFaultState
MCI_GetAvrgMecSpeedUnit
PQD_GetAvrgElMotorPowerW
SCC_GetResistorOffset
ARM GAS  /tmp/cctuZX3B.s 			page 147


memcpy
pMPM
ApplicationConfig_reg
FOCConfig_reg
scaleParams_M1
MCI_GetLastRampFinalSpeed
MCI_GetLastRampFinalDuration
