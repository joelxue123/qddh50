ARM GAS  /tmp/ccoeQSfh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"can_encos.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z16encos_ack_type_1RP4Axis,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	_Z16encos_ack_type_1RP4Axis
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	_Z16encos_ack_type_1RP4Axis:
  28              	.LVL0:
  29              	.LFB5641:
  30              		.file 1 "Src/can_encos.cpp"
   1:Src/can_encos.cpp **** 
   2:Src/can_encos.cpp **** #include "can_encos.hpp"
   3:Src/can_encos.cpp **** #include "axis.hpp"  // Changed from forward declaration to full include
   4:Src/can_encos.cpp **** #include "main_.hpp"
   5:Src/can_encos.cpp **** 
   6:Src/can_encos.cpp **** 
   7:Src/can_encos.cpp **** typedef struct __attribute__((packed)) {
   8:Src/can_encos.cpp ****     uint8_t kp_h  :5;
   9:Src/can_encos.cpp ****     uint8_t mode  :3;
  10:Src/can_encos.cpp ****     uint8_t kd_h  :1;
  11:Src/can_encos.cpp ****     uint8_t kp_l  :7;
  12:Src/can_encos.cpp ****     uint8_t kd_l  :8;
  13:Src/can_encos.cpp ****     uint8_t pos_h :8;
  14:Src/can_encos.cpp ****     uint8_t pos_l :8;
  15:Src/can_encos.cpp ****     uint8_t vel_h :8;
  16:Src/can_encos.cpp ****     uint8_t tor_h :4;
  17:Src/can_encos.cpp ****     uint8_t vel_l :4;
  18:Src/can_encos.cpp ****     uint8_t tor_l :8;
  19:Src/can_encos.cpp **** } encos_cmd_pvt_t;
  20:Src/can_encos.cpp **** 
  21:Src/can_encos.cpp **** typedef struct __attribute__((packed)) {
  22:Src/can_encos.cpp ****     uint8_t ack_type :2;
  23:Src/can_encos.cpp ****     uint8_t          :3;
  24:Src/can_encos.cpp ****     uint8_t mode     :3;
  25:Src/can_encos.cpp **** } encos_curr_brake_cmd_t;
  26:Src/can_encos.cpp **** 
  27:Src/can_encos.cpp **** void encos_ack_type_1(Axis* &axis)
  28:Src/can_encos.cpp **** {
ARM GAS  /tmp/ccoeQSfh.s 			page 2


  31              		.loc 1 28 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 32
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  29:Src/can_encos.cpp ****     Axis::axis_state_t state;
  35              		.loc 1 29 5 view .LVU1
  30:Src/can_encos.cpp ****     can_Message_t txmsg;
  36              		.loc 1 30 5 view .LVU2
  28:Src/can_encos.cpp ****     Axis::axis_state_t state;
  37              		.loc 1 28 1 is_stmt 0 view .LVU3
  38 0000 70B5     		push	{r4, r5, r6, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
  45              		.loc 1 30 19 view .LVU4
  46 0002 204B     		ldr	r3, .L4
  28:Src/can_encos.cpp ****     Axis::axis_state_t state;
  47              		.loc 1 28 1 view .LVU5
  48 0004 0546     		mov	r5, r0
  49              		.loc 1 30 19 view .LVU6
  50 0006 0FCB     		ldm	r3, {r0, r1, r2, r3}
  51              	.LVL1:
  28:Src/can_encos.cpp ****     Axis::axis_state_t state;
  52              		.loc 1 28 1 view .LVU7
  53 0008 88B0     		sub	sp, sp, #32
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 48
  56              		.loc 1 30 19 view .LVU8
  57 000a 04AC     		add	r4, sp, #16
  58 000c 84E80F00 		stm	r4, {r0, r1, r2, r3}
  31:Src/can_encos.cpp **** 
  32:Src/can_encos.cpp ****     axis->get_axis_state(&state);
  59              		.loc 1 32 5 is_stmt 1 view .LVU9
  60              		.loc 1 32 25 is_stmt 0 view .LVU10
  61 0010 2868     		ldr	r0, [r5]
  62 0012 01A9     		add	r1, sp, #4
  63 0014 FFF7FEFF 		bl	_ZN4Axis14get_axis_stateEPNS_12axis_state_tE
  64              	.LVL2:
  33:Src/can_encos.cpp **** 
  34:Src/can_encos.cpp ****     txmsg.id = axis->config_.can_node_id;
  65              		.loc 1 34 5 is_stmt 1 view .LVU11
  66              		.loc 1 34 22 is_stmt 0 view .LVU12
  67 0018 2A68     		ldr	r2, [r5]
  35:Src/can_encos.cpp ****     txmsg.isExt = axis->config_.can_node_id_extended;
  36:Src/can_encos.cpp ****     txmsg.len = 8;
  37:Src/can_encos.cpp ****     txmsg.buf[0] = state.erro & ((1 << 5) - 1);
  68              		.loc 1 37 31 view .LVU13
  69 001a 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
  34:Src/can_encos.cpp ****     txmsg.isExt = axis->config_.can_node_id_extended;
  70              		.loc 1 34 22 view .LVU14
  71 001e 5568     		ldr	r5, [r2, #4]
  72              	.LVL3:
  38:Src/can_encos.cpp ****     txmsg.buf[0] |= 1 << 5;
  39:Src/can_encos.cpp ****     txmsg.buf[1] = state.pos >> 8;
ARM GAS  /tmp/ccoeQSfh.s 			page 3


  40:Src/can_encos.cpp ****     txmsg.buf[2] = state.pos & 0xFF;
  41:Src/can_encos.cpp ****     txmsg.buf[3] = state.vel >> 4;
  42:Src/can_encos.cpp ****     txmsg.buf[4] = state.vel << 4;
  43:Src/can_encos.cpp ****     txmsg.buf[4] |= state.cur >> 8;
  73              		.loc 1 43 27 view .LVU15
  74 0020 BDF80A00 		ldrh	r0, [sp, #10]
  41:Src/can_encos.cpp ****     txmsg.buf[4] = state.vel << 4;
  75              		.loc 1 41 26 view .LVU16
  76 0024 BDF80810 		ldrh	r1, [sp, #8]
  34:Src/can_encos.cpp ****     txmsg.isExt = axis->config_.can_node_id_extended;
  77              		.loc 1 34 14 view .LVU17
  78 0028 2E6F     		ldr	r6, [r5, #112]
  39:Src/can_encos.cpp ****     txmsg.buf[2] = state.pos & 0xFF;
  79              		.loc 1 39 18 view .LVU18
  80 002a BDF80620 		ldrh	r2, [sp, #6]
  35:Src/can_encos.cpp ****     txmsg.len = 8;
  81              		.loc 1 35 17 view .LVU19
  82 002e 95F87450 		ldrb	r5, [r5, #116]	@ zero_extendqisi2
  83 0032 8DF81450 		strb	r5, [sp, #20]
  37:Src/can_encos.cpp ****     txmsg.buf[0] |= 1 << 5;
  84              		.loc 1 37 31 view .LVU20
  85 0036 03F01F03 		and	r3, r3, #31
  38:Src/can_encos.cpp ****     txmsg.buf[1] = state.pos >> 8;
  86              		.loc 1 38 18 view .LVU21
  87 003a 43F02003 		orr	r3, r3, #32
  88 003e 8DF81730 		strb	r3, [sp, #23]
  89              		.loc 1 43 31 view .LVU22
  90 0042 030A     		lsrs	r3, r0, #8
  91              		.loc 1 43 18 view .LVU23
  92 0044 43EA0113 		orr	r3, r3, r1, lsl #4
  44:Src/can_encos.cpp ****     txmsg.buf[5] = state.cur & 0xFF;
  45:Src/can_encos.cpp ****     txmsg.buf[6] = state.motor_temperature;
  46:Src/can_encos.cpp ****     txmsg.buf[7] = state.mos_temperature;
  47:Src/can_encos.cpp **** 
  48:Src/can_encos.cpp ****     odCAN->write(txmsg);
  93              		.loc 1 48 17 view .LVU24
  94 0048 0F4D     		ldr	r5, .L4+4
  44:Src/can_encos.cpp ****     txmsg.buf[5] = state.cur & 0xFF;
  95              		.loc 1 44 18 view .LVU25
  96 004a 8DF81C00 		strb	r0, [sp, #28]
  43:Src/can_encos.cpp ****     txmsg.buf[5] = state.cur & 0xFF;
  97              		.loc 1 43 18 view .LVU26
  98 004e 8DF81B30 		strb	r3, [sp, #27]
  41:Src/can_encos.cpp ****     txmsg.buf[4] = state.vel << 4;
  99              		.loc 1 41 30 view .LVU27
 100 0052 0809     		lsrs	r0, r1, #4
  46:Src/can_encos.cpp **** 
 101              		.loc 1 46 18 view .LVU28
 102 0054 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
  41:Src/can_encos.cpp ****     txmsg.buf[4] = state.vel << 4;
 103              		.loc 1 41 18 view .LVU29
 104 0058 8DF81A00 		strb	r0, [sp, #26]
  39:Src/can_encos.cpp ****     txmsg.buf[2] = state.pos & 0xFF;
 105              		.loc 1 39 18 view .LVU30
 106 005c 52BA     		rev16	r2, r2
 107 005e ADF81820 		strh	r2, [sp, #24]	@ movhi
  46:Src/can_encos.cpp **** 
ARM GAS  /tmp/ccoeQSfh.s 			page 4


 108              		.loc 1 46 18 view .LVU31
 109 0062 8DF81E30 		strb	r3, [sp, #30]
  45:Src/can_encos.cpp ****     txmsg.buf[7] = state.mos_temperature;
 110              		.loc 1 45 18 view .LVU32
 111 0066 9DF80C20 		ldrb	r2, [sp, #12]	@ zero_extendqisi2
 112              		.loc 1 48 17 view .LVU33
 113 006a 2868     		ldr	r0, [r5]
  34:Src/can_encos.cpp ****     txmsg.isExt = axis->config_.can_node_id_extended;
 114              		.loc 1 34 14 view .LVU34
 115 006c 0496     		str	r6, [sp, #16]
  35:Src/can_encos.cpp ****     txmsg.len = 8;
 116              		.loc 1 35 5 is_stmt 1 view .LVU35
  36:Src/can_encos.cpp ****     txmsg.buf[0] = state.erro & ((1 << 5) - 1);
 117              		.loc 1 36 5 view .LVU36
  36:Src/can_encos.cpp ****     txmsg.buf[0] = state.erro & ((1 << 5) - 1);
 118              		.loc 1 36 15 is_stmt 0 view .LVU37
 119 006e 0823     		movs	r3, #8
 120              		.loc 1 48 17 view .LVU38
 121 0070 2146     		mov	r1, r4
  45:Src/can_encos.cpp ****     txmsg.buf[7] = state.mos_temperature;
 122              		.loc 1 45 18 view .LVU39
 123 0072 8DF81D20 		strb	r2, [sp, #29]
  36:Src/can_encos.cpp ****     txmsg.buf[0] = state.erro & ((1 << 5) - 1);
 124              		.loc 1 36 15 view .LVU40
 125 0076 8DF81630 		strb	r3, [sp, #22]
  37:Src/can_encos.cpp ****     txmsg.buf[0] |= 1 << 5;
 126              		.loc 1 37 5 is_stmt 1 view .LVU41
  38:Src/can_encos.cpp ****     txmsg.buf[1] = state.pos >> 8;
 127              		.loc 1 38 5 view .LVU42
  39:Src/can_encos.cpp ****     txmsg.buf[2] = state.pos & 0xFF;
 128              		.loc 1 39 5 view .LVU43
  40:Src/can_encos.cpp ****     txmsg.buf[3] = state.vel >> 4;
 129              		.loc 1 40 5 view .LVU44
  41:Src/can_encos.cpp ****     txmsg.buf[4] = state.vel << 4;
 130              		.loc 1 41 5 view .LVU45
  42:Src/can_encos.cpp ****     txmsg.buf[4] |= state.cur >> 8;
 131              		.loc 1 42 5 view .LVU46
  43:Src/can_encos.cpp ****     txmsg.buf[5] = state.cur & 0xFF;
 132              		.loc 1 43 5 view .LVU47
  44:Src/can_encos.cpp ****     txmsg.buf[6] = state.motor_temperature;
 133              		.loc 1 44 5 view .LVU48
  45:Src/can_encos.cpp ****     txmsg.buf[7] = state.mos_temperature;
 134              		.loc 1 45 5 view .LVU49
  46:Src/can_encos.cpp **** 
 135              		.loc 1 46 5 view .LVU50
 136              		.loc 1 48 5 view .LVU51
 137              		.loc 1 48 17 is_stmt 0 view .LVU52
 138 007a FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 139              	.LVL4:
  49:Src/can_encos.cpp **** }
 140              		.loc 1 49 1 view .LVU53
 141 007e 08B0     		add	sp, sp, #32
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 16
 144              		@ sp needed
 145 0080 70BD     		pop	{r4, r5, r6, pc}
 146              	.L5:
ARM GAS  /tmp/ccoeQSfh.s 			page 5


 147 0082 00BF     		.align	2
 148              	.L4:
 149 0084 00000000 		.word	.LANCHOR0
 150 0088 00000000 		.word	odCAN
 151              		.cfi_endproc
 152              	.LFE5641:
 154              		.section	.text._Z16encos_cmd_handleRP4AxisR13can_Message_t,"ax",%progbits
 155              		.align	1
 156              		.p2align 2,,3
 157              		.global	_Z16encos_cmd_handleRP4AxisR13can_Message_t
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	_Z16encos_cmd_handleRP4AxisR13can_Message_t:
 164              	.LVL5:
 165              	.LFB5645:
  50:Src/can_encos.cpp **** 
  51:Src/can_encos.cpp **** void encos_cmd_handle(Axis* &axis, can_Message_t& msg)
  52:Src/can_encos.cpp **** {
 166              		.loc 1 52 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 16
 169              		@ frame_needed = 0, uses_anonymous_args = 0
  53:Src/can_encos.cpp ****     if (axis->config_.can_node_id == msg.id) {
 170              		.loc 1 53 5 view .LVU55
  52:Src/can_encos.cpp ****     if (axis->config_.can_node_id == msg.id) {
 171              		.loc 1 52 1 is_stmt 0 view .LVU56
 172 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 32
 175              		.cfi_offset 4, -32
 176              		.cfi_offset 5, -28
 177              		.cfi_offset 6, -24
 178              		.cfi_offset 7, -20
 179              		.cfi_offset 8, -16
 180              		.cfi_offset 9, -12
 181              		.cfi_offset 10, -8
 182              		.cfi_offset 14, -4
 183              	.LBB39:
 184              		.loc 1 53 9 view .LVU57
 185 0004 0668     		ldr	r6, [r0]
 186              		.loc 1 53 42 view .LVU58
 187 0006 0F68     		ldr	r7, [r1]
 188              		.loc 1 53 15 view .LVU59
 189 0008 7368     		ldr	r3, [r6, #4]
 190 000a B3F87020 		ldrh	r2, [r3, #112]
 191 000e 92FA92FC 		rev16	ip, r2
 192              		.loc 1 53 23 view .LVU60
 193 0012 1A6F     		ldr	r2, [r3, #112]
 194              		.loc 1 53 5 view .LVU61
 195 0014 BA42     		cmp	r2, r7
 196              	.LBE39:
  52:Src/can_encos.cpp ****     if (axis->config_.can_node_id == msg.id) {
 197              		.loc 1 52 1 view .LVU62
 198 0016 84B0     		sub	sp, sp, #16
 199              	.LCFI4:
ARM GAS  /tmp/ccoeQSfh.s 			page 6


 200              		.cfi_def_cfa_offset 48
  52:Src/can_encos.cpp ****     if (axis->config_.can_node_id == msg.id) {
 201              		.loc 1 52 1 view .LVU63
 202 0018 0546     		mov	r5, r0
 203 001a 0C46     		mov	r4, r1
 204              	.LBB148:
 205              		.loc 1 53 5 view .LVU64
 206 001c 5CD0     		beq	.L32
 207              	.LBE148:
  54:Src/can_encos.cpp ****     switch (msg.len) {
  55:Src/can_encos.cpp ****         case 3:
  56:Src/can_encos.cpp ****             {
  57:Src/can_encos.cpp ****                 encos_curr_brake_cmd_t *cmd = (encos_curr_brake_cmd_t *)&(msg.buf[0]);
  58:Src/can_encos.cpp ****                 switch (cmd->mode) {
  59:Src/can_encos.cpp ****                 case 3:// 手册描述能耗制动，但实际测试用来设置电流
  60:Src/can_encos.cpp ****                     axis->set_axis_current((msg.buf[1] << 8) + msg.buf[2]);
  61:Src/can_encos.cpp ****                     break;
  62:Src/can_encos.cpp ****                 }
  63:Src/can_encos.cpp ****                 
  64:Src/can_encos.cpp ****                 switch (cmd->ack_type) {
  65:Src/can_encos.cpp ****                 case 1:
  66:Src/can_encos.cpp ****                     encos_ack_type_1(axis);
  67:Src/can_encos.cpp ****                     break;
  68:Src/can_encos.cpp ****                 }
  69:Src/can_encos.cpp ****             }
  70:Src/can_encos.cpp ****             break;
  71:Src/can_encos.cpp ****         case 8:
  72:Src/can_encos.cpp ****             switch (msg.buf[0] >> 5) {
  73:Src/can_encos.cpp ****             case 0:
  74:Src/can_encos.cpp ****                 {
  75:Src/can_encos.cpp ****                     encos_cmd_pvt_t *cmd = (encos_cmd_pvt_t *)msg.buf;
  76:Src/can_encos.cpp ****                     Axis::axis_pvt_parm_t pvt_parm;
  77:Src/can_encos.cpp **** 
  78:Src/can_encos.cpp ****                     encos_ack_type_1(axis);
  79:Src/can_encos.cpp **** 
  80:Src/can_encos.cpp ****                     pvt_parm.kp = (cmd->kp_h << 7) + cmd->kp_l;
  81:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
  82:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
  83:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
  84:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
  85:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
  86:Src/can_encos.cpp ****                 }
  87:Src/can_encos.cpp ****                 break;
  88:Src/can_encos.cpp ****             }
  89:Src/can_encos.cpp ****             break;
  90:Src/can_encos.cpp ****         }
  91:Src/can_encos.cpp ****     } else if (0x7FF == msg.id) {
 208              		.loc 1 91 12 is_stmt 1 view .LVU65
 209              	.LBB149:
 210              	.LBB40:
 211 001e 40F2FF71 		movw	r1, #2047
 212              	.LVL6:
 213              		.loc 1 91 12 is_stmt 0 view .LVU66
 214 0022 8F42     		cmp	r7, r1
 215 0024 07D0     		beq	.L33
 216              	.LBE40:
 217              	.LBE149:
ARM GAS  /tmp/ccoeQSfh.s 			page 7


  92:Src/can_encos.cpp ****         switch (msg.len) {
  93:Src/can_encos.cpp ****         case 4:
  94:Src/can_encos.cpp ****             {
  95:Src/can_encos.cpp ****                 if (0xFF == msg.buf[0] && 0xFF == msg.buf[1] && 0x00 == msg.buf[2] && 0x82 == msg.b
  96:Src/can_encos.cpp ****                     uint32_t id;
  97:Src/can_encos.cpp ****                     bool success = axis->get_nodeID(id);
  98:Src/can_encos.cpp ****                     can_Message_t txmsg;
  99:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 100:Src/can_encos.cpp ****                     txmsg.isExt = axis->config_.can_node_id_extended;
 101:Src/can_encos.cpp ****                     if (success) {
 102:Src/can_encos.cpp ****                         txmsg.len = 5;
 103:Src/can_encos.cpp ****                         txmsg.buf[0] = 0xFF;
 104:Src/can_encos.cpp ****                         txmsg.buf[1] = 0xFF;
 105:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 106:Src/can_encos.cpp ****                         txmsg.buf[3] = id >> 8;
 107:Src/can_encos.cpp ****                         txmsg.buf[4] = id & 0xFF;
 108:Src/can_encos.cpp ****                     } else {
 109:Src/can_encos.cpp ****                         txmsg.len = 4;
 110:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x80;
 111:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x80;
 112:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 113:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x80;
 114:Src/can_encos.cpp ****                     }
 115:Src/can_encos.cpp ****                     odCAN->write(txmsg);
 116:Src/can_encos.cpp ****                 } else {
 117:Src/can_encos.cpp ****                     uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 118:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 119:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 120:Src/can_encos.cpp ****                             // 设置零位
 121:Src/can_encos.cpp ****                             bool success = axis->set_offset();
 122:Src/can_encos.cpp ****                             if(success)
 123:Src/can_encos.cpp ****                             {
 124:Src/can_encos.cpp ****                                 save_configuration();
 125:Src/can_encos.cpp ****                             }
 126:Src/can_encos.cpp ****                             
 127:Src/can_encos.cpp ****                             can_Message_t txmsg;
 128:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 129:Src/can_encos.cpp ****                             txmsg.isExt = axis->config_.can_node_id_extended;
 130:Src/can_encos.cpp ****                             txmsg.len = 4;
 131:Src/can_encos.cpp ****                             txmsg.buf[0] = axis->config_.can_node_id >> 8;
 132:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 133:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 134:Src/can_encos.cpp ****                             txmsg.buf[3] = success ? 3 : 0;
 135:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 136:Src/can_encos.cpp ****                         }
 137:Src/can_encos.cpp ****                     }
 138:Src/can_encos.cpp ****                 }
 139:Src/can_encos.cpp ****             }
 140:Src/can_encos.cpp ****             break;
 141:Src/can_encos.cpp ****         case 6:
 142:Src/can_encos.cpp ****             {
 143:Src/can_encos.cpp ****                 if (0x7F == msg.buf[0] && 0x7F == msg.buf[1] && 0 == msg.buf[2] && 5 == msg.buf[3] 
 144:Src/can_encos.cpp ****                     // 重置ID为1
 145:Src/can_encos.cpp ****                     if (axis->set_nodeID(1)) {
 146:Src/can_encos.cpp ****                         save_configuration();
 147:Src/can_encos.cpp ****                         can_Message_t txmsg;
 148:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
ARM GAS  /tmp/ccoeQSfh.s 			page 8


 149:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 150:Src/can_encos.cpp ****                         txmsg.len = 6;
 151:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x7F;
 152:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x7F;
 153:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 154:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x05;
 155:Src/can_encos.cpp ****                         txmsg.buf[4] = 0x7F;
 156:Src/can_encos.cpp ****                         txmsg.buf[5] = 0x7F;
 157:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 158:Src/can_encos.cpp ****                     }
 159:Src/can_encos.cpp ****                 } else {
 160:Src/can_encos.cpp ****                 uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 161:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 162:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 163:Src/can_encos.cpp ****                         // 设置ID
 164:Src/can_encos.cpp ****                         uint32_t new_id = (msg.buf[4] << 8) + msg.buf[5];
 165:Src/can_encos.cpp ****                         bool success = false;
 166:Src/can_encos.cpp ****                         if (new_id < 0x7FF && new_id > 0) {
 167:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 168:Src/can_encos.cpp ****                             if(success)
 169:Src/can_encos.cpp ****                             {
 170:Src/can_encos.cpp ****                                 save_configuration();
 171:Src/can_encos.cpp ****                             }
 172:Src/can_encos.cpp ****                             
 173:Src/can_encos.cpp ****                         }
 174:Src/can_encos.cpp ****                         can_Message_t txmsg;
 175:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 176:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 177:Src/can_encos.cpp ****                         txmsg.len = 4;
 178:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 179:Src/can_encos.cpp ****                         if (success) {
 180:Src/can_encos.cpp ****                             txmsg.buf[0] = new_id >> 8;
 181:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 182:Src/can_encos.cpp ****                             txmsg.buf[3] = 4;
 183:Src/can_encos.cpp ****                         } else {
 184:Src/can_encos.cpp ****                             txmsg.buf[0] = id >> 8;
 185:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 186:Src/can_encos.cpp ****                             txmsg.buf[3] = 0;
 187:Src/can_encos.cpp ****                         }
 188:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 189:Src/can_encos.cpp ****                     }
 190:Src/can_encos.cpp ****                     }
 191:Src/can_encos.cpp ****                 }
 192:Src/can_encos.cpp ****             }
 193:Src/can_encos.cpp ****             break;
 194:Src/can_encos.cpp ****         }
 195:Src/can_encos.cpp ****     } else if (0x7FE == msg.id && msg.len >= 3) {
 218              		.loc 1 195 12 is_stmt 1 view .LVU67
 219              	.LBB150:
 220              	.LBB125:
 221              	.LBB41:
 222 0026 40F2FE71 		movw	r1, #2046
 223 002a 8F42     		cmp	r7, r1
 224 002c 00F0CE80 		beq	.L34
 225              	.LVL7:
 226              	.L6:
 227              		.loc 1 195 12 is_stmt 0 view .LVU68
ARM GAS  /tmp/ccoeQSfh.s 			page 9


 228              	.LBE41:
 229              	.LBE125:
 230              	.LBE150:
 196:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 197:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 198:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 199:Src/can_encos.cpp ****             bool success = false;
 200:Src/can_encos.cpp **** 
 201:Src/can_encos.cpp ****             if (0xFF == index) {
 202:Src/can_encos.cpp ****                     save_configuration();
 203:Src/can_encos.cpp ****                 success = true;
 204:Src/can_encos.cpp ****             } else if (index < sizeof(axis->config_.ext_cfg) / sizeof(axis->config_.ext_cfg[0])) {
 205:Src/can_encos.cpp ****                 if (7 == msg.len){
 206:Src/can_encos.cpp ****                     uint32_t value = (msg.buf[3] << 24) + (msg.buf[4] << 16) + (msg.buf[5] << 8) + 
 207:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 208:Src/can_encos.cpp ****                     success = true;
 209:Src/can_encos.cpp **** 
 210:Src/can_encos.cpp ****                 }
 211:Src/can_encos.cpp ****             }
 212:Src/can_encos.cpp **** 
 213:Src/can_encos.cpp ****             can_Message_t txmsg;
 214:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 215:Src/can_encos.cpp ****             txmsg.isExt = axis->config_.can_node_id_extended;
 216:Src/can_encos.cpp ****             txmsg.len = 4;
 217:Src/can_encos.cpp ****             txmsg.buf[0] = msg.buf[0];
 218:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 219:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 220:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 221:Src/can_encos.cpp ****             odCAN->write(txmsg);
 222:Src/can_encos.cpp ****         }
 223:Src/can_encos.cpp ****     }
 224:Src/can_encos.cpp **** }
 231              		.loc 1 224 1 view .LVU69
 232 0030 04B0     		add	sp, sp, #16
 233              	.LCFI5:
 234              		.cfi_remember_state
 235              		.cfi_def_cfa_offset 32
 236              		@ sp needed
 237 0032 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 238              	.LVL8:
 239              	.L33:
 240              	.LCFI6:
 241              		.cfi_restore_state
  92:Src/can_encos.cpp ****         switch (msg.len) {
 242              		.loc 1 92 9 is_stmt 1 view .LVU70
 243              	.LBB151:
 244              	.LBB126:
 245              	.LBB72:
  92:Src/can_encos.cpp ****         switch (msg.len) {
 246              		.loc 1 92 21 is_stmt 0 view .LVU71
 247 0036 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
  92:Src/can_encos.cpp ****         switch (msg.len) {
 248              		.loc 1 92 9 view .LVU72
 249 0038 0429     		cmp	r1, #4
 250 003a 00F08180 		beq	.L15
 251 003e 0629     		cmp	r1, #6
 252 0040 F6D1     		bne	.L6
ARM GAS  /tmp/ccoeQSfh.s 			page 10


 253              	.LBE72:
 254              	.LBE126:
 255              	.LBE151:
 141:Src/can_encos.cpp ****             {
 256              		.loc 1 141 9 is_stmt 1 view .LVU73
 142:Src/can_encos.cpp ****                 if (0x7F == msg.buf[0] && 0x7F == msg.buf[1] && 0 == msg.buf[2] && 5 == msg.buf[3] 
 257              		.loc 1 142 13 view .LVU74
 143:Src/can_encos.cpp ****                     // 重置ID为1
 258              		.loc 1 143 17 view .LVU75
 259              	.LBB152:
 260              	.LBB127:
 261              	.LBB111:
 262              	.LBB73:
 143:Src/can_encos.cpp ****                     // 重置ID为1
 263              		.loc 1 143 38 is_stmt 0 view .LVU76
 264 0042 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 265              		.loc 1 143 17 view .LVU77
 266 0044 7F29     		cmp	r1, #127
 267 0046 00F02A81 		beq	.L35
 268              	.LVL9:
 269              	.L20:
 270              	.LBB74:
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 271              		.loc 1 160 17 is_stmt 1 view .LVU78
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 272              		.loc 1 160 60 is_stmt 0 view .LVU79
 273 004a 277A     		ldrb	r7, [r4, #8]	@ zero_extendqisi2
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 274              		.loc 1 160 49 view .LVU80
 275 004c 07EB0127 		add	r7, r7, r1, lsl #8
 276              	.LVL10:
 161:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 277              		.loc 1 161 17 is_stmt 1 view .LVU81
 278              	.LBB75:
 279 0050 BA42     		cmp	r2, r7
 280 0052 EDD1     		bne	.L6
 281              	.LBE75:
 282              	.LBE74:
 283              	.LBE73:
 284              	.LBE111:
 285              	.LBE127:
 286              	.LBE152:
 162:Src/can_encos.cpp ****                         // 设置ID
 287              		.loc 1 162 21 view .LVU82
 288              	.LBB153:
 289              	.LBB128:
 290              	.LBB112:
 291              	.LBB90:
 292              	.LBB84:
 293              	.LBB82:
 294              	.LBB76:
 162:Src/can_encos.cpp ****                         // 设置ID
 295              		.loc 1 162 41 is_stmt 0 view .LVU83
 296 0054 A268     		ldr	r2, [r4, #8]
 297 0056 22F07F42 		bic	r2, r2, #-16777216
 298 005a 22F0FF02 		bic	r2, r2, #255
ARM GAS  /tmp/ccoeQSfh.s 			page 11


 162:Src/can_encos.cpp ****                         // 设置ID
 299              		.loc 1 162 21 view .LVU84
 300 005e B2F5802F 		cmp	r2, #262144
 301 0062 E5D1     		bne	.L6
 302              	.LBB77:
 164:Src/can_encos.cpp ****                         bool success = false;
 303              		.loc 1 164 25 is_stmt 1 view .LVU85
 164:Src/can_encos.cpp ****                         bool success = false;
 304              		.loc 1 164 53 is_stmt 0 view .LVU86
 305 0064 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 164:Src/can_encos.cpp ****                         bool success = false;
 306              		.loc 1 164 72 view .LVU87
 307 0066 94F80C80 		ldrb	r8, [r4, #12]	@ zero_extendqisi2
 164:Src/can_encos.cpp ****                         bool success = false;
 308              		.loc 1 164 61 view .LVU88
 309 006a 08EB0228 		add	r8, r8, r2, lsl #8
 310              	.LVL11:
 165:Src/can_encos.cpp ****                         if (new_id < 0x7FF && new_id > 0) {
 311              		.loc 1 165 25 is_stmt 1 view .LVU89
 166:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 312              		.loc 1 166 25 view .LVU90
 166:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 313              		.loc 1 166 44 is_stmt 0 view .LVU91
 314 006e 08F1FF31 		add	r1, r8, #-1
 166:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 315              		.loc 1 166 25 view .LVU92
 316 0072 40F2FD72 		movw	r2, #2045
 317 0076 9142     		cmp	r1, r2
 318 0078 00F25981 		bhi	.L21
 167:Src/can_encos.cpp ****                             if(success)
 319              		.loc 1 167 29 is_stmt 1 view .LVU93
 320              	.LVL12:
 321              	.LBB78:
 322              	.LBI78:
 323              		.file 2 "Inc/axis.hpp"
   1:Inc/axis.hpp  **** #ifndef __AXIS_HPP
   2:Inc/axis.hpp  **** #define __AXIS_HPP
   3:Inc/axis.hpp  **** 
   4:Inc/axis.hpp  **** 
   5:Inc/axis.hpp  **** #include "task_timer.hpp"
   6:Inc/axis.hpp  **** #include <array>
   7:Inc/axis.hpp  **** #include "interfaces.hpp"
   8:Inc/axis.hpp  **** #include "open_loop_controller.hpp"
   9:Inc/axis.hpp  **** #include <functional>
  10:Inc/axis.hpp  **** #include "low_level.h"  // Add this for safety_critical_disarm_motor_pwm declaration
  11:Inc/axis.hpp  **** #include  "current_limiter.hpp"
  12:Inc/axis.hpp  **** #include "utils.hpp"
  13:Inc/axis.hpp  **** 
  14:Inc/axis.hpp  **** class Motor;
  15:Inc/axis.hpp  **** class Controller;
  16:Inc/axis.hpp  **** class Encoder;
  17:Inc/axis.hpp  **** class OpenLoopController;
  18:Inc/axis.hpp  **** class  OnboardThermistorCurrentLimiter;
  19:Inc/axis.hpp  **** class  OffboardThermistorCurrentLimiter;
  20:Inc/axis.hpp  **** class ThermistorCurrentLimiter;
  21:Inc/axis.hpp  **** 
  22:Inc/axis.hpp  **** class Axis : public ODriveIntf::AxisIntf{
ARM GAS  /tmp/ccoeQSfh.s 			page 12


  23:Inc/axis.hpp  **** public:
  24:Inc/axis.hpp  ****     struct LockinConfig_t {
  25:Inc/axis.hpp  ****         float current = 10.0f;           // [A]
  26:Inc/axis.hpp  ****         float ramp_time = 0.4f;          // [s]
  27:Inc/axis.hpp  ****         float ramp_distance = 1 * M_PI;  // [rad]
  28:Inc/axis.hpp  ****         float accel = 20.0f;     // [rad/s^2]
  29:Inc/axis.hpp  ****         float vel = 40.0f; // [rad/s]
  30:Inc/axis.hpp  ****         float finish_distance = 100.0f;  // [rad]
  31:Inc/axis.hpp  ****         bool finish_on_vel = false;
  32:Inc/axis.hpp  ****         bool finish_on_distance = false;
  33:Inc/axis.hpp  ****         bool finish_on_enc_idx = false;
  34:Inc/axis.hpp  ****     };
  35:Inc/axis.hpp  ****     struct TaskTimes {
  36:Inc/axis.hpp  ****         TaskTimer thermistor_update;
  37:Inc/axis.hpp  ****         TaskTimer encoder_update;
  38:Inc/axis.hpp  ****         TaskTimer sensorless_estimator_update;
  39:Inc/axis.hpp  ****         TaskTimer endstop_update;
  40:Inc/axis.hpp  ****         TaskTimer can_heartbeat;
  41:Inc/axis.hpp  ****         TaskTimer controller_update;
  42:Inc/axis.hpp  ****         TaskTimer open_loop_controller_update;
  43:Inc/axis.hpp  ****         TaskTimer acim_estimator_update;
  44:Inc/axis.hpp  ****         TaskTimer motor_update;
  45:Inc/axis.hpp  ****         TaskTimer current_controller_update;
  46:Inc/axis.hpp  ****         TaskTimer dc_calib;
  47:Inc/axis.hpp  ****         TaskTimer current_sense;
  48:Inc/axis.hpp  ****         TaskTimer pwm_update;
  49:Inc/axis.hpp  ****     };
  50:Inc/axis.hpp  **** 
  51:Inc/axis.hpp  **** 
  52:Inc/axis.hpp  **** 
  53:Inc/axis.hpp  **** 
  54:Inc/axis.hpp  **** 
  55:Inc/axis.hpp  ****    enum ENCOS_ERRO
  56:Inc/axis.hpp  ****    {
  57:Inc/axis.hpp  ****       ENCOS_ERROR_NONE = 0,
  58:Inc/axis.hpp  ****       ENCOS_ERROR_OVER_TEMP = 1,
  59:Inc/axis.hpp  ****       ENCOS_ERROR_CURRENT_LIMIT_VIOLATION =2,
  60:Inc/axis.hpp  ****       ENCOS_ERROR_DC_BUS_UNDER_VOLTAGE =3,
  61:Inc/axis.hpp  ****       ENCOS_ERROR_ABS_SPI_COM_FAIL=4,
  62:Inc/axis.hpp  ****       ENCOS_ERROR_DC_BUS_OVER_VOLTAGE =6,
  63:Inc/axis.hpp  ****       ENCOS_ERROR_DRV_FAULT=7,
  64:Inc/axis.hpp  ****    };
  65:Inc/axis.hpp  **** 
  66:Inc/axis.hpp  **** 
  67:Inc/axis.hpp  **** 
  68:Inc/axis.hpp  ****     static constexpr uint32_t PARAM_LEN = 128;
  69:Inc/axis.hpp  ****     enum EXT_CONFIG_REG
  70:Inc/axis.hpp  ****     {
  71:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_NOTCH_FILTER = 0,
  72:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_DC_BUS_OVER_VOLTAGE_FILTER = 1,
  73:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_DC_BUS_UNDER_VOLTAGE_FILTER = 2,
  74:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_OVER_TEMP_FILTER = 3,
  75:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_CURRENT_LIMIT_VIOLATION_FILTER = 4
  76:Inc/axis.hpp  ****     };
  77:Inc/axis.hpp  **** 
  78:Inc/axis.hpp  **** 
  79:Inc/axis.hpp  **** 
ARM GAS  /tmp/ccoeQSfh.s 			page 13


  80:Inc/axis.hpp  ****     static LockinConfig_t default_calibration();
  81:Inc/axis.hpp  ****     static LockinConfig_t default_sensorless();
  82:Inc/axis.hpp  ****     static LockinConfig_t default_lockin();
  83:Inc/axis.hpp  **** 
  84:Inc/axis.hpp  ****     struct Config_t {
  85:Inc/axis.hpp  ****         bool startup_motor_calibration = false;   //<! run motor calibration at startup, skip other
  86:Inc/axis.hpp  ****         bool startup_encoder_index_search = false; //<! run encoder index search after startup, ski
  87:Inc/axis.hpp  ****                                                 // this only has an effect if encoder.config.use_in
  88:Inc/axis.hpp  ****         bool startup_encoder_offset_calibration = false; //<! run encoder offset calibration after 
  89:Inc/axis.hpp  ****         bool startup_closed_loop_control = false; //<! enable closed loop control after calibration
  90:Inc/axis.hpp  ****         bool startup_sensorless_control = false; //<! enable sensorless control after calibration/s
  91:Inc/axis.hpp  ****         bool startup_homing = false; //<! enable homing after calibration/startup
  92:Inc/axis.hpp  **** 
  93:Inc/axis.hpp  ****         bool enable_step_dir = false; //<! enable step/dir input after calibration
  94:Inc/axis.hpp  ****                                     //   For M0 this has no effect if enable_uart is true
  95:Inc/axis.hpp  ****         bool step_dir_always_on = false; //<! Keep step/dir enabled while the motor is disabled.
  96:Inc/axis.hpp  ****                                          //<! This is ignored if enable_step_dir is false.
  97:Inc/axis.hpp  ****                                          //<! This setting only takes effect on a state transition
  98:Inc/axis.hpp  ****                                          //<! into idle or out of closed loop control.
  99:Inc/axis.hpp  **** 
 100:Inc/axis.hpp  ****         float turns_per_step = 1.0f / 1024.0f;
 101:Inc/axis.hpp  **** 
 102:Inc/axis.hpp  ****         bool enable_sensorless_mode = false;
 103:Inc/axis.hpp  ****         float watchdog_timeout = 1.0f; // [s]
 104:Inc/axis.hpp  ****         bool enable_watchdog = true;
 105:Inc/axis.hpp  ****         
 106:Inc/axis.hpp  ****         // Defaults loaded from hw_config in load_configuration in main.cpp
 107:Inc/axis.hpp  ****         uint16_t step_gpio_pin = 0;
 108:Inc/axis.hpp  ****         uint16_t dir_gpio_pin = 0;
 109:Inc/axis.hpp  **** 
 110:Inc/axis.hpp  ****         LockinConfig_t calibration_lockin = default_calibration();
 111:Inc/axis.hpp  ****         LockinConfig_t sensorless_ramp = default_sensorless();
 112:Inc/axis.hpp  ****         LockinConfig_t general_lockin;
 113:Inc/axis.hpp  ****         uint32_t can_node_id = 1; // Both axes will have the same id to start
 114:Inc/axis.hpp  ****         bool can_node_id_extended = false;
 115:Inc/axis.hpp  ****         uint32_t can_heartbeat_rate_ms = 100;
 116:Inc/axis.hpp  ****         uint32_t offset;       
 117:Inc/axis.hpp  ****         
 118:Inc/axis.hpp  ****         uint32_t ext_cfg[PARAM_LEN];
 119:Inc/axis.hpp  ****         float position_base = 12.5f;
 120:Inc/axis.hpp  ****         float speed_base = 18.0f;
 121:Inc/axis.hpp  ****         float current_base = 60.0f;    
 122:Inc/axis.hpp  ****         bool  gear_vel_used = false;    
 123:Inc/axis.hpp  ****         // custom setters
 124:Inc/axis.hpp  ****         Axis* parent = nullptr;
 125:Inc/axis.hpp  ****         void set_step_gpio_pin(uint16_t value) { step_gpio_pin = value; parent->decode_step_dir_pin
 126:Inc/axis.hpp  ****         void set_dir_gpio_pin(uint16_t value) { dir_gpio_pin = value; parent->decode_step_dir_pins(
 127:Inc/axis.hpp  ****     };
 128:Inc/axis.hpp  **** 
 129:Inc/axis.hpp  ****     struct Homing_t {
 130:Inc/axis.hpp  ****         bool is_homed = false;
 131:Inc/axis.hpp  ****     };
 132:Inc/axis.hpp  **** 
 133:Inc/axis.hpp  ****     struct axis_state_t {
 134:Inc/axis.hpp  ****         
 135:Inc/axis.hpp  ****         uint8_t erro;
 136:Inc/axis.hpp  ****         uint16_t pos;
ARM GAS  /tmp/ccoeQSfh.s 			page 14


 137:Inc/axis.hpp  ****         uint16_t vel;
 138:Inc/axis.hpp  ****         uint16_t cur;
 139:Inc/axis.hpp  ****         uint8_t motor_temperature;
 140:Inc/axis.hpp  ****         uint8_t mos_temperature;
 141:Inc/axis.hpp  ****     };
 142:Inc/axis.hpp  ****     void get_axis_state(axis_state_t* state);
 143:Inc/axis.hpp  **** 
 144:Inc/axis.hpp  ****     struct axis_pvt_parm_t {
 145:Inc/axis.hpp  ****         
 146:Inc/axis.hpp  ****         uint16_t kp;
 147:Inc/axis.hpp  ****         uint16_t kd;
 148:Inc/axis.hpp  ****         uint16_t pos_setpoint;
 149:Inc/axis.hpp  ****         uint16_t vel_setpoint;
 150:Inc/axis.hpp  ****         uint16_t torque_setpoint;
 151:Inc/axis.hpp  ****     };
 152:Inc/axis.hpp  **** 
 153:Inc/axis.hpp  **** void set_axis_pvt_parm(axis_pvt_parm_t *axis_pvt_parm);
 154:Inc/axis.hpp  **** void set_axis_current(int16_t current); // 单位 0.01A
 155:Inc/axis.hpp  **** bool set_offset(void);
 156:Inc/axis.hpp  **** bool set_nodeID(uint32_t id) {
 324              		.loc 2 156 6 view .LVU94
 325              	.LBB79:
 157:Inc/axis.hpp  ****     if(current_state_ != AXIS_STATE_IDLE)
 326              		.loc 2 157 5 view .LVU95
 327              		.loc 2 157 8 is_stmt 0 view .LVU96
 328 007c D6F88C21 		ldr	r2, [r6, #396]
 329              		.loc 2 157 5 view .LVU97
 330 0080 92F80090 		ldrb	r9, [r2]	@ zero_extendqisi2
 331 0084 B9F1010F 		cmp	r9, #1
 332 0088 40F05181 		bne	.L21
 158:Inc/axis.hpp  ****         return false;
 159:Inc/axis.hpp  ****     config_.can_node_id = id;
 333              		.loc 2 159 5 is_stmt 1 view .LVU98
 334              		.loc 2 159 25 is_stmt 0 view .LVU99
 335 008c C3F87080 		str	r8, [r3, #112]
 160:Inc/axis.hpp  ****     return true; 
 336              		.loc 2 160 5 is_stmt 1 view .LVU100
 337              	.LVL13:
 338              		.loc 2 160 5 is_stmt 0 view .LVU101
 339              	.LBE79:
 340              	.LBE78:
 168:Src/can_encos.cpp ****                             {
 341              		.loc 1 168 29 is_stmt 1 view .LVU102
 170:Src/can_encos.cpp ****                             }
 342              		.loc 1 170 33 view .LVU103
 170:Src/can_encos.cpp ****                             }
 343              		.loc 1 170 51 is_stmt 0 view .LVU104
 344 0090 FFF7FEFF 		bl	_Z18save_configurationv
 345              	.LVL14:
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 346              		.loc 1 174 25 is_stmt 1 view .LVU105
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 347              		.loc 1 174 39 is_stmt 0 view .LVU106
 348 0094 C04B     		ldr	r3, .L41
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 349              		.loc 1 176 45 view .LVU107
 350 0096 2F68     		ldr	r7, [r5]
ARM GAS  /tmp/ccoeQSfh.s 			page 15


 351              	.LVL15:
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 352              		.loc 1 174 39 view .LVU108
 353 0098 0FCB     		ldm	r3, {r0, r1, r2, r3}
 354 009a 6C46     		mov	r4, sp
 355              	.LVL16:
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 356              		.loc 1 174 39 view .LVU109
 357 009c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 358              		.loc 1 175 25 is_stmt 1 view .LVU110
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 359              		.loc 1 176 53 is_stmt 0 view .LVU111
 360 00a0 7B68     		ldr	r3, [r7, #4]
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 361              		.loc 1 177 35 view .LVU112
 362 00a2 0425     		movs	r5, #4
 363              	.LVL17:
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 364              		.loc 1 176 37 view .LVU113
 365 00a4 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 366 00a8 8DF80430 		strb	r3, [sp, #4]
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 367              		.loc 1 175 34 view .LVU114
 368 00ac 40F2FF7C 		movw	ip, #2047
 180:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 369              		.loc 1 180 51 view .LVU115
 370 00b0 4FEA1826 		lsr	r6, r8, #8
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 371              		.loc 1 175 34 view .LVU116
 372 00b4 CDF800C0 		str	ip, [sp]
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 373              		.loc 1 176 25 is_stmt 1 view .LVU117
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 374              		.loc 1 177 25 view .LVU118
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 375              		.loc 1 177 35 is_stmt 0 view .LVU119
 376 00b8 8DF80650 		strb	r5, [sp, #6]
 178:Src/can_encos.cpp ****                         if (success) {
 377              		.loc 1 178 25 is_stmt 1 view .LVU120
 178:Src/can_encos.cpp ****                         if (success) {
 378              		.loc 1 178 38 is_stmt 0 view .LVU121
 379 00bc 8DF80990 		strb	r9, [sp, #9]
 179:Src/can_encos.cpp ****                             txmsg.buf[0] = new_id >> 8;
 380              		.loc 1 179 25 is_stmt 1 view .LVU122
 180:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 381              		.loc 1 180 29 view .LVU123
 180:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 382              		.loc 1 180 42 is_stmt 0 view .LVU124
 383 00c0 8DF80760 		strb	r6, [sp, #7]
 181:Src/can_encos.cpp ****                             txmsg.buf[3] = 4;
 384              		.loc 1 181 29 is_stmt 1 view .LVU125
 181:Src/can_encos.cpp ****                             txmsg.buf[3] = 4;
 385              		.loc 1 181 42 is_stmt 0 view .LVU126
 386 00c4 8DF80880 		strb	r8, [sp, #8]
 182:Src/can_encos.cpp ****                         } else {
 387              		.loc 1 182 29 is_stmt 1 view .LVU127
ARM GAS  /tmp/ccoeQSfh.s 			page 16


 182:Src/can_encos.cpp ****                         } else {
 388              		.loc 1 182 42 is_stmt 0 view .LVU128
 389 00c8 8DF80A50 		strb	r5, [sp, #10]
 390              	.LVL18:
 391              	.L24:
 188:Src/can_encos.cpp ****                     }
 392              		.loc 1 188 25 is_stmt 1 view .LVU129
 188:Src/can_encos.cpp ****                     }
 393              		.loc 1 188 37 is_stmt 0 view .LVU130
 394 00cc B34B     		ldr	r3, .L41+4
 395 00ce 2146     		mov	r1, r4
 396 00d0 1868     		ldr	r0, [r3]
 397 00d2 FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 398              	.LVL19:
 399              	.LBE77:
 400 00d6 ABE7     		b	.L6
 401              	.LVL20:
 402              	.L32:
 188:Src/can_encos.cpp ****                     }
 403              		.loc 1 188 37 view .LVU131
 404              	.LBE76:
 405              	.LBE82:
 406              	.LBE84:
 407              	.LBE90:
 408              	.LBE112:
 409              	.LBE128:
 410              	.LBE153:
  54:Src/can_encos.cpp ****         case 3:
 411              		.loc 1 54 5 is_stmt 1 view .LVU132
 412              	.LBB154:
 413              	.LBB129:
  54:Src/can_encos.cpp ****         case 3:
 414              		.loc 1 54 17 is_stmt 0 view .LVU133
 415 00d8 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
  54:Src/can_encos.cpp ****         case 3:
 416              		.loc 1 54 5 view .LVU134
 417 00da 032B     		cmp	r3, #3
 418 00dc 00F0B180 		beq	.L8
 419 00e0 082B     		cmp	r3, #8
 420 00e2 A5D1     		bne	.L6
 421              	.LBE129:
 422              	.LBE154:
  71:Src/can_encos.cpp ****             switch (msg.buf[0] >> 5) {
 423              		.loc 1 71 9 is_stmt 1 view .LVU135
  72:Src/can_encos.cpp ****             case 0:
 424              		.loc 1 72 13 view .LVU136
 425              	.LBB155:
 426              	.LBB136:
 427              	.LBB130:
  72:Src/can_encos.cpp ****             case 0:
 428              		.loc 1 72 32 is_stmt 0 view .LVU137
 429 00e4 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 430 00e6 5B09     		lsrs	r3, r3, #5
 431 00e8 A2D1     		bne	.L6
 432              	.LBB131:
  73:Src/can_encos.cpp ****                 {
 433              		.loc 1 73 13 is_stmt 1 discriminator 5 view .LVU138
ARM GAS  /tmp/ccoeQSfh.s 			page 17


  74:Src/can_encos.cpp ****                     encos_cmd_pvt_t *cmd = (encos_cmd_pvt_t *)msg.buf;
 434              		.loc 1 74 17 discriminator 5 view .LVU139
 435              	.LBB132:
  75:Src/can_encos.cpp ****                     Axis::axis_pvt_parm_t pvt_parm;
 436              		.loc 1 75 21 discriminator 5 view .LVU140
 437              	.LVL21:
  76:Src/can_encos.cpp **** 
 438              		.loc 1 76 21 discriminator 5 view .LVU141
  78:Src/can_encos.cpp **** 
 439              		.loc 1 78 21 discriminator 5 view .LVU142
  78:Src/can_encos.cpp **** 
 440              		.loc 1 78 37 is_stmt 0 discriminator 5 view .LVU143
 441 00ea FFF7FEFF 		bl	_Z16encos_ack_type_1RP4Axis
 442              	.LVL22:
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 443              		.loc 1 80 21 is_stmt 1 discriminator 5 view .LVU144
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 444              		.loc 1 80 59 is_stmt 0 discriminator 5 view .LVU145
 445 00ee 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 446              		.loc 1 80 41 discriminator 5 view .LVU146
 447 00f0 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
  85:Src/can_encos.cpp ****                 }
 448              		.loc 1 85 44 discriminator 5 view .LVU147
 449 00f2 2868     		ldr	r0, [r5]
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 450              		.loc 1 83 51 discriminator 5 view .LVU148
 451 00f4 257B     		ldrb	r5, [r4, #12]	@ zero_extendqisi2
 452              	.LVL23:
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 453              		.loc 1 80 59 discriminator 5 view .LVU149
 454 00f6 5E08     		lsrs	r6, r3, #1
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 455              		.loc 1 80 41 discriminator 5 view .LVU150
 456 00f8 01F01F01 		and	r1, r1, #31
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 457              		.loc 1 80 52 discriminator 5 view .LVU151
 458 00fc 06EBC116 		add	r6, r6, r1, lsl #7
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 459              		.loc 1 81 59 discriminator 5 view .LVU152
 460 0100 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 461              		.loc 1 80 33 discriminator 5 view .LVU153
 462 0102 ADF80060 		strh	r6, [sp]	@ movhi
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 463              		.loc 1 81 21 is_stmt 1 discriminator 5 view .LVU154
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 464              		.loc 1 81 41 is_stmt 0 discriminator 5 view .LVU155
 465 0106 03F00102 		and	r2, r3, #1
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 466              		.loc 1 81 52 discriminator 5 view .LVU156
 467 010a 01EB0222 		add	r2, r1, r2, lsl #8
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 468              		.loc 1 81 33 discriminator 5 view .LVU157
 469 010e ADF80220 		strh	r2, [sp, #2]	@ movhi
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 470              		.loc 1 82 21 is_stmt 1 discriminator 5 view .LVU158
ARM GAS  /tmp/ccoeQSfh.s 			page 18


  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 471              		.loc 1 82 70 is_stmt 0 discriminator 5 view .LVU159
 472 0112 E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 473              		.loc 1 82 51 discriminator 5 view .LVU160
 474 0114 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 475              		.loc 1 83 70 discriminator 5 view .LVU161
 476 0116 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 477              		.loc 1 82 63 discriminator 5 view .LVU162
 478 0118 01EB0221 		add	r1, r1, r2, lsl #8
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 479              		.loc 1 84 73 discriminator 5 view .LVU163
 480 011c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 481              		.loc 1 82 43 discriminator 5 view .LVU164
 482 011e ADF80410 		strh	r1, [sp, #4]	@ movhi
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 483              		.loc 1 83 21 is_stmt 1 discriminator 5 view .LVU165
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 484              		.loc 1 83 70 is_stmt 0 discriminator 5 view .LVU166
 485 0122 1C09     		lsrs	r4, r3, #4
 486              	.LVL24:
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 487              		.loc 1 84 54 discriminator 5 view .LVU167
 488 0124 03F00F03 		and	r3, r3, #15
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 489              		.loc 1 83 63 discriminator 5 view .LVU168
 490 0128 04EB0514 		add	r4, r4, r5, lsl #4
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 491              		.loc 1 84 66 discriminator 5 view .LVU169
 492 012c 02EB0323 		add	r3, r2, r3, lsl #8
  85:Src/can_encos.cpp ****                 }
 493              		.loc 1 85 44 discriminator 5 view .LVU170
 494 0130 6946     		mov	r1, sp
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 495              		.loc 1 83 43 discriminator 5 view .LVU171
 496 0132 ADF80640 		strh	r4, [sp, #6]	@ movhi
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 497              		.loc 1 84 21 is_stmt 1 discriminator 5 view .LVU172
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 498              		.loc 1 84 46 is_stmt 0 discriminator 5 view .LVU173
 499 0136 ADF80830 		strh	r3, [sp, #8]	@ movhi
  85:Src/can_encos.cpp ****                 }
 500              		.loc 1 85 21 is_stmt 1 discriminator 5 view .LVU174
  85:Src/can_encos.cpp ****                 }
 501              		.loc 1 85 44 is_stmt 0 discriminator 5 view .LVU175
 502 013a FFF7FEFF 		bl	_ZN4Axis17set_axis_pvt_parmEPNS_15axis_pvt_parm_tE
 503              	.LVL25:
 504              	.LBE132:
  87:Src/can_encos.cpp ****             }
 505              		.loc 1 87 17 is_stmt 1 discriminator 5 view .LVU176
 506 013e 77E7     		b	.L6
 507              	.LVL26:
 508              	.L15:
  87:Src/can_encos.cpp ****             }
ARM GAS  /tmp/ccoeQSfh.s 			page 19


 509              		.loc 1 87 17 is_stmt 0 discriminator 5 view .LVU177
 510              	.LBE131:
 511              	.LBE130:
 512              	.LBE136:
 513              	.LBE155:
  93:Src/can_encos.cpp ****             {
 514              		.loc 1 93 9 is_stmt 1 view .LVU178
  94:Src/can_encos.cpp ****                 if (0xFF == msg.buf[0] && 0xFF == msg.buf[1] && 0x00 == msg.buf[2] && 0x82 == msg.b
 515              		.loc 1 94 13 view .LVU179
  95:Src/can_encos.cpp ****                     uint32_t id;
 516              		.loc 1 95 17 view .LVU180
 517              	.LBB156:
 518              	.LBB137:
 519              	.LBB113:
 520              	.LBB91:
  95:Src/can_encos.cpp ****                     uint32_t id;
 521              		.loc 1 95 38 is_stmt 0 view .LVU181
 522 0140 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
  95:Src/can_encos.cpp ****                     uint32_t id;
 523              		.loc 1 95 17 view .LVU182
 524 0142 FF29     		cmp	r1, #255
 525 0144 00F08C80 		beq	.L36
 526              	.LVL27:
 527              	.L17:
 528              	.LBB92:
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 529              		.loc 1 117 21 is_stmt 1 view .LVU183
 118:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 530              		.loc 1 118 21 view .LVU184
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 531              		.loc 1 117 64 is_stmt 0 view .LVU185
 532 0148 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 533              		.loc 1 117 53 view .LVU186
 534 014a 03EB0123 		add	r3, r3, r1, lsl #8
 535              	.LBB93:
 118:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 536              		.loc 1 118 21 view .LVU187
 537 014e 9A42     		cmp	r2, r3
 538 0150 7FF46EAF 		bne	.L6
 539              	.LBE93:
 540              	.LBE92:
 541              	.LBE91:
 542              	.LBE113:
 543              	.LBE137:
 544              	.LBE156:
 119:Src/can_encos.cpp ****                             // 设置零位
 545              		.loc 1 119 25 is_stmt 1 view .LVU188
 546              	.LBB157:
 547              	.LBB138:
 548              	.LBB114:
 549              	.LBB104:
 550              	.LBB100:
 551              	.LBB98:
 552              	.LBB94:
 119:Src/can_encos.cpp ****                             // 设置零位
 553              		.loc 1 119 45 is_stmt 0 view .LVU189
ARM GAS  /tmp/ccoeQSfh.s 			page 20


 554 0154 A368     		ldr	r3, [r4, #8]
 555 0156 23F07F43 		bic	r3, r3, #-16777216
 556 015a 23F0FF03 		bic	r3, r3, #255
 119:Src/can_encos.cpp ****                             // 设置零位
 557              		.loc 1 119 25 view .LVU190
 558 015e B3F5403F 		cmp	r3, #196608
 559 0162 7FF465AF 		bne	.L6
 560              	.LBB95:
 121:Src/can_encos.cpp ****                             if(success)
 561              		.loc 1 121 29 is_stmt 1 view .LVU191
 121:Src/can_encos.cpp ****                             if(success)
 562              		.loc 1 121 60 is_stmt 0 view .LVU192
 563 0166 3046     		mov	r0, r6
 564 0168 FFF7FEFF 		bl	_ZN4Axis10set_offsetEv
 565              	.LVL28:
 122:Src/can_encos.cpp ****                             {
 566              		.loc 1 122 29 is_stmt 1 view .LVU193
 567 016c 0446     		mov	r4, r0
 568              	.LVL29:
 122:Src/can_encos.cpp ****                             {
 569              		.loc 1 122 29 is_stmt 0 view .LVU194
 570 016e 0028     		cmp	r0, #0
 571 0170 40F00F81 		bne	.L37
 572              	.LVL30:
 573              	.L18:
 127:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 574              		.loc 1 127 29 is_stmt 1 view .LVU195
 127:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 575              		.loc 1 127 43 is_stmt 0 view .LVU196
 576 0174 884B     		ldr	r3, .L41
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 577              		.loc 1 129 43 view .LVU197
 578 0176 2D68     		ldr	r5, [r5]
 579              	.LVL31:
 127:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 580              		.loc 1 127 43 view .LVU198
 581 0178 0FCB     		ldm	r3, {r0, r1, r2, r3}
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 582              		.loc 1 134 42 view .LVU199
 583 017a 002C     		cmp	r4, #0
 127:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 584              		.loc 1 127 43 view .LVU200
 585 017c 6C46     		mov	r4, sp
 586 017e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 128:Src/can_encos.cpp ****                             txmsg.isExt = axis->config_.can_node_id_extended;
 587              		.loc 1 128 29 is_stmt 1 view .LVU201
 128:Src/can_encos.cpp ****                             txmsg.isExt = axis->config_.can_node_id_extended;
 588              		.loc 1 128 38 is_stmt 0 view .LVU202
 589 0182 40F2FF72 		movw	r2, #2047
 590 0186 0092     		str	r2, [sp]
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 591              		.loc 1 129 29 is_stmt 1 view .LVU203
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 592              		.loc 1 129 57 is_stmt 0 view .LVU204
 593 0188 6A68     		ldr	r2, [r5, #4]
 135:Src/can_encos.cpp ****                         }
 594              		.loc 1 135 41 view .LVU205
ARM GAS  /tmp/ccoeQSfh.s 			page 21


 595 018a 8449     		ldr	r1, .L41+4
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 596              		.loc 1 129 41 view .LVU206
 597 018c 92F87420 		ldrb	r2, [r2, #116]	@ zero_extendqisi2
 135:Src/can_encos.cpp ****                         }
 598              		.loc 1 135 41 view .LVU207
 599 0190 0868     		ldr	r0, [r1]
 130:Src/can_encos.cpp ****                             txmsg.buf[0] = axis->config_.can_node_id >> 8;
 600              		.loc 1 130 39 view .LVU208
 601 0192 4FF00403 		mov	r3, #4
 602 0196 8DF80630 		strb	r3, [sp, #6]
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 603              		.loc 1 131 58 view .LVU209
 604 019a 6B68     		ldr	r3, [r5, #4]
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 605              		.loc 1 131 70 view .LVU210
 606 019c 1B6F     		ldr	r3, [r3, #112]
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 607              		.loc 1 129 41 view .LVU211
 608 019e 8DF80420 		strb	r2, [sp, #4]
 130:Src/can_encos.cpp ****                             txmsg.buf[0] = axis->config_.can_node_id >> 8;
 609              		.loc 1 130 29 is_stmt 1 view .LVU212
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 610              		.loc 1 131 29 view .LVU213
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 611              		.loc 1 131 70 is_stmt 0 view .LVU214
 612 01a2 4FEA1323 		lsr	r3, r3, #8
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 613              		.loc 1 131 42 view .LVU215
 614 01a6 8DF80730 		strb	r3, [sp, #7]
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 615              		.loc 1 132 29 is_stmt 1 view .LVU216
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 616              		.loc 1 132 58 is_stmt 0 view .LVU217
 617 01aa 6B68     		ldr	r3, [r5, #4]
 135:Src/can_encos.cpp ****                         }
 618              		.loc 1 135 41 view .LVU218
 619 01ac 2146     		mov	r1, r4
 133:Src/can_encos.cpp ****                             txmsg.buf[3] = success ? 3 : 0;
 620              		.loc 1 133 42 view .LVU219
 621 01ae 4FF00102 		mov	r2, #1
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 622              		.loc 1 132 42 view .LVU220
 623 01b2 1C6F     		ldr	r4, [r3, #112]
 624 01b4 8DF80840 		strb	r4, [sp, #8]
 133:Src/can_encos.cpp ****                             txmsg.buf[3] = success ? 3 : 0;
 625              		.loc 1 133 29 is_stmt 1 view .LVU221
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 626              		.loc 1 134 42 is_stmt 0 view .LVU222
 627 01b8 14BF     		ite	ne
 628 01ba 0323     		movne	r3, #3
 629 01bc 0023     		moveq	r3, #0
 133:Src/can_encos.cpp ****                             txmsg.buf[3] = success ? 3 : 0;
 630              		.loc 1 133 42 view .LVU223
 631 01be 8DF80920 		strb	r2, [sp, #9]
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 632              		.loc 1 134 29 is_stmt 1 view .LVU224
ARM GAS  /tmp/ccoeQSfh.s 			page 22


 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 633              		.loc 1 134 42 is_stmt 0 view .LVU225
 634 01c2 8DF80A30 		strb	r3, [sp, #10]
 135:Src/can_encos.cpp ****                         }
 635              		.loc 1 135 29 is_stmt 1 view .LVU226
 135:Src/can_encos.cpp ****                         }
 636              		.loc 1 135 41 is_stmt 0 view .LVU227
 637 01c6 FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 638              	.LVL32:
 639              	.LBE95:
 640 01ca 31E7     		b	.L6
 641              	.LVL33:
 642              	.L34:
 135:Src/can_encos.cpp ****                         }
 643              		.loc 1 135 41 view .LVU228
 644              	.LBE94:
 645              	.LBE98:
 646              	.LBE100:
 647              	.LBE104:
 648              	.LBE114:
 649              	.LBB115:
 195:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 650              		.loc 1 195 39 discriminator 1 view .LVU229
 651 01cc A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 195:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 652              		.loc 1 195 32 discriminator 1 view .LVU230
 653 01ce 0229     		cmp	r1, #2
 654 01d0 7FF62EAF 		bls	.L6
 655              	.LBB42:
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 656              		.loc 1 196 9 is_stmt 1 view .LVU231
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 657              		.loc 1 196 33 is_stmt 0 view .LVU232
 658 01d4 94F807C0 		ldrb	ip, [r4, #7]	@ zero_extendqisi2
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 659              		.loc 1 196 52 view .LVU233
 660 01d8 277A     		ldrb	r7, [r4, #8]	@ zero_extendqisi2
 661              	.LVL34:
 197:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 662              		.loc 1 197 9 is_stmt 1 view .LVU234
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 663              		.loc 1 196 41 is_stmt 0 view .LVU235
 664 01da 07EB0C20 		add	r0, r7, ip, lsl #8
 665              	.LVL35:
 666              	.LBB43:
 197:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 667              		.loc 1 197 9 view .LVU236
 668 01de 8242     		cmp	r2, r0
 669 01e0 7FF426AF 		bne	.L6
 670              	.LBB44:
 198:Src/can_encos.cpp ****             bool success = false;
 671              		.loc 1 198 13 is_stmt 1 view .LVU237
 198:Src/can_encos.cpp ****             bool success = false;
 672              		.loc 1 198 21 is_stmt 0 view .LVU238
 673 01e4 94F809E0 		ldrb	lr, [r4, #9]	@ zero_extendqisi2
 674              	.LVL36:
 199:Src/can_encos.cpp **** 
ARM GAS  /tmp/ccoeQSfh.s 			page 23


 675              		.loc 1 199 13 is_stmt 1 view .LVU239
 201:Src/can_encos.cpp ****                     save_configuration();
 676              		.loc 1 201 13 view .LVU240
 677              	.LBB45:
 678 01e8 BEF1FF0F 		cmp	lr, #255
 679 01ec 00F09480 		beq	.L38
 680              	.LBE45:
 681              	.LBE44:
 682              	.LBE43:
 683              	.LBE42:
 684              	.LBE115:
 685              	.LBE138:
 686              	.LBE157:
 204:Src/can_encos.cpp ****                 if (7 == msg.len){
 687              		.loc 1 204 20 view .LVU241
 688              	.LBB158:
 689              	.LBB139:
 690              	.LBB116:
 691              	.LBB68:
 692              	.LBB64:
 693              	.LBB60:
 694              	.LBB54:
 695              	.LBB46:
 696 01f0 1EF0800F 		tst	lr, #128
 697 01f4 02D1     		bne	.L27
 698              	.LBE46:
 699              	.LBE54:
 700              	.LBE60:
 701              	.LBE64:
 702              	.LBE68:
 703              	.LBE116:
 704              	.LBE139:
 705              	.LBE158:
 205:Src/can_encos.cpp ****                     uint32_t value = (msg.buf[3] << 24) + (msg.buf[4] << 16) + (msg.buf[5] << 8) + 
 706              		.loc 1 205 17 view .LVU242
 707              	.LBB159:
 708              	.LBB140:
 709              	.LBB117:
 710              	.LBB69:
 711              	.LBB65:
 712              	.LBB61:
 713              	.LBB55:
 714              	.LBB51:
 715              	.LBB47:
 716 01f6 0729     		cmp	r1, #7
 717 01f8 00F0B580 		beq	.L39
 718              	.L27:
 719 01fc 4FF00008 		mov	r8, #0
 720              	.LVL37:
 721              	.L23:
 205:Src/can_encos.cpp ****                     uint32_t value = (msg.buf[3] << 24) + (msg.buf[4] << 16) + (msg.buf[5] << 8) + 
 722              		.loc 1 205 17 is_stmt 0 view .LVU243
 723              	.LBE47:
 724              	.LBE51:
 725              	.LBE55:
 213:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 726              		.loc 1 213 13 is_stmt 1 discriminator 17 view .LVU244
ARM GAS  /tmp/ccoeQSfh.s 			page 24


 213:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 727              		.loc 1 213 27 is_stmt 0 discriminator 17 view .LVU245
 728 0200 654B     		ldr	r3, .L41
 221:Src/can_encos.cpp ****         }
 729              		.loc 1 221 25 discriminator 17 view .LVU246
 730 0202 DFF89891 		ldr	r9, .L41+4
 213:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 731              		.loc 1 213 27 discriminator 17 view .LVU247
 732 0206 0FCB     		ldm	r3, {r0, r1, r2, r3}
 733 0208 6C46     		mov	r4, sp
 734              	.LVL38:
 213:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 735              		.loc 1 213 27 discriminator 17 view .LVU248
 736 020a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 214:Src/can_encos.cpp ****             txmsg.isExt = axis->config_.can_node_id_extended;
 737              		.loc 1 214 13 is_stmt 1 discriminator 17 view .LVU249
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 738              		.loc 1 215 41 is_stmt 0 discriminator 17 view .LVU250
 739 020e 7368     		ldr	r3, [r6, #4]
 221:Src/can_encos.cpp ****         }
 740              		.loc 1 221 25 discriminator 17 view .LVU251
 741 0210 D9F80000 		ldr	r0, [r9]
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 742              		.loc 1 215 25 discriminator 17 view .LVU252
 743 0214 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 744 0218 8DF80430 		strb	r3, [sp, #4]
 214:Src/can_encos.cpp ****             txmsg.isExt = axis->config_.can_node_id_extended;
 745              		.loc 1 214 22 discriminator 17 view .LVU253
 746 021c 40F2FE7A 		movw	r10, #2046
 216:Src/can_encos.cpp ****             txmsg.buf[0] = msg.buf[0];
 747              		.loc 1 216 23 discriminator 17 view .LVU254
 748 0220 0425     		movs	r5, #4
 749              	.LVL39:
 221:Src/can_encos.cpp ****         }
 750              		.loc 1 221 25 discriminator 17 view .LVU255
 751 0222 2146     		mov	r1, r4
 214:Src/can_encos.cpp ****             txmsg.isExt = axis->config_.can_node_id_extended;
 752              		.loc 1 214 22 discriminator 17 view .LVU256
 753 0224 CDF800A0 		str	r10, [sp]
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 754              		.loc 1 215 13 is_stmt 1 discriminator 17 view .LVU257
 216:Src/can_encos.cpp ****             txmsg.buf[0] = msg.buf[0];
 755              		.loc 1 216 13 discriminator 17 view .LVU258
 216:Src/can_encos.cpp ****             txmsg.buf[0] = msg.buf[0];
 756              		.loc 1 216 23 is_stmt 0 discriminator 17 view .LVU259
 757 0228 8DF80650 		strb	r5, [sp, #6]
 217:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 758              		.loc 1 217 13 is_stmt 1 discriminator 17 view .LVU260
 217:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 759              		.loc 1 217 26 is_stmt 0 discriminator 17 view .LVU261
 760 022c 8DF807C0 		strb	ip, [sp, #7]
 218:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 761              		.loc 1 218 13 is_stmt 1 discriminator 17 view .LVU262
 218:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 762              		.loc 1 218 26 is_stmt 0 discriminator 17 view .LVU263
 763 0230 8DF80870 		strb	r7, [sp, #8]
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
ARM GAS  /tmp/ccoeQSfh.s 			page 25


 764              		.loc 1 219 13 is_stmt 1 discriminator 17 view .LVU264
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 765              		.loc 1 219 26 is_stmt 0 discriminator 17 view .LVU265
 766 0234 8DF809E0 		strb	lr, [sp, #9]
 220:Src/can_encos.cpp ****             odCAN->write(txmsg);
 767              		.loc 1 220 13 is_stmt 1 discriminator 17 view .LVU266
 220:Src/can_encos.cpp ****             odCAN->write(txmsg);
 768              		.loc 1 220 26 is_stmt 0 discriminator 17 view .LVU267
 769 0238 8DF80A80 		strb	r8, [sp, #10]
 221:Src/can_encos.cpp ****         }
 770              		.loc 1 221 13 is_stmt 1 discriminator 17 view .LVU268
 221:Src/can_encos.cpp ****         }
 771              		.loc 1 221 25 is_stmt 0 discriminator 17 view .LVU269
 772 023c FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 773              	.LVL40:
 774              	.LBE61:
 775              	.LBE65:
 776              	.LBE69:
 777              	.LBE117:
 778              	.LBE140:
 779              	.LBE159:
 780              		.loc 1 224 1 discriminator 17 view .LVU270
 781 0240 F6E6     		b	.L6
 782              	.LVL41:
 783              	.L8:
  55:Src/can_encos.cpp ****             {
 784              		.loc 1 55 9 is_stmt 1 view .LVU271
  56:Src/can_encos.cpp ****                 encos_curr_brake_cmd_t *cmd = (encos_curr_brake_cmd_t *)&(msg.buf[0]);
 785              		.loc 1 56 13 view .LVU272
 786              	.LBB160:
 787              	.LBB141:
 788              	.LBB133:
  57:Src/can_encos.cpp ****                 switch (cmd->mode) {
 789              		.loc 1 57 17 view .LVU273
  58:Src/can_encos.cpp ****                 case 3:// 手册描述能耗制动，但实际测试用来设置电流
 790              		.loc 1 58 17 view .LVU274
  58:Src/can_encos.cpp ****                 case 3:// 手册描述能耗制动，但实际测试用来设置电流
 791              		.loc 1 58 30 is_stmt 0 view .LVU275
 792 0242 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 793 0244 5A09     		lsrs	r2, r3, #5
 794 0246 032A     		cmp	r2, #3
 795 0248 5CD0     		beq	.L40
 796              	.LVL42:
 797              	.L11:
  64:Src/can_encos.cpp ****                 case 1:
 798              		.loc 1 64 17 is_stmt 1 discriminator 1 view .LVU276
 799 024a 03F00303 		and	r3, r3, #3
 800 024e 012B     		cmp	r3, #1
 801 0250 7FF4EEAE 		bne	.L6
  65:Src/can_encos.cpp ****                     encos_ack_type_1(axis);
 802              		.loc 1 65 17 view .LVU277
  66:Src/can_encos.cpp ****                     break;
 803              		.loc 1 66 21 view .LVU278
  66:Src/can_encos.cpp ****                     break;
 804              		.loc 1 66 37 is_stmt 0 view .LVU279
 805 0254 2846     		mov	r0, r5
 806              	.LBE133:
ARM GAS  /tmp/ccoeQSfh.s 			page 26


 807              	.LBE141:
 808              	.LBE160:
 809              		.loc 1 224 1 view .LVU280
 810 0256 04B0     		add	sp, sp, #16
 811              	.LCFI7:
 812              		.cfi_remember_state
 813              		.cfi_def_cfa_offset 32
 814              		@ sp needed
 815 0258 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 816              	.LCFI8:
 817              		.cfi_restore 14
 818              		.cfi_restore 10
 819              		.cfi_restore 9
 820              		.cfi_restore 8
 821              		.cfi_restore 7
 822              		.cfi_restore 6
 823              		.cfi_restore 5
 824              		.cfi_restore 4
 825              		.cfi_def_cfa_offset 0
 826              	.LVL43:
 827              	.LBB161:
 828              	.LBB142:
 829              	.LBB134:
  66:Src/can_encos.cpp ****                     break;
 830              		.loc 1 66 37 view .LVU281
 831 025c FFF7FEBF 		b	_Z16encos_ack_type_1RP4Axis
 832              	.LVL44:
 833              	.L36:
 834              	.LCFI9:
 835              		.cfi_restore_state
  66:Src/can_encos.cpp ****                     break;
 836              		.loc 1 66 37 view .LVU282
 837              	.LBE134:
 838              	.LBE142:
 839              	.LBB143:
 840              	.LBB118:
 841              	.LBB105:
  95:Src/can_encos.cpp ****                     uint32_t id;
 842              		.loc 1 95 84 discriminator 1 view .LVU283
 843 0260 A368     		ldr	r3, [r4, #8]
 844 0262 4F48     		ldr	r0, .L41+8
 845              	.LVL45:
  95:Src/can_encos.cpp ****                     uint32_t id;
 846              		.loc 1 95 84 discriminator 1 view .LVU284
 847 0264 23F07F43 		bic	r3, r3, #-16777216
 848 0268 8342     		cmp	r3, r0
 849 026a 7FF46DAF 		bne	.L17
 850              	.LBB101:
  96:Src/can_encos.cpp ****                     bool success = axis->get_nodeID(id);
 851              		.loc 1 96 21 is_stmt 1 view .LVU285
  97:Src/can_encos.cpp ****                     can_Message_t txmsg;
 852              		.loc 1 97 21 view .LVU286
 853              	.LVL46:
  97:Src/can_encos.cpp ****                     can_Message_t txmsg;
 854              		.loc 1 97 21 is_stmt 0 view .LVU287
 855              	.LBE101:
 856              	.LBE105:
ARM GAS  /tmp/ccoeQSfh.s 			page 27


 857              	.LBE118:
 858              	.LBE143:
 859              	.LBE161:
 161:Inc/axis.hpp  **** }
 162:Inc/axis.hpp  **** bool get_nodeID(uint32_t &id) { id = config_.can_node_id; return true; };
 860              		.loc 2 162 33 is_stmt 1 view .LVU288
 861              		.loc 2 162 59 view .LVU289
 862              	.LBB162:
 863              	.LBB144:
 864              	.LBB119:
 865              	.LBB106:
 866              	.LBB102:
  98:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 867              		.loc 1 98 21 view .LVU290
  98:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 868              		.loc 1 98 35 is_stmt 0 view .LVU291
 869 026e 4A4B     		ldr	r3, .L41
 115:Src/can_encos.cpp ****                 } else {
 870              		.loc 1 115 33 view .LVU292
 871 0270 DFF828E1 		ldr	lr, .L41+4
 102:Src/can_encos.cpp ****                         txmsg.buf[0] = 0xFF;
 872              		.loc 1 102 35 view .LVU293
 873 0274 4B4D     		ldr	r5, .L41+12
 874              	.LVL47:
  98:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 875              		.loc 1 98 35 view .LVU294
 876 0276 0FCB     		ldm	r3, {r0, r1, r2, r3}
 877              	.LVL48:
  98:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 878              		.loc 1 98 35 view .LVU295
 879 0278 6C46     		mov	r4, sp
 880              	.LVL49:
  98:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 881              		.loc 1 98 35 view .LVU296
 882 027a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 883              	.LVL50:
  99:Src/can_encos.cpp ****                     txmsg.isExt = axis->config_.can_node_id_extended;
 884              		.loc 1 99 21 is_stmt 1 view .LVU297
 100:Src/can_encos.cpp ****                     if (success) {
 885              		.loc 1 100 49 is_stmt 0 view .LVU298
 886 027e 7368     		ldr	r3, [r6, #4]
 115:Src/can_encos.cpp ****                 } else {
 887              		.loc 1 115 33 view .LVU299
 888 0280 DEF80000 		ldr	r0, [lr]
 100:Src/can_encos.cpp ****                     if (success) {
 889              		.loc 1 100 33 view .LVU300
 890 0284 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
  99:Src/can_encos.cpp ****                     txmsg.isExt = axis->config_.can_node_id_extended;
 891              		.loc 1 99 30 view .LVU301
 892 0288 0097     		str	r7, [sp]
 100:Src/can_encos.cpp ****                     if (success) {
 893              		.loc 1 100 21 is_stmt 1 view .LVU302
 115:Src/can_encos.cpp ****                 } else {
 894              		.loc 1 115 33 is_stmt 0 view .LVU303
 895 028a 2146     		mov	r1, r4
 100:Src/can_encos.cpp ****                     if (success) {
 896              		.loc 1 100 33 view .LVU304
ARM GAS  /tmp/ccoeQSfh.s 			page 28


 897 028c 8DF80430 		strb	r3, [sp, #4]
 101:Src/can_encos.cpp ****                         txmsg.len = 5;
 898              		.loc 1 101 21 is_stmt 1 view .LVU305
 102:Src/can_encos.cpp ****                         txmsg.buf[0] = 0xFF;
 899              		.loc 1 102 25 view .LVU306
 103:Src/can_encos.cpp ****                         txmsg.buf[1] = 0xFF;
 900              		.loc 1 103 25 view .LVU307
 104:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 901              		.loc 1 104 25 view .LVU308
 105:Src/can_encos.cpp ****                         txmsg.buf[3] = id >> 8;
 902              		.loc 1 105 25 view .LVU309
 102:Src/can_encos.cpp ****                         txmsg.buf[0] = 0xFF;
 903              		.loc 1 102 35 is_stmt 0 view .LVU310
 904 0290 CDF80650 		str	r5, [sp, #6]	@ unaligned
 106:Src/can_encos.cpp ****                         txmsg.buf[4] = id & 0xFF;
 905              		.loc 1 106 25 is_stmt 1 view .LVU311
 107:Src/can_encos.cpp ****                     } else {
 906              		.loc 1 107 25 view .LVU312
 106:Src/can_encos.cpp ****                         txmsg.buf[4] = id & 0xFF;
 907              		.loc 1 106 38 is_stmt 0 view .LVU313
 908 0294 ADF80AC0 		strh	ip, [sp, #10]	@ movhi
 115:Src/can_encos.cpp ****                 } else {
 909              		.loc 1 115 21 is_stmt 1 view .LVU314
 115:Src/can_encos.cpp ****                 } else {
 910              		.loc 1 115 33 is_stmt 0 view .LVU315
 911 0298 FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 912              	.LVL51:
 115:Src/can_encos.cpp ****                 } else {
 913              		.loc 1 115 33 view .LVU316
 914              	.LBE102:
 115:Src/can_encos.cpp ****                 } else {
 915              		.loc 1 115 40 view .LVU317
 916 029c C8E6     		b	.L6
 917              	.LVL52:
 918              	.L35:
 115:Src/can_encos.cpp ****                 } else {
 919              		.loc 1 115 40 view .LVU318
 920              	.LBE106:
 921              	.LBB107:
 143:Src/can_encos.cpp ****                     // 重置ID为1
 922              		.loc 1 143 100 discriminator 1 view .LVU319
 923 029e DFF808C1 		ldr	ip, .L41+16
 924 02a2 A068     		ldr	r0, [r4, #8]
 925              	.LVL53:
 143:Src/can_encos.cpp ****                     // 重置ID为1
 926              		.loc 1 143 100 discriminator 1 view .LVU320
 927 02a4 6045     		cmp	r0, ip
 928 02a6 7FF4D0AE 		bne	.L20
 143:Src/can_encos.cpp ****                     // 重置ID为1
 929              		.loc 1 143 122 discriminator 2 view .LVU321
 930 02aa 247B     		ldrb	r4, [r4, #12]	@ zero_extendqisi2
 931              	.LVL54:
 143:Src/can_encos.cpp ****                     // 重置ID为1
 932              		.loc 1 143 122 discriminator 2 view .LVU322
 933 02ac 7F2C     		cmp	r4, #127
 934 02ae 7FF4BFAE 		bne	.L6
 935              	.LBE107:
ARM GAS  /tmp/ccoeQSfh.s 			page 29


 936              	.LBE119:
 937              	.LBE144:
 938              	.LBE162:
 145:Src/can_encos.cpp ****                         save_configuration();
 939              		.loc 1 145 21 is_stmt 1 view .LVU323
 940              	.LVL55:
 941              	.LBB163:
 942              	.LBB145:
 943              	.LBB120:
 944              	.LBB108:
 945              	.LBB85:
 946              	.LBB86:
 947              	.LBI86:
 156:Inc/axis.hpp  ****     if(current_state_ != AXIS_STATE_IDLE)
 948              		.loc 2 156 6 view .LVU324
 949              	.LBB87:
 157:Inc/axis.hpp  ****         return false;
 950              		.loc 2 157 5 view .LVU325
 157:Inc/axis.hpp  ****         return false;
 951              		.loc 2 157 8 is_stmt 0 view .LVU326
 952 02b2 D6F88C21 		ldr	r2, [r6, #396]
 157:Inc/axis.hpp  ****         return false;
 953              		.loc 2 157 5 view .LVU327
 954 02b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 955 02b8 012A     		cmp	r2, #1
 956 02ba 7FF4B9AE 		bne	.L6
 159:Inc/axis.hpp  ****     return true; 
 957              		.loc 2 159 5 is_stmt 1 view .LVU328
 159:Inc/axis.hpp  ****     return true; 
 958              		.loc 2 159 25 is_stmt 0 view .LVU329
 959 02be 1A67     		str	r2, [r3, #112]
 160:Inc/axis.hpp  **** }
 960              		.loc 2 160 5 is_stmt 1 view .LVU330
 961              	.LVL56:
 160:Inc/axis.hpp  **** }
 962              		.loc 2 160 5 is_stmt 0 view .LVU331
 963              	.LBE87:
 964              	.LBE86:
 965              	.LBB88:
 146:Src/can_encos.cpp ****                         can_Message_t txmsg;
 966              		.loc 1 146 25 is_stmt 1 view .LVU332
 146:Src/can_encos.cpp ****                         can_Message_t txmsg;
 967              		.loc 1 146 43 is_stmt 0 view .LVU333
 968 02c0 FFF7FEFF 		bl	_Z18save_configurationv
 969              	.LVL57:
 147:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 970              		.loc 1 147 25 is_stmt 1 view .LVU334
 147:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 971              		.loc 1 147 39 is_stmt 0 view .LVU335
 972 02c4 344B     		ldr	r3, .L41
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 973              		.loc 1 149 45 view .LVU336
 974 02c6 D5F800E0 		ldr	lr, [r5]
 157:Src/can_encos.cpp ****                     }
 975              		.loc 1 157 37 view .LVU337
 976 02ca DFF8D080 		ldr	r8, .L41+4
 150:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x7F;
ARM GAS  /tmp/ccoeQSfh.s 			page 30


 977              		.loc 1 150 35 view .LVU338
 978 02ce DFF8DCC0 		ldr	ip, .L41+20
 147:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 979              		.loc 1 147 39 view .LVU339
 980 02d2 0FCB     		ldm	r3, {r0, r1, r2, r3}
 981 02d4 6E46     		mov	r6, sp
 982 02d6 86E80F00 		stm	r6, {r0, r1, r2, r3}
 148:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 983              		.loc 1 148 25 is_stmt 1 view .LVU340
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 984              		.loc 1 149 53 is_stmt 0 view .LVU341
 985 02da DEF80430 		ldr	r3, [lr, #4]
 157:Src/can_encos.cpp ****                     }
 986              		.loc 1 157 37 view .LVU342
 987 02de D8F80000 		ldr	r0, [r8]
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 988              		.loc 1 149 37 view .LVU343
 989 02e2 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 148:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 990              		.loc 1 148 34 view .LVU344
 991 02e6 0097     		str	r7, [sp]
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 992              		.loc 1 149 25 is_stmt 1 view .LVU345
 154:Src/can_encos.cpp ****                         txmsg.buf[4] = 0x7F;
 993              		.loc 1 154 38 is_stmt 0 view .LVU346
 994 02e8 47F60575 		movw	r5, #32517
 995              	.LVL58:
 157:Src/can_encos.cpp ****                     }
 996              		.loc 1 157 37 view .LVU347
 997 02ec 3146     		mov	r1, r6
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 998              		.loc 1 149 37 view .LVU348
 999 02ee 8DF80430 		strb	r3, [sp, #4]
 150:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x7F;
 1000              		.loc 1 150 25 is_stmt 1 view .LVU349
 151:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x7F;
 1001              		.loc 1 151 25 view .LVU350
 152:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 1002              		.loc 1 152 25 view .LVU351
 153:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x05;
 1003              		.loc 1 153 25 view .LVU352
 154:Src/can_encos.cpp ****                         txmsg.buf[4] = 0x7F;
 1004              		.loc 1 154 25 view .LVU353
 155:Src/can_encos.cpp ****                         txmsg.buf[5] = 0x7F;
 1005              		.loc 1 155 25 view .LVU354
 156:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 1006              		.loc 1 156 25 view .LVU355
 150:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x7F;
 1007              		.loc 1 150 35 is_stmt 0 view .LVU356
 1008 02f2 CDF806C0 		str	ip, [sp, #6]	@ unaligned
 154:Src/can_encos.cpp ****                         txmsg.buf[4] = 0x7F;
 1009              		.loc 1 154 38 view .LVU357
 1010 02f6 ADF80A50 		strh	r5, [sp, #10]	@ movhi
 156:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 1011              		.loc 1 156 38 view .LVU358
 1012 02fa 8DF80C40 		strb	r4, [sp, #12]
 157:Src/can_encos.cpp ****                     }
ARM GAS  /tmp/ccoeQSfh.s 			page 31


 1013              		.loc 1 157 25 is_stmt 1 view .LVU359
 157:Src/can_encos.cpp ****                     }
 1014              		.loc 1 157 37 is_stmt 0 view .LVU360
 1015 02fe FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 1016              	.LVL59:
 1017              	.LBE88:
 1018 0302 95E6     		b	.L6
 1019              	.LVL60:
 1020              	.L40:
 157:Src/can_encos.cpp ****                     }
 1021              		.loc 1 157 37 view .LVU361
 1022              	.LBE85:
 1023              	.LBE108:
 1024              	.LBE120:
 1025              	.LBE145:
 1026              	.LBB146:
 1027              	.LBB135:
  59:Src/can_encos.cpp ****                     axis->set_axis_current((msg.buf[1] << 8) + msg.buf[2]);
 1028              		.loc 1 59 17 is_stmt 1 view .LVU362
  60:Src/can_encos.cpp ****                     break;
 1029              		.loc 1 60 21 view .LVU363
  60:Src/can_encos.cpp ****                     break;
 1030              		.loc 1 60 54 is_stmt 0 view .LVU364
 1031 0304 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
  60:Src/can_encos.cpp ****                     break;
 1032              		.loc 1 60 73 view .LVU365
 1033 0306 497A     		ldrb	r1, [r1, #9]	@ zero_extendqisi2
 1034              	.LVL61:
  60:Src/can_encos.cpp ****                     break;
 1035              		.loc 1 60 62 view .LVU366
 1036 0308 01EB0321 		add	r1, r1, r3, lsl #8
  60:Src/can_encos.cpp ****                     break;
 1037              		.loc 1 60 43 view .LVU367
 1038 030c 3046     		mov	r0, r6
 1039              	.LVL62:
  60:Src/can_encos.cpp ****                     break;
 1040              		.loc 1 60 43 view .LVU368
 1041 030e 09B2     		sxth	r1, r1
 1042 0310 FFF7FEFF 		bl	_ZN4Axis16set_axis_currentEs
 1043              	.LVL63:
  61:Src/can_encos.cpp ****                 }
 1044              		.loc 1 61 21 is_stmt 1 view .LVU369
 1045 0314 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 1046 0316 98E7     		b	.L11
 1047              	.LVL64:
 1048              	.L38:
  61:Src/can_encos.cpp ****                 }
 1049              		.loc 1 61 21 is_stmt 0 view .LVU370
 1050              	.LBE135:
 1051              	.LBE146:
 1052              	.LBB147:
 1053              	.LBB121:
 1054              	.LBB70:
 1055              	.LBB66:
 1056              	.LBB62:
 1057              	.LBB56:
 202:Src/can_encos.cpp ****                 success = true;
ARM GAS  /tmp/ccoeQSfh.s 			page 32


 1058              		.loc 1 202 21 is_stmt 1 view .LVU371
 202:Src/can_encos.cpp ****                 success = true;
 1059              		.loc 1 202 39 is_stmt 0 view .LVU372
 1060 0318 FFF7FEFF 		bl	_Z18save_configurationv
 1061              	.LVL65:
 203:Src/can_encos.cpp ****             } else if (index < sizeof(axis->config_.ext_cfg) / sizeof(axis->config_.ext_cfg[0])) {
 1062              		.loc 1 203 17 is_stmt 1 view .LVU373
 203:Src/can_encos.cpp ****             } else if (index < sizeof(axis->config_.ext_cfg) / sizeof(axis->config_.ext_cfg[0])) {
 1063              		.loc 1 203 17 is_stmt 0 view .LVU374
 1064 031c 4FF00108 		mov	r8, #1
 1065              	.LBE56:
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 1066              		.loc 1 215 27 view .LVU375
 1067 0320 2E68     		ldr	r6, [r5]
 217:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 1068              		.loc 1 217 37 view .LVU376
 1069 0322 94F807C0 		ldrb	ip, [r4, #7]	@ zero_extendqisi2
 218:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 1070              		.loc 1 218 37 view .LVU377
 1071 0326 277A     		ldrb	r7, [r4, #8]	@ zero_extendqisi2
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1072              		.loc 1 219 37 view .LVU378
 1073 0328 94F809E0 		ldrb	lr, [r4, #9]	@ zero_extendqisi2
 1074              	.LBB57:
 1075 032c 68E7     		b	.L23
 1076              	.LVL66:
 1077              	.L21:
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1078              		.loc 1 219 37 view .LVU379
 1079              	.LBE57:
 1080              	.LBE62:
 1081              	.LBE66:
 1082              	.LBE70:
 1083              	.LBE121:
 1084              	.LBB122:
 1085              	.LBB109:
 1086              	.LBB89:
 1087              	.LBB83:
 1088              	.LBB81:
 1089              	.LBB80:
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 1090              		.loc 1 174 25 is_stmt 1 view .LVU380
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 1091              		.loc 1 174 39 is_stmt 0 view .LVU381
 1092 032e 1A4B     		ldr	r3, .L41
 1093 0330 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1094 0332 6C46     		mov	r4, sp
 1095              	.LVL67:
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 1096              		.loc 1 174 39 view .LVU382
 1097 0334 84E80F00 		stm	r4, {r0, r1, r2, r3}
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 1098              		.loc 1 175 25 is_stmt 1 view .LVU383
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1099              		.loc 1 176 53 is_stmt 0 view .LVU384
 1100 0338 7368     		ldr	r3, [r6, #4]
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
ARM GAS  /tmp/ccoeQSfh.s 			page 33


 1101              		.loc 1 175 34 view .LVU385
 1102 033a 40F2FF78 		movw	r8, #2047
 1103              	.LVL68:
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1104              		.loc 1 176 37 view .LVU386
 1105 033e 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 1106              		.loc 1 175 34 view .LVU387
 1107 0342 CDF80080 		str	r8, [sp]
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1108              		.loc 1 176 25 is_stmt 1 view .LVU388
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 1109              		.loc 1 177 35 is_stmt 0 view .LVU389
 1110 0346 4FF0040E 		mov	lr, #4
 178:Src/can_encos.cpp ****                         if (success) {
 1111              		.loc 1 178 38 view .LVU390
 1112 034a 4FF0010C 		mov	ip, #1
 184:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 1113              		.loc 1 184 47 view .LVU391
 1114 034e 3D0A     		lsrs	r5, r7, #8
 1115              	.LVL69:
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1116              		.loc 1 176 37 view .LVU392
 1117 0350 8DF80430 		strb	r3, [sp, #4]
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 1118              		.loc 1 177 25 is_stmt 1 view .LVU393
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 1119              		.loc 1 177 35 is_stmt 0 view .LVU394
 1120 0354 8DF806E0 		strb	lr, [sp, #6]
 178:Src/can_encos.cpp ****                         if (success) {
 1121              		.loc 1 178 25 is_stmt 1 view .LVU395
 178:Src/can_encos.cpp ****                         if (success) {
 1122              		.loc 1 178 38 is_stmt 0 view .LVU396
 1123 0358 8DF809C0 		strb	ip, [sp, #9]
 179:Src/can_encos.cpp ****                             txmsg.buf[0] = new_id >> 8;
 1124              		.loc 1 179 25 is_stmt 1 view .LVU397
 184:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 1125              		.loc 1 184 29 view .LVU398
 184:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 1126              		.loc 1 184 42 is_stmt 0 view .LVU399
 1127 035c 8DF80750 		strb	r5, [sp, #7]
 185:Src/can_encos.cpp ****                             txmsg.buf[3] = 0;
 1128              		.loc 1 185 29 is_stmt 1 view .LVU400
 185:Src/can_encos.cpp ****                             txmsg.buf[3] = 0;
 1129              		.loc 1 185 42 is_stmt 0 view .LVU401
 1130 0360 8DF80870 		strb	r7, [sp, #8]
 186:Src/can_encos.cpp ****                         }
 1131              		.loc 1 186 29 is_stmt 1 view .LVU402
 1132 0364 B2E6     		b	.L24
 1133              	.LVL70:
 1134              	.L39:
 186:Src/can_encos.cpp ****                         }
 1135              		.loc 1 186 29 is_stmt 0 view .LVU403
 1136              	.LBE80:
 1137              	.LBE81:
 1138              	.LBE83:
 1139              	.LBE89:
ARM GAS  /tmp/ccoeQSfh.s 			page 34


 1140              	.LBE109:
 1141              	.LBE122:
 1142              	.LBB123:
 1143              	.LBB71:
 1144              	.LBB67:
 1145              	.LBB63:
 1146              	.LBB58:
 1147              	.LBB52:
 1148              	.LBB49:
 1149              	.LBB48:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1150              		.loc 1 206 21 is_stmt 1 view .LVU404
 207:Src/can_encos.cpp ****                     success = true;
 1151              		.loc 1 207 21 view .LVU405
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1152              		.loc 1 206 69 is_stmt 0 view .LVU406
 1153 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 1154              	.LVL71:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1155              		.loc 1 206 48 view .LVU407
 1156 0368 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 1157              	.LVL72:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1158              		.loc 1 206 71 view .LVU408
 1159 036a 1204     		lsls	r2, r2, #16
 1160              	.LVL73:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1161              		.loc 1 206 57 view .LVU409
 1162 036c 02EB0162 		add	r2, r2, r1, lsl #24
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1163              		.loc 1 206 90 view .LVU410
 1164 0370 217B     		ldrb	r1, [r4, #12]	@ zero_extendqisi2
 1165              	.LVL74:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1166              		.loc 1 206 78 view .LVU411
 1167 0372 02EB0122 		add	r2, r2, r1, lsl #8
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1168              		.loc 1 206 109 view .LVU412
 1169 0376 617B     		ldrb	r1, [r4, #13]	@ zero_extendqisi2
 207:Src/can_encos.cpp ****                     success = true;
 1170              		.loc 1 207 50 view .LVU413
 1171 0378 0EF1200E 		add	lr, lr, #32
 1172              	.LVL75:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1173              		.loc 1 206 98 view .LVU414
 1174 037c 0A44     		add	r2, r2, r1
 207:Src/can_encos.cpp ****                     success = true;
 1175              		.loc 1 207 50 view .LVU415
 1176 037e 43F82E20 		str	r2, [r3, lr, lsl #2]
 1177              	.LVL76:
 208:Src/can_encos.cpp **** 
 1178              		.loc 1 208 21 is_stmt 1 view .LVU416
 208:Src/can_encos.cpp **** 
 1179              		.loc 1 208 21 is_stmt 0 view .LVU417
 1180              	.LBE48:
 1181 0382 4FF00108 		mov	r8, #1
 1182              	.LBE49:
ARM GAS  /tmp/ccoeQSfh.s 			page 35


 1183              	.LBE52:
 1184              	.LBE58:
 217:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 1185              		.loc 1 217 37 view .LVU418
 1186 0386 94F807C0 		ldrb	ip, [r4, #7]	@ zero_extendqisi2
 1187              	.LVL77:
 218:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 1188              		.loc 1 218 37 view .LVU419
 1189 038a 277A     		ldrb	r7, [r4, #8]	@ zero_extendqisi2
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1190              		.loc 1 219 37 view .LVU420
 1191 038c 94F809E0 		ldrb	lr, [r4, #9]	@ zero_extendqisi2
 1192              	.LVL78:
 1193              	.LBB59:
 1194              	.LBB53:
 1195              	.LBB50:
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1196              		.loc 1 219 37 view .LVU421
 1197 0390 36E7     		b	.L23
 1198              	.LVL79:
 1199              	.L37:
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1200              		.loc 1 219 37 view .LVU422
 1201              	.LBE50:
 1202              	.LBE53:
 1203              	.LBE59:
 1204              	.LBE63:
 1205              	.LBE67:
 1206              	.LBE71:
 1207              	.LBE123:
 1208              	.LBB124:
 1209              	.LBB110:
 1210              	.LBB103:
 1211              	.LBB99:
 1212              	.LBB97:
 1213              	.LBB96:
 124:Src/can_encos.cpp ****                             }
 1214              		.loc 1 124 33 is_stmt 1 view .LVU423
 124:Src/can_encos.cpp ****                             }
 1215              		.loc 1 124 51 is_stmt 0 view .LVU424
 1216 0392 FFF7FEFF 		bl	_Z18save_configurationv
 1217              	.LVL80:
 124:Src/can_encos.cpp ****                             }
 1218              		.loc 1 124 51 view .LVU425
 1219 0396 EDE6     		b	.L18
 1220              	.L42:
 1221              		.align	2
 1222              	.L41:
 1223 0398 00000000 		.word	.LANCHOR0
 1224 039c 00000000 		.word	odCAN
 1225 03a0 FF008200 		.word	8519935
 1226 03a4 05FFFF01 		.word	33554181
 1227 03a8 7F00057F 		.word	2131034239
 1228 03ac 067F7F01 		.word	25132806
 1229              	.LBE96:
 1230              	.LBE97:
 1231              	.LBE99:
ARM GAS  /tmp/ccoeQSfh.s 			page 36


 1232              	.LBE103:
 1233              	.LBE110:
 1234              	.LBE124:
 1235              	.LBE147:
 1236              	.LBE163:
 1237              		.cfi_endproc
 1238              	.LFE5645:
 1240              		.section	.text._ZN8CANEncos18handle_can_messageER13can_Message_t,"ax",%progbits
 1241              		.align	1
 1242              		.p2align 2,,3
 1243              		.global	_ZN8CANEncos18handle_can_messageER13can_Message_t
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu fpv4-sp-d16
 1249              	_ZN8CANEncos18handle_can_messageER13can_Message_t:
 1250              	.LVL81:
 1251              	.LFB5646:
 225:Src/can_encos.cpp **** 
 226:Src/can_encos.cpp **** void CANEncos::handle_can_message(can_Message_t& msg)
 227:Src/can_encos.cpp **** {
 1252              		.loc 1 227 1 is_stmt 1 view -0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 8
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 228:Src/can_encos.cpp ****     Axis* axis = nullptr;
 1256              		.loc 1 228 5 view .LVU427
 227:Src/can_encos.cpp ****     Axis* axis = nullptr;
 1257              		.loc 1 227 1 is_stmt 0 view .LVU428
 1258 0000 70B5     		push	{r4, r5, r6, lr}
 1259              	.LCFI10:
 1260              		.cfi_def_cfa_offset 16
 1261              		.cfi_offset 4, -16
 1262              		.cfi_offset 5, -12
 1263              		.cfi_offset 6, -8
 1264              		.cfi_offset 14, -4
 1265              	.LBB164:
 229:Src/can_encos.cpp **** 
 230:Src/can_encos.cpp ****     for (uint8_t i = 0; i < 1; i++) {
 231:Src/can_encos.cpp ****         if (axes->config_.can_node_id_extended != msg.isExt)
 1266              		.loc 1 231 19 view .LVU429
 1267 0002 184E     		ldr	r6, .L55
 1268 0004 3568     		ldr	r5, [r6]
 1269              	.LBE164:
 227:Src/can_encos.cpp ****     Axis* axis = nullptr;
 1270              		.loc 1 227 1 view .LVU430
 1271 0006 82B0     		sub	sp, sp, #8
 1272              	.LCFI11:
 1273              		.cfi_def_cfa_offset 24
 1274              	.LBB165:
 1275              		.loc 1 231 19 view .LVU431
 1276 0008 6968     		ldr	r1, [r5, #4]
 1277              	.LBE165:
 228:Src/can_encos.cpp **** 
 1278              		.loc 1 228 11 view .LVU432
 1279 000a 0023     		movs	r3, #0
 1280              	.LBB166:
ARM GAS  /tmp/ccoeQSfh.s 			page 37


 1281              		.loc 1 231 9 view .LVU433
 1282 000c 91F87420 		ldrb	r2, [r1, #116]	@ zero_extendqisi2
 1283              	.LBE166:
 228:Src/can_encos.cpp **** 
 1284              		.loc 1 228 11 view .LVU434
 1285 0010 0193     		str	r3, [sp, #4]
 230:Src/can_encos.cpp ****         if (axes->config_.can_node_id_extended != msg.isExt)
 1286              		.loc 1 230 5 is_stmt 1 view .LVU435
 1287              	.LVL82:
 1288              	.LBB167:
 230:Src/can_encos.cpp ****         if (axes->config_.can_node_id_extended != msg.isExt)
 1289              		.loc 1 230 27 view .LVU436
 1290              		.loc 1 231 9 view .LVU437
 1291 0012 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1292 0014 9A42     		cmp	r2, r3
 1293 0016 08D1     		bne	.L43
 232:Src/can_encos.cpp ****             continue;
 233:Src/can_encos.cpp **** 
 234:Src/can_encos.cpp ****         if (0x7FF == msg.id) {
 1294              		.loc 1 234 26 is_stmt 0 view .LVU438
 1295 0018 0368     		ldr	r3, [r0]
 1296              		.loc 1 234 9 view .LVU439
 1297 001a 40F2FF72 		movw	r2, #2047
 1298 001e 9342     		cmp	r3, r2
 1299 0020 0446     		mov	r4, r0
 1300              		.loc 1 234 9 is_stmt 1 view .LVU440
 1301 0022 16D0     		beq	.L53
 235:Src/can_encos.cpp ****             encos_cmd_handle(axes, msg);
 236:Src/can_encos.cpp ****             continue;
 237:Src/can_encos.cpp ****         }
 238:Src/can_encos.cpp **** 
 239:Src/can_encos.cpp ****         if (axes->config_.can_node_id == msg.id) {
 1302              		.loc 1 239 9 view .LVU441
 1303 0024 0A6F     		ldr	r2, [r1, #112]
 1304 0026 9342     		cmp	r3, r2
 1305 0028 01D0     		beq	.L54
 1306              	.LVL83:
 1307              	.L43:
 1308              		.loc 1 239 9 is_stmt 0 view .LVU442
 1309              	.LBE167:
 240:Src/can_encos.cpp ****             if (nullptr == axis) {
 241:Src/can_encos.cpp ****                 axis = axes;
 242:Src/can_encos.cpp ****             } else {
 243:Src/can_encos.cpp ****                 // Duplicate can IDs, don't assign to any axis
 244:Src/can_encos.cpp ****                 odCAN->set_error(ODriveCAN::ERROR_DUPLICATE_CAN_IDS);
 245:Src/can_encos.cpp ****                 return;
 246:Src/can_encos.cpp ****             }
 247:Src/can_encos.cpp ****         }
 248:Src/can_encos.cpp ****     }
 249:Src/can_encos.cpp ****     
 250:Src/can_encos.cpp ****     if (nullptr == axis)
 251:Src/can_encos.cpp ****         return;
 252:Src/can_encos.cpp **** 
 253:Src/can_encos.cpp ****     encos_cmd_handle(axis, msg);
 254:Src/can_encos.cpp ****     axis->watchdog_feed();
 255:Src/can_encos.cpp ****     if(axis->config_.can_node_id == msg.id)
 256:Src/can_encos.cpp ****     {
ARM GAS  /tmp/ccoeQSfh.s 			page 38


 257:Src/can_encos.cpp ****         axis->axis_enable_by_encos();
 258:Src/can_encos.cpp ****     }
 259:Src/can_encos.cpp ****         
 260:Src/can_encos.cpp **** }
 1310              		.loc 1 260 1 view .LVU443
 1311 002a 02B0     		add	sp, sp, #8
 1312              	.LCFI12:
 1313              		.cfi_remember_state
 1314              		.cfi_def_cfa_offset 16
 1315              		@ sp needed
 1316 002c 70BD     		pop	{r4, r5, r6, pc}
 1317              	.LVL84:
 1318              	.L54:
 1319              	.LCFI13:
 1320              		.cfi_restore_state
 1321              	.LBB168:
 240:Src/can_encos.cpp ****             if (nullptr == axis) {
 1322              		.loc 1 240 13 is_stmt 1 view .LVU444
 241:Src/can_encos.cpp ****             } else {
 1323              		.loc 1 241 17 view .LVU445
 241:Src/can_encos.cpp ****             } else {
 1324              		.loc 1 241 22 is_stmt 0 view .LVU446
 1325 002e 0195     		str	r5, [sp, #4]
 1326              	.LVL85:
 241:Src/can_encos.cpp ****             } else {
 1327              		.loc 1 241 22 view .LVU447
 1328              	.LBE168:
 250:Src/can_encos.cpp ****         return;
 1329              		.loc 1 250 5 is_stmt 1 view .LVU448
 1330              	.L46:
 253:Src/can_encos.cpp ****     axis->watchdog_feed();
 1331              		.loc 1 253 5 view .LVU449
 253:Src/can_encos.cpp ****     axis->watchdog_feed();
 1332              		.loc 1 253 21 is_stmt 0 view .LVU450
 1333 0030 2146     		mov	r1, r4
 1334 0032 01A8     		add	r0, sp, #4
 1335 0034 FFF7FEFF 		bl	_Z16encos_cmd_handleRP4AxisR13can_Message_t
 1336              	.LVL86:
 254:Src/can_encos.cpp ****     if(axis->config_.can_node_id == msg.id)
 1337              		.loc 1 254 5 is_stmt 1 view .LVU451
 254:Src/can_encos.cpp ****     if(axis->config_.can_node_id == msg.id)
 1338              		.loc 1 254 24 is_stmt 0 view .LVU452
 1339 0038 0198     		ldr	r0, [sp, #4]
 1340 003a FFF7FEFF 		bl	_ZN4Axis13watchdog_feedEv
 1341              	.LVL87:
 255:Src/can_encos.cpp ****     {
 1342              		.loc 1 255 5 is_stmt 1 view .LVU453
 255:Src/can_encos.cpp ****     {
 1343              		.loc 1 255 14 is_stmt 0 view .LVU454
 1344 003e 0198     		ldr	r0, [sp, #4]
 255:Src/can_encos.cpp ****     {
 1345              		.loc 1 255 5 view .LVU455
 1346 0040 2368     		ldr	r3, [r4]
 255:Src/can_encos.cpp ****     {
 1347              		.loc 1 255 22 view .LVU456
 1348 0042 4268     		ldr	r2, [r0, #4]
 255:Src/can_encos.cpp ****     {
ARM GAS  /tmp/ccoeQSfh.s 			page 39


 1349              		.loc 1 255 5 view .LVU457
 1350 0044 126F     		ldr	r2, [r2, #112]
 1351 0046 9A42     		cmp	r2, r3
 1352 0048 EFD1     		bne	.L43
 257:Src/can_encos.cpp ****     }
 1353              		.loc 1 257 9 is_stmt 1 view .LVU458
 257:Src/can_encos.cpp ****     }
 1354              		.loc 1 257 35 is_stmt 0 view .LVU459
 1355 004a FFF7FEFF 		bl	_ZN4Axis20axis_enable_by_encosEv
 1356              	.LVL88:
 1357              		.loc 1 260 1 view .LVU460
 1358 004e 02B0     		add	sp, sp, #8
 1359              	.LCFI14:
 1360              		.cfi_remember_state
 1361              		.cfi_def_cfa_offset 16
 1362              		@ sp needed
 1363 0050 70BD     		pop	{r4, r5, r6, pc}
 1364              	.LVL89:
 1365              	.L53:
 1366              	.LCFI15:
 1367              		.cfi_restore_state
 1368              	.LBB169:
 235:Src/can_encos.cpp ****             continue;
 1369              		.loc 1 235 13 is_stmt 1 discriminator 1 view .LVU461
 235:Src/can_encos.cpp ****             continue;
 1370              		.loc 1 235 29 is_stmt 0 discriminator 1 view .LVU462
 1371 0052 0146     		mov	r1, r0
 1372 0054 3046     		mov	r0, r6
 1373              	.LVL90:
 235:Src/can_encos.cpp ****             continue;
 1374              		.loc 1 235 29 discriminator 1 view .LVU463
 1375 0056 FFF7FEFF 		bl	_Z16encos_cmd_handleRP4AxisR13can_Message_t
 1376              	.LVL91:
 236:Src/can_encos.cpp ****         }
 1377              		.loc 1 236 13 is_stmt 1 discriminator 1 view .LVU464
 236:Src/can_encos.cpp ****         }
 1378              		.loc 1 236 13 is_stmt 0 discriminator 1 view .LVU465
 1379              	.LBE169:
 250:Src/can_encos.cpp ****         return;
 1380              		.loc 1 250 5 is_stmt 1 discriminator 1 view .LVU466
 1381 005a 019B     		ldr	r3, [sp, #4]
 1382 005c 002B     		cmp	r3, #0
 1383 005e E7D1     		bne	.L46
 1384              		.loc 1 260 1 is_stmt 0 view .LVU467
 1385 0060 02B0     		add	sp, sp, #8
 1386              	.LCFI16:
 1387              		.cfi_def_cfa_offset 16
 1388              		@ sp needed
 1389 0062 70BD     		pop	{r4, r5, r6, pc}
 1390              	.LVL92:
 1391              	.L56:
 1392              		.loc 1 260 1 view .LVU468
 1393              		.align	2
 1394              	.L55:
 1395 0064 00000000 		.word	axes
 1396              		.cfi_endproc
 1397              	.LFE5646:
ARM GAS  /tmp/ccoeQSfh.s 			page 40


 1399              		.section	.rodata
 1400              		.align	2
 1401              		.set	.LANCHOR0,. + 0
 1402              	.LC0:
 1403 0000 00000000 		.word	0
 1404 0004 00       		.byte	0
 1405 0005 00       		.byte	0
 1406 0006 08       		.byte	8
 1407 0007 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 1407      00000000 
 1408 000f 00       		.space	1
 1409              		.text
 1410              	.Letext0:
 1411              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 1412              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1413              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1414              		.file 6 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdint.h"
 1415              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1416              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1417              		.file 9 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1418              		.file 10 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1419              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1420              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1421              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 1422              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 1423              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1424              		.file 16 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_trai
 1425              		.file 17 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 1426              		.file 18 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debug/deb
 1427              		.file 19 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdlib"
 1428              		.file 20 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/algo
 1429              		.file 21 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/exce
 1430              		.file 22 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 1431              		.file 23 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1432              		.file 24 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/variant"
 1433              		.file 25 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/enab
 1434              		.file 26 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional"
 1435              		.file 27 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/functiona
 1436              		.file 28 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstring"
 1437              		.file 29 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cwchar"
 1438              		.file 30 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/clocale"
 1439              		.file 31 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdint"
 1440              		.file 32 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/string_vi
 1441              		.file 33 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/basi
 1442              		.file 34 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdio"
 1443              		.file 35 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath"
 1444              		.file 36 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 1445              		.file 37 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1446              		.file 38 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/array"
 1447              		.file 39 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1448              		.file 40 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/refw
 1449              		.file 41 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pars
 1450              		.file 42 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pred
 1451              		.file 43 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_types.h"
 1452              		.file 44 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/reent.h"
 1453              		.file 45 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/lock.h"
 1454              		.file 46 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h"
ARM GAS  /tmp/ccoeQSfh.s 			page 41


 1455              		.file 47 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/pstl/exec
 1456              		.file 48 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/string.h"
 1457              		.file 49 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stdar
 1458              		.file 50 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/wchar.h"
 1459              		.file 51 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/locale.h"
 1460              		.file 52 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
 1461              		.file 53 "Inc/can_helpers.hpp"
 1462              		.file 54 "Inc/interfaces.hpp"
 1463              		.file 55 "Inc/interface_can.hpp"
 1464              		.file 56 "Inc/can_encos.hpp"
 1465              		.file 57 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1466              		.file 58 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1467              		.file 59 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1468              		.file 60 "Inc/mc_type.h"
 1469              		.file 61 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 1470              		.file 62 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math.h"
 1471              		.file 63 "Inc/main.h"
 1472              		.file 64 "Inc/task_timer.hpp"
 1473              		.file 65 "Inc/component.hpp"
 1474              		.file 66 "Inc/utils.hpp"
 1475              		.file 67 "Inc/encoder.hpp"
 1476              		.file 68 "Inc/controller.hpp"
 1477              		.file 69 "Inc/motor.hpp"
 1478              		.file 70 "Inc/main_.hpp"
 1479              		.file 71 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/stdlib.h"
 1480              		.file 72 "<built-in>"
ARM GAS  /tmp/ccoeQSfh.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_encos.cpp
     /tmp/ccoeQSfh.s:18     .text._Z16encos_ack_type_1RP4Axis:0000000000000000 $t
     /tmp/ccoeQSfh.s:27     .text._Z16encos_ack_type_1RP4Axis:0000000000000000 _Z16encos_ack_type_1RP4Axis
     /tmp/ccoeQSfh.s:149    .text._Z16encos_ack_type_1RP4Axis:0000000000000084 $d
     /tmp/ccoeQSfh.s:155    .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000000 $t
     /tmp/ccoeQSfh.s:163    .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000000 _Z16encos_cmd_handleRP4AxisR13can_Message_t
     /tmp/ccoeQSfh.s:1223   .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000398 $d
     /tmp/ccoeQSfh.s:1241   .text._ZN8CANEncos18handle_can_messageER13can_Message_t:0000000000000000 $t
     /tmp/ccoeQSfh.s:1249   .text._ZN8CANEncos18handle_can_messageER13can_Message_t:0000000000000000 _ZN8CANEncos18handle_can_messageER13can_Message_t
     /tmp/ccoeQSfh.s:1395   .text._ZN8CANEncos18handle_can_messageER13can_Message_t:0000000000000064 $d
     /tmp/ccoeQSfh.s:1400   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN4Axis14get_axis_stateEPNS_12axis_state_tE
_ZN9ODriveCAN5writeER13can_Message_t
odCAN
_Z18save_configurationv
_ZN4Axis17set_axis_pvt_parmEPNS_15axis_pvt_parm_tE
_ZN4Axis10set_offsetEv
_ZN4Axis16set_axis_currentEs
_ZN4Axis13watchdog_feedEv
_ZN4Axis20axis_enable_by_encosEv
axes
