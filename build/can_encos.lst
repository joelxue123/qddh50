ARM GAS  /tmp/ccXKOg4w.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"can_encos.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata._ZN6__pstl9execution2v1L3seqE,"a"
  18              		.align	2
  21              	_ZN6__pstl9execution2v1L3seqE:
  22 0000 00       		.space	1
  23              		.section	.rodata._ZN6__pstl9execution2v1L3parE,"a"
  24              		.align	2
  27              	_ZN6__pstl9execution2v1L3parE:
  28 0000 00       		.space	1
  29              		.section	.rodata._ZN6__pstl9execution2v1L9par_unseqE,"a"
  30              		.align	2
  33              	_ZN6__pstl9execution2v1L9par_unseqE:
  34 0000 00       		.space	1
  35              		.section	.rodata._ZN6__pstl9execution2v1L5unseqE,"a"
  36              		.align	2
  39              	_ZN6__pstl9execution2v1L5unseqE:
  40 0000 00       		.space	1
  41              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
  42              		.align	1
  43              		.arch armv7e-m
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZL20__gthread_key_deletei:
  50              	.LFB2573:
  51              		.file 1 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-e
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Compile this one with gcc.  */
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** This file is part of GCC.
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** version.
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** for more details.
ARM GAS  /tmp/ccXKOg4w.s 			page 2


  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_key_t;
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_once_t;
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_mutex_t;
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #ifdef _LIBOBJC
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Thread local storage for a single thread */
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static void *thread_local_storage = NULL;
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend initialization functions */
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Initialize the threads subsystem.  */
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Close the threads subsystem.  */
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend thread functions */
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Create a new thread of execution.  */
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline objc_thread_t
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
ARM GAS  /tmp/ccXKOg4w.s 			page 3


  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return NULL;
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Set the current thread's priority.  */
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Return the current thread's priority.  */
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Yield our process time to another thread.  */
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline void
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_yield (void)
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return;
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Terminate the current thread.  */
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_exit (void)
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* Should we really exit the program */
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline objc_thread_t
 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_id (void)
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support, use 1.  */
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return (objc_thread_t) 1;
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   thread_local_storage = value;
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline void *
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return thread_local_storage;
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
ARM GAS  /tmp/ccXKOg4w.s 			page 4


 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend mutex functions */
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Allocate a mutex.  */
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Deallocate a mutex.  */
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Grab a lock on a mutex.  */
 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Unlock the mutex */
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend condition mutex functions */
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Allocate a condition.  */
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Deallocate a condition.  */
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Wait on the condition */
ARM GAS  /tmp/ccXKOg4w.s 			page 5


 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #else /* _LIBOBJC */
 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_active_p (void)
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static int _GLIBCXX_UNUSED
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  52              		.loc 1 230 1
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 80B4     		push	{r7}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 83B0     		sub	sp, sp, #12
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 16
  64 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccXKOg4w.s 			page 6


  65              	.LCFI2:
  66              		.cfi_def_cfa_register 7
  67 0006 7860     		str	r0, [r7, #4]
 231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
  68              		.loc 1 231 10
  69 0008 0023     		movs	r3, #0
 232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  70              		.loc 1 232 1
  71 000a 1846     		mov	r0, r3
  72 000c 0C37     		adds	r7, r7, #12
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75 000e BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0010 5DF8047B 		ldr	r7, [sp], #4
  80              	.LCFI5:
  81              		.cfi_restore 7
  82              		.cfi_def_cfa_offset 0
  83 0014 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE2573:
  87              		.section	.rodata._ZL16OFFSET_TAB_CCMRx,"a"
  88              		.align	2
  91              	_ZL16OFFSET_TAB_CCMRx:
  92 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
  92      04040404 
  92      3838
  93              		.section	.rodata._ZL14SHIFT_TAB_OCxx,"a"
  94              		.align	2
  97              	_ZL14SHIFT_TAB_OCxx:
  98 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
  98      00000800 
  98      0008
  99              		.section	.rodata._ZL14SHIFT_TAB_ICxx,"a"
 100              		.align	2
 103              	_ZL14SHIFT_TAB_ICxx:
 104 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
 104      00000800 
 104      0000
 105              		.section	.rodata._ZL14SHIFT_TAB_CCxP,"a"
 106              		.align	2
 109              	_ZL14SHIFT_TAB_CCxP:
 110 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
 110      080A0C0E 
 110      1014
 111              		.section	.rodata._ZL14SHIFT_TAB_OISx,"a"
 112              		.align	2
 115              	_ZL14SHIFT_TAB_OISx:
 116 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
 116      04050607 
 116      080A
 117              		.section	.rodata._ZL19USART_PRESCALER_TAB,"a"
 118              		.align	2
 121              	_ZL19USART_PRESCALER_TAB:
 122 0000 01000000 		.word	1
ARM GAS  /tmp/ccXKOg4w.s 			page 7


 123 0004 02000000 		.word	2
 124 0008 04000000 		.word	4
 125 000c 06000000 		.word	6
 126 0010 08000000 		.word	8
 127 0014 0A000000 		.word	10
 128 0018 0C000000 		.word	12
 129 001c 10000000 		.word	16
 130 0020 20000000 		.word	32
 131 0024 40000000 		.word	64
 132 0028 80000000 		.word	128
 133 002c 00010000 		.word	256
 134              		.section	.rodata._ZL18CHANNEL_OFFSET_TAB,"a"
 135              		.align	2
 138              	_ZL18CHANNEL_OFFSET_TAB:
 139 0000 081C3044 		.ascii	"\010\0340DXl"
 139      586C
 140              		.section	.rodata._ZL12one_by_sqrt3,"a"
 141              		.align	2
 144              	_ZL12one_by_sqrt3:
 145 0000 3ACD133F 		.word	1058262330
 146              		.section	.rodata._ZL12two_by_sqrt3,"a"
 147              		.align	2
 150              	_ZL12two_by_sqrt3:
 151 0000 3ACD933F 		.word	1066650938
 152              		.section	.rodata._ZL10sqrt3_by_2,"a"
 153              		.align	2
 156              	_ZL10sqrt3_by_2:
 157 0000 D7B35D3F 		.word	1063105495
 158              		.section	.text._ZN4Axis10set_nodeIDEm,"axG",%progbits,_ZN4Axis10set_nodeIDEm,comdat
 159              		.align	1
 160              		.weak	_ZN4Axis10set_nodeIDEm
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	_ZN4Axis10set_nodeIDEm:
 167              	.LFB5576:
 168              		.file 2 "Inc/axis.hpp"
   1:Inc/axis.hpp  **** #ifndef __AXIS_HPP
   2:Inc/axis.hpp  **** #define __AXIS_HPP
   3:Inc/axis.hpp  **** 
   4:Inc/axis.hpp  **** 
   5:Inc/axis.hpp  **** #include "task_timer.hpp"
   6:Inc/axis.hpp  **** #include <array>
   7:Inc/axis.hpp  **** #include "interfaces.hpp"
   8:Inc/axis.hpp  **** #include "open_loop_controller.hpp"
   9:Inc/axis.hpp  **** #include <functional>
  10:Inc/axis.hpp  **** #include "low_level.h"  // Add this for safety_critical_disarm_motor_pwm declaration
  11:Inc/axis.hpp  **** #include  "current_limiter.hpp"
  12:Inc/axis.hpp  **** #include "utils.hpp"
  13:Inc/axis.hpp  **** 
  14:Inc/axis.hpp  **** class Motor;
  15:Inc/axis.hpp  **** class Controller;
  16:Inc/axis.hpp  **** class Encoder;
  17:Inc/axis.hpp  **** class OpenLoopController;
  18:Inc/axis.hpp  **** class  OnboardThermistorCurrentLimiter;
  19:Inc/axis.hpp  **** class  OffboardThermistorCurrentLimiter;
ARM GAS  /tmp/ccXKOg4w.s 			page 8


  20:Inc/axis.hpp  **** class ThermistorCurrentLimiter;
  21:Inc/axis.hpp  **** 
  22:Inc/axis.hpp  **** class Axis : public ODriveIntf::AxisIntf{
  23:Inc/axis.hpp  **** public:
  24:Inc/axis.hpp  ****     struct LockinConfig_t {
  25:Inc/axis.hpp  ****         float current = 10.0f;           // [A]
  26:Inc/axis.hpp  ****         float ramp_time = 0.4f;          // [s]
  27:Inc/axis.hpp  ****         float ramp_distance = 1 * M_PI;  // [rad]
  28:Inc/axis.hpp  ****         float accel = 20.0f;     // [rad/s^2]
  29:Inc/axis.hpp  ****         float vel = 40.0f; // [rad/s]
  30:Inc/axis.hpp  ****         float finish_distance = 100.0f;  // [rad]
  31:Inc/axis.hpp  ****         bool finish_on_vel = false;
  32:Inc/axis.hpp  ****         bool finish_on_distance = false;
  33:Inc/axis.hpp  ****         bool finish_on_enc_idx = false;
  34:Inc/axis.hpp  ****     };
  35:Inc/axis.hpp  ****     struct TaskTimes {
  36:Inc/axis.hpp  ****         TaskTimer thermistor_update;
  37:Inc/axis.hpp  ****         TaskTimer encoder_update;
  38:Inc/axis.hpp  ****         TaskTimer sensorless_estimator_update;
  39:Inc/axis.hpp  ****         TaskTimer endstop_update;
  40:Inc/axis.hpp  ****         TaskTimer can_heartbeat;
  41:Inc/axis.hpp  ****         TaskTimer controller_update;
  42:Inc/axis.hpp  ****         TaskTimer open_loop_controller_update;
  43:Inc/axis.hpp  ****         TaskTimer acim_estimator_update;
  44:Inc/axis.hpp  ****         TaskTimer motor_update;
  45:Inc/axis.hpp  ****         TaskTimer current_controller_update;
  46:Inc/axis.hpp  ****         TaskTimer dc_calib;
  47:Inc/axis.hpp  ****         TaskTimer current_sense;
  48:Inc/axis.hpp  ****         TaskTimer pwm_update;
  49:Inc/axis.hpp  ****     };
  50:Inc/axis.hpp  **** 
  51:Inc/axis.hpp  **** 
  52:Inc/axis.hpp  **** 
  53:Inc/axis.hpp  **** 
  54:Inc/axis.hpp  **** 
  55:Inc/axis.hpp  ****    enum ENCOS_ERRO
  56:Inc/axis.hpp  ****    {
  57:Inc/axis.hpp  ****       ENCOS_ERROR_NONE = 0,
  58:Inc/axis.hpp  ****       ENCOS_ERROR_OVER_TEMP = 1,
  59:Inc/axis.hpp  ****       ENCOS_ERROR_CURRENT_LIMIT_VIOLATION =2,
  60:Inc/axis.hpp  ****       ENCOS_ERROR_DC_BUS_UNDER_VOLTAGE =3,
  61:Inc/axis.hpp  ****       ENCOS_ERROR_ABS_SPI_COM_FAIL=4,
  62:Inc/axis.hpp  ****       ENCOS_ERROR_DC_BUS_OVER_VOLTAGE =6,
  63:Inc/axis.hpp  ****       ENCOS_ERROR_DRV_FAULT=7,
  64:Inc/axis.hpp  ****    };
  65:Inc/axis.hpp  **** 
  66:Inc/axis.hpp  **** 
  67:Inc/axis.hpp  **** 
  68:Inc/axis.hpp  ****     static constexpr uint32_t PARAM_LEN = 128;
  69:Inc/axis.hpp  ****     enum EXT_CONFIG_REG
  70:Inc/axis.hpp  ****     {
  71:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_NOTCH_FILTER = 0,
  72:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_DC_BUS_OVER_VOLTAGE_FILTER = 1,
  73:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_DC_BUS_UNDER_VOLTAGE_FILTER = 2,
  74:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_OVER_TEMP_FILTER = 3,
  75:Inc/axis.hpp  ****         EXT_CONFIG_REG_ENABLE_CURRENT_LIMIT_VIOLATION_FILTER = 4
  76:Inc/axis.hpp  ****     };
ARM GAS  /tmp/ccXKOg4w.s 			page 9


  77:Inc/axis.hpp  **** 
  78:Inc/axis.hpp  **** 
  79:Inc/axis.hpp  **** 
  80:Inc/axis.hpp  ****     static LockinConfig_t default_calibration();
  81:Inc/axis.hpp  ****     static LockinConfig_t default_sensorless();
  82:Inc/axis.hpp  ****     static LockinConfig_t default_lockin();
  83:Inc/axis.hpp  **** 
  84:Inc/axis.hpp  ****     struct Config_t {
  85:Inc/axis.hpp  ****         bool startup_motor_calibration = false;   //<! run motor calibration at startup, skip other
  86:Inc/axis.hpp  ****         bool startup_encoder_index_search = false; //<! run encoder index search after startup, ski
  87:Inc/axis.hpp  ****                                                 // this only has an effect if encoder.config.use_in
  88:Inc/axis.hpp  ****         bool startup_encoder_offset_calibration = false; //<! run encoder offset calibration after 
  89:Inc/axis.hpp  ****         bool startup_closed_loop_control = false; //<! enable closed loop control after calibration
  90:Inc/axis.hpp  ****         bool startup_sensorless_control = false; //<! enable sensorless control after calibration/s
  91:Inc/axis.hpp  ****         bool startup_homing = false; //<! enable homing after calibration/startup
  92:Inc/axis.hpp  **** 
  93:Inc/axis.hpp  ****         bool enable_step_dir = false; //<! enable step/dir input after calibration
  94:Inc/axis.hpp  ****                                     //   For M0 this has no effect if enable_uart is true
  95:Inc/axis.hpp  ****         bool step_dir_always_on = false; //<! Keep step/dir enabled while the motor is disabled.
  96:Inc/axis.hpp  ****                                          //<! This is ignored if enable_step_dir is false.
  97:Inc/axis.hpp  ****                                          //<! This setting only takes effect on a state transition
  98:Inc/axis.hpp  ****                                          //<! into idle or out of closed loop control.
  99:Inc/axis.hpp  **** 
 100:Inc/axis.hpp  ****         float turns_per_step = 1.0f / 1024.0f;
 101:Inc/axis.hpp  **** 
 102:Inc/axis.hpp  ****         bool enable_sensorless_mode = false;
 103:Inc/axis.hpp  ****         float watchdog_timeout = 1.0f; // [s]
 104:Inc/axis.hpp  ****         bool enable_watchdog = true;
 105:Inc/axis.hpp  ****         
 106:Inc/axis.hpp  ****         // Defaults loaded from hw_config in load_configuration in main.cpp
 107:Inc/axis.hpp  ****         uint16_t step_gpio_pin = 0;
 108:Inc/axis.hpp  ****         uint16_t dir_gpio_pin = 0;
 109:Inc/axis.hpp  **** 
 110:Inc/axis.hpp  ****         LockinConfig_t calibration_lockin = default_calibration();
 111:Inc/axis.hpp  ****         LockinConfig_t sensorless_ramp = default_sensorless();
 112:Inc/axis.hpp  ****         LockinConfig_t general_lockin;
 113:Inc/axis.hpp  ****         uint32_t can_node_id = 1; // Both axes will have the same id to start
 114:Inc/axis.hpp  ****         bool can_node_id_extended = false;
 115:Inc/axis.hpp  ****         uint32_t can_heartbeat_rate_ms = 100;
 116:Inc/axis.hpp  ****         uint32_t offset;       
 117:Inc/axis.hpp  ****         
 118:Inc/axis.hpp  ****         uint32_t ext_cfg[PARAM_LEN];
 119:Inc/axis.hpp  ****         float position_base = 12.5f;
 120:Inc/axis.hpp  ****         float speed_base = 18.0f;
 121:Inc/axis.hpp  ****         float current_base = 60.0f;    
 122:Inc/axis.hpp  ****         bool  gear_vel_used = false;    
 123:Inc/axis.hpp  ****         // custom setters
 124:Inc/axis.hpp  ****         Axis* parent = nullptr;
 125:Inc/axis.hpp  ****         void set_step_gpio_pin(uint16_t value) { step_gpio_pin = value; parent->decode_step_dir_pin
 126:Inc/axis.hpp  ****         void set_dir_gpio_pin(uint16_t value) { dir_gpio_pin = value; parent->decode_step_dir_pins(
 127:Inc/axis.hpp  ****     };
 128:Inc/axis.hpp  **** 
 129:Inc/axis.hpp  ****     struct Homing_t {
 130:Inc/axis.hpp  ****         bool is_homed = false;
 131:Inc/axis.hpp  ****     };
 132:Inc/axis.hpp  **** 
 133:Inc/axis.hpp  ****     struct axis_state_t {
ARM GAS  /tmp/ccXKOg4w.s 			page 10


 134:Inc/axis.hpp  ****         
 135:Inc/axis.hpp  ****         uint8_t erro;
 136:Inc/axis.hpp  ****         uint16_t pos;
 137:Inc/axis.hpp  ****         uint16_t vel;
 138:Inc/axis.hpp  ****         uint16_t cur;
 139:Inc/axis.hpp  ****         uint8_t motor_temperature;
 140:Inc/axis.hpp  ****         uint8_t mos_temperature;
 141:Inc/axis.hpp  ****     };
 142:Inc/axis.hpp  ****     void get_axis_state(axis_state_t* state);
 143:Inc/axis.hpp  **** 
 144:Inc/axis.hpp  ****     struct axis_pvt_parm_t {
 145:Inc/axis.hpp  ****         
 146:Inc/axis.hpp  ****         uint16_t kp;
 147:Inc/axis.hpp  ****         uint16_t kd;
 148:Inc/axis.hpp  ****         uint16_t pos_setpoint;
 149:Inc/axis.hpp  ****         uint16_t vel_setpoint;
 150:Inc/axis.hpp  ****         uint16_t torque_setpoint;
 151:Inc/axis.hpp  ****     };
 152:Inc/axis.hpp  **** 
 153:Inc/axis.hpp  **** void set_axis_pvt_parm(axis_pvt_parm_t *axis_pvt_parm);
 154:Inc/axis.hpp  **** void set_axis_current(int16_t current); // 单位 0.01A
 155:Inc/axis.hpp  **** bool set_offset(void);
 156:Inc/axis.hpp  **** bool set_nodeID(uint32_t id) {
 169              		.loc 2 156 6
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI6:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 83B0     		sub	sp, sp, #12
 179              	.LCFI7:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI8:
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 185 0008 3960     		str	r1, [r7]
 157:Inc/axis.hpp  ****     if(current_state_ != AXIS_STATE_IDLE)
 186              		.loc 2 157 8
 187 000a 7B68     		ldr	r3, [r7, #4]
 188 000c D3F88C31 		ldr	r3, [r3, #396]
 189 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 190              		.loc 2 157 5
 191 0012 012B     		cmp	r3, #1
 192 0014 01D0     		beq	.L4
 158:Inc/axis.hpp  ****         return false;
 193              		.loc 2 158 16
 194 0016 0023     		movs	r3, #0
 195 0018 04E0     		b	.L5
 196              	.L4:
 159:Inc/axis.hpp  ****     config_.can_node_id = id;
 197              		.loc 2 159 5
 198 001a 7B68     		ldr	r3, [r7, #4]
 199 001c 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccXKOg4w.s 			page 11


 200              		.loc 2 159 25
 201 001e 3A68     		ldr	r2, [r7]
 202 0020 1A67     		str	r2, [r3, #112]
 160:Inc/axis.hpp  ****     return true; 
 203              		.loc 2 160 12
 204 0022 0123     		movs	r3, #1
 205              	.L5:
 161:Inc/axis.hpp  **** }
 206              		.loc 2 161 1
 207 0024 1846     		mov	r0, r3
 208 0026 0C37     		adds	r7, r7, #12
 209              	.LCFI9:
 210              		.cfi_def_cfa_offset 4
 211 0028 BD46     		mov	sp, r7
 212              	.LCFI10:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 002a 5DF8047B 		ldr	r7, [sp], #4
 216              	.LCFI11:
 217              		.cfi_restore 7
 218              		.cfi_def_cfa_offset 0
 219 002e 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE5576:
 223              		.section	.text._ZN4Axis10get_nodeIDERm,"axG",%progbits,_ZN4Axis10get_nodeIDERm,comdat
 224              		.align	1
 225              		.weak	_ZN4Axis10get_nodeIDERm
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	_ZN4Axis10get_nodeIDERm:
 232              	.LFB5577:
 162:Inc/axis.hpp  **** bool get_nodeID(uint32_t &id) { id = config_.can_node_id; return true; };
 233              		.loc 2 162 6
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI12:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 83B0     		sub	sp, sp, #12
 243              	.LCFI13:
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI14:
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 249 0008 3960     		str	r1, [r7]
 250              		.loc 2 162 38
 251 000a 7B68     		ldr	r3, [r7, #4]
 252 000c 5B68     		ldr	r3, [r3, #4]
 253              		.loc 2 162 46
 254 000e 1A6F     		ldr	r2, [r3, #112]
 255              		.loc 2 162 36
ARM GAS  /tmp/ccXKOg4w.s 			page 12


 256 0010 3B68     		ldr	r3, [r7]
 257 0012 1A60     		str	r2, [r3]
 258              		.loc 2 162 66
 259 0014 0123     		movs	r3, #1
 260              		.loc 2 162 72
 261 0016 1846     		mov	r0, r3
 262 0018 0C37     		adds	r7, r7, #12
 263              	.LCFI15:
 264              		.cfi_def_cfa_offset 4
 265 001a BD46     		mov	sp, r7
 266              	.LCFI16:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 001c 5DF8047B 		ldr	r7, [sp], #4
 270              	.LCFI17:
 271              		.cfi_restore 7
 272              		.cfi_def_cfa_offset 0
 273 0020 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE5577:
 277              		.section	.rodata
 278              		.align	2
 279              	.LC0:
 280 0000 00000000 		.word	0
 281 0004 00       		.byte	0
 282 0005 00       		.byte	0
 283 0006 08       		.byte	8
 284 0007 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 284      00000000 
 285 000f 00       		.space	1
 286              		.section	.text._Z16encos_ack_type_1RP4Axis,"ax",%progbits
 287              		.align	1
 288              		.global	_Z16encos_ack_type_1RP4Axis
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	_Z16encos_ack_type_1RP4Axis:
 295              	.LFB5621:
 296              		.file 3 "Src/can_encos.cpp"
   1:Src/can_encos.cpp **** 
   2:Src/can_encos.cpp **** #include "can_encos.hpp"
   3:Src/can_encos.cpp **** #include "axis.hpp"  // Changed from forward declaration to full include
   4:Src/can_encos.cpp **** #include "main_.hpp"
   5:Src/can_encos.cpp **** 
   6:Src/can_encos.cpp **** 
   7:Src/can_encos.cpp **** typedef struct __attribute__((packed)) {
   8:Src/can_encos.cpp ****     uint8_t kp_h  :5;
   9:Src/can_encos.cpp ****     uint8_t mode  :3;
  10:Src/can_encos.cpp ****     uint8_t kd_h  :1;
  11:Src/can_encos.cpp ****     uint8_t kp_l  :7;
  12:Src/can_encos.cpp ****     uint8_t kd_l  :8;
  13:Src/can_encos.cpp ****     uint8_t pos_h :8;
  14:Src/can_encos.cpp ****     uint8_t pos_l :8;
  15:Src/can_encos.cpp ****     uint8_t vel_h :8;
  16:Src/can_encos.cpp ****     uint8_t tor_h :4;
  17:Src/can_encos.cpp ****     uint8_t vel_l :4;
ARM GAS  /tmp/ccXKOg4w.s 			page 13


  18:Src/can_encos.cpp ****     uint8_t tor_l :8;
  19:Src/can_encos.cpp **** } encos_cmd_pvt_t;
  20:Src/can_encos.cpp **** 
  21:Src/can_encos.cpp **** typedef struct __attribute__((packed)) {
  22:Src/can_encos.cpp ****     uint8_t ack_type :2;
  23:Src/can_encos.cpp ****     uint8_t          :3;
  24:Src/can_encos.cpp ****     uint8_t mode     :3;
  25:Src/can_encos.cpp **** } encos_curr_brake_cmd_t;
  26:Src/can_encos.cpp **** 
  27:Src/can_encos.cpp **** void encos_ack_type_1(Axis* &axis)
  28:Src/can_encos.cpp **** {
 297              		.loc 3 28 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 40
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 90B5     		push	{r4, r7, lr}
 302              	.LCFI18:
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 8BB0     		sub	sp, sp, #44
 308              	.LCFI19:
 309              		.cfi_def_cfa_offset 56
 310 0004 00AF     		add	r7, sp, #0
 311              	.LCFI20:
 312              		.cfi_def_cfa_register 7
 313 0006 7860     		str	r0, [r7, #4]
  29:Src/can_encos.cpp ****     Axis::axis_state_t state;
  30:Src/can_encos.cpp ****     can_Message_t txmsg;
 314              		.loc 3 30 19
 315 0008 294B     		ldr	r3, .L9
 316 000a 07F10C04 		add	r4, r7, #12
 317 000e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 318 0010 84E80F00 		stm	r4, {r0, r1, r2, r3}
  31:Src/can_encos.cpp **** 
  32:Src/can_encos.cpp ****     axis->get_axis_state(&state);
 319              		.loc 3 32 25
 320 0014 7B68     		ldr	r3, [r7, #4]
 321 0016 1B68     		ldr	r3, [r3]
 322 0018 07F11C02 		add	r2, r7, #28
 323 001c 1146     		mov	r1, r2
 324 001e 1846     		mov	r0, r3
 325 0020 FFF7FEFF 		bl	_ZN4Axis14get_axis_stateEPNS_12axis_state_tE
  33:Src/can_encos.cpp **** 
  34:Src/can_encos.cpp ****     txmsg.id = axis->config_.can_node_id;
 326              		.loc 3 34 16
 327 0024 7B68     		ldr	r3, [r7, #4]
 328 0026 1B68     		ldr	r3, [r3]
 329              		.loc 3 34 22
 330 0028 5B68     		ldr	r3, [r3, #4]
 331              		.loc 3 34 30
 332 002a 1B6F     		ldr	r3, [r3, #112]
 333              		.loc 3 34 14
 334 002c FB60     		str	r3, [r7, #12]
  35:Src/can_encos.cpp ****     txmsg.isExt = axis->config_.can_node_id_extended;
 335              		.loc 3 35 19
ARM GAS  /tmp/ccXKOg4w.s 			page 14


 336 002e 7B68     		ldr	r3, [r7, #4]
 337 0030 1B68     		ldr	r3, [r3]
 338              		.loc 3 35 25
 339 0032 5B68     		ldr	r3, [r3, #4]
 340              		.loc 3 35 33
 341 0034 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 342              		.loc 3 35 17
 343 0038 3B74     		strb	r3, [r7, #16]
  36:Src/can_encos.cpp ****     txmsg.len = 8;
 344              		.loc 3 36 15
 345 003a 0823     		movs	r3, #8
 346 003c BB74     		strb	r3, [r7, #18]
  37:Src/can_encos.cpp ****     txmsg.buf[0] = state.erro & ((1 << 5) - 1);
 347              		.loc 3 37 26
 348 003e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 349              		.loc 3 37 31
 350 0040 03F01F03 		and	r3, r3, #31
 351 0044 DBB2     		uxtb	r3, r3
 352              		.loc 3 37 18
 353 0046 FB74     		strb	r3, [r7, #19]
  38:Src/can_encos.cpp ****     txmsg.buf[0] |= 1 << 5;
 354              		.loc 3 38 18
 355 0048 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 356 004a 43F02003 		orr	r3, r3, #32
 357 004e DBB2     		uxtb	r3, r3
 358 0050 FB74     		strb	r3, [r7, #19]
  39:Src/can_encos.cpp ****     txmsg.buf[1] = state.pos >> 8;
 359              		.loc 3 39 26
 360 0052 FB8B     		ldrh	r3, [r7, #30]
 361              		.loc 3 39 30
 362 0054 1B0A     		lsrs	r3, r3, #8
 363 0056 9BB2     		uxth	r3, r3
 364              		.loc 3 39 18
 365 0058 DBB2     		uxtb	r3, r3
 366 005a 3B75     		strb	r3, [r7, #20]
  40:Src/can_encos.cpp ****     txmsg.buf[2] = state.pos & 0xFF;
 367              		.loc 3 40 26
 368 005c FB8B     		ldrh	r3, [r7, #30]
 369              		.loc 3 40 18
 370 005e DBB2     		uxtb	r3, r3
 371 0060 7B75     		strb	r3, [r7, #21]
  41:Src/can_encos.cpp ****     txmsg.buf[3] = state.vel >> 4;
 372              		.loc 3 41 26
 373 0062 3B8C     		ldrh	r3, [r7, #32]
 374              		.loc 3 41 30
 375 0064 1B09     		lsrs	r3, r3, #4
 376 0066 9BB2     		uxth	r3, r3
 377              		.loc 3 41 18
 378 0068 DBB2     		uxtb	r3, r3
 379 006a BB75     		strb	r3, [r7, #22]
  42:Src/can_encos.cpp ****     txmsg.buf[4] = state.vel << 4;
 380              		.loc 3 42 26
 381 006c 3B8C     		ldrh	r3, [r7, #32]
 382              		.loc 3 42 30
 383 006e DBB2     		uxtb	r3, r3
 384 0070 1B01     		lsls	r3, r3, #4
 385 0072 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccXKOg4w.s 			page 15


 386              		.loc 3 42 18
 387 0074 FB75     		strb	r3, [r7, #23]
  43:Src/can_encos.cpp ****     txmsg.buf[4] |= state.cur >> 8;
 388              		.loc 3 43 18
 389 0076 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 390              		.loc 3 43 27
 391 0078 7B8C     		ldrh	r3, [r7, #34]
 392              		.loc 3 43 31
 393 007a 1B0A     		lsrs	r3, r3, #8
 394 007c 9BB2     		uxth	r3, r3
 395              		.loc 3 43 18
 396 007e DBB2     		uxtb	r3, r3
 397 0080 1343     		orrs	r3, r3, r2
 398 0082 DBB2     		uxtb	r3, r3
 399 0084 FB75     		strb	r3, [r7, #23]
  44:Src/can_encos.cpp ****     txmsg.buf[5] = state.cur & 0xFF;
 400              		.loc 3 44 26
 401 0086 7B8C     		ldrh	r3, [r7, #34]
 402              		.loc 3 44 18
 403 0088 DBB2     		uxtb	r3, r3
 404 008a 3B76     		strb	r3, [r7, #24]
  45:Src/can_encos.cpp ****     txmsg.buf[6] = state.motor_temperature;
 405              		.loc 3 45 26
 406 008c 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 407              		.loc 3 45 18
 408 0090 7B76     		strb	r3, [r7, #25]
  46:Src/can_encos.cpp ****     txmsg.buf[7] = state.mos_temperature;
 409              		.loc 3 46 26
 410 0092 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 411              		.loc 3 46 18
 412 0096 BB76     		strb	r3, [r7, #26]
  47:Src/can_encos.cpp **** 
  48:Src/can_encos.cpp ****     odCAN->write(txmsg);
 413              		.loc 3 48 17
 414 0098 064B     		ldr	r3, .L9+4
 415 009a 1B68     		ldr	r3, [r3]
 416 009c 07F10C02 		add	r2, r7, #12
 417 00a0 1146     		mov	r1, r2
 418 00a2 1846     		mov	r0, r3
 419 00a4 FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
  49:Src/can_encos.cpp **** }
 420              		.loc 3 49 1
 421 00a8 00BF     		nop
 422 00aa 2C37     		adds	r7, r7, #44
 423              	.LCFI21:
 424              		.cfi_def_cfa_offset 12
 425 00ac BD46     		mov	sp, r7
 426              	.LCFI22:
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 00ae 90BD     		pop	{r4, r7, pc}
 430              	.L10:
 431              		.align	2
 432              	.L9:
 433 00b0 00000000 		.word	.LC0
 434 00b4 00000000 		.word	odCAN
 435              		.cfi_endproc
ARM GAS  /tmp/ccXKOg4w.s 			page 16


 436              	.LFE5621:
 438              		.section	.text._Z16encos_cmd_handleRP4AxisR13can_Message_t,"ax",%progbits
 439              		.align	1
 440              		.global	_Z16encos_cmd_handleRP4AxisR13can_Message_t
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	_Z16encos_cmd_handleRP4AxisR13can_Message_t:
 447              	.LFB5625:
  50:Src/can_encos.cpp **** 
  51:Src/can_encos.cpp **** void encos_cmd_handle(Axis* &axis, can_Message_t& msg)
  52:Src/can_encos.cpp **** {
 448              		.loc 3 52 1
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 152
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 90B5     		push	{r4, r7, lr}
 453              	.LCFI23:
 454              		.cfi_def_cfa_offset 12
 455              		.cfi_offset 4, -12
 456              		.cfi_offset 7, -8
 457              		.cfi_offset 14, -4
 458 0002 A7B0     		sub	sp, sp, #156
 459              	.LCFI24:
 460              		.cfi_def_cfa_offset 168
 461 0004 00AF     		add	r7, sp, #0
 462              	.LCFI25:
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 3960     		str	r1, [r7]
 466              	.LBB2:
  53:Src/can_encos.cpp ****     if (axis->config_.can_node_id == msg.id) {
 467              		.loc 3 53 9
 468 000a 7B68     		ldr	r3, [r7, #4]
 469 000c 1B68     		ldr	r3, [r3]
 470              		.loc 3 53 15
 471 000e 5B68     		ldr	r3, [r3, #4]
 472              		.loc 3 53 23
 473 0010 1A6F     		ldr	r2, [r3, #112]
 474              		.loc 3 53 42
 475 0012 3B68     		ldr	r3, [r7]
 476 0014 1B68     		ldr	r3, [r3]
 477              		.loc 3 53 5
 478 0016 9A42     		cmp	r2, r3
 479 0018 40F09180 		bne	.L12
 480              	.LBB3:
 481              	.LBB4:
  54:Src/can_encos.cpp ****     switch (msg.len) {
 482              		.loc 3 54 17
 483 001c 3B68     		ldr	r3, [r7]
 484 001e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 485              		.loc 3 54 5
 486 0020 032B     		cmp	r3, #3
 487 0022 02D0     		beq	.L13
 488 0024 082B     		cmp	r3, #8
 489 0026 28D0     		beq	.L14
ARM GAS  /tmp/ccXKOg4w.s 			page 17


 490              	.LBE4:
 491              	.LBE3:
 492              	.LBE2:
  55:Src/can_encos.cpp ****         case 3:
  56:Src/can_encos.cpp ****             {
  57:Src/can_encos.cpp ****                 encos_curr_brake_cmd_t *cmd = (encos_curr_brake_cmd_t *)&(msg.buf[0]);
  58:Src/can_encos.cpp ****                 switch (cmd->mode) {
  59:Src/can_encos.cpp ****                 case 3:// 手册描述能耗制动，但实际测试用来设置电流
  60:Src/can_encos.cpp ****                     axis->set_axis_current((msg.buf[1] << 8) + msg.buf[2]);
  61:Src/can_encos.cpp ****                     break;
  62:Src/can_encos.cpp ****                 }
  63:Src/can_encos.cpp ****                 
  64:Src/can_encos.cpp ****                 switch (cmd->ack_type) {
  65:Src/can_encos.cpp ****                 case 1:
  66:Src/can_encos.cpp ****                     encos_ack_type_1(axis);
  67:Src/can_encos.cpp ****                     break;
  68:Src/can_encos.cpp ****                 }
  69:Src/can_encos.cpp ****             }
  70:Src/can_encos.cpp ****             break;
  71:Src/can_encos.cpp ****         case 8:
  72:Src/can_encos.cpp ****             switch (msg.buf[0] >> 5) {
  73:Src/can_encos.cpp ****             case 0:
  74:Src/can_encos.cpp ****                 {
  75:Src/can_encos.cpp ****                     encos_cmd_pvt_t *cmd = (encos_cmd_pvt_t *)msg.buf;
  76:Src/can_encos.cpp ****                     Axis::axis_pvt_parm_t pvt_parm;
  77:Src/can_encos.cpp **** 
  78:Src/can_encos.cpp ****                     encos_ack_type_1(axis);
  79:Src/can_encos.cpp **** 
  80:Src/can_encos.cpp ****                     pvt_parm.kp = (cmd->kp_h << 7) + cmd->kp_l;
  81:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
  82:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
  83:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
  84:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
  85:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
  86:Src/can_encos.cpp ****                 }
  87:Src/can_encos.cpp ****                 break;
  88:Src/can_encos.cpp ****             }
  89:Src/can_encos.cpp ****             break;
  90:Src/can_encos.cpp ****         }
  91:Src/can_encos.cpp ****     } else if (0x7FF == msg.id) {
  92:Src/can_encos.cpp ****         switch (msg.len) {
  93:Src/can_encos.cpp ****         case 4:
  94:Src/can_encos.cpp ****             {
  95:Src/can_encos.cpp ****                 if (0xFF == msg.buf[0] && 0xFF == msg.buf[1] && 0x00 == msg.buf[2] && 0x82 == msg.b
  96:Src/can_encos.cpp ****                     uint32_t id;
  97:Src/can_encos.cpp ****                     bool success = axis->get_nodeID(id);
  98:Src/can_encos.cpp ****                     can_Message_t txmsg;
  99:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 100:Src/can_encos.cpp ****                     txmsg.isExt = axis->config_.can_node_id_extended;
 101:Src/can_encos.cpp ****                     if (success) {
 102:Src/can_encos.cpp ****                         txmsg.len = 5;
 103:Src/can_encos.cpp ****                         txmsg.buf[0] = 0xFF;
 104:Src/can_encos.cpp ****                         txmsg.buf[1] = 0xFF;
 105:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 106:Src/can_encos.cpp ****                         txmsg.buf[3] = id >> 8;
 107:Src/can_encos.cpp ****                         txmsg.buf[4] = id & 0xFF;
 108:Src/can_encos.cpp ****                     } else {
ARM GAS  /tmp/ccXKOg4w.s 			page 18


 109:Src/can_encos.cpp ****                         txmsg.len = 4;
 110:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x80;
 111:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x80;
 112:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 113:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x80;
 114:Src/can_encos.cpp ****                     }
 115:Src/can_encos.cpp ****                     odCAN->write(txmsg);
 116:Src/can_encos.cpp ****                 } else {
 117:Src/can_encos.cpp ****                     uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 118:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 119:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 120:Src/can_encos.cpp ****                             // 设置零位
 121:Src/can_encos.cpp ****                             bool success = axis->set_offset();
 122:Src/can_encos.cpp ****                             if(success)
 123:Src/can_encos.cpp ****                             {
 124:Src/can_encos.cpp ****                                 save_configuration();
 125:Src/can_encos.cpp ****                             }
 126:Src/can_encos.cpp ****                             
 127:Src/can_encos.cpp ****                             can_Message_t txmsg;
 128:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 129:Src/can_encos.cpp ****                             txmsg.isExt = axis->config_.can_node_id_extended;
 130:Src/can_encos.cpp ****                             txmsg.len = 4;
 131:Src/can_encos.cpp ****                             txmsg.buf[0] = axis->config_.can_node_id >> 8;
 132:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 133:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 134:Src/can_encos.cpp ****                             txmsg.buf[3] = success ? 3 : 0;
 135:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 136:Src/can_encos.cpp ****                         }
 137:Src/can_encos.cpp ****                     }
 138:Src/can_encos.cpp ****                 }
 139:Src/can_encos.cpp ****             }
 140:Src/can_encos.cpp ****             break;
 141:Src/can_encos.cpp ****         case 6:
 142:Src/can_encos.cpp ****             {
 143:Src/can_encos.cpp ****                 if (0x7F == msg.buf[0] && 0x7F == msg.buf[1] && 0 == msg.buf[2] && 5 == msg.buf[3] 
 144:Src/can_encos.cpp ****                     // 重置ID为1
 145:Src/can_encos.cpp ****                     if (axis->set_nodeID(1)) {
 146:Src/can_encos.cpp ****                         save_configuration();
 147:Src/can_encos.cpp ****                         can_Message_t txmsg;
 148:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 149:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 150:Src/can_encos.cpp ****                         txmsg.len = 6;
 151:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x7F;
 152:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x7F;
 153:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 154:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x05;
 155:Src/can_encos.cpp ****                         txmsg.buf[4] = 0x7F;
 156:Src/can_encos.cpp ****                         txmsg.buf[5] = 0x7F;
 157:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 158:Src/can_encos.cpp ****                     }
 159:Src/can_encos.cpp ****                 } else {
 160:Src/can_encos.cpp ****                 uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 161:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 162:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 163:Src/can_encos.cpp ****                         // 设置ID
 164:Src/can_encos.cpp ****                         uint32_t new_id = (msg.buf[4] << 8) + msg.buf[5];
 165:Src/can_encos.cpp ****                         bool success = false;
ARM GAS  /tmp/ccXKOg4w.s 			page 19


 166:Src/can_encos.cpp ****                         if (new_id < 0x7FF && new_id > 0) {
 167:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 168:Src/can_encos.cpp ****                             if(success)
 169:Src/can_encos.cpp ****                             {
 170:Src/can_encos.cpp ****                                 save_configuration();
 171:Src/can_encos.cpp ****                             }
 172:Src/can_encos.cpp ****                             
 173:Src/can_encos.cpp ****                         }
 174:Src/can_encos.cpp ****                         can_Message_t txmsg;
 175:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 176:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 177:Src/can_encos.cpp ****                         txmsg.len = 4;
 178:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 179:Src/can_encos.cpp ****                         if (success) {
 180:Src/can_encos.cpp ****                             txmsg.buf[0] = new_id >> 8;
 181:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 182:Src/can_encos.cpp ****                             txmsg.buf[3] = 4;
 183:Src/can_encos.cpp ****                         } else {
 184:Src/can_encos.cpp ****                             txmsg.buf[0] = id >> 8;
 185:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 186:Src/can_encos.cpp ****                             txmsg.buf[3] = 0;
 187:Src/can_encos.cpp ****                         }
 188:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 189:Src/can_encos.cpp ****                     }
 190:Src/can_encos.cpp ****                     }
 191:Src/can_encos.cpp ****                 }
 192:Src/can_encos.cpp ****             }
 193:Src/can_encos.cpp ****             break;
 194:Src/can_encos.cpp ****         }
 195:Src/can_encos.cpp ****     } else if (0x7FE == msg.id && msg.len >= 3) {
 196:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 197:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 198:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 199:Src/can_encos.cpp ****             bool success = false;
 200:Src/can_encos.cpp **** 
 201:Src/can_encos.cpp ****             if (0xFF == index) {
 202:Src/can_encos.cpp ****                     save_configuration();
 203:Src/can_encos.cpp ****                 success = true;
 204:Src/can_encos.cpp ****             } else if (index < sizeof(axis->config_.ext_cfg) / sizeof(axis->config_.ext_cfg[0])) {
 205:Src/can_encos.cpp ****                 if (7 == msg.len){
 206:Src/can_encos.cpp ****                     uint32_t value = (msg.buf[3] << 24) + (msg.buf[4] << 16) + (msg.buf[5] << 8) + 
 207:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 208:Src/can_encos.cpp ****                     success = true;
 209:Src/can_encos.cpp **** 
 210:Src/can_encos.cpp ****                 }
 211:Src/can_encos.cpp ****             }
 212:Src/can_encos.cpp **** 
 213:Src/can_encos.cpp ****             can_Message_t txmsg;
 214:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 215:Src/can_encos.cpp ****             txmsg.isExt = axis->config_.can_node_id_extended;
 216:Src/can_encos.cpp ****             txmsg.len = 4;
 217:Src/can_encos.cpp ****             txmsg.buf[0] = msg.buf[0];
 218:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 219:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 220:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 221:Src/can_encos.cpp ****             odCAN->write(txmsg);
 222:Src/can_encos.cpp ****         }
ARM GAS  /tmp/ccXKOg4w.s 			page 20


 223:Src/can_encos.cpp ****     }
 224:Src/can_encos.cpp **** }
 493              		.loc 3 224 1
 494 0028 AAE2     		b	.L44
 495              	.L13:
 496              	.LBB62:
 497              	.LBB13:
 498              	.LBB11:
 499              	.LBB5:
 500              	.LBB6:
  57:Src/can_encos.cpp ****                 switch (cmd->mode) {
 501              		.loc 3 57 41
 502 002a 3B68     		ldr	r3, [r7]
 503 002c 0733     		adds	r3, r3, #7
 504 002e FB66     		str	r3, [r7, #108]
  58:Src/can_encos.cpp ****                 case 3:// 手册描述能耗制动，但实际测试用来设置电流
 505              		.loc 3 58 30
 506 0030 FB6E     		ldr	r3, [r7, #108]
 507 0032 1B78     		ldrb	r3, [r3]
 508 0034 C3F34213 		ubfx	r3, r3, #5, #3
 509 0038 DBB2     		uxtb	r3, r3
 510 003a 032B     		cmp	r3, #3
 511 003c 10D1     		bne	.L16
  60:Src/can_encos.cpp ****                     break;
 512              		.loc 3 60 43
 513 003e 7B68     		ldr	r3, [r7, #4]
 514 0040 1868     		ldr	r0, [r3]
  60:Src/can_encos.cpp ****                     break;
 515              		.loc 3 60 54
 516 0042 3B68     		ldr	r3, [r7]
 517 0044 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 518 0046 9BB2     		uxth	r3, r3
  60:Src/can_encos.cpp ****                     break;
 519              		.loc 3 60 56
 520 0048 1B02     		lsls	r3, r3, #8
 521 004a 9AB2     		uxth	r2, r3
  60:Src/can_encos.cpp ****                     break;
 522              		.loc 3 60 73
 523 004c 3B68     		ldr	r3, [r7]
 524 004e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 525 0050 9BB2     		uxth	r3, r3
  60:Src/can_encos.cpp ****                     break;
 526              		.loc 3 60 62
 527 0052 1344     		add	r3, r3, r2
 528 0054 9BB2     		uxth	r3, r3
  60:Src/can_encos.cpp ****                     break;
 529              		.loc 3 60 43
 530 0056 1BB2     		sxth	r3, r3
 531 0058 1946     		mov	r1, r3
 532 005a FFF7FEFF 		bl	_ZN4Axis16set_axis_currentEs
  61:Src/can_encos.cpp ****                 }
 533              		.loc 3 61 21
 534 005e 00BF     		nop
 535              	.L16:
  64:Src/can_encos.cpp ****                 case 1:
 536              		.loc 3 64 30 discriminator 1
 537 0060 FB6E     		ldr	r3, [r7, #108]
ARM GAS  /tmp/ccXKOg4w.s 			page 21


 538 0062 1B78     		ldrb	r3, [r3]
 539 0064 C3F30103 		ubfx	r3, r3, #0, #2
 540 0068 DBB2     		uxtb	r3, r3
 541 006a 012B     		cmp	r3, #1
 542 006c 40F08182 		bne	.L39
  66:Src/can_encos.cpp ****                     break;
 543              		.loc 3 66 37
 544 0070 7868     		ldr	r0, [r7, #4]
 545 0072 FFF7FEFF 		bl	_Z16encos_ack_type_1RP4Axis
  67:Src/can_encos.cpp ****                 }
 546              		.loc 3 67 21
 547 0076 00BF     		nop
 548              	.LBE6:
  70:Src/can_encos.cpp ****         case 8:
 549              		.loc 3 70 13
 550 0078 7BE2     		b	.L39
 551              	.L14:
 552              	.LBB7:
  72:Src/can_encos.cpp ****             case 0:
 553              		.loc 3 72 30
 554 007a 3B68     		ldr	r3, [r7]
 555 007c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  72:Src/can_encos.cpp ****             case 0:
 556              		.loc 3 72 32
 557 007e 5B09     		lsrs	r3, r3, #5
 558 0080 DBB2     		uxtb	r3, r3
 559 0082 002B     		cmp	r3, #0
 560 0084 40F07782 		bne	.L40
 561              	.LBB8:
 562              	.LBB9:
  75:Src/can_encos.cpp ****                     Axis::axis_pvt_parm_t pvt_parm;
 563              		.loc 3 75 38 discriminator 5
 564 0088 3B68     		ldr	r3, [r7]
 565 008a 0733     		adds	r3, r3, #7
 566 008c 3B67     		str	r3, [r7, #112]
  78:Src/can_encos.cpp **** 
 567              		.loc 3 78 37 discriminator 5
 568 008e 7868     		ldr	r0, [r7, #4]
 569 0090 FFF7FEFF 		bl	_Z16encos_ack_type_1RP4Axis
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 570              		.loc 3 80 41 discriminator 5
 571 0094 3B6F     		ldr	r3, [r7, #112]
 572 0096 1B78     		ldrb	r3, [r3]
 573 0098 C3F30403 		ubfx	r3, r3, #0, #5
 574 009c DBB2     		uxtb	r3, r3
 575 009e 9BB2     		uxth	r3, r3
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 576              		.loc 3 80 46 discriminator 5
 577 00a0 DB01     		lsls	r3, r3, #7
 578 00a2 9AB2     		uxth	r2, r3
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 579              		.loc 3 80 59 discriminator 5
 580 00a4 3B6F     		ldr	r3, [r7, #112]
 581 00a6 5B78     		ldrb	r3, [r3, #1]
 582 00a8 C3F34603 		ubfx	r3, r3, #1, #7
 583 00ac DBB2     		uxtb	r3, r3
 584 00ae 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccXKOg4w.s 			page 22


  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 585              		.loc 3 80 52 discriminator 5
 586 00b0 1344     		add	r3, r3, r2
 587 00b2 9BB2     		uxth	r3, r3
  80:Src/can_encos.cpp ****                     pvt_parm.kd = (cmd->kd_h << 8) + cmd->kd_l;
 588              		.loc 3 80 33 discriminator 5
 589 00b4 A7F86030 		strh	r3, [r7, #96]	@ movhi
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 590              		.loc 3 81 41 discriminator 5
 591 00b8 3B6F     		ldr	r3, [r7, #112]
 592 00ba 5B78     		ldrb	r3, [r3, #1]
 593 00bc C3F30003 		ubfx	r3, r3, #0, #1
 594 00c0 DBB2     		uxtb	r3, r3
 595 00c2 9BB2     		uxth	r3, r3
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 596              		.loc 3 81 46 discriminator 5
 597 00c4 1B02     		lsls	r3, r3, #8
 598 00c6 9AB2     		uxth	r2, r3
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 599              		.loc 3 81 59 discriminator 5
 600 00c8 3B6F     		ldr	r3, [r7, #112]
 601 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 602 00cc 9BB2     		uxth	r3, r3
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 603              		.loc 3 81 52 discriminator 5
 604 00ce 1344     		add	r3, r3, r2
 605 00d0 9BB2     		uxth	r3, r3
  81:Src/can_encos.cpp ****                     pvt_parm.pos_setpoint = (cmd->pos_h << 8) + cmd->pos_l;
 606              		.loc 3 81 33 discriminator 5
 607 00d2 A7F86230 		strh	r3, [r7, #98]	@ movhi
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 608              		.loc 3 82 51 discriminator 5
 609 00d6 3B6F     		ldr	r3, [r7, #112]
 610 00d8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 611 00da 9BB2     		uxth	r3, r3
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 612              		.loc 3 82 57 discriminator 5
 613 00dc 1B02     		lsls	r3, r3, #8
 614 00de 9AB2     		uxth	r2, r3
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 615              		.loc 3 82 70 discriminator 5
 616 00e0 3B6F     		ldr	r3, [r7, #112]
 617 00e2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 618 00e4 9BB2     		uxth	r3, r3
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 619              		.loc 3 82 63 discriminator 5
 620 00e6 1344     		add	r3, r3, r2
 621 00e8 9BB2     		uxth	r3, r3
  82:Src/can_encos.cpp ****                     pvt_parm.vel_setpoint = (cmd->vel_h << 4) + cmd->vel_l;
 622              		.loc 3 82 43 discriminator 5
 623 00ea A7F86430 		strh	r3, [r7, #100]	@ movhi
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 624              		.loc 3 83 51 discriminator 5
 625 00ee 3B6F     		ldr	r3, [r7, #112]
 626 00f0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 627 00f2 9BB2     		uxth	r3, r3
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
ARM GAS  /tmp/ccXKOg4w.s 			page 23


 628              		.loc 3 83 57 discriminator 5
 629 00f4 1B01     		lsls	r3, r3, #4
 630 00f6 9AB2     		uxth	r2, r3
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 631              		.loc 3 83 70 discriminator 5
 632 00f8 3B6F     		ldr	r3, [r7, #112]
 633 00fa 9B79     		ldrb	r3, [r3, #6]
 634 00fc C3F30313 		ubfx	r3, r3, #4, #4
 635 0100 DBB2     		uxtb	r3, r3
 636 0102 9BB2     		uxth	r3, r3
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 637              		.loc 3 83 63 discriminator 5
 638 0104 1344     		add	r3, r3, r2
 639 0106 9BB2     		uxth	r3, r3
  83:Src/can_encos.cpp ****                     pvt_parm.torque_setpoint = (cmd->tor_h << 8) + cmd->tor_l;
 640              		.loc 3 83 43 discriminator 5
 641 0108 A7F86630 		strh	r3, [r7, #102]	@ movhi
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 642              		.loc 3 84 54 discriminator 5
 643 010c 3B6F     		ldr	r3, [r7, #112]
 644 010e 9B79     		ldrb	r3, [r3, #6]
 645 0110 C3F30303 		ubfx	r3, r3, #0, #4
 646 0114 DBB2     		uxtb	r3, r3
 647 0116 9BB2     		uxth	r3, r3
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 648              		.loc 3 84 60 discriminator 5
 649 0118 1B02     		lsls	r3, r3, #8
 650 011a 9AB2     		uxth	r2, r3
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 651              		.loc 3 84 73 discriminator 5
 652 011c 3B6F     		ldr	r3, [r7, #112]
 653 011e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 654 0120 9BB2     		uxth	r3, r3
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 655              		.loc 3 84 66 discriminator 5
 656 0122 1344     		add	r3, r3, r2
 657 0124 9BB2     		uxth	r3, r3
  84:Src/can_encos.cpp ****                     axis->set_axis_pvt_parm(&pvt_parm);
 658              		.loc 3 84 46 discriminator 5
 659 0126 A7F86830 		strh	r3, [r7, #104]	@ movhi
  85:Src/can_encos.cpp ****                 }
 660              		.loc 3 85 44 discriminator 5
 661 012a 7B68     		ldr	r3, [r7, #4]
 662 012c 1B68     		ldr	r3, [r3]
 663 012e 07F16002 		add	r2, r7, #96
 664 0132 1146     		mov	r1, r2
 665 0134 1846     		mov	r0, r3
 666 0136 FFF7FEFF 		bl	_ZN4Axis17set_axis_pvt_parmEPNS_15axis_pvt_parm_tE
 667              	.LBE9:
  87:Src/can_encos.cpp ****             }
 668              		.loc 3 87 17 discriminator 5
 669 013a 00BF     		nop
 670              	.LBE8:
 671              	.LBE7:
  89:Src/can_encos.cpp ****         }
 672              		.loc 3 89 13 discriminator 5
 673 013c 1BE2     		b	.L40
ARM GAS  /tmp/ccXKOg4w.s 			page 24


 674              	.L12:
 675              	.LBE5:
 676              	.LBE11:
 677              	.LBE13:
 678              	.LBB14:
 679              	.LBB15:
  91:Src/can_encos.cpp ****         switch (msg.len) {
 680              		.loc 3 91 29
 681 013e 3B68     		ldr	r3, [r7]
 682 0140 1B68     		ldr	r3, [r3]
  91:Src/can_encos.cpp ****         switch (msg.len) {
 683              		.loc 3 91 12
 684 0142 40F2FF72 		movw	r2, #2047
 685 0146 9342     		cmp	r3, r2
 686 0148 40F09D81 		bne	.L20
 687              	.LBB16:
 688              	.LBB17:
  92:Src/can_encos.cpp ****         case 4:
 689              		.loc 3 92 21
 690 014c 3B68     		ldr	r3, [r7]
 691 014e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
  92:Src/can_encos.cpp ****         case 4:
 692              		.loc 3 92 9
 693 0150 042B     		cmp	r3, #4
 694 0152 03D0     		beq	.L21
 695 0154 062B     		cmp	r3, #6
 696 0156 00F0BD80 		beq	.L22
 697              	.LBE17:
 698              	.LBE16:
 699              	.LBE15:
 700              	.LBE14:
 701              	.LBE62:
 702              		.loc 3 224 1
 703 015a 11E2     		b	.L44
 704              	.L21:
 705              	.LBB63:
 706              	.LBB59:
 707              	.LBB57:
 708              	.LBB44:
 709              	.LBB42:
 710              	.LBB18:
 711              	.LBB19:
 712              	.LBB20:
  95:Src/can_encos.cpp ****                     uint32_t id;
 713              		.loc 3 95 38
 714 015c 3B68     		ldr	r3, [r7]
 715 015e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  95:Src/can_encos.cpp ****                     uint32_t id;
 716              		.loc 3 95 17
 717 0160 FF2B     		cmp	r3, #255
 718 0162 59D1     		bne	.L24
  95:Src/can_encos.cpp ****                     uint32_t id;
 719              		.loc 3 95 60 discriminator 1
 720 0164 3B68     		ldr	r3, [r7]
 721 0166 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
  95:Src/can_encos.cpp ****                     uint32_t id;
 722              		.loc 3 95 40 discriminator 1
ARM GAS  /tmp/ccXKOg4w.s 			page 25


 723 0168 FF2B     		cmp	r3, #255
 724 016a 55D1     		bne	.L24
  95:Src/can_encos.cpp ****                     uint32_t id;
 725              		.loc 3 95 82 discriminator 2
 726 016c 3B68     		ldr	r3, [r7]
 727 016e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
  95:Src/can_encos.cpp ****                     uint32_t id;
 728              		.loc 3 95 62 discriminator 2
 729 0170 002B     		cmp	r3, #0
 730 0172 51D1     		bne	.L24
  95:Src/can_encos.cpp ****                     uint32_t id;
 731              		.loc 3 95 104 discriminator 3
 732 0174 3B68     		ldr	r3, [r7]
 733 0176 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  95:Src/can_encos.cpp ****                     uint32_t id;
 734              		.loc 3 95 84 discriminator 3
 735 0178 822B     		cmp	r3, #130
 736 017a 4DD1     		bne	.L24
 737              	.LBB21:
  97:Src/can_encos.cpp ****                     can_Message_t txmsg;
 738              		.loc 3 97 52
 739 017c 7B68     		ldr	r3, [r7, #4]
 740 017e 1B68     		ldr	r3, [r3]
 741 0180 07F15C02 		add	r2, r7, #92
 742 0184 1146     		mov	r1, r2
 743 0186 1846     		mov	r0, r3
 744 0188 FFF7FEFF 		bl	_ZN4Axis10get_nodeIDERm
 745 018c 0346     		mov	r3, r0
 746 018e 87F87F30 		strb	r3, [r7, #127]
  98:Src/can_encos.cpp ****                     txmsg.id = 0x7FF;
 747              		.loc 3 98 35
 748 0192 AE4B     		ldr	r3, .L45
 749 0194 07F14C04 		add	r4, r7, #76
 750 0198 0FCB     		ldm	r3, {r0, r1, r2, r3}
 751 019a 84E80F00 		stm	r4, {r0, r1, r2, r3}
  99:Src/can_encos.cpp ****                     txmsg.isExt = axis->config_.can_node_id_extended;
 752              		.loc 3 99 30
 753 019e 40F2FF73 		movw	r3, #2047
 754 01a2 FB64     		str	r3, [r7, #76]
 100:Src/can_encos.cpp ****                     if (success) {
 755              		.loc 3 100 35
 756 01a4 7B68     		ldr	r3, [r7, #4]
 757 01a6 1B68     		ldr	r3, [r3]
 100:Src/can_encos.cpp ****                     if (success) {
 758              		.loc 3 100 41
 759 01a8 5B68     		ldr	r3, [r3, #4]
 100:Src/can_encos.cpp ****                     if (success) {
 760              		.loc 3 100 49
 761 01aa 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 100:Src/can_encos.cpp ****                     if (success) {
 762              		.loc 3 100 33
 763 01ae 87F85030 		strb	r3, [r7, #80]
 101:Src/can_encos.cpp ****                         txmsg.len = 5;
 764              		.loc 3 101 21
 765 01b2 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 766 01b6 002B     		cmp	r3, #0
 767 01b8 15D0     		beq	.L25
ARM GAS  /tmp/ccXKOg4w.s 			page 26


 102:Src/can_encos.cpp ****                         txmsg.buf[0] = 0xFF;
 768              		.loc 3 102 35
 769 01ba 0523     		movs	r3, #5
 770 01bc 87F85230 		strb	r3, [r7, #82]
 103:Src/can_encos.cpp ****                         txmsg.buf[1] = 0xFF;
 771              		.loc 3 103 38
 772 01c0 FF23     		movs	r3, #255
 773 01c2 87F85330 		strb	r3, [r7, #83]
 104:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 774              		.loc 3 104 38
 775 01c6 FF23     		movs	r3, #255
 776 01c8 87F85430 		strb	r3, [r7, #84]
 105:Src/can_encos.cpp ****                         txmsg.buf[3] = id >> 8;
 777              		.loc 3 105 38
 778 01cc 0123     		movs	r3, #1
 779 01ce 87F85530 		strb	r3, [r7, #85]
 106:Src/can_encos.cpp ****                         txmsg.buf[4] = id & 0xFF;
 780              		.loc 3 106 43
 781 01d2 FB6D     		ldr	r3, [r7, #92]
 782 01d4 1B0A     		lsrs	r3, r3, #8
 106:Src/can_encos.cpp ****                         txmsg.buf[4] = id & 0xFF;
 783              		.loc 3 106 38
 784 01d6 DBB2     		uxtb	r3, r3
 785 01d8 87F85630 		strb	r3, [r7, #86]
 107:Src/can_encos.cpp ****                     } else {
 786              		.loc 3 107 38
 787 01dc FB6D     		ldr	r3, [r7, #92]
 788 01de DBB2     		uxtb	r3, r3
 789 01e0 87F85730 		strb	r3, [r7, #87]
 790 01e4 0EE0     		b	.L26
 791              	.L25:
 109:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x80;
 792              		.loc 3 109 35
 793 01e6 0423     		movs	r3, #4
 794 01e8 87F85230 		strb	r3, [r7, #82]
 110:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x80;
 795              		.loc 3 110 38
 796 01ec 8023     		movs	r3, #128
 797 01ee 87F85330 		strb	r3, [r7, #83]
 111:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 798              		.loc 3 111 38
 799 01f2 8023     		movs	r3, #128
 800 01f4 87F85430 		strb	r3, [r7, #84]
 112:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x80;
 801              		.loc 3 112 38
 802 01f8 0123     		movs	r3, #1
 803 01fa 87F85530 		strb	r3, [r7, #85]
 113:Src/can_encos.cpp ****                     }
 804              		.loc 3 113 38
 805 01fe 8023     		movs	r3, #128
 806 0200 87F85630 		strb	r3, [r7, #86]
 807              	.L26:
 115:Src/can_encos.cpp ****                 } else {
 808              		.loc 3 115 33
 809 0204 924B     		ldr	r3, .L45+4
 810 0206 1B68     		ldr	r3, [r3]
 811 0208 07F14C02 		add	r2, r7, #76
ARM GAS  /tmp/ccXKOg4w.s 			page 27


 812 020c 1146     		mov	r1, r2
 813 020e 1846     		mov	r0, r3
 814 0210 FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 815              	.LBE21:
 115:Src/can_encos.cpp ****                 } else {
 816              		.loc 3 115 40
 817 0214 00BF     		nop
 818              	.LBE20:
 819              	.LBE19:
 140:Src/can_encos.cpp ****         case 6:
 820              		.loc 3 140 13
 821 0216 B0E1     		b	.L41
 822              	.L24:
 823              	.LBB28:
 824              	.LBB27:
 825              	.LBB22:
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 826              		.loc 3 117 45
 827 0218 3B68     		ldr	r3, [r7]
 828 021a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 829              		.loc 3 117 47
 830 021c 1B02     		lsls	r3, r3, #8
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 831              		.loc 3 117 64
 832 021e 3A68     		ldr	r2, [r7]
 833 0220 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 834              		.loc 3 117 53
 835 0222 1344     		add	r3, r3, r2
 117:Src/can_encos.cpp ****                     if (axis->config_.can_node_id == id) {
 836              		.loc 3 117 30
 837 0224 BB67     		str	r3, [r7, #120]
 838              	.LBB23:
 118:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 839              		.loc 3 118 25
 840 0226 7B68     		ldr	r3, [r7, #4]
 841 0228 1B68     		ldr	r3, [r3]
 118:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 842              		.loc 3 118 31
 843 022a 5B68     		ldr	r3, [r3, #4]
 118:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 844              		.loc 3 118 39
 845 022c 1B6F     		ldr	r3, [r3, #112]
 118:Src/can_encos.cpp ****                         if (0 == msg.buf[2] && 3 == msg.buf[3]) {
 846              		.loc 3 118 21
 847 022e BA6F     		ldr	r2, [r7, #120]
 848 0230 9A42     		cmp	r2, r3
 849 0232 40F0A281 		bne	.L41
 850              	.LBB24:
 851              	.LBB25:
 119:Src/can_encos.cpp ****                             // 设置零位
 852              		.loc 3 119 43
 853 0236 3B68     		ldr	r3, [r7]
 854 0238 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 119:Src/can_encos.cpp ****                             // 设置零位
 855              		.loc 3 119 25
ARM GAS  /tmp/ccXKOg4w.s 			page 28


 856 023a 002B     		cmp	r3, #0
 857 023c 40F09D81 		bne	.L41
 119:Src/can_encos.cpp ****                             // 设置零位
 858              		.loc 3 119 62 discriminator 1
 859 0240 3B68     		ldr	r3, [r7]
 860 0242 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 119:Src/can_encos.cpp ****                             // 设置零位
 861              		.loc 3 119 45 discriminator 1
 862 0244 032B     		cmp	r3, #3
 863 0246 40F09881 		bne	.L41
 864              	.LBB26:
 121:Src/can_encos.cpp ****                             if(success)
 865              		.loc 3 121 60
 866 024a 7B68     		ldr	r3, [r7, #4]
 867 024c 1B68     		ldr	r3, [r3]
 868 024e 1846     		mov	r0, r3
 869 0250 FFF7FEFF 		bl	_ZN4Axis10set_offsetEv
 870 0254 0346     		mov	r3, r0
 871 0256 87F87730 		strb	r3, [r7, #119]
 122:Src/can_encos.cpp ****                             {
 872              		.loc 3 122 29
 873 025a 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 874 025e 002B     		cmp	r3, #0
 875 0260 01D0     		beq	.L28
 124:Src/can_encos.cpp ****                             }
 876              		.loc 3 124 51
 877 0262 FFF7FEFF 		bl	_Z18save_configurationv
 878              	.L28:
 127:Src/can_encos.cpp ****                             txmsg.id = 0x7FF;
 879              		.loc 3 127 43
 880 0266 794B     		ldr	r3, .L45
 881 0268 07F13C04 		add	r4, r7, #60
 882 026c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 883 026e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 128:Src/can_encos.cpp ****                             txmsg.isExt = axis->config_.can_node_id_extended;
 884              		.loc 3 128 38
 885 0272 40F2FF73 		movw	r3, #2047
 886 0276 FB63     		str	r3, [r7, #60]
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 887              		.loc 3 129 43
 888 0278 7B68     		ldr	r3, [r7, #4]
 889 027a 1B68     		ldr	r3, [r3]
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 890              		.loc 3 129 49
 891 027c 5B68     		ldr	r3, [r3, #4]
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 892              		.loc 3 129 57
 893 027e 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 129:Src/can_encos.cpp ****                             txmsg.len = 4;
 894              		.loc 3 129 41
 895 0282 87F84030 		strb	r3, [r7, #64]
 130:Src/can_encos.cpp ****                             txmsg.buf[0] = axis->config_.can_node_id >> 8;
 896              		.loc 3 130 39
 897 0286 0423     		movs	r3, #4
 898 0288 87F84230 		strb	r3, [r7, #66]
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 899              		.loc 3 131 44
ARM GAS  /tmp/ccXKOg4w.s 			page 29


 900 028c 7B68     		ldr	r3, [r7, #4]
 901 028e 1B68     		ldr	r3, [r3]
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 902              		.loc 3 131 50
 903 0290 5B68     		ldr	r3, [r3, #4]
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 904              		.loc 3 131 58
 905 0292 1B6F     		ldr	r3, [r3, #112]
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 906              		.loc 3 131 70
 907 0294 1B0A     		lsrs	r3, r3, #8
 131:Src/can_encos.cpp ****                             txmsg.buf[1] = axis->config_.can_node_id & 0xFF;
 908              		.loc 3 131 42
 909 0296 DBB2     		uxtb	r3, r3
 910 0298 87F84330 		strb	r3, [r7, #67]
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 911              		.loc 3 132 44
 912 029c 7B68     		ldr	r3, [r7, #4]
 913 029e 1B68     		ldr	r3, [r3]
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 914              		.loc 3 132 50
 915 02a0 5B68     		ldr	r3, [r3, #4]
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 916              		.loc 3 132 58
 917 02a2 1B6F     		ldr	r3, [r3, #112]
 132:Src/can_encos.cpp ****                             txmsg.buf[2] = 0x01;
 918              		.loc 3 132 42
 919 02a4 DBB2     		uxtb	r3, r3
 920 02a6 87F84430 		strb	r3, [r7, #68]
 133:Src/can_encos.cpp ****                             txmsg.buf[3] = success ? 3 : 0;
 921              		.loc 3 133 42
 922 02aa 0123     		movs	r3, #1
 923 02ac 87F84530 		strb	r3, [r7, #69]
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 924              		.loc 3 134 42
 925 02b0 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 926 02b4 002B     		cmp	r3, #0
 927 02b6 01D0     		beq	.L29
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 928              		.loc 3 134 42 is_stmt 0 discriminator 1
 929 02b8 0323     		movs	r3, #3
 930 02ba 00E0     		b	.L30
 931              	.L29:
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 932              		.loc 3 134 42 discriminator 2
 933 02bc 0023     		movs	r3, #0
 934              	.L30:
 134:Src/can_encos.cpp ****                             odCAN->write(txmsg);
 935              		.loc 3 134 42 discriminator 4
 936 02be 87F84630 		strb	r3, [r7, #70]
 135:Src/can_encos.cpp ****                         }
 937              		.loc 3 135 41 is_stmt 1 discriminator 4
 938 02c2 634B     		ldr	r3, .L45+4
 939 02c4 1B68     		ldr	r3, [r3]
 940 02c6 07F13C02 		add	r2, r7, #60
 941 02ca 1146     		mov	r1, r2
 942 02cc 1846     		mov	r0, r3
ARM GAS  /tmp/ccXKOg4w.s 			page 30


 943 02ce FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 944              	.LBE26:
 945              	.LBE25:
 946              	.LBE24:
 947              	.LBE23:
 948              	.LBE22:
 949              	.LBE27:
 950              	.LBE28:
 140:Src/can_encos.cpp ****         case 6:
 951              		.loc 3 140 13 discriminator 4
 952 02d2 52E1     		b	.L41
 953              	.L22:
 954              	.LBB29:
 955              	.LBB30:
 143:Src/can_encos.cpp ****                     // 重置ID为1
 956              		.loc 3 143 38
 957 02d4 3B68     		ldr	r3, [r7]
 958 02d6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 959              		.loc 3 143 17
 960 02d8 7F2B     		cmp	r3, #127
 961 02da 4DD1     		bne	.L31
 143:Src/can_encos.cpp ****                     // 重置ID为1
 962              		.loc 3 143 60 discriminator 1
 963 02dc 3B68     		ldr	r3, [r7]
 964 02de 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 965              		.loc 3 143 40 discriminator 1
 966 02e0 7F2B     		cmp	r3, #127
 967 02e2 49D1     		bne	.L31
 143:Src/can_encos.cpp ****                     // 重置ID为1
 968              		.loc 3 143 79 discriminator 2
 969 02e4 3B68     		ldr	r3, [r7]
 970 02e6 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 971              		.loc 3 143 62 discriminator 2
 972 02e8 002B     		cmp	r3, #0
 973 02ea 45D1     		bne	.L31
 143:Src/can_encos.cpp ****                     // 重置ID为1
 974              		.loc 3 143 98 discriminator 3
 975 02ec 3B68     		ldr	r3, [r7]
 976 02ee 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 977              		.loc 3 143 81 discriminator 3
 978 02f0 052B     		cmp	r3, #5
 979 02f2 41D1     		bne	.L31
 143:Src/can_encos.cpp ****                     // 重置ID为1
 980              		.loc 3 143 120 discriminator 4
 981 02f4 3B68     		ldr	r3, [r7]
 982 02f6 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 983              		.loc 3 143 100 discriminator 4
 984 02f8 7F2B     		cmp	r3, #127
 985 02fa 3DD1     		bne	.L31
 143:Src/can_encos.cpp ****                     // 重置ID为1
 986              		.loc 3 143 142 discriminator 5
 987 02fc 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccXKOg4w.s 			page 31


 988 02fe 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 143:Src/can_encos.cpp ****                     // 重置ID为1
 989              		.loc 3 143 122 discriminator 5
 990 0300 7F2B     		cmp	r3, #127
 991 0302 39D1     		bne	.L31
 992              	.LBB31:
 993              	.LBB32:
 145:Src/can_encos.cpp ****                         save_configuration();
 994              		.loc 3 145 41
 995 0304 7B68     		ldr	r3, [r7, #4]
 996 0306 1B68     		ldr	r3, [r3]
 997 0308 0121     		movs	r1, #1
 998 030a 1846     		mov	r0, r3
 999 030c FFF7FEFF 		bl	_ZN4Axis10set_nodeIDEm
 1000 0310 0346     		mov	r3, r0
 145:Src/can_encos.cpp ****                         save_configuration();
 1001              		.loc 3 145 21
 1002 0312 002B     		cmp	r3, #0
 1003 0314 00F0B580 		beq	.L42
 1004              	.LBB33:
 146:Src/can_encos.cpp ****                         can_Message_t txmsg;
 1005              		.loc 3 146 43
 1006 0318 FFF7FEFF 		bl	_Z18save_configurationv
 147:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 1007              		.loc 3 147 39
 1008 031c 4B4B     		ldr	r3, .L45
 1009 031e 07F12C04 		add	r4, r7, #44
 1010 0322 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1011 0324 84E80F00 		stm	r4, {r0, r1, r2, r3}
 148:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 1012              		.loc 3 148 34
 1013 0328 40F2FF73 		movw	r3, #2047
 1014 032c FB62     		str	r3, [r7, #44]
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 1015              		.loc 3 149 39
 1016 032e 7B68     		ldr	r3, [r7, #4]
 1017 0330 1B68     		ldr	r3, [r3]
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 1018              		.loc 3 149 45
 1019 0332 5B68     		ldr	r3, [r3, #4]
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 1020              		.loc 3 149 53
 1021 0334 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 149:Src/can_encos.cpp ****                         txmsg.len = 6;
 1022              		.loc 3 149 37
 1023 0338 87F83030 		strb	r3, [r7, #48]
 150:Src/can_encos.cpp ****                         txmsg.buf[0] = 0x7F;
 1024              		.loc 3 150 35
 1025 033c 0623     		movs	r3, #6
 1026 033e 87F83230 		strb	r3, [r7, #50]
 151:Src/can_encos.cpp ****                         txmsg.buf[1] = 0x7F;
 1027              		.loc 3 151 38
 1028 0342 7F23     		movs	r3, #127
 1029 0344 87F83330 		strb	r3, [r7, #51]
 152:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 1030              		.loc 3 152 38
 1031 0348 7F23     		movs	r3, #127
ARM GAS  /tmp/ccXKOg4w.s 			page 32


 1032 034a 87F83430 		strb	r3, [r7, #52]
 153:Src/can_encos.cpp ****                         txmsg.buf[3] = 0x05;
 1033              		.loc 3 153 38
 1034 034e 0123     		movs	r3, #1
 1035 0350 87F83530 		strb	r3, [r7, #53]
 154:Src/can_encos.cpp ****                         txmsg.buf[4] = 0x7F;
 1036              		.loc 3 154 38
 1037 0354 0523     		movs	r3, #5
 1038 0356 87F83630 		strb	r3, [r7, #54]
 155:Src/can_encos.cpp ****                         txmsg.buf[5] = 0x7F;
 1039              		.loc 3 155 38
 1040 035a 7F23     		movs	r3, #127
 1041 035c 87F83730 		strb	r3, [r7, #55]
 156:Src/can_encos.cpp ****                         odCAN->write(txmsg);
 1042              		.loc 3 156 38
 1043 0360 7F23     		movs	r3, #127
 1044 0362 87F83830 		strb	r3, [r7, #56]
 157:Src/can_encos.cpp ****                     }
 1045              		.loc 3 157 37
 1046 0366 3A4B     		ldr	r3, .L45+4
 1047 0368 1B68     		ldr	r3, [r3]
 1048 036a 07F12C02 		add	r2, r7, #44
 1049 036e 1146     		mov	r1, r2
 1050 0370 1846     		mov	r0, r3
 1051 0372 FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 1052              	.LBE33:
 1053              	.LBE32:
 1054              	.LBE31:
 158:Src/can_encos.cpp ****                 } else {
 1055              		.loc 3 158 21
 1056 0376 84E0     		b	.L42
 1057              	.L31:
 1058              	.LBB34:
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 1059              		.loc 3 160 41
 1060 0378 3B68     		ldr	r3, [r7]
 1061 037a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 1062              		.loc 3 160 43
 1063 037c 1B02     		lsls	r3, r3, #8
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 1064              		.loc 3 160 60
 1065 037e 3A68     		ldr	r2, [r7]
 1066 0380 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 1067              		.loc 3 160 49
 1068 0382 1344     		add	r3, r3, r2
 160:Src/can_encos.cpp ****                 if (axis->config_.can_node_id == id) {
 1069              		.loc 3 160 26
 1070 0384 C7F88430 		str	r3, [r7, #132]
 1071              	.LBB35:
 161:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 1072              		.loc 3 161 21
 1073 0388 7B68     		ldr	r3, [r7, #4]
 1074 038a 1B68     		ldr	r3, [r3]
 161:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 1075              		.loc 3 161 27
ARM GAS  /tmp/ccXKOg4w.s 			page 33


 1076 038c 5B68     		ldr	r3, [r3, #4]
 161:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 1077              		.loc 3 161 35
 1078 038e 1B6F     		ldr	r3, [r3, #112]
 161:Src/can_encos.cpp ****                     if (0 == msg.buf[2] && 4 == msg.buf[3]) {
 1079              		.loc 3 161 17
 1080 0390 D7F88420 		ldr	r2, [r7, #132]
 1081 0394 9A42     		cmp	r2, r3
 1082 0396 40F0F280 		bne	.L43
 1083              	.LBB36:
 1084              	.LBB37:
 162:Src/can_encos.cpp ****                         // 设置ID
 1085              		.loc 3 162 39
 1086 039a 3B68     		ldr	r3, [r7]
 1087 039c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 162:Src/can_encos.cpp ****                         // 设置ID
 1088              		.loc 3 162 21
 1089 039e 002B     		cmp	r3, #0
 1090 03a0 40F0ED80 		bne	.L43
 162:Src/can_encos.cpp ****                         // 设置ID
 1091              		.loc 3 162 58 discriminator 1
 1092 03a4 3B68     		ldr	r3, [r7]
 1093 03a6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 162:Src/can_encos.cpp ****                         // 设置ID
 1094              		.loc 3 162 41 discriminator 1
 1095 03a8 042B     		cmp	r3, #4
 1096 03aa 40F0E880 		bne	.L43
 1097              	.LBB38:
 164:Src/can_encos.cpp ****                         bool success = false;
 1098              		.loc 3 164 53
 1099 03ae 3B68     		ldr	r3, [r7]
 1100 03b0 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 164:Src/can_encos.cpp ****                         bool success = false;
 1101              		.loc 3 164 55
 1102 03b2 1B02     		lsls	r3, r3, #8
 164:Src/can_encos.cpp ****                         bool success = false;
 1103              		.loc 3 164 72
 1104 03b4 3A68     		ldr	r2, [r7]
 1105 03b6 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 164:Src/can_encos.cpp ****                         bool success = false;
 1106              		.loc 3 164 61
 1107 03b8 1344     		add	r3, r3, r2
 164:Src/can_encos.cpp ****                         bool success = false;
 1108              		.loc 3 164 34
 1109 03ba C7F88030 		str	r3, [r7, #128]
 165:Src/can_encos.cpp ****                         if (new_id < 0x7FF && new_id > 0) {
 1110              		.loc 3 165 30
 1111 03be 0023     		movs	r3, #0
 1112 03c0 87F89730 		strb	r3, [r7, #151]
 166:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 1113              		.loc 3 166 25
 1114 03c4 D7F88030 		ldr	r3, [r7, #128]
 1115 03c8 40F2FE72 		movw	r2, #2046
 1116 03cc 9342     		cmp	r3, r2
 1117 03ce 13D8     		bhi	.L34
 166:Src/can_encos.cpp ****                             success = axis->set_nodeID(new_id);
 1118              		.loc 3 166 44 discriminator 1
ARM GAS  /tmp/ccXKOg4w.s 			page 34


 1119 03d0 D7F88030 		ldr	r3, [r7, #128]
 1120 03d4 002B     		cmp	r3, #0
 1121 03d6 0FD0     		beq	.L34
 167:Src/can_encos.cpp ****                             if(success)
 1122              		.loc 3 167 55
 1123 03d8 7B68     		ldr	r3, [r7, #4]
 1124 03da 1B68     		ldr	r3, [r3]
 1125 03dc D7F88010 		ldr	r1, [r7, #128]
 1126 03e0 1846     		mov	r0, r3
 1127 03e2 FFF7FEFF 		bl	_ZN4Axis10set_nodeIDEm
 1128 03e6 0346     		mov	r3, r0
 1129 03e8 87F89730 		strb	r3, [r7, #151]
 168:Src/can_encos.cpp ****                             {
 1130              		.loc 3 168 29
 1131 03ec 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 1132 03f0 002B     		cmp	r3, #0
 1133 03f2 01D0     		beq	.L34
 170:Src/can_encos.cpp ****                             }
 1134              		.loc 3 170 51
 1135 03f4 FFF7FEFF 		bl	_Z18save_configurationv
 1136              	.L34:
 174:Src/can_encos.cpp ****                         txmsg.id = 0x7FF;
 1137              		.loc 3 174 39
 1138 03f8 144B     		ldr	r3, .L45
 1139 03fa 07F11C04 		add	r4, r7, #28
 1140 03fe 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1141 0400 84E80F00 		stm	r4, {r0, r1, r2, r3}
 175:Src/can_encos.cpp ****                         txmsg.isExt = axis->config_.can_node_id_extended;
 1142              		.loc 3 175 34
 1143 0404 40F2FF73 		movw	r3, #2047
 1144 0408 FB61     		str	r3, [r7, #28]
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1145              		.loc 3 176 39
 1146 040a 7B68     		ldr	r3, [r7, #4]
 1147 040c 1B68     		ldr	r3, [r3]
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1148              		.loc 3 176 45
 1149 040e 5B68     		ldr	r3, [r3, #4]
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1150              		.loc 3 176 53
 1151 0410 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 176:Src/can_encos.cpp ****                         txmsg.len = 4;
 1152              		.loc 3 176 37
 1153 0414 87F82030 		strb	r3, [r7, #32]
 177:Src/can_encos.cpp ****                         txmsg.buf[2] = 0x01;
 1154              		.loc 3 177 35
 1155 0418 0423     		movs	r3, #4
 1156 041a 87F82230 		strb	r3, [r7, #34]
 178:Src/can_encos.cpp ****                         if (success) {
 1157              		.loc 3 178 38
 1158 041e 0123     		movs	r3, #1
 1159 0420 87F82530 		strb	r3, [r7, #37]
 179:Src/can_encos.cpp ****                             txmsg.buf[0] = new_id >> 8;
 1160              		.loc 3 179 25
 1161 0424 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 1162 0428 002B     		cmp	r3, #0
 1163 042a 13D0     		beq	.L35
ARM GAS  /tmp/ccXKOg4w.s 			page 35


 180:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 1164              		.loc 3 180 51
 1165 042c D7F88030 		ldr	r3, [r7, #128]
 1166 0430 1B0A     		lsrs	r3, r3, #8
 180:Src/can_encos.cpp ****                             txmsg.buf[1] = new_id & 0xFF;
 1167              		.loc 3 180 42
 1168 0432 DBB2     		uxtb	r3, r3
 1169 0434 87F82330 		strb	r3, [r7, #35]
 181:Src/can_encos.cpp ****                             txmsg.buf[3] = 4;
 1170              		.loc 3 181 42
 1171 0438 D7F88030 		ldr	r3, [r7, #128]
 1172 043c DBB2     		uxtb	r3, r3
 1173 043e 87F82430 		strb	r3, [r7, #36]
 182:Src/can_encos.cpp ****                         } else {
 1174              		.loc 3 182 42
 1175 0442 0423     		movs	r3, #4
 1176 0444 87F82630 		strb	r3, [r7, #38]
 1177 0448 12E0     		b	.L36
 1178              	.L46:
 1179 044a 00BF     		.align	2
 1180              	.L45:
 1181 044c 00000000 		.word	.LC0
 1182 0450 00000000 		.word	odCAN
 1183              	.L35:
 184:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 1184              		.loc 3 184 47
 1185 0454 D7F88430 		ldr	r3, [r7, #132]
 1186 0458 1B0A     		lsrs	r3, r3, #8
 184:Src/can_encos.cpp ****                             txmsg.buf[1] = id & 0xFF;
 1187              		.loc 3 184 42
 1188 045a DBB2     		uxtb	r3, r3
 1189 045c 87F82330 		strb	r3, [r7, #35]
 185:Src/can_encos.cpp ****                             txmsg.buf[3] = 0;
 1190              		.loc 3 185 42
 1191 0460 D7F88430 		ldr	r3, [r7, #132]
 1192 0464 DBB2     		uxtb	r3, r3
 1193 0466 87F82430 		strb	r3, [r7, #36]
 186:Src/can_encos.cpp ****                         }
 1194              		.loc 3 186 42
 1195 046a 0023     		movs	r3, #0
 1196 046c 87F82630 		strb	r3, [r7, #38]
 1197              	.L36:
 188:Src/can_encos.cpp ****                     }
 1198              		.loc 3 188 37
 1199 0470 454B     		ldr	r3, .L47
 1200 0472 1B68     		ldr	r3, [r3]
 1201 0474 07F11C02 		add	r2, r7, #28
 1202 0478 1146     		mov	r1, r2
 1203 047a 1846     		mov	r0, r3
 1204 047c FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 1205              	.LBE38:
 1206              	.LBE37:
 1207              	.LBE36:
 1208              	.LBE35:
 1209              	.LBE34:
 1210              	.LBE30:
 1211              	.LBE29:
ARM GAS  /tmp/ccXKOg4w.s 			page 36


 193:Src/can_encos.cpp ****         }
 1212              		.loc 3 193 13
 1213 0480 7DE0     		b	.L43
 1214              	.L42:
 1215              	.LBB40:
 1216              	.LBB39:
 158:Src/can_encos.cpp ****                 } else {
 1217              		.loc 3 158 21
 1218 0482 00BF     		nop
 1219              	.LBE39:
 1220              	.LBE40:
 193:Src/can_encos.cpp ****         }
 1221              		.loc 3 193 13
 1222 0484 7BE0     		b	.L43
 1223              	.L20:
 1224              	.LBE18:
 1225              	.LBE42:
 1226              	.LBE44:
 1227              	.LBB45:
 1228              	.LBB46:
 195:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 1229              		.loc 3 195 29
 1230 0486 3B68     		ldr	r3, [r7]
 1231 0488 1B68     		ldr	r3, [r3]
 195:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 1232              		.loc 3 195 12
 1233 048a 40F2FE72 		movw	r2, #2046
 1234 048e 9342     		cmp	r3, r2
 1235 0490 76D1     		bne	.L44
 195:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 1236              		.loc 3 195 39 discriminator 1
 1237 0492 3B68     		ldr	r3, [r7]
 1238 0494 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 195:Src/can_encos.cpp ****         uint32_t id = (msg.buf[0] << 8) + msg.buf[1];
 1239              		.loc 3 195 32 discriminator 1
 1240 0496 022B     		cmp	r3, #2
 1241 0498 72D9     		bls	.L44
 1242              	.LBB47:
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 1243              		.loc 3 196 33
 1244 049a 3B68     		ldr	r3, [r7]
 1245 049c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 1246              		.loc 3 196 35
 1247 049e 1B02     		lsls	r3, r3, #8
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 1248              		.loc 3 196 52
 1249 04a0 3A68     		ldr	r2, [r7]
 1250 04a2 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 1251              		.loc 3 196 41
 1252 04a4 1344     		add	r3, r3, r2
 196:Src/can_encos.cpp ****         if (axis->config_.can_node_id == id) {
 1253              		.loc 3 196 18
 1254 04a6 C7F89030 		str	r3, [r7, #144]
 1255              	.LBB48:
 197:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
ARM GAS  /tmp/ccXKOg4w.s 			page 37


 1256              		.loc 3 197 13
 1257 04aa 7B68     		ldr	r3, [r7, #4]
 1258 04ac 1B68     		ldr	r3, [r3]
 197:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 1259              		.loc 3 197 19
 1260 04ae 5B68     		ldr	r3, [r3, #4]
 197:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 1261              		.loc 3 197 27
 1262 04b0 1B6F     		ldr	r3, [r3, #112]
 197:Src/can_encos.cpp ****             uint8_t index = msg.buf[2];
 1263              		.loc 3 197 9
 1264 04b2 D7F89020 		ldr	r2, [r7, #144]
 1265 04b6 9A42     		cmp	r2, r3
 1266 04b8 62D1     		bne	.L44
 1267              	.LBB49:
 198:Src/can_encos.cpp ****             bool success = false;
 1268              		.loc 3 198 21
 1269 04ba 3B68     		ldr	r3, [r7]
 1270 04bc 5B7A     		ldrb	r3, [r3, #9]
 1271 04be 87F88F30 		strb	r3, [r7, #143]
 199:Src/can_encos.cpp **** 
 1272              		.loc 3 199 18
 1273 04c2 0023     		movs	r3, #0
 1274 04c4 87F89630 		strb	r3, [r7, #150]
 1275              	.LBB50:
 201:Src/can_encos.cpp ****                     save_configuration();
 1276              		.loc 3 201 13
 1277 04c8 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 1278 04cc FF2B     		cmp	r3, #255
 1279 04ce 05D1     		bne	.L37
 202:Src/can_encos.cpp ****                 success = true;
 1280              		.loc 3 202 39
 1281 04d0 FFF7FEFF 		bl	_Z18save_configurationv
 203:Src/can_encos.cpp ****             } else if (index < sizeof(axis->config_.ext_cfg) / sizeof(axis->config_.ext_cfg[0])) {
 1282              		.loc 3 203 25
 1283 04d4 0123     		movs	r3, #1
 1284 04d6 87F89630 		strb	r3, [r7, #150]
 1285 04da 24E0     		b	.L38
 1286              	.L37:
 1287              	.LBB51:
 1288              	.LBB52:
 204:Src/can_encos.cpp ****                 if (7 == msg.len){
 1289              		.loc 3 204 30
 1290 04dc 97F98F30 		ldrsb	r3, [r7, #143]
 204:Src/can_encos.cpp ****                 if (7 == msg.len){
 1291              		.loc 3 204 20
 1292 04e0 002B     		cmp	r3, #0
 1293 04e2 20DB     		blt	.L38
 1294              	.LBB53:
 1295              	.LBB54:
 205:Src/can_encos.cpp ****                     uint32_t value = (msg.buf[3] << 24) + (msg.buf[4] << 16) + (msg.buf[5] << 8) + 
 1296              		.loc 3 205 30
 1297 04e4 3B68     		ldr	r3, [r7]
 1298 04e6 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 205:Src/can_encos.cpp ****                     uint32_t value = (msg.buf[3] << 24) + (msg.buf[4] << 16) + (msg.buf[5] << 8) + 
 1299              		.loc 3 205 17
 1300 04e8 072B     		cmp	r3, #7
ARM GAS  /tmp/ccXKOg4w.s 			page 38


 1301 04ea 1CD1     		bne	.L38
 1302              	.LBB55:
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1303              		.loc 3 206 48
 1304 04ec 3B68     		ldr	r3, [r7]
 1305 04ee 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1306              		.loc 3 206 50
 1307 04f0 1A06     		lsls	r2, r3, #24
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1308              		.loc 3 206 69
 1309 04f2 3B68     		ldr	r3, [r7]
 1310 04f4 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1311              		.loc 3 206 71
 1312 04f6 1B04     		lsls	r3, r3, #16
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1313              		.loc 3 206 57
 1314 04f8 1A44     		add	r2, r2, r3
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1315              		.loc 3 206 90
 1316 04fa 3B68     		ldr	r3, [r7]
 1317 04fc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1318              		.loc 3 206 92
 1319 04fe 1B02     		lsls	r3, r3, #8
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1320              		.loc 3 206 78
 1321 0500 1344     		add	r3, r3, r2
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1322              		.loc 3 206 109
 1323 0502 3A68     		ldr	r2, [r7]
 1324 0504 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1325              		.loc 3 206 98
 1326 0506 1344     		add	r3, r3, r2
 206:Src/can_encos.cpp ****                     axis->config_.ext_cfg[index] = value;
 1327              		.loc 3 206 30
 1328 0508 C7F88830 		str	r3, [r7, #136]
 207:Src/can_encos.cpp ****                     success = true;
 1329              		.loc 3 207 21
 1330 050c 7B68     		ldr	r3, [r7, #4]
 1331 050e 1B68     		ldr	r3, [r3]
 207:Src/can_encos.cpp ****                     success = true;
 1332              		.loc 3 207 27
 1333 0510 5B68     		ldr	r3, [r3, #4]
 207:Src/can_encos.cpp ****                     success = true;
 1334              		.loc 3 207 43
 1335 0512 97F88F20 		ldrb	r2, [r7, #143]	@ zero_extendqisi2
 207:Src/can_encos.cpp ****                     success = true;
 1336              		.loc 3 207 50
 1337 0516 2032     		adds	r2, r2, #32
 1338 0518 D7F88810 		ldr	r1, [r7, #136]
 1339 051c 43F82210 		str	r1, [r3, r2, lsl #2]
 208:Src/can_encos.cpp **** 
 1340              		.loc 3 208 29
 1341 0520 0123     		movs	r3, #1
ARM GAS  /tmp/ccXKOg4w.s 			page 39


 1342 0522 87F89630 		strb	r3, [r7, #150]
 1343              	.L38:
 1344              	.LBE55:
 1345              	.LBE54:
 1346              	.LBE53:
 1347              	.LBE52:
 1348              	.LBE51:
 1349              	.LBE50:
 213:Src/can_encos.cpp ****             txmsg.id = 0x7FE;
 1350              		.loc 3 213 27 discriminator 17
 1351 0526 194B     		ldr	r3, .L47+4
 1352 0528 07F10C04 		add	r4, r7, #12
 1353 052c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1354 052e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 214:Src/can_encos.cpp ****             txmsg.isExt = axis->config_.can_node_id_extended;
 1355              		.loc 3 214 22 discriminator 17
 1356 0532 40F2FE73 		movw	r3, #2046
 1357 0536 FB60     		str	r3, [r7, #12]
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 1358              		.loc 3 215 27 discriminator 17
 1359 0538 7B68     		ldr	r3, [r7, #4]
 1360 053a 1B68     		ldr	r3, [r3]
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 1361              		.loc 3 215 33 discriminator 17
 1362 053c 5B68     		ldr	r3, [r3, #4]
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 1363              		.loc 3 215 41 discriminator 17
 1364 053e 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 215:Src/can_encos.cpp ****             txmsg.len = 4;
 1365              		.loc 3 215 25 discriminator 17
 1366 0542 3B74     		strb	r3, [r7, #16]
 216:Src/can_encos.cpp ****             txmsg.buf[0] = msg.buf[0];
 1367              		.loc 3 216 23 discriminator 17
 1368 0544 0423     		movs	r3, #4
 1369 0546 BB74     		strb	r3, [r7, #18]
 217:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 1370              		.loc 3 217 37 discriminator 17
 1371 0548 3B68     		ldr	r3, [r7]
 1372 054a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 217:Src/can_encos.cpp ****             txmsg.buf[1] = msg.buf[1];
 1373              		.loc 3 217 26 discriminator 17
 1374 054c FB74     		strb	r3, [r7, #19]
 218:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 1375              		.loc 3 218 37 discriminator 17
 1376 054e 3B68     		ldr	r3, [r7]
 1377 0550 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 218:Src/can_encos.cpp ****             txmsg.buf[2] = msg.buf[2];
 1378              		.loc 3 218 26 discriminator 17
 1379 0552 3B75     		strb	r3, [r7, #20]
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1380              		.loc 3 219 37 discriminator 17
 1381 0554 3B68     		ldr	r3, [r7]
 1382 0556 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 219:Src/can_encos.cpp ****             txmsg.buf[3] = success;
 1383              		.loc 3 219 26 discriminator 17
 1384 0558 7B75     		strb	r3, [r7, #21]
 220:Src/can_encos.cpp ****             odCAN->write(txmsg);
ARM GAS  /tmp/ccXKOg4w.s 			page 40


 1385              		.loc 3 220 28 discriminator 17
 1386 055a 97F89630 		ldrb	r3, [r7, #150]	@ zero_extendqisi2
 220:Src/can_encos.cpp ****             odCAN->write(txmsg);
 1387              		.loc 3 220 26 discriminator 17
 1388 055e BB75     		strb	r3, [r7, #22]
 221:Src/can_encos.cpp ****         }
 1389              		.loc 3 221 25 discriminator 17
 1390 0560 094B     		ldr	r3, .L47
 1391 0562 1B68     		ldr	r3, [r3]
 1392 0564 07F10C02 		add	r2, r7, #12
 1393 0568 1146     		mov	r1, r2
 1394 056a 1846     		mov	r0, r3
 1395 056c FFF7FEFF 		bl	_ZN9ODriveCAN5writeER13can_Message_t
 1396              	.LBE49:
 1397              	.LBE48:
 1398              	.LBE47:
 1399              	.LBE46:
 1400              	.LBE45:
 1401              	.LBE57:
 1402              	.LBE59:
 1403              	.LBE63:
 1404              		.loc 3 224 1 discriminator 17
 1405 0570 06E0     		b	.L44
 1406              	.L39:
 1407              	.LBB64:
 1408              	.LBB60:
 1409              	.LBB12:
 1410              	.LBB10:
  70:Src/can_encos.cpp ****         case 8:
 1411              		.loc 3 70 13
 1412 0572 00BF     		nop
 1413 0574 04E0     		b	.L44
 1414              	.L40:
  89:Src/can_encos.cpp ****         }
 1415              		.loc 3 89 13
 1416 0576 00BF     		nop
 1417 0578 02E0     		b	.L44
 1418              	.L41:
 1419              	.LBE10:
 1420              	.LBE12:
 1421              	.LBE60:
 1422              	.LBB61:
 1423              	.LBB58:
 1424              	.LBB56:
 1425              	.LBB43:
 1426              	.LBB41:
 140:Src/can_encos.cpp ****         case 6:
 1427              		.loc 3 140 13
 1428 057a 00BF     		nop
 1429 057c 00E0     		b	.L44
 1430              	.L43:
 193:Src/can_encos.cpp ****         }
 1431              		.loc 3 193 13
 1432 057e 00BF     		nop
 1433              	.L44:
 1434              	.LBE41:
 1435              	.LBE43:
ARM GAS  /tmp/ccXKOg4w.s 			page 41


 1436              	.LBE56:
 1437              	.LBE58:
 1438              	.LBE61:
 1439              	.LBE64:
 1440              		.loc 3 224 1
 1441 0580 00BF     		nop
 1442 0582 9C37     		adds	r7, r7, #156
 1443              	.LCFI26:
 1444              		.cfi_def_cfa_offset 12
 1445 0584 BD46     		mov	sp, r7
 1446              	.LCFI27:
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 0586 90BD     		pop	{r4, r7, pc}
 1450              	.L48:
 1451              		.align	2
 1452              	.L47:
 1453 0588 00000000 		.word	odCAN
 1454 058c 00000000 		.word	.LC0
 1455              		.cfi_endproc
 1456              	.LFE5625:
 1458              		.section	.text._ZN8CANEncos18handle_can_messageER13can_Message_t,"ax",%progbits
 1459              		.align	1
 1460              		.global	_ZN8CANEncos18handle_can_messageER13can_Message_t
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu fpv4-sp-d16
 1466              	_ZN8CANEncos18handle_can_messageER13can_Message_t:
 1467              	.LFB5626:
 225:Src/can_encos.cpp **** 
 226:Src/can_encos.cpp **** void CANEncos::handle_can_message(can_Message_t& msg)
 227:Src/can_encos.cpp **** {
 1468              		.loc 3 227 1
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 16
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472 0000 80B5     		push	{r7, lr}
 1473              	.LCFI28:
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 84B0     		sub	sp, sp, #16
 1478              	.LCFI29:
 1479              		.cfi_def_cfa_offset 24
 1480 0004 00AF     		add	r7, sp, #0
 1481              	.LCFI30:
 1482              		.cfi_def_cfa_register 7
 1483 0006 7860     		str	r0, [r7, #4]
 228:Src/can_encos.cpp ****     Axis* axis = nullptr;
 1484              		.loc 3 228 11
 1485 0008 0023     		movs	r3, #0
 1486 000a BB60     		str	r3, [r7, #8]
 1487              	.LBB65:
 229:Src/can_encos.cpp **** 
 230:Src/can_encos.cpp ****     for (uint8_t i = 0; i < 1; i++) {
 1488              		.loc 3 230 18
ARM GAS  /tmp/ccXKOg4w.s 			page 42


 1489 000c 0023     		movs	r3, #0
 1490 000e FB73     		strb	r3, [r7, #15]
 1491              	.L56:
 1492              		.loc 3 230 27 discriminator 1
 1493 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1494 0012 002B     		cmp	r3, #0
 1495 0014 2ED1     		bne	.L50
 231:Src/can_encos.cpp ****         if (axes->config_.can_node_id_extended != msg.isExt)
 1496              		.loc 3 231 19
 1497 0016 264B     		ldr	r3, .L62
 1498 0018 1B68     		ldr	r3, [r3]
 1499 001a 5B68     		ldr	r3, [r3, #4]
 1500              		.loc 3 231 27
 1501 001c 93F87420 		ldrb	r2, [r3, #116]	@ zero_extendqisi2
 1502              		.loc 3 231 55
 1503 0020 7B68     		ldr	r3, [r7, #4]
 1504 0022 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1505              		.loc 3 231 9
 1506 0024 9A42     		cmp	r2, r3
 1507 0026 20D1     		bne	.L60
 232:Src/can_encos.cpp ****             continue;
 233:Src/can_encos.cpp **** 
 234:Src/can_encos.cpp ****         if (0x7FF == msg.id) {
 1508              		.loc 3 234 26
 1509 0028 7B68     		ldr	r3, [r7, #4]
 1510 002a 1B68     		ldr	r3, [r3]
 1511              		.loc 3 234 9
 1512 002c 40F2FF72 		movw	r2, #2047
 1513 0030 9342     		cmp	r3, r2
 1514 0032 04D1     		bne	.L53
 235:Src/can_encos.cpp ****             encos_cmd_handle(axes, msg);
 1515              		.loc 3 235 29 discriminator 1
 1516 0034 7968     		ldr	r1, [r7, #4]
 1517 0036 1E48     		ldr	r0, .L62
 1518 0038 FFF7FEFF 		bl	_Z16encos_cmd_handleRP4AxisR13can_Message_t
 236:Src/can_encos.cpp ****             continue;
 1519              		.loc 3 236 13 discriminator 1
 1520 003c 16E0     		b	.L52
 1521              	.L53:
 237:Src/can_encos.cpp ****         }
 238:Src/can_encos.cpp **** 
 239:Src/can_encos.cpp ****         if (axes->config_.can_node_id == msg.id) {
 1522              		.loc 3 239 19
 1523 003e 1C4B     		ldr	r3, .L62
 1524 0040 1B68     		ldr	r3, [r3]
 1525 0042 5B68     		ldr	r3, [r3, #4]
 1526              		.loc 3 239 27
 1527 0044 1A6F     		ldr	r2, [r3, #112]
 1528              		.loc 3 239 46
 1529 0046 7B68     		ldr	r3, [r7, #4]
 1530 0048 1B68     		ldr	r3, [r3]
 1531              		.loc 3 239 9
 1532 004a 9A42     		cmp	r2, r3
 1533 004c 0ED1     		bne	.L52
 240:Src/can_encos.cpp ****             if (nullptr == axis) {
 1534              		.loc 3 240 25
 1535 004e BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccXKOg4w.s 			page 43


 1536              		.loc 3 240 13
 1537 0050 002B     		cmp	r3, #0
 1538 0052 03D1     		bne	.L54
 241:Src/can_encos.cpp ****                 axis = axes;
 1539              		.loc 3 241 22
 1540 0054 164B     		ldr	r3, .L62
 1541 0056 1B68     		ldr	r3, [r3]
 1542 0058 BB60     		str	r3, [r7, #8]
 1543 005a 07E0     		b	.L52
 1544              	.L54:
 242:Src/can_encos.cpp ****             } else {
 243:Src/can_encos.cpp ****                 // Duplicate can IDs, don't assign to any axis
 244:Src/can_encos.cpp ****                 odCAN->set_error(ODriveCAN::ERROR_DUPLICATE_CAN_IDS);
 1545              		.loc 3 244 33
 1546 005c 154B     		ldr	r3, .L62+4
 1547 005e 1B68     		ldr	r3, [r3]
 1548 0060 0121     		movs	r1, #1
 1549 0062 1846     		mov	r0, r3
 1550 0064 FFF7FEFF 		bl	_ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE
 245:Src/can_encos.cpp ****                 return;
 1551              		.loc 3 245 17
 1552 0068 1EE0     		b	.L49
 1553              	.L60:
 232:Src/can_encos.cpp **** 
 1554              		.loc 3 232 13
 1555 006a 00BF     		nop
 1556              	.L52:
 230:Src/can_encos.cpp ****         if (axes->config_.can_node_id_extended != msg.isExt)
 1557              		.loc 3 230 5 discriminator 2
 1558 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1559 006e 0133     		adds	r3, r3, #1
 1560 0070 FB73     		strb	r3, [r7, #15]
 1561 0072 CDE7     		b	.L56
 1562              	.L50:
 1563              	.LBE65:
 246:Src/can_encos.cpp ****             }
 247:Src/can_encos.cpp ****         }
 248:Src/can_encos.cpp ****     }
 249:Src/can_encos.cpp ****     
 250:Src/can_encos.cpp ****     if (nullptr == axis)
 1564              		.loc 3 250 17
 1565 0074 BB68     		ldr	r3, [r7, #8]
 1566              		.loc 3 250 5
 1567 0076 002B     		cmp	r3, #0
 1568 0078 15D0     		beq	.L61
 251:Src/can_encos.cpp ****         return;
 252:Src/can_encos.cpp **** 
 253:Src/can_encos.cpp ****     encos_cmd_handle(axis, msg);
 1569              		.loc 3 253 21
 1570 007a 07F10803 		add	r3, r7, #8
 1571 007e 7968     		ldr	r1, [r7, #4]
 1572 0080 1846     		mov	r0, r3
 1573 0082 FFF7FEFF 		bl	_Z16encos_cmd_handleRP4AxisR13can_Message_t
 254:Src/can_encos.cpp ****     axis->watchdog_feed();
 1574              		.loc 3 254 24
 1575 0086 BB68     		ldr	r3, [r7, #8]
 1576 0088 1846     		mov	r0, r3
ARM GAS  /tmp/ccXKOg4w.s 			page 44


 1577 008a FFF7FEFF 		bl	_ZN4Axis13watchdog_feedEv
 255:Src/can_encos.cpp ****     if(axis->config_.can_node_id == msg.id)
 1578              		.loc 3 255 14
 1579 008e BB68     		ldr	r3, [r7, #8]
 1580 0090 5B68     		ldr	r3, [r3, #4]
 1581              		.loc 3 255 22
 1582 0092 1A6F     		ldr	r2, [r3, #112]
 1583              		.loc 3 255 41
 1584 0094 7B68     		ldr	r3, [r7, #4]
 1585 0096 1B68     		ldr	r3, [r3]
 1586              		.loc 3 255 5
 1587 0098 9A42     		cmp	r2, r3
 1588 009a 05D1     		bne	.L49
 256:Src/can_encos.cpp ****     {
 257:Src/can_encos.cpp ****         axis->axis_enable_by_encos();
 1589              		.loc 3 257 35
 1590 009c BB68     		ldr	r3, [r7, #8]
 1591 009e 1846     		mov	r0, r3
 1592 00a0 FFF7FEFF 		bl	_ZN4Axis20axis_enable_by_encosEv
 1593 00a4 00E0     		b	.L49
 1594              	.L61:
 251:Src/can_encos.cpp **** 
 1595              		.loc 3 251 9
 1596 00a6 00BF     		nop
 1597              	.L49:
 258:Src/can_encos.cpp ****     }
 259:Src/can_encos.cpp ****         
 260:Src/can_encos.cpp **** }
 1598              		.loc 3 260 1
 1599 00a8 1037     		adds	r7, r7, #16
 1600              	.LCFI31:
 1601              		.cfi_def_cfa_offset 8
 1602 00aa BD46     		mov	sp, r7
 1603              	.LCFI32:
 1604              		.cfi_def_cfa_register 13
 1605              		@ sp needed
 1606 00ac 80BD     		pop	{r7, pc}
 1607              	.L63:
 1608 00ae 00BF     		.align	2
 1609              	.L62:
 1610 00b0 00000000 		.word	axes
 1611 00b4 00000000 		.word	odCAN
 1612              		.cfi_endproc
 1613              	.LFE5626:
 1615              		.text
 1616              	.Letext0:
 1617              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 1618              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1619              		.file 6 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1620              		.file 7 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdint.h"
 1621              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1622              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1623              		.file 10 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1624              		.file 11 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1625              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1626              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1627              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
ARM GAS  /tmp/ccXKOg4w.s 			page 45


 1628              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 1629              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1630              		.file 17 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/basi
 1631              		.file 18 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_trai
 1632              		.file 19 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 1633              		.file 20 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debug/deb
 1634              		.file 21 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdlib"
 1635              		.file 22 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/algo
 1636              		.file 23 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/exce
 1637              		.file 24 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 1638              		.file 25 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allo
 1639              		.file 26 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1640              		.file 27 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/variant"
 1641              		.file 28 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/enab
 1642              		.file 29 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional"
 1643              		.file 30 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/functiona
 1644              		.file 31 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstring"
 1645              		.file 32 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cwchar"
 1646              		.file 33 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/clocale"
 1647              		.file 34 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/char
 1648              		.file 35 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdint"
 1649              		.file 36 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/string_vi
 1650              		.file 37 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdio"
 1651              		.file 38 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allo
 1652              		.file 39 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/initializ
 1653              		.file 40 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stri
 1654              		.file 41 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/loca
 1655              		.file 42 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/ios_
 1656              		.file 43 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath"
 1657              		.file 44 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 1658              		.file 45 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1659              		.file 46 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/array"
 1660              		.file 47 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1661              		.file 48 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/refw
 1662              		.file 49 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pars
 1663              		.file 50 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1664              		.file 51 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pred
 1665              		.file 52 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_a
 1666              		.file 53 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/alloc
 1667              		.file 54 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 1668              		.file 55 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_types.h"
 1669              		.file 56 "<built-in>"
 1670              		.file 57 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/reent.h"
 1671              		.file 58 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/lock.h"
 1672              		.file 59 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h"
 1673              		.file 60 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/pstl/exec
 1674              		.file 61 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/string.h"
 1675              		.file 62 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stdar
 1676              		.file 63 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/wchar.h"
 1677              		.file 64 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/locale.h"
 1678              		.file 65 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 1679              		.file 66 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
 1680              		.file 67 "Inc/can_helpers.hpp"
 1681              		.file 68 "Inc/interfaces.hpp"
 1682              		.file 69 "Inc/interface_can.hpp"
 1683              		.file 70 "Inc/can_encos.hpp"
 1684              		.file 71 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
ARM GAS  /tmp/ccXKOg4w.s 			page 46


 1685              		.file 72 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1686              		.file 73 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1687              		.file 74 "Inc/mc_type.h"
 1688              		.file 75 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 1689              		.file 76 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math.h"
 1690              		.file 77 "Inc/main.h"
 1691              		.file 78 "Inc/task_timer.hpp"
 1692              		.file 79 "Inc/component.hpp"
 1693              		.file 80 "Inc/utils.hpp"
 1694              		.file 81 "Inc/encoder.hpp"
 1695              		.file 82 "Inc/controller.hpp"
 1696              		.file 83 "Inc/motor.hpp"
 1697              		.file 84 "Inc/main_.hpp"
 1698              		.file 85 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/stdlib.h"
ARM GAS  /tmp/ccXKOg4w.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_encos.cpp
     /tmp/ccXKOg4w.s:18     .rodata._ZN6__pstl9execution2v1L3seqE:0000000000000000 $d
     /tmp/ccXKOg4w.s:21     .rodata._ZN6__pstl9execution2v1L3seqE:0000000000000000 _ZN6__pstl9execution2v1L3seqE
     /tmp/ccXKOg4w.s:24     .rodata._ZN6__pstl9execution2v1L3parE:0000000000000000 $d
     /tmp/ccXKOg4w.s:27     .rodata._ZN6__pstl9execution2v1L3parE:0000000000000000 _ZN6__pstl9execution2v1L3parE
     /tmp/ccXKOg4w.s:30     .rodata._ZN6__pstl9execution2v1L9par_unseqE:0000000000000000 $d
     /tmp/ccXKOg4w.s:33     .rodata._ZN6__pstl9execution2v1L9par_unseqE:0000000000000000 _ZN6__pstl9execution2v1L9par_unseqE
     /tmp/ccXKOg4w.s:36     .rodata._ZN6__pstl9execution2v1L5unseqE:0000000000000000 $d
     /tmp/ccXKOg4w.s:39     .rodata._ZN6__pstl9execution2v1L5unseqE:0000000000000000 _ZN6__pstl9execution2v1L5unseqE
     /tmp/ccXKOg4w.s:42     .text._ZL20__gthread_key_deletei:0000000000000000 $t
     /tmp/ccXKOg4w.s:49     .text._ZL20__gthread_key_deletei:0000000000000000 _ZL20__gthread_key_deletei
     /tmp/ccXKOg4w.s:88     .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccXKOg4w.s:91     .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 _ZL16OFFSET_TAB_CCMRx
     /tmp/ccXKOg4w.s:94     .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccXKOg4w.s:97     .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 _ZL14SHIFT_TAB_OCxx
     /tmp/ccXKOg4w.s:100    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccXKOg4w.s:103    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 _ZL14SHIFT_TAB_ICxx
     /tmp/ccXKOg4w.s:106    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccXKOg4w.s:109    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 _ZL14SHIFT_TAB_CCxP
     /tmp/ccXKOg4w.s:112    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccXKOg4w.s:115    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 _ZL14SHIFT_TAB_OISx
     /tmp/ccXKOg4w.s:118    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccXKOg4w.s:121    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 _ZL19USART_PRESCALER_TAB
     /tmp/ccXKOg4w.s:135    .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccXKOg4w.s:138    .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 _ZL18CHANNEL_OFFSET_TAB
     /tmp/ccXKOg4w.s:141    .rodata._ZL12one_by_sqrt3:0000000000000000 $d
     /tmp/ccXKOg4w.s:144    .rodata._ZL12one_by_sqrt3:0000000000000000 _ZL12one_by_sqrt3
     /tmp/ccXKOg4w.s:147    .rodata._ZL12two_by_sqrt3:0000000000000000 $d
     /tmp/ccXKOg4w.s:150    .rodata._ZL12two_by_sqrt3:0000000000000000 _ZL12two_by_sqrt3
     /tmp/ccXKOg4w.s:153    .rodata._ZL10sqrt3_by_2:0000000000000000 $d
     /tmp/ccXKOg4w.s:156    .rodata._ZL10sqrt3_by_2:0000000000000000 _ZL10sqrt3_by_2
     /tmp/ccXKOg4w.s:159    .text._ZN4Axis10set_nodeIDEm:0000000000000000 $t
     /tmp/ccXKOg4w.s:166    .text._ZN4Axis10set_nodeIDEm:0000000000000000 _ZN4Axis10set_nodeIDEm
     /tmp/ccXKOg4w.s:224    .text._ZN4Axis10get_nodeIDERm:0000000000000000 $t
     /tmp/ccXKOg4w.s:231    .text._ZN4Axis10get_nodeIDERm:0000000000000000 _ZN4Axis10get_nodeIDERm
     /tmp/ccXKOg4w.s:278    .rodata:0000000000000000 $d
     /tmp/ccXKOg4w.s:287    .text._Z16encos_ack_type_1RP4Axis:0000000000000000 $t
     /tmp/ccXKOg4w.s:294    .text._Z16encos_ack_type_1RP4Axis:0000000000000000 _Z16encos_ack_type_1RP4Axis
     /tmp/ccXKOg4w.s:433    .text._Z16encos_ack_type_1RP4Axis:00000000000000b0 $d
     /tmp/ccXKOg4w.s:439    .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000000 $t
     /tmp/ccXKOg4w.s:446    .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000000 _Z16encos_cmd_handleRP4AxisR13can_Message_t
     /tmp/ccXKOg4w.s:1181   .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:000000000000044c $d
     /tmp/ccXKOg4w.s:1185   .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000454 $t
     /tmp/ccXKOg4w.s:1453   .text._Z16encos_cmd_handleRP4AxisR13can_Message_t:0000000000000588 $d
     /tmp/ccXKOg4w.s:1459   .text._ZN8CANEncos18handle_can_messageER13can_Message_t:0000000000000000 $t
     /tmp/ccXKOg4w.s:1466   .text._ZN8CANEncos18handle_can_messageER13can_Message_t:0000000000000000 _ZN8CANEncos18handle_can_messageER13can_Message_t
     /tmp/ccXKOg4w.s:1610   .text._ZN8CANEncos18handle_can_messageER13can_Message_t:00000000000000b0 $d

UNDEFINED SYMBOLS
_ZN4Axis14get_axis_stateEPNS_12axis_state_tE
_ZN9ODriveCAN5writeER13can_Message_t
odCAN
_ZN4Axis16set_axis_currentEs
_ZN4Axis17set_axis_pvt_parmEPNS_15axis_pvt_parm_tE
_ZN4Axis10set_offsetEv
_Z18save_configurationv
ARM GAS  /tmp/ccXKOg4w.s 			page 48


_ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE
_ZN4Axis13watchdog_feedEv
_ZN4Axis20axis_enable_by_encosEv
axes
