ARM GAS  /tmp/ccUaSLfZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"aspep.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ASPEP_start,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	ASPEP_start
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	ASPEP_start:
  28              	.LVL0:
  29              	.LFB1439:
  30              		.file 1 "Src/aspep.c"
   1:Src/aspep.c   **** 
   2:Src/aspep.c   **** /**
   3:Src/aspep.c   ****   ******************************************************************************
   4:Src/aspep.c   ****   * @file   aspep.c
   5:Src/aspep.c   ****   * @author Motor Control SDK Team, ST Microelectronics
   6:Src/aspep.c   ****   * @brief  This file provides firmware functions that implement the aspep protocol
   7:Src/aspep.c   ****   *
   8:Src/aspep.c   ****   *
   9:Src/aspep.c   ****   ******************************************************************************
  10:Src/aspep.c   ****   * @attention
  11:Src/aspep.c   ****   *
  12:Src/aspep.c   ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  13:Src/aspep.c   ****   * All rights reserved.</center></h2>
  14:Src/aspep.c   ****   *
  15:Src/aspep.c   ****   * This software component is licensed by ST under Ultimate Liberty license
  16:Src/aspep.c   ****   * SLA0044, the "License"; You may not use this file except in compliance with
  17:Src/aspep.c   ****   * the License. You may obtain a copy of the License at:
  18:Src/aspep.c   ****   *                             www.st.com/SLA0044
  19:Src/aspep.c   ****   *
  20:Src/aspep.c   ****   ******************************************************************************
  21:Src/aspep.c   ****   */
  22:Src/aspep.c   **** 
  23:Src/aspep.c   **** #include <stdint.h>
  24:Src/aspep.c   **** #include "aspep.h"
  25:Src/aspep.c   **** 
  26:Src/aspep.c   **** /* Local definition */
  27:Src/aspep.c   **** #define MIN(a,b) ( ((a) < (b)) ? (a) : (b) )
  28:Src/aspep.c   **** 
ARM GAS  /tmp/ccUaSLfZ.s 			page 2


  29:Src/aspep.c   **** /* Local functions */
  30:Src/aspep.c   **** static bool ASPEP_CheckBeacon (ASPEP_Handle_t *pHandle);
  31:Src/aspep.c   **** static uint8_t ASPEP_TXframeProcess(ASPEP_Handle_t *pHandle, uint8_t packetType, void *txBuffer, ui
  32:Src/aspep.c   **** void ASPEP_sendBeacon(ASPEP_Handle_t *pHandle, ASPEP_Capabilities_def *capabilities);
  33:Src/aspep.c   **** void ASPEP_sendPing(ASPEP_Handle_t *pHandle, uint8_t state, uint16_t PacketNumber);
  34:Src/aspep.c   **** 
  35:Src/aspep.c   **** /** @addtogroup MCSDK
  36:Src/aspep.c   ****   * @{
  37:Src/aspep.c   ****   */
  38:Src/aspep.c   **** 
  39:Src/aspep.c   **** /** @addtogroup MCP
  40:Src/aspep.c   ****   * @{
  41:Src/aspep.c   ****   */
  42:Src/aspep.c   **** 
  43:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
  44:Src/aspep.c   **** /**
  45:Src/aspep.c   ****   * @brief CRC-4 lookup table with 256 entries
  46:Src/aspep.c   ****   *
  47:Src/aspep.c   ****   * Computes and checks the CRC on the header with the BYTE granularity.
  48:Src/aspep.c   ****   *
  49:Src/aspep.c   ****   * When computing the CRC, the 7th nibble must to be processed with the CRC_Lookup4
  50:Src/aspep.c   ****   * table. Indeed, the header contains 7 nibbles (28 bits) of data on which the CRC is
  51:Src/aspep.c   ****   * to be computed. Hence, the CRC4_Lookup8 table cannot be used for the last nibble.
  52:Src/aspep.c   ****   *
  53:Src/aspep.c   ****   * Using only this lookup table requires that the amount of input data is a multiple of
  54:Src/aspep.c   ****   * 8 bits.
  55:Src/aspep.c   ****   */
  56:Src/aspep.c   **** static uint8_t const CRC4_Lookup8[] =
  57:Src/aspep.c   **** {
  58:Src/aspep.c   ****   /*          0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   A,     B,    C,    D,    E
  59:Src/aspep.c   ****   /* 0 */  0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e, 0x07, 0x05, 0x03, 0x01, 0x0f, 0x0d, 0x0b
  60:Src/aspep.c   ****   /* 1 */  0x07, 0x05, 0x03, 0x01, 0x0f, 0x0d, 0x0b, 0x09, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c
  61:Src/aspep.c   ****   /* 2 */  0x0e, 0x0c, 0x0a, 0x08, 0x06, 0x04, 0x02, 0x00, 0x09, 0x0b, 0x0d, 0x0f, 0x01, 0x03, 0x05
  62:Src/aspep.c   ****   /* 3 */  0x09, 0x0b, 0x0d, 0x0f, 0x01, 0x03, 0x05, 0x07, 0x0e, 0x0c, 0x0a, 0x08, 0x06, 0x04, 0x02
  63:Src/aspep.c   ****   /* 4 */  0x0b, 0x09, 0x0f, 0x0d, 0x03, 0x01, 0x07, 0x05, 0x0c, 0x0e, 0x08, 0x0a, 0x04, 0x06, 0x00
  64:Src/aspep.c   ****   /* 5 */  0x0c, 0x0e, 0x08, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x0b, 0x09, 0x0f, 0x0d, 0x03, 0x01, 0x07
  65:Src/aspep.c   ****   /* 6 */  0x05, 0x07, 0x01, 0x03, 0x0d, 0x0f, 0x09, 0x0b, 0x02, 0x00, 0x06, 0x04, 0x0a, 0x08, 0x0e
  66:Src/aspep.c   ****   /* 7 */  0x02, 0x00, 0x06, 0x04, 0x0a, 0x08, 0x0e, 0x0c, 0x05, 0x07, 0x01, 0x03, 0x0d, 0x0f, 0x09
  67:Src/aspep.c   ****   /* 8 */  0x01, 0x03, 0x05, 0x07, 0x09, 0x0b, 0x0d, 0x0f, 0x06, 0x04, 0x02, 0x00, 0x0e, 0x0c, 0x0a
  68:Src/aspep.c   ****   /* 9 */  0x06, 0x04, 0x02, 0x00, 0x0e, 0x0c, 0x0a, 0x08, 0x01, 0x03, 0x05, 0x07, 0x09, 0x0b, 0x0d
  69:Src/aspep.c   ****   /* A */  0x0f, 0x0d, 0x0b, 0x09, 0x07, 0x05, 0x03, 0x01, 0x08, 0x0a, 0x0c, 0x0e, 0x00, 0x02, 0x04
  70:Src/aspep.c   ****   /* B */  0x08, 0x0a, 0x0c, 0x0e, 0x00, 0x02, 0x04, 0x06, 0x0f, 0x0d, 0x0b, 0x09, 0x07, 0x05, 0x03
  71:Src/aspep.c   ****   /* C */  0x0a, 0x08, 0x0e, 0x0c, 0x02, 0x00, 0x06, 0x04, 0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01
  72:Src/aspep.c   ****   /* D */  0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01, 0x03, 0x0a, 0x08, 0x0e, 0x0c, 0x02, 0x00, 0x06
  73:Src/aspep.c   ****   /* E */  0x04, 0x06, 0x00, 0x02, 0x0c, 0x0e, 0x08, 0x0a, 0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f
  74:Src/aspep.c   ****   /* F */  0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f, 0x0d, 0x04, 0x06, 0x00, 0x02, 0x0c, 0x0e, 0x08
  75:Src/aspep.c   **** };
  76:Src/aspep.c   **** 
  77:Src/aspep.c   **** /**
  78:Src/aspep.c   ****   * @brief CRC-4 lookup table with 16 entries
  79:Src/aspep.c   ****   *
  80:Src/aspep.c   ****   *  Used to compute and check the CRC on the header with either the BYTE or NIBBLE granularity
  81:Src/aspep.c   ****   * In case the BYTE granularity is used, the table is used only with the 7th nibble of the header
  82:Src/aspep.c   ****   * (bits 24 to 27) when computing the CRC.
  83:Src/aspep.c   ****   */
  84:Src/aspep.c   ****   //cstat !MISRAC2012-Rule-8.9_a
  85:Src/aspep.c   **** static uint8_t const CRC4_Lookup4[] =
ARM GAS  /tmp/ccUaSLfZ.s 			page 3


  86:Src/aspep.c   **** {
  87:Src/aspep.c   ****   /*   0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   A,     B,    C,    D,    E,    F 
  88:Src/aspep.c   ****   0x00, 0x07, 0x0e, 0x09, 0x0b, 0x0c, 0x05, 0x02, 0x01, 0x06, 0x0f, 0x08, 0x0a, 0x0d, 0x04, 0x03
  89:Src/aspep.c   **** };
  90:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
  91:Src/aspep.c   **** 
  92:Src/aspep.c   **** /**
  93:Src/aspep.c   ****   * @brief Computes a 4-bit CRC on the 28 LSBs of @p header and returns it in the 4 MSB of the head
  94:Src/aspep.c   ****   *
  95:Src/aspep.c   ****   *  The generator polynomial used for the CRC is x^4+x+1 (ref. CCITT-G704).
  96:Src/aspep.c   ****   *
  97:Src/aspep.c   ****   *  The 28 input bits are split into 7 nibbles that are processed from the least significant to th
  98:Src/aspep.c   ****   * most significant one as follows:
  99:Src/aspep.c   ****   *
 100:Src/aspep.c   ****   *  - the least significant (4-bit) nibble is processed first as if it were the most significant p
 101:Src/aspep.c   ****   *    of the divident;
 102:Src/aspep.c   ****   *  - the order of bits in each nibble is unchanged for processing which would leads to the follow
 103:Src/aspep.c   ****   *    bit processing sequence: 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12, 19, 18, 17, 1
 104:Src/aspep.c   ****   *    23, 22, 21, 20, 27, 26, 25, 24.
 105:Src/aspep.c   ****   *
 106:Src/aspep.c   ****   *  Two lookup tables based implementations are proposed: one solely relying on a 16 entries looku
 107:Src/aspep.c   ****   * table and another one that also uses a 256 entries lookup table. This last one is the default. 
 108:Src/aspep.c   ****   * requires 256 more bytes than the first but is also roughly two times faster.
 109:Src/aspep.c   ****   *
 110:Src/aspep.c   ****   *  The 16 entries lookup table based implementation is enabled when the CRC4_PER_NIBBLE preproces
 111:Src/aspep.c   ****   * flag is defined.
 112:Src/aspep.c   ****   *
 113:Src/aspep.c   ****   *  Note that the default, 256 entries lookup table based implementation also uses the 16 entries 
 114:Src/aspep.c   ****   * table because the amount of input data is not a multiple of 8 bits.
 115:Src/aspep.c   ****   *
 116:Src/aspep.c   ****   * The resulting CRC is written in bits 28 to 31 of @p header and the whole header is returned.
 117:Src/aspep.c   ****   */
 118:Src/aspep.c   **** static void ASPEP_ComputeHeaderCRC(uint32_t *headerPtr)
 119:Src/aspep.c   **** {
 120:Src/aspep.c   ****   uint8_t crc = 0;
 121:Src/aspep.c   ****   uint32_t header = *headerPtr;
 122:Src/aspep.c   **** 
 123:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
 124:Src/aspep.c   ****   header &= 0x0fffffffU;
 125:Src/aspep.c   **** 
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)(header         & 0xffU)];
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 128:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 129:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 130:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 131:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)(header         & 0xfU)];
 132:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  4U) & 0xfU)];
 133:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  8U) & 0xfU)];
 134:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 12U) & 0xfU)];
 135:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 16U) & 0xfU)];
 136:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 20U) & 0xfU)];
 137:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0xfU)];
 138:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
 139:Src/aspep.c   **** 
 140:Src/aspep.c   ****   *headerPtr |= (uint32_t)crc << 28;
 141:Src/aspep.c   **** 
 142:Src/aspep.c   **** }
ARM GAS  /tmp/ccUaSLfZ.s 			page 4


 143:Src/aspep.c   **** 
 144:Src/aspep.c   **** /**
 145:Src/aspep.c   ****   * @brief Checks if @p header contains a valid 4-bit CRC and return true if this is the case and f
 146:Src/aspep.c   ****   *
 147:Src/aspep.c   ****   *  The CRC is computed over the 32 bits of the @p header. If the result is 0, the CRC is consider
 148:Src/aspep.c   ****   * and true is returned. If the result is not 0, false is returned.
 149:Src/aspep.c   ****   *
 150:Src/aspep.c   ****   * @sa ASPEP_ComputeHeaderCRC
 151:Src/aspep.c   ****   */
 152:Src/aspep.c   **** static bool ASPEP_CheckHeaderCRC(uint32_t header)
 153:Src/aspep.c   **** {
 154:Src/aspep.c   ****   uint8_t crc = 0;
 155:Src/aspep.c   **** 
 156:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)(header         & 0xffU)];
 158:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 160:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 161:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 162:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)(header         & 0xfU)];
 163:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  4U) & 0xfU)];
 164:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  8U) & 0xfU)];
 165:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 12U) & 0xfU)];
 166:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 16U) & 0xfU)];
 167:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 20U) & 0xfU)];
 168:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0xfU)];
 169:Src/aspep.c   ****   crc = crc ^ (uint8_t)((header >> 28) & 0xf);
 170:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
 171:Src/aspep.c   **** 
 172:Src/aspep.c   ****   return (crc == 0U);
 173:Src/aspep.c   **** }
 174:Src/aspep.c   **** 
 175:Src/aspep.c   **** /**
 176:Src/aspep.c   ****   * @brief  Starts ASPEP communication by configuring UART.
 177:Src/aspep.c   ****   *
 178:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 179:Src/aspep.c   ****   */
 180:Src/aspep.c   **** void ASPEP_start(ASPEP_Handle_t *pHandle)
 181:Src/aspep.c   **** {
  31              		.loc 1 181 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
 182:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 183:Src/aspep.c   ****   if (MC_NULL == pHandle)
 184:Src/aspep.c   ****   {
 185:Src/aspep.c   ****     /* Nothing to do */
 186:Src/aspep.c   ****   }
 187:Src/aspep.c   ****   else
 188:Src/aspep.c   ****   {
 189:Src/aspep.c   **** #endif
 190:Src/aspep.c   ****     pHandle->fASPEP_HWInit(pHandle->ASPEPIp);
  35              		.loc 1 190 5 view .LVU1
 181:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
  36              		.loc 1 181 1 is_stmt 0 view .LVU2
  37 0000 70B5     		push	{r4, r5, r6, lr}
  38              	.LCFI0:
ARM GAS  /tmp/ccUaSLfZ.s 			page 5


  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 14, -4
 181:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
  44              		.loc 1 181 1 view .LVU3
  45 0002 0446     		mov	r4, r0
  46              		.loc 1 190 5 view .LVU4
  47 0004 4069     		ldr	r0, [r0, #20]
  48              	.LVL1:
  49              		.loc 1 190 5 view .LVU5
  50 0006 E36C     		ldr	r3, [r4, #76]
  51 0008 9847     		blx	r3
  52              	.LVL2:
 191:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
  53              		.loc 1 191 5 is_stmt 1 view .LVU6
 192:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
  54              		.loc 1 192 5 view .LVU7
 191:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
  55              		.loc 1 191 26 is_stmt 0 view .LVU8
  56 000a 0023     		movs	r3, #0
 193:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 194:Src/aspep.c   ****     /* Configure UART to receive first packet*/
 195:Src/aspep.c   ****     pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
  57              		.loc 1 195 5 view .LVU9
  58 000c 656D     		ldr	r5, [r4, #84]
 191:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
  59              		.loc 1 191 26 view .LVU10
  60 000e A4F86430 		strh	r3, [r4, #100]	@ movhi
 193:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
  61              		.loc 1 193 5 is_stmt 1 view .LVU11
 193:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
  62              		.loc 1 193 30 is_stmt 0 view .LVU12
  63 0012 84F86030 		strb	r3, [r4, #96]
  64              		.loc 1 195 5 is_stmt 1 view .LVU13
  65 0016 6069     		ldr	r0, [r4, #20]
  66 0018 04F11C01 		add	r1, r4, #28
  67 001c 2B46     		mov	r3, r5
  68 001e 0422     		movs	r2, #4
 196:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 197:Src/aspep.c   ****   }
 198:Src/aspep.c   **** #endif
 199:Src/aspep.c   **** }
  69              		.loc 1 199 1 is_stmt 0 view .LVU14
  70 0020 BDE87040 		pop	{r4, r5, r6, lr}
  71              	.LCFI1:
  72              		.cfi_restore 14
  73              		.cfi_restore 6
  74              		.cfi_restore 5
  75              		.cfi_restore 4
  76              		.cfi_def_cfa_offset 0
  77              	.LVL3:
 195:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
  78              		.loc 1 195 5 view .LVU15
  79 0024 1847     		bx	r3	@ indirect register sibling call
  80              	.LVL4:
ARM GAS  /tmp/ccUaSLfZ.s 			page 6


 195:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
  81              		.loc 1 195 5 view .LVU16
  82              		.cfi_endproc
  83              	.LFE1439:
  85 0026 00BF     		.section	.text.ASPEP_sendBeacon,"ax",%progbits
  86              		.align	1
  87              		.p2align 2,,3
  88              		.global	ASPEP_sendBeacon
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	ASPEP_sendBeacon:
  95              	.LVL5:
  96              	.LFB1440:
 200:Src/aspep.c   **** 
 201:Src/aspep.c   **** /**
 202:Src/aspep.c   ****   * @brief  Sends BEACON to controller containing matched capabilities between controller and perfo
 203:Src/aspep.c   ****   *
 204:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 205:Src/aspep.c   ****   * @param  *capabilities Matched capabilities between controller and performer
 206:Src/aspep.c   ****   */
 207:Src/aspep.c   **** void ASPEP_sendBeacon(ASPEP_Handle_t *pHandle, ASPEP_Capabilities_def *capabilities)
 208:Src/aspep.c   **** {
  97              		.loc 1 208 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 209:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 210:Src/aspep.c   ****   if ((MC_NULL == pHandle) || (NULL == capabilities))
 211:Src/aspep.c   ****   {
 212:Src/aspep.c   ****     /* Nothing to do */
 213:Src/aspep.c   ****   }
 214:Src/aspep.c   ****   else
 215:Src/aspep.c   ****   {
 216:Src/aspep.c   **** #endif
 217:Src/aspep.c   ****     uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 102              		.loc 1 217 5 view .LVU18
 208:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 103              		.loc 1 208 1 is_stmt 0 view .LVU19
 104 0000 10B4     		push	{r4}
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 4, -4
 218:Src/aspep.c   ****     *packet = (BEACON
 219:Src/aspep.c   ****              | (((uint32_t)capabilities->version) << 4U)
 220:Src/aspep.c   ****              | (((uint32_t)capabilities->DATA_CRC) << 7U)
 108              		.loc 1 220 18 view .LVU20
 109 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 219:Src/aspep.c   ****              | (((uint32_t)capabilities->DATA_CRC) << 7U)
 110              		.loc 1 219 18 view .LVU21
 111 0004 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 221:Src/aspep.c   ****              | (((uint32_t)capabilities->RX_maxSize) << 8U)
 222:Src/aspep.c   ****              | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 112              		.loc 1 222 18 view .LVU22
 113 0006 91F802C0 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccUaSLfZ.s 			page 7


 114              	.LBB40:
 115              	.LBB41:
 116              	.LBB42:
 117              	.LBB43:
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 118              		.loc 1 126 7 view .LVU23
 119 000a 1E4C     		ldr	r4, .L9
 120              	.LBE43:
 121              	.LBE42:
 122              	.LBE41:
 123              	.LBE40:
 220:Src/aspep.c   ****              | (((uint32_t)capabilities->RX_maxSize) << 8U)
 124              		.loc 1 220 52 view .LVU24
 125 000c DB01     		lsls	r3, r3, #7
 223:Src/aspep.c   ****              | (((uint32_t)capabilities->TXA_maxSize) << 21U));
 126              		.loc 1 223 14 view .LVU25
 127 000e 43EA0213 		orr	r3, r3, r2, lsl #4
 221:Src/aspep.c   ****              | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 128              		.loc 1 221 18 view .LVU26
 129 0012 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 130              		.loc 1 223 14 view .LVU27
 131 0014 43EA0223 		orr	r3, r3, r2, lsl #8
 132              		.loc 1 223 18 view .LVU28
 133 0018 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 134              		.loc 1 223 14 view .LVU29
 135 001a 43EA8C33 		orr	r3, r3, ip, lsl #14
 136 001e 43EA4253 		orr	r3, r3, r2, lsl #21
 137              	.LBB62:
 138              	.LBB58:
 139              	.LBB46:
 140              	.LBB44:
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 141              		.loc 1 126 26 view .LVU30
 142 0022 DAB2     		uxtb	r2, r3
 143 0024 42F00502 		orr	r2, r2, #5
 124:Src/aspep.c   **** 
 144              		.loc 1 124 10 view .LVU31
 145 0028 23F07041 		bic	r1, r3, #-268435456
 146              	.LVL6:
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 147              		.loc 1 127 26 view .LVU32
 148 002c A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 149              	.LVL7:
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 150              		.loc 1 127 26 view .LVU33
 151              	.LBE44:
 152              	.LBE46:
 153              	.LBE58:
 154              	.LBE62:
 218:Src/aspep.c   ****              | (((uint32_t)capabilities->version) << 4U)
 155              		.loc 1 218 5 is_stmt 1 view .LVU34
 224:Src/aspep.c   **** 
 225:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 156              		.loc 1 225 5 view .LVU35
 157              	.LBB63:
 158              	.LBI40:
 226:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
ARM GAS  /tmp/ccUaSLfZ.s 			page 8


 227:Src/aspep.c   ****   }
 228:Src/aspep.c   **** #endif
 229:Src/aspep.c   **** }
 230:Src/aspep.c   **** 
 231:Src/aspep.c   **** /**
 232:Src/aspep.c   ****   * @brief  Sends back to controller a NOT_ACKNOWLEDGED message.
 233:Src/aspep.c   ****   *
 234:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 235:Src/aspep.c   ****   * @param  errorInfo Information on the encountered error
 236:Src/aspep.c   ****   */
 237:Src/aspep.c   **** static void ASPEP_sendNack(ASPEP_Handle_t *pHandle, uint8_t errorInfo)
 238:Src/aspep.c   **** {
 239:Src/aspep.c   ****   uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 240:Src/aspep.c   ****   *packet = NACK | (uint32_t)(((uint32_t) errorInfo) << 8U) | (uint32_t)(((uint32_t) errorInfo) << 
 241:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 242:Src/aspep.c   **** }
 243:Src/aspep.c   **** 
 244:Src/aspep.c   **** /**
 245:Src/aspep.c   ****   * @brief  Sends back ping to controller once connection has been established.
 246:Src/aspep.c   ****   *
 247:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 248:Src/aspep.c   ****   * @param  cBit Set to 1 if Performer has not been reset during communication
 249:Src/aspep.c   ****   * @param  packetNumber Number of requested packet incremented throughout the entire communication
 250:Src/aspep.c   ****   */
 251:Src/aspep.c   **** void ASPEP_sendPing(ASPEP_Handle_t *pHandle, uint8_t cBit, uint16_t packetNumber)
 252:Src/aspep.c   **** {
 253:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 254:Src/aspep.c   ****   if (MC_NULL == pHandle)
 255:Src/aspep.c   ****   {
 256:Src/aspep.c   ****     /* Nothing to do */
 257:Src/aspep.c   ****   }
 258:Src/aspep.c   ****   else
 259:Src/aspep.c   ****   {
 260:Src/aspep.c   **** #endif
 261:Src/aspep.c   ****     uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 262:Src/aspep.c   ****     uint8_t Nbit = pHandle->syncPacketCount & 0x1U; /* Keep only LSB */
 263:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 264:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 265:Src/aspep.c   ****                    | (uint32_t)((uint32_t)cBit << 5U)
 266:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 6U)
 267:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 7U)
 268:Src/aspep.c   ****                    | (uint32_t)((uint32_t)ipID << 8U)
 269:Src/aspep.c   ****                    | (uint32_t)(((uint32_t) packetNumber) << 12U);
 270:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 271:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 272:Src/aspep.c   ****   }
 273:Src/aspep.c   **** #endif
 274:Src/aspep.c   **** }
 275:Src/aspep.c   **** 
 276:Src/aspep.c   **** /**
 277:Src/aspep.c   ****   * @brief  Assigns new buffer depending on buffer type request and prevents overwriting.
 278:Src/aspep.c   ****   *
 279:Src/aspep.c   ****   * @param  *pSupHandle Handler of the current instance of the MCTL component
 280:Src/aspep.c   ****   * @param  **buffer Pointer to the buffer to be assigned
 281:Src/aspep.c   ****   * @param  syncAsync Type of requested buffer, can be synchronous or asynchronous
 282:Src/aspep.c   ****   *
 283:Src/aspep.c   ****   * @return Returns true if there is a writable buffer. False otherwise.
ARM GAS  /tmp/ccUaSLfZ.s 			page 9


 284:Src/aspep.c   ****   */
 285:Src/aspep.c   **** bool ASPEP_getBuffer(MCTL_Handle_t *pSupHandle, void **buffer,  uint8_t syncAsync)
 286:Src/aspep.c   **** {
 287:Src/aspep.c   ****   bool result = true;
 288:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 289:Src/aspep.c   ****   if (MC_NULL == buffer)
 290:Src/aspep.c   ****   {
 291:Src/aspep.c   ****     result = false;
 292:Src/aspep.c   ****   }
 293:Src/aspep.c   ****   else
 294:Src/aspep.c   ****   {
 295:Src/aspep.c   **** #endif
 296:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 297:Src/aspep.c   **** 
 298:Src/aspep.c   ****     if (MCTL_SYNC == syncAsync)
 299:Src/aspep.c   ****     {
 300:Src/aspep.c   ****       if (pHandle->syncBuffer.state <= writeLock) /* Possible values are free or writeLock*/
 301:Src/aspep.c   ****       {
 302:Src/aspep.c   ****         *buffer = &pHandle->syncBuffer.buffer[ASPEP_HEADER_SIZE];
 303:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 304:Src/aspep.c   ****       }
 305:Src/aspep.c   ****       else
 306:Src/aspep.c   ****       {
 307:Src/aspep.c   ****         result = false;
 308:Src/aspep.c   ****       }
 309:Src/aspep.c   ****     }
 310:Src/aspep.c   ****     else /* Asynchronous buffer request */
 311:Src/aspep.c   ****     {
 312:Src/aspep.c   ****       if ((pHandle->asyncBufferA.state > writeLock) && (pHandle->asyncBufferB.state > writeLock))
 313:Src/aspep.c   ****       {
 314:Src/aspep.c   ****         result = false;
 315:Src/aspep.c   ****       }
 316:Src/aspep.c   ****       else
 317:Src/aspep.c   ****       {
 318:Src/aspep.c   ****         if (pHandle->asyncBufferA.state <= writeLock)
 319:Src/aspep.c   ****         {
 320:Src/aspep.c   ****           pHandle->asyncBufferA.state = writeLock;
 321:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 322:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 323:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 324:Src/aspep.c   ****           pHandle->asyncBufferA.RequestedNumber++;
 325:Src/aspep.c   **** #endif
 326:Src/aspep.c   ****         }
 327:Src/aspep.c   ****         else if (pHandle->asyncBufferB.state <= writeLock)
 328:Src/aspep.c   ****         {
 329:Src/aspep.c   ****           pHandle->asyncBufferB.state = writeLock;
 330:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 331:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 332:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 333:Src/aspep.c   ****           pHandle->asyncBufferB.RequestedNumber++;
 334:Src/aspep.c   **** #endif
 335:Src/aspep.c   ****         }
 336:Src/aspep.c   ****         else
 337:Src/aspep.c   ****         {
 338:Src/aspep.c   ****           /* Nothing to do */
 339:Src/aspep.c   ****         }
 340:Src/aspep.c   ****       }
ARM GAS  /tmp/ccUaSLfZ.s 			page 10


 341:Src/aspep.c   ****     }
 342:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 343:Src/aspep.c   ****   }
 344:Src/aspep.c   **** #endif
 345:Src/aspep.c   ****   return (result);
 346:Src/aspep.c   **** }
 347:Src/aspep.c   **** 
 348:Src/aspep.c   **** /**
 349:Src/aspep.c   ****   * @brief  Checks controller's capabilities and compare them to performer's capabilities.
 350:Src/aspep.c   ****   *
 351:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 352:Src/aspep.c   ****   *
 353:Src/aspep.c   ****   * @return Returns true if controller's capabilities match performer's one. False otherwise.
 354:Src/aspep.c   ****   */
 355:Src/aspep.c   **** bool ASPEP_CheckBeacon (ASPEP_Handle_t *pHandle)
 356:Src/aspep.c   **** {
 357:Src/aspep.c   ****   bool result = true;
 358:Src/aspep.c   **** 
 359:Src/aspep.c   ****   uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 360:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 361:Src/aspep.c   ****   MasterCapabilities.version = (uint8_t)((packetHeader &0x70U)>> 4U);           /*Bits 4 to 6*/
 362:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;                     /*Bit 7 */
 363:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 364:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 365:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 366:Src/aspep.c   **** 
 367:Src/aspep.c   ****   pHandle->Capabilities.DATA_CRC = MIN(pHandle->Capabilities.DATA_CRC ,MasterCapabilities.DATA_CRC)
 368:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 369:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 370:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 371:Src/aspep.c   **** 
 372:Src/aspep.c   ****   if ((MasterCapabilities.DATA_CRC != pHandle->Capabilities.DATA_CRC)
 373:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 374:Src/aspep.c   ****    || (MasterCapabilities.RX_maxSize > pHandle->Capabilities.RX_maxSize)
 375:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the controller to be able to store it, a
 376:Src/aspep.c   ****     * response bigger than performer capability */
 377:Src/aspep.c   ****    || (pHandle->Capabilities.TXS_maxSize != MasterCapabilities.TXS_maxSize )
 378:Src/aspep.c   ****    /* Async packet the performer can send is bigger than the controller can receive (but controller
 379:Src/aspep.c   ****     * packet than performer can transmit) */
 380:Src/aspep.c   ****    || (pHandle->Capabilities.TXA_maxSize != MasterCapabilities.TXA_maxSize )
 381:Src/aspep.c   ****    /* For the time being, controller version has to match performer version */
 382:Src/aspep.c   ****    || (MasterCapabilities.version != pHandle->Capabilities.version) )
 383:Src/aspep.c   ****   {
 384:Src/aspep.c   ****     result = false;
 385:Src/aspep.c   ****   }
 386:Src/aspep.c   ****   else
 387:Src/aspep.c   ****   {
 388:Src/aspep.c   ****     /* Nothing to do */
 389:Src/aspep.c   ****   }
 390:Src/aspep.c   **** 
 391:Src/aspep.c   ****   return (result);
 392:Src/aspep.c   **** }
 393:Src/aspep.c   **** 
 394:Src/aspep.c   **** /**
 395:Src/aspep.c   ****   * @brief  Checks if any error has occurred and calls the ASPEP_TXframeProcess function.
 396:Src/aspep.c   ****   *
 397:Src/aspep.c   ****   * @param  *pSupHandle Handler of the current instance of the MCTL component
ARM GAS  /tmp/ccUaSLfZ.s 			page 11


 398:Src/aspep.c   ****   * @param  *txBuffer can be 8, 16 or 32 bits, but must be 32 bits aligned
 399:Src/aspep.c   ****   * @param  txDataLength Size of useful data in byte
 400:Src/aspep.c   ****   * @param  syncAsync nature of the communication : synchronous or asynchronous
 401:Src/aspep.c   ****   *
 402:Src/aspep.c   ****   * @return Returns an ASPEP response defined in aspep.h
 403:Src/aspep.c   ****   */
 404:Src/aspep.c   **** uint8_t ASPEP_sendPacket(MCTL_Handle_t *pSupHandle, void *txBuffer, uint16_t txDataLength, uint8_t 
 405:Src/aspep.c   **** {
 406:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 407:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 408:Src/aspep.c   ****   if ((MC_NULL == pSupHandle) || (MC_NULL == txBuffer))
 409:Src/aspep.c   ****   {
 410:Src/aspep.c   ****     result = ASPEP_BUFFER_ERROR;
 411:Src/aspep.c   ****   }
 412:Src/aspep.c   ****   else
 413:Src/aspep.c   ****   {
 414:Src/aspep.c   **** #endif
 415:Src/aspep.c   ****     uint32_t *header;
 416:Src/aspep.c   ****     uint32_t tmpHeader;
 417:Src/aspep.c   ****     uint16_t txDataLengthTemp;
 418:Src/aspep.c   ****     uint8_t *packet;
 419:Src/aspep.c   **** 
 420:Src/aspep.c   ****     txDataLengthTemp = txDataLength;
 421:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 422:Src/aspep.c   **** 
 423:Src/aspep.c   ****     if (ASPEP_CONNECTED == pHandle-> ASPEP_State)
 424:Src/aspep.c   ****     {
 425:Src/aspep.c   ****       /*We must add packet header on  */
 426:Src/aspep.c   ****       /* | [0101|0011] | Length 13b | Reserved |CRCH 4b| */
 427:Src/aspep.c   ****       packet = (uint8_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 428:Src/aspep.c   ****       header = (uint32_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 429:Src/aspep.c   ****       header--; /* Header ues 4*8 bits on top of txBuffer*/
 430:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 431:Src/aspep.c   ****       *header = tmpHeader;
 432:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 433:Src/aspep.c   ****       {
 434:Src/aspep.c   ****         /* TODO : Compute real CRC*/
 435:Src/aspep.c   ****         packet[txDataLengthTemp] = (uint8_t)0xCA; /* Dummy CRC */
 436:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 437:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 438:Src/aspep.c   ****       }
 439:Src/aspep.c   ****       if (MCTL_SYNC == syncAsync)
 440:Src/aspep.c   ****       {
 441:Src/aspep.c   ****         if (pSupHandle->MCP_PacketAvailable)
 442:Src/aspep.c   ****         {
 443:Src/aspep.c   ****           pSupHandle->MCP_PacketAvailable = false; /* CMD from controller is processed*/
 444:Src/aspep.c   ****         }
 445:Src/aspep.c   ****         else
 446:Src/aspep.c   ****         {
 447:Src/aspep.c   ****           result = MCTL_SYNC_NOT_EXPECTED;
 448:Src/aspep.c   ****         }
 449:Src/aspep.c   ****       }
 450:Src/aspep.c   ****       if (ASPEP_OK == result) /* Send packet only if no error detected so far*/
 451:Src/aspep.c   ****       {
 452:Src/aspep.c   ****         result = ASPEP_TXframeProcess(pHandle, syncAsync, header, txDataLengthTemp + (uint16_t)ASPE
 453:Src/aspep.c   ****       }
 454:Src/aspep.c   ****     }
ARM GAS  /tmp/ccUaSLfZ.s 			page 12


 455:Src/aspep.c   ****     else
 456:Src/aspep.c   ****     {
 457:Src/aspep.c   ****       result = ASPEP_NOT_CONNECTED;
 458:Src/aspep.c   ****     }
 459:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 460:Src/aspep.c   ****   }
 461:Src/aspep.c   **** #endif
 462:Src/aspep.c   ****   return (result);
 463:Src/aspep.c   **** }
 464:Src/aspep.c   **** 
 465:Src/aspep.c   **** /**
 466:Src/aspep.c   ****   * @brief  Checks if HW resource is busy before sending packet. Otherwise saves packet for next op
 467:Src/aspep.c   ****   *
 468:Src/aspep.c   ****   * This function contains a critical section.
 469:Src/aspep.c   ****   * It can be accessed concurently under High frequency task (by MCPA_datalog)
 470:Src/aspep.c   ****   * and under Medium frequency task (MC_Scheduler -> ASPEP_RxFrameProcess ).
 471:Src/aspep.c   ****   *
 472:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 473:Src/aspep.c   ****   * @param  dataType Nature of the communication : synchronous, asynchronous or a CTL packet
 474:Src/aspep.c   ****   * @param  *txBuffer CRC Header to be computed in sent packet
 475:Src/aspep.c   ****   * @param  bufferLength Size of the packet to be sent : Header + Data
 476:Src/aspep.c   ****   *
 477:Src/aspep.c   ****   * @return Returns an ASPEP response defined in aspep.h
 478:Src/aspep.c   ****   */
 479:Src/aspep.c   **** uint8_t ASPEP_TXframeProcess(ASPEP_Handle_t *pHandle, uint8_t dataType, void *txBuffer, uint16_t bu
 159              		.loc 1 479 9 view .LVU36
 160              	.LBB59:
 480:Src/aspep.c   **** {
 481:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 161              		.loc 1 481 3 view .LVU37
 482:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 483:Src/aspep.c   ****   if (MC_NULL == txBuffer)
 484:Src/aspep.c   ****   {
 485:Src/aspep.c   ****     result = ASPEP_BUFFER_ERROR;
 486:Src/aspep.c   ****   }
 487:Src/aspep.c   ****   else
 488:Src/aspep.c   ****   {
 489:Src/aspep.c   **** #endif
 490:Src/aspep.c   ****     /* Insert CRC header in the packet to send */
 491:Src/aspep.c   ****     ASPEP_ComputeHeaderCRC((uint32_t *)txBuffer); //cstat !MISRAC2012-Rule-11.5
 162              		.loc 1 491 5 view .LVU38
 163              	.LBB47:
 164              	.LBI42:
 118:Src/aspep.c   **** {
 165              		.loc 1 118 13 view .LVU39
 166              	.LBB45:
 120:Src/aspep.c   ****   uint32_t header = *headerPtr;
 167              		.loc 1 120 3 view .LVU40
 121:Src/aspep.c   **** 
 168              		.loc 1 121 3 view .LVU41
 124:Src/aspep.c   **** 
 169              		.loc 1 124 3 view .LVU42
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 170              		.loc 1 126 3 view .LVU43
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 171              		.loc 1 127 3 view .LVU44
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
ARM GAS  /tmp/ccUaSLfZ.s 			page 13


 172              		.loc 1 127 26 is_stmt 0 view .LVU45
 173 002e 82EA1122 		eor	r2, r2, r1, lsr #8
 174 0032 D2B2     		uxtb	r2, r2
 175              	.LVL8:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 176              		.loc 1 128 3 is_stmt 1 view .LVU46
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 177              		.loc 1 128 26 is_stmt 0 view .LVU47
 178 0034 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 179              	.LVL9:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 180              		.loc 1 128 26 view .LVU48
 181 0036 82EA1142 		eor	r2, r2, r1, lsr #16
 182 003a D2B2     		uxtb	r2, r2
 183              	.LVL10:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 184              		.loc 1 129 3 is_stmt 1 view .LVU49
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 185              		.loc 1 129 26 is_stmt 0 view .LVU50
 186 003c A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 187              	.LVL11:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 188              		.loc 1 129 7 view .LVU51
 189 003e 124C     		ldr	r4, .L9+4
 190              	.LVL12:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 191              		.loc 1 129 26 view .LVU52
 192 0040 82EA1162 		eor	r2, r2, r1, lsr #24
 193              	.LVL13:
 140:Src/aspep.c   **** 
 194              		.loc 1 140 3 is_stmt 1 view .LVU53
 140:Src/aspep.c   **** 
 195              		.loc 1 140 17 is_stmt 0 view .LVU54
 196 0044 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 197              	.LVL14:
 140:Src/aspep.c   **** 
 198              		.loc 1 140 14 view .LVU55
 199 0046 43EA0273 		orr	r3, r3, r2, lsl #28
 200              	.LVL15:
 140:Src/aspep.c   **** 
 201              		.loc 1 140 14 view .LVU56
 202 004a 43F00503 		orr	r3, r3, #5
 203 004e 0362     		str	r3, [r0, #32]
 204              	.LVL16:
 140:Src/aspep.c   **** 
 205              		.loc 1 140 14 view .LVU57
 206              	.LBE45:
 207              	.LBE47:
 492:Src/aspep.c   ****     __disable_irq(); /*TODO: Disable High frequency task is enough */
 208              		.loc 1 492 5 is_stmt 1 view .LVU58
 209              	.LBB48:
 210              	.LBI48:
 211              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
ARM GAS  /tmp/ccUaSLfZ.s 			page 14


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /tmp/ccUaSLfZ.s 			page 15


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccUaSLfZ.s 			page 16


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccUaSLfZ.s 			page 17


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 212              		.loc 2 207 27 view .LVU59
 213              	.LBB49:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 214              		.loc 2 209 3 view .LVU60
 215              		.syntax unified
 216              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 217 0050 72B6     		cpsid i
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221              	.LBE49:
 222              	.LBE48:
 493:Src/aspep.c   ****     if (NULL == pHandle->lockBuffer) /* Communication Ip free to send data*/
 223              		.loc 1 493 5 view .LVU61
 224              		.loc 1 493 8 is_stmt 0 view .LVU62
 225 0052 836C     		ldr	r3, [r0, #72]
 226 0054 4BB1     		cbz	r3, .L8
 494:Src/aspep.c   ****     {
 495:Src/aspep.c   ****       if (MCTL_ASYNC == dataType)
 496:Src/aspep.c   ****       {
 497:Src/aspep.c   ****         /* In ASYNC, two flipflop buffers are used, the txBuffer points always to lastRequestedAsyn
 498:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = readLock;
 499:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 500:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
ARM GAS  /tmp/ccUaSLfZ.s 			page 18


 501:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->SentNumber++;
 502:Src/aspep.c   **** #endif
 503:Src/aspep.c   ****       }
 504:Src/aspep.c   ****       else if (MCTL_SYNC == dataType)
 505:Src/aspep.c   ****       {
 506:Src/aspep.c   ****         pHandle->syncBuffer.state = readLock;
 507:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 508:Src/aspep.c   ****       }
 509:Src/aspep.c   ****       else
 510:Src/aspep.c   ****       {
 511:Src/aspep.c   ****         pHandle->ctrlBuffer.state = readLock;
 512:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 513:Src/aspep.c   ****       }
 514:Src/aspep.c   ****       /* Enable HF task It */
 515:Src/aspep.c   ****       __enable_irq(); /*TODO: Enable High frequency task is enough */
 516:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 517:Src/aspep.c   ****     }
 518:Src/aspep.c   ****     else /* HW resource busy, saving packet to sent it once resource will be freed*/
 519:Src/aspep.c   ****     {
 520:Src/aspep.c   ****       __enable_irq(); /*TODO: Enable High frequency task is enough */
 227              		.loc 1 520 7 is_stmt 1 view .LVU63
 228              	.LBB50:
 229              	.LBI50:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 230              		.loc 2 196 27 view .LVU64
 231              	.LBB51:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 232              		.loc 2 198 3 view .LVU65
 233              		.syntax unified
 234              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 235 0056 62B6     		cpsie i
 236              	@ 0 "" 2
 237              		.thumb
 238              		.syntax unified
 239              	.LBE51:
 240              	.LBE50:
 521:Src/aspep.c   ****       /* Lock buffer can be freed here */
 522:Src/aspep.c   ****       if (MCTL_ASYNC == dataType)
 241              		.loc 1 522 7 view .LVU66
 523:Src/aspep.c   ****       {
 524:Src/aspep.c   ****         /* Check that the buffer received is the one expected - probably useless */
 525:Src/aspep.c   ****         if (txBuffer != (uint8_t *)pHandle->lastRequestedAsyncBuff->buffer)
 526:Src/aspep.c   ****         {
 527:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 528:Src/aspep.c   ****         }
 529:Src/aspep.c   ****         else
 530:Src/aspep.c   ****         {
 531:Src/aspep.c   ****           /* Nothing to do */
 532:Src/aspep.c   ****         }
 533:Src/aspep.c   ****         if (NULL == pHandle->asyncNextBuffer)
 534:Src/aspep.c   ****         {
 535:Src/aspep.c   ****           /* Required to keep the right sending order */
 536:Src/aspep.c   ****           pHandle->asyncNextBuffer = pHandle->lastRequestedAsyncBuff;
 537:Src/aspep.c   ****         }
 538:Src/aspep.c   ****         else
 539:Src/aspep.c   ****         {
 540:Src/aspep.c   ****           /* Nothing to do */
ARM GAS  /tmp/ccUaSLfZ.s 			page 19


 541:Src/aspep.c   ****         }
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = pending;
 543:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 544:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 545:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->PendingNumber++;
 546:Src/aspep.c   **** #endif
 547:Src/aspep.c   ****       }
 548:Src/aspep.c   ****       else if (MCTL_SYNC == dataType)
 242              		.loc 1 548 12 view .LVU67
 549:Src/aspep.c   ****       {
 550:Src/aspep.c   ****         if (pHandle -> syncBuffer.state != writeLock)
 551:Src/aspep.c   ****         {
 552:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 553:Src/aspep.c   ****         }
 554:Src/aspep.c   ****         else
 555:Src/aspep.c   ****         {
 556:Src/aspep.c   ****           pHandle->syncBuffer.state = pending;
 557:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 558:Src/aspep.c   ****         }
 559:Src/aspep.c   ****       }
 560:Src/aspep.c   ****       else if(ASPEP_CTRL == dataType)
 243              		.loc 1 560 12 view .LVU68
 561:Src/aspep.c   ****       {
 562:Src/aspep.c   ****         if (pHandle->ctrlBuffer.state != available)
 244              		.loc 1 562 9 view .LVU69
 245              		.loc 1 562 12 is_stmt 0 view .LVU70
 246 0058 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 247 005c 13B9     		cbnz	r3, .L4
 563:Src/aspep.c   ****         {
 564:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 565:Src/aspep.c   ****         }
 566:Src/aspep.c   ****         else
 567:Src/aspep.c   ****         {
 568:Src/aspep.c   ****           pHandle->ctrlBuffer.state = pending;
 248              		.loc 1 568 11 is_stmt 1 view .LVU71
 249              		.loc 1 568 37 is_stmt 0 view .LVU72
 250 005e 0223     		movs	r3, #2
 251 0060 80F82430 		strb	r3, [r0, #36]
 252              	.LVL17:
 569:Src/aspep.c   ****         }
 570:Src/aspep.c   ****       }
 571:Src/aspep.c   ****       else
 572:Src/aspep.c   ****       {
 573:Src/aspep.c   ****         /* Nothing to do */
 574:Src/aspep.c   ****       }
 253              		.loc 1 574 7 is_stmt 1 view .LVU73
 575:Src/aspep.c   ****     }
 576:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 577:Src/aspep.c   ****   }
 578:Src/aspep.c   **** #endif
 579:Src/aspep.c   ****   return (result);
 254              		.loc 1 579 3 view .LVU74
 255              	.L4:
 256              		.loc 1 579 3 is_stmt 0 view .LVU75
 257              	.LBE59:
 258              	.LBE63:
 229:Src/aspep.c   **** 
ARM GAS  /tmp/ccUaSLfZ.s 			page 20


 259              		.loc 1 229 1 view .LVU76
 260 0064 5DF8044B 		ldr	r4, [sp], #4
 261              	.LCFI3:
 262              		.cfi_remember_state
 263              		.cfi_restore 4
 264              		.cfi_def_cfa_offset 0
 265 0068 7047     		bx	lr
 266              	.LVL18:
 267              	.L8:
 268              	.LCFI4:
 269              		.cfi_restore_state
 225:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 270              		.loc 1 225 53 view .LVU77
 271 006a 00F12001 		add	r1, r0, #32
 272              	.LVL19:
 273              	.LBB64:
 274              	.LBB60:
 275              	.LBB52:
 276              	.LBI52:
 479:Src/aspep.c   **** {
 277              		.loc 1 479 9 is_stmt 1 view .LVU78
 278              	.LBB53:
 495:Src/aspep.c   ****       {
 279              		.loc 1 495 7 view .LVU79
 504:Src/aspep.c   ****       {
 280              		.loc 1 504 12 view .LVU80
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 281              		.loc 1 511 9 view .LVU81
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 282              		.loc 1 511 35 is_stmt 0 view .LVU82
 283 006e 0323     		movs	r3, #3
 284 0070 80F82430 		strb	r3, [r0, #36]
 512:Src/aspep.c   ****       }
 285              		.loc 1 512 9 is_stmt 1 view .LVU83
 512:Src/aspep.c   ****       }
 286              		.loc 1 512 29 is_stmt 0 view .LVU84
 287 0074 8164     		str	r1, [r0, #72]
 515:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 288              		.loc 1 515 7 is_stmt 1 view .LVU85
 289              	.LBB54:
 290              	.LBI54:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291              		.loc 2 196 27 view .LVU86
 292              	.LBB55:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293              		.loc 2 198 3 view .LVU87
 294              		.syntax unified
 295              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 296 0076 62B6     		cpsie i
 297              	@ 0 "" 2
 298              		.thumb
 299              		.syntax unified
 300              	.LBE55:
 301              	.LBE54:
 516:Src/aspep.c   ****     }
 302              		.loc 1 516 7 view .LVU88
 303 0078 0422     		movs	r2, #4
ARM GAS  /tmp/ccUaSLfZ.s 			page 21


 304 007a 836D     		ldr	r3, [r0, #88]
 305              	.LBE53:
 306              	.LBE52:
 307              	.LBE60:
 308              	.LBE64:
 229:Src/aspep.c   **** 
 309              		.loc 1 229 1 is_stmt 0 view .LVU89
 310 007c 5DF8044B 		ldr	r4, [sp], #4
 311              	.LCFI5:
 312              		.cfi_restore 4
 313              		.cfi_def_cfa_offset 0
 314              	.LBB65:
 315              	.LBB61:
 316              	.LBB57:
 317              	.LBB56:
 516:Src/aspep.c   ****     }
 318              		.loc 1 516 7 view .LVU90
 319 0080 4069     		ldr	r0, [r0, #20]
 320              	.LVL20:
 516:Src/aspep.c   ****     }
 321              		.loc 1 516 7 view .LVU91
 322 0082 1847     		bx	r3	@ indirect register sibling call
 323              	.LVL21:
 324              	.L10:
 516:Src/aspep.c   ****     }
 325              		.loc 1 516 7 view .LVU92
 326              		.align	2
 327              	.L9:
 328 0084 00000000 		.word	.LANCHOR0
 329 0088 00000000 		.word	.LANCHOR1
 330              	.LBE56:
 331              	.LBE57:
 332              	.LBE61:
 333              	.LBE65:
 334              		.cfi_endproc
 335              	.LFE1440:
 337              		.section	.text.ASPEP_sendPing,"ax",%progbits
 338              		.align	1
 339              		.p2align 2,,3
 340              		.global	ASPEP_sendPing
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	ASPEP_sendPing:
 347              	.LVL22:
 348              	.LFB1442:
 252:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 349              		.loc 1 252 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 261:Src/aspep.c   ****     uint8_t Nbit = pHandle->syncPacketCount & 0x1U; /* Keep only LSB */
 353              		.loc 1 261 5 view .LVU94
 262:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 354              		.loc 1 262 5 view .LVU95
 263:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
ARM GAS  /tmp/ccUaSLfZ.s 			page 22


 355              		.loc 1 263 5 view .LVU96
 264:Src/aspep.c   ****                    | (uint32_t)((uint32_t)cBit << 5U)
 356              		.loc 1 264 5 view .LVU97
 252:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 357              		.loc 1 252 1 is_stmt 0 view .LVU98
 358 0000 30B5     		push	{r4, r5, lr}
 359              	.LCFI6:
 360              		.cfi_def_cfa_offset 12
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 5, -8
 363              		.cfi_offset 14, -4
 265:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 6U)
 364              		.loc 1 265 22 view .LVU99
 365 0002 4FEA411C 		lsl	ip, r1, #5
 262:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 366              		.loc 1 262 13 view .LVU100
 367 0006 90F860E0 		ldrb	lr, [r0, #96]	@ zero_extendqisi2
 263:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 368              		.loc 1 263 13 view .LVU101
 369 000a 90F86340 		ldrb	r4, [r0, #99]	@ zero_extendqisi2
 370              	.LBB82:
 371              	.LBB83:
 372              	.LBB84:
 373              	.LBB85:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 374              		.loc 1 129 7 view .LVU102
 375 000e 1E4D     		ldr	r5, .L16
 376              	.LBE85:
 377              	.LBE84:
 378              	.LBE83:
 379              	.LBE82:
 269:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 380              		.loc 1 269 20 view .LVU103
 381 0010 4CEA011C 		orr	ip, ip, r1, lsl #4
 266:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 7U)
 382              		.loc 1 266 33 view .LVU104
 383 0014 0EF0010E 		and	lr, lr, #1
 269:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 384              		.loc 1 269 20 view .LVU105
 385 0018 4CEA023C 		orr	ip, ip, r2, lsl #12
 386 001c 4CEA8E13 		orr	r3, ip, lr, lsl #6
 387 0020 43EACE13 		orr	r3, r3, lr, lsl #7
 268:Src/aspep.c   ****                    | (uint32_t)(((uint32_t) packetNumber) << 12U);
 388              		.loc 1 268 33 view .LVU106
 389 0024 04F00F04 		and	r4, r4, #15
 269:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 390              		.loc 1 269 20 view .LVU107
 391 0028 43EA0423 		orr	r3, r3, r4, lsl #8
 392              	.LBB104:
 393              	.LBB100:
 394              	.LBB88:
 395              	.LBB86:
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 396              		.loc 1 126 26 view .LVU108
 397 002c DAB2     		uxtb	r2, r3
 398              	.LVL23:
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
ARM GAS  /tmp/ccUaSLfZ.s 			page 23


 399              		.loc 1 126 7 view .LVU109
 400 002e 174C     		ldr	r4, .L16+4
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 401              		.loc 1 126 26 view .LVU110
 402 0030 42F00602 		orr	r2, r2, #6
 403              	.LBE86:
 404              	.LBE88:
 405              	.LBE100:
 406              	.LBE104:
 269:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 407              		.loc 1 269 20 view .LVU111
 408 0034 43F00601 		orr	r1, r3, #6
 409              	.LVL24:
 270:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 410              		.loc 1 270 5 is_stmt 1 view .LVU112
 411              	.LBB105:
 412              	.LBI82:
 479:Src/aspep.c   **** {
 413              		.loc 1 479 9 view .LVU113
 414              	.LBB101:
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 415              		.loc 1 481 3 view .LVU114
 491:Src/aspep.c   ****     __disable_irq(); /*TODO: Disable High frequency task is enough */
 416              		.loc 1 491 5 view .LVU115
 417              	.LBB89:
 418              	.LBI84:
 118:Src/aspep.c   **** {
 419              		.loc 1 118 13 view .LVU116
 420              	.LBB87:
 120:Src/aspep.c   ****   uint32_t header = *headerPtr;
 421              		.loc 1 120 3 view .LVU117
 121:Src/aspep.c   **** 
 422              		.loc 1 121 3 view .LVU118
 124:Src/aspep.c   **** 
 423              		.loc 1 124 3 view .LVU119
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 424              		.loc 1 126 3 view .LVU120
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 425              		.loc 1 127 3 view .LVU121
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 426              		.loc 1 127 26 is_stmt 0 view .LVU122
 427 0038 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 428 003a 82EA1322 		eor	r2, r2, r3, lsr #8
 429 003e D2B2     		uxtb	r2, r2
 430              	.LVL25:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 431              		.loc 1 128 3 is_stmt 1 view .LVU123
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 432              		.loc 1 128 26 is_stmt 0 view .LVU124
 433 0040 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 434              	.LVL26:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 435              		.loc 1 128 26 view .LVU125
 436 0042 82EA1342 		eor	r2, r2, r3, lsr #16
 437 0046 D2B2     		uxtb	r2, r2
 438              	.LVL27:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
ARM GAS  /tmp/ccUaSLfZ.s 			page 24


 439              		.loc 1 129 3 is_stmt 1 view .LVU126
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 440              		.loc 1 129 26 is_stmt 0 view .LVU127
 441 0048 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 442              	.LVL28:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 443              		.loc 1 129 26 view .LVU128
 444 004a 82EA1363 		eor	r3, r2, r3, lsr #24
 445              	.LVL29:
 140:Src/aspep.c   **** 
 446              		.loc 1 140 3 is_stmt 1 view .LVU129
 140:Src/aspep.c   **** 
 447              		.loc 1 140 17 is_stmt 0 view .LVU130
 448 004e EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 449              	.LVL30:
 140:Src/aspep.c   **** 
 450              		.loc 1 140 14 view .LVU131
 451 0050 41EA0373 		orr	r3, r1, r3, lsl #28
 452 0054 0362     		str	r3, [r0, #32]
 453              	.LVL31:
 140:Src/aspep.c   **** 
 454              		.loc 1 140 14 view .LVU132
 455              	.LBE87:
 456              	.LBE89:
 492:Src/aspep.c   ****     if (NULL == pHandle->lockBuffer) /* Communication Ip free to send data*/
 457              		.loc 1 492 5 is_stmt 1 view .LVU133
 458              	.LBB90:
 459              	.LBI90:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 460              		.loc 2 207 27 view .LVU134
 461              	.LBB91:
 462              		.loc 2 209 3 view .LVU135
 463              		.syntax unified
 464              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 465 0056 72B6     		cpsid i
 466              	@ 0 "" 2
 467              		.thumb
 468              		.syntax unified
 469              	.LBE91:
 470              	.LBE90:
 493:Src/aspep.c   ****     {
 471              		.loc 1 493 5 view .LVU136
 493:Src/aspep.c   ****     {
 472              		.loc 1 493 8 is_stmt 0 view .LVU137
 473 0058 836C     		ldr	r3, [r0, #72]
 474 005a 3BB1     		cbz	r3, .L15
 520:Src/aspep.c   ****       /* Lock buffer can be freed here */
 475              		.loc 1 520 7 is_stmt 1 view .LVU138
 476              	.LBB92:
 477              	.LBI92:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478              		.loc 2 196 27 view .LVU139
 479              	.LBB93:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 480              		.loc 2 198 3 view .LVU140
 481              		.syntax unified
 482              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccUaSLfZ.s 			page 25


 483 005c 62B6     		cpsie i
 484              	@ 0 "" 2
 485              		.thumb
 486              		.syntax unified
 487              	.LBE93:
 488              	.LBE92:
 522:Src/aspep.c   ****       {
 489              		.loc 1 522 7 view .LVU141
 548:Src/aspep.c   ****       {
 490              		.loc 1 548 12 view .LVU142
 560:Src/aspep.c   ****       {
 491              		.loc 1 560 12 view .LVU143
 562:Src/aspep.c   ****         {
 492              		.loc 1 562 9 view .LVU144
 562:Src/aspep.c   ****         {
 493              		.loc 1 562 12 is_stmt 0 view .LVU145
 494 005e 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 495 0062 13B9     		cbnz	r3, .L11
 568:Src/aspep.c   ****         }
 496              		.loc 1 568 11 is_stmt 1 view .LVU146
 568:Src/aspep.c   ****         }
 497              		.loc 1 568 37 is_stmt 0 view .LVU147
 498 0064 0223     		movs	r3, #2
 499 0066 80F82430 		strb	r3, [r0, #36]
 500              	.LVL32:
 574:Src/aspep.c   ****     }
 501              		.loc 1 574 7 is_stmt 1 view .LVU148
 502              		.loc 1 579 3 view .LVU149
 503              	.L11:
 504              		.loc 1 579 3 is_stmt 0 view .LVU150
 505              	.LBE101:
 506              	.LBE105:
 274:Src/aspep.c   **** 
 507              		.loc 1 274 1 view .LVU151
 508 006a 30BD     		pop	{r4, r5, pc}
 509              	.LVL33:
 510              	.L15:
 270:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 511              		.loc 1 270 53 view .LVU152
 512 006c 00F12001 		add	r1, r0, #32
 513              	.LVL34:
 514              	.LBB106:
 515              	.LBB102:
 516              	.LBB94:
 517              	.LBI94:
 479:Src/aspep.c   **** {
 518              		.loc 1 479 9 is_stmt 1 view .LVU153
 519              	.LBB95:
 495:Src/aspep.c   ****       {
 520              		.loc 1 495 7 view .LVU154
 504:Src/aspep.c   ****       {
 521              		.loc 1 504 12 view .LVU155
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 522              		.loc 1 511 9 view .LVU156
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 523              		.loc 1 511 35 is_stmt 0 view .LVU157
 524 0070 0323     		movs	r3, #3
ARM GAS  /tmp/ccUaSLfZ.s 			page 26


 525 0072 80F82430 		strb	r3, [r0, #36]
 512:Src/aspep.c   ****       }
 526              		.loc 1 512 9 is_stmt 1 view .LVU158
 512:Src/aspep.c   ****       }
 527              		.loc 1 512 29 is_stmt 0 view .LVU159
 528 0076 8164     		str	r1, [r0, #72]
 515:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 529              		.loc 1 515 7 is_stmt 1 view .LVU160
 530              	.LBB96:
 531              	.LBI96:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 532              		.loc 2 196 27 view .LVU161
 533              	.LBB97:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534              		.loc 2 198 3 view .LVU162
 535              		.syntax unified
 536              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 537 0078 62B6     		cpsie i
 538              	@ 0 "" 2
 539              		.thumb
 540              		.syntax unified
 541              	.LBE97:
 542              	.LBE96:
 516:Src/aspep.c   ****     }
 543              		.loc 1 516 7 view .LVU163
 544 007a 0422     		movs	r2, #4
 545 007c 836D     		ldr	r3, [r0, #88]
 546 007e 4069     		ldr	r0, [r0, #20]
 547              	.LVL35:
 516:Src/aspep.c   ****     }
 548              		.loc 1 516 7 is_stmt 0 view .LVU164
 549              	.LBE95:
 550              	.LBE94:
 551              	.LBE102:
 552              	.LBE106:
 274:Src/aspep.c   **** 
 553              		.loc 1 274 1 view .LVU165
 554 0080 BDE83040 		pop	{r4, r5, lr}
 555              	.LCFI7:
 556              		.cfi_restore 14
 557              		.cfi_restore 5
 558              		.cfi_restore 4
 559              		.cfi_def_cfa_offset 0
 560              	.LBB107:
 561              	.LBB103:
 562              	.LBB99:
 563              	.LBB98:
 516:Src/aspep.c   ****     }
 564              		.loc 1 516 7 view .LVU166
 565 0084 1847     		bx	r3	@ indirect register sibling call
 566              	.LVL36:
 567              	.L17:
 516:Src/aspep.c   ****     }
 568              		.loc 1 516 7 view .LVU167
 569 0086 00BF     		.align	2
 570              	.L16:
 571 0088 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccUaSLfZ.s 			page 27


 572 008c 00000000 		.word	.LANCHOR0
 573              	.LBE98:
 574              	.LBE99:
 575              	.LBE103:
 576              	.LBE107:
 577              		.cfi_endproc
 578              	.LFE1442:
 580              		.section	.text.ASPEP_getBuffer,"ax",%progbits
 581              		.align	1
 582              		.p2align 2,,3
 583              		.global	ASPEP_getBuffer
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv4-sp-d16
 589              	ASPEP_getBuffer:
 590              	.LVL37:
 591              	.LFB1443:
 286:Src/aspep.c   ****   bool result = true;
 592              		.loc 1 286 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 597              		.loc 1 287 3 view .LVU169
 296:Src/aspep.c   **** 
 598              		.loc 1 296 5 view .LVU170
 298:Src/aspep.c   ****     {
 599              		.loc 1 298 8 is_stmt 0 view .LVU171
 600 0000 0A2A     		cmp	r2, #10
 286:Src/aspep.c   ****   bool result = true;
 601              		.loc 1 286 1 view .LVU172
 602 0002 10B4     		push	{r4}
 603              	.LCFI8:
 604              		.cfi_def_cfa_offset 4
 605              		.cfi_offset 4, -4
 286:Src/aspep.c   ****   bool result = true;
 606              		.loc 1 286 1 view .LVU173
 607 0004 0346     		mov	r3, r0
 608              	.LVL38:
 298:Src/aspep.c   ****     {
 609              		.loc 1 298 5 is_stmt 1 view .LVU174
 298:Src/aspep.c   ****     {
 610              		.loc 1 298 8 is_stmt 0 view .LVU175
 611 0006 0BD0     		beq	.L27
 312:Src/aspep.c   ****       {
 612              		.loc 1 312 7 is_stmt 1 view .LVU176
 312:Src/aspep.c   ****       {
 613              		.loc 1 312 10 is_stmt 0 view .LVU177
 614 0008 90F83620 		ldrb	r2, [r0, #54]	@ zero_extendqisi2
 615              	.LVL39:
 312:Src/aspep.c   ****       {
 616              		.loc 1 312 10 view .LVU178
 617 000c 012A     		cmp	r2, #1
 618 000e 21D9     		bls	.L21
 312:Src/aspep.c   ****       {
ARM GAS  /tmp/ccUaSLfZ.s 			page 28


 619              		.loc 1 312 53 discriminator 1 view .LVU179
 620 0010 90F83E20 		ldrb	r2, [r0, #62]	@ zero_extendqisi2
 621 0014 012A     		cmp	r2, #1
 622 0016 11D9     		bls	.L28
 623              	.L24:
 307:Src/aspep.c   ****       }
 624              		.loc 1 307 16 view .LVU180
 625 0018 0020     		movs	r0, #0
 626              	.LVL40:
 339:Src/aspep.c   ****       }
 627              		.loc 1 339 9 is_stmt 1 view .LVU181
 345:Src/aspep.c   **** }
 628              		.loc 1 345 3 view .LVU182
 346:Src/aspep.c   **** 
 629              		.loc 1 346 1 is_stmt 0 view .LVU183
 630 001a 5DF8044B 		ldr	r4, [sp], #4
 631              	.LCFI9:
 632              		.cfi_remember_state
 633              		.cfi_restore 4
 634              		.cfi_def_cfa_offset 0
 635 001e 7047     		bx	lr
 636              	.LVL41:
 637              	.L27:
 638              	.LCFI10:
 639              		.cfi_restore_state
 300:Src/aspep.c   ****       {
 640              		.loc 1 300 7 is_stmt 1 view .LVU184
 300:Src/aspep.c   ****       {
 641              		.loc 1 300 10 is_stmt 0 view .LVU185
 642 0020 90F82E20 		ldrb	r2, [r0, #46]	@ zero_extendqisi2
 643              	.LVL42:
 300:Src/aspep.c   ****       {
 644              		.loc 1 300 10 view .LVU186
 645 0024 012A     		cmp	r2, #1
 646 0026 F7D8     		bhi	.L24
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 647              		.loc 1 302 9 is_stmt 1 view .LVU187
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 648              		.loc 1 302 19 is_stmt 0 view .LVU188
 649 0028 826A     		ldr	r2, [r0, #40]
 303:Src/aspep.c   ****       }
 650              		.loc 1 303 35 view .LVU189
 651 002a 0124     		movs	r4, #1
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 652              		.loc 1 302 19 view .LVU190
 653 002c 0432     		adds	r2, r2, #4
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 654              		.loc 1 302 17 view .LVU191
 655 002e 0A60     		str	r2, [r1]
 303:Src/aspep.c   ****       }
 656              		.loc 1 303 9 is_stmt 1 view .LVU192
 303:Src/aspep.c   ****       }
 657              		.loc 1 303 35 is_stmt 0 view .LVU193
 658 0030 83F82E40 		strb	r4, [r3, #46]
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 659              		.loc 1 287 8 view .LVU194
 660 0034 2046     		mov	r0, r4
ARM GAS  /tmp/ccUaSLfZ.s 			page 29


 661              	.LVL43:
 339:Src/aspep.c   ****       }
 662              		.loc 1 339 9 is_stmt 1 view .LVU195
 345:Src/aspep.c   **** }
 663              		.loc 1 345 3 view .LVU196
 346:Src/aspep.c   **** 
 664              		.loc 1 346 1 is_stmt 0 view .LVU197
 665 0036 5DF8044B 		ldr	r4, [sp], #4
 666              	.LCFI11:
 667              		.cfi_remember_state
 668              		.cfi_restore 4
 669              		.cfi_def_cfa_offset 0
 670 003a 7047     		bx	lr
 671              	.LVL44:
 672              	.L28:
 673              	.LCFI12:
 674              		.cfi_restore_state
 318:Src/aspep.c   ****         {
 675              		.loc 1 318 9 is_stmt 1 view .LVU198
 327:Src/aspep.c   ****         {
 676              		.loc 1 327 14 view .LVU199
 329:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 677              		.loc 1 329 11 view .LVU200
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 678              		.loc 1 331 21 is_stmt 0 view .LVU201
 679 003c 826B     		ldr	r2, [r0, #56]
 329:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 680              		.loc 1 329 39 view .LVU202
 681 003e 0120     		movs	r0, #1
 682              	.LVL45:
 330:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 683              		.loc 1 330 45 view .LVU203
 684 0040 03F13804 		add	r4, r3, #56
 329:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 685              		.loc 1 329 39 view .LVU204
 686 0044 83F83E00 		strb	r0, [r3, #62]
 330:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 687              		.loc 1 330 11 is_stmt 1 view .LVU205
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 688              		.loc 1 331 21 is_stmt 0 view .LVU206
 689 0048 0432     		adds	r2, r2, #4
 330:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 690              		.loc 1 330 43 view .LVU207
 691 004a 1C64     		str	r4, [r3, #64]
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 692              		.loc 1 331 11 is_stmt 1 view .LVU208
 346:Src/aspep.c   **** 
 693              		.loc 1 346 1 is_stmt 0 view .LVU209
 694 004c 5DF8044B 		ldr	r4, [sp], #4
 695              	.LCFI13:
 696              		.cfi_remember_state
 697              		.cfi_restore 4
 698              		.cfi_def_cfa_offset 0
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 699              		.loc 1 331 19 view .LVU210
 700 0050 0A60     		str	r2, [r1]
 701              	.LVL46:
ARM GAS  /tmp/ccUaSLfZ.s 			page 30


 339:Src/aspep.c   ****       }
 702              		.loc 1 339 9 is_stmt 1 view .LVU211
 345:Src/aspep.c   **** }
 703              		.loc 1 345 3 view .LVU212
 346:Src/aspep.c   **** 
 704              		.loc 1 346 1 is_stmt 0 view .LVU213
 705 0052 7047     		bx	lr
 706              	.LVL47:
 707              	.L21:
 708              	.LCFI14:
 709              		.cfi_restore_state
 318:Src/aspep.c   ****         {
 710              		.loc 1 318 9 is_stmt 1 view .LVU214
 320:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 711              		.loc 1 320 11 view .LVU215
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 712              		.loc 1 322 21 is_stmt 0 view .LVU216
 713 0054 026B     		ldr	r2, [r0, #48]
 320:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 714              		.loc 1 320 39 view .LVU217
 715 0056 0120     		movs	r0, #1
 716              	.LVL48:
 321:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 717              		.loc 1 321 45 view .LVU218
 718 0058 03F13004 		add	r4, r3, #48
 320:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 719              		.loc 1 320 39 view .LVU219
 720 005c 83F83600 		strb	r0, [r3, #54]
 321:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 721              		.loc 1 321 11 is_stmt 1 view .LVU220
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 722              		.loc 1 322 21 is_stmt 0 view .LVU221
 723 0060 0432     		adds	r2, r2, #4
 321:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 724              		.loc 1 321 43 view .LVU222
 725 0062 1C64     		str	r4, [r3, #64]
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 726              		.loc 1 322 11 is_stmt 1 view .LVU223
 346:Src/aspep.c   **** 
 727              		.loc 1 346 1 is_stmt 0 view .LVU224
 728 0064 5DF8044B 		ldr	r4, [sp], #4
 729              	.LCFI15:
 730              		.cfi_restore 4
 731              		.cfi_def_cfa_offset 0
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 732              		.loc 1 322 19 view .LVU225
 733 0068 0A60     		str	r2, [r1]
 734              	.LVL49:
 339:Src/aspep.c   ****       }
 735              		.loc 1 339 9 is_stmt 1 view .LVU226
 345:Src/aspep.c   **** }
 736              		.loc 1 345 3 view .LVU227
 346:Src/aspep.c   **** 
 737              		.loc 1 346 1 is_stmt 0 view .LVU228
 738 006a 7047     		bx	lr
 739              		.cfi_endproc
 740              	.LFE1443:
ARM GAS  /tmp/ccUaSLfZ.s 			page 31


 742              		.section	.text.ASPEP_sendPacket,"ax",%progbits
 743              		.align	1
 744              		.p2align 2,,3
 745              		.global	ASPEP_sendPacket
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 749              		.fpu fpv4-sp-d16
 751              	ASPEP_sendPacket:
 752              	.LVL50:
 753              	.LFB1445:
 405:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 754              		.loc 1 405 1 is_stmt 1 view -0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 406:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 758              		.loc 1 406 3 view .LVU230
 415:Src/aspep.c   ****     uint32_t tmpHeader;
 759              		.loc 1 415 5 view .LVU231
 416:Src/aspep.c   ****     uint16_t txDataLengthTemp;
 760              		.loc 1 416 5 view .LVU232
 417:Src/aspep.c   ****     uint8_t *packet;
 761              		.loc 1 417 5 view .LVU233
 418:Src/aspep.c   **** 
 762              		.loc 1 418 5 view .LVU234
 420:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 763              		.loc 1 420 5 view .LVU235
 405:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 764              		.loc 1 405 1 is_stmt 0 view .LVU236
 765 0000 70B5     		push	{r4, r5, r6, lr}
 766              	.LCFI16:
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 4, -16
 769              		.cfi_offset 5, -12
 770              		.cfi_offset 6, -8
 771              		.cfi_offset 14, -4
 423:Src/aspep.c   ****     {
 772              		.loc 1 423 8 view .LVU237
 773 0002 90F86440 		ldrb	r4, [r0, #100]	@ zero_extendqisi2
 774              	.LVL51:
 421:Src/aspep.c   **** 
 775              		.loc 1 421 5 is_stmt 1 view .LVU238
 423:Src/aspep.c   ****     {
 776              		.loc 1 423 5 view .LVU239
 423:Src/aspep.c   ****     {
 777              		.loc 1 423 8 is_stmt 0 view .LVU240
 778 0006 022C     		cmp	r4, #2
 779 0008 02D0     		beq	.L48
 457:Src/aspep.c   ****     }
 780              		.loc 1 457 14 view .LVU241
 781 000a 0221     		movs	r1, #2
 782              	.LVL52:
 783              	.L30:
 462:Src/aspep.c   **** }
 784              		.loc 1 462 3 is_stmt 1 view .LVU242
 463:Src/aspep.c   **** 
ARM GAS  /tmp/ccUaSLfZ.s 			page 32


 785              		.loc 1 463 1 is_stmt 0 view .LVU243
 786 000c 0846     		mov	r0, r1
 787 000e 70BD     		pop	{r4, r5, r6, pc}
 788              	.LVL53:
 789              	.L48:
 427:Src/aspep.c   ****       header = (uint32_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 790              		.loc 1 427 7 is_stmt 1 view .LVU244
 428:Src/aspep.c   ****       header--; /* Header ues 4*8 bits on top of txBuffer*/
 791              		.loc 1 428 7 view .LVU245
 429:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 792              		.loc 1 429 7 view .LVU246
 430:Src/aspep.c   ****       *header = tmpHeader;
 793              		.loc 1 430 7 view .LVU247
 431:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 794              		.loc 1 431 7 view .LVU248
 430:Src/aspep.c   ****       *header = tmpHeader;
 795              		.loc 1 430 17 is_stmt 0 view .LVU249
 796 0010 43EA0214 		orr	r4, r3, r2, lsl #4
 431:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 797              		.loc 1 431 15 view .LVU250
 798 0014 41F8044C 		str	r4, [r1, #-4]
 432:Src/aspep.c   ****       {
 799              		.loc 1 432 7 is_stmt 1 view .LVU251
 432:Src/aspep.c   ****       {
 800              		.loc 1 432 10 is_stmt 0 view .LVU252
 801 0018 90F86C40 		ldrb	r4, [r0, #108]	@ zero_extendqisi2
 802 001c 012C     		cmp	r4, #1
 803 001e 04D1     		bne	.L31
 435:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 804              		.loc 1 435 9 is_stmt 1 view .LVU253
 436:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 805              		.loc 1 436 9 view .LVU254
 435:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 806              		.loc 1 435 34 is_stmt 0 view .LVU255
 807 0020 4FF6CA64 		movw	r4, #65226
 808 0024 8C52     		strh	r4, [r1, r2]	@ unaligned
 437:Src/aspep.c   ****       }
 809              		.loc 1 437 9 is_stmt 1 view .LVU256
 437:Src/aspep.c   ****       }
 810              		.loc 1 437 26 is_stmt 0 view .LVU257
 811 0026 0232     		adds	r2, r2, #2
 812              	.LVL54:
 437:Src/aspep.c   ****       }
 813              		.loc 1 437 26 view .LVU258
 814 0028 92B2     		uxth	r2, r2
 815              	.LVL55:
 816              	.L31:
 439:Src/aspep.c   ****       {
 817              		.loc 1 439 7 is_stmt 1 view .LVU259
 439:Src/aspep.c   ****       {
 818              		.loc 1 439 10 is_stmt 0 view .LVU260
 819 002a 0A2B     		cmp	r3, #10
 820 002c 03D1     		bne	.L32
 441:Src/aspep.c   ****         {
 821              		.loc 1 441 9 is_stmt 1 view .LVU261
 441:Src/aspep.c   ****         {
 822              		.loc 1 441 12 is_stmt 0 view .LVU262
ARM GAS  /tmp/ccUaSLfZ.s 			page 33


 823 002e 047C     		ldrb	r4, [r0, #16]	@ zero_extendqisi2
 824 0030 94B3     		cbz	r4, .L42
 443:Src/aspep.c   ****         }
 825              		.loc 1 443 11 is_stmt 1 view .LVU263
 443:Src/aspep.c   ****         }
 826              		.loc 1 443 43 is_stmt 0 view .LVU264
 827 0032 0024     		movs	r4, #0
 828 0034 0474     		strb	r4, [r0, #16]
 450:Src/aspep.c   ****       {
 829              		.loc 1 450 7 is_stmt 1 view .LVU265
 830              	.L32:
 831              	.LBB124:
 832              	.LBB125:
 833              	.LBB126:
 834              	.LBB127:
 121:Src/aspep.c   **** 
 835              		.loc 1 121 12 is_stmt 0 view .LVU266
 836 0036 51F8044C 		ldr	r4, [r1, #-4]
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 837              		.loc 1 126 7 view .LVU267
 838 003a 354D     		ldr	r5, .L55
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 839              		.loc 1 126 26 view .LVU268
 840 003c E6B2     		uxtb	r6, r4
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 841              		.loc 1 127 26 view .LVU269
 842 003e C4F3072E 		ubfx	lr, r4, #8, #8
 843 0042 AE5D     		ldrb	r6, [r5, r6]	@ zero_extendqisi2
 844 0044 8EEA060E 		eor	lr, lr, r6
 845              	.LBE127:
 846              	.LBE126:
 847              	.LBE125:
 848              	.LBE124:
 452:Src/aspep.c   ****       }
 849              		.loc 1 452 18 view .LVU270
 850 0048 0432     		adds	r2, r2, #4
 851              	.LVL56:
 852              	.LBB149:
 853              	.LBB144:
 854              	.LBB131:
 855              	.LBB128:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 856              		.loc 1 128 26 view .LVU271
 857 004a 15F80E60 		ldrb	r6, [r5, lr]	@ zero_extendqisi2
 858 004e C4F3074E 		ubfx	lr, r4, #16, #8
 859 0052 8EEA060E 		eor	lr, lr, r6
 860              	.LBE128:
 861              	.LBE131:
 862              	.LBE144:
 863              	.LBE149:
 429:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 864              		.loc 1 429 13 view .LVU272
 865 0056 A1F1040C 		sub	ip, r1, #4
 866              	.LVL57:
 452:Src/aspep.c   ****       }
 867              		.loc 1 452 9 is_stmt 1 view .LVU273
 868              	.LBB150:
ARM GAS  /tmp/ccUaSLfZ.s 			page 34


 869              	.LBB145:
 870              	.LBB132:
 871              	.LBB129:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 872              		.loc 1 129 26 is_stmt 0 view .LVU274
 873 005a 15F80EE0 		ldrb	lr, [r5, lr]	@ zero_extendqisi2
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 874              		.loc 1 129 46 view .LVU275
 875 005e C4F30365 		ubfx	r5, r4, #24, #4
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 876              		.loc 1 129 26 view .LVU276
 877 0062 8EEA050E 		eor	lr, lr, r5
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 878              		.loc 1 129 7 view .LVU277
 879 0066 2B4D     		ldr	r5, .L55+4
 140:Src/aspep.c   **** 
 880              		.loc 1 140 17 view .LVU278
 881 0068 15F80E50 		ldrb	r5, [r5, lr]	@ zero_extendqisi2
 140:Src/aspep.c   **** 
 882              		.loc 1 140 14 view .LVU279
 883 006c 44EA0574 		orr	r4, r4, r5, lsl #28
 884              	.LBE129:
 885              	.LBE132:
 886              	.LBE145:
 887              	.LBE150:
 452:Src/aspep.c   ****       }
 888              		.loc 1 452 18 view .LVU280
 889 0070 92B2     		uxth	r2, r2
 890              	.LVL58:
 891              	.LBB151:
 892              	.LBI124:
 479:Src/aspep.c   **** {
 893              		.loc 1 479 9 is_stmt 1 view .LVU281
 894              	.LBB146:
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 895              		.loc 1 481 3 view .LVU282
 491:Src/aspep.c   ****     __disable_irq(); /*TODO: Disable High frequency task is enough */
 896              		.loc 1 491 5 view .LVU283
 897              	.LBB133:
 898              	.LBI126:
 118:Src/aspep.c   **** {
 899              		.loc 1 118 13 view .LVU284
 900              	.LBB130:
 120:Src/aspep.c   ****   uint32_t header = *headerPtr;
 901              		.loc 1 120 3 view .LVU285
 121:Src/aspep.c   **** 
 902              		.loc 1 121 3 view .LVU286
 124:Src/aspep.c   **** 
 903              		.loc 1 124 3 view .LVU287
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 904              		.loc 1 126 3 view .LVU288
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 905              		.loc 1 127 3 view .LVU289
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 906              		.loc 1 128 3 view .LVU290
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 907              		.loc 1 129 3 view .LVU291
ARM GAS  /tmp/ccUaSLfZ.s 			page 35


 140:Src/aspep.c   **** 
 908              		.loc 1 140 3 view .LVU292
 140:Src/aspep.c   **** 
 909              		.loc 1 140 14 is_stmt 0 view .LVU293
 910 0072 41F8044C 		str	r4, [r1, #-4]
 911              	.LVL59:
 140:Src/aspep.c   **** 
 912              		.loc 1 140 14 view .LVU294
 913              	.LBE130:
 914              	.LBE133:
 492:Src/aspep.c   ****     if (NULL == pHandle->lockBuffer) /* Communication Ip free to send data*/
 915              		.loc 1 492 5 is_stmt 1 view .LVU295
 916              	.LBB134:
 917              	.LBI134:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 918              		.loc 2 207 27 view .LVU296
 919              	.LBB135:
 920              		.loc 2 209 3 view .LVU297
 921              		.syntax unified
 922              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 923 0076 72B6     		cpsid i
 924              	@ 0 "" 2
 925              		.thumb
 926              		.syntax unified
 927              	.LBE135:
 928              	.LBE134:
 493:Src/aspep.c   ****     {
 929              		.loc 1 493 5 view .LVU298
 493:Src/aspep.c   ****     {
 930              		.loc 1 493 8 is_stmt 0 view .LVU299
 931 0078 816C     		ldr	r1, [r0, #72]
 932              	.LVL60:
 493:Src/aspep.c   ****     {
 933              		.loc 1 493 8 view .LVU300
 934 007a E1B1     		cbz	r1, .L49
 520:Src/aspep.c   ****       /* Lock buffer can be freed here */
 935              		.loc 1 520 7 is_stmt 1 view .LVU301
 936              	.LBB136:
 937              	.LBI136:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 938              		.loc 2 196 27 view .LVU302
 939              	.LBB137:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 940              		.loc 2 198 3 view .LVU303
 941              		.syntax unified
 942              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 943 007c 62B6     		cpsie i
 944              	@ 0 "" 2
 945              		.thumb
 946              		.syntax unified
 947              	.LBE137:
 948              	.LBE136:
 522:Src/aspep.c   ****       {
 949              		.loc 1 522 7 view .LVU304
 522:Src/aspep.c   ****       {
 950              		.loc 1 522 10 is_stmt 0 view .LVU305
 951 007e 092B     		cmp	r3, #9
ARM GAS  /tmp/ccUaSLfZ.s 			page 36


 952 0080 0DD0     		beq	.L50
 548:Src/aspep.c   ****       {
 953              		.loc 1 548 12 is_stmt 1 view .LVU306
 548:Src/aspep.c   ****       {
 954              		.loc 1 548 15 is_stmt 0 view .LVU307
 955 0082 0A2B     		cmp	r3, #10
 956 0084 2ED0     		beq	.L51
 560:Src/aspep.c   ****       {
 957              		.loc 1 560 12 is_stmt 1 view .LVU308
 560:Src/aspep.c   ****       {
 958              		.loc 1 560 14 is_stmt 0 view .LVU309
 959 0086 002B     		cmp	r3, #0
 960 0088 32D1     		bne	.L45
 562:Src/aspep.c   ****         {
 961              		.loc 1 562 9 is_stmt 1 view .LVU310
 562:Src/aspep.c   ****         {
 962              		.loc 1 562 32 is_stmt 0 view .LVU311
 963 008a 90F82410 		ldrb	r1, [r0, #36]	@ zero_extendqisi2
 562:Src/aspep.c   ****         {
 964              		.loc 1 562 12 view .LVU312
 965 008e 69BB     		cbnz	r1, .L46
 568:Src/aspep.c   ****         }
 966              		.loc 1 568 11 is_stmt 1 view .LVU313
 568:Src/aspep.c   ****         }
 967              		.loc 1 568 37 is_stmt 0 view .LVU314
 968 0090 0223     		movs	r3, #2
 969              	.LVL61:
 568:Src/aspep.c   ****         }
 970              		.loc 1 568 37 view .LVU315
 971 0092 80F82430 		strb	r3, [r0, #36]
 972 0096 B9E7     		b	.L30
 973              	.LVL62:
 974              	.L42:
 568:Src/aspep.c   ****         }
 975              		.loc 1 568 37 view .LVU316
 976              	.LBE146:
 977              	.LBE151:
 447:Src/aspep.c   ****         }
 978              		.loc 1 447 18 view .LVU317
 979 0098 0121     		movs	r1, #1
 980              	.LVL63:
 462:Src/aspep.c   **** }
 981              		.loc 1 462 3 is_stmt 1 view .LVU318
 463:Src/aspep.c   **** 
 982              		.loc 1 463 1 is_stmt 0 view .LVU319
 983 009a 0846     		mov	r0, r1
 984              	.LVL64:
 463:Src/aspep.c   **** 
 985              		.loc 1 463 1 view .LVU320
 986 009c 70BD     		pop	{r4, r5, r6, pc}
 987              	.LVL65:
 988              	.L50:
 989              	.LBB152:
 990              	.LBB147:
 525:Src/aspep.c   ****         {
 991              		.loc 1 525 9 is_stmt 1 view .LVU321
 525:Src/aspep.c   ****         {
ARM GAS  /tmp/ccUaSLfZ.s 			page 37


 992              		.loc 1 525 43 is_stmt 0 view .LVU322
 993 009e 036C     		ldr	r3, [r0, #64]
 994              	.LVL66:
 533:Src/aspep.c   ****         {
 995              		.loc 1 533 12 view .LVU323
 996 00a0 446C     		ldr	r4, [r0, #68]
 525:Src/aspep.c   ****         {
 997              		.loc 1 525 12 view .LVU324
 998 00a2 1968     		ldr	r1, [r3]
 527:Src/aspep.c   ****         }
 999              		.loc 1 527 18 view .LVU325
 1000 00a4 8C45     		cmp	ip, r1
 1001 00a6 14BF     		ite	ne
 1002 00a8 0321     		movne	r1, #3
 1003 00aa 0021     		moveq	r1, #0
 1004              	.LVL67:
 532:Src/aspep.c   ****         if (NULL == pHandle->asyncNextBuffer)
 1005              		.loc 1 532 9 is_stmt 1 view .LVU326
 533:Src/aspep.c   ****         {
 1006              		.loc 1 533 9 view .LVU327
 533:Src/aspep.c   ****         {
 1007              		.loc 1 533 12 is_stmt 0 view .LVU328
 1008 00ac 6CB3     		cbz	r4, .L52
 1009              	.L39:
 541:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = pending;
 1010              		.loc 1 541 9 is_stmt 1 view .LVU329
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 1011              		.loc 1 542 9 view .LVU330
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 1012              		.loc 1 542 48 is_stmt 0 view .LVU331
 1013 00ae 0220     		movs	r0, #2
 1014              	.LVL68:
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 1015              		.loc 1 542 48 view .LVU332
 1016 00b0 9871     		strb	r0, [r3, #6]
 543:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1017              		.loc 1 543 9 is_stmt 1 view .LVU333
 543:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1018              		.loc 1 543 49 is_stmt 0 view .LVU334
 1019 00b2 9A80     		strh	r2, [r3, #4]	@ movhi
 1020 00b4 AAE7     		b	.L30
 1021              	.LVL69:
 1022              	.L49:
 1023              	.LBB138:
 1024              	.LBI138:
 479:Src/aspep.c   **** {
 1025              		.loc 1 479 9 is_stmt 1 view .LVU335
 1026              	.LBB139:
 495:Src/aspep.c   ****       {
 1027              		.loc 1 495 7 view .LVU336
 495:Src/aspep.c   ****       {
 1028              		.loc 1 495 10 is_stmt 0 view .LVU337
 1029 00b6 092B     		cmp	r3, #9
 1030 00b8 22D0     		beq	.L53
 504:Src/aspep.c   ****       {
 1031              		.loc 1 504 12 is_stmt 1 view .LVU338
 504:Src/aspep.c   ****       {
ARM GAS  /tmp/ccUaSLfZ.s 			page 38


 1032              		.loc 1 504 15 is_stmt 0 view .LVU339
 1033 00ba 0A2B     		cmp	r3, #10
 506:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 1034              		.loc 1 506 9 is_stmt 1 view .LVU340
 506:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 1035              		.loc 1 506 35 is_stmt 0 view .LVU341
 1036 00bc 4FF00301 		mov	r1, #3
 507:Src/aspep.c   ****       }
 1037              		.loc 1 507 39 view .LVU342
 1038 00c0 0BBF     		itete	eq
 1039 00c2 00F12803 		addeq	r3, r0, #40
 1040              	.LVL70:
 512:Src/aspep.c   ****       }
 1041              		.loc 1 512 39 view .LVU343
 1042 00c6 00F12003 		addne	r3, r0, #32
 506:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 1043              		.loc 1 506 35 view .LVU344
 1044 00ca 80F82E10 		strbeq	r1, [r0, #46]
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 1045              		.loc 1 511 9 is_stmt 1 view .LVU345
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 1046              		.loc 1 511 35 is_stmt 0 view .LVU346
 1047 00ce 80F82410 		strbne	r1, [r0, #36]
 512:Src/aspep.c   ****       }
 1048              		.loc 1 512 9 is_stmt 1 view .LVU347
 512:Src/aspep.c   ****       }
 1049              		.loc 1 512 29 is_stmt 0 view .LVU348
 1050 00d2 8364     		str	r3, [r0, #72]
 1051              	.L35:
 515:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 1052              		.loc 1 515 7 is_stmt 1 view .LVU349
 1053              	.LBB140:
 1054              	.LBI140:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1055              		.loc 2 196 27 view .LVU350
 1056              	.LBB141:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1057              		.loc 2 198 3 view .LVU351
 1058              		.syntax unified
 1059              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1060 00d4 62B6     		cpsie i
 1061              	@ 0 "" 2
 1062              		.thumb
 1063              		.syntax unified
 1064              	.LBE141:
 1065              	.LBE140:
 516:Src/aspep.c   ****     }
 1066              		.loc 1 516 7 view .LVU352
 1067 00d6 836D     		ldr	r3, [r0, #88]
 1068 00d8 4069     		ldr	r0, [r0, #20]
 1069              	.LVL71:
 516:Src/aspep.c   ****     }
 1070              		.loc 1 516 7 is_stmt 0 view .LVU353
 1071 00da 6146     		mov	r1, ip
 1072 00dc 9847     		blx	r3
 1073              	.LVL72:
 574:Src/aspep.c   ****     }
ARM GAS  /tmp/ccUaSLfZ.s 			page 39


 1074              		.loc 1 574 7 is_stmt 1 view .LVU354
 1075              		.loc 1 579 3 view .LVU355
 516:Src/aspep.c   ****     }
 1076              		.loc 1 516 7 is_stmt 0 view .LVU356
 1077 00de 0021     		movs	r1, #0
 1078              	.LVL73:
 516:Src/aspep.c   ****     }
 1079              		.loc 1 516 7 view .LVU357
 1080              	.LBE139:
 1081              	.LBE138:
 1082              	.LBE147:
 1083              	.LBE152:
 462:Src/aspep.c   **** }
 1084              		.loc 1 462 3 is_stmt 1 view .LVU358
 463:Src/aspep.c   **** 
 1085              		.loc 1 463 1 is_stmt 0 view .LVU359
 1086 00e0 0846     		mov	r0, r1
 1087 00e2 70BD     		pop	{r4, r5, r6, pc}
 1088              	.LVL74:
 1089              	.L51:
 1090              	.LBB153:
 1091              	.LBB148:
 550:Src/aspep.c   ****         {
 1092              		.loc 1 550 9 is_stmt 1 view .LVU360
 550:Src/aspep.c   ****         {
 1093              		.loc 1 550 12 is_stmt 0 view .LVU361
 1094 00e4 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 1095              	.LVL75:
 550:Src/aspep.c   ****         {
 1096              		.loc 1 550 12 view .LVU362
 1097 00e8 012B     		cmp	r3, #1
 1098 00ea 03D0     		beq	.L54
 1099              	.L46:
 552:Src/aspep.c   ****         }
 1100              		.loc 1 552 18 view .LVU363
 1101 00ec 0321     		movs	r1, #3
 1102 00ee 8DE7     		b	.L30
 1103              	.LVL76:
 1104              	.L45:
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1105              		.loc 1 481 11 view .LVU364
 1106 00f0 0021     		movs	r1, #0
 1107 00f2 8BE7     		b	.L30
 1108              	.LVL77:
 1109              	.L54:
 556:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 1110              		.loc 1 556 11 is_stmt 1 view .LVU365
 556:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 1111              		.loc 1 556 37 is_stmt 0 view .LVU366
 1112 00f4 0223     		movs	r3, #2
 1113 00f6 80F82E30 		strb	r3, [r0, #46]
 557:Src/aspep.c   ****         }
 1114              		.loc 1 557 11 is_stmt 1 view .LVU367
 557:Src/aspep.c   ****         }
 1115              		.loc 1 557 38 is_stmt 0 view .LVU368
 1116 00fa 8285     		strh	r2, [r0, #44]	@ movhi
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
ARM GAS  /tmp/ccUaSLfZ.s 			page 40


 1117              		.loc 1 481 11 view .LVU369
 1118 00fc 0021     		movs	r1, #0
 1119 00fe 85E7     		b	.L30
 1120              	.LVL78:
 1121              	.L53:
 1122              	.LBB143:
 1123              	.LBB142:
 498:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 1124              		.loc 1 498 9 is_stmt 1 view .LVU370
 498:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 1125              		.loc 1 498 16 is_stmt 0 view .LVU371
 1126 0100 036C     		ldr	r3, [r0, #64]
 1127              	.LVL79:
 498:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 1128              		.loc 1 498 48 view .LVU372
 1129 0102 0321     		movs	r1, #3
 1130 0104 9971     		strb	r1, [r3, #6]
 499:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1131              		.loc 1 499 9 is_stmt 1 view .LVU373
 499:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1132              		.loc 1 499 29 is_stmt 0 view .LVU374
 1133 0106 8364     		str	r3, [r0, #72]
 1134 0108 E4E7     		b	.L35
 1135              	.LVL80:
 1136              	.L52:
 499:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1137              		.loc 1 499 29 view .LVU375
 1138              	.LBE142:
 1139              	.LBE143:
 536:Src/aspep.c   ****         }
 1140              		.loc 1 536 11 is_stmt 1 view .LVU376
 536:Src/aspep.c   ****         }
 1141              		.loc 1 536 36 is_stmt 0 view .LVU377
 1142 010a 4364     		str	r3, [r0, #68]
 1143 010c CFE7     		b	.L39
 1144              	.L56:
 1145 010e 00BF     		.align	2
 1146              	.L55:
 1147 0110 00000000 		.word	.LANCHOR0
 1148 0114 00000000 		.word	.LANCHOR1
 1149              	.LBE148:
 1150              	.LBE153:
 1151              		.cfi_endproc
 1152              	.LFE1445:
 1154              		.section	.text.ASPEP_HWDataTransmittedIT,"ax",%progbits
 1155              		.align	1
 1156              		.p2align 2,,3
 1157              		.global	ASPEP_HWDataTransmittedIT
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu fpv4-sp-d16
 1163              	ASPEP_HWDataTransmittedIT:
 1164              	.LVL81:
 1165              	.LFB1447:
 580:Src/aspep.c   **** }
 581:Src/aspep.c   **** 
ARM GAS  /tmp/ccUaSLfZ.s 			page 41


 582:Src/aspep.c   **** /**
 583:Src/aspep.c   ****   * @brief  Frees previously locked buffer and/or locks the next pending buffer. Once locked, sends
 584:Src/aspep.c   ****   *
 585:Src/aspep.c   ****   * Called as soon as previous packet transfer is completed, pHandle->lockBuffer is set before pack
 586:Src/aspep.c   ****   * Therefore, there is no need to protect this ISR against another higher priority ISR (HF Task).
 587:Src/aspep.c   ****   *
 588:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 589:Src/aspep.c   ****   */
 590:Src/aspep.c   **** void ASPEP_HWDataTransmittedIT(ASPEP_Handle_t *pHandle)
 591:Src/aspep.c   **** {
 1166              		.loc 1 591 1 is_stmt 1 view -0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 592:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 593:Src/aspep.c   ****   if (NULL == pHandle)
 594:Src/aspep.c   ****   {
 595:Src/aspep.c   ****     /* Nothing to do */
 596:Src/aspep.c   ****   }
 597:Src/aspep.c   ****   else
 598:Src/aspep.c   ****   {
 599:Src/aspep.c   **** #endif
 600:Src/aspep.c   ****     /* First free previous readLock buffer */
 601:Src/aspep.c   ****     if (pHandle->ctrlBuffer.state == readLock)
 1170              		.loc 1 601 5 view .LVU379
 591:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1171              		.loc 1 591 1 is_stmt 0 view .LVU380
 1172 0000 10B5     		push	{r4, lr}
 1173              	.LCFI17:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 4, -8
 1176              		.cfi_offset 14, -4
 1177              		.loc 1 601 28 view .LVU381
 1178 0002 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1179              		.loc 1 601 8 view .LVU382
 1180 0006 032B     		cmp	r3, #3
 591:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1181              		.loc 1 591 1 view .LVU383
 1182 0008 0446     		mov	r4, r0
 1183              		.loc 1 601 8 view .LVU384
 1184 000a 13D0     		beq	.L73
 1185              	.LBB154:
 602:Src/aspep.c   ****     {
 603:Src/aspep.c   ****       pHandle->ctrlBuffer.state = available;
 604:Src/aspep.c   ****     }
 605:Src/aspep.c   ****     else /* if previous buffer was not ASPEP_CTRL, then the buffer locked is a MCTL_Buff_t */
 606:Src/aspep.c   ****     {
 607:Src/aspep.c   ****       MCTL_Buff_t *tempBuff = (MCTL_Buff_t *)pHandle->lockBuffer; //cstat !MISRAC2012-Rule-11.5
 1186              		.loc 1 607 7 is_stmt 1 view .LVU385
 1187              	.LVL82:
 608:Src/aspep.c   ****       tempBuff->state = available;
 1188              		.loc 1 608 7 view .LVU386
 1189              		.loc 1 608 23 is_stmt 0 view .LVU387
 1190 000c 826C     		ldr	r2, [r0, #72]
 1191 000e 0021     		movs	r1, #0
 1192 0010 9171     		strb	r1, [r2, #6]
 1193              	.LVL83:
ARM GAS  /tmp/ccUaSLfZ.s 			page 42


 1194              		.loc 1 608 23 view .LVU388
 1195              	.LBE154:
 609:Src/aspep.c   ****     }
 610:Src/aspep.c   ****     if (pHandle->syncBuffer.state == pending)
 1196              		.loc 1 610 5 is_stmt 1 view .LVU389
 1197              		.loc 1 610 8 is_stmt 0 view .LVU390
 1198 0012 90F82E20 		ldrb	r2, [r0, #46]	@ zero_extendqisi2
 1199              	.LVL84:
 1200              		.loc 1 610 8 view .LVU391
 1201 0016 022A     		cmp	r2, #2
 1202 0018 13D0     		beq	.L61
 611:Src/aspep.c   ****     {
 612:Src/aspep.c   ****       pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 613:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 614:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 615:Src/aspep.c   ****     }
 616:Src/aspep.c   ****     /* Second prepare transfer of pending buffer */
 617:Src/aspep.c   ****     else if (pHandle->ctrlBuffer.state == pending)
 1203              		.loc 1 617 10 is_stmt 1 view .LVU392
 1204              		.loc 1 617 13 is_stmt 0 view .LVU393
 1205 001a 022B     		cmp	r3, #2
 1206 001c 1DD1     		bne	.L59
 618:Src/aspep.c   ****     {
 619:Src/aspep.c   ****       pHandle->lockBuffer = (void *)(&pHandle ->ctrlBuffer);
 1207              		.loc 1 619 7 is_stmt 1 view .LVU394
 1208              		.loc 1 619 38 is_stmt 0 view .LVU395
 1209 001e 00F12001 		add	r1, r0, #32
 620:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 1210              		.loc 1 620 7 view .LVU396
 1211 0022 836D     		ldr	r3, [r0, #88]
 619:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 1212              		.loc 1 619 27 view .LVU397
 1213 0024 8164     		str	r1, [r0, #72]
 1214              		.loc 1 620 7 is_stmt 1 view .LVU398
 1215 0026 0422     		movs	r2, #4
 1216 0028 4069     		ldr	r0, [r0, #20]
 1217              	.LVL85:
 1218              		.loc 1 620 7 is_stmt 0 view .LVU399
 1219 002a 9847     		blx	r3
 1220              	.LVL86:
 621:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 1221              		.loc 1 621 7 is_stmt 1 view .LVU400
 1222              		.loc 1 621 33 is_stmt 0 view .LVU401
 1223 002c 0323     		movs	r3, #3
 1224 002e 84F82430 		strb	r3, [r4, #36]
 622:Src/aspep.c   ****     }
 623:Src/aspep.c   ****     else
 624:Src/aspep.c   ****     {
 625:Src/aspep.c   ****       __disable_irq();
 626:Src/aspep.c   ****       if (pHandle->asyncNextBuffer != NULL)
 627:Src/aspep.c   ****       {
 628:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->asyncNextBuffer;
 629:Src/aspep.c   ****         pHandle->asyncNextBuffer->state = readLock;
 630:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 631:Src/aspep.c   ****         pHandle->asyncNextBuffer->SentNumber++;
 632:Src/aspep.c   **** #endif
 633:Src/aspep.c   ****         pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->asyncNextBuffer->buffer, pHandle->asyn
ARM GAS  /tmp/ccUaSLfZ.s 			page 43


 634:Src/aspep.c   ****         /* If one Async buffer is still pending, assign it to the asyncNextBuffer pointer*/
 635:Src/aspep.c   ****         if ((pHandle->asyncBufferA.state == pending) || (pHandle->asyncBufferB.state == pending))
 636:Src/aspep.c   ****         {
 637:Src/aspep.c   ****           //cstat !MISRAC2012-Rule-11.4
 638:Src/aspep.c   ****           uint32_t temp = (uint32_t)&pHandle->asyncBufferA + (uint32_t)&pHandle->asyncBufferB
 639:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 640:Src/aspep.c   ****           pHandle->asyncNextBuffer = (MCTL_Buff_t *) temp; //cstat !MISRAC2012-Rule-11.4
 641:Src/aspep.c   ****         }
 642:Src/aspep.c   ****         else
 643:Src/aspep.c   ****         {
 644:Src/aspep.c   ****           pHandle->asyncNextBuffer = NULL;
 645:Src/aspep.c   ****         }
 646:Src/aspep.c   ****       }
 647:Src/aspep.c   ****       else /* No TX packet are pending, HW resource is free*/
 648:Src/aspep.c   ****       {
 649:Src/aspep.c   ****         pHandle->lockBuffer = NULL;
 650:Src/aspep.c   ****       }
 651:Src/aspep.c   ****       __enable_irq();
 652:Src/aspep.c   ****     }
 653:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 654:Src/aspep.c   ****   }
 655:Src/aspep.c   **** #endif
 656:Src/aspep.c   **** }
 1225              		.loc 1 656 1 view .LVU402
 1226 0032 10BD     		pop	{r4, pc}
 1227              	.LVL87:
 1228              	.L73:
 603:Src/aspep.c   ****     }
 1229              		.loc 1 603 7 is_stmt 1 view .LVU403
 610:Src/aspep.c   ****     {
 1230              		.loc 1 610 8 is_stmt 0 view .LVU404
 1231 0034 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 603:Src/aspep.c   ****     }
 1232              		.loc 1 603 33 view .LVU405
 1233 0038 0022     		movs	r2, #0
 610:Src/aspep.c   ****     {
 1234              		.loc 1 610 8 view .LVU406
 1235 003a 022B     		cmp	r3, #2
 603:Src/aspep.c   ****     }
 1236              		.loc 1 603 33 view .LVU407
 1237 003c 80F82420 		strb	r2, [r0, #36]
 610:Src/aspep.c   ****     {
 1238              		.loc 1 610 5 is_stmt 1 view .LVU408
 610:Src/aspep.c   ****     {
 1239              		.loc 1 610 8 is_stmt 0 view .LVU409
 1240 0040 0BD1     		bne	.L59
 1241              	.L61:
 612:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 1242              		.loc 1 612 7 is_stmt 1 view .LVU410
 612:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 1243              		.loc 1 612 37 is_stmt 0 view .LVU411
 1244 0042 04F12800 		add	r0, r4, #40
 1245              	.LVL88:
 613:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 1246              		.loc 1 613 7 view .LVU412
 1247 0046 A36D     		ldr	r3, [r4, #88]
 612:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
ARM GAS  /tmp/ccUaSLfZ.s 			page 44


 1248              		.loc 1 612 27 view .LVU413
 1249 0048 A064     		str	r0, [r4, #72]
 613:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 1250              		.loc 1 613 7 is_stmt 1 view .LVU414
 1251 004a A28D     		ldrh	r2, [r4, #44]
 1252 004c A16A     		ldr	r1, [r4, #40]
 1253 004e 6069     		ldr	r0, [r4, #20]
 1254 0050 9847     		blx	r3
 1255              	.LVL89:
 614:Src/aspep.c   ****     }
 1256              		.loc 1 614 7 view .LVU415
 614:Src/aspep.c   ****     }
 1257              		.loc 1 614 33 is_stmt 0 view .LVU416
 1258 0052 0323     		movs	r3, #3
 1259 0054 84F82E30 		strb	r3, [r4, #46]
 1260              		.loc 1 656 1 view .LVU417
 1261 0058 10BD     		pop	{r4, pc}
 1262              	.LVL90:
 1263              	.L59:
 625:Src/aspep.c   ****       if (pHandle->asyncNextBuffer != NULL)
 1264              		.loc 1 625 7 is_stmt 1 view .LVU418
 1265              	.LBB155:
 1266              	.LBI155:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1267              		.loc 2 207 27 view .LVU419
 1268              	.LBB156:
 1269              		.loc 2 209 3 view .LVU420
 1270              		.syntax unified
 1271              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1272 005a 72B6     		cpsid i
 1273              	@ 0 "" 2
 1274              		.thumb
 1275              		.syntax unified
 1276              	.LBE156:
 1277              	.LBE155:
 626:Src/aspep.c   ****       {
 1278              		.loc 1 626 7 view .LVU421
 626:Src/aspep.c   ****       {
 1279              		.loc 1 626 18 is_stmt 0 view .LVU422
 1280 005c 636C     		ldr	r3, [r4, #68]
 626:Src/aspep.c   ****       {
 1281              		.loc 1 626 10 view .LVU423
 1282 005e CBB1     		cbz	r3, .L62
 628:Src/aspep.c   ****         pHandle->asyncNextBuffer->state = readLock;
 1283              		.loc 1 628 9 is_stmt 1 view .LVU424
 629:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1284              		.loc 1 629 41 is_stmt 0 view .LVU425
 1285 0060 0322     		movs	r2, #3
 628:Src/aspep.c   ****         pHandle->asyncNextBuffer->state = readLock;
 1286              		.loc 1 628 29 view .LVU426
 1287 0062 A364     		str	r3, [r4, #72]
 629:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1288              		.loc 1 629 9 is_stmt 1 view .LVU427
 629:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 1289              		.loc 1 629 41 is_stmt 0 view .LVU428
 1290 0064 9A71     		strb	r2, [r3, #6]
 633:Src/aspep.c   ****         /* If one Async buffer is still pending, assign it to the asyncNextBuffer pointer*/
ARM GAS  /tmp/ccUaSLfZ.s 			page 45


 1291              		.loc 1 633 9 is_stmt 1 view .LVU429
 1292 0066 1968     		ldr	r1, [r3]
 1293 0068 9A88     		ldrh	r2, [r3, #4]
 1294 006a 6069     		ldr	r0, [r4, #20]
 1295              	.LVL91:
 633:Src/aspep.c   ****         /* If one Async buffer is still pending, assign it to the asyncNextBuffer pointer*/
 1296              		.loc 1 633 9 is_stmt 0 view .LVU430
 1297 006c A36D     		ldr	r3, [r4, #88]
 1298 006e 9847     		blx	r3
 1299              	.LVL92:
 635:Src/aspep.c   ****         {
 1300              		.loc 1 635 9 is_stmt 1 view .LVU431
 635:Src/aspep.c   ****         {
 1301              		.loc 1 635 12 is_stmt 0 view .LVU432
 1302 0070 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 1303 0074 022B     		cmp	r3, #2
 1304 0076 07D0     		beq	.L63
 635:Src/aspep.c   ****         {
 1305              		.loc 1 635 54 discriminator 1 view .LVU433
 1306 0078 94F83E30 		ldrb	r3, [r4, #62]	@ zero_extendqisi2
 1307 007c 022B     		cmp	r3, #2
 1308 007e 03D0     		beq	.L63
 644:Src/aspep.c   ****         }
 1309              		.loc 1 644 11 is_stmt 1 view .LVU434
 644:Src/aspep.c   ****         }
 1310              		.loc 1 644 36 is_stmt 0 view .LVU435
 1311 0080 0023     		movs	r3, #0
 1312 0082 6364     		str	r3, [r4, #68]
 1313              	.L65:
 651:Src/aspep.c   ****     }
 1314              		.loc 1 651 7 is_stmt 1 view .LVU436
 1315              	.LBB157:
 1316              	.LBI157:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1317              		.loc 2 196 27 view .LVU437
 1318              	.LBB158:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1319              		.loc 2 198 3 view .LVU438
 1320              		.syntax unified
 1321              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1322 0084 62B6     		cpsie i
 1323              	@ 0 "" 2
 1324              		.thumb
 1325              		.syntax unified
 1326              	.LBE158:
 1327              	.LBE157:
 1328              		.loc 1 656 1 is_stmt 0 view .LVU439
 1329 0086 10BD     		pop	{r4, pc}
 1330              	.LVL93:
 1331              	.L63:
 1332              	.LBB159:
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1333              		.loc 1 638 11 is_stmt 1 view .LVU440
 640:Src/aspep.c   ****         }
 1334              		.loc 1 640 11 view .LVU441
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1335              		.loc 1 638 20 is_stmt 0 view .LVU442
ARM GAS  /tmp/ccUaSLfZ.s 			page 46


 1336 0088 626C     		ldr	r2, [r4, #68]
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1337              		.loc 1 638 72 view .LVU443
 1338 008a 6300     		lsls	r3, r4, #1
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1339              		.loc 1 638 60 view .LVU444
 1340 008c 6833     		adds	r3, r3, #104
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1341              		.loc 1 638 20 view .LVU445
 1342 008e 9B1A     		subs	r3, r3, r2
 640:Src/aspep.c   ****         }
 1343              		.loc 1 640 36 view .LVU446
 1344 0090 6364     		str	r3, [r4, #68]
 1345              	.LVL94:
 640:Src/aspep.c   ****         }
 1346              		.loc 1 640 36 view .LVU447
 1347              	.LBE159:
 636:Src/aspep.c   ****           //cstat !MISRAC2012-Rule-11.4
 1348              		.loc 1 636 9 view .LVU448
 1349 0092 F7E7     		b	.L65
 1350              	.LVL95:
 1351              	.L62:
 649:Src/aspep.c   ****       }
 1352              		.loc 1 649 9 is_stmt 1 view .LVU449
 649:Src/aspep.c   ****       }
 1353              		.loc 1 649 29 is_stmt 0 view .LVU450
 1354 0094 A364     		str	r3, [r4, #72]
 1355 0096 F5E7     		b	.L65
 1356              		.cfi_endproc
 1357              	.LFE1447:
 1359              		.section	.text.ASPEP_RXframeProcess,"ax",%progbits
 1360              		.align	1
 1361              		.p2align 2,,3
 1362              		.global	ASPEP_RXframeProcess
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv4-sp-d16
 1368              	ASPEP_RXframeProcess:
 1369              	.LVL96:
 1370              	.LFB1448:
 657:Src/aspep.c   **** 
 658:Src/aspep.c   **** /**
 659:Src/aspep.c   ****   * @brief  Updates ASPEP state depending on received packet from Controller and sends a response a
 660:Src/aspep.c   ****   *
 661:Src/aspep.c   ****   * ASPEP protocol defined in section 4.4.1 Connection Procedure of Motor Control Protocol Suite of
 662:Src/aspep.c   ****   *
 663:Src/aspep.c   ****   * @param  *pSupHandle Handler of the current instance of the MCTL component
 664:Src/aspep.c   ****   * @param  *packetLength Length of the packet to be processed
 665:Src/aspep.c   ****   *
 666:Src/aspep.c   ****   * @return Returns the buffer of data transmitted by the MCP controller device
 667:Src/aspep.c   ****   */
 668:Src/aspep.c   **** uint8_t *ASPEP_RXframeProcess(MCTL_Handle_t *pSupHandle, uint16_t *packetLength)
 669:Src/aspep.c   **** {
 1371              		.loc 1 669 1 is_stmt 1 view -0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUaSLfZ.s 			page 47


 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 670:Src/aspep.c   ****   uint8_t *result = NULL; //cstat !MISRAC2012-Rule-8.13
 1375              		.loc 1 670 3 view .LVU452
 671:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 672:Src/aspep.c   ****   if ((NULL == pSupHandle) || (NULL == packetLength))
 673:Src/aspep.c   ****   {
 674:Src/aspep.c   ****     /* Nothing to do */
 675:Src/aspep.c   ****   }
 676:Src/aspep.c   ****   else
 677:Src/aspep.c   ****   {
 678:Src/aspep.c   **** #endif
 679:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 1376              		.loc 1 679 5 view .LVU453
 669:Src/aspep.c   ****   uint8_t *result = NULL; //cstat !MISRAC2012-Rule-8.13
 1377              		.loc 1 669 1 is_stmt 0 view .LVU454
 1378 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1379              	.LCFI18:
 1380              		.cfi_def_cfa_offset 32
 1381              		.cfi_offset 3, -32
 1382              		.cfi_offset 4, -28
 1383              		.cfi_offset 5, -24
 1384              		.cfi_offset 6, -20
 1385              		.cfi_offset 7, -16
 1386              		.cfi_offset 8, -12
 1387              		.cfi_offset 9, -8
 1388              		.cfi_offset 14, -4
 680:Src/aspep.c   ****     uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 681:Src/aspep.c   ****     uint16_t packetNumber;
 682:Src/aspep.c   **** #if VALID_CRC_DATA
 683:Src/aspep.c   ****     bool validCRCData = true;
 684:Src/aspep.c   **** #endif
 685:Src/aspep.c   ****     *packetLength = 0;
 686:Src/aspep.c   ****     if (pHandle->NewPacketAvailable)
 1389              		.loc 1 686 8 view .LVU455
 1390 0004 90F86130 		ldrb	r3, [r0, #97]	@ zero_extendqisi2
 680:Src/aspep.c   ****     uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 1391              		.loc 1 680 14 view .LVU456
 1392 0008 C269     		ldr	r2, [r0, #28]
 685:Src/aspep.c   ****     if (pHandle->NewPacketAvailable)
 1393              		.loc 1 685 19 view .LVU457
 1394 000a 0025     		movs	r5, #0
 669:Src/aspep.c   ****   uint8_t *result = NULL; //cstat !MISRAC2012-Rule-8.13
 1395              		.loc 1 669 1 view .LVU458
 1396 000c 0446     		mov	r4, r0
 1397              	.LVL97:
 680:Src/aspep.c   ****     uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 1398              		.loc 1 680 5 is_stmt 1 view .LVU459
 681:Src/aspep.c   **** #if VALID_CRC_DATA
 1399              		.loc 1 681 5 view .LVU460
 685:Src/aspep.c   ****     if (pHandle->NewPacketAvailable)
 1400              		.loc 1 685 5 view .LVU461
 685:Src/aspep.c   ****     if (pHandle->NewPacketAvailable)
 1401              		.loc 1 685 19 is_stmt 0 view .LVU462
 1402 000e 0D80     		strh	r5, [r1]	@ movhi
 1403              		.loc 1 686 5 is_stmt 1 view .LVU463
 1404              		.loc 1 686 8 is_stmt 0 view .LVU464
 1405 0010 93B1     		cbz	r3, .L75
ARM GAS  /tmp/ccUaSLfZ.s 			page 48


 687:Src/aspep.c   ****     {
 688:Src/aspep.c   ****       pHandle->NewPacketAvailable = false; /* Consumes new packet*/
 1406              		.loc 1 688 7 is_stmt 1 view .LVU465
 689:Src/aspep.c   ****       switch (pHandle->ASPEP_State)
 1407              		.loc 1 689 22 is_stmt 0 view .LVU466
 1408 0012 90F86460 		ldrb	r6, [r0, #100]	@ zero_extendqisi2
 688:Src/aspep.c   ****       switch (pHandle->ASPEP_State)
 1409              		.loc 1 688 35 view .LVU467
 1410 0016 80F86150 		strb	r5, [r0, #97]
 1411              		.loc 1 689 7 is_stmt 1 view .LVU468
 1412 001a 012E     		cmp	r6, #1
 1413 001c 54D0     		beq	.L76
 1414 001e 022E     		cmp	r6, #2
 1415 0020 3ED0     		beq	.L77
 1416 0022 002E     		cmp	r6, #0
 1417 0024 33D0     		beq	.L102
 1418              	.LVL98:
 1419              	.L78:
 690:Src/aspep.c   ****       {
 691:Src/aspep.c   ****         case ASPEP_IDLE:
 692:Src/aspep.c   ****         {
 693:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 694:Src/aspep.c   ****           {
 695:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == true)
 696:Src/aspep.c   ****             {
 697:Src/aspep.c   ****               /* Controller capabilities match performer capabilities.*/
 698:Src/aspep.c   ****               pSupHandle->txSyncMaxPayload = (pHandle->Capabilities.TXS_maxSize + (uint16_t)1U) * (
 699:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 700:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 701:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 702:Src/aspep.c   ****             }
 703:Src/aspep.c   ****             else
 704:Src/aspep.c   ****             {
 705:Src/aspep.c   ****               /* Nothing to do, controller has to send back new beacon with matching capabilities *
 706:Src/aspep.c   ****             }
 707:Src/aspep.c   ****             /* Beacon Packet must be answered*/
 708:Src/aspep.c   ****             ASPEP_sendBeacon(pHandle, &pHandle->Capabilities);
 709:Src/aspep.c   ****           }
 710:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 711:Src/aspep.c   ****           {
 712:Src/aspep.c   ****             /* In Listening for controller performer, */
 713:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 714:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_RESET, packetNumber);
 715:Src/aspep.c   ****           }
 716:Src/aspep.c   ****           else
 717:Src/aspep.c   ****           {
 718:Src/aspep.c   ****             /* Nothing to do */
 719:Src/aspep.c   ****           }
 720:Src/aspep.c   ****           break;
 721:Src/aspep.c   ****         }
 722:Src/aspep.c   **** 
 723:Src/aspep.c   ****         case ASPEP_CONFIGURED:
 724:Src/aspep.c   ****         {
 725:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 726:Src/aspep.c   ****           {
 727:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == false)
 728:Src/aspep.c   ****             {
ARM GAS  /tmp/ccUaSLfZ.s 			page 49


 729:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_IDLE;
 730:Src/aspep.c   ****             }
 731:Src/aspep.c   ****             else
 732:Src/aspep.c   ****             {
 733:Src/aspep.c   ****               /* Nothing to do */
 734:Src/aspep.c   ****             }
 735:Src/aspep.c   **** 
 736:Src/aspep.c   ****             ASPEP_sendBeacon (pHandle, &pHandle->Capabilities);
 737:Src/aspep.c   ****           }
 738:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 739:Src/aspep.c   ****           {
 740:Src/aspep.c   ****             /* In Listening for controller performer, */
 741:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 742:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 743:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 744:Src/aspep.c   ****           }
 745:Src/aspep.c   ****           else
 746:Src/aspep.c   ****           {
 747:Src/aspep.c   ****             /* Nothing to do */
 748:Src/aspep.c   ****           }
 749:Src/aspep.c   ****           break;
 750:Src/aspep.c   ****         }
 751:Src/aspep.c   **** 
 752:Src/aspep.c   ****         case ASPEP_CONNECTED:
 753:Src/aspep.c   ****         {
 754:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 755:Src/aspep.c   ****           {
 756:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == false)
 757:Src/aspep.c   ****             {
 758:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_IDLE;
 759:Src/aspep.c   ****             }
 760:Src/aspep.c   ****             else
 761:Src/aspep.c   ****             {
 762:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 763:Src/aspep.c   ****             }
 764:Src/aspep.c   ****             ASPEP_sendBeacon(pHandle, &pHandle->Capabilities);
 765:Src/aspep.c   ****           }
 766:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 767:Src/aspep.c   ****           {
 768:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 769:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 770:Src/aspep.c   ****           }
 771:Src/aspep.c   ****           else if (DATA_PACKET == pHandle->rxPacketType)
 772:Src/aspep.c   ****           {
 773:Src/aspep.c   **** #if VALID_CRC_DATA
 774:Src/aspep.c   ****             if (validCRCData)
 775:Src/aspep.c   ****             {
 776:Src/aspep.c   **** #endif
 777:Src/aspep.c   ****               pHandle->syncPacketCount++; /* this counter is incremented at each valid data packet 
 778:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 779:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 780:Src/aspep.c   ****               result = pHandle->rxBuffer;
 781:Src/aspep.c   **** #if VALID_CRC_DATA
 782:Src/aspep.c   ****             }
 783:Src/aspep.c   ****             else
 784:Src/aspep.c   ****             {
 785:Src/aspep.c   ****               ASPEP_sendNack (pHandle, ASPEP_BAD_CRC_DATA);
ARM GAS  /tmp/ccUaSLfZ.s 			page 50


 786:Src/aspep.c   ****             }
 787:Src/aspep.c   **** #endif
 788:Src/aspep.c   ****           }
 789:Src/aspep.c   ****           else
 790:Src/aspep.c   ****           {
 791:Src/aspep.c   ****             /* This condition is not reachable because already filtred by NewPacketAvailable */
 792:Src/aspep.c   ****             /* ASPEP_sendNack (pHandle, ASPEP_BAD_PACKET_TYPE) */
 793:Src/aspep.c   ****           }
 794:Src/aspep.c   ****           break;
 795:Src/aspep.c   ****         }
 796:Src/aspep.c   **** 
 797:Src/aspep.c   ****         default:
 798:Src/aspep.c   ****           break;
 799:Src/aspep.c   ****       }
 800:Src/aspep.c   ****       /* The valid received packet is now safely consumes, we are ready to receive a new packet */
 801:Src/aspep.c   ****       pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 1420              		.loc 1 801 7 view .LVU469
 1421 0026 636D     		ldr	r3, [r4, #84]
 1422 0028 6069     		ldr	r0, [r4, #20]
 1423 002a 0422     		movs	r2, #4
 1424 002c 04F11C01 		add	r1, r4, #28
 1425 0030 9847     		blx	r3
 1426              	.LVL99:
 1427              	.L74:
 802:Src/aspep.c   ****     }
 803:Src/aspep.c   ****     else if (pHandle->badPacketFlag > ASPEP_OK)
 804:Src/aspep.c   ****     {
 805:Src/aspep.c   ****       ASPEP_sendNack(pHandle, pHandle->badPacketFlag);
 806:Src/aspep.c   ****       /* ASPEP_RXframeProcess can be called before reception of another packet */
 807:Src/aspep.c   ****       pHandle->badPacketFlag = ASPEP_OK;
 808:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 809:Src/aspep.c   ****         * DMA will be configured to receive next packet as soon as HW IP RX line is free to receive
 810:Src/aspep.c   ****         * It is important to note that we will detect only the NEXT free line transition, it means 
 811:Src/aspep.c   ****         * be lost but the end of this lost packet will generate the IDLE interrupt
 812:Src/aspep.c   ****         * the IDLE interrupt will call ASPEP_HWReset (in charge of the IP_aspep driver to call it a
 813:Src/aspep.c   ****         * time)*/
 814:Src/aspep.c   ****       pHandle->fASPEP_HWSync(pHandle->ASPEPIp);
 815:Src/aspep.c   ****     }
 816:Src/aspep.c   ****     else
 817:Src/aspep.c   ****     {
 818:Src/aspep.c   ****       /* Nothing to do, no response is due to the controller */
 819:Src/aspep.c   ****     }
 820:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 821:Src/aspep.c   ****   }
 822:Src/aspep.c   **** #endif
 823:Src/aspep.c   ****   return (result);
 824:Src/aspep.c   **** }
 1428              		.loc 1 824 1 is_stmt 0 view .LVU470
 1429 0032 2846     		mov	r0, r5
 1430 0034 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1431              	.LVL100:
 1432              	.L75:
 803:Src/aspep.c   ****     {
 1433              		.loc 1 803 10 is_stmt 1 view .LVU471
 803:Src/aspep.c   ****     {
 1434              		.loc 1 803 21 is_stmt 0 view .LVU472
 1435 0038 90F86250 		ldrb	r5, [r0, #98]	@ zero_extendqisi2
ARM GAS  /tmp/ccUaSLfZ.s 			page 51


 803:Src/aspep.c   ****     {
 1436              		.loc 1 803 13 view .LVU473
 1437 003c 002D     		cmp	r5, #0
 1438 003e F8D0     		beq	.L74
 805:Src/aspep.c   ****       /* ASPEP_RXframeProcess can be called before reception of another packet */
 1439              		.loc 1 805 7 is_stmt 1 view .LVU474
 1440              	.LVL101:
 1441              	.LBB184:
 1442              	.LBI184:
 237:Src/aspep.c   **** {
 1443              		.loc 1 237 13 view .LVU475
 1444              	.LBB185:
 239:Src/aspep.c   ****   *packet = NACK | (uint32_t)(((uint32_t) errorInfo) << 8U) | (uint32_t)(((uint32_t) errorInfo) << 
 1445              		.loc 1 239 3 view .LVU476
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1446              		.loc 1 240 3 view .LVU477
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1447              		.loc 1 240 63 is_stmt 0 view .LVU478
 1448 0040 2B04     		lsls	r3, r5, #16
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1449              		.loc 1 240 61 view .LVU479
 1450 0042 43EA0525 		orr	r5, r3, r5, lsl #8
 1451              	.LVL102:
 1452              	.LBB186:
 1453              	.LBB187:
 1454              	.LBB188:
 1455              	.LBB189:
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 1456              		.loc 1 127 26 view .LVU480
 1457 0046 C5F30723 		ubfx	r3, r5, #8, #8
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 1458              		.loc 1 127 7 view .LVU481
 1459 004a 9649     		ldr	r1, .L111
 1460              	.LVL103:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 1461              		.loc 1 129 7 view .LVU482
 1462 004c 9648     		ldr	r0, .L111+4
 1463              	.LVL104:
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 1464              		.loc 1 127 26 view .LVU483
 1465 004e 83F00903 		eor	r3, r3, #9
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 1466              		.loc 1 128 26 view .LVU484
 1467 0052 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 1468              	.LVL105:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 1469              		.loc 1 128 26 view .LVU485
 1470              	.LBE189:
 1471              	.LBE188:
 1472              	.LBE187:
 1473              	.LBE186:
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1474              		.loc 1 240 61 view .LVU486
 1475 0054 45F00F03 		orr	r3, r5, #15
 241:Src/aspep.c   **** }
 1476              		.loc 1 241 3 is_stmt 1 view .LVU487
 1477              	.LVL106:
ARM GAS  /tmp/ccUaSLfZ.s 			page 52


 1478              	.LBB202:
 1479              	.LBI186:
 479:Src/aspep.c   **** {
 1480              		.loc 1 479 9 view .LVU488
 1481              	.LBB200:
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1482              		.loc 1 481 3 view .LVU489
 491:Src/aspep.c   ****     __disable_irq(); /*TODO: Disable High frequency task is enough */
 1483              		.loc 1 491 5 view .LVU490
 1484              	.LBB191:
 1485              	.LBI188:
 118:Src/aspep.c   **** {
 1486              		.loc 1 118 13 view .LVU491
 1487              	.LBB190:
 120:Src/aspep.c   ****   uint32_t header = *headerPtr;
 1488              		.loc 1 120 3 view .LVU492
 121:Src/aspep.c   **** 
 1489              		.loc 1 121 3 view .LVU493
 124:Src/aspep.c   **** 
 1490              		.loc 1 124 3 view .LVU494
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 1491              		.loc 1 126 3 view .LVU495
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 1492              		.loc 1 127 3 view .LVU496
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 1493              		.loc 1 128 3 view .LVU497
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 1494              		.loc 1 128 26 is_stmt 0 view .LVU498
 1495 0058 82EA1545 		eor	r5, r2, r5, lsr #16
 1496              	.LVL107:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 1497              		.loc 1 129 3 is_stmt 1 view .LVU499
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 1498              		.loc 1 129 26 is_stmt 0 view .LVU500
 1499 005c 4A5D     		ldrb	r2, [r1, r5]	@ zero_extendqisi2
 1500              	.LVL108:
 140:Src/aspep.c   **** 
 1501              		.loc 1 140 3 is_stmt 1 view .LVU501
 140:Src/aspep.c   **** 
 1502              		.loc 1 140 17 is_stmt 0 view .LVU502
 1503 005e 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 1504              	.LVL109:
 140:Src/aspep.c   **** 
 1505              		.loc 1 140 14 view .LVU503
 1506 0060 43EA0273 		orr	r3, r3, r2, lsl #28
 1507              	.LVL110:
 140:Src/aspep.c   **** 
 1508              		.loc 1 140 14 view .LVU504
 1509 0064 2362     		str	r3, [r4, #32]
 1510              	.LVL111:
 140:Src/aspep.c   **** 
 1511              		.loc 1 140 14 view .LVU505
 1512              	.LBE190:
 1513              	.LBE191:
 492:Src/aspep.c   ****     if (NULL == pHandle->lockBuffer) /* Communication Ip free to send data*/
 1514              		.loc 1 492 5 is_stmt 1 view .LVU506
 1515              	.LBB192:
ARM GAS  /tmp/ccUaSLfZ.s 			page 53


 1516              	.LBI192:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1517              		.loc 2 207 27 view .LVU507
 1518              	.LBB193:
 1519              		.loc 2 209 3 view .LVU508
 1520              		.syntax unified
 1521              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1522 0066 72B6     		cpsid i
 1523              	@ 0 "" 2
 1524              		.thumb
 1525              		.syntax unified
 1526              	.LBE193:
 1527              	.LBE192:
 493:Src/aspep.c   ****     {
 1528              		.loc 1 493 5 view .LVU509
 493:Src/aspep.c   ****     {
 1529              		.loc 1 493 8 is_stmt 0 view .LVU510
 1530 0068 A36C     		ldr	r3, [r4, #72]
 1531 006a 002B     		cmp	r3, #0
 1532 006c 3AD0     		beq	.L103
 520:Src/aspep.c   ****       /* Lock buffer can be freed here */
 1533              		.loc 1 520 7 is_stmt 1 view .LVU511
 1534              	.LBB194:
 1535              	.LBI194:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1536              		.loc 2 196 27 view .LVU512
 1537              	.LBB195:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1538              		.loc 2 198 3 view .LVU513
 1539              		.syntax unified
 1540              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1541 006e 62B6     		cpsie i
 1542              	@ 0 "" 2
 1543              		.thumb
 1544              		.syntax unified
 1545              	.LBE195:
 1546              	.LBE194:
 522:Src/aspep.c   ****       {
 1547              		.loc 1 522 7 view .LVU514
 548:Src/aspep.c   ****       {
 1548              		.loc 1 548 12 view .LVU515
 560:Src/aspep.c   ****       {
 1549              		.loc 1 560 12 view .LVU516
 562:Src/aspep.c   ****         {
 1550              		.loc 1 562 9 view .LVU517
 562:Src/aspep.c   ****         {
 1551              		.loc 1 562 12 is_stmt 0 view .LVU518
 1552 0070 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 1553 0074 13B9     		cbnz	r3, .L90
 568:Src/aspep.c   ****         }
 1554              		.loc 1 568 11 is_stmt 1 view .LVU519
 568:Src/aspep.c   ****         }
 1555              		.loc 1 568 37 is_stmt 0 view .LVU520
 1556 0076 0223     		movs	r3, #2
 1557 0078 84F82430 		strb	r3, [r4, #36]
 1558              	.LVL112:
 1559              	.L90:
ARM GAS  /tmp/ccUaSLfZ.s 			page 54


 574:Src/aspep.c   ****     }
 1560              		.loc 1 574 7 is_stmt 1 view .LVU521
 579:Src/aspep.c   **** }
 1561              		.loc 1 579 3 view .LVU522
 579:Src/aspep.c   **** }
 1562              		.loc 1 579 3 is_stmt 0 view .LVU523
 1563              	.LBE200:
 1564              	.LBE202:
 1565              	.LBE185:
 1566              	.LBE184:
 807:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1567              		.loc 1 807 7 is_stmt 1 view .LVU524
 807:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1568              		.loc 1 807 30 is_stmt 0 view .LVU525
 1569 007c 0025     		movs	r5, #0
 814:Src/aspep.c   ****     }
 1570              		.loc 1 814 7 view .LVU526
 1571 007e 6069     		ldr	r0, [r4, #20]
 1572 0080 236D     		ldr	r3, [r4, #80]
 807:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1573              		.loc 1 807 30 view .LVU527
 1574 0082 84F86250 		strb	r5, [r4, #98]
 814:Src/aspep.c   ****     }
 1575              		.loc 1 814 7 is_stmt 1 view .LVU528
 1576 0086 9847     		blx	r3
 1577              	.LVL113:
 1578              		.loc 1 824 1 is_stmt 0 view .LVU529
 1579 0088 2846     		mov	r0, r5
 1580 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1581              	.LVL114:
 1582              	.L102:
 693:Src/aspep.c   ****           {
 1583              		.loc 1 693 11 is_stmt 1 view .LVU530
 693:Src/aspep.c   ****           {
 1584              		.loc 1 693 32 is_stmt 0 view .LVU531
 1585 008e 836E     		ldr	r3, [r0, #104]
 693:Src/aspep.c   ****           {
 1586              		.loc 1 693 14 view .LVU532
 1587 0090 052B     		cmp	r3, #5
 1588 0092 00F09580 		beq	.L104
 710:Src/aspep.c   ****           {
 1589              		.loc 1 710 16 is_stmt 1 view .LVU533
 710:Src/aspep.c   ****           {
 1590              		.loc 1 710 19 is_stmt 0 view .LVU534
 1591 0096 062B     		cmp	r3, #6
 1592 0098 00F0D780 		beq	.L105
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1593              		.loc 1 670 12 view .LVU535
 1594 009c 3546     		mov	r5, r6
 1595 009e C2E7     		b	.L78
 1596              	.L77:
 754:Src/aspep.c   ****           {
 1597              		.loc 1 754 11 is_stmt 1 view .LVU536
 754:Src/aspep.c   ****           {
 1598              		.loc 1 754 32 is_stmt 0 view .LVU537
 1599 00a0 836E     		ldr	r3, [r0, #104]
 754:Src/aspep.c   ****           {
ARM GAS  /tmp/ccUaSLfZ.s 			page 55


 1600              		.loc 1 754 14 view .LVU538
 1601 00a2 052B     		cmp	r3, #5
 1602 00a4 5FD0     		beq	.L106
 766:Src/aspep.c   ****           {
 1603              		.loc 1 766 16 is_stmt 1 view .LVU539
 766:Src/aspep.c   ****           {
 1604              		.loc 1 766 19 is_stmt 0 view .LVU540
 1605 00a6 062B     		cmp	r3, #6
 1606 00a8 00F0D680 		beq	.L107
 771:Src/aspep.c   ****           {
 1607              		.loc 1 771 16 is_stmt 1 view .LVU541
 771:Src/aspep.c   ****           {
 1608              		.loc 1 771 19 is_stmt 0 view .LVU542
 1609 00ac 092B     		cmp	r3, #9
 1610 00ae BAD1     		bne	.L78
 777:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1611              		.loc 1 777 15 is_stmt 1 view .LVU543
 777:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1612              		.loc 1 777 39 is_stmt 0 view .LVU544
 1613 00b0 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 779:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1614              		.loc 1 779 38 view .LVU545
 1615 00b4 B0F85C20 		ldrh	r2, [r0, #92]
 1616              	.LVL115:
 780:Src/aspep.c   **** #if VALID_CRC_DATA
 1617              		.loc 1 780 22 view .LVU546
 1618 00b8 A569     		ldr	r5, [r4, #24]
 777:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1619              		.loc 1 777 39 view .LVU547
 1620 00ba 0133     		adds	r3, r3, #1
 778:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 1621              		.loc 1 778 47 view .LVU548
 1622 00bc 0120     		movs	r0, #1
 1623              	.LVL116:
 777:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1624              		.loc 1 777 39 view .LVU549
 1625 00be 84F86030 		strb	r3, [r4, #96]
 778:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 1626              		.loc 1 778 15 is_stmt 1 view .LVU550
 778:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 1627              		.loc 1 778 47 is_stmt 0 view .LVU551
 1628 00c2 2074     		strb	r0, [r4, #16]
 779:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1629              		.loc 1 779 15 is_stmt 1 view .LVU552
 779:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1630              		.loc 1 779 29 is_stmt 0 view .LVU553
 1631 00c4 0A80     		strh	r2, [r1]	@ movhi
 780:Src/aspep.c   **** #if VALID_CRC_DATA
 1632              		.loc 1 780 15 is_stmt 1 view .LVU554
 1633              	.LVL117:
 780:Src/aspep.c   **** #if VALID_CRC_DATA
 1634              		.loc 1 780 15 is_stmt 0 view .LVU555
 1635 00c6 AEE7     		b	.L78
 1636              	.LVL118:
 1637              	.L76:
 725:Src/aspep.c   ****           {
 1638              		.loc 1 725 11 is_stmt 1 view .LVU556
ARM GAS  /tmp/ccUaSLfZ.s 			page 56


 725:Src/aspep.c   ****           {
 1639              		.loc 1 725 32 is_stmt 0 view .LVU557
 1640 00c8 836E     		ldr	r3, [r0, #104]
 725:Src/aspep.c   ****           {
 1641              		.loc 1 725 14 view .LVU558
 1642 00ca 052B     		cmp	r3, #5
 1643 00cc 16D0     		beq	.L108
 738:Src/aspep.c   ****           {
 1644              		.loc 1 738 16 is_stmt 1 view .LVU559
 738:Src/aspep.c   ****           {
 1645              		.loc 1 738 19 is_stmt 0 view .LVU560
 1646 00ce 062B     		cmp	r3, #6
 1647 00d0 A9D1     		bne	.L78
 741:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 1648              		.loc 1 741 13 is_stmt 1 view .LVU561
 1649              	.LVL119:
 742:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1650              		.loc 1 742 13 view .LVU562
 1651 00d2 C2F30F32 		ubfx	r2, r2, #12, #16
 1652              	.LVL120:
 742:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1653              		.loc 1 742 13 is_stmt 0 view .LVU563
 1654 00d6 3146     		mov	r1, r6
 1655              	.LVL121:
 742:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1656              		.loc 1 742 13 view .LVU564
 1657 00d8 FFF7FEFF 		bl	ASPEP_sendPing
 1658              	.LVL122:
 743:Src/aspep.c   ****           }
 1659              		.loc 1 743 13 is_stmt 1 view .LVU565
 743:Src/aspep.c   ****           }
 1660              		.loc 1 743 34 is_stmt 0 view .LVU566
 1661 00dc 0223     		movs	r3, #2
 1662 00de 84F86430 		strb	r3, [r4, #100]
 1663 00e2 A0E7     		b	.L78
 1664              	.LVL123:
 1665              	.L103:
 1666              	.LBB205:
 1667              	.LBB204:
 241:Src/aspep.c   **** }
 1668              		.loc 1 241 51 view .LVU567
 1669 00e4 04F12001 		add	r1, r4, #32
 1670              	.LVL124:
 1671              	.LBB203:
 1672              	.LBB201:
 1673              	.LBB196:
 1674              	.LBI196:
 479:Src/aspep.c   **** {
 1675              		.loc 1 479 9 is_stmt 1 view .LVU568
 1676              	.LBB197:
 495:Src/aspep.c   ****       {
 1677              		.loc 1 495 7 view .LVU569
 504:Src/aspep.c   ****       {
 1678              		.loc 1 504 12 view .LVU570
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 1679              		.loc 1 511 9 view .LVU571
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
ARM GAS  /tmp/ccUaSLfZ.s 			page 57


 1680              		.loc 1 511 35 is_stmt 0 view .LVU572
 1681 00e8 0323     		movs	r3, #3
 1682 00ea 84F82430 		strb	r3, [r4, #36]
 512:Src/aspep.c   ****       }
 1683              		.loc 1 512 9 is_stmt 1 view .LVU573
 512:Src/aspep.c   ****       }
 1684              		.loc 1 512 29 is_stmt 0 view .LVU574
 1685 00ee A164     		str	r1, [r4, #72]
 515:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 1686              		.loc 1 515 7 is_stmt 1 view .LVU575
 1687              	.LBB198:
 1688              	.LBI198:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1689              		.loc 2 196 27 view .LVU576
 1690              	.LBB199:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1691              		.loc 2 198 3 view .LVU577
 1692              		.syntax unified
 1693              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1694 00f0 62B6     		cpsie i
 1695              	@ 0 "" 2
 1696              		.thumb
 1697              		.syntax unified
 1698              	.LBE199:
 1699              	.LBE198:
 516:Src/aspep.c   ****     }
 1700              		.loc 1 516 7 view .LVU578
 1701 00f2 0422     		movs	r2, #4
 1702 00f4 A36D     		ldr	r3, [r4, #88]
 1703 00f6 6069     		ldr	r0, [r4, #20]
 1704 00f8 9847     		blx	r3
 1705              	.LVL125:
 574:Src/aspep.c   ****     }
 1706              		.loc 1 574 7 view .LVU579
 579:Src/aspep.c   **** }
 1707              		.loc 1 579 3 view .LVU580
 579:Src/aspep.c   **** }
 1708              		.loc 1 579 3 is_stmt 0 view .LVU581
 1709 00fa BFE7     		b	.L90
 1710              	.LVL126:
 1711              	.L108:
 579:Src/aspep.c   **** }
 1712              		.loc 1 579 3 view .LVU582
 1713              	.LBE197:
 1714              	.LBE196:
 1715              	.LBE201:
 1716              	.LBE203:
 1717              	.LBE204:
 1718              	.LBE205:
 727:Src/aspep.c   ****             {
 1719              		.loc 1 727 13 is_stmt 1 view .LVU583
 1720              	.LBB206:
 1721              	.LBI206:
 355:Src/aspep.c   **** {
 1722              		.loc 1 355 6 view .LVU584
 1723              	.LBB207:
 357:Src/aspep.c   **** 
ARM GAS  /tmp/ccUaSLfZ.s 			page 58


 1724              		.loc 1 357 3 view .LVU585
 359:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 1725              		.loc 1 359 3 view .LVU586
 360:Src/aspep.c   ****   MasterCapabilities.version = (uint8_t)((packetHeader &0x70U)>> 4U);           /*Bits 4 to 6*/
 1726              		.loc 1 360 3 view .LVU587
 361:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;                     /*Bit 7 */
 1727              		.loc 1 361 3 view .LVU588
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1728              		.loc 1 362 3 view .LVU589
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1729              		.loc 1 362 31 is_stmt 0 view .LVU590
 1730 00fc 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1731              		.loc 1 363 56 view .LVU591
 1732 00fe 407F     		ldrb	r0, [r0, #29]	@ zero_extendqisi2
 1733              	.LVL127:
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1734              		.loc 1 368 38 view .LVU592
 1735 0100 94F86D10 		ldrb	r1, [r4, #109]	@ zero_extendqisi2
 1736              	.LVL128:
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1737              		.loc 1 367 36 view .LVU593
 1738 0104 94F86C50 		ldrb	r5, [r4, #108]	@ zero_extendqisi2
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1739              		.loc 1 369 39 view .LVU594
 1740 0108 94F86E60 		ldrb	r6, [r4, #110]	@ zero_extendqisi2
 370:Src/aspep.c   **** 
 1741              		.loc 1 370 39 view .LVU595
 1742 010c 94F86F70 		ldrb	r7, [r4, #111]	@ zero_extendqisi2
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1743              		.loc 1 363 56 view .LVU596
 1744 0110 00F03F00 		and	r0, r0, #63
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1745              		.loc 1 362 31 view .LVU597
 1746 0114 DB09     		lsrs	r3, r3, #7
 1747              	.LVL129:
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1748              		.loc 1 363 3 is_stmt 1 view .LVU598
 364:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 1749              		.loc 1 364 3 view .LVU599
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1750              		.loc 1 368 38 is_stmt 0 view .LVU600
 1751 0116 8142     		cmp	r1, r0
 364:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 1752              		.loc 1 364 36 view .LVU601
 1753 0118 C2F3863C 		ubfx	ip, r2, #14, #7
 1754              	.LVL130:
 365:Src/aspep.c   **** 
 1755              		.loc 1 365 3 is_stmt 1 view .LVU602
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1756              		.loc 1 368 38 is_stmt 0 view .LVU603
 1757 011c 28BF     		it	cs
 1758 011e 0146     		movcs	r1, r0
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1759              		.loc 1 367 36 view .LVU604
 1760 0120 AB42     		cmp	r3, r5
 1761 0122 9846     		mov	r8, r3
ARM GAS  /tmp/ccUaSLfZ.s 			page 59


 365:Src/aspep.c   **** 
 1762              		.loc 1 365 36 view .LVU605
 1763 0124 C2F3465E 		ubfx	lr, r2, #21, #7
 1764              	.LVL131:
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1765              		.loc 1 367 3 is_stmt 1 view .LVU606
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1766              		.loc 1 367 36 is_stmt 0 view .LVU607
 1767 0128 28BF     		it	cs
 1768 012a A846     		movcs	r8, r5
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1769              		.loc 1 369 39 view .LVU608
 1770 012c B445     		cmp	ip, r6
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1771              		.loc 1 367 34 view .LVU609
 1772 012e 84F86C80 		strb	r8, [r4, #108]
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1773              		.loc 1 368 3 is_stmt 1 view .LVU610
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1774              		.loc 1 369 3 view .LVU611
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1775              		.loc 1 369 39 is_stmt 0 view .LVU612
 1776 0132 E046     		mov	r8, ip
 1777 0134 28BF     		it	cs
 1778 0136 B046     		movcs	r8, r6
 370:Src/aspep.c   **** 
 1779              		.loc 1 370 39 view .LVU613
 1780 0138 BE45     		cmp	lr, r7
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1781              		.loc 1 369 37 view .LVU614
 1782 013a 84F86E80 		strb	r8, [r4, #110]
 370:Src/aspep.c   **** 
 1783              		.loc 1 370 3 is_stmt 1 view .LVU615
 370:Src/aspep.c   **** 
 1784              		.loc 1 370 39 is_stmt 0 view .LVU616
 1785 013e F046     		mov	r8, lr
 1786 0140 28BF     		it	cs
 1787 0142 B846     		movcs	r8, r7
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1788              		.loc 1 372 6 view .LVU617
 1789 0144 AB42     		cmp	r3, r5
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1790              		.loc 1 368 36 view .LVU618
 1791 0146 84F86D10 		strb	r1, [r4, #109]
 370:Src/aspep.c   **** 
 1792              		.loc 1 370 37 view .LVU619
 1793 014a 84F86F80 		strb	r8, [r4, #111]
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1794              		.loc 1 372 3 is_stmt 1 view .LVU620
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1795              		.loc 1 372 6 is_stmt 0 view .LVU621
 1796 014e 40F28980 		bls	.L109
 1797              	.LVL132:
 1798              	.L84:
 384:Src/aspep.c   ****   }
 1799              		.loc 1 384 5 is_stmt 1 view .LVU622
 391:Src/aspep.c   **** }
ARM GAS  /tmp/ccUaSLfZ.s 			page 60


 1800              		.loc 1 391 3 view .LVU623
 391:Src/aspep.c   **** }
 1801              		.loc 1 391 3 is_stmt 0 view .LVU624
 1802              	.LBE207:
 1803              	.LBE206:
 729:Src/aspep.c   ****             }
 1804              		.loc 1 729 15 is_stmt 1 view .LVU625
 729:Src/aspep.c   ****             }
 1805              		.loc 1 729 36 is_stmt 0 view .LVU626
 1806 0152 0023     		movs	r3, #0
 1807 0154 84F86430 		strb	r3, [r4, #100]
 1808              	.LVL133:
 1809              	.L101:
 764:Src/aspep.c   ****           }
 1810              		.loc 1 764 13 is_stmt 1 view .LVU627
 1811 0158 04F16C01 		add	r1, r4, #108
 1812 015c 2046     		mov	r0, r4
 1813 015e FFF7FEFF 		bl	ASPEP_sendBeacon
 1814              	.LVL134:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1815              		.loc 1 670 12 is_stmt 0 view .LVU628
 1816 0162 0025     		movs	r5, #0
 1817 0164 5FE7     		b	.L78
 1818              	.LVL135:
 1819              	.L106:
 756:Src/aspep.c   ****             {
 1820              		.loc 1 756 13 is_stmt 1 view .LVU629
 1821              	.LBB209:
 1822              	.LBI209:
 355:Src/aspep.c   **** {
 1823              		.loc 1 355 6 view .LVU630
 1824              	.LBB210:
 357:Src/aspep.c   **** 
 1825              		.loc 1 357 3 view .LVU631
 359:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 1826              		.loc 1 359 3 view .LVU632
 360:Src/aspep.c   ****   MasterCapabilities.version = (uint8_t)((packetHeader &0x70U)>> 4U);           /*Bits 4 to 6*/
 1827              		.loc 1 360 3 view .LVU633
 361:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;                     /*Bit 7 */
 1828              		.loc 1 361 3 view .LVU634
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1829              		.loc 1 362 3 view .LVU635
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1830              		.loc 1 362 31 is_stmt 0 view .LVU636
 1831 0166 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1832              		.loc 1 363 56 view .LVU637
 1833 0168 407F     		ldrb	r0, [r0, #29]	@ zero_extendqisi2
 1834              	.LVL136:
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1835              		.loc 1 368 38 view .LVU638
 1836 016a 94F86D10 		ldrb	r1, [r4, #109]	@ zero_extendqisi2
 1837              	.LVL137:
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1838              		.loc 1 367 36 view .LVU639
 1839 016e 94F86C60 		ldrb	r6, [r4, #108]	@ zero_extendqisi2
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
ARM GAS  /tmp/ccUaSLfZ.s 			page 61


 1840              		.loc 1 369 39 view .LVU640
 1841 0172 94F86EC0 		ldrb	ip, [r4, #110]	@ zero_extendqisi2
 370:Src/aspep.c   **** 
 1842              		.loc 1 370 39 view .LVU641
 1843 0176 94F86F70 		ldrb	r7, [r4, #111]	@ zero_extendqisi2
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1844              		.loc 1 363 56 view .LVU642
 1845 017a 00F03F00 		and	r0, r0, #63
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1846              		.loc 1 362 31 view .LVU643
 1847 017e DB09     		lsrs	r3, r3, #7
 1848              	.LVL138:
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1849              		.loc 1 363 3 is_stmt 1 view .LVU644
 364:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 1850              		.loc 1 364 3 view .LVU645
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1851              		.loc 1 368 38 is_stmt 0 view .LVU646
 1852 0180 8142     		cmp	r1, r0
 1853 0182 28BF     		it	cs
 1854 0184 0146     		movcs	r1, r0
 364:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 1855              		.loc 1 364 36 view .LVU647
 1856 0186 C2F3863E 		ubfx	lr, r2, #14, #7
 1857              	.LVL139:
 365:Src/aspep.c   **** 
 1858              		.loc 1 365 3 is_stmt 1 view .LVU648
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1859              		.loc 1 367 36 is_stmt 0 view .LVU649
 1860 018a B342     		cmp	r3, r6
 1861 018c 9946     		mov	r9, r3
 365:Src/aspep.c   **** 
 1862              		.loc 1 365 36 view .LVU650
 1863 018e C2F34658 		ubfx	r8, r2, #21, #7
 1864              	.LVL140:
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1865              		.loc 1 367 3 is_stmt 1 view .LVU651
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1866              		.loc 1 367 36 is_stmt 0 view .LVU652
 1867 0192 28BF     		it	cs
 1868 0194 B146     		movcs	r9, r6
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1869              		.loc 1 369 39 view .LVU653
 1870 0196 E645     		cmp	lr, ip
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1871              		.loc 1 367 34 view .LVU654
 1872 0198 84F86C90 		strb	r9, [r4, #108]
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1873              		.loc 1 368 3 is_stmt 1 view .LVU655
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1874              		.loc 1 369 3 view .LVU656
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1875              		.loc 1 369 39 is_stmt 0 view .LVU657
 1876 019c F146     		mov	r9, lr
 1877 019e 28BF     		it	cs
 1878 01a0 E146     		movcs	r9, ip
 370:Src/aspep.c   **** 
ARM GAS  /tmp/ccUaSLfZ.s 			page 62


 1879              		.loc 1 370 39 view .LVU658
 1880 01a2 B845     		cmp	r8, r7
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1881              		.loc 1 369 37 view .LVU659
 1882 01a4 84F86E90 		strb	r9, [r4, #110]
 370:Src/aspep.c   **** 
 1883              		.loc 1 370 3 is_stmt 1 view .LVU660
 370:Src/aspep.c   **** 
 1884              		.loc 1 370 39 is_stmt 0 view .LVU661
 1885 01a8 C146     		mov	r9, r8
 1886 01aa 28BF     		it	cs
 1887 01ac B946     		movcs	r9, r7
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1888              		.loc 1 372 6 view .LVU662
 1889 01ae B342     		cmp	r3, r6
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1890              		.loc 1 368 36 view .LVU663
 1891 01b0 84F86D10 		strb	r1, [r4, #109]
 370:Src/aspep.c   **** 
 1892              		.loc 1 370 37 view .LVU664
 1893 01b4 84F86F90 		strb	r9, [r4, #111]
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1894              		.loc 1 372 3 is_stmt 1 view .LVU665
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1895              		.loc 1 372 6 is_stmt 0 view .LVU666
 1896 01b8 65D9     		bls	.L110
 1897              	.LVL141:
 1898              	.L86:
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1899              		.loc 1 372 6 view .LVU667
 1900 01ba 84F86450 		strb	r5, [r4, #100]
 1901 01be CBE7     		b	.L101
 1902              	.LVL142:
 1903              	.L104:
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1904              		.loc 1 372 6 view .LVU668
 1905              	.LBE210:
 1906              	.LBE209:
 695:Src/aspep.c   ****             {
 1907              		.loc 1 695 13 is_stmt 1 view .LVU669
 1908              	.LBB213:
 1909              	.LBI213:
 355:Src/aspep.c   **** {
 1910              		.loc 1 355 6 view .LVU670
 1911              	.LBB214:
 357:Src/aspep.c   **** 
 1912              		.loc 1 357 3 view .LVU671
 359:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 1913              		.loc 1 359 3 view .LVU672
 360:Src/aspep.c   ****   MasterCapabilities.version = (uint8_t)((packetHeader &0x70U)>> 4U);           /*Bits 4 to 6*/
 1914              		.loc 1 360 3 view .LVU673
 361:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;                     /*Bit 7 */
 1915              		.loc 1 361 3 view .LVU674
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1916              		.loc 1 362 3 view .LVU675
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1917              		.loc 1 363 56 is_stmt 0 view .LVU676
ARM GAS  /tmp/ccUaSLfZ.s 			page 63


 1918 01c0 657F     		ldrb	r5, [r4, #29]	@ zero_extendqisi2
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1919              		.loc 1 362 31 view .LVU677
 1920 01c2 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 1921              	.LVL143:
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1922              		.loc 1 368 38 view .LVU678
 1923 01c4 94F86D30 		ldrb	r3, [r4, #109]	@ zero_extendqisi2
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1924              		.loc 1 367 36 view .LVU679
 1925 01c8 94F86CC0 		ldrb	ip, [r4, #108]	@ zero_extendqisi2
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1926              		.loc 1 369 39 view .LVU680
 1927 01cc 94F86EE0 		ldrb	lr, [r4, #110]	@ zero_extendqisi2
 370:Src/aspep.c   **** 
 1928              		.loc 1 370 39 view .LVU681
 1929 01d0 94F86F80 		ldrb	r8, [r4, #111]	@ zero_extendqisi2
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1930              		.loc 1 363 56 view .LVU682
 1931 01d4 05F03F05 		and	r5, r5, #63
 362:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
 1932              		.loc 1 362 31 view .LVU683
 1933 01d8 C009     		lsrs	r0, r0, #7
 1934              	.LVL144:
 363:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 1935              		.loc 1 363 3 is_stmt 1 view .LVU684
 364:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 1936              		.loc 1 364 3 view .LVU685
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1937              		.loc 1 368 38 is_stmt 0 view .LVU686
 1938 01da AB42     		cmp	r3, r5
 364:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
 1939              		.loc 1 364 36 view .LVU687
 1940 01dc C2F38637 		ubfx	r7, r2, #14, #7
 1941              	.LVL145:
 365:Src/aspep.c   **** 
 1942              		.loc 1 365 3 is_stmt 1 view .LVU688
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1943              		.loc 1 368 38 is_stmt 0 view .LVU689
 1944 01e0 28BF     		it	cs
 1945 01e2 2B46     		movcs	r3, r5
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1946              		.loc 1 367 36 view .LVU690
 1947 01e4 6045     		cmp	r0, ip
 1948 01e6 0146     		mov	r1, r0
 1949              	.LVL146:
 365:Src/aspep.c   **** 
 1950              		.loc 1 365 36 view .LVU691
 1951 01e8 C2F34659 		ubfx	r9, r2, #21, #7
 1952              	.LVL147:
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1953              		.loc 1 367 3 is_stmt 1 view .LVU692
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1954              		.loc 1 367 36 is_stmt 0 view .LVU693
 1955 01ec 28BF     		it	cs
 1956 01ee 6146     		movcs	r1, ip
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
ARM GAS  /tmp/ccUaSLfZ.s 			page 64


 1957              		.loc 1 369 39 view .LVU694
 1958 01f0 7745     		cmp	r7, lr
 367:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 1959              		.loc 1 367 34 view .LVU695
 1960 01f2 84F86C10 		strb	r1, [r4, #108]
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1961              		.loc 1 368 3 is_stmt 1 view .LVU696
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1962              		.loc 1 369 3 view .LVU697
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1963              		.loc 1 369 39 is_stmt 0 view .LVU698
 1964 01f6 3946     		mov	r1, r7
 1965 01f8 28BF     		it	cs
 1966 01fa 7146     		movcs	r1, lr
 370:Src/aspep.c   **** 
 1967              		.loc 1 370 39 view .LVU699
 1968 01fc C145     		cmp	r9, r8
 1969 01fe 4E46     		mov	r6, r9
 1970 0200 28BF     		it	cs
 1971 0202 4646     		movcs	r6, r8
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1972              		.loc 1 372 6 view .LVU700
 1973 0204 6045     		cmp	r0, ip
 368:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 1974              		.loc 1 368 36 view .LVU701
 1975 0206 84F86D30 		strb	r3, [r4, #109]
 369:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 1976              		.loc 1 369 37 view .LVU702
 1977 020a 84F86E10 		strb	r1, [r4, #110]
 370:Src/aspep.c   **** 
 1978              		.loc 1 370 3 is_stmt 1 view .LVU703
 370:Src/aspep.c   **** 
 1979              		.loc 1 370 37 is_stmt 0 view .LVU704
 1980 020e 84F86F60 		strb	r6, [r4, #111]
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1981              		.loc 1 372 3 is_stmt 1 view .LVU705
 372:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 1982              		.loc 1 372 6 is_stmt 0 view .LVU706
 1983 0212 A1D8     		bhi	.L101
 374:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the controller to be able to store it, a
 1984              		.loc 1 374 4 view .LVU707
 1985 0214 9D42     		cmp	r5, r3
 1986 0216 9FD8     		bhi	.L101
 377:Src/aspep.c   ****    /* Async packet the performer can send is bigger than the controller can receive (but controller
 1987              		.loc 1 377 4 view .LVU708
 1988 0218 7745     		cmp	r7, lr
 1989 021a 9DD8     		bhi	.L101
 380:Src/aspep.c   ****    /* For the time being, controller version has to match performer version */
 1990              		.loc 1 380 4 view .LVU709
 1991 021c C145     		cmp	r9, r8
 1992 021e 9BD8     		bhi	.L101
 382:Src/aspep.c   ****   {
 1993              		.loc 1 382 4 view .LVU710
 1994 0220 94F87000 		ldrb	r0, [r4, #112]	@ zero_extendqisi2
 1995              	.LVL148:
 382:Src/aspep.c   ****   {
 1996              		.loc 1 382 4 view .LVU711
ARM GAS  /tmp/ccUaSLfZ.s 			page 65


 1997 0224 C2F30212 		ubfx	r2, r2, #4, #3
 1998              	.LVL149:
 382:Src/aspep.c   ****   {
 1999              		.loc 1 382 4 view .LVU712
 2000 0228 9042     		cmp	r0, r2
 2001 022a 95D1     		bne	.L101
 391:Src/aspep.c   **** }
 2002              		.loc 1 391 3 is_stmt 1 view .LVU713
 2003              	.LVL150:
 391:Src/aspep.c   **** }
 2004              		.loc 1 391 3 is_stmt 0 view .LVU714
 2005              	.LBE214:
 2006              	.LBE213:
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 2007              		.loc 1 698 15 is_stmt 1 view .LVU715
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 2008              		.loc 1 698 44 is_stmt 0 view .LVU716
 2009 022c 4A1C     		adds	r2, r1, #1
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 2010              		.loc 1 700 37 view .LVU717
 2011 022e 0133     		adds	r3, r3, #1
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 2012              		.loc 1 698 44 view .LVU718
 2013 0230 D2B2     		uxtb	r2, r2
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 2014              		.loc 1 700 37 view .LVU719
 2015 0232 DBB2     		uxtb	r3, r3
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 2016              		.loc 1 698 44 view .LVU720
 2017 0234 5201     		lsls	r2, r2, #5
 699:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 2018              		.loc 1 699 45 view .LVU721
 2019 0236 B601     		lsls	r6, r6, #6
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 2020              		.loc 1 700 37 view .LVU722
 2021 0238 5B01     		lsls	r3, r3, #5
 701:Src/aspep.c   ****             }
 2022              		.loc 1 701 36 view .LVU723
 2023 023a 0121     		movs	r1, #1
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 2024              		.loc 1 698 44 view .LVU724
 2025 023c A281     		strh	r2, [r4, #12]	@ movhi
 699:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 2026              		.loc 1 699 15 is_stmt 1 view .LVU725
 699:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 2027              		.loc 1 699 45 is_stmt 0 view .LVU726
 2028 023e E681     		strh	r6, [r4, #14]	@ movhi
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 2029              		.loc 1 700 15 is_stmt 1 view .LVU727
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 2030              		.loc 1 700 37 is_stmt 0 view .LVU728
 2031 0240 A4F85E30 		strh	r3, [r4, #94]	@ movhi
 701:Src/aspep.c   ****             }
 2032              		.loc 1 701 15 is_stmt 1 view .LVU729
 701:Src/aspep.c   ****             }
 2033              		.loc 1 701 36 is_stmt 0 view .LVU730
 2034 0244 84F86410 		strb	r1, [r4, #100]
ARM GAS  /tmp/ccUaSLfZ.s 			page 66


 2035 0248 86E7     		b	.L101
 2036              	.LVL151:
 2037              	.L105:
 713:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_RESET, packetNumber);
 2038              		.loc 1 713 13 is_stmt 1 view .LVU731
 714:Src/aspep.c   ****           }
 2039              		.loc 1 714 13 view .LVU732
 2040 024a C2F30F32 		ubfx	r2, r2, #12, #16
 2041              	.LVL152:
 714:Src/aspep.c   ****           }
 2042              		.loc 1 714 13 is_stmt 0 view .LVU733
 2043 024e 3146     		mov	r1, r6
 2044              	.LVL153:
 714:Src/aspep.c   ****           }
 2045              		.loc 1 714 13 view .LVU734
 2046 0250 FFF7FEFF 		bl	ASPEP_sendPing
 2047              	.LVL154:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 2048              		.loc 1 670 12 view .LVU735
 2049 0254 3546     		mov	r5, r6
 2050 0256 E6E6     		b	.L78
 2051              	.LVL155:
 2052              	.L107:
 768:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 2053              		.loc 1 768 13 is_stmt 1 view .LVU736
 769:Src/aspep.c   ****           }
 2054              		.loc 1 769 13 view .LVU737
 2055 0258 C2F30F32 		ubfx	r2, r2, #12, #16
 2056              	.LVL156:
 769:Src/aspep.c   ****           }
 2057              		.loc 1 769 13 is_stmt 0 view .LVU738
 2058 025c 0121     		movs	r1, #1
 2059              	.LVL157:
 769:Src/aspep.c   ****           }
 2060              		.loc 1 769 13 view .LVU739
 2061 025e FFF7FEFF 		bl	ASPEP_sendPing
 2062              	.LVL158:
 769:Src/aspep.c   ****           }
 2063              		.loc 1 769 13 view .LVU740
 2064 0262 E0E6     		b	.L78
 2065              	.LVL159:
 2066              	.L109:
 2067              	.LBB215:
 2068              	.LBB208:
 374:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the controller to be able to store it, a
 2069              		.loc 1 374 4 view .LVU741
 2070 0264 8842     		cmp	r0, r1
 2071 0266 3FF674AF 		bhi	.L84
 377:Src/aspep.c   ****    /* Async packet the performer can send is bigger than the controller can receive (but controller
 2072              		.loc 1 377 4 view .LVU742
 2073 026a B445     		cmp	ip, r6
 2074 026c 3FF671AF 		bhi	.L84
 380:Src/aspep.c   ****    /* For the time being, controller version has to match performer version */
 2075              		.loc 1 380 4 view .LVU743
 2076 0270 BE45     		cmp	lr, r7
 2077 0272 3FF66EAF 		bhi	.L84
 382:Src/aspep.c   ****   {
ARM GAS  /tmp/ccUaSLfZ.s 			page 67


 2078              		.loc 1 382 4 view .LVU744
 2079 0276 94F87030 		ldrb	r3, [r4, #112]	@ zero_extendqisi2
 2080              	.LVL160:
 382:Src/aspep.c   ****   {
 2081              		.loc 1 382 4 view .LVU745
 2082 027a C2F30212 		ubfx	r2, r2, #4, #3
 2083              	.LVL161:
 382:Src/aspep.c   ****   {
 2084              		.loc 1 382 4 view .LVU746
 2085 027e 9342     		cmp	r3, r2
 2086 0280 7FF467AF 		bne	.L84
 2087 0284 68E7     		b	.L101
 2088              	.LVL162:
 2089              	.L110:
 382:Src/aspep.c   ****   {
 2090              		.loc 1 382 4 view .LVU747
 2091              	.LBE208:
 2092              	.LBE215:
 2093              	.LBB216:
 2094              	.LBB211:
 374:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the controller to be able to store it, a
 2095              		.loc 1 374 4 view .LVU748
 2096 0286 8842     		cmp	r0, r1
 2097 0288 97D8     		bhi	.L86
 377:Src/aspep.c   ****    /* Async packet the performer can send is bigger than the controller can receive (but controller
 2098              		.loc 1 377 4 view .LVU749
 2099 028a E645     		cmp	lr, ip
 2100 028c 95D8     		bhi	.L86
 380:Src/aspep.c   ****    /* For the time being, controller version has to match performer version */
 2101              		.loc 1 380 4 view .LVU750
 2102 028e B845     		cmp	r8, r7
 2103 0290 93D8     		bhi	.L86
 382:Src/aspep.c   ****   {
 2104              		.loc 1 382 4 view .LVU751
 2105 0292 94F87050 		ldrb	r5, [r4, #112]	@ zero_extendqisi2
 2106 0296 C2F30212 		ubfx	r2, r2, #4, #3
 2107              	.LVL163:
 382:Src/aspep.c   ****   {
 2108              		.loc 1 382 4 view .LVU752
 2109              	.LBE211:
 2110              	.LBE216:
 758:Src/aspep.c   ****             }
 2111              		.loc 1 758 36 view .LVU753
 2112 029a AB1A     		subs	r3, r5, r2
 2113              	.LVL164:
 758:Src/aspep.c   ****             }
 2114              		.loc 1 758 36 view .LVU754
 2115 029c 5D42     		rsbs	r5, r3, #0
 2116 029e 5D41     		adcs	r5, r5, r3
 2117              	.LBB217:
 2118              	.LBB212:
 2119 02a0 8BE7     		b	.L86
 2120              	.L112:
 2121 02a2 00BF     		.align	2
 2122              	.L111:
 2123 02a4 00000000 		.word	.LANCHOR0
 2124 02a8 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccUaSLfZ.s 			page 68


 2125              	.LBE212:
 2126              	.LBE217:
 2127              		.cfi_endproc
 2128              	.LFE1448:
 2130              		.section	.text.ASPEP_HWDataReceivedIT,"ax",%progbits
 2131              		.align	1
 2132              		.p2align 2,,3
 2133              		.global	ASPEP_HWDataReceivedIT
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv4-sp-d16
 2139              	ASPEP_HWDataReceivedIT:
 2140              	.LVL165:
 2141              	.LFB1449:
 825:Src/aspep.c   **** 
 826:Src/aspep.c   **** /**
 827:Src/aspep.c   ****   * @brief  Processes the received data packet.
 828:Src/aspep.c   ****   *
 829:Src/aspep.c   ****   * This function is called once DMA has transfered the configure number of byte.
 830:Src/aspep.c   ****   * Upon reception of a new packet the DMA will be re-configured only once the answer has been sent
 831:Src/aspep.c   ****   * This is mandatory to avoid a race condition in case of a new packet is received while executing
 832:Src/aspep.c   ****   * If the packet received contains an error in the header, the HW IP will be re-synchronised first
 833:Src/aspep.c   ****   *
 834:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 835:Src/aspep.c   ****   */
 836:Src/aspep.c   **** void ASPEP_HWDataReceivedIT(ASPEP_Handle_t *pHandle)
 837:Src/aspep.c   **** {
 2142              		.loc 1 837 1 is_stmt 1 view -0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 0
 2145              		@ frame_needed = 0, uses_anonymous_args = 0
 838:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 839:Src/aspep.c   ****   if (MC_NULL == pHandle)
 840:Src/aspep.c   ****   {
 841:Src/aspep.c   ****     /* Nothing to do */
 842:Src/aspep.c   ****   }
 843:Src/aspep.c   ****   else
 844:Src/aspep.c   ****   {
 845:Src/aspep.c   **** #endif
 846:Src/aspep.c   ****     switch (pHandle->ASPEP_TL_State)
 2146              		.loc 1 846 5 view .LVU756
 837:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 2147              		.loc 1 837 1 is_stmt 0 view .LVU757
 2148 0000 10B5     		push	{r4, lr}
 2149              	.LCFI19:
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 4, -8
 2152              		.cfi_offset 14, -4
 2153              		.loc 1 846 20 view .LVU758
 2154 0002 90F86530 		ldrb	r3, [r0, #101]	@ zero_extendqisi2
 837:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 2155              		.loc 1 837 1 view .LVU759
 2156 0006 0446     		mov	r4, r0
 2157              		.loc 1 846 5 view .LVU760
 2158 0008 3BB1     		cbz	r3, .L114
 2159 000a 012B     		cmp	r3, #1
ARM GAS  /tmp/ccUaSLfZ.s 			page 69


 2160 000c 04D1     		bne	.L113
 847:Src/aspep.c   ****     {
 848:Src/aspep.c   ****       case WAITING_PACKET:
 849:Src/aspep.c   ****       {
 850:Src/aspep.c   ****         if (ASPEP_CheckHeaderCRC(*(uint32_t *)pHandle->rxHeader) == true) //cstat !MISRAC2012-Rule-
 851:Src/aspep.c   ****         {
 852:Src/aspep.c   ****           pHandle->rxPacketType = (ASPEP_packetType)(((uint32_t)pHandle->rxHeader[0]) & ID_MASK);
 853:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 854:Src/aspep.c   ****           {
 855:Src/aspep.c   ****             case DATA_PACKET:
 856:Src/aspep.c   ****             {
 857:Src/aspep.c   ****               //cstat !MISRAC2012-Rule-11.3
 858:Src/aspep.c   ****               pHandle->rxLengthASPEP = (uint16_t)((*((uint16_t *)pHandle->rxHeader) & 0x1FFF0U) >> 
 859:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 860:Src/aspep.c   ****               {
 861:Src/aspep.c   ****                 pHandle->NewPacketAvailable = true;
 862:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 863:Src/aspep.c   ****                   *  processed in ASPEP_RXframeProcess */
 864:Src/aspep.c   ****               }
 865:Src/aspep.c   ****               else if (pHandle->rxLengthASPEP <= pHandle->maxRXPayload)
 866:Src/aspep.c   ****               {
 867:Src/aspep.c   ****                 pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxBuffer,  /* need to read + 
 868:Src/aspep.c   ****                                         (pHandle->rxLengthASPEP + ((uint16_t)ASPEP_DATACRC_SIZE * (
 869:Src/aspep.c   ****                 pHandle->ASPEP_TL_State = WAITING_PAYLOAD;
 870:Src/aspep.c   ****               }
 871:Src/aspep.c   ****               else
 872:Src/aspep.c   ****               {
 873:Src/aspep.c   ****                 pHandle->badPacketFlag = ASPEP_BAD_PACKET_SIZE;
 874:Src/aspep.c   ****               }
 875:Src/aspep.c   ****               break;
 876:Src/aspep.c   ****             }
 877:Src/aspep.c   **** 
 878:Src/aspep.c   ****             case BEACON:
 879:Src/aspep.c   ****             case PING:
 880:Src/aspep.c   ****             {
 881:Src/aspep.c   ****               pHandle->NewPacketAvailable = true;
 882:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 883:Src/aspep.c   ****                 * processed in ASPEP_RXframeProcess */
 884:Src/aspep.c   ****               break;
 885:Src/aspep.c   ****             }
 886:Src/aspep.c   **** 
 887:Src/aspep.c   ****             default:
 888:Src/aspep.c   ****             {
 889:Src/aspep.c   ****               pHandle->badPacketFlag = ASPEP_BAD_PACKET_TYPE;
 890:Src/aspep.c   ****               break;
 891:Src/aspep.c   ****             }
 892:Src/aspep.c   ****           }
 893:Src/aspep.c   ****         }
 894:Src/aspep.c   ****         else
 895:Src/aspep.c   ****         {
 896:Src/aspep.c   ****           pHandle->badPacketFlag = ASPEP_BAD_CRC_HEADER;
 897:Src/aspep.c   ****         }
 898:Src/aspep.c   ****         break;
 899:Src/aspep.c   ****       }
 900:Src/aspep.c   **** 
 901:Src/aspep.c   ****       case WAITING_PAYLOAD:
 902:Src/aspep.c   ****       {
ARM GAS  /tmp/ccUaSLfZ.s 			page 70


 903:Src/aspep.c   ****         pHandle->ASPEP_TL_State = WAITING_PACKET;
 2161              		.loc 1 903 9 is_stmt 1 view .LVU761
 2162              		.loc 1 903 33 is_stmt 0 view .LVU762
 2163 000e 0022     		movs	r2, #0
 2164 0010 80F86520 		strb	r2, [r0, #101]
 904:Src/aspep.c   ****         /* Payload received, */
 905:Src/aspep.c   ****         pHandle->NewPacketAvailable = true;
 2165              		.loc 1 905 9 is_stmt 1 view .LVU763
 2166              		.loc 1 905 37 is_stmt 0 view .LVU764
 2167 0014 80F86130 		strb	r3, [r0, #97]
 906:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 907:Src/aspep.c   ****           * processed in ASPEP_RXframeProcess */
 908:Src/aspep.c   ****         break;
 2168              		.loc 1 908 9 is_stmt 1 view .LVU765
 2169              	.L113:
 909:Src/aspep.c   ****       }
 910:Src/aspep.c   **** 
 911:Src/aspep.c   ****       default:
 912:Src/aspep.c   ****         break;
 913:Src/aspep.c   ****     }
 914:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 915:Src/aspep.c   ****   }
 916:Src/aspep.c   **** #endif
 917:Src/aspep.c   **** }
 2170              		.loc 1 917 1 is_stmt 0 view .LVU766
 2171 0018 10BD     		pop	{r4, pc}
 2172              	.L114:
 850:Src/aspep.c   ****         {
 2173              		.loc 1 850 9 is_stmt 1 view .LVU767
 850:Src/aspep.c   ****         {
 2174              		.loc 1 850 13 is_stmt 0 view .LVU768
 2175 001a C169     		ldr	r1, [r0, #28]
 2176              	.LVL166:
 2177              	.LBB218:
 2178              	.LBI218:
 152:Src/aspep.c   **** {
 2179              		.loc 1 152 13 is_stmt 1 view .LVU769
 2180              	.LBB219:
 154:Src/aspep.c   **** 
 2181              		.loc 1 154 3 view .LVU770
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 2182              		.loc 1 157 3 view .LVU771
 158:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 2183              		.loc 1 158 3 view .LVU772
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 2184              		.loc 1 157 7 is_stmt 0 view .LVU773
 2185 001c 1E4A     		ldr	r2, .L124
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 2186              		.loc 1 157 26 view .LVU774
 2187 001e CBB2     		uxtb	r3, r1
 158:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 2188              		.loc 1 158 26 view .LVU775
 2189 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2190 0022 83EA1123 		eor	r3, r3, r1, lsr #8
 2191 0026 DBB2     		uxtb	r3, r3
 2192              	.LVL167:
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
ARM GAS  /tmp/ccUaSLfZ.s 			page 71


 2193              		.loc 1 159 3 is_stmt 1 view .LVU776
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 2194              		.loc 1 159 26 is_stmt 0 view .LVU777
 2195 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2196              	.LVL168:
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 2197              		.loc 1 159 26 view .LVU778
 2198 002a 83EA1143 		eor	r3, r3, r1, lsr #16
 2199 002e DBB2     		uxtb	r3, r3
 2200              	.LVL169:
 160:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 2201              		.loc 1 160 3 is_stmt 1 view .LVU779
 160:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 2202              		.loc 1 160 26 is_stmt 0 view .LVU780
 2203 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2204              	.LVL170:
 160:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 2205              		.loc 1 160 26 view .LVU781
 2206 0032 83EA1161 		eor	r1, r3, r1, lsr #24
 2207              	.LVL171:
 172:Src/aspep.c   **** }
 2208              		.loc 1 172 3 is_stmt 1 view .LVU782
 172:Src/aspep.c   **** }
 2209              		.loc 1 172 3 is_stmt 0 view .LVU783
 2210              	.LBE219:
 2211              	.LBE218:
 850:Src/aspep.c   ****         {
 2212              		.loc 1 850 12 view .LVU784
 2213 0036 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 2214 0038 5BB9     		cbnz	r3, .L117
 852:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 2215              		.loc 1 852 11 is_stmt 1 view .LVU785
 2216 003a 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2217 003c 03F00F03 		and	r3, r3, #15
 2218 0040 062B     		cmp	r3, #6
 852:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 2219              		.loc 1 852 35 is_stmt 0 view .LVU786
 2220 0042 8366     		str	r3, [r0, #104]
 853:Src/aspep.c   ****           {
 2221              		.loc 1 853 11 is_stmt 1 view .LVU787
 2222 0044 09D8     		bhi	.L118
 2223 0046 042B     		cmp	r3, #4
 2224 0048 1ED8     		bhi	.L119
 2225              	.L120:
 889:Src/aspep.c   ****               break;
 2226              		.loc 1 889 15 view .LVU788
 889:Src/aspep.c   ****               break;
 2227              		.loc 1 889 38 is_stmt 0 view .LVU789
 2228 004a 0123     		movs	r3, #1
 2229 004c 84F86230 		strb	r3, [r4, #98]
 890:Src/aspep.c   ****             }
 2230              		.loc 1 890 15 is_stmt 1 view .LVU790
 2231              		.loc 1 917 1 is_stmt 0 view .LVU791
 2232 0050 10BD     		pop	{r4, pc}
 2233              	.L117:
 896:Src/aspep.c   ****         }
 2234              		.loc 1 896 11 is_stmt 1 view .LVU792
ARM GAS  /tmp/ccUaSLfZ.s 			page 72


 896:Src/aspep.c   ****         }
 2235              		.loc 1 896 34 is_stmt 0 view .LVU793
 2236 0052 0423     		movs	r3, #4
 2237 0054 80F86230 		strb	r3, [r0, #98]
 2238              		.loc 1 917 1 view .LVU794
 2239 0058 10BD     		pop	{r4, pc}
 2240              	.L118:
 2241              		.loc 1 917 1 view .LVU795
 2242 005a 092B     		cmp	r3, #9
 2243 005c F5D1     		bne	.L120
 858:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 2244              		.loc 1 858 15 is_stmt 1 view .LVU796
 858:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 2245              		.loc 1 858 97 is_stmt 0 view .LVU797
 2246 005e 838B     		ldrh	r3, [r0, #28]
 2247 0060 1B09     		lsrs	r3, r3, #4
 858:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 2248              		.loc 1 858 38 view .LVU798
 2249 0062 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 859:Src/aspep.c   ****               {
 2250              		.loc 1 859 15 is_stmt 1 view .LVU799
 859:Src/aspep.c   ****               {
 2251              		.loc 1 859 18 is_stmt 0 view .LVU800
 2252 0066 7BB1     		cbz	r3, .L119
 865:Src/aspep.c   ****               {
 2253              		.loc 1 865 20 is_stmt 1 view .LVU801
 865:Src/aspep.c   ****               {
 2254              		.loc 1 865 23 is_stmt 0 view .LVU802
 2255 0068 B0F85E20 		ldrh	r2, [r0, #94]
 2256 006c 9A42     		cmp	r2, r3
 2257 006e 0FD3     		bcc	.L122
 867:Src/aspep.c   ****                                         (pHandle->rxLengthASPEP + ((uint16_t)ASPEP_DATACRC_SIZE * (
 2258              		.loc 1 867 17 is_stmt 1 view .LVU803
 2259 0070 90F86C20 		ldrb	r2, [r0, #108]	@ zero_extendqisi2
 2260 0074 8169     		ldr	r1, [r0, #24]
 2261 0076 4069     		ldr	r0, [r0, #20]
 2262              	.LVL172:
 867:Src/aspep.c   ****                                         (pHandle->rxLengthASPEP + ((uint16_t)ASPEP_DATACRC_SIZE * (
 2263              		.loc 1 867 17 is_stmt 0 view .LVU804
 2264 0078 03EB4202 		add	r2, r3, r2, lsl #1
 2265 007c 636D     		ldr	r3, [r4, #84]
 2266 007e 9847     		blx	r3
 2267              	.LVL173:
 869:Src/aspep.c   ****               }
 2268              		.loc 1 869 17 is_stmt 1 view .LVU805
 869:Src/aspep.c   ****               }
 2269              		.loc 1 869 41 is_stmt 0 view .LVU806
 2270 0080 0123     		movs	r3, #1
 2271 0082 84F86530 		strb	r3, [r4, #101]
 2272              		.loc 1 917 1 view .LVU807
 2273 0086 10BD     		pop	{r4, pc}
 2274              	.LVL174:
 2275              	.L119:
 881:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 2276              		.loc 1 881 15 is_stmt 1 view .LVU808
 881:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 2277              		.loc 1 881 43 is_stmt 0 view .LVU809
ARM GAS  /tmp/ccUaSLfZ.s 			page 73


 2278 0088 0123     		movs	r3, #1
 2279 008a 84F86130 		strb	r3, [r4, #97]
 884:Src/aspep.c   ****             }
 2280              		.loc 1 884 15 is_stmt 1 view .LVU810
 2281              		.loc 1 917 1 is_stmt 0 view .LVU811
 2282 008e 10BD     		pop	{r4, pc}
 2283              	.L122:
 873:Src/aspep.c   ****               }
 2284              		.loc 1 873 17 is_stmt 1 view .LVU812
 873:Src/aspep.c   ****               }
 2285              		.loc 1 873 40 is_stmt 0 view .LVU813
 2286 0090 0223     		movs	r3, #2
 2287 0092 80F86230 		strb	r3, [r0, #98]
 2288              		.loc 1 917 1 view .LVU814
 2289 0096 10BD     		pop	{r4, pc}
 2290              	.L125:
 2291              		.align	2
 2292              	.L124:
 2293 0098 00000000 		.word	.LANCHOR0
 2294              		.cfi_endproc
 2295              	.LFE1449:
 2297              		.section	.text.ASPEP_HWReset,"ax",%progbits
 2298              		.align	1
 2299              		.p2align 2,,3
 2300              		.global	ASPEP_HWReset
 2301              		.syntax unified
 2302              		.thumb
 2303              		.thumb_func
 2304              		.fpu fpv4-sp-d16
 2306              	ASPEP_HWReset:
 2307              	.LVL175:
 2308              	.LFB1450:
 918:Src/aspep.c   **** 
 919:Src/aspep.c   **** /**
 920:Src/aspep.c   ****   * @brief  Resets DMA after debugger has stopped the MCU.
 921:Src/aspep.c   ****   *
 922:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 923:Src/aspep.c   ****   */
 924:Src/aspep.c   **** void ASPEP_HWReset(ASPEP_Handle_t *pHandle)
 925:Src/aspep.c   **** {
 2309              		.loc 1 925 1 is_stmt 1 view -0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 0
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313              		@ link register save eliminated.
 926:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 927:Src/aspep.c   ****   if (NULL == pHandle)
 928:Src/aspep.c   ****   {
 929:Src/aspep.c   ****     /* Nothing to do */
 930:Src/aspep.c   ****   }
 931:Src/aspep.c   ****   else
 932:Src/aspep.c   ****   {
 933:Src/aspep.c   **** #endif
 934:Src/aspep.c   ****     /* We must reset the RX state machine to be sure to not be in Waiting packet state */
 935:Src/aspep.c   ****     /* Otherwise the arrival of a new packet will trigger a NewPacketAvailable despite */
 936:Src/aspep.c   ****     /* the fact that bytes have been lost because of overrun (debugger paused for instance) */
 937:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
ARM GAS  /tmp/ccUaSLfZ.s 			page 74


 2314              		.loc 1 937 5 view .LVU816
 925:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 2315              		.loc 1 925 1 is_stmt 0 view .LVU817
 2316 0000 0146     		mov	r1, r0
 2317              		.loc 1 937 29 view .LVU818
 2318 0002 0022     		movs	r2, #0
 2319 0004 80F86520 		strb	r2, [r0, #101]
 938:Src/aspep.c   ****     pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 2320              		.loc 1 938 5 is_stmt 1 view .LVU819
 2321 0008 436D     		ldr	r3, [r0, #84]
 2322 000a 4069     		ldr	r0, [r0, #20]
 2323              	.LVL176:
 2324              		.loc 1 938 5 is_stmt 0 view .LVU820
 2325 000c 0422     		movs	r2, #4
 2326 000e 1C31     		adds	r1, r1, #28
 2327              	.LVL177:
 2328              		.loc 1 938 5 view .LVU821
 2329 0010 1847     		bx	r3	@ indirect register sibling call
 2330              	.LVL178:
 2331              		.loc 1 938 5 view .LVU822
 2332              		.cfi_endproc
 2333              	.LFE1450:
 2335 0012 00BF     		.section	.rodata.CRC4_Lookup4,"a"
 2336              		.align	2
 2337              		.set	.LANCHOR1,. + 0
 2340              	CRC4_Lookup4:
 2341 0000 00070E09 		.ascii	"\000\007\016\011\013\014\005\002\001\006\017\010\012"
 2341      0B0C0502 
 2341      01060F08 
 2341      0A
 2342 000d 0D0403   		.ascii	"\015\004\003"
 2343              		.section	.rodata.CRC4_Lookup8,"a"
 2344              		.align	2
 2345              		.set	.LANCHOR0,. + 0
 2348              	CRC4_Lookup8:
 2349 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\007\005\003\001\017"
 2349      080A0C0E 
 2349      07050301 
 2349      0F
 2350 000d 0D0B0907 		.ascii	"\015\013\011\007\005\003\001\017\015\013\011\000\002"
 2350      0503010F 
 2350      0D0B0900 
 2350      02
 2351 001a 0406080A 		.ascii	"\004\006\010\012\014\016\016\014\012\010\006\004\002"
 2351      0C0E0E0C 
 2351      0A080604 
 2351      02
 2352 0027 00090B0D 		.ascii	"\000\011\013\015\017\001\003\005\007\011\013\015\017"
 2352      0F010305 
 2352      07090B0D 
 2352      0F
 2353 0034 01030507 		.ascii	"\001\003\005\007\016\014\012\010\006\004\002\000\013"
 2353      0E0C0A08 
 2353      06040200 
 2353      0B
 2354 0041 090F0D03 		.ascii	"\011\017\015\003\001\007\005\014\016\010\012\004\006"
 2354      0107050C 
ARM GAS  /tmp/ccUaSLfZ.s 			page 75


 2354      0E080A04 
 2354      06
 2355 004e 00020C0E 		.ascii	"\000\002\014\016\010\012\004\006\000\002\013\011\017"
 2355      080A0406 
 2355      00020B09 
 2355      0F
 2356 005b 0D030107 		.ascii	"\015\003\001\007\005\005\007\001\003\015\017\011\013"
 2356      05050701 
 2356      030D0F09 
 2356      0B
 2357 0068 02000604 		.ascii	"\002\000\006\004\012\010\016\014\002\000\006\004\012"
 2357      0A080E0C 
 2357      02000604 
 2357      0A
 2358 0075 080E0C05 		.ascii	"\010\016\014\005\007\001\003\015\017\011\013\001\003"
 2358      0701030D 
 2358      0F090B01 
 2358      03
 2359 0082 0507090B 		.ascii	"\005\007\011\013\015\017\006\004\002\000\016\014\012"
 2359      0D0F0604 
 2359      02000E0C 
 2359      0A
 2360 008f 08060402 		.ascii	"\010\006\004\002\000\016\014\012\010\001\003\005\007"
 2360      000E0C0A 
 2360      08010305 
 2360      07
 2361 009c 090B0D0F 		.ascii	"\011\013\015\017\017\015\013\011\007\005\003\001\010"
 2361      0F0D0B09 
 2361      07050301 
 2361      08
 2362 00a9 0A0C0E00 		.ascii	"\012\014\016\000\002\004\006\010\012\014\016\000\002"
 2362      02040608 
 2362      0A0C0E00 
 2362      02
 2363 00b6 04060F0D 		.ascii	"\004\006\017\015\013\011\007\005\003\001\012\010\016"
 2363      0B090705 
 2363      03010A08 
 2363      0E
 2364 00c3 0C020006 		.ascii	"\014\002\000\006\004\015\017\011\013\005\007\001\003"
 2364      040D0F09 
 2364      0B050701 
 2364      03
 2365 00d0 0D0F090B 		.ascii	"\015\017\011\013\005\007\001\003\012\010\016\014\002"
 2365      05070103 
 2365      0A080E0C 
 2365      02
 2366 00dd 00060404 		.ascii	"\000\006\004\004\006\000\002\014\016\010\012\003\001"
 2366      0600020C 
 2366      0E080A03 
 2366      01
 2367 00ea 07050B09 		.ascii	"\007\005\013\011\017\015\003\001\007\005\013\011\017"
 2367      0F0D0301 
 2367      07050B09 
 2367      0F
 2368 00f7 0D040600 		.ascii	"\015\004\006\000\002\014\016\010\012"
 2368      020C0E08 
 2368      0A
ARM GAS  /tmp/ccUaSLfZ.s 			page 76


 2369              		.text
 2370              	.Letext0:
 2371              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 2372              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2373              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 2374              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 2375              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 2376              		.file 8 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 2377              		.file 9 "Inc/aspep.h"
ARM GAS  /tmp/ccUaSLfZ.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 aspep.c
     /tmp/ccUaSLfZ.s:18     .text.ASPEP_start:0000000000000000 $t
     /tmp/ccUaSLfZ.s:27     .text.ASPEP_start:0000000000000000 ASPEP_start
     /tmp/ccUaSLfZ.s:86     .text.ASPEP_sendBeacon:0000000000000000 $t
     /tmp/ccUaSLfZ.s:94     .text.ASPEP_sendBeacon:0000000000000000 ASPEP_sendBeacon
     /tmp/ccUaSLfZ.s:328    .text.ASPEP_sendBeacon:0000000000000084 $d
     /tmp/ccUaSLfZ.s:338    .text.ASPEP_sendPing:0000000000000000 $t
     /tmp/ccUaSLfZ.s:346    .text.ASPEP_sendPing:0000000000000000 ASPEP_sendPing
     /tmp/ccUaSLfZ.s:571    .text.ASPEP_sendPing:0000000000000088 $d
     /tmp/ccUaSLfZ.s:581    .text.ASPEP_getBuffer:0000000000000000 $t
     /tmp/ccUaSLfZ.s:589    .text.ASPEP_getBuffer:0000000000000000 ASPEP_getBuffer
     /tmp/ccUaSLfZ.s:743    .text.ASPEP_sendPacket:0000000000000000 $t
     /tmp/ccUaSLfZ.s:751    .text.ASPEP_sendPacket:0000000000000000 ASPEP_sendPacket
     /tmp/ccUaSLfZ.s:1147   .text.ASPEP_sendPacket:0000000000000110 $d
     /tmp/ccUaSLfZ.s:1155   .text.ASPEP_HWDataTransmittedIT:0000000000000000 $t
     /tmp/ccUaSLfZ.s:1163   .text.ASPEP_HWDataTransmittedIT:0000000000000000 ASPEP_HWDataTransmittedIT
     /tmp/ccUaSLfZ.s:1360   .text.ASPEP_RXframeProcess:0000000000000000 $t
     /tmp/ccUaSLfZ.s:1368   .text.ASPEP_RXframeProcess:0000000000000000 ASPEP_RXframeProcess
     /tmp/ccUaSLfZ.s:2123   .text.ASPEP_RXframeProcess:00000000000002a4 $d
     /tmp/ccUaSLfZ.s:2131   .text.ASPEP_HWDataReceivedIT:0000000000000000 $t
     /tmp/ccUaSLfZ.s:2139   .text.ASPEP_HWDataReceivedIT:0000000000000000 ASPEP_HWDataReceivedIT
     /tmp/ccUaSLfZ.s:2293   .text.ASPEP_HWDataReceivedIT:0000000000000098 $d
     /tmp/ccUaSLfZ.s:2298   .text.ASPEP_HWReset:0000000000000000 $t
     /tmp/ccUaSLfZ.s:2306   .text.ASPEP_HWReset:0000000000000000 ASPEP_HWReset
     /tmp/ccUaSLfZ.s:2336   .rodata.CRC4_Lookup4:0000000000000000 $d
     /tmp/ccUaSLfZ.s:2340   .rodata.CRC4_Lookup4:0000000000000000 CRC4_Lookup4
     /tmp/ccUaSLfZ.s:2344   .rodata.CRC4_Lookup8:0000000000000000 $d
     /tmp/ccUaSLfZ.s:2348   .rodata.CRC4_Lookup8:0000000000000000 CRC4_Lookup8

NO UNDEFINED SYMBOLS
