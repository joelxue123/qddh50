ARM GAS  /tmp/cct97U3h.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"aspep.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ASPEP_CheckBeacon,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ASPEP_CheckBeacon:
  26              	.LVL0:
  27              	.LFB1444:
  28              		.file 1 "Src/aspep.c"
   1:Src/aspep.c   **** 
   2:Src/aspep.c   **** /**
   3:Src/aspep.c   ****   ******************************************************************************
   4:Src/aspep.c   ****   * @file   aspep.c
   5:Src/aspep.c   ****   * @author Motor Control SDK Team, ST Microelectronics
   6:Src/aspep.c   ****   * @brief  This file provides firmware functions that implement the aspep protocol
   7:Src/aspep.c   ****   *
   8:Src/aspep.c   ****   *
   9:Src/aspep.c   ****   ******************************************************************************
  10:Src/aspep.c   ****   * @attention
  11:Src/aspep.c   ****   *
  12:Src/aspep.c   ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  13:Src/aspep.c   ****   * All rights reserved.</center></h2>
  14:Src/aspep.c   ****   *
  15:Src/aspep.c   ****   * This software component is licensed by ST under Ultimate Liberty license
  16:Src/aspep.c   ****   * SLA0044, the "License"; You may not use this file except in compliance with
  17:Src/aspep.c   ****   * the License. You may obtain a copy of the License at:
  18:Src/aspep.c   ****   *                             www.st.com/SLA0044
  19:Src/aspep.c   ****   *
  20:Src/aspep.c   ****   ******************************************************************************
  21:Src/aspep.c   ****   */
  22:Src/aspep.c   **** 
  23:Src/aspep.c   **** #include <stdint.h>
  24:Src/aspep.c   **** #include "aspep.h"
  25:Src/aspep.c   **** 
  26:Src/aspep.c   **** /* Local definition */
  27:Src/aspep.c   **** #define MIN(a,b) ( ((a) < (b)) ? (a) : (b) )
  28:Src/aspep.c   **** 
  29:Src/aspep.c   **** /* Local functions */
  30:Src/aspep.c   **** static bool ASPEP_CheckBeacon (ASPEP_Handle_t *pHandle);
ARM GAS  /tmp/cct97U3h.s 			page 2


  31:Src/aspep.c   **** static uint8_t ASPEP_TXframeProcess(ASPEP_Handle_t *pHandle, uint8_t packetType, void *txBuffer, ui
  32:Src/aspep.c   **** void ASPEP_sendBeacon(ASPEP_Handle_t *pHandle, ASPEP_Capabilities_def *capabilities);
  33:Src/aspep.c   **** void ASPEP_sendPing(ASPEP_Handle_t *pHandle, uint8_t state, uint16_t PacketNumber);
  34:Src/aspep.c   **** 
  35:Src/aspep.c   **** /** @addtogroup MCSDK
  36:Src/aspep.c   ****   * @{
  37:Src/aspep.c   ****   */
  38:Src/aspep.c   **** 
  39:Src/aspep.c   **** /** @addtogroup MCP
  40:Src/aspep.c   ****   * @{
  41:Src/aspep.c   ****   */
  42:Src/aspep.c   **** 
  43:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
  44:Src/aspep.c   **** /**
  45:Src/aspep.c   ****   * @brief CRC-4 lookup table with 256 entries
  46:Src/aspep.c   ****   *
  47:Src/aspep.c   ****   * Computes and checks the CRC on the header with the BYTE granularity.
  48:Src/aspep.c   ****   *
  49:Src/aspep.c   ****   * When computing the CRC, the 7th nibble must to be processed with the CRC_Lookup4
  50:Src/aspep.c   ****   * table. Indeed, the header contains 7 nibbles (28 bits) of data on which the CRC is
  51:Src/aspep.c   ****   * to be computed. Hence, the CRC4_Lookup8 table cannot be used for the last nibble.
  52:Src/aspep.c   ****   *
  53:Src/aspep.c   ****   * Using only this lookup table requires that the amount of input data is a multiple of
  54:Src/aspep.c   ****   * 8 bits.
  55:Src/aspep.c   ****   */
  56:Src/aspep.c   **** static uint8_t const CRC4_Lookup8[] =
  57:Src/aspep.c   **** {
  58:Src/aspep.c   ****   /*          0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   A,     B,    C,    D,    E
  59:Src/aspep.c   ****   /* 0 */  0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e, 0x07, 0x05, 0x03, 0x01, 0x0f, 0x0d, 0x0b
  60:Src/aspep.c   ****   /* 1 */  0x07, 0x05, 0x03, 0x01, 0x0f, 0x0d, 0x0b, 0x09, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c
  61:Src/aspep.c   ****   /* 2 */  0x0e, 0x0c, 0x0a, 0x08, 0x06, 0x04, 0x02, 0x00, 0x09, 0x0b, 0x0d, 0x0f, 0x01, 0x03, 0x05
  62:Src/aspep.c   ****   /* 3 */  0x09, 0x0b, 0x0d, 0x0f, 0x01, 0x03, 0x05, 0x07, 0x0e, 0x0c, 0x0a, 0x08, 0x06, 0x04, 0x02
  63:Src/aspep.c   ****   /* 4 */  0x0b, 0x09, 0x0f, 0x0d, 0x03, 0x01, 0x07, 0x05, 0x0c, 0x0e, 0x08, 0x0a, 0x04, 0x06, 0x00
  64:Src/aspep.c   ****   /* 5 */  0x0c, 0x0e, 0x08, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x0b, 0x09, 0x0f, 0x0d, 0x03, 0x01, 0x07
  65:Src/aspep.c   ****   /* 6 */  0x05, 0x07, 0x01, 0x03, 0x0d, 0x0f, 0x09, 0x0b, 0x02, 0x00, 0x06, 0x04, 0x0a, 0x08, 0x0e
  66:Src/aspep.c   ****   /* 7 */  0x02, 0x00, 0x06, 0x04, 0x0a, 0x08, 0x0e, 0x0c, 0x05, 0x07, 0x01, 0x03, 0x0d, 0x0f, 0x09
  67:Src/aspep.c   ****   /* 8 */  0x01, 0x03, 0x05, 0x07, 0x09, 0x0b, 0x0d, 0x0f, 0x06, 0x04, 0x02, 0x00, 0x0e, 0x0c, 0x0a
  68:Src/aspep.c   ****   /* 9 */  0x06, 0x04, 0x02, 0x00, 0x0e, 0x0c, 0x0a, 0x08, 0x01, 0x03, 0x05, 0x07, 0x09, 0x0b, 0x0d
  69:Src/aspep.c   ****   /* A */  0x0f, 0x0d, 0x0b, 0x09, 0x07, 0x05, 0x03, 0x01, 0x08, 0x0a, 0x0c, 0x0e, 0x00, 0x02, 0x04
  70:Src/aspep.c   ****   /* B */  0x08, 0x0a, 0x0c, 0x0e, 0x00, 0x02, 0x04, 0x06, 0x0f, 0x0d, 0x0b, 0x09, 0x07, 0x05, 0x03
  71:Src/aspep.c   ****   /* C */  0x0a, 0x08, 0x0e, 0x0c, 0x02, 0x00, 0x06, 0x04, 0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01
  72:Src/aspep.c   ****   /* D */  0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01, 0x03, 0x0a, 0x08, 0x0e, 0x0c, 0x02, 0x00, 0x06
  73:Src/aspep.c   ****   /* E */  0x04, 0x06, 0x00, 0x02, 0x0c, 0x0e, 0x08, 0x0a, 0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f
  74:Src/aspep.c   ****   /* F */  0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f, 0x0d, 0x04, 0x06, 0x00, 0x02, 0x0c, 0x0e, 0x08
  75:Src/aspep.c   **** };
  76:Src/aspep.c   **** 
  77:Src/aspep.c   **** /**
  78:Src/aspep.c   ****   * @brief CRC-4 lookup table with 16 entries
  79:Src/aspep.c   ****   *
  80:Src/aspep.c   ****   *  Used to compute and check the CRC on the header with either the BYTE or NIBBLE granularity
  81:Src/aspep.c   ****   * In case the BYTE granularity is used, the table is used only with the 7th nibble of the header
  82:Src/aspep.c   ****   * (bits 24 to 27) when computing the CRC.
  83:Src/aspep.c   ****   */
  84:Src/aspep.c   ****   //cstat !MISRAC2012-Rule-8.9_a
  85:Src/aspep.c   **** static uint8_t const CRC4_Lookup4[] =
  86:Src/aspep.c   **** {
  87:Src/aspep.c   ****   /*   0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   A,     B,    C,    D,    E,    F 
ARM GAS  /tmp/cct97U3h.s 			page 3


  88:Src/aspep.c   ****   0x00, 0x07, 0x0e, 0x09, 0x0b, 0x0c, 0x05, 0x02, 0x01, 0x06, 0x0f, 0x08, 0x0a, 0x0d, 0x04, 0x03
  89:Src/aspep.c   **** };
  90:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
  91:Src/aspep.c   **** 
  92:Src/aspep.c   **** /**
  93:Src/aspep.c   ****   * @brief Computes a 4-bit CRC on the 28 LSBs of @p header and returns it in the 4 MSB of the head
  94:Src/aspep.c   ****   *
  95:Src/aspep.c   ****   *  The generator polynomial used for the CRC is x^4+x+1 (ref. CCITT-G704).
  96:Src/aspep.c   ****   *
  97:Src/aspep.c   ****   *  The 28 input bits are split into 7 nibbles that are processed from the least significant to th
  98:Src/aspep.c   ****   * most significant one as follows:
  99:Src/aspep.c   ****   *
 100:Src/aspep.c   ****   *  - the least significant (4-bit) nibble is processed first as if it were the most significant p
 101:Src/aspep.c   ****   *    of the divident;
 102:Src/aspep.c   ****   *  - the order of bits in each nibble is unchanged for processing which would leads to the follow
 103:Src/aspep.c   ****   *    bit processing sequence: 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12, 19, 18, 17, 1
 104:Src/aspep.c   ****   *    23, 22, 21, 20, 27, 26, 25, 24.
 105:Src/aspep.c   ****   *
 106:Src/aspep.c   ****   *  Two lookup tables based implementations are proposed: one solely relying on a 16 entries looku
 107:Src/aspep.c   ****   * table and another one that also uses a 256 entries lookup table. This last one is the default. 
 108:Src/aspep.c   ****   * requires 256 more bytes than the first but is also roughly two times faster.
 109:Src/aspep.c   ****   *
 110:Src/aspep.c   ****   *  The 16 entries lookup table based implementation is enabled when the CRC4_PER_NIBBLE preproces
 111:Src/aspep.c   ****   * flag is defined.
 112:Src/aspep.c   ****   *
 113:Src/aspep.c   ****   *  Note that the default, 256 entries lookup table based implementation also uses the 16 entries 
 114:Src/aspep.c   ****   * table because the amount of input data is not a multiple of 8 bits.
 115:Src/aspep.c   ****   *
 116:Src/aspep.c   ****   * The resulting CRC is written in bits 28 to 31 of @p header and the whole header is returned.
 117:Src/aspep.c   ****   */
 118:Src/aspep.c   **** static void ASPEP_ComputeHeaderCRC(uint32_t *headerPtr)
 119:Src/aspep.c   **** {
 120:Src/aspep.c   ****   uint8_t crc = 0;
 121:Src/aspep.c   ****   uint32_t header = *headerPtr;
 122:Src/aspep.c   **** 
 123:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
 124:Src/aspep.c   ****   header &= 0x0fffffffU;
 125:Src/aspep.c   **** 
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)(header         & 0xffU)];
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 128:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 129:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 130:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 131:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)(header         & 0xfU)];
 132:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  4U) & 0xfU)];
 133:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  8U) & 0xfU)];
 134:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 12U) & 0xfU)];
 135:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 16U) & 0xfU)];
 136:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 20U) & 0xfU)];
 137:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0xfU)];
 138:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
 139:Src/aspep.c   **** 
 140:Src/aspep.c   ****   *headerPtr |= (uint32_t)crc << 28;
 141:Src/aspep.c   **** 
 142:Src/aspep.c   **** }
 143:Src/aspep.c   **** 
 144:Src/aspep.c   **** /**
ARM GAS  /tmp/cct97U3h.s 			page 4


 145:Src/aspep.c   ****   * @brief Checks if @p header contains a valid 4-bit CRC and return true if this is the case and f
 146:Src/aspep.c   ****   *
 147:Src/aspep.c   ****   *  The CRC is computed over the 32 bits of the @p header. If the result is 0, the CRC is consider
 148:Src/aspep.c   ****   * and true is returned. If the result is not 0, false is returned.
 149:Src/aspep.c   ****   *
 150:Src/aspep.c   ****   * @sa ASPEP_ComputeHeaderCRC
 151:Src/aspep.c   ****   */
 152:Src/aspep.c   **** static bool ASPEP_CheckHeaderCRC(uint32_t header)
 153:Src/aspep.c   **** {
 154:Src/aspep.c   ****   uint8_t crc = 0;
 155:Src/aspep.c   **** 
 156:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)(header         & 0xffU)];
 158:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 160:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 161:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 162:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)(header         & 0xfU)];
 163:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  4U) & 0xfU)];
 164:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  8U) & 0xfU)];
 165:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 12U) & 0xfU)];
 166:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 16U) & 0xfU)];
 167:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 20U) & 0xfU)];
 168:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0xfU)];
 169:Src/aspep.c   ****   crc = crc ^ (uint8_t)((header >> 28) & 0xf);
 170:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
 171:Src/aspep.c   **** 
 172:Src/aspep.c   ****   return (crc == 0U);
 173:Src/aspep.c   **** }
 174:Src/aspep.c   **** 
 175:Src/aspep.c   **** /**
 176:Src/aspep.c   ****   * @brief  Starts ASPEP communication by configuring UART.
 177:Src/aspep.c   ****   *
 178:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 179:Src/aspep.c   ****   */
 180:Src/aspep.c   **** void ASPEP_start(ASPEP_Handle_t *pHandle)
 181:Src/aspep.c   **** {
 182:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 183:Src/aspep.c   ****   if (MC_NULL == pHandle)
 184:Src/aspep.c   ****   {
 185:Src/aspep.c   ****     /* Nothing to do */
 186:Src/aspep.c   ****   }
 187:Src/aspep.c   ****   else
 188:Src/aspep.c   ****   {
 189:Src/aspep.c   **** #endif
 190:Src/aspep.c   ****     pHandle->fASPEP_HWInit(pHandle->ASPEPIp);
 191:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 192:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 193:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 194:Src/aspep.c   ****     /* Configure UART to receive first packet*/
 195:Src/aspep.c   ****     pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 196:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 197:Src/aspep.c   ****   }
 198:Src/aspep.c   **** #endif
 199:Src/aspep.c   **** }
 200:Src/aspep.c   **** 
 201:Src/aspep.c   **** /**
ARM GAS  /tmp/cct97U3h.s 			page 5


 202:Src/aspep.c   ****   * @brief  Sends BEACON to controller containing matched capabilities between controller and perfo
 203:Src/aspep.c   ****   *
 204:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 205:Src/aspep.c   ****   * @param  *capabilities Matched capabilities between controller and performer
 206:Src/aspep.c   ****   */
 207:Src/aspep.c   **** void ASPEP_sendBeacon(ASPEP_Handle_t *pHandle, ASPEP_Capabilities_def *capabilities)
 208:Src/aspep.c   **** {
 209:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 210:Src/aspep.c   ****   if ((MC_NULL == pHandle) || (NULL == capabilities))
 211:Src/aspep.c   ****   {
 212:Src/aspep.c   ****     /* Nothing to do */
 213:Src/aspep.c   ****   }
 214:Src/aspep.c   ****   else
 215:Src/aspep.c   ****   {
 216:Src/aspep.c   **** #endif
 217:Src/aspep.c   ****     uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 218:Src/aspep.c   ****     *packet = (BEACON
 219:Src/aspep.c   ****              | (((uint32_t)capabilities->version) << 4U)
 220:Src/aspep.c   ****              | (((uint32_t)capabilities->DATA_CRC) << 7U)
 221:Src/aspep.c   ****              | (((uint32_t)capabilities->RX_maxSize) << 8U)
 222:Src/aspep.c   ****              | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 223:Src/aspep.c   ****              | (((uint32_t)capabilities->TXA_maxSize) << 21U));
 224:Src/aspep.c   **** 
 225:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 226:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 227:Src/aspep.c   ****   }
 228:Src/aspep.c   **** #endif
 229:Src/aspep.c   **** }
 230:Src/aspep.c   **** 
 231:Src/aspep.c   **** /**
 232:Src/aspep.c   ****   * @brief  Sends back to controller a NOT_ACKNOWLEDGED message.
 233:Src/aspep.c   ****   *
 234:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 235:Src/aspep.c   ****   * @param  errorInfo Information on the encountered error
 236:Src/aspep.c   ****   */
 237:Src/aspep.c   **** static void ASPEP_sendNack(ASPEP_Handle_t *pHandle, uint8_t errorInfo)
 238:Src/aspep.c   **** {
 239:Src/aspep.c   ****   uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 240:Src/aspep.c   ****   *packet = NACK | (uint32_t)(((uint32_t) errorInfo) << 8U) | (uint32_t)(((uint32_t) errorInfo) << 
 241:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 242:Src/aspep.c   **** }
 243:Src/aspep.c   **** 
 244:Src/aspep.c   **** /**
 245:Src/aspep.c   ****   * @brief  Sends back ping to controller once connection has been established.
 246:Src/aspep.c   ****   *
 247:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 248:Src/aspep.c   ****   * @param  cBit Set to 1 if Performer has not been reset during communication
 249:Src/aspep.c   ****   * @param  packetNumber Number of requested packet incremented throughout the entire communication
 250:Src/aspep.c   ****   */
 251:Src/aspep.c   **** void ASPEP_sendPing(ASPEP_Handle_t *pHandle, uint8_t cBit, uint16_t packetNumber)
 252:Src/aspep.c   **** {
 253:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 254:Src/aspep.c   ****   if (MC_NULL == pHandle)
 255:Src/aspep.c   ****   {
 256:Src/aspep.c   ****     /* Nothing to do */
 257:Src/aspep.c   ****   }
 258:Src/aspep.c   ****   else
ARM GAS  /tmp/cct97U3h.s 			page 6


 259:Src/aspep.c   ****   {
 260:Src/aspep.c   **** #endif
 261:Src/aspep.c   ****     uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 262:Src/aspep.c   ****     uint8_t Nbit = pHandle->syncPacketCount & 0x1U; /* Keep only LSB */
 263:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 264:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 265:Src/aspep.c   ****                    | (uint32_t)((uint32_t)cBit << 5U)
 266:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 6U)
 267:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 7U)
 268:Src/aspep.c   ****                    | (uint32_t)((uint32_t)ipID << 8U)
 269:Src/aspep.c   ****                    | (uint32_t)(((uint32_t) packetNumber) << 12U);
 270:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 271:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 272:Src/aspep.c   ****   }
 273:Src/aspep.c   **** #endif
 274:Src/aspep.c   **** }
 275:Src/aspep.c   **** 
 276:Src/aspep.c   **** /**
 277:Src/aspep.c   ****   * @brief  Assigns new buffer depending on buffer type request and prevents overwriting.
 278:Src/aspep.c   ****   *
 279:Src/aspep.c   ****   * @param  *pSupHandle Handler of the current instance of the MCTL component
 280:Src/aspep.c   ****   * @param  **buffer Pointer to the buffer to be assigned
 281:Src/aspep.c   ****   * @param  syncAsync Type of requested buffer, can be synchronous or asynchronous
 282:Src/aspep.c   ****   *
 283:Src/aspep.c   ****   * @return Returns true if there is a writable buffer. False otherwise.
 284:Src/aspep.c   ****   */
 285:Src/aspep.c   **** bool ASPEP_getBuffer(MCTL_Handle_t *pSupHandle, void **buffer,  uint8_t syncAsync)
 286:Src/aspep.c   **** {
 287:Src/aspep.c   ****   bool result = true;
 288:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 289:Src/aspep.c   ****   if (MC_NULL == buffer)
 290:Src/aspep.c   ****   {
 291:Src/aspep.c   ****     result = false;
 292:Src/aspep.c   ****   }
 293:Src/aspep.c   ****   else
 294:Src/aspep.c   ****   {
 295:Src/aspep.c   **** #endif
 296:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 297:Src/aspep.c   **** 
 298:Src/aspep.c   ****     if (MCTL_SYNC == syncAsync)
 299:Src/aspep.c   ****     {
 300:Src/aspep.c   ****       if (pHandle->syncBuffer.state <= writeLock) /* Possible values are free or writeLock*/
 301:Src/aspep.c   ****       {
 302:Src/aspep.c   ****         *buffer = &pHandle->syncBuffer.buffer[ASPEP_HEADER_SIZE];
 303:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 304:Src/aspep.c   ****       }
 305:Src/aspep.c   ****       else
 306:Src/aspep.c   ****       {
 307:Src/aspep.c   ****         result = false;
 308:Src/aspep.c   ****       }
 309:Src/aspep.c   ****     }
 310:Src/aspep.c   ****     else /* Asynchronous buffer request */
 311:Src/aspep.c   ****     {
 312:Src/aspep.c   ****       if ((pHandle->asyncBufferA.state > writeLock) && (pHandle->asyncBufferB.state > writeLock))
 313:Src/aspep.c   ****       {
 314:Src/aspep.c   ****         result = false;
 315:Src/aspep.c   ****       }
ARM GAS  /tmp/cct97U3h.s 			page 7


 316:Src/aspep.c   ****       else
 317:Src/aspep.c   ****       {
 318:Src/aspep.c   ****         if (pHandle->asyncBufferA.state <= writeLock)
 319:Src/aspep.c   ****         {
 320:Src/aspep.c   ****           pHandle->asyncBufferA.state = writeLock;
 321:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 322:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 323:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 324:Src/aspep.c   ****           pHandle->asyncBufferA.RequestedNumber++;
 325:Src/aspep.c   **** #endif
 326:Src/aspep.c   ****         }
 327:Src/aspep.c   ****         else if (pHandle->asyncBufferB.state <= writeLock)
 328:Src/aspep.c   ****         {
 329:Src/aspep.c   ****           pHandle->asyncBufferB.state = writeLock;
 330:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 331:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 332:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 333:Src/aspep.c   ****           pHandle->asyncBufferB.RequestedNumber++;
 334:Src/aspep.c   **** #endif
 335:Src/aspep.c   ****         }
 336:Src/aspep.c   ****         else
 337:Src/aspep.c   ****         {
 338:Src/aspep.c   ****           /* Nothing to do */
 339:Src/aspep.c   ****         }
 340:Src/aspep.c   ****       }
 341:Src/aspep.c   ****     }
 342:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 343:Src/aspep.c   ****   }
 344:Src/aspep.c   **** #endif
 345:Src/aspep.c   ****   return (result);
 346:Src/aspep.c   **** }
 347:Src/aspep.c   **** 
 348:Src/aspep.c   **** /**
 349:Src/aspep.c   ****   * @brief  Checks controller's capabilities and compare them to performer's capabilities.
 350:Src/aspep.c   ****   *
 351:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 352:Src/aspep.c   ****   *
 353:Src/aspep.c   ****   * @return Returns true if controller's capabilities match performer's one. False otherwise.
 354:Src/aspep.c   ****   */
 355:Src/aspep.c   **** bool ASPEP_CheckBeacon (ASPEP_Handle_t *pHandle)
 356:Src/aspep.c   **** {
  29              		.loc 1 356 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 356 1 is_stmt 0 view .LVU1
  34 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 4, -24
  38              		.cfi_offset 5, -20
  39              		.cfi_offset 6, -16
  40              		.cfi_offset 7, -12
  41              		.cfi_offset 8, -8
  42              		.cfi_offset 14, -4
 357:Src/aspep.c   ****   bool result = true;
  43              		.loc 1 357 3 is_stmt 1 view .LVU2
ARM GAS  /tmp/cct97U3h.s 			page 8


  44              	.LVL1:
 358:Src/aspep.c   **** 
 359:Src/aspep.c   ****   uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
  45              		.loc 1 359 3 view .LVU3
  46              		.loc 1 359 12 is_stmt 0 view .LVU4
  47 0004 C469     		ldr	r4, [r0, #28]
  48              	.LVL2:
 360:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
  49              		.loc 1 360 3 is_stmt 1 view .LVU5
 361:Src/aspep.c   ****   MasterCapabilities.version = (uint8_t)((packetHeader &0x70U)>> 4U);           /*Bits 4 to 6*/
  50              		.loc 1 361 3 view .LVU6
 362:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;                     /*Bit 7 */
  51              		.loc 1 362 3 view .LVU7
  52              		.loc 1 362 31 is_stmt 0 view .LVU8
  53 0006 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
  54 0008 DB09     		lsrs	r3, r3, #7
  55              	.LVL3:
 363:Src/aspep.c   ****   MasterCapabilities.RX_maxSize = pHandle->rxHeader[1] &0x3FU;                  /*Bits 8 to  13*/
  56              		.loc 1 363 3 is_stmt 1 view .LVU9
  57              		.loc 1 363 56 is_stmt 0 view .LVU10
  58 000a 417F     		ldrb	r1, [r0, #29]	@ zero_extendqisi2
  59 000c 01F03F01 		and	r1, r1, #63
  60              	.LVL4:
 364:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
  61              		.loc 1 364 3 is_stmt 1 view .LVU11
  62              		.loc 1 364 36 is_stmt 0 view .LVU12
  63 0010 C4F38635 		ubfx	r5, r4, #14, #7
  64              	.LVL5:
 365:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21);  /*Bits 21 to 27  */
  65              		.loc 1 365 3 is_stmt 1 view .LVU13
  66              		.loc 1 365 36 is_stmt 0 view .LVU14
  67 0014 C4F34657 		ubfx	r7, r4, #21, #7
  68              	.LVL6:
 366:Src/aspep.c   **** 
 367:Src/aspep.c   ****   pHandle->Capabilities.DATA_CRC = MIN(pHandle->Capabilities.DATA_CRC ,MasterCapabilities.DATA_CRC)
  69              		.loc 1 367 3 is_stmt 1 view .LVU15
  70              		.loc 1 367 36 is_stmt 0 view .LVU16
  71 0018 90F86CC0 		ldrb	ip, [r0, #108]	@ zero_extendqisi2
  72 001c 1A46     		mov	r2, r3
  73 001e 6345     		cmp	r3, ip
  74 0020 28BF     		it	cs
  75 0022 6246     		movcs	r2, ip
  76              		.loc 1 367 34 view .LVU17
  77 0024 80F86C20 		strb	r2, [r0, #108]
 368:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
  78              		.loc 1 368 3 is_stmt 1 view .LVU18
  79              		.loc 1 368 38 is_stmt 0 view .LVU19
  80 0028 90F86D20 		ldrb	r2, [r0, #109]	@ zero_extendqisi2
  81 002c 8A42     		cmp	r2, r1
  82 002e 28BF     		it	cs
  83 0030 0A46     		movcs	r2, r1
  84              		.loc 1 368 36 view .LVU20
  85 0032 80F86D20 		strb	r2, [r0, #109]
 369:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
  86              		.loc 1 369 3 is_stmt 1 view .LVU21
  87              		.loc 1 369 39 is_stmt 0 view .LVU22
  88 0036 90F86EE0 		ldrb	lr, [r0, #110]	@ zero_extendqisi2
ARM GAS  /tmp/cct97U3h.s 			page 9


  89 003a 2E46     		mov	r6, r5
  90 003c 7545     		cmp	r5, lr
  91 003e 28BF     		it	cs
  92 0040 7646     		movcs	r6, lr
  93              		.loc 1 369 37 view .LVU23
  94 0042 80F86E60 		strb	r6, [r0, #110]
 370:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
  95              		.loc 1 370 3 is_stmt 1 view .LVU24
  96              		.loc 1 370 39 is_stmt 0 view .LVU25
  97 0046 90F86F60 		ldrb	r6, [r0, #111]	@ zero_extendqisi2
  98 004a B846     		mov	r8, r7
  99 004c B742     		cmp	r7, r6
 100 004e 28BF     		it	cs
 101 0050 B046     		movcs	r8, r6
 102              		.loc 1 370 37 view .LVU26
 103 0052 80F86F80 		strb	r8, [r0, #111]
 371:Src/aspep.c   **** 
 372:Src/aspep.c   ****   if ((MasterCapabilities.DATA_CRC != pHandle->Capabilities.DATA_CRC)
 104              		.loc 1 372 3 is_stmt 1 view .LVU27
 105              		.loc 1 372 6 is_stmt 0 view .LVU28
 106 0056 6345     		cmp	r3, ip
 107 0058 02D9     		bls	.L8
 373:Src/aspep.c   ****    /* Data packet the controller can send is bigger than performer can receive */
 374:Src/aspep.c   ****    || (MasterCapabilities.RX_maxSize > pHandle->Capabilities.RX_maxSize)
 375:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the controller to be able to store it, a
 376:Src/aspep.c   ****     * response bigger than performer capability */
 377:Src/aspep.c   ****    || (pHandle->Capabilities.TXS_maxSize != MasterCapabilities.TXS_maxSize )
 378:Src/aspep.c   ****    /* Async packet the performer can send is bigger than the controller can receive (but controller
 379:Src/aspep.c   ****     * packet than performer can transmit) */
 380:Src/aspep.c   ****    || (pHandle->Capabilities.TXA_maxSize != MasterCapabilities.TXA_maxSize )
 381:Src/aspep.c   ****    /* For the time being, controller version has to match performer version */
 382:Src/aspep.c   ****    || (MasterCapabilities.version != pHandle->Capabilities.version) )
 383:Src/aspep.c   ****   {
 384:Src/aspep.c   ****     result = false;
 108              		.loc 1 384 12 view .LVU29
 109 005a 0020     		movs	r0, #0
 110              	.LVL7:
 111              	.L2:
 385:Src/aspep.c   ****   }
 386:Src/aspep.c   ****   else
 387:Src/aspep.c   ****   {
 388:Src/aspep.c   ****     /* Nothing to do */
 389:Src/aspep.c   ****   }
 390:Src/aspep.c   **** 
 391:Src/aspep.c   ****   return (result);
 112              		.loc 1 391 3 is_stmt 1 view .LVU30
 392:Src/aspep.c   **** }
 113              		.loc 1 392 1 is_stmt 0 view .LVU31
 114 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 115              	.LVL8:
 116              	.L8:
 374:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the controller to be able to store it, a
 117              		.loc 1 374 4 view .LVU32
 118 0060 9142     		cmp	r1, r2
 119 0062 10D8     		bhi	.L4
 377:Src/aspep.c   ****    /* Async packet the performer can send is bigger than the controller can receive (but controller
 120              		.loc 1 377 4 view .LVU33
ARM GAS  /tmp/cct97U3h.s 			page 10


 121 0064 7545     		cmp	r5, lr
 122 0066 01D9     		bls	.L9
 384:Src/aspep.c   ****   }
 123              		.loc 1 384 12 view .LVU34
 124 0068 0020     		movs	r0, #0
 125              	.LVL9:
 384:Src/aspep.c   ****   }
 126              		.loc 1 384 12 view .LVU35
 127 006a F7E7     		b	.L2
 128              	.LVL10:
 129              	.L9:
 380:Src/aspep.c   ****    /* For the time being, controller version has to match performer version */
 130              		.loc 1 380 4 view .LVU36
 131 006c B742     		cmp	r7, r6
 132 006e 01D9     		bls	.L10
 384:Src/aspep.c   ****   }
 133              		.loc 1 384 12 view .LVU37
 134 0070 0020     		movs	r0, #0
 135              	.LVL11:
 384:Src/aspep.c   ****   }
 136              		.loc 1 384 12 view .LVU38
 137 0072 F3E7     		b	.L2
 138              	.LVL12:
 139              	.L10:
 382:Src/aspep.c   ****   {
 140              		.loc 1 382 4 view .LVU39
 141 0074 90F87000 		ldrb	r0, [r0, #112]	@ zero_extendqisi2
 142              	.LVL13:
 382:Src/aspep.c   ****   {
 143              		.loc 1 382 4 view .LVU40
 144 0078 C4F30214 		ubfx	r4, r4, #4, #3
 145              	.LVL14:
 382:Src/aspep.c   ****   {
 146              		.loc 1 382 4 view .LVU41
 147 007c A042     		cmp	r0, r4
 148 007e 14BF     		ite	ne
 149 0080 0020     		movne	r0, #0
 150 0082 0120     		moveq	r0, #1
 151 0084 EAE7     		b	.L2
 152              	.LVL15:
 153              	.L4:
 384:Src/aspep.c   ****   }
 154              		.loc 1 384 12 view .LVU42
 155 0086 0020     		movs	r0, #0
 156              	.LVL16:
 384:Src/aspep.c   ****   }
 157              		.loc 1 384 12 view .LVU43
 158 0088 E8E7     		b	.L2
 159              		.cfi_endproc
 160              	.LFE1444:
 162              		.section	.text.ASPEP_TXframeProcess,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	ASPEP_TXframeProcess:
ARM GAS  /tmp/cct97U3h.s 			page 11


 170              	.LVL17:
 171              	.LFB1446:
 393:Src/aspep.c   **** 
 394:Src/aspep.c   **** /**
 395:Src/aspep.c   ****   * @brief  Checks if any error has occurred and calls the ASPEP_TXframeProcess function.
 396:Src/aspep.c   ****   *
 397:Src/aspep.c   ****   * @param  *pSupHandle Handler of the current instance of the MCTL component
 398:Src/aspep.c   ****   * @param  *txBuffer can be 8, 16 or 32 bits, but must be 32 bits aligned
 399:Src/aspep.c   ****   * @param  txDataLength Size of useful data in byte
 400:Src/aspep.c   ****   * @param  syncAsync nature of the communication : synchronous or asynchronous
 401:Src/aspep.c   ****   *
 402:Src/aspep.c   ****   * @return Returns an ASPEP response defined in aspep.h
 403:Src/aspep.c   ****   */
 404:Src/aspep.c   **** uint8_t ASPEP_sendPacket(MCTL_Handle_t *pSupHandle, void *txBuffer, uint16_t txDataLength, uint8_t 
 405:Src/aspep.c   **** {
 406:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 407:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 408:Src/aspep.c   ****   if ((MC_NULL == pSupHandle) || (MC_NULL == txBuffer))
 409:Src/aspep.c   ****   {
 410:Src/aspep.c   ****     result = ASPEP_BUFFER_ERROR;
 411:Src/aspep.c   ****   }
 412:Src/aspep.c   ****   else
 413:Src/aspep.c   ****   {
 414:Src/aspep.c   **** #endif
 415:Src/aspep.c   ****     uint32_t *header;
 416:Src/aspep.c   ****     uint32_t tmpHeader;
 417:Src/aspep.c   ****     uint16_t txDataLengthTemp;
 418:Src/aspep.c   ****     uint8_t *packet;
 419:Src/aspep.c   **** 
 420:Src/aspep.c   ****     txDataLengthTemp = txDataLength;
 421:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 422:Src/aspep.c   **** 
 423:Src/aspep.c   ****     if (ASPEP_CONNECTED == pHandle-> ASPEP_State)
 424:Src/aspep.c   ****     {
 425:Src/aspep.c   ****       /*We must add packet header on  */
 426:Src/aspep.c   ****       /* | [0101|0011] | Length 13b | Reserved |CRCH 4b| */
 427:Src/aspep.c   ****       packet = (uint8_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 428:Src/aspep.c   ****       header = (uint32_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 429:Src/aspep.c   ****       header--; /* Header ues 4*8 bits on top of txBuffer*/
 430:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 431:Src/aspep.c   ****       *header = tmpHeader;
 432:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 433:Src/aspep.c   ****       {
 434:Src/aspep.c   ****         /* TODO : Compute real CRC*/
 435:Src/aspep.c   ****         packet[txDataLengthTemp] = (uint8_t)0xCA; /* Dummy CRC */
 436:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 437:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 438:Src/aspep.c   ****       }
 439:Src/aspep.c   ****       if (MCTL_SYNC == syncAsync)
 440:Src/aspep.c   ****       {
 441:Src/aspep.c   ****         if (pSupHandle->MCP_PacketAvailable)
 442:Src/aspep.c   ****         {
 443:Src/aspep.c   ****           pSupHandle->MCP_PacketAvailable = false; /* CMD from controller is processed*/
 444:Src/aspep.c   ****         }
 445:Src/aspep.c   ****         else
 446:Src/aspep.c   ****         {
 447:Src/aspep.c   ****           result = MCTL_SYNC_NOT_EXPECTED;
ARM GAS  /tmp/cct97U3h.s 			page 12


 448:Src/aspep.c   ****         }
 449:Src/aspep.c   ****       }
 450:Src/aspep.c   ****       if (ASPEP_OK == result) /* Send packet only if no error detected so far*/
 451:Src/aspep.c   ****       {
 452:Src/aspep.c   ****         result = ASPEP_TXframeProcess(pHandle, syncAsync, header, txDataLengthTemp + (uint16_t)ASPE
 453:Src/aspep.c   ****       }
 454:Src/aspep.c   ****     }
 455:Src/aspep.c   ****     else
 456:Src/aspep.c   ****     {
 457:Src/aspep.c   ****       result = ASPEP_NOT_CONNECTED;
 458:Src/aspep.c   ****     }
 459:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 460:Src/aspep.c   ****   }
 461:Src/aspep.c   **** #endif
 462:Src/aspep.c   ****   return (result);
 463:Src/aspep.c   **** }
 464:Src/aspep.c   **** 
 465:Src/aspep.c   **** /**
 466:Src/aspep.c   ****   * @brief  Checks if HW resource is busy before sending packet. Otherwise saves packet for next op
 467:Src/aspep.c   ****   *
 468:Src/aspep.c   ****   * This function contains a critical section.
 469:Src/aspep.c   ****   * It can be accessed concurently under High frequency task (by MCPA_datalog)
 470:Src/aspep.c   ****   * and under Medium frequency task (MC_Scheduler -> ASPEP_RxFrameProcess ).
 471:Src/aspep.c   ****   *
 472:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 473:Src/aspep.c   ****   * @param  dataType Nature of the communication : synchronous, asynchronous or a CTL packet
 474:Src/aspep.c   ****   * @param  *txBuffer CRC Header to be computed in sent packet
 475:Src/aspep.c   ****   * @param  bufferLength Size of the packet to be sent : Header + Data
 476:Src/aspep.c   ****   *
 477:Src/aspep.c   ****   * @return Returns an ASPEP response defined in aspep.h
 478:Src/aspep.c   ****   */
 479:Src/aspep.c   **** uint8_t ASPEP_TXframeProcess(ASPEP_Handle_t *pHandle, uint8_t dataType, void *txBuffer, uint16_t bu
 480:Src/aspep.c   **** {
 172              		.loc 1 480 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 480 1 is_stmt 0 view .LVU45
 177 0000 70B5     		push	{r4, r5, r6, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 16
 180              		.cfi_offset 4, -16
 181              		.cfi_offset 5, -12
 182              		.cfi_offset 6, -8
 183              		.cfi_offset 14, -4
 184 0002 8446     		mov	ip, r0
 185 0004 0D46     		mov	r5, r1
 186 0006 1146     		mov	r1, r2
 187              	.LVL18:
 188              		.loc 1 480 1 view .LVU46
 189 0008 1A46     		mov	r2, r3
 190              	.LVL19:
 481:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 191              		.loc 1 481 3 is_stmt 1 view .LVU47
 482:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 483:Src/aspep.c   ****   if (MC_NULL == txBuffer)
 484:Src/aspep.c   ****   {
ARM GAS  /tmp/cct97U3h.s 			page 13


 485:Src/aspep.c   ****     result = ASPEP_BUFFER_ERROR;
 486:Src/aspep.c   ****   }
 487:Src/aspep.c   ****   else
 488:Src/aspep.c   ****   {
 489:Src/aspep.c   **** #endif
 490:Src/aspep.c   ****     /* Insert CRC header in the packet to send */
 491:Src/aspep.c   ****     ASPEP_ComputeHeaderCRC((uint32_t *)txBuffer); //cstat !MISRAC2012-Rule-11.5
 192              		.loc 1 491 5 view .LVU48
 193              	.LBB22:
 194              	.LBI22:
 118:Src/aspep.c   **** {
 195              		.loc 1 118 13 view .LVU49
 196              	.LBB23:
 120:Src/aspep.c   ****   uint32_t header = *headerPtr;
 197              		.loc 1 120 3 view .LVU50
 121:Src/aspep.c   **** 
 198              		.loc 1 121 3 view .LVU51
 121:Src/aspep.c   **** 
 199              		.loc 1 121 12 is_stmt 0 view .LVU52
 200 000a 0C68     		ldr	r4, [r1]
 201              	.LVL20:
 124:Src/aspep.c   **** 
 202              		.loc 1 124 3 is_stmt 1 view .LVU53
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 203              		.loc 1 126 3 view .LVU54
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 204              		.loc 1 127 3 view .LVU55
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 205              		.loc 1 126 7 is_stmt 0 view .LVU56
 206 000c 354E     		ldr	r6, .L32
 126:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 207              		.loc 1 126 26 view .LVU57
 208 000e E3B2     		uxtb	r3, r4
 209              	.LVL21:
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 210              		.loc 1 127 26 view .LVU58
 211 0010 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 212 0012 C4F30720 		ubfx	r0, r4, #8, #8
 213              	.LVL22:
 127:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 214              		.loc 1 127 26 view .LVU59
 215 0016 5840     		eors	r0, r0, r3
 216              	.LVL23:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 217              		.loc 1 128 3 is_stmt 1 view .LVU60
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 218              		.loc 1 128 26 is_stmt 0 view .LVU61
 219 0018 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 220 001a C4F30740 		ubfx	r0, r4, #16, #8
 221              	.LVL24:
 128:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
 222              		.loc 1 128 26 view .LVU62
 223 001e 5840     		eors	r0, r0, r3
 224              	.LVL25:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 225              		.loc 1 129 3 is_stmt 1 view .LVU63
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
ARM GAS  /tmp/cct97U3h.s 			page 14


 226              		.loc 1 129 26 is_stmt 0 view .LVU64
 227 0020 305C     		ldrb	r0, [r6, r0]	@ zero_extendqisi2
 228              	.LVL26:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 229              		.loc 1 129 46 view .LVU65
 230 0022 C4F30363 		ubfx	r3, r4, #24, #4
 231              	.LVL27:
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 232              		.loc 1 129 26 view .LVU66
 233 0026 5840     		eors	r0, r0, r3
 234              	.LVL28:
 140:Src/aspep.c   **** 
 235              		.loc 1 140 3 is_stmt 1 view .LVU67
 129:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 236              		.loc 1 129 7 is_stmt 0 view .LVU68
 237 0028 2F4B     		ldr	r3, .L32+4
 140:Src/aspep.c   **** 
 238              		.loc 1 140 17 view .LVU69
 239 002a 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 140:Src/aspep.c   **** 
 240              		.loc 1 140 14 view .LVU70
 241 002c 44EA0374 		orr	r4, r4, r3, lsl #28
 242              	.LVL29:
 140:Src/aspep.c   **** 
 243              		.loc 1 140 14 view .LVU71
 244 0030 0C60     		str	r4, [r1]
 245              	.LVL30:
 140:Src/aspep.c   **** 
 246              		.loc 1 140 14 view .LVU72
 247              	.LBE23:
 248              	.LBE22:
 492:Src/aspep.c   ****     __disable_irq(); /*TODO: Disable High frequency task is enough */
 249              		.loc 1 492 5 is_stmt 1 view .LVU73
 250              	.LBB24:
 251              	.LBI24:
 252              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  /tmp/cct97U3h.s 			page 15


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  /tmp/cct97U3h.s 			page 16


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
ARM GAS  /tmp/cct97U3h.s 			page 17


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  /tmp/cct97U3h.s 			page 18


 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 253              		.loc 2 207 27 view .LVU74
 254              	.LBB25:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 255              		.loc 2 209 3 view .LVU75
 256              		.syntax unified
 257              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 258 0032 72B6     		cpsid i
 259              	@ 0 "" 2
 260              		.thumb
 261              		.syntax unified
 262              	.LBE25:
 263              	.LBE24:
 493:Src/aspep.c   ****     if (NULL == pHandle->lockBuffer) /* Communication Ip free to send data*/
 264              		.loc 1 493 5 view .LVU76
 265              		.loc 1 493 8 is_stmt 0 view .LVU77
 266 0034 DCF84830 		ldr	r3, [ip, #72]
 267 0038 73B1     		cbz	r3, .L26
 494:Src/aspep.c   ****     {
 495:Src/aspep.c   ****       if (MCTL_ASYNC == dataType)
 496:Src/aspep.c   ****       {
 497:Src/aspep.c   ****         /* In ASYNC, two flipflop buffers are used, the txBuffer points always to lastRequestedAsyn
 498:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = readLock;
 499:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 500:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 501:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->SentNumber++;
 502:Src/aspep.c   **** #endif
 503:Src/aspep.c   ****       }
 504:Src/aspep.c   ****       else if (MCTL_SYNC == dataType)
 505:Src/aspep.c   ****       {
 506:Src/aspep.c   ****         pHandle->syncBuffer.state = readLock;
 507:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 508:Src/aspep.c   ****       }
 509:Src/aspep.c   ****       else
 510:Src/aspep.c   ****       {
 511:Src/aspep.c   ****         pHandle->ctrlBuffer.state = readLock;
 512:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 513:Src/aspep.c   ****       }
 514:Src/aspep.c   ****       /* Enable HF task It */
 515:Src/aspep.c   ****       __enable_irq(); /*TODO: Enable High frequency task is enough */
 516:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 517:Src/aspep.c   ****     }
ARM GAS  /tmp/cct97U3h.s 			page 19


 518:Src/aspep.c   ****     else /* HW resource busy, saving packet to sent it once resource will be freed*/
 519:Src/aspep.c   ****     {
 520:Src/aspep.c   ****       __enable_irq(); /*TODO: Enable High frequency task is enough */
 268              		.loc 1 520 7 is_stmt 1 view .LVU78
 269              	.LBB26:
 270              	.LBI26:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271              		.loc 2 196 27 view .LVU79
 272              	.LBB27:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273              		.loc 2 198 3 view .LVU80
 274              		.syntax unified
 275              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 276 003a 62B6     		cpsie i
 277              	@ 0 "" 2
 278              		.thumb
 279              		.syntax unified
 280              	.LBE27:
 281              	.LBE26:
 521:Src/aspep.c   ****       /* Lock buffer can be freed here */
 522:Src/aspep.c   ****       if (MCTL_ASYNC == dataType)
 282              		.loc 1 522 7 view .LVU81
 283              		.loc 1 522 10 is_stmt 0 view .LVU82
 284 003c 092D     		cmp	r5, #9
 285 003e 2CD0     		beq	.L27
 523:Src/aspep.c   ****       {
 524:Src/aspep.c   ****         /* Check that the buffer received is the one expected - probably useless */
 525:Src/aspep.c   ****         if (txBuffer != (uint8_t *)pHandle->lastRequestedAsyncBuff->buffer)
 526:Src/aspep.c   ****         {
 527:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 528:Src/aspep.c   ****         }
 529:Src/aspep.c   ****         else
 530:Src/aspep.c   ****         {
 531:Src/aspep.c   ****           /* Nothing to do */
 532:Src/aspep.c   ****         }
 533:Src/aspep.c   ****         if (NULL == pHandle->asyncNextBuffer)
 534:Src/aspep.c   ****         {
 535:Src/aspep.c   ****           /* Required to keep the right sending order */
 536:Src/aspep.c   ****           pHandle->asyncNextBuffer = pHandle->lastRequestedAsyncBuff;
 537:Src/aspep.c   ****         }
 538:Src/aspep.c   ****         else
 539:Src/aspep.c   ****         {
 540:Src/aspep.c   ****           /* Nothing to do */
 541:Src/aspep.c   ****         }
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = pending;
 543:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 544:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 545:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->PendingNumber++;
 546:Src/aspep.c   **** #endif
 547:Src/aspep.c   ****       }
 548:Src/aspep.c   ****       else if (MCTL_SYNC == dataType)
 286              		.loc 1 548 12 is_stmt 1 view .LVU83
 287              		.loc 1 548 15 is_stmt 0 view .LVU84
 288 0040 0A2D     		cmp	r5, #10
 289 0042 3DD0     		beq	.L28
 549:Src/aspep.c   ****       {
 550:Src/aspep.c   ****         if (pHandle -> syncBuffer.state != writeLock)
ARM GAS  /tmp/cct97U3h.s 			page 20


 551:Src/aspep.c   ****         {
 552:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 553:Src/aspep.c   ****         }
 554:Src/aspep.c   ****         else
 555:Src/aspep.c   ****         {
 556:Src/aspep.c   ****           pHandle->syncBuffer.state = pending;
 557:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 558:Src/aspep.c   ****         }
 559:Src/aspep.c   ****       }
 560:Src/aspep.c   ****       else if(ASPEP_CTRL == dataType)
 290              		.loc 1 560 12 is_stmt 1 view .LVU85
 291              		.loc 1 560 14 is_stmt 0 view .LVU86
 292 0044 002D     		cmp	r5, #0
 293 0046 48D1     		bne	.L23
 561:Src/aspep.c   ****       {
 562:Src/aspep.c   ****         if (pHandle->ctrlBuffer.state != available)
 294              		.loc 1 562 9 is_stmt 1 view .LVU87
 295              		.loc 1 562 32 is_stmt 0 view .LVU88
 296 0048 9CF82400 		ldrb	r0, [ip, #36]	@ zero_extendqisi2
 297              		.loc 1 562 12 view .LVU89
 298 004c 0028     		cmp	r0, #0
 299 004e 46D1     		bne	.L24
 563:Src/aspep.c   ****         {
 564:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 565:Src/aspep.c   ****         }
 566:Src/aspep.c   ****         else
 567:Src/aspep.c   ****         {
 568:Src/aspep.c   ****           pHandle->ctrlBuffer.state = pending;
 300              		.loc 1 568 11 is_stmt 1 view .LVU90
 301              		.loc 1 568 37 is_stmt 0 view .LVU91
 302 0050 0223     		movs	r3, #2
 303 0052 8CF82430 		strb	r3, [ip, #36]
 304 0056 16E0     		b	.L16
 305              	.L26:
 495:Src/aspep.c   ****       {
 306              		.loc 1 495 7 is_stmt 1 view .LVU92
 495:Src/aspep.c   ****       {
 307              		.loc 1 495 10 is_stmt 0 view .LVU93
 308 0058 092D     		cmp	r5, #9
 309 005a 15D0     		beq	.L29
 504:Src/aspep.c   ****       {
 310              		.loc 1 504 12 is_stmt 1 view .LVU94
 504:Src/aspep.c   ****       {
 311              		.loc 1 504 15 is_stmt 0 view .LVU95
 312 005c 0A2D     		cmp	r5, #10
 506:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 313              		.loc 1 506 9 is_stmt 1 view .LVU96
 506:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 314              		.loc 1 506 35 is_stmt 0 view .LVU97
 315 005e 4FF00303 		mov	r3, #3
 316 0062 07BF     		ittee	eq
 317 0064 8CF82E30 		strbeq	r3, [ip, #46]
 507:Src/aspep.c   ****       }
 318              		.loc 1 507 9 is_stmt 1 view .LVU98
 507:Src/aspep.c   ****       }
 319              		.loc 1 507 39 is_stmt 0 view .LVU99
 320 0068 0CF12803 		addeq	r3, ip, #40
ARM GAS  /tmp/cct97U3h.s 			page 21


 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 321              		.loc 1 511 9 is_stmt 1 view .LVU100
 511:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 322              		.loc 1 511 35 is_stmt 0 view .LVU101
 323 006c 8CF82430 		strbne	r3, [ip, #36]
 512:Src/aspep.c   ****       }
 324              		.loc 1 512 9 is_stmt 1 view .LVU102
 512:Src/aspep.c   ****       }
 325              		.loc 1 512 39 is_stmt 0 view .LVU103
 326 0070 0CF12003 		addne	r3, ip, #32
 512:Src/aspep.c   ****       }
 327              		.loc 1 512 29 view .LVU104
 328 0074 CCF84830 		str	r3, [ip, #72]
 329              	.L14:
 515:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, txBuffer, bufferLength);
 330              		.loc 1 515 7 is_stmt 1 view .LVU105
 331              	.LBB28:
 332              	.LBI28:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333              		.loc 2 196 27 view .LVU106
 334              	.LBB29:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335              		.loc 2 198 3 view .LVU107
 336              		.syntax unified
 337              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 338 0078 62B6     		cpsie i
 339              	@ 0 "" 2
 340              		.thumb
 341              		.syntax unified
 342              	.LBE29:
 343              	.LBE28:
 516:Src/aspep.c   ****     }
 344              		.loc 1 516 7 view .LVU108
 345 007a DCF85830 		ldr	r3, [ip, #88]
 346 007e DCF81400 		ldr	r0, [ip, #20]
 347 0082 9847     		blx	r3
 348              	.LVL31:
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 349              		.loc 1 481 11 is_stmt 0 view .LVU109
 350 0084 0020     		movs	r0, #0
 351              	.LVL32:
 352              	.L16:
 569:Src/aspep.c   ****         }
 570:Src/aspep.c   ****       }
 571:Src/aspep.c   ****       else
 572:Src/aspep.c   ****       {
 573:Src/aspep.c   ****         /* Nothing to do */
 574:Src/aspep.c   ****       }
 353              		.loc 1 574 7 is_stmt 1 view .LVU110
 575:Src/aspep.c   ****     }
 576:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 577:Src/aspep.c   ****   }
 578:Src/aspep.c   **** #endif
 579:Src/aspep.c   ****   return (result);
 354              		.loc 1 579 3 view .LVU111
 580:Src/aspep.c   **** }
 355              		.loc 1 580 1 is_stmt 0 view .LVU112
ARM GAS  /tmp/cct97U3h.s 			page 22


 356 0086 70BD     		pop	{r4, r5, r6, pc}
 357              	.LVL33:
 358              	.L29:
 498:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 359              		.loc 1 498 9 is_stmt 1 view .LVU113
 498:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 360              		.loc 1 498 16 is_stmt 0 view .LVU114
 361 0088 DCF84030 		ldr	r3, [ip, #64]
 498:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 362              		.loc 1 498 48 view .LVU115
 363 008c 0320     		movs	r0, #3
 364 008e 9871     		strb	r0, [r3, #6]
 499:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 365              		.loc 1 499 9 is_stmt 1 view .LVU116
 499:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 366              		.loc 1 499 29 is_stmt 0 view .LVU117
 367 0090 DCF84030 		ldr	r3, [ip, #64]
 368 0094 CCF84830 		str	r3, [ip, #72]
 369 0098 EEE7     		b	.L14
 370              	.L27:
 525:Src/aspep.c   ****         {
 371              		.loc 1 525 9 is_stmt 1 view .LVU118
 525:Src/aspep.c   ****         {
 372              		.loc 1 525 43 is_stmt 0 view .LVU119
 373 009a DCF84030 		ldr	r3, [ip, #64]
 525:Src/aspep.c   ****         {
 374              		.loc 1 525 12 view .LVU120
 375 009e 1868     		ldr	r0, [r3]
 527:Src/aspep.c   ****         }
 376              		.loc 1 527 18 view .LVU121
 377 00a0 8842     		cmp	r0, r1
 378 00a2 14BF     		ite	ne
 379 00a4 0320     		movne	r0, #3
 380 00a6 0020     		moveq	r0, #0
 381              	.LVL34:
 532:Src/aspep.c   ****         if (NULL == pHandle->asyncNextBuffer)
 382              		.loc 1 532 9 is_stmt 1 view .LVU122
 533:Src/aspep.c   ****         {
 383              		.loc 1 533 9 view .LVU123
 533:Src/aspep.c   ****         {
 384              		.loc 1 533 12 is_stmt 0 view .LVU124
 385 00a8 DCF84410 		ldr	r1, [ip, #68]
 386              	.LVL35:
 533:Src/aspep.c   ****         {
 387              		.loc 1 533 12 view .LVU125
 388 00ac 29B1     		cbz	r1, .L30
 389              	.L19:
 541:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = pending;
 390              		.loc 1 541 9 is_stmt 1 view .LVU126
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 391              		.loc 1 542 9 view .LVU127
 542:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 392              		.loc 1 542 48 is_stmt 0 view .LVU128
 393 00ae 0221     		movs	r1, #2
 394 00b0 9971     		strb	r1, [r3, #6]
 543:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 395              		.loc 1 543 9 is_stmt 1 view .LVU129
ARM GAS  /tmp/cct97U3h.s 			page 23


 543:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 396              		.loc 1 543 16 is_stmt 0 view .LVU130
 397 00b2 DCF84030 		ldr	r3, [ip, #64]
 543:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 398              		.loc 1 543 49 view .LVU131
 399 00b6 9A80     		strh	r2, [r3, #4]	@ movhi
 400 00b8 E5E7     		b	.L16
 401              	.L30:
 536:Src/aspep.c   ****         }
 402              		.loc 1 536 11 is_stmt 1 view .LVU132
 536:Src/aspep.c   ****         }
 403              		.loc 1 536 36 is_stmt 0 view .LVU133
 404 00ba CCF84430 		str	r3, [ip, #68]
 405 00be F6E7     		b	.L19
 406              	.LVL36:
 407              	.L28:
 550:Src/aspep.c   ****         {
 408              		.loc 1 550 9 is_stmt 1 view .LVU134
 550:Src/aspep.c   ****         {
 409              		.loc 1 550 12 is_stmt 0 view .LVU135
 410 00c0 9CF82E30 		ldrb	r3, [ip, #46]	@ zero_extendqisi2
 411 00c4 012B     		cmp	r3, #1
 412 00c6 01D0     		beq	.L31
 552:Src/aspep.c   ****         }
 413              		.loc 1 552 18 view .LVU136
 414 00c8 0320     		movs	r0, #3
 415 00ca DCE7     		b	.L16
 416              	.L31:
 556:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 417              		.loc 1 556 11 is_stmt 1 view .LVU137
 556:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 418              		.loc 1 556 37 is_stmt 0 view .LVU138
 419 00cc 0223     		movs	r3, #2
 420 00ce 8CF82E30 		strb	r3, [ip, #46]
 557:Src/aspep.c   ****         }
 421              		.loc 1 557 11 is_stmt 1 view .LVU139
 557:Src/aspep.c   ****         }
 422              		.loc 1 557 38 is_stmt 0 view .LVU140
 423 00d2 ACF82C20 		strh	r2, [ip, #44]	@ movhi
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 424              		.loc 1 481 11 view .LVU141
 425 00d6 0020     		movs	r0, #0
 426 00d8 D5E7     		b	.L16
 427              	.L23:
 481:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 428              		.loc 1 481 11 view .LVU142
 429 00da 0020     		movs	r0, #0
 430 00dc D3E7     		b	.L16
 431              	.L24:
 564:Src/aspep.c   ****         }
 432              		.loc 1 564 18 view .LVU143
 433 00de 0320     		movs	r0, #3
 434 00e0 D1E7     		b	.L16
 435              	.L33:
 436 00e2 00BF     		.align	2
 437              	.L32:
 438 00e4 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cct97U3h.s 			page 24


 439 00e8 00000000 		.word	.LANCHOR1
 440              		.cfi_endproc
 441              	.LFE1446:
 443              		.section	.text.ASPEP_start,"ax",%progbits
 444              		.align	1
 445              		.global	ASPEP_start
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	ASPEP_start:
 452              	.LVL37:
 453              	.LFB1439:
 181:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 454              		.loc 1 181 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 181:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 458              		.loc 1 181 1 is_stmt 0 view .LVU145
 459 0000 10B5     		push	{r4, lr}
 460              	.LCFI2:
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 4, -8
 463              		.cfi_offset 14, -4
 464 0002 0446     		mov	r4, r0
 190:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 465              		.loc 1 190 5 is_stmt 1 view .LVU146
 466 0004 C36C     		ldr	r3, [r0, #76]
 467 0006 4069     		ldr	r0, [r0, #20]
 468              	.LVL38:
 190:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 469              		.loc 1 190 5 is_stmt 0 view .LVU147
 470 0008 9847     		blx	r3
 471              	.LVL39:
 191:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 472              		.loc 1 191 5 is_stmt 1 view .LVU148
 191:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 473              		.loc 1 191 26 is_stmt 0 view .LVU149
 474 000a 0023     		movs	r3, #0
 475 000c 84F86430 		strb	r3, [r4, #100]
 192:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 476              		.loc 1 192 5 is_stmt 1 view .LVU150
 192:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 477              		.loc 1 192 29 is_stmt 0 view .LVU151
 478 0010 84F86530 		strb	r3, [r4, #101]
 193:Src/aspep.c   ****     /* Configure UART to receive first packet*/
 479              		.loc 1 193 5 is_stmt 1 view .LVU152
 193:Src/aspep.c   ****     /* Configure UART to receive first packet*/
 480              		.loc 1 193 30 is_stmt 0 view .LVU153
 481 0014 84F86030 		strb	r3, [r4, #96]
 195:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 482              		.loc 1 195 5 is_stmt 1 view .LVU154
 483 0018 636D     		ldr	r3, [r4, #84]
 484 001a 0422     		movs	r2, #4
 485 001c 04F11C01 		add	r1, r4, #28
 486 0020 6069     		ldr	r0, [r4, #20]
ARM GAS  /tmp/cct97U3h.s 			page 25


 487 0022 9847     		blx	r3
 488              	.LVL40:
 199:Src/aspep.c   **** 
 489              		.loc 1 199 1 is_stmt 0 view .LVU155
 490 0024 10BD     		pop	{r4, pc}
 199:Src/aspep.c   **** 
 491              		.loc 1 199 1 view .LVU156
 492              		.cfi_endproc
 493              	.LFE1439:
 495              		.section	.text.ASPEP_sendBeacon,"ax",%progbits
 496              		.align	1
 497              		.global	ASPEP_sendBeacon
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	ASPEP_sendBeacon:
 504              	.LVL41:
 505              	.LFB1440:
 208:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 506              		.loc 1 208 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 208:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 510              		.loc 1 208 1 is_stmt 0 view .LVU158
 511 0000 08B5     		push	{r3, lr}
 512              	.LCFI3:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 3, -8
 515              		.cfi_offset 14, -4
 516 0002 0246     		mov	r2, r0
 217:Src/aspep.c   ****     *packet = (BEACON
 517              		.loc 1 217 5 is_stmt 1 view .LVU159
 518              	.LVL42:
 218:Src/aspep.c   ****              | (((uint32_t)capabilities->version) << 4U)
 519              		.loc 1 218 5 view .LVU160
 219:Src/aspep.c   ****              | (((uint32_t)capabilities->DATA_CRC) << 7U)
 520              		.loc 1 219 18 is_stmt 0 view .LVU161
 521 0004 91F804C0 		ldrb	ip, [r1, #4]	@ zero_extendqisi2
 223:Src/aspep.c   **** 
 522              		.loc 1 223 18 view .LVU162
 523 0008 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 223:Src/aspep.c   **** 
 524              		.loc 1 223 55 view .LVU163
 525 000a 5B05     		lsls	r3, r3, #21
 223:Src/aspep.c   **** 
 526              		.loc 1 223 14 view .LVU164
 527 000c 43EA0C13 		orr	r3, r3, ip, lsl #4
 220:Src/aspep.c   ****              | (((uint32_t)capabilities->RX_maxSize) << 8U)
 528              		.loc 1 220 18 view .LVU165
 529 0010 91F800C0 		ldrb	ip, [r1]	@ zero_extendqisi2
 223:Src/aspep.c   **** 
 530              		.loc 1 223 14 view .LVU166
 531 0014 43EACC13 		orr	r3, r3, ip, lsl #7
 221:Src/aspep.c   ****              | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 532              		.loc 1 221 18 view .LVU167
ARM GAS  /tmp/cct97U3h.s 			page 26


 533 0018 91F801C0 		ldrb	ip, [r1, #1]	@ zero_extendqisi2
 223:Src/aspep.c   **** 
 534              		.loc 1 223 14 view .LVU168
 535 001c 43EA0C23 		orr	r3, r3, ip, lsl #8
 222:Src/aspep.c   ****              | (((uint32_t)capabilities->TXA_maxSize) << 21U));
 536              		.loc 1 222 18 view .LVU169
 537 0020 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 538              	.LVL43:
 223:Src/aspep.c   **** 
 539              		.loc 1 223 14 view .LVU170
 540 0022 43EA8133 		orr	r3, r3, r1, lsl #14
 541 0026 43F00503 		orr	r3, r3, #5
 218:Src/aspep.c   ****              | (((uint32_t)capabilities->version) << 4U)
 542              		.loc 1 218 13 view .LVU171
 543 002a 42F8203F 		str	r3, [r2, #32]!
 544              	.LVL44:
 225:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 545              		.loc 1 225 5 is_stmt 1 view .LVU172
 225:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 546              		.loc 1 225 11 is_stmt 0 view .LVU173
 547 002e 0423     		movs	r3, #4
 548 0030 0021     		movs	r1, #0
 549 0032 FFF7FEFF 		bl	ASPEP_TXframeProcess
 550              	.LVL45:
 229:Src/aspep.c   **** 
 551              		.loc 1 229 1 view .LVU174
 552 0036 08BD     		pop	{r3, pc}
 553              		.cfi_endproc
 554              	.LFE1440:
 556              		.section	.text.ASPEP_sendPing,"ax",%progbits
 557              		.align	1
 558              		.global	ASPEP_sendPing
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu fpv4-sp-d16
 564              	ASPEP_sendPing:
 565              	.LVL46:
 566              	.LFB1442:
 252:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 567              		.loc 1 252 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 571              		.loc 1 252 1 is_stmt 0 view .LVU176
 572 0000 10B5     		push	{r4, lr}
 573              	.LCFI4:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 4, -8
 576              		.cfi_offset 14, -4
 261:Src/aspep.c   ****     uint8_t Nbit = pHandle->syncPacketCount & 0x1U; /* Keep only LSB */
 577              		.loc 1 261 5 is_stmt 1 view .LVU177
 578              	.LVL47:
 262:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 579              		.loc 1 262 5 view .LVU178
 263:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
ARM GAS  /tmp/cct97U3h.s 			page 27


 580              		.loc 1 263 5 view .LVU179
 264:Src/aspep.c   ****                    | (uint32_t)((uint32_t)cBit << 5U)
 581              		.loc 1 264 5 view .LVU180
 262:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 582              		.loc 1 262 13 is_stmt 0 view .LVU181
 583 0002 90F860E0 		ldrb	lr, [r0, #96]	@ zero_extendqisi2
 266:Src/aspep.c   ****                    | (uint32_t)((uint32_t)Nbit << 7U)
 584              		.loc 1 266 33 view .LVU182
 585 0006 0EF0010E 		and	lr, lr, #1
 263:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 586              		.loc 1 263 13 view .LVU183
 587 000a 90F86330 		ldrb	r3, [r0, #99]	@ zero_extendqisi2
 268:Src/aspep.c   ****                    | (uint32_t)(((uint32_t) packetNumber) << 12U);
 588              		.loc 1 268 33 view .LVU184
 589 000e 03F00F04 		and	r4, r3, #15
 269:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 590              		.loc 1 269 22 view .LVU185
 591 0012 1303     		lsls	r3, r2, #12
 269:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 592              		.loc 1 269 20 view .LVU186
 593 0014 43EA0423 		orr	r3, r3, r4, lsl #8
 594 0018 43EA0113 		orr	r3, r3, r1, lsl #4
 595 001c 43EA4113 		orr	r3, r3, r1, lsl #5
 596 0020 43EA8E13 		orr	r3, r3, lr, lsl #6
 597 0024 43EACE13 		orr	r3, r3, lr, lsl #7
 598 0028 43F00603 		orr	r3, r3, #6
 264:Src/aspep.c   ****                    | (uint32_t)((uint32_t)cBit << 5U)
 599              		.loc 1 264 13 view .LVU187
 600 002c 0246     		mov	r2, r0
 601              	.LVL48:
 264:Src/aspep.c   ****                    | (uint32_t)((uint32_t)cBit << 5U)
 602              		.loc 1 264 13 view .LVU188
 603 002e 42F8203F 		str	r3, [r2, #32]!
 604              	.LVL49:
 270:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 605              		.loc 1 270 5 is_stmt 1 view .LVU189
 270:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 606              		.loc 1 270 11 is_stmt 0 view .LVU190
 607 0032 0423     		movs	r3, #4
 608 0034 0021     		movs	r1, #0
 609              	.LVL50:
 270:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 610              		.loc 1 270 11 view .LVU191
 611 0036 FFF7FEFF 		bl	ASPEP_TXframeProcess
 612              	.LVL51:
 274:Src/aspep.c   **** 
 613              		.loc 1 274 1 view .LVU192
 614 003a 10BD     		pop	{r4, pc}
 615              		.cfi_endproc
 616              	.LFE1442:
 618              		.section	.text.ASPEP_getBuffer,"ax",%progbits
 619              		.align	1
 620              		.global	ASPEP_getBuffer
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cct97U3h.s 			page 28


 626              	ASPEP_getBuffer:
 627              	.LVL52:
 628              	.LFB1443:
 286:Src/aspep.c   ****   bool result = true;
 629              		.loc 1 286 1 is_stmt 1 view -0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 634              		.loc 1 287 3 view .LVU194
 296:Src/aspep.c   **** 
 635              		.loc 1 296 5 view .LVU195
 298:Src/aspep.c   ****     {
 636              		.loc 1 298 5 view .LVU196
 298:Src/aspep.c   ****     {
 637              		.loc 1 298 8 is_stmt 0 view .LVU197
 638 0000 0A2A     		cmp	r2, #10
 639 0002 09D0     		beq	.L48
 312:Src/aspep.c   ****       {
 640              		.loc 1 312 7 is_stmt 1 view .LVU198
 312:Src/aspep.c   ****       {
 641              		.loc 1 312 10 is_stmt 0 view .LVU199
 642 0004 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 643 0008 012B     		cmp	r3, #1
 644 000a 13D9     		bls	.L43
 312:Src/aspep.c   ****       {
 645              		.loc 1 312 53 discriminator 1 view .LVU200
 646 000c 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 647 0010 012B     		cmp	r3, #1
 648 0012 1AD9     		bls	.L49
 314:Src/aspep.c   ****       }
 649              		.loc 1 314 16 view .LVU201
 650 0014 0020     		movs	r0, #0
 651              	.LVL53:
 339:Src/aspep.c   ****       }
 652              		.loc 1 339 9 is_stmt 1 view .LVU202
 345:Src/aspep.c   **** }
 653              		.loc 1 345 3 view .LVU203
 346:Src/aspep.c   **** 
 654              		.loc 1 346 1 is_stmt 0 view .LVU204
 655 0016 7047     		bx	lr
 656              	.LVL54:
 657              	.L48:
 300:Src/aspep.c   ****       {
 658              		.loc 1 300 7 is_stmt 1 view .LVU205
 300:Src/aspep.c   ****       {
 659              		.loc 1 300 10 is_stmt 0 view .LVU206
 660 0018 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 661 001c 012B     		cmp	r3, #1
 662 001e 01D9     		bls	.L50
 307:Src/aspep.c   ****       }
 663              		.loc 1 307 16 view .LVU207
 664 0020 0020     		movs	r0, #0
 665              	.LVL55:
 307:Src/aspep.c   ****       }
 666              		.loc 1 307 16 view .LVU208
ARM GAS  /tmp/cct97U3h.s 			page 29


 667 0022 7047     		bx	lr
 668              	.LVL56:
 669              	.L50:
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 670              		.loc 1 302 9 is_stmt 1 view .LVU209
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 671              		.loc 1 302 19 is_stmt 0 view .LVU210
 672 0024 836A     		ldr	r3, [r0, #40]
 673 0026 0433     		adds	r3, r3, #4
 302:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 674              		.loc 1 302 17 view .LVU211
 675 0028 0B60     		str	r3, [r1]
 303:Src/aspep.c   ****       }
 676              		.loc 1 303 9 is_stmt 1 view .LVU212
 303:Src/aspep.c   ****       }
 677              		.loc 1 303 35 is_stmt 0 view .LVU213
 678 002a 0123     		movs	r3, #1
 679 002c 80F82E30 		strb	r3, [r0, #46]
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 680              		.loc 1 287 8 view .LVU214
 681 0030 1846     		mov	r0, r3
 682              	.LVL57:
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 683              		.loc 1 287 8 view .LVU215
 684 0032 7047     		bx	lr
 685              	.LVL58:
 686              	.L43:
 318:Src/aspep.c   ****         {
 687              		.loc 1 318 9 is_stmt 1 view .LVU216
 320:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 688              		.loc 1 320 11 view .LVU217
 320:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 689              		.loc 1 320 39 is_stmt 0 view .LVU218
 690 0034 0123     		movs	r3, #1
 691 0036 80F83630 		strb	r3, [r0, #54]
 321:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 692              		.loc 1 321 11 is_stmt 1 view .LVU219
 321:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 693              		.loc 1 321 45 is_stmt 0 view .LVU220
 694 003a 00F13002 		add	r2, r0, #48
 695              	.LVL59:
 321:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 696              		.loc 1 321 43 view .LVU221
 697 003e 0264     		str	r2, [r0, #64]
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 698              		.loc 1 322 11 is_stmt 1 view .LVU222
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 699              		.loc 1 322 21 is_stmt 0 view .LVU223
 700 0040 026B     		ldr	r2, [r0, #48]
 701 0042 0432     		adds	r2, r2, #4
 322:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 702              		.loc 1 322 19 view .LVU224
 703 0044 0A60     		str	r2, [r1]
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 704              		.loc 1 287 8 view .LVU225
 705 0046 1846     		mov	r0, r3
 706              	.LVL60:
ARM GAS  /tmp/cct97U3h.s 			page 30


 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 707              		.loc 1 287 8 view .LVU226
 708 0048 7047     		bx	lr
 709              	.LVL61:
 710              	.L49:
 318:Src/aspep.c   ****         {
 711              		.loc 1 318 9 is_stmt 1 view .LVU227
 327:Src/aspep.c   ****         {
 712              		.loc 1 327 14 view .LVU228
 329:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 713              		.loc 1 329 11 view .LVU229
 329:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 714              		.loc 1 329 39 is_stmt 0 view .LVU230
 715 004a 0123     		movs	r3, #1
 716 004c 80F83E30 		strb	r3, [r0, #62]
 330:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 717              		.loc 1 330 11 is_stmt 1 view .LVU231
 330:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 718              		.loc 1 330 45 is_stmt 0 view .LVU232
 719 0050 00F13802 		add	r2, r0, #56
 720              	.LVL62:
 330:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 721              		.loc 1 330 43 view .LVU233
 722 0054 0264     		str	r2, [r0, #64]
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 723              		.loc 1 331 11 is_stmt 1 view .LVU234
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 724              		.loc 1 331 21 is_stmt 0 view .LVU235
 725 0056 826B     		ldr	r2, [r0, #56]
 726 0058 0432     		adds	r2, r2, #4
 331:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 727              		.loc 1 331 19 view .LVU236
 728 005a 0A60     		str	r2, [r1]
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 729              		.loc 1 287 8 view .LVU237
 730 005c 1846     		mov	r0, r3
 731              	.LVL63:
 287:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 732              		.loc 1 287 8 view .LVU238
 733 005e 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE1443:
 737              		.section	.text.ASPEP_sendPacket,"ax",%progbits
 738              		.align	1
 739              		.global	ASPEP_sendPacket
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	ASPEP_sendPacket:
 746              	.LVL64:
 747              	.LFB1445:
 405:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 748              		.loc 1 405 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cct97U3h.s 			page 31


 405:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 752              		.loc 1 405 1 is_stmt 0 view .LVU240
 753 0000 08B5     		push	{r3, lr}
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 3, -8
 757              		.cfi_offset 14, -4
 758 0002 8C46     		mov	ip, r1
 759 0004 1946     		mov	r1, r3
 760              	.LVL65:
 406:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 761              		.loc 1 406 3 is_stmt 1 view .LVU241
 415:Src/aspep.c   ****     uint32_t tmpHeader;
 762              		.loc 1 415 5 view .LVU242
 416:Src/aspep.c   ****     uint16_t txDataLengthTemp;
 763              		.loc 1 416 5 view .LVU243
 417:Src/aspep.c   ****     uint8_t *packet;
 764              		.loc 1 417 5 view .LVU244
 418:Src/aspep.c   **** 
 765              		.loc 1 418 5 view .LVU245
 420:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 766              		.loc 1 420 5 view .LVU246
 421:Src/aspep.c   **** 
 767              		.loc 1 421 5 view .LVU247
 423:Src/aspep.c   ****     {
 768              		.loc 1 423 5 view .LVU248
 423:Src/aspep.c   ****     {
 769              		.loc 1 423 8 is_stmt 0 view .LVU249
 770 0006 90F86430 		ldrb	r3, [r0, #100]	@ zero_extendqisi2
 771              	.LVL66:
 423:Src/aspep.c   ****     {
 772              		.loc 1 423 8 view .LVU250
 773 000a 022B     		cmp	r3, #2
 774 000c 01D0     		beq	.L58
 457:Src/aspep.c   ****     }
 775              		.loc 1 457 14 view .LVU251
 776 000e 0220     		movs	r0, #2
 777              	.LVL67:
 778              	.L52:
 462:Src/aspep.c   **** }
 779              		.loc 1 462 3 is_stmt 1 view .LVU252
 463:Src/aspep.c   **** 
 780              		.loc 1 463 1 is_stmt 0 view .LVU253
 781 0010 08BD     		pop	{r3, pc}
 782              	.LVL68:
 783              	.L58:
 427:Src/aspep.c   ****       header = (uint32_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 784              		.loc 1 427 7 is_stmt 1 view .LVU254
 428:Src/aspep.c   ****       header--; /* Header ues 4*8 bits on top of txBuffer*/
 785              		.loc 1 428 7 view .LVU255
 429:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 786              		.loc 1 429 7 view .LVU256
 430:Src/aspep.c   ****       *header = tmpHeader;
 787              		.loc 1 430 7 view .LVU257
 431:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 788              		.loc 1 431 7 view .LVU258
 430:Src/aspep.c   ****       *header = tmpHeader;
ARM GAS  /tmp/cct97U3h.s 			page 32


 789              		.loc 1 430 17 is_stmt 0 view .LVU259
 790 0012 41EA0213 		orr	r3, r1, r2, lsl #4
 431:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 791              		.loc 1 431 15 view .LVU260
 792 0016 4CF8043C 		str	r3, [ip, #-4]
 432:Src/aspep.c   ****       {
 793              		.loc 1 432 7 is_stmt 1 view .LVU261
 432:Src/aspep.c   ****       {
 794              		.loc 1 432 10 is_stmt 0 view .LVU262
 795 001a 90F86C30 		ldrb	r3, [r0, #108]	@ zero_extendqisi2
 796 001e 012B     		cmp	r3, #1
 797 0020 0CD0     		beq	.L59
 798              	.LVL69:
 799              	.L53:
 439:Src/aspep.c   ****       {
 800              		.loc 1 439 7 is_stmt 1 view .LVU263
 439:Src/aspep.c   ****       {
 801              		.loc 1 439 10 is_stmt 0 view .LVU264
 802 0022 0A29     		cmp	r1, #10
 803 0024 03D1     		bne	.L54
 441:Src/aspep.c   ****         {
 804              		.loc 1 441 9 is_stmt 1 view .LVU265
 441:Src/aspep.c   ****         {
 805              		.loc 1 441 12 is_stmt 0 view .LVU266
 806 0026 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 807 0028 A3B1     		cbz	r3, .L56
 443:Src/aspep.c   ****         }
 808              		.loc 1 443 11 is_stmt 1 view .LVU267
 443:Src/aspep.c   ****         }
 809              		.loc 1 443 43 is_stmt 0 view .LVU268
 810 002a 0023     		movs	r3, #0
 811 002c 0374     		strb	r3, [r0, #16]
 450:Src/aspep.c   ****       {
 812              		.loc 1 450 7 is_stmt 1 view .LVU269
 813              	.L54:
 814              	.LVL70:
 452:Src/aspep.c   ****       }
 815              		.loc 1 452 9 view .LVU270
 452:Src/aspep.c   ****       }
 816              		.loc 1 452 18 is_stmt 0 view .LVU271
 817 002e 0432     		adds	r2, r2, #4
 818              	.LVL71:
 452:Src/aspep.c   ****       }
 819              		.loc 1 452 18 view .LVU272
 820 0030 93B2     		uxth	r3, r2
 821 0032 ACF10402 		sub	r2, ip, #4
 822 0036 FFF7FEFF 		bl	ASPEP_TXframeProcess
 823              	.LVL72:
 452:Src/aspep.c   ****       }
 824              		.loc 1 452 18 view .LVU273
 825 003a E9E7     		b	.L52
 826              	.LVL73:
 827              	.L59:
 435:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 828              		.loc 1 435 9 is_stmt 1 view .LVU274
 435:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 829              		.loc 1 435 34 is_stmt 0 view .LVU275
ARM GAS  /tmp/cct97U3h.s 			page 33


 830 003c CA23     		movs	r3, #202
 831 003e 0CF80230 		strb	r3, [ip, r2]
 436:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 832              		.loc 1 436 9 is_stmt 1 view .LVU276
 436:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 833              		.loc 1 436 39 is_stmt 0 view .LVU277
 834 0042 0CEB0203 		add	r3, ip, r2
 835 0046 4FF0FE0E 		mov	lr, #254
 836 004a 83F801E0 		strb	lr, [r3, #1]
 437:Src/aspep.c   ****       }
 837              		.loc 1 437 9 is_stmt 1 view .LVU278
 437:Src/aspep.c   ****       }
 838              		.loc 1 437 26 is_stmt 0 view .LVU279
 839 004e 0232     		adds	r2, r2, #2
 840              	.LVL74:
 437:Src/aspep.c   ****       }
 841              		.loc 1 437 26 view .LVU280
 842 0050 92B2     		uxth	r2, r2
 843              	.LVL75:
 437:Src/aspep.c   ****       }
 844              		.loc 1 437 26 view .LVU281
 845 0052 E6E7     		b	.L53
 846              	.L56:
 447:Src/aspep.c   ****         }
 847              		.loc 1 447 18 view .LVU282
 848 0054 0120     		movs	r0, #1
 849              	.LVL76:
 447:Src/aspep.c   ****         }
 850              		.loc 1 447 18 view .LVU283
 851 0056 DBE7     		b	.L52
 852              		.cfi_endproc
 853              	.LFE1445:
 855              		.section	.text.ASPEP_HWDataTransmittedIT,"ax",%progbits
 856              		.align	1
 857              		.global	ASPEP_HWDataTransmittedIT
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	ASPEP_HWDataTransmittedIT:
 864              	.LVL77:
 865              	.LFB1447:
 581:Src/aspep.c   **** 
 582:Src/aspep.c   **** /**
 583:Src/aspep.c   ****   * @brief  Frees previously locked buffer and/or locks the next pending buffer. Once locked, sends
 584:Src/aspep.c   ****   *
 585:Src/aspep.c   ****   * Called as soon as previous packet transfer is completed, pHandle->lockBuffer is set before pack
 586:Src/aspep.c   ****   * Therefore, there is no need to protect this ISR against another higher priority ISR (HF Task).
 587:Src/aspep.c   ****   *
 588:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 589:Src/aspep.c   ****   */
 590:Src/aspep.c   **** void ASPEP_HWDataTransmittedIT(ASPEP_Handle_t *pHandle)
 591:Src/aspep.c   **** {
 866              		.loc 1 591 1 is_stmt 1 view -0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cct97U3h.s 			page 34


 870              		.loc 1 591 1 is_stmt 0 view .LVU285
 871 0000 10B5     		push	{r4, lr}
 872              	.LCFI6:
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 4, -8
 875              		.cfi_offset 14, -4
 876 0002 0446     		mov	r4, r0
 592:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 593:Src/aspep.c   ****   if (NULL == pHandle)
 594:Src/aspep.c   ****   {
 595:Src/aspep.c   ****     /* Nothing to do */
 596:Src/aspep.c   ****   }
 597:Src/aspep.c   ****   else
 598:Src/aspep.c   ****   {
 599:Src/aspep.c   **** #endif
 600:Src/aspep.c   ****     /* First free previous readLock buffer */
 601:Src/aspep.c   ****     if (pHandle->ctrlBuffer.state == readLock)
 877              		.loc 1 601 5 is_stmt 1 view .LVU286
 878              		.loc 1 601 8 is_stmt 0 view .LVU287
 879 0004 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 880 0008 032B     		cmp	r3, #3
 881 000a 15D0     		beq	.L71
 882              	.LBB30:
 602:Src/aspep.c   ****     {
 603:Src/aspep.c   ****       pHandle->ctrlBuffer.state = available;
 604:Src/aspep.c   ****     }
 605:Src/aspep.c   ****     else /* if previous buffer was not ASPEP_CTRL, then the buffer locked is a MCTL_Buff_t */
 606:Src/aspep.c   ****     {
 607:Src/aspep.c   ****       MCTL_Buff_t *tempBuff = (MCTL_Buff_t *)pHandle->lockBuffer; //cstat !MISRAC2012-Rule-11.5
 883              		.loc 1 607 7 is_stmt 1 view .LVU288
 884              		.loc 1 607 20 is_stmt 0 view .LVU289
 885 000c 836C     		ldr	r3, [r0, #72]
 886              	.LVL78:
 608:Src/aspep.c   ****       tempBuff->state = available;
 887              		.loc 1 608 7 is_stmt 1 view .LVU290
 888              		.loc 1 608 23 is_stmt 0 view .LVU291
 889 000e 0022     		movs	r2, #0
 890 0010 9A71     		strb	r2, [r3, #6]
 891              	.LBE30:
 609:Src/aspep.c   ****     }
 610:Src/aspep.c   ****     if (pHandle->syncBuffer.state == pending)
 892              		.loc 1 610 5 is_stmt 1 view .LVU292
 893              		.loc 1 610 8 is_stmt 0 view .LVU293
 894 0012 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 895              	.LVL79:
 896              		.loc 1 610 8 view .LVU294
 897 0016 022B     		cmp	r3, #2
 898 0018 2CD0     		beq	.L62
 611:Src/aspep.c   ****     {
 612:Src/aspep.c   ****       pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 613:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 614:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 615:Src/aspep.c   ****     }
 616:Src/aspep.c   ****     /* Second prepare transfer of pending buffer */
 617:Src/aspep.c   ****     else if (pHandle->ctrlBuffer.state == pending)
 899              		.loc 1 617 10 is_stmt 1 view .LVU295
 900              		.loc 1 617 13 is_stmt 0 view .LVU296
ARM GAS  /tmp/cct97U3h.s 			page 35


 901 001a 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 902 001e 022B     		cmp	r3, #2
 903 0020 11D1     		bne	.L63
 618:Src/aspep.c   ****     {
 619:Src/aspep.c   ****       pHandle->lockBuffer = (void *)(&pHandle ->ctrlBuffer);
 904              		.loc 1 619 7 is_stmt 1 view .LVU297
 905              		.loc 1 619 38 is_stmt 0 view .LVU298
 906 0022 00F12001 		add	r1, r0, #32
 907              		.loc 1 619 27 view .LVU299
 908 0026 8164     		str	r1, [r0, #72]
 620:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 909              		.loc 1 620 7 is_stmt 1 view .LVU300
 910 0028 836D     		ldr	r3, [r0, #88]
 911 002a 0422     		movs	r2, #4
 912 002c 4069     		ldr	r0, [r0, #20]
 913              	.LVL80:
 914              		.loc 1 620 7 is_stmt 0 view .LVU301
 915 002e 9847     		blx	r3
 916              	.LVL81:
 621:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 917              		.loc 1 621 7 is_stmt 1 view .LVU302
 918              		.loc 1 621 33 is_stmt 0 view .LVU303
 919 0030 0323     		movs	r3, #3
 920 0032 84F82430 		strb	r3, [r4, #36]
 921 0036 2FE0     		b	.L60
 922              	.LVL82:
 923              	.L71:
 603:Src/aspep.c   ****     }
 924              		.loc 1 603 7 is_stmt 1 view .LVU304
 603:Src/aspep.c   ****     }
 925              		.loc 1 603 33 is_stmt 0 view .LVU305
 926 0038 0023     		movs	r3, #0
 927 003a 80F82430 		strb	r3, [r0, #36]
 610:Src/aspep.c   ****     {
 928              		.loc 1 610 5 is_stmt 1 view .LVU306
 610:Src/aspep.c   ****     {
 929              		.loc 1 610 8 is_stmt 0 view .LVU307
 930 003e 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 931 0042 022B     		cmp	r3, #2
 932 0044 16D0     		beq	.L62
 933              	.L63:
 622:Src/aspep.c   ****     }
 623:Src/aspep.c   ****     else
 624:Src/aspep.c   ****     {
 625:Src/aspep.c   ****       __disable_irq();
 934              		.loc 1 625 7 is_stmt 1 view .LVU308
 935              	.LBB31:
 936              	.LBI31:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 937              		.loc 2 207 27 view .LVU309
 938              	.LBB32:
 939              		.loc 2 209 3 view .LVU310
 940              		.syntax unified
 941              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 942 0046 72B6     		cpsid i
 943              	@ 0 "" 2
 944              		.thumb
ARM GAS  /tmp/cct97U3h.s 			page 36


 945              		.syntax unified
 946              	.LBE32:
 947              	.LBE31:
 626:Src/aspep.c   ****       if (pHandle->asyncNextBuffer != NULL)
 948              		.loc 1 626 7 view .LVU311
 949              		.loc 1 626 18 is_stmt 0 view .LVU312
 950 0048 636C     		ldr	r3, [r4, #68]
 951              		.loc 1 626 10 view .LVU313
 952 004a 33B3     		cbz	r3, .L66
 627:Src/aspep.c   ****       {
 628:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->asyncNextBuffer;
 953              		.loc 1 628 9 is_stmt 1 view .LVU314
 954              		.loc 1 628 29 is_stmt 0 view .LVU315
 955 004c A364     		str	r3, [r4, #72]
 629:Src/aspep.c   ****         pHandle->asyncNextBuffer->state = readLock;
 956              		.loc 1 629 9 is_stmt 1 view .LVU316
 957              		.loc 1 629 41 is_stmt 0 view .LVU317
 958 004e 0322     		movs	r2, #3
 959 0050 9A71     		strb	r2, [r3, #6]
 630:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 631:Src/aspep.c   ****         pHandle->asyncNextBuffer->SentNumber++;
 632:Src/aspep.c   **** #endif
 633:Src/aspep.c   ****         pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->asyncNextBuffer->buffer, pHandle->asyn
 960              		.loc 1 633 9 is_stmt 1 view .LVU318
 961              		.loc 1 633 60 is_stmt 0 view .LVU319
 962 0052 636C     		ldr	r3, [r4, #68]
 963              		.loc 1 633 9 view .LVU320
 964 0054 9A88     		ldrh	r2, [r3, #4]
 965 0056 1968     		ldr	r1, [r3]
 966 0058 6069     		ldr	r0, [r4, #20]
 967              	.LVL83:
 968              		.loc 1 633 9 view .LVU321
 969 005a A36D     		ldr	r3, [r4, #88]
 970 005c 9847     		blx	r3
 971              	.LVL84:
 634:Src/aspep.c   ****         /* If one Async buffer is still pending, assign it to the asyncNextBuffer pointer*/
 635:Src/aspep.c   ****         if ((pHandle->asyncBufferA.state == pending) || (pHandle->asyncBufferB.state == pending))
 972              		.loc 1 635 9 is_stmt 1 view .LVU322
 973              		.loc 1 635 12 is_stmt 0 view .LVU323
 974 005e 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 975 0062 022B     		cmp	r3, #2
 976 0064 12D0     		beq	.L67
 977              		.loc 1 635 54 discriminator 1 view .LVU324
 978 0066 94F83E30 		ldrb	r3, [r4, #62]	@ zero_extendqisi2
 979 006a 022B     		cmp	r3, #2
 980 006c 0ED0     		beq	.L67
 636:Src/aspep.c   ****         {
 637:Src/aspep.c   ****           //cstat !MISRAC2012-Rule-11.4
 638:Src/aspep.c   ****           uint32_t temp = (uint32_t)&pHandle->asyncBufferA + (uint32_t)&pHandle->asyncBufferB
 639:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 640:Src/aspep.c   ****           pHandle->asyncNextBuffer = (MCTL_Buff_t *) temp; //cstat !MISRAC2012-Rule-11.4
 641:Src/aspep.c   ****         }
 642:Src/aspep.c   ****         else
 643:Src/aspep.c   ****         {
 644:Src/aspep.c   ****           pHandle->asyncNextBuffer = NULL;
 981              		.loc 1 644 11 is_stmt 1 view .LVU325
 982              		.loc 1 644 36 is_stmt 0 view .LVU326
ARM GAS  /tmp/cct97U3h.s 			page 37


 983 006e 0023     		movs	r3, #0
 984 0070 6364     		str	r3, [r4, #68]
 985 0072 10E0     		b	.L69
 986              	.LVL85:
 987              	.L62:
 612:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 988              		.loc 1 612 7 is_stmt 1 view .LVU327
 612:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 989              		.loc 1 612 37 is_stmt 0 view .LVU328
 990 0074 04F12803 		add	r3, r4, #40
 612:Src/aspep.c   ****       pHandle->fASPEP_cfg_trans(pHandle->ASPEPIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.l
 991              		.loc 1 612 27 view .LVU329
 992 0078 A364     		str	r3, [r4, #72]
 613:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 993              		.loc 1 613 7 is_stmt 1 view .LVU330
 994 007a A36D     		ldr	r3, [r4, #88]
 995 007c A28D     		ldrh	r2, [r4, #44]
 996 007e A16A     		ldr	r1, [r4, #40]
 997 0080 6069     		ldr	r0, [r4, #20]
 998              	.LVL86:
 613:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 999              		.loc 1 613 7 is_stmt 0 view .LVU331
 1000 0082 9847     		blx	r3
 1001              	.LVL87:
 614:Src/aspep.c   ****     }
 1002              		.loc 1 614 7 is_stmt 1 view .LVU332
 614:Src/aspep.c   ****     }
 1003              		.loc 1 614 33 is_stmt 0 view .LVU333
 1004 0084 0323     		movs	r3, #3
 1005 0086 84F82E30 		strb	r3, [r4, #46]
 1006 008a 05E0     		b	.L60
 1007              	.L67:
 1008              	.LBB33:
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1009              		.loc 1 638 11 is_stmt 1 view .LVU334
 1010              	.LVL88:
 640:Src/aspep.c   ****         }
 1011              		.loc 1 640 11 view .LVU335
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1012              		.loc 1 638 72 is_stmt 0 view .LVU336
 1013 008c 6300     		lsls	r3, r4, #1
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1014              		.loc 1 638 60 view .LVU337
 1015 008e 6833     		adds	r3, r3, #104
 638:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1016              		.loc 1 638 20 view .LVU338
 1017 0090 626C     		ldr	r2, [r4, #68]
 1018 0092 9B1A     		subs	r3, r3, r2
 640:Src/aspep.c   ****         }
 1019              		.loc 1 640 36 view .LVU339
 1020 0094 6364     		str	r3, [r4, #68]
 1021              	.LVL89:
 1022              	.L69:
 640:Src/aspep.c   ****         }
 1023              		.loc 1 640 36 view .LVU340
 1024              	.LBE33:
 645:Src/aspep.c   ****         }
ARM GAS  /tmp/cct97U3h.s 			page 38


 646:Src/aspep.c   ****       }
 647:Src/aspep.c   ****       else /* No TX packet are pending, HW resource is free*/
 648:Src/aspep.c   ****       {
 649:Src/aspep.c   ****         pHandle->lockBuffer = NULL;
 650:Src/aspep.c   ****       }
 651:Src/aspep.c   ****       __enable_irq();
 1025              		.loc 1 651 7 is_stmt 1 view .LVU341
 1026              	.LBB34:
 1027              	.LBI34:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1028              		.loc 2 196 27 view .LVU342
 1029              	.LBB35:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1030              		.loc 2 198 3 view .LVU343
 1031              		.syntax unified
 1032              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1033 0096 62B6     		cpsie i
 1034              	@ 0 "" 2
 1035              		.thumb
 1036              		.syntax unified
 1037              	.L60:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1038              		.loc 2 198 3 is_stmt 0 view .LVU344
 1039              	.LBE35:
 1040              	.LBE34:
 652:Src/aspep.c   ****     }
 653:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 654:Src/aspep.c   ****   }
 655:Src/aspep.c   **** #endif
 656:Src/aspep.c   **** }
 1041              		.loc 1 656 1 view .LVU345
 1042 0098 10BD     		pop	{r4, pc}
 1043              	.LVL90:
 1044              	.L66:
 649:Src/aspep.c   ****       }
 1045              		.loc 1 649 9 is_stmt 1 view .LVU346
 649:Src/aspep.c   ****       }
 1046              		.loc 1 649 29 is_stmt 0 view .LVU347
 1047 009a 0023     		movs	r3, #0
 1048 009c A364     		str	r3, [r4, #72]
 1049 009e FAE7     		b	.L69
 1050              		.cfi_endproc
 1051              	.LFE1447:
 1053              		.section	.text.ASPEP_RXframeProcess,"ax",%progbits
 1054              		.align	1
 1055              		.global	ASPEP_RXframeProcess
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu fpv4-sp-d16
 1061              	ASPEP_RXframeProcess:
 1062              	.LVL91:
 1063              	.LFB1448:
 657:Src/aspep.c   **** 
 658:Src/aspep.c   **** /**
 659:Src/aspep.c   ****   * @brief  Updates ASPEP state depending on received packet from Controller and sends a response a
 660:Src/aspep.c   ****   *
ARM GAS  /tmp/cct97U3h.s 			page 39


 661:Src/aspep.c   ****   * ASPEP protocol defined in section 4.4.1 Connection Procedure of Motor Control Protocol Suite of
 662:Src/aspep.c   ****   *
 663:Src/aspep.c   ****   * @param  *pSupHandle Handler of the current instance of the MCTL component
 664:Src/aspep.c   ****   * @param  *packetLength Length of the packet to be processed
 665:Src/aspep.c   ****   *
 666:Src/aspep.c   ****   * @return Returns the buffer of data transmitted by the MCP controller device
 667:Src/aspep.c   ****   */
 668:Src/aspep.c   **** uint8_t *ASPEP_RXframeProcess(MCTL_Handle_t *pSupHandle, uint16_t *packetLength)
 669:Src/aspep.c   **** {
 1064              		.loc 1 669 1 is_stmt 1 view -0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 1068              		.loc 1 669 1 is_stmt 0 view .LVU349
 1069 0000 38B5     		push	{r3, r4, r5, lr}
 1070              	.LCFI7:
 1071              		.cfi_def_cfa_offset 16
 1072              		.cfi_offset 3, -16
 1073              		.cfi_offset 4, -12
 1074              		.cfi_offset 5, -8
 1075              		.cfi_offset 14, -4
 1076 0002 0446     		mov	r4, r0
 670:Src/aspep.c   ****   uint8_t *result = NULL; //cstat !MISRAC2012-Rule-8.13
 1077              		.loc 1 670 3 is_stmt 1 view .LVU350
 1078              	.LVL92:
 671:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 672:Src/aspep.c   ****   if ((NULL == pSupHandle) || (NULL == packetLength))
 673:Src/aspep.c   ****   {
 674:Src/aspep.c   ****     /* Nothing to do */
 675:Src/aspep.c   ****   }
 676:Src/aspep.c   ****   else
 677:Src/aspep.c   ****   {
 678:Src/aspep.c   **** #endif
 679:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 1079              		.loc 1 679 5 view .LVU351
 680:Src/aspep.c   ****     uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 1080              		.loc 1 680 5 view .LVU352
 1081              		.loc 1 680 14 is_stmt 0 view .LVU353
 1082 0004 C269     		ldr	r2, [r0, #28]
 1083              	.LVL93:
 681:Src/aspep.c   ****     uint16_t packetNumber;
 1084              		.loc 1 681 5 is_stmt 1 view .LVU354
 682:Src/aspep.c   **** #if VALID_CRC_DATA
 683:Src/aspep.c   ****     bool validCRCData = true;
 684:Src/aspep.c   **** #endif
 685:Src/aspep.c   ****     *packetLength = 0;
 1085              		.loc 1 685 5 view .LVU355
 1086              		.loc 1 685 19 is_stmt 0 view .LVU356
 1087 0006 0023     		movs	r3, #0
 1088 0008 0B80     		strh	r3, [r1]	@ movhi
 686:Src/aspep.c   ****     if (pHandle->NewPacketAvailable)
 1089              		.loc 1 686 5 is_stmt 1 view .LVU357
 1090              		.loc 1 686 8 is_stmt 0 view .LVU358
 1091 000a 90F86130 		ldrb	r3, [r0, #97]	@ zero_extendqisi2
 1092 000e 002B     		cmp	r3, #0
 1093 0010 00F08280 		beq	.L73
 687:Src/aspep.c   ****     {
ARM GAS  /tmp/cct97U3h.s 			page 40


 688:Src/aspep.c   ****       pHandle->NewPacketAvailable = false; /* Consumes new packet*/
 1094              		.loc 1 688 7 is_stmt 1 view .LVU359
 1095              		.loc 1 688 35 is_stmt 0 view .LVU360
 1096 0014 0023     		movs	r3, #0
 1097 0016 80F86130 		strb	r3, [r0, #97]
 689:Src/aspep.c   ****       switch (pHandle->ASPEP_State)
 1098              		.loc 1 689 7 is_stmt 1 view .LVU361
 1099              		.loc 1 689 22 is_stmt 0 view .LVU362
 1100 001a 90F86430 		ldrb	r3, [r0, #100]	@ zero_extendqisi2
 1101              		.loc 1 689 7 view .LVU363
 1102 001e 012B     		cmp	r3, #1
 1103 0020 35D0     		beq	.L74
 1104 0022 022B     		cmp	r3, #2
 1105 0024 51D0     		beq	.L75
 1106 0026 43B1     		cbz	r3, .L90
 1107 0028 0025     		movs	r5, #0
 1108              	.LVL94:
 1109              	.L76:
 690:Src/aspep.c   ****       {
 691:Src/aspep.c   ****         case ASPEP_IDLE:
 692:Src/aspep.c   ****         {
 693:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 694:Src/aspep.c   ****           {
 695:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == true)
 696:Src/aspep.c   ****             {
 697:Src/aspep.c   ****               /* Controller capabilities match performer capabilities.*/
 698:Src/aspep.c   ****               pSupHandle->txSyncMaxPayload = (pHandle->Capabilities.TXS_maxSize + (uint16_t)1U) * (
 699:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 700:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 701:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 702:Src/aspep.c   ****             }
 703:Src/aspep.c   ****             else
 704:Src/aspep.c   ****             {
 705:Src/aspep.c   ****               /* Nothing to do, controller has to send back new beacon with matching capabilities *
 706:Src/aspep.c   ****             }
 707:Src/aspep.c   ****             /* Beacon Packet must be answered*/
 708:Src/aspep.c   ****             ASPEP_sendBeacon(pHandle, &pHandle->Capabilities);
 709:Src/aspep.c   ****           }
 710:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 711:Src/aspep.c   ****           {
 712:Src/aspep.c   ****             /* In Listening for controller performer, */
 713:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 714:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_RESET, packetNumber);
 715:Src/aspep.c   ****           }
 716:Src/aspep.c   ****           else
 717:Src/aspep.c   ****           {
 718:Src/aspep.c   ****             /* Nothing to do */
 719:Src/aspep.c   ****           }
 720:Src/aspep.c   ****           break;
 721:Src/aspep.c   ****         }
 722:Src/aspep.c   **** 
 723:Src/aspep.c   ****         case ASPEP_CONFIGURED:
 724:Src/aspep.c   ****         {
 725:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 726:Src/aspep.c   ****           {
 727:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == false)
 728:Src/aspep.c   ****             {
ARM GAS  /tmp/cct97U3h.s 			page 41


 729:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_IDLE;
 730:Src/aspep.c   ****             }
 731:Src/aspep.c   ****             else
 732:Src/aspep.c   ****             {
 733:Src/aspep.c   ****               /* Nothing to do */
 734:Src/aspep.c   ****             }
 735:Src/aspep.c   **** 
 736:Src/aspep.c   ****             ASPEP_sendBeacon (pHandle, &pHandle->Capabilities);
 737:Src/aspep.c   ****           }
 738:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 739:Src/aspep.c   ****           {
 740:Src/aspep.c   ****             /* In Listening for controller performer, */
 741:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 742:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 743:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 744:Src/aspep.c   ****           }
 745:Src/aspep.c   ****           else
 746:Src/aspep.c   ****           {
 747:Src/aspep.c   ****             /* Nothing to do */
 748:Src/aspep.c   ****           }
 749:Src/aspep.c   ****           break;
 750:Src/aspep.c   ****         }
 751:Src/aspep.c   **** 
 752:Src/aspep.c   ****         case ASPEP_CONNECTED:
 753:Src/aspep.c   ****         {
 754:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 755:Src/aspep.c   ****           {
 756:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == false)
 757:Src/aspep.c   ****             {
 758:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_IDLE;
 759:Src/aspep.c   ****             }
 760:Src/aspep.c   ****             else
 761:Src/aspep.c   ****             {
 762:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 763:Src/aspep.c   ****             }
 764:Src/aspep.c   ****             ASPEP_sendBeacon(pHandle, &pHandle->Capabilities);
 765:Src/aspep.c   ****           }
 766:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 767:Src/aspep.c   ****           {
 768:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 769:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 770:Src/aspep.c   ****           }
 771:Src/aspep.c   ****           else if (DATA_PACKET == pHandle->rxPacketType)
 772:Src/aspep.c   ****           {
 773:Src/aspep.c   **** #if VALID_CRC_DATA
 774:Src/aspep.c   ****             if (validCRCData)
 775:Src/aspep.c   ****             {
 776:Src/aspep.c   **** #endif
 777:Src/aspep.c   ****               pHandle->syncPacketCount++; /* this counter is incremented at each valid data packet 
 778:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 779:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 780:Src/aspep.c   ****               result = pHandle->rxBuffer;
 781:Src/aspep.c   **** #if VALID_CRC_DATA
 782:Src/aspep.c   ****             }
 783:Src/aspep.c   ****             else
 784:Src/aspep.c   ****             {
 785:Src/aspep.c   ****               ASPEP_sendNack (pHandle, ASPEP_BAD_CRC_DATA);
ARM GAS  /tmp/cct97U3h.s 			page 42


 786:Src/aspep.c   ****             }
 787:Src/aspep.c   **** #endif
 788:Src/aspep.c   ****           }
 789:Src/aspep.c   ****           else
 790:Src/aspep.c   ****           {
 791:Src/aspep.c   ****             /* This condition is not reachable because already filtred by NewPacketAvailable */
 792:Src/aspep.c   ****             /* ASPEP_sendNack (pHandle, ASPEP_BAD_PACKET_TYPE) */
 793:Src/aspep.c   ****           }
 794:Src/aspep.c   ****           break;
 795:Src/aspep.c   ****         }
 796:Src/aspep.c   **** 
 797:Src/aspep.c   ****         default:
 798:Src/aspep.c   ****           break;
 799:Src/aspep.c   ****       }
 800:Src/aspep.c   ****       /* The valid received packet is now safely consumes, we are ready to receive a new packet */
 801:Src/aspep.c   ****       pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 1110              		.loc 1 801 7 is_stmt 1 view .LVU364
 1111 002a 636D     		ldr	r3, [r4, #84]
 1112 002c 0422     		movs	r2, #4
 1113 002e 04F11C01 		add	r1, r4, #28
 1114 0032 6069     		ldr	r0, [r4, #20]
 1115 0034 9847     		blx	r3
 1116              	.LVL95:
 1117              	.L72:
 802:Src/aspep.c   ****     }
 803:Src/aspep.c   ****     else if (pHandle->badPacketFlag > ASPEP_OK)
 804:Src/aspep.c   ****     {
 805:Src/aspep.c   ****       ASPEP_sendNack(pHandle, pHandle->badPacketFlag);
 806:Src/aspep.c   ****       /* ASPEP_RXframeProcess can be called before reception of another packet */
 807:Src/aspep.c   ****       pHandle->badPacketFlag = ASPEP_OK;
 808:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 809:Src/aspep.c   ****         * DMA will be configured to receive next packet as soon as HW IP RX line is free to receive
 810:Src/aspep.c   ****         * It is important to note that we will detect only the NEXT free line transition, it means 
 811:Src/aspep.c   ****         * be lost but the end of this lost packet will generate the IDLE interrupt
 812:Src/aspep.c   ****         * the IDLE interrupt will call ASPEP_HWReset (in charge of the IP_aspep driver to call it a
 813:Src/aspep.c   ****         * time)*/
 814:Src/aspep.c   ****       pHandle->fASPEP_HWSync(pHandle->ASPEPIp);
 815:Src/aspep.c   ****     }
 816:Src/aspep.c   ****     else
 817:Src/aspep.c   ****     {
 818:Src/aspep.c   ****       /* Nothing to do, no response is due to the controller */
 819:Src/aspep.c   ****     }
 820:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 821:Src/aspep.c   ****   }
 822:Src/aspep.c   **** #endif
 823:Src/aspep.c   ****   return (result);
 824:Src/aspep.c   **** }
 1118              		.loc 1 824 1 is_stmt 0 view .LVU365
 1119 0036 2846     		mov	r0, r5
 1120 0038 38BD     		pop	{r3, r4, r5, pc}
 1121              	.LVL96:
 1122              	.L90:
 693:Src/aspep.c   ****           {
 1123              		.loc 1 693 11 is_stmt 1 view .LVU366
 693:Src/aspep.c   ****           {
 1124              		.loc 1 693 32 is_stmt 0 view .LVU367
 1125 003a 836E     		ldr	r3, [r0, #104]
ARM GAS  /tmp/cct97U3h.s 			page 43


 693:Src/aspep.c   ****           {
 1126              		.loc 1 693 14 view .LVU368
 1127 003c 052B     		cmp	r3, #5
 1128 003e 03D0     		beq	.L91
 710:Src/aspep.c   ****           {
 1129              		.loc 1 710 16 is_stmt 1 view .LVU369
 710:Src/aspep.c   ****           {
 1130              		.loc 1 710 19 is_stmt 0 view .LVU370
 1131 0040 062B     		cmp	r3, #6
 1132 0042 1DD0     		beq	.L92
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1133              		.loc 1 670 12 view .LVU371
 1134 0044 0025     		movs	r5, #0
 1135 0046 F0E7     		b	.L76
 1136              	.L91:
 695:Src/aspep.c   ****             {
 1137              		.loc 1 695 13 is_stmt 1 view .LVU372
 695:Src/aspep.c   ****             {
 1138              		.loc 1 695 17 is_stmt 0 view .LVU373
 1139 0048 FFF7FEFF 		bl	ASPEP_CheckBeacon
 1140              	.LVL97:
 695:Src/aspep.c   ****             {
 1141              		.loc 1 695 16 view .LVU374
 1142 004c 88B1     		cbz	r0, .L78
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1143              		.loc 1 698 15 is_stmt 1 view .LVU375
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1144              		.loc 1 698 68 is_stmt 0 view .LVU376
 1145 004e 94F86E30 		ldrb	r3, [r4, #110]	@ zero_extendqisi2
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1146              		.loc 1 698 81 view .LVU377
 1147 0052 0133     		adds	r3, r3, #1
 698:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1148              		.loc 1 698 44 view .LVU378
 1149 0054 5B01     		lsls	r3, r3, #5
 1150 0056 A381     		strh	r3, [r4, #12]	@ movhi
 699:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 1151              		.loc 1 699 15 is_stmt 1 view .LVU379
 699:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 1152              		.loc 1 699 45 is_stmt 0 view .LVU380
 1153 0058 94F86F30 		ldrb	r3, [r4, #111]	@ zero_extendqisi2
 1154 005c 9B01     		lsls	r3, r3, #6
 1155 005e E381     		strh	r3, [r4, #14]	@ movhi
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1156              		.loc 1 700 15 is_stmt 1 view .LVU381
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1157              		.loc 1 700 61 is_stmt 0 view .LVU382
 1158 0060 94F86D30 		ldrb	r3, [r4, #109]	@ zero_extendqisi2
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1159              		.loc 1 700 73 view .LVU383
 1160 0064 0133     		adds	r3, r3, #1
 700:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1161              		.loc 1 700 37 view .LVU384
 1162 0066 5B01     		lsls	r3, r3, #5
 1163 0068 A4F85E30 		strh	r3, [r4, #94]	@ movhi
 701:Src/aspep.c   ****             }
 1164              		.loc 1 701 15 is_stmt 1 view .LVU385
ARM GAS  /tmp/cct97U3h.s 			page 44


 701:Src/aspep.c   ****             }
 1165              		.loc 1 701 36 is_stmt 0 view .LVU386
 1166 006c 0123     		movs	r3, #1
 1167 006e 84F86430 		strb	r3, [r4, #100]
 1168              	.L78:
 706:Src/aspep.c   ****             /* Beacon Packet must be answered*/
 1169              		.loc 1 706 13 is_stmt 1 view .LVU387
 708:Src/aspep.c   ****           }
 1170              		.loc 1 708 13 view .LVU388
 1171 0072 04F16C01 		add	r1, r4, #108
 1172 0076 2046     		mov	r0, r4
 1173 0078 FFF7FEFF 		bl	ASPEP_sendBeacon
 1174              	.LVL98:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1175              		.loc 1 670 12 is_stmt 0 view .LVU389
 1176 007c 0025     		movs	r5, #0
 1177 007e D4E7     		b	.L76
 1178              	.LVL99:
 1179              	.L92:
 713:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_RESET, packetNumber);
 1180              		.loc 1 713 13 is_stmt 1 view .LVU390
 714:Src/aspep.c   ****           }
 1181              		.loc 1 714 13 view .LVU391
 1182 0080 C2F30F32 		ubfx	r2, r2, #12, #16
 1183              	.LVL100:
 714:Src/aspep.c   ****           }
 1184              		.loc 1 714 13 is_stmt 0 view .LVU392
 1185 0084 0021     		movs	r1, #0
 1186              	.LVL101:
 714:Src/aspep.c   ****           }
 1187              		.loc 1 714 13 view .LVU393
 1188 0086 FFF7FEFF 		bl	ASPEP_sendPing
 1189              	.LVL102:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1190              		.loc 1 670 12 view .LVU394
 1191 008a 0025     		movs	r5, #0
 1192 008c CDE7     		b	.L76
 1193              	.LVL103:
 1194              	.L74:
 725:Src/aspep.c   ****           {
 1195              		.loc 1 725 11 is_stmt 1 view .LVU395
 725:Src/aspep.c   ****           {
 1196              		.loc 1 725 32 is_stmt 0 view .LVU396
 1197 008e 836E     		ldr	r3, [r0, #104]
 725:Src/aspep.c   ****           {
 1198              		.loc 1 725 14 view .LVU397
 1199 0090 052B     		cmp	r3, #5
 1200 0092 03D0     		beq	.L93
 738:Src/aspep.c   ****           {
 1201              		.loc 1 738 16 is_stmt 1 view .LVU398
 738:Src/aspep.c   ****           {
 1202              		.loc 1 738 19 is_stmt 0 view .LVU399
 1203 0094 062B     		cmp	r3, #6
 1204 0096 0ED0     		beq	.L94
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1205              		.loc 1 670 12 view .LVU400
 1206 0098 0025     		movs	r5, #0
ARM GAS  /tmp/cct97U3h.s 			page 45


 1207 009a C6E7     		b	.L76
 1208              	.L93:
 727:Src/aspep.c   ****             {
 1209              		.loc 1 727 13 is_stmt 1 view .LVU401
 727:Src/aspep.c   ****             {
 1210              		.loc 1 727 17 is_stmt 0 view .LVU402
 1211 009c FFF7FEFF 		bl	ASPEP_CheckBeacon
 1212              	.LVL104:
 727:Src/aspep.c   ****             {
 1213              		.loc 1 727 16 view .LVU403
 1214 00a0 10B9     		cbnz	r0, .L80
 729:Src/aspep.c   ****             }
 1215              		.loc 1 729 15 is_stmt 1 view .LVU404
 729:Src/aspep.c   ****             }
 1216              		.loc 1 729 36 is_stmt 0 view .LVU405
 1217 00a2 0023     		movs	r3, #0
 1218 00a4 84F86430 		strb	r3, [r4, #100]
 1219              	.L80:
 734:Src/aspep.c   **** 
 1220              		.loc 1 734 13 is_stmt 1 view .LVU406
 736:Src/aspep.c   ****           }
 1221              		.loc 1 736 13 view .LVU407
 1222 00a8 04F16C01 		add	r1, r4, #108
 1223 00ac 2046     		mov	r0, r4
 1224 00ae FFF7FEFF 		bl	ASPEP_sendBeacon
 1225              	.LVL105:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1226              		.loc 1 670 12 is_stmt 0 view .LVU408
 1227 00b2 0025     		movs	r5, #0
 1228 00b4 B9E7     		b	.L76
 1229              	.LVL106:
 1230              	.L94:
 741:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 1231              		.loc 1 741 13 is_stmt 1 view .LVU409
 742:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1232              		.loc 1 742 13 view .LVU410
 1233 00b6 C2F30F32 		ubfx	r2, r2, #12, #16
 1234              	.LVL107:
 742:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1235              		.loc 1 742 13 is_stmt 0 view .LVU411
 1236 00ba 0121     		movs	r1, #1
 1237              	.LVL108:
 742:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1238              		.loc 1 742 13 view .LVU412
 1239 00bc FFF7FEFF 		bl	ASPEP_sendPing
 1240              	.LVL109:
 743:Src/aspep.c   ****           }
 1241              		.loc 1 743 13 is_stmt 1 view .LVU413
 743:Src/aspep.c   ****           }
 1242              		.loc 1 743 34 is_stmt 0 view .LVU414
 1243 00c0 0223     		movs	r3, #2
 1244 00c2 84F86430 		strb	r3, [r4, #100]
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1245              		.loc 1 670 12 view .LVU415
 1246 00c6 0025     		movs	r5, #0
 1247 00c8 AFE7     		b	.L76
 1248              	.LVL110:
ARM GAS  /tmp/cct97U3h.s 			page 46


 1249              	.L75:
 754:Src/aspep.c   ****           {
 1250              		.loc 1 754 11 is_stmt 1 view .LVU416
 754:Src/aspep.c   ****           {
 1251              		.loc 1 754 32 is_stmt 0 view .LVU417
 1252 00ca 836E     		ldr	r3, [r0, #104]
 754:Src/aspep.c   ****           {
 1253              		.loc 1 754 14 view .LVU418
 1254 00cc 052B     		cmp	r3, #5
 1255 00ce 05D0     		beq	.L95
 766:Src/aspep.c   ****           {
 1256              		.loc 1 766 16 is_stmt 1 view .LVU419
 766:Src/aspep.c   ****           {
 1257              		.loc 1 766 19 is_stmt 0 view .LVU420
 1258 00d0 062B     		cmp	r3, #6
 1259 00d2 0ED0     		beq	.L96
 771:Src/aspep.c   ****           {
 1260              		.loc 1 771 16 is_stmt 1 view .LVU421
 771:Src/aspep.c   ****           {
 1261              		.loc 1 771 19 is_stmt 0 view .LVU422
 1262 00d4 092B     		cmp	r3, #9
 1263 00d6 13D0     		beq	.L97
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1264              		.loc 1 670 12 view .LVU423
 1265 00d8 0025     		movs	r5, #0
 1266 00da A6E7     		b	.L76
 1267              	.L95:
 756:Src/aspep.c   ****             {
 1268              		.loc 1 756 13 is_stmt 1 view .LVU424
 756:Src/aspep.c   ****             {
 1269              		.loc 1 756 17 is_stmt 0 view .LVU425
 1270 00dc FFF7FEFF 		bl	ASPEP_CheckBeacon
 1271              	.LVL111:
 756:Src/aspep.c   ****             {
 1272              		.loc 1 756 17 view .LVU426
 1273 00e0 84F86400 		strb	r0, [r4, #100]
 764:Src/aspep.c   ****           }
 1274              		.loc 1 764 13 is_stmt 1 view .LVU427
 1275 00e4 04F16C01 		add	r1, r4, #108
 1276 00e8 2046     		mov	r0, r4
 1277 00ea FFF7FEFF 		bl	ASPEP_sendBeacon
 1278              	.LVL112:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1279              		.loc 1 670 12 is_stmt 0 view .LVU428
 1280 00ee 0025     		movs	r5, #0
 1281 00f0 9BE7     		b	.L76
 1282              	.LVL113:
 1283              	.L96:
 768:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 1284              		.loc 1 768 13 is_stmt 1 view .LVU429
 769:Src/aspep.c   ****           }
 1285              		.loc 1 769 13 view .LVU430
 1286 00f2 C2F30F32 		ubfx	r2, r2, #12, #16
 1287              	.LVL114:
 769:Src/aspep.c   ****           }
 1288              		.loc 1 769 13 is_stmt 0 view .LVU431
 1289 00f6 0121     		movs	r1, #1
ARM GAS  /tmp/cct97U3h.s 			page 47


 1290              	.LVL115:
 769:Src/aspep.c   ****           }
 1291              		.loc 1 769 13 view .LVU432
 1292 00f8 FFF7FEFF 		bl	ASPEP_sendPing
 1293              	.LVL116:
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1294              		.loc 1 670 12 view .LVU433
 1295 00fc 0025     		movs	r5, #0
 1296 00fe 94E7     		b	.L76
 1297              	.LVL117:
 1298              	.L97:
 777:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1299              		.loc 1 777 15 is_stmt 1 view .LVU434
 777:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1300              		.loc 1 777 39 is_stmt 0 view .LVU435
 1301 0100 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1302 0104 0133     		adds	r3, r3, #1
 1303 0106 80F86030 		strb	r3, [r0, #96]
 778:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 1304              		.loc 1 778 15 is_stmt 1 view .LVU436
 778:Src/aspep.c   ****               *packetLength = pHandle->rxLengthASPEP;
 1305              		.loc 1 778 47 is_stmt 0 view .LVU437
 1306 010a 0123     		movs	r3, #1
 1307 010c 0374     		strb	r3, [r0, #16]
 779:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1308              		.loc 1 779 15 is_stmt 1 view .LVU438
 779:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1309              		.loc 1 779 38 is_stmt 0 view .LVU439
 1310 010e B0F85C30 		ldrh	r3, [r0, #92]
 779:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1311              		.loc 1 779 29 view .LVU440
 1312 0112 0B80     		strh	r3, [r1]	@ movhi
 780:Src/aspep.c   **** #if VALID_CRC_DATA
 1313              		.loc 1 780 15 is_stmt 1 view .LVU441
 780:Src/aspep.c   **** #if VALID_CRC_DATA
 1314              		.loc 1 780 22 is_stmt 0 view .LVU442
 1315 0114 8569     		ldr	r5, [r0, #24]
 1316              	.LVL118:
 780:Src/aspep.c   **** #if VALID_CRC_DATA
 1317              		.loc 1 780 22 view .LVU443
 1318 0116 88E7     		b	.L76
 1319              	.LVL119:
 1320              	.L73:
 803:Src/aspep.c   ****     {
 1321              		.loc 1 803 10 is_stmt 1 view .LVU444
 803:Src/aspep.c   ****     {
 1322              		.loc 1 803 21 is_stmt 0 view .LVU445
 1323 0118 90F86230 		ldrb	r3, [r0, #98]	@ zero_extendqisi2
 803:Src/aspep.c   ****     {
 1324              		.loc 1 803 13 view .LVU446
 1325 011c 0BB9     		cbnz	r3, .L98
 670:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1326              		.loc 1 670 12 view .LVU447
 1327 011e 0025     		movs	r5, #0
 819:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 1328              		.loc 1 819 5 is_stmt 1 view .LVU448
 823:Src/aspep.c   **** }
ARM GAS  /tmp/cct97U3h.s 			page 48


 1329              		.loc 1 823 3 view .LVU449
 823:Src/aspep.c   **** }
 1330              		.loc 1 823 10 is_stmt 0 view .LVU450
 1331 0120 89E7     		b	.L72
 1332              	.L98:
 805:Src/aspep.c   ****       /* ASPEP_RXframeProcess can be called before reception of another packet */
 1333              		.loc 1 805 7 is_stmt 1 view .LVU451
 1334              	.LVL120:
 1335              	.LBB38:
 1336              	.LBI38:
 237:Src/aspep.c   **** {
 1337              		.loc 1 237 13 view .LVU452
 1338              	.LBB39:
 239:Src/aspep.c   ****   *packet = NACK | (uint32_t)(((uint32_t) errorInfo) << 8U) | (uint32_t)(((uint32_t) errorInfo) << 
 1339              		.loc 1 239 3 view .LVU453
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1340              		.loc 1 240 3 view .LVU454
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1341              		.loc 1 240 63 is_stmt 0 view .LVU455
 1342 0122 1A04     		lsls	r2, r3, #16
 1343              	.LVL121:
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1344              		.loc 1 240 61 view .LVU456
 1345 0124 42EA0323 		orr	r3, r2, r3, lsl #8
 1346              	.LVL122:
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1347              		.loc 1 240 61 view .LVU457
 1348 0128 43F00F03 		orr	r3, r3, #15
 240:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 1349              		.loc 1 240 11 view .LVU458
 1350 012c 0246     		mov	r2, r0
 1351 012e 42F8203F 		str	r3, [r2, #32]!
 1352              	.LVL123:
 241:Src/aspep.c   **** }
 1353              		.loc 1 241 3 is_stmt 1 view .LVU459
 241:Src/aspep.c   **** }
 1354              		.loc 1 241 9 is_stmt 0 view .LVU460
 1355 0132 0423     		movs	r3, #4
 1356 0134 0021     		movs	r1, #0
 1357              	.LVL124:
 241:Src/aspep.c   **** }
 1358              		.loc 1 241 9 view .LVU461
 1359 0136 FFF7FEFF 		bl	ASPEP_TXframeProcess
 1360              	.LVL125:
 241:Src/aspep.c   **** }
 1361              		.loc 1 241 9 view .LVU462
 1362              	.LBE39:
 1363              	.LBE38:
 807:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1364              		.loc 1 807 7 is_stmt 1 view .LVU463
 807:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1365              		.loc 1 807 30 is_stmt 0 view .LVU464
 1366 013a 0025     		movs	r5, #0
 1367 013c 84F86250 		strb	r5, [r4, #98]
 814:Src/aspep.c   ****     }
 1368              		.loc 1 814 7 is_stmt 1 view .LVU465
 1369 0140 236D     		ldr	r3, [r4, #80]
ARM GAS  /tmp/cct97U3h.s 			page 49


 1370 0142 6069     		ldr	r0, [r4, #20]
 1371 0144 9847     		blx	r3
 1372              	.LVL126:
 1373 0146 76E7     		b	.L72
 1374              		.cfi_endproc
 1375              	.LFE1448:
 1377              		.section	.text.ASPEP_HWDataReceivedIT,"ax",%progbits
 1378              		.align	1
 1379              		.global	ASPEP_HWDataReceivedIT
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv4-sp-d16
 1385              	ASPEP_HWDataReceivedIT:
 1386              	.LVL127:
 1387              	.LFB1449:
 825:Src/aspep.c   **** 
 826:Src/aspep.c   **** /**
 827:Src/aspep.c   ****   * @brief  Processes the received data packet.
 828:Src/aspep.c   ****   *
 829:Src/aspep.c   ****   * This function is called once DMA has transfered the configure number of byte.
 830:Src/aspep.c   ****   * Upon reception of a new packet the DMA will be re-configured only once the answer has been sent
 831:Src/aspep.c   ****   * This is mandatory to avoid a race condition in case of a new packet is received while executing
 832:Src/aspep.c   ****   * If the packet received contains an error in the header, the HW IP will be re-synchronised first
 833:Src/aspep.c   ****   *
 834:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 835:Src/aspep.c   ****   */
 836:Src/aspep.c   **** void ASPEP_HWDataReceivedIT(ASPEP_Handle_t *pHandle)
 837:Src/aspep.c   **** {
 1388              		.loc 1 837 1 view -0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 1392              		.loc 1 837 1 is_stmt 0 view .LVU467
 1393 0000 10B5     		push	{r4, lr}
 1394              	.LCFI8:
 1395              		.cfi_def_cfa_offset 8
 1396              		.cfi_offset 4, -8
 1397              		.cfi_offset 14, -4
 1398 0002 0446     		mov	r4, r0
 838:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 839:Src/aspep.c   ****   if (MC_NULL == pHandle)
 840:Src/aspep.c   ****   {
 841:Src/aspep.c   ****     /* Nothing to do */
 842:Src/aspep.c   ****   }
 843:Src/aspep.c   ****   else
 844:Src/aspep.c   ****   {
 845:Src/aspep.c   **** #endif
 846:Src/aspep.c   ****     switch (pHandle->ASPEP_TL_State)
 1399              		.loc 1 846 5 is_stmt 1 view .LVU468
 1400              		.loc 1 846 20 is_stmt 0 view .LVU469
 1401 0004 90F86530 		ldrb	r3, [r0, #101]	@ zero_extendqisi2
 1402              		.loc 1 846 5 view .LVU470
 1403 0008 13B1     		cbz	r3, .L100
 1404 000a 012B     		cmp	r3, #1
 1405 000c 43D0     		beq	.L101
 1406              	.LVL128:
ARM GAS  /tmp/cct97U3h.s 			page 50


 1407              	.L99:
 847:Src/aspep.c   ****     {
 848:Src/aspep.c   ****       case WAITING_PACKET:
 849:Src/aspep.c   ****       {
 850:Src/aspep.c   ****         if (ASPEP_CheckHeaderCRC(*(uint32_t *)pHandle->rxHeader) == true) //cstat !MISRAC2012-Rule-
 851:Src/aspep.c   ****         {
 852:Src/aspep.c   ****           pHandle->rxPacketType = (ASPEP_packetType)(((uint32_t)pHandle->rxHeader[0]) & ID_MASK);
 853:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 854:Src/aspep.c   ****           {
 855:Src/aspep.c   ****             case DATA_PACKET:
 856:Src/aspep.c   ****             {
 857:Src/aspep.c   ****               //cstat !MISRAC2012-Rule-11.3
 858:Src/aspep.c   ****               pHandle->rxLengthASPEP = (uint16_t)((*((uint16_t *)pHandle->rxHeader) & 0x1FFF0U) >> 
 859:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 860:Src/aspep.c   ****               {
 861:Src/aspep.c   ****                 pHandle->NewPacketAvailable = true;
 862:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 863:Src/aspep.c   ****                   *  processed in ASPEP_RXframeProcess */
 864:Src/aspep.c   ****               }
 865:Src/aspep.c   ****               else if (pHandle->rxLengthASPEP <= pHandle->maxRXPayload)
 866:Src/aspep.c   ****               {
 867:Src/aspep.c   ****                 pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxBuffer,  /* need to read + 
 868:Src/aspep.c   ****                                         (pHandle->rxLengthASPEP + ((uint16_t)ASPEP_DATACRC_SIZE * (
 869:Src/aspep.c   ****                 pHandle->ASPEP_TL_State = WAITING_PAYLOAD;
 870:Src/aspep.c   ****               }
 871:Src/aspep.c   ****               else
 872:Src/aspep.c   ****               {
 873:Src/aspep.c   ****                 pHandle->badPacketFlag = ASPEP_BAD_PACKET_SIZE;
 874:Src/aspep.c   ****               }
 875:Src/aspep.c   ****               break;
 876:Src/aspep.c   ****             }
 877:Src/aspep.c   **** 
 878:Src/aspep.c   ****             case BEACON:
 879:Src/aspep.c   ****             case PING:
 880:Src/aspep.c   ****             {
 881:Src/aspep.c   ****               pHandle->NewPacketAvailable = true;
 882:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 883:Src/aspep.c   ****                 * processed in ASPEP_RXframeProcess */
 884:Src/aspep.c   ****               break;
 885:Src/aspep.c   ****             }
 886:Src/aspep.c   **** 
 887:Src/aspep.c   ****             default:
 888:Src/aspep.c   ****             {
 889:Src/aspep.c   ****               pHandle->badPacketFlag = ASPEP_BAD_PACKET_TYPE;
 890:Src/aspep.c   ****               break;
 891:Src/aspep.c   ****             }
 892:Src/aspep.c   ****           }
 893:Src/aspep.c   ****         }
 894:Src/aspep.c   ****         else
 895:Src/aspep.c   ****         {
 896:Src/aspep.c   ****           pHandle->badPacketFlag = ASPEP_BAD_CRC_HEADER;
 897:Src/aspep.c   ****         }
 898:Src/aspep.c   ****         break;
 899:Src/aspep.c   ****       }
 900:Src/aspep.c   **** 
 901:Src/aspep.c   ****       case WAITING_PAYLOAD:
 902:Src/aspep.c   ****       {
ARM GAS  /tmp/cct97U3h.s 			page 51


 903:Src/aspep.c   ****         pHandle->ASPEP_TL_State = WAITING_PACKET;
 904:Src/aspep.c   ****         /* Payload received, */
 905:Src/aspep.c   ****         pHandle->NewPacketAvailable = true;
 906:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 907:Src/aspep.c   ****           * processed in ASPEP_RXframeProcess */
 908:Src/aspep.c   ****         break;
 909:Src/aspep.c   ****       }
 910:Src/aspep.c   **** 
 911:Src/aspep.c   ****       default:
 912:Src/aspep.c   ****         break;
 913:Src/aspep.c   ****     }
 914:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 915:Src/aspep.c   ****   }
 916:Src/aspep.c   **** #endif
 917:Src/aspep.c   **** }
 1408              		.loc 1 917 1 view .LVU471
 1409 000e 10BD     		pop	{r4, pc}
 1410              	.LVL129:
 1411              	.L100:
 850:Src/aspep.c   ****         {
 1412              		.loc 1 850 9 is_stmt 1 view .LVU472
 850:Src/aspep.c   ****         {
 1413              		.loc 1 850 13 is_stmt 0 view .LVU473
 1414 0010 C169     		ldr	r1, [r0, #28]
 1415              	.LVL130:
 1416              	.LBB42:
 1417              	.LBI42:
 152:Src/aspep.c   **** {
 1418              		.loc 1 152 13 is_stmt 1 view .LVU474
 1419              	.LBB43:
 154:Src/aspep.c   **** 
 1420              		.loc 1 154 3 view .LVU475
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 1421              		.loc 1 157 3 view .LVU476
 158:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 1422              		.loc 1 158 3 view .LVU477
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 1423              		.loc 1 157 7 is_stmt 0 view .LVU478
 1424 0012 244A     		ldr	r2, .L112
 157:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 1425              		.loc 1 157 26 view .LVU479
 1426 0014 CBB2     		uxtb	r3, r1
 158:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 1427              		.loc 1 158 26 view .LVU480
 1428 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1429 0018 83EA1123 		eor	r3, r3, r1, lsr #8
 1430 001c DBB2     		uxtb	r3, r3
 1431              	.LVL131:
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 1432              		.loc 1 159 3 is_stmt 1 view .LVU481
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 1433              		.loc 1 159 26 is_stmt 0 view .LVU482
 1434 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1435              	.LVL132:
 159:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 1436              		.loc 1 159 26 view .LVU483
 1437 0020 83EA1143 		eor	r3, r3, r1, lsr #16
ARM GAS  /tmp/cct97U3h.s 			page 52


 1438 0024 DBB2     		uxtb	r3, r3
 1439              	.LVL133:
 160:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 1440              		.loc 1 160 3 is_stmt 1 view .LVU484
 160:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 1441              		.loc 1 160 26 is_stmt 0 view .LVU485
 1442 0026 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1443              	.LVL134:
 160:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 1444              		.loc 1 160 26 view .LVU486
 1445 0028 83EA1161 		eor	r1, r3, r1, lsr #24
 1446              	.LVL135:
 172:Src/aspep.c   **** }
 1447              		.loc 1 172 3 is_stmt 1 view .LVU487
 172:Src/aspep.c   **** }
 1448              		.loc 1 172 3 is_stmt 0 view .LVU488
 1449              	.LBE43:
 1450              	.LBE42:
 850:Src/aspep.c   ****         {
 1451              		.loc 1 850 12 view .LVU489
 1452 002c 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 1453 002e 73BB     		cbnz	r3, .L103
 852:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 1454              		.loc 1 852 11 is_stmt 1 view .LVU490
 1455 0030 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1456 0032 03F00F03 		and	r3, r3, #15
 852:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 1457              		.loc 1 852 35 is_stmt 0 view .LVU491
 1458 0036 8366     		str	r3, [r0, #104]
 853:Src/aspep.c   ****           {
 1459              		.loc 1 853 11 is_stmt 1 view .LVU492
 1460 0038 062B     		cmp	r3, #6
 1461 003a 0AD9     		bls	.L110
 1462 003c 092B     		cmp	r3, #9
 1463 003e 0AD1     		bne	.L106
 858:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 1464              		.loc 1 858 15 view .LVU493
 858:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 1465              		.loc 1 858 97 is_stmt 0 view .LVU494
 1466 0040 838B     		ldrh	r3, [r0, #28]
 1467 0042 1B09     		lsrs	r3, r3, #4
 858:Src/aspep.c   ****               if (0U == pHandle->rxLengthASPEP) /* data packet with length 0 is a valid packet */
 1468              		.loc 1 858 38 view .LVU495
 1469 0044 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 859:Src/aspep.c   ****               {
 1470              		.loc 1 859 15 is_stmt 1 view .LVU496
 859:Src/aspep.c   ****               {
 1471              		.loc 1 859 18 is_stmt 0 view .LVU497
 1472 0048 4BB9     		cbnz	r3, .L107
 861:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 1473              		.loc 1 861 17 is_stmt 1 view .LVU498
 861:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 1474              		.loc 1 861 45 is_stmt 0 view .LVU499
 1475 004a 0123     		movs	r3, #1
 1476 004c 80F86130 		strb	r3, [r0, #97]
 1477 0050 DDE7     		b	.L99
 1478              	.L110:
ARM GAS  /tmp/cct97U3h.s 			page 53


 1479 0052 042B     		cmp	r3, #4
 1480 0054 17D8     		bhi	.L111
 1481              	.L106:
 889:Src/aspep.c   ****               break;
 1482              		.loc 1 889 15 is_stmt 1 view .LVU500
 889:Src/aspep.c   ****               break;
 1483              		.loc 1 889 38 is_stmt 0 view .LVU501
 1484 0056 0123     		movs	r3, #1
 1485 0058 84F86230 		strb	r3, [r4, #98]
 890:Src/aspep.c   ****             }
 1486              		.loc 1 890 15 is_stmt 1 view .LVU502
 1487 005c D7E7     		b	.L99
 1488              	.L107:
 865:Src/aspep.c   ****               {
 1489              		.loc 1 865 20 view .LVU503
 865:Src/aspep.c   ****               {
 1490              		.loc 1 865 23 is_stmt 0 view .LVU504
 1491 005e B0F85E20 		ldrh	r2, [r0, #94]
 1492 0062 9A42     		cmp	r2, r3
 1493 0064 0BD3     		bcc	.L108
 867:Src/aspep.c   ****                                         (pHandle->rxLengthASPEP + ((uint16_t)ASPEP_DATACRC_SIZE * (
 1494              		.loc 1 867 17 is_stmt 1 view .LVU505
 1495 0066 90F86C20 		ldrb	r2, [r0, #108]	@ zero_extendqisi2
 1496 006a 03EB4202 		add	r2, r3, r2, lsl #1
 1497 006e 8169     		ldr	r1, [r0, #24]
 1498 0070 4069     		ldr	r0, [r0, #20]
 1499              	.LVL136:
 867:Src/aspep.c   ****                                         (pHandle->rxLengthASPEP + ((uint16_t)ASPEP_DATACRC_SIZE * (
 1500              		.loc 1 867 17 is_stmt 0 view .LVU506
 1501 0072 636D     		ldr	r3, [r4, #84]
 1502 0074 9847     		blx	r3
 1503              	.LVL137:
 869:Src/aspep.c   ****               }
 1504              		.loc 1 869 17 is_stmt 1 view .LVU507
 869:Src/aspep.c   ****               }
 1505              		.loc 1 869 41 is_stmt 0 view .LVU508
 1506 0076 0123     		movs	r3, #1
 1507 0078 84F86530 		strb	r3, [r4, #101]
 1508 007c C7E7     		b	.L99
 1509              	.LVL138:
 1510              	.L108:
 873:Src/aspep.c   ****               }
 1511              		.loc 1 873 17 is_stmt 1 view .LVU509
 873:Src/aspep.c   ****               }
 1512              		.loc 1 873 40 is_stmt 0 view .LVU510
 1513 007e 0223     		movs	r3, #2
 1514 0080 80F86230 		strb	r3, [r0, #98]
 1515 0084 C3E7     		b	.L99
 1516              	.L111:
 881:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 1517              		.loc 1 881 15 is_stmt 1 view .LVU511
 881:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 1518              		.loc 1 881 43 is_stmt 0 view .LVU512
 1519 0086 0123     		movs	r3, #1
 1520 0088 80F86130 		strb	r3, [r0, #97]
 884:Src/aspep.c   ****             }
 1521              		.loc 1 884 15 is_stmt 1 view .LVU513
ARM GAS  /tmp/cct97U3h.s 			page 54


 1522 008c BFE7     		b	.L99
 1523              	.L103:
 896:Src/aspep.c   ****         }
 1524              		.loc 1 896 11 view .LVU514
 896:Src/aspep.c   ****         }
 1525              		.loc 1 896 34 is_stmt 0 view .LVU515
 1526 008e 0423     		movs	r3, #4
 1527 0090 80F86230 		strb	r3, [r0, #98]
 1528 0094 BBE7     		b	.L99
 1529              	.L101:
 903:Src/aspep.c   ****         /* Payload received, */
 1530              		.loc 1 903 9 is_stmt 1 view .LVU516
 903:Src/aspep.c   ****         /* Payload received, */
 1531              		.loc 1 903 33 is_stmt 0 view .LVU517
 1532 0096 0023     		movs	r3, #0
 1533 0098 80F86530 		strb	r3, [r0, #101]
 905:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 1534              		.loc 1 905 9 is_stmt 1 view .LVU518
 905:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 1535              		.loc 1 905 37 is_stmt 0 view .LVU519
 1536 009c 0123     		movs	r3, #1
 1537 009e 80F86130 		strb	r3, [r0, #97]
 908:Src/aspep.c   ****       }
 1538              		.loc 1 908 9 is_stmt 1 view .LVU520
 1539              		.loc 1 917 1 is_stmt 0 view .LVU521
 1540 00a2 B4E7     		b	.L99
 1541              	.L113:
 1542              		.align	2
 1543              	.L112:
 1544 00a4 00000000 		.word	.LANCHOR0
 1545              		.cfi_endproc
 1546              	.LFE1449:
 1548              		.section	.text.ASPEP_HWReset,"ax",%progbits
 1549              		.align	1
 1550              		.global	ASPEP_HWReset
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1554              		.fpu fpv4-sp-d16
 1556              	ASPEP_HWReset:
 1557              	.LVL139:
 1558              	.LFB1450:
 918:Src/aspep.c   **** 
 919:Src/aspep.c   **** /**
 920:Src/aspep.c   ****   * @brief  Resets DMA after debugger has stopped the MCU.
 921:Src/aspep.c   ****   *
 922:Src/aspep.c   ****   * @param  *pHandle Handler of the current instance of the ASPEP component
 923:Src/aspep.c   ****   */
 924:Src/aspep.c   **** void ASPEP_HWReset(ASPEP_Handle_t *pHandle)
 925:Src/aspep.c   **** {
 1559              		.loc 1 925 1 is_stmt 1 view -0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              		.loc 1 925 1 is_stmt 0 view .LVU523
 1564 0000 08B5     		push	{r3, lr}
 1565              	.LCFI9:
ARM GAS  /tmp/cct97U3h.s 			page 55


 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 3, -8
 1568              		.cfi_offset 14, -4
 926:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 927:Src/aspep.c   ****   if (NULL == pHandle)
 928:Src/aspep.c   ****   {
 929:Src/aspep.c   ****     /* Nothing to do */
 930:Src/aspep.c   ****   }
 931:Src/aspep.c   ****   else
 932:Src/aspep.c   ****   {
 933:Src/aspep.c   **** #endif
 934:Src/aspep.c   ****     /* We must reset the RX state machine to be sure to not be in Waiting packet state */
 935:Src/aspep.c   ****     /* Otherwise the arrival of a new packet will trigger a NewPacketAvailable despite */
 936:Src/aspep.c   ****     /* the fact that bytes have been lost because of overrun (debugger paused for instance) */
 937:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 1569              		.loc 1 937 5 is_stmt 1 view .LVU524
 1570              		.loc 1 937 29 is_stmt 0 view .LVU525
 1571 0002 0023     		movs	r3, #0
 1572 0004 80F86530 		strb	r3, [r0, #101]
 938:Src/aspep.c   ****     pHandle->fASPEP_cfg_recept(pHandle->ASPEPIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 1573              		.loc 1 938 5 is_stmt 1 view .LVU526
 1574 0008 436D     		ldr	r3, [r0, #84]
 1575 000a 0422     		movs	r2, #4
 1576 000c 00F11C01 		add	r1, r0, #28
 1577 0010 4069     		ldr	r0, [r0, #20]
 1578              	.LVL140:
 1579              		.loc 1 938 5 is_stmt 0 view .LVU527
 1580 0012 9847     		blx	r3
 1581              	.LVL141:
 939:Src/aspep.c   **** #ifdef NULL_PTR_CHECK_ASP
 940:Src/aspep.c   ****   }
 941:Src/aspep.c   **** #endif
 942:Src/aspep.c   **** }
 1582              		.loc 1 942 1 view .LVU528
 1583 0014 08BD     		pop	{r3, pc}
 1584              		.cfi_endproc
 1585              	.LFE1450:
 1587              		.section	.rodata.CRC4_Lookup4,"a"
 1588              		.align	2
 1589              		.set	.LANCHOR1,. + 0
 1592              	CRC4_Lookup4:
 1593 0000 00070E09 		.ascii	"\000\007\016\011\013\014\005\002\001\006\017\010\012"
 1593      0B0C0502 
 1593      01060F08 
 1593      0A
 1594 000d 0D0403   		.ascii	"\015\004\003"
 1595              		.section	.rodata.CRC4_Lookup8,"a"
 1596              		.align	2
 1597              		.set	.LANCHOR0,. + 0
 1600              	CRC4_Lookup8:
 1601 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\007\005\003\001\017"
 1601      080A0C0E 
 1601      07050301 
 1601      0F
 1602 000d 0D0B0907 		.ascii	"\015\013\011\007\005\003\001\017\015\013\011\000\002"
 1602      0503010F 
 1602      0D0B0900 
ARM GAS  /tmp/cct97U3h.s 			page 56


 1602      02
 1603 001a 0406080A 		.ascii	"\004\006\010\012\014\016\016\014\012\010\006\004\002"
 1603      0C0E0E0C 
 1603      0A080604 
 1603      02
 1604 0027 00090B0D 		.ascii	"\000\011\013\015\017\001\003\005\007\011\013\015\017"
 1604      0F010305 
 1604      07090B0D 
 1604      0F
 1605 0034 01030507 		.ascii	"\001\003\005\007\016\014\012\010\006\004\002\000\013"
 1605      0E0C0A08 
 1605      06040200 
 1605      0B
 1606 0041 090F0D03 		.ascii	"\011\017\015\003\001\007\005\014\016\010\012\004\006"
 1606      0107050C 
 1606      0E080A04 
 1606      06
 1607 004e 00020C0E 		.ascii	"\000\002\014\016\010\012\004\006\000\002\013\011\017"
 1607      080A0406 
 1607      00020B09 
 1607      0F
 1608 005b 0D030107 		.ascii	"\015\003\001\007\005\005\007\001\003\015\017\011\013"
 1608      05050701 
 1608      030D0F09 
 1608      0B
 1609 0068 02000604 		.ascii	"\002\000\006\004\012\010\016\014\002\000\006\004\012"
 1609      0A080E0C 
 1609      02000604 
 1609      0A
 1610 0075 080E0C05 		.ascii	"\010\016\014\005\007\001\003\015\017\011\013\001\003"
 1610      0701030D 
 1610      0F090B01 
 1610      03
 1611 0082 0507090B 		.ascii	"\005\007\011\013\015\017\006\004\002\000\016\014\012"
 1611      0D0F0604 
 1611      02000E0C 
 1611      0A
 1612 008f 08060402 		.ascii	"\010\006\004\002\000\016\014\012\010\001\003\005\007"
 1612      000E0C0A 
 1612      08010305 
 1612      07
 1613 009c 090B0D0F 		.ascii	"\011\013\015\017\017\015\013\011\007\005\003\001\010"
 1613      0F0D0B09 
 1613      07050301 
 1613      08
 1614 00a9 0A0C0E00 		.ascii	"\012\014\016\000\002\004\006\010\012\014\016\000\002"
 1614      02040608 
 1614      0A0C0E00 
 1614      02
 1615 00b6 04060F0D 		.ascii	"\004\006\017\015\013\011\007\005\003\001\012\010\016"
 1615      0B090705 
 1615      03010A08 
 1615      0E
 1616 00c3 0C020006 		.ascii	"\014\002\000\006\004\015\017\011\013\005\007\001\003"
 1616      040D0F09 
 1616      0B050701 
 1616      03
ARM GAS  /tmp/cct97U3h.s 			page 57


 1617 00d0 0D0F090B 		.ascii	"\015\017\011\013\005\007\001\003\012\010\016\014\002"
 1617      05070103 
 1617      0A080E0C 
 1617      02
 1618 00dd 00060404 		.ascii	"\000\006\004\004\006\000\002\014\016\010\012\003\001"
 1618      0600020C 
 1618      0E080A03 
 1618      01
 1619 00ea 07050B09 		.ascii	"\007\005\013\011\017\015\003\001\007\005\013\011\017"
 1619      0F0D0301 
 1619      07050B09 
 1619      0F
 1620 00f7 0D040600 		.ascii	"\015\004\006\000\002\014\016\010\012"
 1620      020C0E08 
 1620      0A
 1621              		.text
 1622              	.Letext0:
 1623              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1624              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1625              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1626              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1627              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1628              		.file 8 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 1629              		.file 9 "Inc/aspep.h"
ARM GAS  /tmp/cct97U3h.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 aspep.c
     /tmp/cct97U3h.s:18     .text.ASPEP_CheckBeacon:0000000000000000 $t
     /tmp/cct97U3h.s:25     .text.ASPEP_CheckBeacon:0000000000000000 ASPEP_CheckBeacon
     /tmp/cct97U3h.s:163    .text.ASPEP_TXframeProcess:0000000000000000 $t
     /tmp/cct97U3h.s:169    .text.ASPEP_TXframeProcess:0000000000000000 ASPEP_TXframeProcess
     /tmp/cct97U3h.s:438    .text.ASPEP_TXframeProcess:00000000000000e4 $d
     /tmp/cct97U3h.s:444    .text.ASPEP_start:0000000000000000 $t
     /tmp/cct97U3h.s:451    .text.ASPEP_start:0000000000000000 ASPEP_start
     /tmp/cct97U3h.s:496    .text.ASPEP_sendBeacon:0000000000000000 $t
     /tmp/cct97U3h.s:503    .text.ASPEP_sendBeacon:0000000000000000 ASPEP_sendBeacon
     /tmp/cct97U3h.s:557    .text.ASPEP_sendPing:0000000000000000 $t
     /tmp/cct97U3h.s:564    .text.ASPEP_sendPing:0000000000000000 ASPEP_sendPing
     /tmp/cct97U3h.s:619    .text.ASPEP_getBuffer:0000000000000000 $t
     /tmp/cct97U3h.s:626    .text.ASPEP_getBuffer:0000000000000000 ASPEP_getBuffer
     /tmp/cct97U3h.s:738    .text.ASPEP_sendPacket:0000000000000000 $t
     /tmp/cct97U3h.s:745    .text.ASPEP_sendPacket:0000000000000000 ASPEP_sendPacket
     /tmp/cct97U3h.s:856    .text.ASPEP_HWDataTransmittedIT:0000000000000000 $t
     /tmp/cct97U3h.s:863    .text.ASPEP_HWDataTransmittedIT:0000000000000000 ASPEP_HWDataTransmittedIT
     /tmp/cct97U3h.s:1054   .text.ASPEP_RXframeProcess:0000000000000000 $t
     /tmp/cct97U3h.s:1061   .text.ASPEP_RXframeProcess:0000000000000000 ASPEP_RXframeProcess
     /tmp/cct97U3h.s:1378   .text.ASPEP_HWDataReceivedIT:0000000000000000 $t
     /tmp/cct97U3h.s:1385   .text.ASPEP_HWDataReceivedIT:0000000000000000 ASPEP_HWDataReceivedIT
     /tmp/cct97U3h.s:1544   .text.ASPEP_HWDataReceivedIT:00000000000000a4 $d
     /tmp/cct97U3h.s:1549   .text.ASPEP_HWReset:0000000000000000 $t
     /tmp/cct97U3h.s:1556   .text.ASPEP_HWReset:0000000000000000 ASPEP_HWReset
     /tmp/cct97U3h.s:1588   .rodata.CRC4_Lookup4:0000000000000000 $d
     /tmp/cct97U3h.s:1592   .rodata.CRC4_Lookup4:0000000000000000 CRC4_Lookup4
     /tmp/cct97U3h.s:1596   .rodata.CRC4_Lookup8:0000000000000000 $d
     /tmp/cct97U3h.s:1600   .rodata.CRC4_Lookup8:0000000000000000 CRC4_Lookup8

NO UNDEFINED SYMBOLS
