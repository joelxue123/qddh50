ARM GAS  /tmp/ccoRDxNs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.OC4_PWM_Override,"ax",%progbits
  18              		.align	1
  19              		.global	OC4_PWM_Override
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	OC4_PWM_Override:
  27              	.LVL0:
  28              	.LFB1867:
  29              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/tim.c     ****   * All rights reserved.
  15:Src/tim.c     ****   *
  16:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/tim.c     ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/tim.c     ****   *
  19:Src/tim.c     ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/tim.c     ****   *    this list of conditions and the following disclaimer.
  21:Src/tim.c     ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/tim.c     ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/tim.c     ****   *    and/or other materials provided with the distribution.
  24:Src/tim.c     ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/tim.c     ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/tim.c     ****   *    derived from this software without specific written permission.
  27:Src/tim.c     ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/tim.c     ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/tim.c     ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  /tmp/ccoRDxNs.s 			page 2


  30:Src/tim.c     ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/tim.c     ****   *    this license is void and will automatically terminate your rights under 
  32:Src/tim.c     ****   *    this license. 
  33:Src/tim.c     ****   *
  34:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/tim.c     ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/tim.c     ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/tim.c     ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/tim.c     ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/tim.c     ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/tim.c     ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/tim.c     ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/tim.c     ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/tim.c     ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/tim.c     ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/tim.c     ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/tim.c     ****   *
  47:Src/tim.c     ****   ******************************************************************************
  48:Src/tim.c     ****   */
  49:Src/tim.c     **** 
  50:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  51:Src/tim.c     **** #include "tim.h"
  52:Src/tim.c     **** 
  53:Src/tim.c     **** #include "gpio.h"
  54:Src/tim.c     **** #include  "main.h"
  55:Src/tim.c     **** /* USER CODE BEGIN 0 */
  56:Src/tim.c     **** 
  57:Src/tim.c     **** // To trigger the ADC, we must use an output channel that is in PWM mode
  58:Src/tim.c     **** // However, CubeMX does not allow you to set up a channel as PWM without an output pin.
  59:Src/tim.c     **** // This will set OC4 to PWM mode. Also, triggering doesn't work if the compare register
  60:Src/tim.c     **** // (called pulse here) is 0, so we initialise it to 1.
  61:Src/tim.c     **** void OC4_PWM_Override(TIM_HandleTypeDef* htim) {
  30              		.loc 1 61 48 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 61 48 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  62:Src/tim.c     **** 
  63:Src/tim.c     ****     TIM_OC_InitTypeDef sConfigOC;
  42              		.loc 1 63 5 is_stmt 1 view .LVU2
  64:Src/tim.c     ****     sConfigOC.OCMode = TIM_OCMODE_PWM2;
  43              		.loc 1 64 5 view .LVU3
  44              		.loc 1 64 22 is_stmt 0 view .LVU4
  45 0004 7023     		movs	r3, #112
  46 0006 0193     		str	r3, [sp, #4]
  65:Src/tim.c     ****     sConfigOC.Pulse = 1;
  47              		.loc 1 65 5 is_stmt 1 view .LVU5
  48              		.loc 1 65 21 is_stmt 0 view .LVU6
  49 0008 0123     		movs	r3, #1
  50 000a 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccoRDxNs.s 			page 3


  66:Src/tim.c     ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  51              		.loc 1 66 5 is_stmt 1 view .LVU7
  52              		.loc 1 66 26 is_stmt 0 view .LVU8
  53 000c 0023     		movs	r3, #0
  54 000e 0393     		str	r3, [sp, #12]
  67:Src/tim.c     ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  55              		.loc 1 67 5 is_stmt 1 view .LVU9
  56              		.loc 1 67 27 is_stmt 0 view .LVU10
  57 0010 0493     		str	r3, [sp, #16]
  68:Src/tim.c     ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  58              		.loc 1 68 5 is_stmt 1 view .LVU11
  59              		.loc 1 68 26 is_stmt 0 view .LVU12
  60 0012 0593     		str	r3, [sp, #20]
  69:Src/tim.c     ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  61              		.loc 1 69 5 is_stmt 1 view .LVU13
  62              		.loc 1 69 27 is_stmt 0 view .LVU14
  63 0014 0693     		str	r3, [sp, #24]
  70:Src/tim.c     ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  64              		.loc 1 70 5 is_stmt 1 view .LVU15
  65              		.loc 1 70 28 is_stmt 0 view .LVU16
  66 0016 0793     		str	r3, [sp, #28]
  71:Src/tim.c     **** 
  72:Src/tim.c     ****     HAL_TIM_OC_ConfigChannel(htim, &sConfigOC, TIM_CHANNEL_4);
  67              		.loc 1 72 5 is_stmt 1 view .LVU17
  68 0018 0C22     		movs	r2, #12
  69 001a 01A9     		add	r1, sp, #4
  70 001c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
  71              	.LVL1:
  73:Src/tim.c     **** }
  72              		.loc 1 73 1 is_stmt 0 view .LVU18
  73 0020 09B0     		add	sp, sp, #36
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 4
  76              		@ sp needed
  77 0022 5DF804FB 		ldr	pc, [sp], #4
  78              		.cfi_endproc
  79              	.LFE1867:
  81              		.section	.text.MX_TIM1_Init,"ax",%progbits
  82              		.align	1
  83              		.global	MX_TIM1_Init
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	MX_TIM1_Init:
  90              	.LFB1868:
  74:Src/tim.c     **** 
  75:Src/tim.c     **** /* USER CODE END 0 */
  76:Src/tim.c     **** 
  77:Src/tim.c     **** TIM_HandleTypeDef htim1;
  78:Src/tim.c     **** TIM_HandleTypeDef htim2;
  79:Src/tim.c     **** TIM_HandleTypeDef htim3;
  80:Src/tim.c     **** TIM_HandleTypeDef htim4;
  81:Src/tim.c     **** 
  82:Src/tim.c     **** TIM_HandleTypeDef htim8;
  83:Src/tim.c     **** TIM_HandleTypeDef htim15;
  84:Src/tim.c     **** 
ARM GAS  /tmp/ccoRDxNs.s 			page 4


  85:Src/tim.c     **** /* TIM1 init function */
  86:Src/tim.c     **** void MX_TIM1_Init(void)
  87:Src/tim.c     **** {
  91              		.loc 1 87 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 112
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 00B5     		push	{lr}
  96              	.LCFI3:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 14, -4
  99 0002 9DB0     		sub	sp, sp, #116
 100              	.LCFI4:
 101              		.cfi_def_cfa_offset 120
  88:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 102              		.loc 1 88 3 view .LVU20
  89:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 103              		.loc 1 89 3 view .LVU21
  90:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 104              		.loc 1 90 3 view .LVU22
  91:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 105              		.loc 1 91 3 view .LVU23
  92:Src/tim.c     **** 
  93:Src/tim.c     ****   htim1.Instance = TIM1;
 106              		.loc 1 93 3 view .LVU24
 107              		.loc 1 93 18 is_stmt 0 view .LVU25
 108 0004 4348     		ldr	r0, .L25
 109 0006 444B     		ldr	r3, .L25+4
 110 0008 0360     		str	r3, [r0]
  94:Src/tim.c     ****   htim1.Init.Prescaler = 0;
 111              		.loc 1 94 3 is_stmt 1 view .LVU26
 112              		.loc 1 94 24 is_stmt 0 view .LVU27
 113 000a 0023     		movs	r3, #0
 114 000c 4360     		str	r3, [r0, #4]
  95:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 115              		.loc 1 95 3 is_stmt 1 view .LVU28
 116              		.loc 1 95 26 is_stmt 0 view .LVU29
 117 000e 6022     		movs	r2, #96
 118 0010 8260     		str	r2, [r0, #8]
  96:Src/tim.c     ****   htim1.Init.Period = TIM_1_8_PERIOD_CLOCKS;
 119              		.loc 1 96 3 is_stmt 1 view .LVU30
 120              		.loc 1 96 21 is_stmt 0 view .LVU31
 121 0012 41F29A02 		movw	r2, #4250
 122 0016 C260     		str	r2, [r0, #12]
  97:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 123              		.loc 1 97 3 is_stmt 1 view .LVU32
 124              		.loc 1 97 28 is_stmt 0 view .LVU33
 125 0018 0361     		str	r3, [r0, #16]
  98:Src/tim.c     ****   htim1.Init.RepetitionCounter = TIM_1_8_RCR;
 126              		.loc 1 98 3 is_stmt 1 view .LVU34
 127              		.loc 1 98 32 is_stmt 0 view .LVU35
 128 001a 4361     		str	r3, [r0, #20]
  99:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 129              		.loc 1 99 3 is_stmt 1 view .LVU36
 130              		.loc 1 99 7 is_stmt 0 view .LVU37
 131 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 132              	.LVL2:
ARM GAS  /tmp/ccoRDxNs.s 			page 5


 133              		.loc 1 99 6 view .LVU38
 134 0020 0028     		cmp	r0, #0
 135 0022 58D1     		bne	.L15
 136              	.L4:
 100:Src/tim.c     ****   {
 101:Src/tim.c     ****     Error_Handler();
 102:Src/tim.c     ****   }
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 137              		.loc 1 104 3 is_stmt 1 view .LVU39
 138              		.loc 1 104 34 is_stmt 0 view .LVU40
 139 0024 4FF48053 		mov	r3, #4096
 140 0028 1893     		str	r3, [sp, #96]
 105:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 141              		.loc 1 105 3 is_stmt 1 view .LVU41
 142              		.loc 1 105 7 is_stmt 0 view .LVU42
 143 002a 18A9     		add	r1, sp, #96
 144 002c 3948     		ldr	r0, .L25
 145 002e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 146              	.LVL3:
 147              		.loc 1 105 6 view .LVU43
 148 0032 0028     		cmp	r0, #0
 149 0034 52D1     		bne	.L16
 150              	.L5:
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****     Error_Handler();
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 151              		.loc 1 110 3 is_stmt 1 view .LVU44
 152              		.loc 1 110 7 is_stmt 0 view .LVU45
 153 0036 3748     		ldr	r0, .L25
 154 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 155              	.LVL4:
 156              		.loc 1 110 6 view .LVU46
 157 003c 0028     		cmp	r0, #0
 158 003e 50D1     		bne	.L17
 159              	.L6:
 111:Src/tim.c     ****   {
 112:Src/tim.c     ****     Error_Handler();
 113:Src/tim.c     ****   }
 114:Src/tim.c     **** 
 115:Src/tim.c     ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 160              		.loc 1 115 3 is_stmt 1 view .LVU47
 161              		.loc 1 115 7 is_stmt 0 view .LVU48
 162 0040 3448     		ldr	r0, .L25
 163 0042 FFF7FEFF 		bl	HAL_TIM_OC_Init
 164              	.LVL5:
 165              		.loc 1 115 6 view .LVU49
 166 0046 0028     		cmp	r0, #0
 167 0048 4ED1     		bne	.L18
 168              	.L7:
 116:Src/tim.c     ****   {
 117:Src/tim.c     ****     Error_Handler();
 118:Src/tim.c     ****   }
 119:Src/tim.c     **** 
 120:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
ARM GAS  /tmp/ccoRDxNs.s 			page 6


 169              		.loc 1 120 3 is_stmt 1 view .LVU50
 170              		.loc 1 120 37 is_stmt 0 view .LVU51
 171 004a 2023     		movs	r3, #32
 172 004c 1593     		str	r3, [sp, #84]
 121:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 173              		.loc 1 121 3 is_stmt 1 view .LVU52
 174              		.loc 1 121 33 is_stmt 0 view .LVU53
 175 004e 0023     		movs	r3, #0
 176 0050 1793     		str	r3, [sp, #92]
 122:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 177              		.loc 1 122 3 is_stmt 1 view .LVU54
 178              		.loc 1 122 7 is_stmt 0 view .LVU55
 179 0052 15A9     		add	r1, sp, #84
 180 0054 2F48     		ldr	r0, .L25
 181 0056 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 182              	.LVL6:
 183              		.loc 1 122 6 view .LVU56
 184 005a 0028     		cmp	r0, #0
 185 005c 47D1     		bne	.L19
 186              	.L8:
 123:Src/tim.c     ****   {
 124:Src/tim.c     ****     Error_Handler();
 125:Src/tim.c     ****   }
 126:Src/tim.c     **** 
 127:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 187              		.loc 1 127 3 is_stmt 1 view .LVU57
 188              		.loc 1 127 20 is_stmt 0 view .LVU58
 189 005e 7023     		movs	r3, #112
 190 0060 0E93     		str	r3, [sp, #56]
 128:Src/tim.c     ****   sConfigOC.Pulse = 0;
 191              		.loc 1 128 3 is_stmt 1 view .LVU59
 192              		.loc 1 128 19 is_stmt 0 view .LVU60
 193 0062 0022     		movs	r2, #0
 194 0064 0F92     		str	r2, [sp, #60]
 129:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 195              		.loc 1 129 3 is_stmt 1 view .LVU61
 196              		.loc 1 129 24 is_stmt 0 view .LVU62
 197 0066 1092     		str	r2, [sp, #64]
 130:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 198              		.loc 1 130 3 is_stmt 1 view .LVU63
 199              		.loc 1 130 25 is_stmt 0 view .LVU64
 200 0068 1192     		str	r2, [sp, #68]
 131:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 201              		.loc 1 131 3 is_stmt 1 view .LVU65
 202              		.loc 1 131 24 is_stmt 0 view .LVU66
 203 006a 1292     		str	r2, [sp, #72]
 132:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 204              		.loc 1 132 3 is_stmt 1 view .LVU67
 205              		.loc 1 132 25 is_stmt 0 view .LVU68
 206 006c 1392     		str	r2, [sp, #76]
 133:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 207              		.loc 1 133 3 is_stmt 1 view .LVU69
 208              		.loc 1 133 26 is_stmt 0 view .LVU70
 209 006e 1492     		str	r2, [sp, #80]
 134:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 210              		.loc 1 134 3 is_stmt 1 view .LVU71
 211              		.loc 1 134 7 is_stmt 0 view .LVU72
ARM GAS  /tmp/ccoRDxNs.s 			page 7


 212 0070 0EA9     		add	r1, sp, #56
 213 0072 2848     		ldr	r0, .L25
 214 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 215              	.LVL7:
 216              		.loc 1 134 6 view .LVU73
 217 0078 0028     		cmp	r0, #0
 218 007a 3BD1     		bne	.L20
 219              	.L9:
 135:Src/tim.c     ****   {
 136:Src/tim.c     ****     Error_Handler();
 137:Src/tim.c     ****   }
 138:Src/tim.c     **** 
 139:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 220              		.loc 1 139 3 is_stmt 1 view .LVU74
 221              		.loc 1 139 7 is_stmt 0 view .LVU75
 222 007c 0422     		movs	r2, #4
 223 007e 0EA9     		add	r1, sp, #56
 224 0080 2448     		ldr	r0, .L25
 225 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 226              	.LVL8:
 227              		.loc 1 139 6 view .LVU76
 228 0086 0028     		cmp	r0, #0
 229 0088 37D1     		bne	.L21
 230              	.L10:
 140:Src/tim.c     ****   {
 141:Src/tim.c     ****     Error_Handler();
 142:Src/tim.c     ****   }
 143:Src/tim.c     **** 
 144:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 231              		.loc 1 144 3 is_stmt 1 view .LVU77
 232              		.loc 1 144 7 is_stmt 0 view .LVU78
 233 008a 0822     		movs	r2, #8
 234 008c 0EA9     		add	r1, sp, #56
 235 008e 2148     		ldr	r0, .L25
 236 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 237              	.LVL9:
 238              		.loc 1 144 6 view .LVU79
 239 0094 0028     		cmp	r0, #0
 240 0096 33D1     		bne	.L22
 241              	.L11:
 145:Src/tim.c     ****   {
 146:Src/tim.c     ****     Error_Handler();
 147:Src/tim.c     ****   }
 148:Src/tim.c     **** 
 149:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 242              		.loc 1 149 3 is_stmt 1 view .LVU80
 243              		.loc 1 149 20 is_stmt 0 view .LVU81
 244 0098 0023     		movs	r3, #0
 245 009a 0E93     		str	r3, [sp, #56]
 150:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 246              		.loc 1 150 3 is_stmt 1 view .LVU82
 247              		.loc 1 150 7 is_stmt 0 view .LVU83
 248 009c 0C22     		movs	r2, #12
 249 009e 0EA9     		add	r1, sp, #56
 250 00a0 1C48     		ldr	r0, .L25
 251 00a2 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 252              	.LVL10:
ARM GAS  /tmp/ccoRDxNs.s 			page 8


 253              		.loc 1 150 6 view .LVU84
 254 00a6 70BB     		cbnz	r0, .L23
 255              	.L12:
 151:Src/tim.c     ****   {
 152:Src/tim.c     ****     Error_Handler();
 153:Src/tim.c     ****   }
 154:Src/tim.c     **** 
 155:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_ENABLE;
 256              		.loc 1 155 3 is_stmt 1 view .LVU85
 257              		.loc 1 155 40 is_stmt 0 view .LVU86
 258 00a8 4FF40063 		mov	r3, #2048
 259 00ac 0193     		str	r3, [sp, #4]
 156:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 260              		.loc 1 156 3 is_stmt 1 view .LVU87
 261              		.loc 1 156 41 is_stmt 0 view .LVU88
 262 00ae 4FF48063 		mov	r3, #1024
 263 00b2 0293     		str	r3, [sp, #8]
 157:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 264              		.loc 1 157 3 is_stmt 1 view .LVU89
 265              		.loc 1 157 34 is_stmt 0 view .LVU90
 266 00b4 0023     		movs	r3, #0
 267 00b6 0393     		str	r3, [sp, #12]
 158:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = TIM_1_8_DEADTIME_CLOCKS;
 268              		.loc 1 158 3 is_stmt 1 view .LVU91
 269              		.loc 1 158 33 is_stmt 0 view .LVU92
 270 00b8 2822     		movs	r2, #40
 271 00ba 0492     		str	r2, [sp, #16]
 159:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 272              		.loc 1 159 3 is_stmt 1 view .LVU93
 273              		.loc 1 159 35 is_stmt 0 view .LVU94
 274 00bc 0593     		str	r3, [sp, #20]
 160:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 275              		.loc 1 160 3 is_stmt 1 view .LVU95
 276              		.loc 1 160 38 is_stmt 0 view .LVU96
 277 00be 4FF40052 		mov	r2, #8192
 278 00c2 0692     		str	r2, [sp, #24]
 161:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 279              		.loc 1 161 3 is_stmt 1 view .LVU97
 280              		.loc 1 161 40 is_stmt 0 view .LVU98
 281 00c4 0D93     		str	r3, [sp, #52]
 162:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 282              		.loc 1 162 3 is_stmt 1 view .LVU99
 283              		.loc 1 162 7 is_stmt 0 view .LVU100
 284 00c6 01A9     		add	r1, sp, #4
 285 00c8 1248     		ldr	r0, .L25
 286 00ca FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 287              	.LVL11:
 288              		.loc 1 162 6 view .LVU101
 289 00ce E8B9     		cbnz	r0, .L24
 290              	.L3:
 163:Src/tim.c     ****   {
 164:Src/tim.c     ****     Error_Handler();
 165:Src/tim.c     ****   }
 166:Src/tim.c     **** 
 167:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
 168:Src/tim.c     **** 
 169:Src/tim.c     **** }
ARM GAS  /tmp/ccoRDxNs.s 			page 9


 291              		.loc 1 169 1 view .LVU102
 292 00d0 1DB0     		add	sp, sp, #116
 293              	.LCFI5:
 294              		.cfi_remember_state
 295              		.cfi_def_cfa_offset 4
 296              		@ sp needed
 297 00d2 5DF804FB 		ldr	pc, [sp], #4
 298              	.L15:
 299              	.LCFI6:
 300              		.cfi_restore_state
 101:Src/tim.c     ****   }
 301              		.loc 1 101 5 is_stmt 1 view .LVU103
 302 00d6 FFF7FEFF 		bl	Error_Handler
 303              	.LVL12:
 304 00da A3E7     		b	.L4
 305              	.L16:
 107:Src/tim.c     ****   }
 306              		.loc 1 107 5 view .LVU104
 307 00dc FFF7FEFF 		bl	Error_Handler
 308              	.LVL13:
 309 00e0 A9E7     		b	.L5
 310              	.L17:
 112:Src/tim.c     ****   }
 311              		.loc 1 112 5 view .LVU105
 312 00e2 FFF7FEFF 		bl	Error_Handler
 313              	.LVL14:
 314 00e6 ABE7     		b	.L6
 315              	.L18:
 117:Src/tim.c     ****   }
 316              		.loc 1 117 5 view .LVU106
 317 00e8 FFF7FEFF 		bl	Error_Handler
 318              	.LVL15:
 319 00ec ADE7     		b	.L7
 320              	.L19:
 124:Src/tim.c     ****   }
 321              		.loc 1 124 5 view .LVU107
 322 00ee FFF7FEFF 		bl	Error_Handler
 323              	.LVL16:
 324 00f2 B4E7     		b	.L8
 325              	.L20:
 136:Src/tim.c     ****   }
 326              		.loc 1 136 5 view .LVU108
 327 00f4 FFF7FEFF 		bl	Error_Handler
 328              	.LVL17:
 329 00f8 C0E7     		b	.L9
 330              	.L21:
 141:Src/tim.c     ****   }
 331              		.loc 1 141 5 view .LVU109
 332 00fa FFF7FEFF 		bl	Error_Handler
 333              	.LVL18:
 334 00fe C4E7     		b	.L10
 335              	.L22:
 146:Src/tim.c     ****   }
 336              		.loc 1 146 5 view .LVU110
 337 0100 FFF7FEFF 		bl	Error_Handler
 338              	.LVL19:
 339 0104 C8E7     		b	.L11
ARM GAS  /tmp/ccoRDxNs.s 			page 10


 340              	.L23:
 152:Src/tim.c     ****   }
 341              		.loc 1 152 5 view .LVU111
 342 0106 FFF7FEFF 		bl	Error_Handler
 343              	.LVL20:
 344 010a CDE7     		b	.L12
 345              	.L24:
 164:Src/tim.c     ****   }
 346              		.loc 1 164 5 view .LVU112
 347 010c FFF7FEFF 		bl	Error_Handler
 348              	.LVL21:
 167:Src/tim.c     **** 
 349              		.loc 1 167 3 view .LVU113
 350              		.loc 1 169 1 is_stmt 0 view .LVU114
 351 0110 DEE7     		b	.L3
 352              	.L26:
 353 0112 00BF     		.align	2
 354              	.L25:
 355 0114 00000000 		.word	.LANCHOR0
 356 0118 002C0140 		.word	1073818624
 357              		.cfi_endproc
 358              	.LFE1868:
 360              		.section	.text.MX_TIM2_Init,"ax",%progbits
 361              		.align	1
 362              		.global	MX_TIM2_Init
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	MX_TIM2_Init:
 369              	.LFB1869:
 170:Src/tim.c     **** /* TIM2 init function */
 171:Src/tim.c     **** void MX_TIM2_Init(void)
 172:Src/tim.c     **** {
 370              		.loc 1 172 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 40
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 00B5     		push	{lr}
 375              	.LCFI7:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 14, -4
 378 0002 8BB0     		sub	sp, sp, #44
 379              	.LCFI8:
 380              		.cfi_def_cfa_offset 48
 173:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 381              		.loc 1 173 3 view .LVU116
 174:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 382              		.loc 1 174 3 view .LVU117
 175:Src/tim.c     **** 
 176:Src/tim.c     ****   htim2.Instance = TIM2;
 383              		.loc 1 176 3 view .LVU118
 384              		.loc 1 176 18 is_stmt 0 view .LVU119
 385 0004 1E48     		ldr	r0, .L37
 386 0006 4FF08043 		mov	r3, #1073741824
 387 000a 0360     		str	r3, [r0]
 177:Src/tim.c     ****   htim2.Init.Prescaler = 0;
ARM GAS  /tmp/ccoRDxNs.s 			page 11


 388              		.loc 1 177 3 is_stmt 1 view .LVU120
 389              		.loc 1 177 24 is_stmt 0 view .LVU121
 390 000c 0023     		movs	r3, #0
 391 000e 4360     		str	r3, [r0, #4]
 178:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 392              		.loc 1 178 3 is_stmt 1 view .LVU122
 393              		.loc 1 178 26 is_stmt 0 view .LVU123
 394 0010 6022     		movs	r2, #96
 395 0012 8260     		str	r2, [r0, #8]
 179:Src/tim.c     ****   htim2.Init.Period = TIM_APB1_PERIOD_CLOCKS;
 396              		.loc 1 179 3 is_stmt 1 view .LVU124
 397              		.loc 1 179 21 is_stmt 0 view .LVU125
 398 0014 4FF48052 		mov	r2, #4096
 399 0018 C260     		str	r2, [r0, #12]
 180:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 400              		.loc 1 180 3 is_stmt 1 view .LVU126
 401              		.loc 1 180 28 is_stmt 0 view .LVU127
 402 001a 0361     		str	r3, [r0, #16]
 181:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 403              		.loc 1 181 3 is_stmt 1 view .LVU128
 404              		.loc 1 181 7 is_stmt 0 view .LVU129
 405 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 406              	.LVL22:
 407              		.loc 1 181 6 view .LVU130
 408 0020 10BB     		cbnz	r0, .L33
 409              	.L28:
 182:Src/tim.c     ****   {
 183:Src/tim.c     ****     Error_Handler();
 184:Src/tim.c     ****   }
 185:Src/tim.c     **** 
 186:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 410              		.loc 1 186 3 is_stmt 1 view .LVU131
 411              		.loc 1 186 37 is_stmt 0 view .LVU132
 412 0022 0023     		movs	r3, #0
 413 0024 0793     		str	r3, [sp, #28]
 187:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 414              		.loc 1 187 3 is_stmt 1 view .LVU133
 415              		.loc 1 187 33 is_stmt 0 view .LVU134
 416 0026 0993     		str	r3, [sp, #36]
 188:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 417              		.loc 1 188 3 is_stmt 1 view .LVU135
 418              		.loc 1 188 7 is_stmt 0 view .LVU136
 419 0028 07A9     		add	r1, sp, #28
 420 002a 1548     		ldr	r0, .L37
 421 002c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 422              	.LVL23:
 423              		.loc 1 188 6 view .LVU137
 424 0030 E8B9     		cbnz	r0, .L34
 425              	.L29:
 189:Src/tim.c     ****   {
 190:Src/tim.c     ****     Error_Handler();
 191:Src/tim.c     ****   }
 192:Src/tim.c     **** 
 193:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 426              		.loc 1 193 3 is_stmt 1 view .LVU138
 427              		.loc 1 193 20 is_stmt 0 view .LVU139
 428 0032 7023     		movs	r3, #112
ARM GAS  /tmp/ccoRDxNs.s 			page 12


 429 0034 0093     		str	r3, [sp]
 194:Src/tim.c     ****   sConfigOC.Pulse = 0;
 430              		.loc 1 194 3 is_stmt 1 view .LVU140
 431              		.loc 1 194 19 is_stmt 0 view .LVU141
 432 0036 0023     		movs	r3, #0
 433 0038 0193     		str	r3, [sp, #4]
 195:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 434              		.loc 1 195 3 is_stmt 1 view .LVU142
 435              		.loc 1 195 24 is_stmt 0 view .LVU143
 436 003a 0222     		movs	r2, #2
 437 003c 0292     		str	r2, [sp, #8]
 196:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 438              		.loc 1 196 3 is_stmt 1 view .LVU144
 439              		.loc 1 196 24 is_stmt 0 view .LVU145
 440 003e 0493     		str	r3, [sp, #16]
 197:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 441              		.loc 1 197 3 is_stmt 1 view .LVU146
 442              		.loc 1 197 7 is_stmt 0 view .LVU147
 443 0040 0822     		movs	r2, #8
 444 0042 6946     		mov	r1, sp
 445 0044 0E48     		ldr	r0, .L37
 446 0046 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 447              	.LVL24:
 448              		.loc 1 197 6 view .LVU148
 449 004a 98B9     		cbnz	r0, .L35
 450              	.L30:
 198:Src/tim.c     ****   {
 199:Src/tim.c     ****     Error_Handler();
 200:Src/tim.c     ****   }
 201:Src/tim.c     **** 
 202:Src/tim.c     ****   sConfigOC.Pulse = TIM_APB1_PERIOD_CLOCKS+1;
 451              		.loc 1 202 3 is_stmt 1 view .LVU149
 452              		.loc 1 202 19 is_stmt 0 view .LVU150
 453 004c 41F20103 		movw	r3, #4097
 454 0050 0193     		str	r3, [sp, #4]
 203:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 455              		.loc 1 203 3 is_stmt 1 view .LVU151
 456              		.loc 1 203 24 is_stmt 0 view .LVU152
 457 0052 0023     		movs	r3, #0
 458 0054 0293     		str	r3, [sp, #8]
 204:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 459              		.loc 1 204 3 is_stmt 1 view .LVU153
 460              		.loc 1 204 7 is_stmt 0 view .LVU154
 461 0056 0C22     		movs	r2, #12
 462 0058 6946     		mov	r1, sp
 463 005a 0948     		ldr	r0, .L37
 464 005c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 465              	.LVL25:
 466              		.loc 1 204 6 view .LVU155
 467 0060 58B9     		cbnz	r0, .L36
 468              	.L27:
 205:Src/tim.c     ****   {
 206:Src/tim.c     ****     Error_Handler();
 207:Src/tim.c     ****   }
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
 210:Src/tim.c     **** 
ARM GAS  /tmp/ccoRDxNs.s 			page 13


 211:Src/tim.c     **** }
 469              		.loc 1 211 1 view .LVU156
 470 0062 0BB0     		add	sp, sp, #44
 471              	.LCFI9:
 472              		.cfi_remember_state
 473              		.cfi_def_cfa_offset 4
 474              		@ sp needed
 475 0064 5DF804FB 		ldr	pc, [sp], #4
 476              	.L33:
 477              	.LCFI10:
 478              		.cfi_restore_state
 183:Src/tim.c     ****   }
 479              		.loc 1 183 5 is_stmt 1 view .LVU157
 480 0068 FFF7FEFF 		bl	Error_Handler
 481              	.LVL26:
 482 006c D9E7     		b	.L28
 483              	.L34:
 190:Src/tim.c     ****   }
 484              		.loc 1 190 5 view .LVU158
 485 006e FFF7FEFF 		bl	Error_Handler
 486              	.LVL27:
 487 0072 DEE7     		b	.L29
 488              	.L35:
 199:Src/tim.c     ****   }
 489              		.loc 1 199 5 view .LVU159
 490 0074 FFF7FEFF 		bl	Error_Handler
 491              	.LVL28:
 492 0078 E8E7     		b	.L30
 493              	.L36:
 206:Src/tim.c     ****   }
 494              		.loc 1 206 5 view .LVU160
 495 007a FFF7FEFF 		bl	Error_Handler
 496              	.LVL29:
 209:Src/tim.c     **** 
 497              		.loc 1 209 3 view .LVU161
 498              		.loc 1 211 1 is_stmt 0 view .LVU162
 499 007e F0E7     		b	.L27
 500              	.L38:
 501              		.align	2
 502              	.L37:
 503 0080 00000000 		.word	.LANCHOR1
 504              		.cfi_endproc
 505              	.LFE1869:
 507              		.section	.text.MX_TIM3_Init,"ax",%progbits
 508              		.align	1
 509              		.global	MX_TIM3_Init
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	MX_TIM3_Init:
 516              	.LFB1870:
 212:Src/tim.c     **** /* TIM3 init function */
 213:Src/tim.c     **** void MX_TIM3_Init(void)
 214:Src/tim.c     **** {
 517              		.loc 1 214 1 is_stmt 1 view -0
 518              		.cfi_startproc
ARM GAS  /tmp/ccoRDxNs.s 			page 14


 519              		@ args = 0, pretend = 0, frame = 48
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521 0000 00B5     		push	{lr}
 522              	.LCFI11:
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 14, -4
 525 0002 8DB0     		sub	sp, sp, #52
 526              	.LCFI12:
 527              		.cfi_def_cfa_offset 56
 215:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 528              		.loc 1 215 3 view .LVU164
 216:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 529              		.loc 1 216 3 view .LVU165
 217:Src/tim.c     **** 
 218:Src/tim.c     ****   htim3.Instance = TIM3;
 530              		.loc 1 218 3 view .LVU166
 531              		.loc 1 218 18 is_stmt 0 view .LVU167
 532 0004 1548     		ldr	r0, .L45
 533 0006 164B     		ldr	r3, .L45+4
 534 0008 0360     		str	r3, [r0]
 219:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 535              		.loc 1 219 3 is_stmt 1 view .LVU168
 536              		.loc 1 219 24 is_stmt 0 view .LVU169
 537 000a 0023     		movs	r3, #0
 538 000c 4360     		str	r3, [r0, #4]
 220:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 539              		.loc 1 220 3 is_stmt 1 view .LVU170
 540              		.loc 1 220 26 is_stmt 0 view .LVU171
 541 000e 8360     		str	r3, [r0, #8]
 221:Src/tim.c     ****   htim3.Init.Period = 0xffff;
 542              		.loc 1 221 3 is_stmt 1 view .LVU172
 543              		.loc 1 221 21 is_stmt 0 view .LVU173
 544 0010 4FF6FF72 		movw	r2, #65535
 545 0014 C260     		str	r2, [r0, #12]
 222:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 546              		.loc 1 222 3 is_stmt 1 view .LVU174
 547              		.loc 1 222 28 is_stmt 0 view .LVU175
 548 0016 0361     		str	r3, [r0, #16]
 223:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 549              		.loc 1 223 3 is_stmt 1 view .LVU176
 550              		.loc 1 223 23 is_stmt 0 view .LVU177
 551 0018 0322     		movs	r2, #3
 552 001a 0392     		str	r2, [sp, #12]
 224:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 553              		.loc 1 224 3 is_stmt 1 view .LVU178
 554              		.loc 1 224 23 is_stmt 0 view .LVU179
 555 001c 0493     		str	r3, [sp, #16]
 225:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 556              		.loc 1 225 3 is_stmt 1 view .LVU180
 557              		.loc 1 225 24 is_stmt 0 view .LVU181
 558 001e 0121     		movs	r1, #1
 559 0020 0591     		str	r1, [sp, #20]
 226:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 560              		.loc 1 226 3 is_stmt 1 view .LVU182
 561              		.loc 1 226 24 is_stmt 0 view .LVU183
 562 0022 0693     		str	r3, [sp, #24]
 227:Src/tim.c     ****   sConfig.IC1Filter = 4;
ARM GAS  /tmp/ccoRDxNs.s 			page 15


 563              		.loc 1 227 3 is_stmt 1 view .LVU184
 564              		.loc 1 227 21 is_stmt 0 view .LVU185
 565 0024 0422     		movs	r2, #4
 566 0026 0792     		str	r2, [sp, #28]
 228:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 567              		.loc 1 228 3 is_stmt 1 view .LVU186
 568              		.loc 1 228 23 is_stmt 0 view .LVU187
 569 0028 0893     		str	r3, [sp, #32]
 229:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 570              		.loc 1 229 3 is_stmt 1 view .LVU188
 571              		.loc 1 229 24 is_stmt 0 view .LVU189
 572 002a 0991     		str	r1, [sp, #36]
 230:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 573              		.loc 1 230 3 is_stmt 1 view .LVU190
 574              		.loc 1 230 24 is_stmt 0 view .LVU191
 575 002c 0A93     		str	r3, [sp, #40]
 231:Src/tim.c     ****   sConfig.IC2Filter = 4;
 576              		.loc 1 231 3 is_stmt 1 view .LVU192
 577              		.loc 1 231 21 is_stmt 0 view .LVU193
 578 002e 0B92     		str	r2, [sp, #44]
 232:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 579              		.loc 1 232 3 is_stmt 1 view .LVU194
 580              		.loc 1 232 7 is_stmt 0 view .LVU195
 581 0030 03A9     		add	r1, sp, #12
 582 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 583              	.LVL30:
 584              		.loc 1 232 6 view .LVU196
 585 0036 50B9     		cbnz	r0, .L43
 586              	.L40:
 233:Src/tim.c     ****   {
 234:Src/tim.c     ****     Error_Handler();
 235:Src/tim.c     ****   }
 236:Src/tim.c     **** 
 237:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 587              		.loc 1 237 3 is_stmt 1 view .LVU197
 588              		.loc 1 237 37 is_stmt 0 view .LVU198
 589 0038 0023     		movs	r3, #0
 590 003a 0093     		str	r3, [sp]
 238:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 591              		.loc 1 238 3 is_stmt 1 view .LVU199
 592              		.loc 1 238 33 is_stmt 0 view .LVU200
 593 003c 0293     		str	r3, [sp, #8]
 239:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 594              		.loc 1 239 3 is_stmt 1 view .LVU201
 595              		.loc 1 239 7 is_stmt 0 view .LVU202
 596 003e 6946     		mov	r1, sp
 597 0040 0648     		ldr	r0, .L45
 598 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 599              	.LVL31:
 600              		.loc 1 239 6 view .LVU203
 601 0046 28B9     		cbnz	r0, .L44
 602              	.L39:
 240:Src/tim.c     ****   {
 241:Src/tim.c     ****     Error_Handler();
 242:Src/tim.c     ****   }
 243:Src/tim.c     **** 
 244:Src/tim.c     **** }
ARM GAS  /tmp/ccoRDxNs.s 			page 16


 603              		.loc 1 244 1 view .LVU204
 604 0048 0DB0     		add	sp, sp, #52
 605              	.LCFI13:
 606              		.cfi_remember_state
 607              		.cfi_def_cfa_offset 4
 608              		@ sp needed
 609 004a 5DF804FB 		ldr	pc, [sp], #4
 610              	.L43:
 611              	.LCFI14:
 612              		.cfi_restore_state
 234:Src/tim.c     ****   }
 613              		.loc 1 234 5 is_stmt 1 view .LVU205
 614 004e FFF7FEFF 		bl	Error_Handler
 615              	.LVL32:
 616 0052 F1E7     		b	.L40
 617              	.L44:
 241:Src/tim.c     ****   }
 618              		.loc 1 241 5 view .LVU206
 619 0054 FFF7FEFF 		bl	Error_Handler
 620              	.LVL33:
 621              		.loc 1 244 1 is_stmt 0 view .LVU207
 622 0058 F6E7     		b	.L39
 623              	.L46:
 624 005a 00BF     		.align	2
 625              	.L45:
 626 005c 00000000 		.word	.LANCHOR2
 627 0060 00040040 		.word	1073742848
 628              		.cfi_endproc
 629              	.LFE1870:
 631              		.section	.text.MX_TIM4_Init,"ax",%progbits
 632              		.align	1
 633              		.global	MX_TIM4_Init
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv4-sp-d16
 639              	MX_TIM4_Init:
 640              	.LFB1871:
 245:Src/tim.c     **** /* TIM4 init function */
 246:Src/tim.c     **** void MX_TIM4_Init(void)
 247:Src/tim.c     **** {
 641              		.loc 1 247 1 is_stmt 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 48
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645 0000 00B5     		push	{lr}
 646              	.LCFI15:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 14, -4
 649 0002 8DB0     		sub	sp, sp, #52
 650              	.LCFI16:
 651              		.cfi_def_cfa_offset 56
 248:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 652              		.loc 1 248 3 view .LVU209
 249:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 653              		.loc 1 249 3 view .LVU210
 250:Src/tim.c     **** 
ARM GAS  /tmp/ccoRDxNs.s 			page 17


 251:Src/tim.c     ****   htim4.Instance = TIM4;
 654              		.loc 1 251 3 view .LVU211
 655              		.loc 1 251 18 is_stmt 0 view .LVU212
 656 0004 1548     		ldr	r0, .L53
 657 0006 164B     		ldr	r3, .L53+4
 658 0008 0360     		str	r3, [r0]
 252:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 659              		.loc 1 252 3 is_stmt 1 view .LVU213
 660              		.loc 1 252 24 is_stmt 0 view .LVU214
 661 000a 0023     		movs	r3, #0
 662 000c 4360     		str	r3, [r0, #4]
 253:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 663              		.loc 1 253 3 is_stmt 1 view .LVU215
 664              		.loc 1 253 26 is_stmt 0 view .LVU216
 665 000e 8360     		str	r3, [r0, #8]
 254:Src/tim.c     ****   htim4.Init.Period = 0xffff;
 666              		.loc 1 254 3 is_stmt 1 view .LVU217
 667              		.loc 1 254 21 is_stmt 0 view .LVU218
 668 0010 4FF6FF72 		movw	r2, #65535
 669 0014 C260     		str	r2, [r0, #12]
 255:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 670              		.loc 1 255 3 is_stmt 1 view .LVU219
 671              		.loc 1 255 28 is_stmt 0 view .LVU220
 672 0016 0361     		str	r3, [r0, #16]
 256:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 673              		.loc 1 256 3 is_stmt 1 view .LVU221
 674              		.loc 1 256 23 is_stmt 0 view .LVU222
 675 0018 0322     		movs	r2, #3
 676 001a 0392     		str	r2, [sp, #12]
 257:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 677              		.loc 1 257 3 is_stmt 1 view .LVU223
 678              		.loc 1 257 23 is_stmt 0 view .LVU224
 679 001c 0493     		str	r3, [sp, #16]
 258:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 680              		.loc 1 258 3 is_stmt 1 view .LVU225
 681              		.loc 1 258 24 is_stmt 0 view .LVU226
 682 001e 0121     		movs	r1, #1
 683 0020 0591     		str	r1, [sp, #20]
 259:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 684              		.loc 1 259 3 is_stmt 1 view .LVU227
 685              		.loc 1 259 24 is_stmt 0 view .LVU228
 686 0022 0693     		str	r3, [sp, #24]
 260:Src/tim.c     ****   sConfig.IC1Filter = 4;
 687              		.loc 1 260 3 is_stmt 1 view .LVU229
 688              		.loc 1 260 21 is_stmt 0 view .LVU230
 689 0024 0422     		movs	r2, #4
 690 0026 0792     		str	r2, [sp, #28]
 261:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 691              		.loc 1 261 3 is_stmt 1 view .LVU231
 692              		.loc 1 261 23 is_stmt 0 view .LVU232
 693 0028 0893     		str	r3, [sp, #32]
 262:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 694              		.loc 1 262 3 is_stmt 1 view .LVU233
 695              		.loc 1 262 24 is_stmt 0 view .LVU234
 696 002a 0991     		str	r1, [sp, #36]
 263:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 697              		.loc 1 263 3 is_stmt 1 view .LVU235
ARM GAS  /tmp/ccoRDxNs.s 			page 18


 698              		.loc 1 263 24 is_stmt 0 view .LVU236
 699 002c 0A93     		str	r3, [sp, #40]
 264:Src/tim.c     ****   sConfig.IC2Filter = 4;
 700              		.loc 1 264 3 is_stmt 1 view .LVU237
 701              		.loc 1 264 21 is_stmt 0 view .LVU238
 702 002e 0B92     		str	r2, [sp, #44]
 265:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 703              		.loc 1 265 3 is_stmt 1 view .LVU239
 704              		.loc 1 265 7 is_stmt 0 view .LVU240
 705 0030 03A9     		add	r1, sp, #12
 706 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 707              	.LVL34:
 708              		.loc 1 265 6 view .LVU241
 709 0036 50B9     		cbnz	r0, .L51
 710              	.L48:
 266:Src/tim.c     ****   {
 267:Src/tim.c     ****     Error_Handler();
 268:Src/tim.c     ****   }
 269:Src/tim.c     **** 
 270:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 711              		.loc 1 270 3 is_stmt 1 view .LVU242
 712              		.loc 1 270 37 is_stmt 0 view .LVU243
 713 0038 0023     		movs	r3, #0
 714 003a 0093     		str	r3, [sp]
 271:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 715              		.loc 1 271 3 is_stmt 1 view .LVU244
 716              		.loc 1 271 33 is_stmt 0 view .LVU245
 717 003c 0293     		str	r3, [sp, #8]
 272:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 718              		.loc 1 272 3 is_stmt 1 view .LVU246
 719              		.loc 1 272 7 is_stmt 0 view .LVU247
 720 003e 6946     		mov	r1, sp
 721 0040 0648     		ldr	r0, .L53
 722 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 723              	.LVL35:
 724              		.loc 1 272 6 view .LVU248
 725 0046 28B9     		cbnz	r0, .L52
 726              	.L47:
 273:Src/tim.c     ****   {
 274:Src/tim.c     ****     Error_Handler();
 275:Src/tim.c     ****   }
 276:Src/tim.c     **** 
 277:Src/tim.c     **** }
 727              		.loc 1 277 1 view .LVU249
 728 0048 0DB0     		add	sp, sp, #52
 729              	.LCFI17:
 730              		.cfi_remember_state
 731              		.cfi_def_cfa_offset 4
 732              		@ sp needed
 733 004a 5DF804FB 		ldr	pc, [sp], #4
 734              	.L51:
 735              	.LCFI18:
 736              		.cfi_restore_state
 267:Src/tim.c     ****   }
 737              		.loc 1 267 5 is_stmt 1 view .LVU250
 738 004e FFF7FEFF 		bl	Error_Handler
 739              	.LVL36:
ARM GAS  /tmp/ccoRDxNs.s 			page 19


 740 0052 F1E7     		b	.L48
 741              	.L52:
 274:Src/tim.c     ****   }
 742              		.loc 1 274 5 view .LVU251
 743 0054 FFF7FEFF 		bl	Error_Handler
 744              	.LVL37:
 745              		.loc 1 277 1 is_stmt 0 view .LVU252
 746 0058 F6E7     		b	.L47
 747              	.L54:
 748 005a 00BF     		.align	2
 749              	.L53:
 750 005c 00000000 		.word	.LANCHOR3
 751 0060 00080040 		.word	1073743872
 752              		.cfi_endproc
 753              	.LFE1871:
 755              		.section	.text.MX_TIM8_Init,"ax",%progbits
 756              		.align	1
 757              		.global	MX_TIM8_Init
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	MX_TIM8_Init:
 764              	.LFB1872:
 278:Src/tim.c     **** 
 279:Src/tim.c     **** /* TIM8 init function */
 280:Src/tim.c     **** void MX_TIM8_Init(void)
 281:Src/tim.c     **** {
 765              		.loc 1 281 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 96
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 00B5     		push	{lr}
 770              	.LCFI19:
 771              		.cfi_def_cfa_offset 4
 772              		.cfi_offset 14, -4
 773 0002 99B0     		sub	sp, sp, #100
 774              	.LCFI20:
 775              		.cfi_def_cfa_offset 104
 282:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 776              		.loc 1 282 3 view .LVU254
 283:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 777              		.loc 1 283 3 view .LVU255
 284:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 778              		.loc 1 284 3 view .LVU256
 285:Src/tim.c     **** 
 286:Src/tim.c     ****   htim8.Instance = TIM8;
 779              		.loc 1 286 3 view .LVU257
 780              		.loc 1 286 18 is_stmt 0 view .LVU258
 781 0004 3148     		ldr	r0, .L69
 782 0006 324B     		ldr	r3, .L69+4
 783 0008 0360     		str	r3, [r0]
 287:Src/tim.c     ****   htim8.Init.Prescaler = 0;
 784              		.loc 1 287 3 is_stmt 1 view .LVU259
 785              		.loc 1 287 24 is_stmt 0 view .LVU260
 786 000a 0023     		movs	r3, #0
 787 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccoRDxNs.s 			page 20


 288:Src/tim.c     ****   htim8.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 788              		.loc 1 288 3 is_stmt 1 view .LVU261
 789              		.loc 1 288 26 is_stmt 0 view .LVU262
 790 000e 6022     		movs	r2, #96
 791 0010 8260     		str	r2, [r0, #8]
 289:Src/tim.c     ****   htim8.Init.Period = TIM_1_8_PERIOD_CLOCKS;
 792              		.loc 1 289 3 is_stmt 1 view .LVU263
 793              		.loc 1 289 21 is_stmt 0 view .LVU264
 794 0012 41F29A02 		movw	r2, #4250
 795 0016 C260     		str	r2, [r0, #12]
 290:Src/tim.c     ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 796              		.loc 1 290 3 is_stmt 1 view .LVU265
 797              		.loc 1 290 28 is_stmt 0 view .LVU266
 798 0018 0361     		str	r3, [r0, #16]
 291:Src/tim.c     ****   htim8.Init.RepetitionCounter = TIM_1_8_RCR;
 799              		.loc 1 291 3 is_stmt 1 view .LVU267
 800              		.loc 1 291 32 is_stmt 0 view .LVU268
 801 001a 4361     		str	r3, [r0, #20]
 292:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 802              		.loc 1 292 3 is_stmt 1 view .LVU269
 803              		.loc 1 292 7 is_stmt 0 view .LVU270
 804 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 805              	.LVL38:
 806              		.loc 1 292 6 view .LVU271
 807 0020 0028     		cmp	r0, #0
 808 0022 41D1     		bne	.L63
 809              	.L56:
 293:Src/tim.c     ****   {
 294:Src/tim.c     ****     Error_Handler();
 295:Src/tim.c     ****   }
 296:Src/tim.c     **** 
 297:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 810              		.loc 1 297 3 is_stmt 1 view .LVU272
 811              		.loc 1 297 37 is_stmt 0 view .LVU273
 812 0024 2023     		movs	r3, #32
 813 0026 1593     		str	r3, [sp, #84]
 298:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 814              		.loc 1 298 3 is_stmt 1 view .LVU274
 815              		.loc 1 298 33 is_stmt 0 view .LVU275
 816 0028 0023     		movs	r3, #0
 817 002a 1793     		str	r3, [sp, #92]
 299:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 818              		.loc 1 299 3 is_stmt 1 view .LVU276
 819              		.loc 1 299 7 is_stmt 0 view .LVU277
 820 002c 15A9     		add	r1, sp, #84
 821 002e 2748     		ldr	r0, .L69
 822 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 823              	.LVL39:
 824              		.loc 1 299 6 view .LVU278
 825 0034 0028     		cmp	r0, #0
 826 0036 3AD1     		bne	.L64
 827              	.L57:
 300:Src/tim.c     ****   {
 301:Src/tim.c     ****     Error_Handler();
 302:Src/tim.c     ****   }
 303:Src/tim.c     **** 
 304:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
ARM GAS  /tmp/ccoRDxNs.s 			page 21


 828              		.loc 1 304 3 is_stmt 1 view .LVU279
 829              		.loc 1 304 20 is_stmt 0 view .LVU280
 830 0038 7023     		movs	r3, #112
 831 003a 0E93     		str	r3, [sp, #56]
 305:Src/tim.c     ****   sConfigOC.Pulse = 0;
 832              		.loc 1 305 3 is_stmt 1 view .LVU281
 833              		.loc 1 305 19 is_stmt 0 view .LVU282
 834 003c 0022     		movs	r2, #0
 835 003e 0F92     		str	r2, [sp, #60]
 306:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 836              		.loc 1 306 3 is_stmt 1 view .LVU283
 837              		.loc 1 306 24 is_stmt 0 view .LVU284
 838 0040 1092     		str	r2, [sp, #64]
 307:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 839              		.loc 1 307 3 is_stmt 1 view .LVU285
 840              		.loc 1 307 25 is_stmt 0 view .LVU286
 841 0042 1192     		str	r2, [sp, #68]
 308:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 842              		.loc 1 308 3 is_stmt 1 view .LVU287
 843              		.loc 1 308 24 is_stmt 0 view .LVU288
 844 0044 1292     		str	r2, [sp, #72]
 309:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 845              		.loc 1 309 3 is_stmt 1 view .LVU289
 846              		.loc 1 309 25 is_stmt 0 view .LVU290
 847 0046 1392     		str	r2, [sp, #76]
 310:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 848              		.loc 1 310 3 is_stmt 1 view .LVU291
 849              		.loc 1 310 26 is_stmt 0 view .LVU292
 850 0048 1492     		str	r2, [sp, #80]
 311:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 851              		.loc 1 311 3 is_stmt 1 view .LVU293
 852              		.loc 1 311 7 is_stmt 0 view .LVU294
 853 004a 0EA9     		add	r1, sp, #56
 854 004c 1F48     		ldr	r0, .L69
 855 004e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 856              	.LVL40:
 857              		.loc 1 311 6 view .LVU295
 858 0052 0028     		cmp	r0, #0
 859 0054 2ED1     		bne	.L65
 860              	.L58:
 312:Src/tim.c     ****   {
 313:Src/tim.c     ****     Error_Handler();
 314:Src/tim.c     ****   }
 315:Src/tim.c     **** 
 316:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 861              		.loc 1 316 3 is_stmt 1 view .LVU296
 862              		.loc 1 316 7 is_stmt 0 view .LVU297
 863 0056 0422     		movs	r2, #4
 864 0058 0EA9     		add	r1, sp, #56
 865 005a 1C48     		ldr	r0, .L69
 866 005c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 867              	.LVL41:
 868              		.loc 1 316 6 view .LVU298
 869 0060 58BB     		cbnz	r0, .L66
 870              	.L59:
 317:Src/tim.c     ****   {
 318:Src/tim.c     ****     Error_Handler();
ARM GAS  /tmp/ccoRDxNs.s 			page 22


 319:Src/tim.c     ****   }
 320:Src/tim.c     **** 
 321:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 871              		.loc 1 321 3 is_stmt 1 view .LVU299
 872              		.loc 1 321 7 is_stmt 0 view .LVU300
 873 0062 0822     		movs	r2, #8
 874 0064 0EA9     		add	r1, sp, #56
 875 0066 1948     		ldr	r0, .L69
 876 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 877              	.LVL42:
 878              		.loc 1 321 6 view .LVU301
 879 006c 40BB     		cbnz	r0, .L67
 880              	.L60:
 322:Src/tim.c     ****   {
 323:Src/tim.c     ****     Error_Handler();
 324:Src/tim.c     ****   }
 325:Src/tim.c     **** 
 326:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_ENABLE;
 881              		.loc 1 326 3 is_stmt 1 view .LVU302
 882              		.loc 1 326 40 is_stmt 0 view .LVU303
 883 006e 4FF40063 		mov	r3, #2048
 884 0072 0193     		str	r3, [sp, #4]
 327:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 885              		.loc 1 327 3 is_stmt 1 view .LVU304
 886              		.loc 1 327 41 is_stmt 0 view .LVU305
 887 0074 4FF48063 		mov	r3, #1024
 888 0078 0293     		str	r3, [sp, #8]
 328:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 889              		.loc 1 328 3 is_stmt 1 view .LVU306
 890              		.loc 1 328 34 is_stmt 0 view .LVU307
 891 007a 0023     		movs	r3, #0
 892 007c 0393     		str	r3, [sp, #12]
 329:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = TIM_1_8_DEADTIME_CLOCKS;
 893              		.loc 1 329 3 is_stmt 1 view .LVU308
 894              		.loc 1 329 33 is_stmt 0 view .LVU309
 895 007e 2822     		movs	r2, #40
 896 0080 0492     		str	r2, [sp, #16]
 330:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 897              		.loc 1 330 3 is_stmt 1 view .LVU310
 898              		.loc 1 330 35 is_stmt 0 view .LVU311
 899 0082 0593     		str	r3, [sp, #20]
 331:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 900              		.loc 1 331 3 is_stmt 1 view .LVU312
 901              		.loc 1 331 38 is_stmt 0 view .LVU313
 902 0084 4FF40052 		mov	r2, #8192
 903 0088 0692     		str	r2, [sp, #24]
 332:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 904              		.loc 1 332 3 is_stmt 1 view .LVU314
 905              		.loc 1 332 40 is_stmt 0 view .LVU315
 906 008a 0D93     		str	r3, [sp, #52]
 333:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 907              		.loc 1 333 3 is_stmt 1 view .LVU316
 908              		.loc 1 333 7 is_stmt 0 view .LVU317
 909 008c 01A9     		add	r1, sp, #4
 910 008e 0F48     		ldr	r0, .L69
 911 0090 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 912              	.LVL43:
ARM GAS  /tmp/ccoRDxNs.s 			page 23


 913              		.loc 1 333 6 view .LVU318
 914 0094 B8B9     		cbnz	r0, .L68
 915              	.L61:
 334:Src/tim.c     ****   {
 335:Src/tim.c     ****     Error_Handler() ;
 336:Src/tim.c     ****   }
 337:Src/tim.c     **** 
 338:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim8);
 916              		.loc 1 338 3 is_stmt 1 view .LVU319
 339:Src/tim.c     **** __HAL_TIM_MOE_DISABLE_UNCONDITIONALLY(&htim8);
 917              		.loc 1 339 1 view .LVU320
 918 0096 0D4B     		ldr	r3, .L69
 919 0098 1A68     		ldr	r2, [r3]
 920 009a 536C     		ldr	r3, [r2, #68]
 921 009c 23F40043 		bic	r3, r3, #32768
 922 00a0 5364     		str	r3, [r2, #68]
 340:Src/tim.c     **** }
 923              		.loc 1 340 1 is_stmt 0 view .LVU321
 924 00a2 19B0     		add	sp, sp, #100
 925              	.LCFI21:
 926              		.cfi_remember_state
 927              		.cfi_def_cfa_offset 4
 928              		@ sp needed
 929 00a4 5DF804FB 		ldr	pc, [sp], #4
 930              	.L63:
 931              	.LCFI22:
 932              		.cfi_restore_state
 294:Src/tim.c     ****   }
 933              		.loc 1 294 5 is_stmt 1 view .LVU322
 934 00a8 FFF7FEFF 		bl	Error_Handler
 935              	.LVL44:
 936 00ac BAE7     		b	.L56
 937              	.L64:
 301:Src/tim.c     ****   }
 938              		.loc 1 301 5 view .LVU323
 939 00ae FFF7FEFF 		bl	Error_Handler
 940              	.LVL45:
 941 00b2 C1E7     		b	.L57
 942              	.L65:
 313:Src/tim.c     ****   }
 943              		.loc 1 313 5 view .LVU324
 944 00b4 FFF7FEFF 		bl	Error_Handler
 945              	.LVL46:
 946 00b8 CDE7     		b	.L58
 947              	.L66:
 318:Src/tim.c     ****   }
 948              		.loc 1 318 5 view .LVU325
 949 00ba FFF7FEFF 		bl	Error_Handler
 950              	.LVL47:
 951 00be D0E7     		b	.L59
 952              	.L67:
 323:Src/tim.c     ****   }
 953              		.loc 1 323 5 view .LVU326
 954 00c0 FFF7FEFF 		bl	Error_Handler
 955              	.LVL48:
 956 00c4 D3E7     		b	.L60
 957              	.L68:
ARM GAS  /tmp/ccoRDxNs.s 			page 24


 335:Src/tim.c     ****   }
 958              		.loc 1 335 5 view .LVU327
 959 00c6 FFF7FEFF 		bl	Error_Handler
 960              	.LVL49:
 961 00ca E4E7     		b	.L61
 962              	.L70:
 963              		.align	2
 964              	.L69:
 965 00cc 00000000 		.word	.LANCHOR4
 966 00d0 00340140 		.word	1073820672
 967              		.cfi_endproc
 968              	.LFE1872:
 970              		.section	.text.MX_TIM15_Init,"ax",%progbits
 971              		.align	1
 972              		.global	MX_TIM15_Init
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv4-sp-d16
 978              	MX_TIM15_Init:
 979              	.LFB1873:
 341:Src/tim.c     **** /* TIM13 init function */
 342:Src/tim.c     **** void MX_TIM15_Init(void)
 343:Src/tim.c     **** {
 980              		.loc 1 343 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 08B5     		push	{r3, lr}
 985              	.LCFI23:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 3, -8
 988              		.cfi_offset 14, -4
 344:Src/tim.c     **** 
 345:Src/tim.c     ****   htim15.Instance = TIM15;
 989              		.loc 1 345 3 view .LVU329
 990              		.loc 1 345 19 is_stmt 0 view .LVU330
 991 0002 0848     		ldr	r0, .L75
 992 0004 084B     		ldr	r3, .L75+4
 993 0006 0360     		str	r3, [r0]
 346:Src/tim.c     ****   htim15.Init.Prescaler = 0;
 994              		.loc 1 346 3 is_stmt 1 view .LVU331
 995              		.loc 1 346 25 is_stmt 0 view .LVU332
 996 0008 0023     		movs	r3, #0
 997 000a 4360     		str	r3, [r0, #4]
 347:Src/tim.c     ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 998              		.loc 1 347 3 is_stmt 1 view .LVU333
 999              		.loc 1 347 27 is_stmt 0 view .LVU334
 1000 000c 8360     		str	r3, [r0, #8]
 348:Src/tim.c     ****   htim15.Init.Period = (2 * TIM_1_8_PERIOD_CLOCKS * (TIM_1_8_RCR+1)) * ((float)TIM_APB1_CLOCK_HZ / 
 1001              		.loc 1 348 3 is_stmt 1 view .LVU335
 1002              		.loc 1 348 22 is_stmt 0 view .LVU336
 1003 000e 41F29902 		movw	r2, #4249
 1004 0012 C260     		str	r2, [r0, #12]
 349:Src/tim.c     ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1005              		.loc 1 349 3 is_stmt 1 view .LVU337
 1006              		.loc 1 349 29 is_stmt 0 view .LVU338
ARM GAS  /tmp/ccoRDxNs.s 			page 25


 1007 0014 0361     		str	r3, [r0, #16]
 350:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1008              		.loc 1 350 3 is_stmt 1 view .LVU339
 1009              		.loc 1 350 7 is_stmt 0 view .LVU340
 1010 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1011              	.LVL50:
 1012              		.loc 1 350 6 view .LVU341
 1013 001a 00B9     		cbnz	r0, .L74
 1014              	.L71:
 351:Src/tim.c     ****   {
 352:Src/tim.c     ****     Error_Handler();
 353:Src/tim.c     ****   }
 354:Src/tim.c     **** 
 355:Src/tim.c     **** }
 1015              		.loc 1 355 1 view .LVU342
 1016 001c 08BD     		pop	{r3, pc}
 1017              	.L74:
 352:Src/tim.c     ****   }
 1018              		.loc 1 352 5 is_stmt 1 view .LVU343
 1019 001e FFF7FEFF 		bl	Error_Handler
 1020              	.LVL51:
 1021              		.loc 1 355 1 is_stmt 0 view .LVU344
 1022 0022 FBE7     		b	.L71
 1023              	.L76:
 1024              		.align	2
 1025              	.L75:
 1026 0024 00000000 		.word	.LANCHOR5
 1027 0028 00400140 		.word	1073823744
 1028              		.cfi_endproc
 1029              	.LFE1873:
 1031              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 1032              		.align	1
 1033              		.global	HAL_TIM_Base_MspInit
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv4-sp-d16
 1039              	HAL_TIM_Base_MspInit:
 1040              	.LVL52:
 1041              	.LFB1874:
 356:Src/tim.c     **** 
 357:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 358:Src/tim.c     **** {
 1042              		.loc 1 358 1 is_stmt 1 view -0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		.loc 1 358 1 is_stmt 0 view .LVU346
 1047 0000 00B5     		push	{lr}
 1048              	.LCFI24:
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 14, -4
 1051 0002 83B0     		sub	sp, sp, #12
 1052              	.LCFI25:
 1053              		.cfi_def_cfa_offset 16
 359:Src/tim.c     **** 
 360:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
ARM GAS  /tmp/ccoRDxNs.s 			page 26


 1054              		.loc 1 360 3 is_stmt 1 view .LVU347
 1055              		.loc 1 360 20 is_stmt 0 view .LVU348
 1056 0004 0368     		ldr	r3, [r0]
 1057              		.loc 1 360 5 view .LVU349
 1058 0006 144A     		ldr	r2, .L83
 1059 0008 9342     		cmp	r3, r2
 1060 000a 05D0     		beq	.L81
 361:Src/tim.c     ****   {
 362:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 363:Src/tim.c     **** 
 364:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 365:Src/tim.c     ****     /* TIM1 clock enable */
 366:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 367:Src/tim.c     **** 
 368:Src/tim.c     ****     /* TIM1 interrupt Init */
 369:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 6, 0);
 370:Src/tim.c     ****  //   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 371:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 372:Src/tim.c     **** 
 373:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 374:Src/tim.c     ****   }
 375:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 1061              		.loc 1 375 8 is_stmt 1 view .LVU350
 1062              		.loc 1 375 10 is_stmt 0 view .LVU351
 1063 000c 134A     		ldr	r2, .L83+4
 1064 000e 9342     		cmp	r3, r2
 1065 0010 12D0     		beq	.L82
 1066              	.LVL53:
 1067              	.L77:
 376:Src/tim.c     ****   {
 377:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 0 */
 378:Src/tim.c     **** 
 379:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 0 */
 380:Src/tim.c     ****     /* TIM13 clock enable */
 381:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_ENABLE();
 382:Src/tim.c     **** 
 383:Src/tim.c     ****     /* TIM13 interrupt Init */
 384:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 6, 0);
 385:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 386:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 387:Src/tim.c     **** 
 388:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 1 */
 389:Src/tim.c     ****   }
 390:Src/tim.c     **** }
 1068              		.loc 1 390 1 view .LVU352
 1069 0012 03B0     		add	sp, sp, #12
 1070              	.LCFI26:
 1071              		.cfi_remember_state
 1072              		.cfi_def_cfa_offset 4
 1073              		@ sp needed
 1074 0014 5DF804FB 		ldr	pc, [sp], #4
 1075              	.LVL54:
 1076              	.L81:
 1077              	.LCFI27:
 1078              		.cfi_restore_state
 366:Src/tim.c     **** 
 1079              		.loc 1 366 5 is_stmt 1 view .LVU353
ARM GAS  /tmp/ccoRDxNs.s 			page 27


 1080              	.LBB2:
 366:Src/tim.c     **** 
 1081              		.loc 1 366 5 view .LVU354
 366:Src/tim.c     **** 
 1082              		.loc 1 366 5 view .LVU355
 1083 0018 114B     		ldr	r3, .L83+8
 1084 001a 1A6E     		ldr	r2, [r3, #96]
 1085 001c 42F40062 		orr	r2, r2, #2048
 1086 0020 1A66     		str	r2, [r3, #96]
 366:Src/tim.c     **** 
 1087              		.loc 1 366 5 view .LVU356
 1088 0022 1B6E     		ldr	r3, [r3, #96]
 1089 0024 03F40063 		and	r3, r3, #2048
 1090 0028 0093     		str	r3, [sp]
 366:Src/tim.c     **** 
 1091              		.loc 1 366 5 view .LVU357
 1092 002a 009B     		ldr	r3, [sp]
 1093              	.LBE2:
 366:Src/tim.c     **** 
 1094              		.loc 1 366 5 view .LVU358
 369:Src/tim.c     ****  //   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 1095              		.loc 1 369 5 view .LVU359
 1096 002c 0022     		movs	r2, #0
 1097 002e 0621     		movs	r1, #6
 1098 0030 1920     		movs	r0, #25
 1099              	.LVL55:
 369:Src/tim.c     ****  //   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 1100              		.loc 1 369 5 is_stmt 0 view .LVU360
 1101 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1102              	.LVL56:
 1103 0036 ECE7     		b	.L77
 1104              	.LVL57:
 1105              	.L82:
 381:Src/tim.c     **** 
 1106              		.loc 1 381 5 is_stmt 1 view .LVU361
 1107              	.LBB3:
 381:Src/tim.c     **** 
 1108              		.loc 1 381 5 view .LVU362
 381:Src/tim.c     **** 
 1109              		.loc 1 381 5 view .LVU363
 1110 0038 094B     		ldr	r3, .L83+8
 1111 003a 1A6E     		ldr	r2, [r3, #96]
 1112 003c 42F48032 		orr	r2, r2, #65536
 1113 0040 1A66     		str	r2, [r3, #96]
 381:Src/tim.c     **** 
 1114              		.loc 1 381 5 view .LVU364
 1115 0042 1B6E     		ldr	r3, [r3, #96]
 1116 0044 03F48033 		and	r3, r3, #65536
 1117 0048 0193     		str	r3, [sp, #4]
 381:Src/tim.c     **** 
 1118              		.loc 1 381 5 view .LVU365
 1119 004a 019B     		ldr	r3, [sp, #4]
 1120              	.LBE3:
 381:Src/tim.c     **** 
 1121              		.loc 1 381 5 view .LVU366
 384:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1122              		.loc 1 384 5 view .LVU367
ARM GAS  /tmp/ccoRDxNs.s 			page 28


 1123 004c 0022     		movs	r2, #0
 1124 004e 0621     		movs	r1, #6
 1125 0050 1820     		movs	r0, #24
 1126              	.LVL58:
 384:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1127              		.loc 1 384 5 is_stmt 0 view .LVU368
 1128 0052 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1129              	.LVL59:
 1130              		.loc 1 390 1 view .LVU369
 1131 0056 DCE7     		b	.L77
 1132              	.L84:
 1133              		.align	2
 1134              	.L83:
 1135 0058 002C0140 		.word	1073818624
 1136 005c 00400140 		.word	1073823744
 1137 0060 00100240 		.word	1073876992
 1138              		.cfi_endproc
 1139              	.LFE1874:
 1141              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 1142              		.align	1
 1143              		.global	HAL_TIM_PWM_MspInit
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	HAL_TIM_PWM_MspInit:
 1150              	.LVL60:
 1151              	.LFB1875:
 391:Src/tim.c     **** 
 392:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 393:Src/tim.c     **** {
 1152              		.loc 1 393 1 is_stmt 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 8
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		.loc 1 393 1 is_stmt 0 view .LVU371
 1157 0000 00B5     		push	{lr}
 1158              	.LCFI28:
 1159              		.cfi_def_cfa_offset 4
 1160              		.cfi_offset 14, -4
 1161 0002 83B0     		sub	sp, sp, #12
 1162              	.LCFI29:
 1163              		.cfi_def_cfa_offset 16
 394:Src/tim.c     **** 
 395:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 1164              		.loc 1 395 3 is_stmt 1 view .LVU372
 1165              		.loc 1 395 19 is_stmt 0 view .LVU373
 1166 0004 0368     		ldr	r3, [r0]
 1167              		.loc 1 395 5 view .LVU374
 1168 0006 B3F1804F 		cmp	r3, #1073741824
 1169 000a 05D0     		beq	.L89
 396:Src/tim.c     ****   {
 397:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 398:Src/tim.c     **** 
 399:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 400:Src/tim.c     ****     /* TIM2 clock enable */
 401:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
ARM GAS  /tmp/ccoRDxNs.s 			page 29


 402:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 403:Src/tim.c     **** 
 404:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 405:Src/tim.c     ****   }
 406:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM8)
 1170              		.loc 1 406 8 is_stmt 1 view .LVU375
 1171              		.loc 1 406 10 is_stmt 0 view .LVU376
 1172 000c 134A     		ldr	r2, .L91
 1173 000e 9342     		cmp	r3, r2
 1174 0010 0ED0     		beq	.L90
 1175              	.LVL61:
 1176              	.L85:
 407:Src/tim.c     ****   {
 408:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspInit 0 */
 409:Src/tim.c     **** 
 410:Src/tim.c     ****   /* USER CODE END TIM8_MspInit 0 */
 411:Src/tim.c     ****     /* TIM8 clock enable */
 412:Src/tim.c     ****     __HAL_RCC_TIM8_CLK_ENABLE();
 413:Src/tim.c     **** 
 414:Src/tim.c     ****     /* TIM8 interrupt Init */
 415:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM8_UP_IRQn, 6, 0);
 416:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 417:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM8_TRG_COM_IRQn, 6, 0);
 418:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 419:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 420:Src/tim.c     **** 
 421:Src/tim.c     ****   /* USER CODE END TIM8_MspInit 1 */
 422:Src/tim.c     ****   }
 423:Src/tim.c     **** }
 1177              		.loc 1 423 1 view .LVU377
 1178 0012 03B0     		add	sp, sp, #12
 1179              	.LCFI30:
 1180              		.cfi_remember_state
 1181              		.cfi_def_cfa_offset 4
 1182              		@ sp needed
 1183 0014 5DF804FB 		ldr	pc, [sp], #4
 1184              	.LVL62:
 1185              	.L89:
 1186              	.LCFI31:
 1187              		.cfi_restore_state
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1188              		.loc 1 401 5 is_stmt 1 view .LVU378
 1189              	.LBB4:
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1190              		.loc 1 401 5 view .LVU379
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1191              		.loc 1 401 5 view .LVU380
 1192 0018 03F50433 		add	r3, r3, #135168
 1193 001c 9A6D     		ldr	r2, [r3, #88]
 1194 001e 42F00102 		orr	r2, r2, #1
 1195 0022 9A65     		str	r2, [r3, #88]
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1196              		.loc 1 401 5 view .LVU381
 1197 0024 9B6D     		ldr	r3, [r3, #88]
 1198 0026 03F00103 		and	r3, r3, #1
 1199 002a 0093     		str	r3, [sp]
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
ARM GAS  /tmp/ccoRDxNs.s 			page 30


 1200              		.loc 1 401 5 view .LVU382
 1201 002c 009B     		ldr	r3, [sp]
 1202              	.LBE4:
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1203              		.loc 1 401 5 view .LVU383
 1204 002e F0E7     		b	.L85
 1205              	.L90:
 412:Src/tim.c     **** 
 1206              		.loc 1 412 5 view .LVU384
 1207              	.LBB5:
 412:Src/tim.c     **** 
 1208              		.loc 1 412 5 view .LVU385
 412:Src/tim.c     **** 
 1209              		.loc 1 412 5 view .LVU386
 1210 0030 0B4B     		ldr	r3, .L91+4
 1211 0032 1A6E     		ldr	r2, [r3, #96]
 1212 0034 42F40052 		orr	r2, r2, #8192
 1213 0038 1A66     		str	r2, [r3, #96]
 412:Src/tim.c     **** 
 1214              		.loc 1 412 5 view .LVU387
 1215 003a 1B6E     		ldr	r3, [r3, #96]
 1216 003c 03F40053 		and	r3, r3, #8192
 1217 0040 0193     		str	r3, [sp, #4]
 412:Src/tim.c     **** 
 1218              		.loc 1 412 5 view .LVU388
 1219 0042 019B     		ldr	r3, [sp, #4]
 1220              	.LBE5:
 412:Src/tim.c     **** 
 1221              		.loc 1 412 5 view .LVU389
 415:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1222              		.loc 1 415 5 view .LVU390
 1223 0044 0022     		movs	r2, #0
 1224 0046 0621     		movs	r1, #6
 1225 0048 2C20     		movs	r0, #44
 1226              	.LVL63:
 415:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1227              		.loc 1 415 5 is_stmt 0 view .LVU391
 1228 004a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1229              	.LVL64:
 417:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 1230              		.loc 1 417 5 is_stmt 1 view .LVU392
 1231 004e 0022     		movs	r2, #0
 1232 0050 0621     		movs	r1, #6
 1233 0052 2D20     		movs	r0, #45
 1234 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1235              	.LVL65:
 1236              		.loc 1 423 1 is_stmt 0 view .LVU393
 1237 0058 DBE7     		b	.L85
 1238              	.L92:
 1239 005a 00BF     		.align	2
 1240              	.L91:
 1241 005c 00340140 		.word	1073820672
 1242 0060 00100240 		.word	1073876992
 1243              		.cfi_endproc
 1244              	.LFE1875:
 1246              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 1247              		.align	1
ARM GAS  /tmp/ccoRDxNs.s 			page 31


 1248              		.global	HAL_TIM_Encoder_MspInit
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv4-sp-d16
 1254              	HAL_TIM_Encoder_MspInit:
 1255              	.LVL66:
 1256              	.LFB1876:
 424:Src/tim.c     **** 
 425:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 426:Src/tim.c     **** {
 1257              		.loc 1 426 1 is_stmt 1 view -0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 8
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262              		.loc 1 426 1 is_stmt 0 view .LVU395
 1263 0000 82B0     		sub	sp, sp, #8
 1264              	.LCFI32:
 1265              		.cfi_def_cfa_offset 8
 427:Src/tim.c     **** 
 428:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 1266              		.loc 1 428 3 is_stmt 1 view .LVU396
 429:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM3)
 1267              		.loc 1 429 3 view .LVU397
 1268              		.loc 1 429 23 is_stmt 0 view .LVU398
 1269 0002 0368     		ldr	r3, [r0]
 1270              		.loc 1 429 5 view .LVU399
 1271 0004 0E4A     		ldr	r2, .L99
 1272 0006 9342     		cmp	r3, r2
 1273 0008 04D0     		beq	.L97
 430:Src/tim.c     ****   {
 431:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 432:Src/tim.c     **** 
 433:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 434:Src/tim.c     ****     /* TIM3 clock enable */
 435:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 436:Src/tim.c     ****   
 437:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 438:Src/tim.c     ****     PB4     ------> TIM3_CH1
 439:Src/tim.c     ****     PB5     ------> TIM3_CH2 
 440:Src/tim.c     ****     */
 441:Src/tim.c     **** 
 442:Src/tim.c     **** 
 443:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 444:Src/tim.c     **** 
 445:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 446:Src/tim.c     ****   }
 447:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM4)
 1274              		.loc 1 447 8 is_stmt 1 view .LVU400
 1275              		.loc 1 447 10 is_stmt 0 view .LVU401
 1276 000a 0E4A     		ldr	r2, .L99+4
 1277 000c 9342     		cmp	r3, r2
 1278 000e 0CD0     		beq	.L98
 1279              	.L93:
 448:Src/tim.c     ****   {
 449:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 0 */
ARM GAS  /tmp/ccoRDxNs.s 			page 32


 450:Src/tim.c     **** 
 451:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 0 */
 452:Src/tim.c     ****     /* TIM4 clock enable */
 453:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_ENABLE();
 454:Src/tim.c     ****   
 455:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 456:Src/tim.c     ****     PB6     ------> TIM4_CH1
 457:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 458:Src/tim.c     ****     */
 459:Src/tim.c     **** \
 460:Src/tim.c     **** 
 461:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 462:Src/tim.c     **** 
 463:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 1 */
 464:Src/tim.c     ****   }
 465:Src/tim.c     **** }
 1280              		.loc 1 465 1 view .LVU402
 1281 0010 02B0     		add	sp, sp, #8
 1282              	.LCFI33:
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 0
 1285              		@ sp needed
 1286 0012 7047     		bx	lr
 1287              	.L97:
 1288              	.LCFI34:
 1289              		.cfi_restore_state
 435:Src/tim.c     ****   
 1290              		.loc 1 435 5 is_stmt 1 view .LVU403
 1291              	.LBB6:
 435:Src/tim.c     ****   
 1292              		.loc 1 435 5 view .LVU404
 435:Src/tim.c     ****   
 1293              		.loc 1 435 5 view .LVU405
 1294 0014 0C4B     		ldr	r3, .L99+8
 1295 0016 9A6D     		ldr	r2, [r3, #88]
 1296 0018 42F00202 		orr	r2, r2, #2
 1297 001c 9A65     		str	r2, [r3, #88]
 435:Src/tim.c     ****   
 1298              		.loc 1 435 5 view .LVU406
 1299 001e 9B6D     		ldr	r3, [r3, #88]
 1300 0020 03F00203 		and	r3, r3, #2
 1301 0024 0093     		str	r3, [sp]
 435:Src/tim.c     ****   
 1302              		.loc 1 435 5 view .LVU407
 1303 0026 009B     		ldr	r3, [sp]
 1304              	.LBE6:
 435:Src/tim.c     ****   
 1305              		.loc 1 435 5 view .LVU408
 1306 0028 F2E7     		b	.L93
 1307              	.L98:
 453:Src/tim.c     ****   
 1308              		.loc 1 453 5 view .LVU409
 1309              	.LBB7:
 453:Src/tim.c     ****   
 1310              		.loc 1 453 5 view .LVU410
 453:Src/tim.c     ****   
 1311              		.loc 1 453 5 view .LVU411
ARM GAS  /tmp/ccoRDxNs.s 			page 33


 1312 002a 074B     		ldr	r3, .L99+8
 1313 002c 9A6D     		ldr	r2, [r3, #88]
 1314 002e 42F00402 		orr	r2, r2, #4
 1315 0032 9A65     		str	r2, [r3, #88]
 453:Src/tim.c     ****   
 1316              		.loc 1 453 5 view .LVU412
 1317 0034 9B6D     		ldr	r3, [r3, #88]
 1318 0036 03F00403 		and	r3, r3, #4
 1319 003a 0193     		str	r3, [sp, #4]
 453:Src/tim.c     ****   
 1320              		.loc 1 453 5 view .LVU413
 1321 003c 019B     		ldr	r3, [sp, #4]
 1322              	.LBE7:
 453:Src/tim.c     ****   
 1323              		.loc 1 453 5 view .LVU414
 1324              		.loc 1 465 1 is_stmt 0 view .LVU415
 1325 003e E7E7     		b	.L93
 1326              	.L100:
 1327              		.align	2
 1328              	.L99:
 1329 0040 00040040 		.word	1073742848
 1330 0044 00080040 		.word	1073743872
 1331 0048 00100240 		.word	1073876992
 1332              		.cfi_endproc
 1333              	.LFE1876:
 1335              		.section	.text.HAL_TIM_IC_MspInit,"ax",%progbits
 1336              		.align	1
 1337              		.global	HAL_TIM_IC_MspInit
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu fpv4-sp-d16
 1343              	HAL_TIM_IC_MspInit:
 1344              	.LVL67:
 1345              	.LFB1877:
 466:Src/tim.c     **** 
 467:Src/tim.c     **** void HAL_TIM_IC_MspInit(TIM_HandleTypeDef* tim_icHandle)
 468:Src/tim.c     **** {
 1346              		.loc 1 468 1 is_stmt 1 view -0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 469:Src/tim.c     **** 
 470:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 1351              		.loc 1 470 3 view .LVU417
 471:Src/tim.c     ****   if(tim_icHandle->Instance==TIM15)
 1352              		.loc 1 471 3 view .LVU418
 472:Src/tim.c     ****   {
 473:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 0 */
 474:Src/tim.c     **** 
 475:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 476:Src/tim.c     **** 
 477:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 1 */
 478:Src/tim.c     ****   }
 1353              		.loc 1 478 3 view .LVU419
 479:Src/tim.c     **** }
ARM GAS  /tmp/ccoRDxNs.s 			page 34


 1354              		.loc 1 479 1 is_stmt 0 view .LVU420
 1355 0000 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE1877:
 1359              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 1360              		.align	1
 1361              		.global	HAL_TIM_MspPostInit
 1362              		.syntax unified
 1363              		.thumb
 1364              		.thumb_func
 1365              		.fpu fpv4-sp-d16
 1367              	HAL_TIM_MspPostInit:
 1368              	.LVL68:
 1369              	.LFB1878:
 480:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 481:Src/tim.c     **** {
 1370              		.loc 1 481 1 is_stmt 1 view -0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 482:Src/tim.c     **** 
 483:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 1375              		.loc 1 483 3 view .LVU422
 484:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 1376              		.loc 1 484 3 view .LVU423
 485:Src/tim.c     ****   {
 486:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 487:Src/tim.c     **** 
 488:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 489:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 490:Src/tim.c     ****     PB13     ------> TIM1_CH1N
 491:Src/tim.c     ****     PB14     ------> TIM1_CH2N
 492:Src/tim.c     ****     PB15     ------> TIM1_CH3N
 493:Src/tim.c     ****     PA8     ------> TIM1_CH1
 494:Src/tim.c     ****     PA9     ------> TIM1_CH2
 495:Src/tim.c     ****     PA10     ------> TIM1_CH3 
 496:Src/tim.c     ****     */
 497:Src/tim.c     **** 
 498:Src/tim.c     **** 
 499:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 500:Src/tim.c     **** 
 501:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 502:Src/tim.c     ****   }
 503:Src/tim.c     ****   else if(timHandle->Instance==TIM2)
 504:Src/tim.c     ****   {
 505:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 506:Src/tim.c     **** 
 507:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
 508:Src/tim.c     ****   
 509:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 510:Src/tim.c     ****     PB10     ------> TIM2_CH3
 511:Src/tim.c     ****     PB11     ------> TIM2_CH4 
 512:Src/tim.c     ****     */
 513:Src/tim.c     **** 
 514:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 515:Src/tim.c     **** 
ARM GAS  /tmp/ccoRDxNs.s 			page 35


 516:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 517:Src/tim.c     ****   }
 518:Src/tim.c     ****   else if(timHandle->Instance==TIM8)
 519:Src/tim.c     ****   {
 520:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspPostInit 0 */
 521:Src/tim.c     **** 
 522:Src/tim.c     ****   /* USER CODE END TIM8_MspPostInit 0 */
 523:Src/tim.c     ****   
 524:Src/tim.c     ****     /**TIM8 GPIO Configuration    
 525:Src/tim.c     ****     PA7     ------> TIM8_CH1N
 526:Src/tim.c     ****     PB0     ------> TIM8_CH2N
 527:Src/tim.c     ****     PB1     ------> TIM8_CH3N
 528:Src/tim.c     ****     PC6     ------> TIM8_CH1
 529:Src/tim.c     ****     PC7     ------> TIM8_CH2
 530:Src/tim.c     ****     PC8     ------> TIM8_CH3 
 531:Src/tim.c     ****     */
 532:Src/tim.c     **** 
 533:Src/tim.c     **** 
 534:Src/tim.c     **** 
 535:Src/tim.c     **** 
 536:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspPostInit 1 */
 537:Src/tim.c     **** 
 538:Src/tim.c     ****   /* USER CODE END TIM8_MspPostInit 1 */
 539:Src/tim.c     ****   }
 1377              		.loc 1 539 3 view .LVU424
 540:Src/tim.c     **** 
 541:Src/tim.c     **** }
 1378              		.loc 1 541 1 is_stmt 0 view .LVU425
 1379 0000 7047     		bx	lr
 1380              		.cfi_endproc
 1381              	.LFE1878:
 1383              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 1384              		.align	1
 1385              		.global	HAL_TIM_Base_MspDeInit
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu fpv4-sp-d16
 1391              	HAL_TIM_Base_MspDeInit:
 1392              	.LVL69:
 1393              	.LFB1879:
 542:Src/tim.c     **** 
 543:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 544:Src/tim.c     **** {
 1394              		.loc 1 544 1 is_stmt 1 view -0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		.loc 1 544 1 is_stmt 0 view .LVU427
 1399 0000 08B5     		push	{r3, lr}
 1400              	.LCFI35:
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 3, -8
 1403              		.cfi_offset 14, -4
 545:Src/tim.c     **** 
 546:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 1404              		.loc 1 546 3 is_stmt 1 view .LVU428
ARM GAS  /tmp/ccoRDxNs.s 			page 36


 1405              		.loc 1 546 20 is_stmt 0 view .LVU429
 1406 0002 0368     		ldr	r3, [r0]
 1407              		.loc 1 546 5 view .LVU430
 1408 0004 0B4A     		ldr	r2, .L109
 1409 0006 9342     		cmp	r3, r2
 1410 0008 03D0     		beq	.L107
 547:Src/tim.c     ****   {
 548:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 549:Src/tim.c     **** 
 550:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 551:Src/tim.c     ****     /* Peripheral clock disable */
 552:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 553:Src/tim.c     **** 
 554:Src/tim.c     ****     /* TIM1 interrupt Deinit */
 555:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn);
 556:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 557:Src/tim.c     **** 
 558:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 559:Src/tim.c     ****   }
 560:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 1411              		.loc 1 560 8 is_stmt 1 view .LVU431
 1412              		.loc 1 560 10 is_stmt 0 view .LVU432
 1413 000a 0B4A     		ldr	r2, .L109+4
 1414 000c 9342     		cmp	r3, r2
 1415 000e 0AD0     		beq	.L108
 1416              	.LVL70:
 1417              	.L103:
 561:Src/tim.c     ****   {
 562:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 0 */
 563:Src/tim.c     **** 
 564:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 0 */
 565:Src/tim.c     ****     /* Peripheral clock disable */
 566:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_DISABLE();
 567:Src/tim.c     **** 
 568:Src/tim.c     ****     /* TIM13 interrupt Deinit */
 569:Src/tim.c     ****   /* USER CODE BEGIN TIM13:TIM8_UP_TIM13_IRQn disable */
 570:Src/tim.c     ****     /**
 571:Src/tim.c     ****     * Uncomment the line below to disable the "TIM8_UP_TIM13_IRQn" interrupt
 572:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 573:Src/tim.c     ****     */
 574:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM8_UP_TIM13_IRQn); */
 575:Src/tim.c     ****   /* USER CODE END TIM13:TIM8_UP_TIM13_IRQn disable */
 576:Src/tim.c     **** 
 577:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 578:Src/tim.c     **** 
 579:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 1 */
 580:Src/tim.c     ****   }
 581:Src/tim.c     **** }
 1418              		.loc 1 581 1 view .LVU433
 1419 0010 08BD     		pop	{r3, pc}
 1420              	.LVL71:
 1421              	.L107:
 552:Src/tim.c     **** 
 1422              		.loc 1 552 5 is_stmt 1 view .LVU434
 1423 0012 02F56442 		add	r2, r2, #58368
 1424 0016 136E     		ldr	r3, [r2, #96]
 1425 0018 23F40063 		bic	r3, r3, #2048
ARM GAS  /tmp/ccoRDxNs.s 			page 37


 1426 001c 1366     		str	r3, [r2, #96]
 555:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 1427              		.loc 1 555 5 view .LVU435
 1428 001e 1920     		movs	r0, #25
 1429              	.LVL72:
 555:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 1430              		.loc 1 555 5 is_stmt 0 view .LVU436
 1431 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1432              	.LVL73:
 1433 0024 F4E7     		b	.L103
 1434              	.LVL74:
 1435              	.L108:
 566:Src/tim.c     **** 
 1436              		.loc 1 566 5 is_stmt 1 view .LVU437
 1437 0026 02F55042 		add	r2, r2, #53248
 1438 002a 136E     		ldr	r3, [r2, #96]
 1439 002c 23F48033 		bic	r3, r3, #65536
 1440 0030 1366     		str	r3, [r2, #96]
 1441              		.loc 1 581 1 is_stmt 0 view .LVU438
 1442 0032 EDE7     		b	.L103
 1443              	.L110:
 1444              		.align	2
 1445              	.L109:
 1446 0034 002C0140 		.word	1073818624
 1447 0038 00400140 		.word	1073823744
 1448              		.cfi_endproc
 1449              	.LFE1879:
 1451              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 1452              		.align	1
 1453              		.global	HAL_TIM_PWM_MspDeInit
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu fpv4-sp-d16
 1459              	HAL_TIM_PWM_MspDeInit:
 1460              	.LVL75:
 1461              	.LFB1880:
 582:Src/tim.c     **** 
 583:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 584:Src/tim.c     **** {
 1462              		.loc 1 584 1 is_stmt 1 view -0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 585:Src/tim.c     **** 
 586:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 1467              		.loc 1 586 3 view .LVU440
 1468              		.loc 1 586 19 is_stmt 0 view .LVU441
 1469 0000 0368     		ldr	r3, [r0]
 1470              		.loc 1 586 5 view .LVU442
 1471 0002 B3F1804F 		cmp	r3, #1073741824
 1472 0006 03D0     		beq	.L114
 587:Src/tim.c     ****   {
 588:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 589:Src/tim.c     **** 
 590:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
ARM GAS  /tmp/ccoRDxNs.s 			page 38


 591:Src/tim.c     ****     /* Peripheral clock disable */
 592:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 593:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 594:Src/tim.c     **** 
 595:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 596:Src/tim.c     ****   }
 597:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM8)
 1473              		.loc 1 597 8 is_stmt 1 view .LVU443
 1474              		.loc 1 597 10 is_stmt 0 view .LVU444
 1475 0008 084A     		ldr	r2, .L116
 1476 000a 9342     		cmp	r3, r2
 1477 000c 06D0     		beq	.L115
 1478              	.L111:
 598:Src/tim.c     ****   {
 599:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspDeInit 0 */
 600:Src/tim.c     **** 
 601:Src/tim.c     ****   /* USER CODE END TIM8_MspDeInit 0 */
 602:Src/tim.c     ****     /* Peripheral clock disable */
 603:Src/tim.c     ****     __HAL_RCC_TIM8_CLK_DISABLE();
 604:Src/tim.c     **** 
 605:Src/tim.c     ****     /* TIM8 interrupt Deinit */
 606:Src/tim.c     ****   /* USER CODE BEGIN TIM8:TIM8_UP_TIM13_IRQn disable */
 607:Src/tim.c     ****     /**
 608:Src/tim.c     ****     * Uncomment the line below to disable the "TIM8_UP_TIM13_IRQn" interrupt
 609:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 610:Src/tim.c     ****     */
 611:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM8_UP_TIM13_IRQn); */
 612:Src/tim.c     ****   /* USER CODE END TIM8:TIM8_UP_TIM13_IRQn disable */
 613:Src/tim.c     **** 
 614:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 615:Src/tim.c     **** 
 616:Src/tim.c     ****   /* USER CODE END TIM8_MspDeInit 1 */
 617:Src/tim.c     ****   }
 618:Src/tim.c     **** }
 1479              		.loc 1 618 1 view .LVU445
 1480 000e 7047     		bx	lr
 1481              	.L114:
 592:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 1482              		.loc 1 592 5 is_stmt 1 view .LVU446
 1483 0010 074A     		ldr	r2, .L116+4
 1484 0012 936D     		ldr	r3, [r2, #88]
 1485 0014 23F00103 		bic	r3, r3, #1
 1486 0018 9365     		str	r3, [r2, #88]
 1487 001a 7047     		bx	lr
 1488              	.L115:
 603:Src/tim.c     **** 
 1489              		.loc 1 603 5 view .LVU447
 1490 001c 02F55C42 		add	r2, r2, #56320
 1491 0020 136E     		ldr	r3, [r2, #96]
 1492 0022 23F40053 		bic	r3, r3, #8192
 1493 0026 1366     		str	r3, [r2, #96]
 1494              		.loc 1 618 1 is_stmt 0 view .LVU448
 1495 0028 F1E7     		b	.L111
 1496              	.L117:
 1497 002a 00BF     		.align	2
 1498              	.L116:
 1499 002c 00340140 		.word	1073820672
ARM GAS  /tmp/ccoRDxNs.s 			page 39


 1500 0030 00100240 		.word	1073876992
 1501              		.cfi_endproc
 1502              	.LFE1880:
 1504              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 1505              		.align	1
 1506              		.global	HAL_TIM_Encoder_MspDeInit
 1507              		.syntax unified
 1508              		.thumb
 1509              		.thumb_func
 1510              		.fpu fpv4-sp-d16
 1512              	HAL_TIM_Encoder_MspDeInit:
 1513              	.LVL76:
 1514              	.LFB1881:
 619:Src/tim.c     **** 
 620:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 621:Src/tim.c     **** {
 1515              		.loc 1 621 1 is_stmt 1 view -0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
 622:Src/tim.c     **** 
 623:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM3)
 1520              		.loc 1 623 3 view .LVU450
 1521              		.loc 1 623 23 is_stmt 0 view .LVU451
 1522 0000 0368     		ldr	r3, [r0]
 1523              		.loc 1 623 5 view .LVU452
 1524 0002 0A4A     		ldr	r2, .L123
 1525 0004 9342     		cmp	r3, r2
 1526 0006 03D0     		beq	.L121
 624:Src/tim.c     ****   {
 625:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 626:Src/tim.c     **** 
 627:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 628:Src/tim.c     ****     /* Peripheral clock disable */
 629:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 630:Src/tim.c     ****   
 631:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 632:Src/tim.c     ****     PB4     ------> TIM3_CH1
 633:Src/tim.c     ****     PB5     ------> TIM3_CH2 
 634:Src/tim.c     ****     */
 635:Src/tim.c     ****   
 636:Src/tim.c     **** 
 637:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 638:Src/tim.c     **** 
 639:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 640:Src/tim.c     ****   }
 641:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM4)
 1527              		.loc 1 641 8 is_stmt 1 view .LVU453
 1528              		.loc 1 641 10 is_stmt 0 view .LVU454
 1529 0008 094A     		ldr	r2, .L123+4
 1530 000a 9342     		cmp	r3, r2
 1531 000c 07D0     		beq	.L122
 1532              	.L118:
 642:Src/tim.c     ****   {
 643:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 644:Src/tim.c     **** 
ARM GAS  /tmp/ccoRDxNs.s 			page 40


 645:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 0 */
 646:Src/tim.c     ****     /* Peripheral clock disable */
 647:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_DISABLE();
 648:Src/tim.c     ****   
 649:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 650:Src/tim.c     ****     PB6     ------> TIM4_CH1
 651:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 652:Src/tim.c     ****     */
 653:Src/tim.c     **** 
 654:Src/tim.c     **** 
 655:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 656:Src/tim.c     **** 
 657:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 1 */
 658:Src/tim.c     ****   }
 659:Src/tim.c     **** }
 1533              		.loc 1 659 1 view .LVU455
 1534 000e 7047     		bx	lr
 1535              	.L121:
 629:Src/tim.c     ****   
 1536              		.loc 1 629 5 is_stmt 1 view .LVU456
 1537 0010 02F50332 		add	r2, r2, #134144
 1538 0014 936D     		ldr	r3, [r2, #88]
 1539 0016 23F00203 		bic	r3, r3, #2
 1540 001a 9365     		str	r3, [r2, #88]
 1541 001c 7047     		bx	lr
 1542              	.L122:
 647:Src/tim.c     ****   
 1543              		.loc 1 647 5 view .LVU457
 1544 001e 02F50232 		add	r2, r2, #133120
 1545 0022 936D     		ldr	r3, [r2, #88]
 1546 0024 23F00403 		bic	r3, r3, #4
 1547 0028 9365     		str	r3, [r2, #88]
 1548              		.loc 1 659 1 is_stmt 0 view .LVU458
 1549 002a F0E7     		b	.L118
 1550              	.L124:
 1551              		.align	2
 1552              	.L123:
 1553 002c 00040040 		.word	1073742848
 1554 0030 00080040 		.word	1073743872
 1555              		.cfi_endproc
 1556              	.LFE1881:
 1558              		.section	.text.HAL_TIM_IC_MspDeInit,"ax",%progbits
 1559              		.align	1
 1560              		.global	HAL_TIM_IC_MspDeInit
 1561              		.syntax unified
 1562              		.thumb
 1563              		.thumb_func
 1564              		.fpu fpv4-sp-d16
 1566              	HAL_TIM_IC_MspDeInit:
 1567              	.LVL77:
 1568              	.LFB1882:
 660:Src/tim.c     **** 
 661:Src/tim.c     **** void HAL_TIM_IC_MspDeInit(TIM_HandleTypeDef* tim_icHandle)
 662:Src/tim.c     **** {
 1569              		.loc 1 662 1 is_stmt 1 view -0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoRDxNs.s 			page 41


 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 663:Src/tim.c     **** 
 664:Src/tim.c     **** 
 665:Src/tim.c     **** } 
 1574              		.loc 1 665 1 view .LVU460
 1575 0000 7047     		bx	lr
 1576              		.cfi_endproc
 1577              	.LFE1882:
 1579              		.global	htim15
 1580              		.global	htim8
 1581              		.global	htim4
 1582              		.global	htim3
 1583              		.global	htim2
 1584              		.global	htim1
 1585              		.section	.bss.htim1,"aw",%nobits
 1586              		.align	2
 1587              		.set	.LANCHOR0,. + 0
 1590              	htim1:
 1591 0000 00000000 		.space	76
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1592              		.section	.bss.htim15,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR5,. + 0
 1597              	htim15:
 1598 0000 00000000 		.space	76
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1599              		.section	.bss.htim2,"aw",%nobits
 1600              		.align	2
 1601              		.set	.LANCHOR1,. + 0
 1604              	htim2:
 1605 0000 00000000 		.space	76
 1605      00000000 
 1605      00000000 
 1605      00000000 
 1605      00000000 
 1606              		.section	.bss.htim3,"aw",%nobits
 1607              		.align	2
 1608              		.set	.LANCHOR2,. + 0
 1611              	htim3:
 1612 0000 00000000 		.space	76
 1612      00000000 
 1612      00000000 
 1612      00000000 
 1612      00000000 
 1613              		.section	.bss.htim4,"aw",%nobits
 1614              		.align	2
 1615              		.set	.LANCHOR3,. + 0
 1618              	htim4:
 1619 0000 00000000 		.space	76
 1619      00000000 
ARM GAS  /tmp/ccoRDxNs.s 			page 42


 1619      00000000 
 1619      00000000 
 1619      00000000 
 1620              		.section	.bss.htim8,"aw",%nobits
 1621              		.align	2
 1622              		.set	.LANCHOR4,. + 0
 1625              	htim8:
 1626 0000 00000000 		.space	76
 1626      00000000 
 1626      00000000 
 1626      00000000 
 1626      00000000 
 1627              		.text
 1628              	.Letext0:
 1629              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1630              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1631              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1632              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1633              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1634              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1635              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1636              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1637              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1638              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1639              		.file 12 "Inc/tim.h"
 1640              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 1641              		.file 14 "Inc/main.h"
 1642              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
ARM GAS  /tmp/ccoRDxNs.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccoRDxNs.s:18     .text.OC4_PWM_Override:0000000000000000 $t
     /tmp/ccoRDxNs.s:26     .text.OC4_PWM_Override:0000000000000000 OC4_PWM_Override
     /tmp/ccoRDxNs.s:82     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccoRDxNs.s:89     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccoRDxNs.s:355    .text.MX_TIM1_Init:0000000000000114 $d
     /tmp/ccoRDxNs.s:361    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccoRDxNs.s:368    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccoRDxNs.s:503    .text.MX_TIM2_Init:0000000000000080 $d
     /tmp/ccoRDxNs.s:508    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccoRDxNs.s:515    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccoRDxNs.s:626    .text.MX_TIM3_Init:000000000000005c $d
     /tmp/ccoRDxNs.s:632    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccoRDxNs.s:639    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccoRDxNs.s:750    .text.MX_TIM4_Init:000000000000005c $d
     /tmp/ccoRDxNs.s:756    .text.MX_TIM8_Init:0000000000000000 $t
     /tmp/ccoRDxNs.s:763    .text.MX_TIM8_Init:0000000000000000 MX_TIM8_Init
     /tmp/ccoRDxNs.s:965    .text.MX_TIM8_Init:00000000000000cc $d
     /tmp/ccoRDxNs.s:971    .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccoRDxNs.s:978    .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccoRDxNs.s:1026   .text.MX_TIM15_Init:0000000000000024 $d
     /tmp/ccoRDxNs.s:1032   .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1039   .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccoRDxNs.s:1135   .text.HAL_TIM_Base_MspInit:0000000000000058 $d
     /tmp/ccoRDxNs.s:1142   .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1149   .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccoRDxNs.s:1241   .text.HAL_TIM_PWM_MspInit:000000000000005c $d
     /tmp/ccoRDxNs.s:1247   .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1254   .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccoRDxNs.s:1329   .text.HAL_TIM_Encoder_MspInit:0000000000000040 $d
     /tmp/ccoRDxNs.s:1336   .text.HAL_TIM_IC_MspInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1343   .text.HAL_TIM_IC_MspInit:0000000000000000 HAL_TIM_IC_MspInit
     /tmp/ccoRDxNs.s:1360   .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1367   .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccoRDxNs.s:1384   .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1391   .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccoRDxNs.s:1446   .text.HAL_TIM_Base_MspDeInit:0000000000000034 $d
     /tmp/ccoRDxNs.s:1452   .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1459   .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccoRDxNs.s:1499   .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d
     /tmp/ccoRDxNs.s:1505   .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1512   .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccoRDxNs.s:1553   .text.HAL_TIM_Encoder_MspDeInit:000000000000002c $d
     /tmp/ccoRDxNs.s:1559   .text.HAL_TIM_IC_MspDeInit:0000000000000000 $t
     /tmp/ccoRDxNs.s:1566   .text.HAL_TIM_IC_MspDeInit:0000000000000000 HAL_TIM_IC_MspDeInit
     /tmp/ccoRDxNs.s:1597   .bss.htim15:0000000000000000 htim15
     /tmp/ccoRDxNs.s:1625   .bss.htim8:0000000000000000 htim8
     /tmp/ccoRDxNs.s:1618   .bss.htim4:0000000000000000 htim4
     /tmp/ccoRDxNs.s:1611   .bss.htim3:0000000000000000 htim3
     /tmp/ccoRDxNs.s:1604   .bss.htim2:0000000000000000 htim2
     /tmp/ccoRDxNs.s:1590   .bss.htim1:0000000000000000 htim1
     /tmp/ccoRDxNs.s:1586   .bss.htim1:0000000000000000 $d
     /tmp/ccoRDxNs.s:1593   .bss.htim15:0000000000000000 $d
     /tmp/ccoRDxNs.s:1600   .bss.htim2:0000000000000000 $d
     /tmp/ccoRDxNs.s:1607   .bss.htim3:0000000000000000 $d
     /tmp/ccoRDxNs.s:1614   .bss.htim4:0000000000000000 $d
ARM GAS  /tmp/ccoRDxNs.s 			page 44


     /tmp/ccoRDxNs.s:1621   .bss.htim8:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_OC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_TIM_Encoder_Init
HAL_NVIC_SetPriority
HAL_NVIC_DisableIRQ
