ARM GAS  /tmp/ccQYv0hE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.OC4_PWM_Override,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	OC4_PWM_Override
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	OC4_PWM_Override:
  28              	.LVL0:
  29              	.LFB1867:
  30              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/tim.c     ****   * All rights reserved.
  15:Src/tim.c     ****   *
  16:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/tim.c     ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/tim.c     ****   *
  19:Src/tim.c     ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/tim.c     ****   *    this list of conditions and the following disclaimer.
  21:Src/tim.c     ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/tim.c     ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/tim.c     ****   *    and/or other materials provided with the distribution.
  24:Src/tim.c     ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/tim.c     ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/tim.c     ****   *    derived from this software without specific written permission.
  27:Src/tim.c     ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/tim.c     ****   *    software, must execute solely and exclusively on microcontroller or
ARM GAS  /tmp/ccQYv0hE.s 			page 2


  29:Src/tim.c     ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/tim.c     ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/tim.c     ****   *    this license is void and will automatically terminate your rights under 
  32:Src/tim.c     ****   *    this license. 
  33:Src/tim.c     ****   *
  34:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/tim.c     ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/tim.c     ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/tim.c     ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/tim.c     ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/tim.c     ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/tim.c     ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/tim.c     ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/tim.c     ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/tim.c     ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/tim.c     ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/tim.c     ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/tim.c     ****   *
  47:Src/tim.c     ****   ******************************************************************************
  48:Src/tim.c     ****   */
  49:Src/tim.c     **** 
  50:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  51:Src/tim.c     **** #include "tim.h"
  52:Src/tim.c     **** 
  53:Src/tim.c     **** #include "gpio.h"
  54:Src/tim.c     **** #include  "main.h"
  55:Src/tim.c     **** /* USER CODE BEGIN 0 */
  56:Src/tim.c     **** 
  57:Src/tim.c     **** // To trigger the ADC, we must use an output channel that is in PWM mode
  58:Src/tim.c     **** // However, CubeMX does not allow you to set up a channel as PWM without an output pin.
  59:Src/tim.c     **** // This will set OC4 to PWM mode. Also, triggering doesn't work if the compare register
  60:Src/tim.c     **** // (called pulse here) is 0, so we initialise it to 1.
  61:Src/tim.c     **** void OC4_PWM_Override(TIM_HandleTypeDef* htim) {
  31              		.loc 1 61 48 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 32
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  62:Src/tim.c     **** 
  63:Src/tim.c     ****     TIM_OC_InitTypeDef sConfigOC;
  35              		.loc 1 63 5 view .LVU1
  64:Src/tim.c     ****     sConfigOC.OCMode = TIM_OCMODE_PWM2;
  36              		.loc 1 64 5 view .LVU2
  65:Src/tim.c     ****     sConfigOC.Pulse = 1;
  37              		.loc 1 65 5 view .LVU3
  66:Src/tim.c     ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  38              		.loc 1 66 5 view .LVU4
  67:Src/tim.c     ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  39              		.loc 1 67 5 view .LVU5
  68:Src/tim.c     ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  40              		.loc 1 68 5 view .LVU6
  69:Src/tim.c     ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  41              		.loc 1 69 5 view .LVU7
  61:Src/tim.c     **** 
  42              		.loc 1 61 48 is_stmt 0 view .LVU8
  43 0000 00B5     		push	{lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccQYv0hE.s 			page 3


  46              		.cfi_offset 14, -4
  64:Src/tim.c     ****     sConfigOC.Pulse = 1;
  47              		.loc 1 64 22 view .LVU9
  48 0002 9FED0B7B 		vldr.64	d7, .L4	@ int
  61:Src/tim.c     **** 
  49              		.loc 1 61 48 view .LVU10
  50 0006 89B0     		sub	sp, sp, #36
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 40
  64:Src/tim.c     ****     sConfigOC.Pulse = 1;
  53              		.loc 1 64 22 view .LVU11
  54 0008 7022     		movs	r2, #112
  55 000a 0123     		movs	r3, #1
  56 000c CDE90023 		strd	r2, [sp]
  70:Src/tim.c     ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  71:Src/tim.c     **** 
  72:Src/tim.c     ****     HAL_TIM_OC_ConfigChannel(htim, &sConfigOC, TIM_CHANNEL_4);
  57              		.loc 1 72 5 view .LVU12
  58 0010 6946     		mov	r1, sp
  70:Src/tim.c     ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  59              		.loc 1 70 28 view .LVU13
  60 0012 0023     		movs	r3, #0
  61              		.loc 1 72 5 view .LVU14
  62 0014 0C22     		movs	r2, #12
  64:Src/tim.c     ****     sConfigOC.Pulse = 1;
  63              		.loc 1 64 22 view .LVU15
  64 0016 8DED027B 		vstr.64	d7, [sp, #8]	@ int
  65 001a 8DED047B 		vstr.64	d7, [sp, #16]	@ int
  70:Src/tim.c     ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  66              		.loc 1 70 5 is_stmt 1 view .LVU16
  70:Src/tim.c     ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  67              		.loc 1 70 28 is_stmt 0 view .LVU17
  68 001e 0693     		str	r3, [sp, #24]
  69              		.loc 1 72 5 is_stmt 1 view .LVU18
  70 0020 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
  71              	.LVL1:
  73:Src/tim.c     **** }
  72              		.loc 1 73 1 is_stmt 0 view .LVU19
  73 0024 09B0     		add	sp, sp, #36
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 4
  76              		@ sp needed
  77 0026 5DF804FB 		ldr	pc, [sp], #4
  78              	.L5:
  79 002a 00BFAFF3 		.align	3
  79      0080
  80              	.L4:
  81 0030 00000000 		.word	0
  82 0034 00000000 		.word	0
  83              		.cfi_endproc
  84              	.LFE1867:
  86              		.section	.text.MX_TIM1_Init,"ax",%progbits
  87              		.align	1
  88              		.p2align 2,,3
  89              		.global	MX_TIM1_Init
  90              		.syntax unified
  91              		.thumb
ARM GAS  /tmp/ccQYv0hE.s 			page 4


  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	MX_TIM1_Init:
  96              	.LFB1868:
  74:Src/tim.c     **** 
  75:Src/tim.c     **** /* USER CODE END 0 */
  76:Src/tim.c     **** 
  77:Src/tim.c     **** TIM_HandleTypeDef htim1;
  78:Src/tim.c     **** TIM_HandleTypeDef htim2;
  79:Src/tim.c     **** TIM_HandleTypeDef htim3;
  80:Src/tim.c     **** TIM_HandleTypeDef htim4;
  81:Src/tim.c     **** 
  82:Src/tim.c     **** TIM_HandleTypeDef htim8;
  83:Src/tim.c     **** TIM_HandleTypeDef htim15;
  84:Src/tim.c     **** 
  85:Src/tim.c     **** /* TIM1 init function */
  86:Src/tim.c     **** void MX_TIM1_Init(void)
  87:Src/tim.c     **** {
  97              		.loc 1 87 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 120
 100              		@ frame_needed = 0, uses_anonymous_args = 0
  88:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 101              		.loc 1 88 3 view .LVU21
  89:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 102              		.loc 1 89 3 view .LVU22
  90:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 103              		.loc 1 90 3 view .LVU23
  91:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 104              		.loc 1 91 3 view .LVU24
  92:Src/tim.c     **** 
  93:Src/tim.c     ****   htim1.Instance = TIM1;
 105              		.loc 1 93 3 view .LVU25
  87:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 106              		.loc 1 87 1 is_stmt 0 view .LVU26
 107 0000 10B5     		push	{r4, lr}
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 4, -8
 111              		.cfi_offset 14, -4
 112              		.loc 1 93 18 view .LVU27
 113 0002 4B48     		ldr	r0, .L58+24
 114 0004 4B4C     		ldr	r4, .L58+28
  94:Src/tim.c     ****   htim1.Init.Prescaler = 0;
 115              		.loc 1 94 24 view .LVU28
 116 0006 0023     		movs	r3, #0
  87:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 117              		.loc 1 87 1 view .LVU29
 118 0008 9EB0     		sub	sp, sp, #120
 119              	.LCFI4:
 120              		.cfi_def_cfa_offset 128
  95:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 121              		.loc 1 95 26 view .LVU30
 122 000a 6021     		movs	r1, #96
  96:Src/tim.c     ****   htim1.Init.Period = TIM_1_8_PERIOD_CLOCKS;
 123              		.loc 1 96 21 view .LVU31
 124 000c 41F29A02 		movw	r2, #4250
ARM GAS  /tmp/ccQYv0hE.s 			page 5


  94:Src/tim.c     ****   htim1.Init.Prescaler = 0;
 125              		.loc 1 94 24 view .LVU32
 126 0010 C0E90043 		strd	r4, r3, [r0]
  95:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 127              		.loc 1 95 3 is_stmt 1 view .LVU33
 128              		.loc 1 96 21 is_stmt 0 view .LVU34
 129 0014 C0E90212 		strd	r1, r2, [r0, #8]
  97:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 130              		.loc 1 97 3 is_stmt 1 view .LVU35
  98:Src/tim.c     ****   htim1.Init.RepetitionCounter = TIM_1_8_RCR;
 131              		.loc 1 98 32 is_stmt 0 view .LVU36
 132 0018 C0E90433 		strd	r3, r3, [r0, #16]
  99:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 133              		.loc 1 99 3 is_stmt 1 view .LVU37
 134              		.loc 1 99 7 is_stmt 0 view .LVU38
 135 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 136              	.LVL2:
 137              		.loc 1 99 6 view .LVU39
 138 0020 0028     		cmp	r0, #0
 139 0022 57D1     		bne	.L48
 140              	.L7:
 100:Src/tim.c     ****   {
 101:Src/tim.c     ****     Error_Handler();
 102:Src/tim.c     ****   }
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 141              		.loc 1 104 3 is_stmt 1 view .LVU40
 142              		.loc 1 104 34 is_stmt 0 view .LVU41
 143 0024 4FF48053 		mov	r3, #4096
 105:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 144              		.loc 1 105 7 view .LVU42
 145 0028 4148     		ldr	r0, .L58+24
 104:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 146              		.loc 1 104 34 view .LVU43
 147 002a 0493     		str	r3, [sp, #16]
 148              		.loc 1 105 3 is_stmt 1 view .LVU44
 149              		.loc 1 105 7 is_stmt 0 view .LVU45
 150 002c 04A9     		add	r1, sp, #16
 151 002e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 152              	.LVL3:
 153              		.loc 1 105 6 view .LVU46
 154 0032 0028     		cmp	r0, #0
 155 0034 6AD1     		bne	.L49
 156              	.L8:
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****     Error_Handler();
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 157              		.loc 1 110 3 is_stmt 1 view .LVU47
 158              		.loc 1 110 7 is_stmt 0 view .LVU48
 159 0036 3E48     		ldr	r0, .L58+24
 160 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 161              	.LVL4:
 162              		.loc 1 110 6 view .LVU49
 163 003c 0028     		cmp	r0, #0
 164 003e 62D1     		bne	.L50
ARM GAS  /tmp/ccQYv0hE.s 			page 6


 165              	.L9:
 111:Src/tim.c     ****   {
 112:Src/tim.c     ****     Error_Handler();
 113:Src/tim.c     ****   }
 114:Src/tim.c     **** 
 115:Src/tim.c     ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 166              		.loc 1 115 3 is_stmt 1 view .LVU50
 167              		.loc 1 115 7 is_stmt 0 view .LVU51
 168 0040 3B48     		ldr	r0, .L58+24
 169 0042 FFF7FEFF 		bl	HAL_TIM_OC_Init
 170              	.LVL5:
 171              		.loc 1 115 6 view .LVU52
 172 0046 0028     		cmp	r0, #0
 173 0048 5AD1     		bne	.L51
 174              	.L10:
 116:Src/tim.c     ****   {
 117:Src/tim.c     ****     Error_Handler();
 118:Src/tim.c     ****   }
 119:Src/tim.c     **** 
 120:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 175              		.loc 1 120 3 is_stmt 1 view .LVU53
 176              		.loc 1 120 37 is_stmt 0 view .LVU54
 177 004a 2022     		movs	r2, #32
 121:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 178              		.loc 1 121 33 view .LVU55
 179 004c 0023     		movs	r3, #0
 122:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 180              		.loc 1 122 7 view .LVU56
 181 004e 3848     		ldr	r0, .L58+24
 120:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 182              		.loc 1 120 37 view .LVU57
 183 0050 0192     		str	r2, [sp, #4]
 121:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 184              		.loc 1 121 3 is_stmt 1 view .LVU58
 185              		.loc 1 122 7 is_stmt 0 view .LVU59
 186 0052 01A9     		add	r1, sp, #4
 121:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 187              		.loc 1 121 33 view .LVU60
 188 0054 0393     		str	r3, [sp, #12]
 189              		.loc 1 122 3 is_stmt 1 view .LVU61
 190              		.loc 1 122 7 is_stmt 0 view .LVU62
 191 0056 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 192              	.LVL6:
 193              		.loc 1 122 6 view .LVU63
 194 005a 0028     		cmp	r0, #0
 195 005c 4DD1     		bne	.L52
 196              	.L11:
 123:Src/tim.c     ****   {
 124:Src/tim.c     ****     Error_Handler();
 125:Src/tim.c     ****   }
 126:Src/tim.c     **** 
 127:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 197              		.loc 1 127 3 is_stmt 1 view .LVU64
 128:Src/tim.c     ****   sConfigOC.Pulse = 0;
 198              		.loc 1 128 3 view .LVU65
 129:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 199              		.loc 1 129 3 view .LVU66
ARM GAS  /tmp/ccQYv0hE.s 			page 7


 130:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 200              		.loc 1 130 3 view .LVU67
 131:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 201              		.loc 1 131 3 view .LVU68
 132:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 202              		.loc 1 132 3 view .LVU69
 127:Src/tim.c     ****   sConfigOC.Pulse = 0;
 203              		.loc 1 127 20 is_stmt 0 view .LVU70
 204 005e 9FED2E7B 		vldr.64	d7, .L58	@ int
 205 0062 0020     		movs	r0, #0
 206 0064 0021     		movs	r1, #0
 207 0066 CDE90A01 		strd	r0, [sp, #40]
 208 006a CDE90C01 		strd	r0, [sp, #48]
 133:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 209              		.loc 1 133 3 is_stmt 1 view .LVU71
 210              		.loc 1 133 26 is_stmt 0 view .LVU72
 211 006e 0022     		movs	r2, #0
 134:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 212              		.loc 1 134 7 view .LVU73
 213 0070 2F48     		ldr	r0, .L58+24
 133:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 214              		.loc 1 133 26 view .LVU74
 215 0072 0E92     		str	r2, [sp, #56]
 216              		.loc 1 134 3 is_stmt 1 view .LVU75
 217              		.loc 1 134 7 is_stmt 0 view .LVU76
 218 0074 08A9     		add	r1, sp, #32
 127:Src/tim.c     ****   sConfigOC.Pulse = 0;
 219              		.loc 1 127 20 view .LVU77
 220 0076 8DED087B 		vstr.64	d7, [sp, #32]	@ int
 221              		.loc 1 134 7 view .LVU78
 222 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 223              	.LVL7:
 224              		.loc 1 134 6 view .LVU79
 225 007e 0028     		cmp	r0, #0
 226 0080 38D1     		bne	.L53
 227              	.L12:
 135:Src/tim.c     ****   {
 136:Src/tim.c     ****     Error_Handler();
 137:Src/tim.c     ****   }
 138:Src/tim.c     **** 
 139:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 228              		.loc 1 139 3 is_stmt 1 view .LVU80
 229              		.loc 1 139 7 is_stmt 0 view .LVU81
 230 0082 2B48     		ldr	r0, .L58+24
 231 0084 0422     		movs	r2, #4
 232 0086 08A9     		add	r1, sp, #32
 233 0088 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 234              	.LVL8:
 235              		.loc 1 139 6 view .LVU82
 236 008c 78BB     		cbnz	r0, .L54
 237              	.L13:
 140:Src/tim.c     ****   {
 141:Src/tim.c     ****     Error_Handler();
 142:Src/tim.c     ****   }
 143:Src/tim.c     **** 
 144:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 238              		.loc 1 144 3 is_stmt 1 view .LVU83
ARM GAS  /tmp/ccQYv0hE.s 			page 8


 239              		.loc 1 144 7 is_stmt 0 view .LVU84
 240 008e 2848     		ldr	r0, .L58+24
 241 0090 0822     		movs	r2, #8
 242 0092 08A9     		add	r1, sp, #32
 243 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 244              	.LVL9:
 245              		.loc 1 144 6 view .LVU85
 246 0098 30BB     		cbnz	r0, .L55
 247              	.L14:
 145:Src/tim.c     ****   {
 146:Src/tim.c     ****     Error_Handler();
 147:Src/tim.c     ****   }
 148:Src/tim.c     **** 
 149:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 248              		.loc 1 149 3 is_stmt 1 view .LVU86
 249              		.loc 1 149 20 is_stmt 0 view .LVU87
 250 009a 0023     		movs	r3, #0
 150:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 251              		.loc 1 150 7 view .LVU88
 252 009c 2448     		ldr	r0, .L58+24
 149:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 253              		.loc 1 149 20 view .LVU89
 254 009e 0893     		str	r3, [sp, #32]
 255              		.loc 1 150 3 is_stmt 1 view .LVU90
 256              		.loc 1 150 7 is_stmt 0 view .LVU91
 257 00a0 0C22     		movs	r2, #12
 258 00a2 08A9     		add	r1, sp, #32
 259 00a4 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 260              	.LVL10:
 261              		.loc 1 150 6 view .LVU92
 262 00a8 D8B9     		cbnz	r0, .L56
 263              	.L15:
 151:Src/tim.c     ****   {
 152:Src/tim.c     ****     Error_Handler();
 153:Src/tim.c     ****   }
 154:Src/tim.c     **** 
 155:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_ENABLE;
 264              		.loc 1 155 3 is_stmt 1 view .LVU93
 156:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 265              		.loc 1 156 3 view .LVU94
 157:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 266              		.loc 1 157 3 view .LVU95
 158:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = TIM_1_8_DEADTIME_CLOCKS;
 267              		.loc 1 158 3 view .LVU96
 159:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 268              		.loc 1 159 3 view .LVU97
 160:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 269              		.loc 1 160 3 view .LVU98
 155:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 270              		.loc 1 155 40 is_stmt 0 view .LVU99
 271 00aa 9FED1D7B 		vldr.64	d7, .L58+8	@ int
 272 00ae 8DED107B 		vstr.64	d7, [sp, #64]	@ int
 273 00b2 9FED1D7B 		vldr.64	d7, .L58+16	@ int
 274 00b6 2823     		movs	r3, #40
 275 00b8 0022     		movs	r2, #0
 276 00ba CDE91223 		strd	r2, [sp, #72]
 161:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
ARM GAS  /tmp/ccQYv0hE.s 			page 9


 162:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 277              		.loc 1 162 7 view .LVU100
 278 00be 1C48     		ldr	r0, .L58+24
 161:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 279              		.loc 1 161 40 view .LVU101
 280 00c0 0023     		movs	r3, #0
 281              		.loc 1 162 7 view .LVU102
 282 00c2 10A9     		add	r1, sp, #64
 155:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 283              		.loc 1 155 40 view .LVU103
 284 00c4 8DED147B 		vstr.64	d7, [sp, #80]	@ int
 161:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 285              		.loc 1 161 3 is_stmt 1 view .LVU104
 161:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 286              		.loc 1 161 40 is_stmt 0 view .LVU105
 287 00c8 1C93     		str	r3, [sp, #112]
 288              		.loc 1 162 3 is_stmt 1 view .LVU106
 289              		.loc 1 162 7 is_stmt 0 view .LVU107
 290 00ca FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 291              	.LVL11:
 292              		.loc 1 162 6 view .LVU108
 293 00ce 20B9     		cbnz	r0, .L57
 163:Src/tim.c     ****   {
 164:Src/tim.c     ****     Error_Handler();
 165:Src/tim.c     ****   }
 166:Src/tim.c     **** 
 167:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
 168:Src/tim.c     **** 
 169:Src/tim.c     **** }
 294              		.loc 1 169 1 view .LVU109
 295 00d0 1EB0     		add	sp, sp, #120
 296              	.LCFI5:
 297              		.cfi_remember_state
 298              		.cfi_def_cfa_offset 8
 299              		@ sp needed
 300 00d2 10BD     		pop	{r4, pc}
 301              	.L48:
 302              	.LCFI6:
 303              		.cfi_restore_state
 101:Src/tim.c     ****   }
 304              		.loc 1 101 5 is_stmt 1 view .LVU110
 305 00d4 FFF7FEFF 		bl	Error_Handler
 306              	.LVL12:
 307 00d8 A4E7     		b	.L7
 308              	.L57:
 164:Src/tim.c     ****   }
 309              		.loc 1 164 5 view .LVU111
 310 00da FFF7FEFF 		bl	Error_Handler
 311              	.LVL13:
 167:Src/tim.c     **** 
 312              		.loc 1 167 3 view .LVU112
 170:Src/tim.c     **** /* TIM2 init function */
 171:Src/tim.c     **** void MX_TIM2_Init(void)
 172:Src/tim.c     **** {
 173:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 174:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 175:Src/tim.c     **** 
ARM GAS  /tmp/ccQYv0hE.s 			page 10


 176:Src/tim.c     ****   htim2.Instance = TIM2;
 177:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 178:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 179:Src/tim.c     ****   htim2.Init.Period = TIM_APB1_PERIOD_CLOCKS;
 180:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 181:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 182:Src/tim.c     ****   {
 183:Src/tim.c     ****     Error_Handler();
 184:Src/tim.c     ****   }
 185:Src/tim.c     **** 
 186:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 187:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 188:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 189:Src/tim.c     ****   {
 190:Src/tim.c     ****     Error_Handler();
 191:Src/tim.c     ****   }
 192:Src/tim.c     **** 
 193:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 194:Src/tim.c     ****   sConfigOC.Pulse = 0;
 195:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 196:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 197:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 198:Src/tim.c     ****   {
 199:Src/tim.c     ****     Error_Handler();
 200:Src/tim.c     ****   }
 201:Src/tim.c     **** 
 202:Src/tim.c     ****   sConfigOC.Pulse = TIM_APB1_PERIOD_CLOCKS+1;
 203:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 204:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 205:Src/tim.c     ****   {
 206:Src/tim.c     ****     Error_Handler();
 207:Src/tim.c     ****   }
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
 210:Src/tim.c     **** 
 211:Src/tim.c     **** }
 212:Src/tim.c     **** /* TIM3 init function */
 213:Src/tim.c     **** void MX_TIM3_Init(void)
 214:Src/tim.c     **** {
 215:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 216:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 217:Src/tim.c     **** 
 218:Src/tim.c     ****   htim3.Instance = TIM3;
 219:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 220:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 221:Src/tim.c     ****   htim3.Init.Period = 0xffff;
 222:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 223:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 224:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 225:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 226:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 227:Src/tim.c     ****   sConfig.IC1Filter = 4;
 228:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 229:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 230:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 231:Src/tim.c     ****   sConfig.IC2Filter = 4;
 232:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
ARM GAS  /tmp/ccQYv0hE.s 			page 11


 233:Src/tim.c     ****   {
 234:Src/tim.c     ****     Error_Handler();
 235:Src/tim.c     ****   }
 236:Src/tim.c     **** 
 237:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 238:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 239:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 240:Src/tim.c     ****   {
 241:Src/tim.c     ****     Error_Handler();
 242:Src/tim.c     ****   }
 243:Src/tim.c     **** 
 244:Src/tim.c     **** }
 245:Src/tim.c     **** /* TIM4 init function */
 246:Src/tim.c     **** void MX_TIM4_Init(void)
 247:Src/tim.c     **** {
 248:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 249:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 250:Src/tim.c     **** 
 251:Src/tim.c     ****   htim4.Instance = TIM4;
 252:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 253:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 254:Src/tim.c     ****   htim4.Init.Period = 0xffff;
 255:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 256:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 257:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 258:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 259:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 260:Src/tim.c     ****   sConfig.IC1Filter = 4;
 261:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 262:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 263:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 264:Src/tim.c     ****   sConfig.IC2Filter = 4;
 265:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 266:Src/tim.c     ****   {
 267:Src/tim.c     ****     Error_Handler();
 268:Src/tim.c     ****   }
 269:Src/tim.c     **** 
 270:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 271:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 272:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 273:Src/tim.c     ****   {
 274:Src/tim.c     ****     Error_Handler();
 275:Src/tim.c     ****   }
 276:Src/tim.c     **** 
 277:Src/tim.c     **** }
 278:Src/tim.c     **** 
 279:Src/tim.c     **** /* TIM8 init function */
 280:Src/tim.c     **** void MX_TIM8_Init(void)
 281:Src/tim.c     **** {
 282:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 283:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 284:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 285:Src/tim.c     **** 
 286:Src/tim.c     ****   htim8.Instance = TIM8;
 287:Src/tim.c     ****   htim8.Init.Prescaler = 0;
 288:Src/tim.c     ****   htim8.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 289:Src/tim.c     ****   htim8.Init.Period = TIM_1_8_PERIOD_CLOCKS;
ARM GAS  /tmp/ccQYv0hE.s 			page 12


 290:Src/tim.c     ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 291:Src/tim.c     ****   htim8.Init.RepetitionCounter = TIM_1_8_RCR;
 292:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 293:Src/tim.c     ****   {
 294:Src/tim.c     ****     Error_Handler();
 295:Src/tim.c     ****   }
 296:Src/tim.c     **** 
 297:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 298:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 299:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 300:Src/tim.c     ****   {
 301:Src/tim.c     ****     Error_Handler();
 302:Src/tim.c     ****   }
 303:Src/tim.c     **** 
 304:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 305:Src/tim.c     ****   sConfigOC.Pulse = 0;
 306:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 307:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 308:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 309:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 310:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 311:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 312:Src/tim.c     ****   {
 313:Src/tim.c     ****     Error_Handler();
 314:Src/tim.c     ****   }
 315:Src/tim.c     **** 
 316:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 317:Src/tim.c     ****   {
 318:Src/tim.c     ****     Error_Handler();
 319:Src/tim.c     ****   }
 320:Src/tim.c     **** 
 321:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 322:Src/tim.c     ****   {
 323:Src/tim.c     ****     Error_Handler();
 324:Src/tim.c     ****   }
 325:Src/tim.c     **** 
 326:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_ENABLE;
 327:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 328:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 329:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = TIM_1_8_DEADTIME_CLOCKS;
 330:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 331:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 332:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 333:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 334:Src/tim.c     ****   {
 335:Src/tim.c     ****     Error_Handler() ;
 336:Src/tim.c     ****   }
 337:Src/tim.c     **** 
 338:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim8);
 339:Src/tim.c     **** __HAL_TIM_MOE_DISABLE_UNCONDITIONALLY(&htim8);
 340:Src/tim.c     **** }
 341:Src/tim.c     **** /* TIM13 init function */
 342:Src/tim.c     **** void MX_TIM15_Init(void)
 343:Src/tim.c     **** {
 344:Src/tim.c     **** 
 345:Src/tim.c     ****   htim15.Instance = TIM15;
 346:Src/tim.c     ****   htim15.Init.Prescaler = 0;
ARM GAS  /tmp/ccQYv0hE.s 			page 13


 347:Src/tim.c     ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 348:Src/tim.c     ****   htim15.Init.Period = (2 * TIM_1_8_PERIOD_CLOCKS * (TIM_1_8_RCR+1)) * ((float)TIM_APB1_CLOCK_HZ / 
 349:Src/tim.c     ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 350:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 351:Src/tim.c     ****   {
 352:Src/tim.c     ****     Error_Handler();
 353:Src/tim.c     ****   }
 354:Src/tim.c     **** 
 355:Src/tim.c     **** }
 356:Src/tim.c     **** 
 357:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 358:Src/tim.c     **** {
 359:Src/tim.c     **** 
 360:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 361:Src/tim.c     ****   {
 362:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 363:Src/tim.c     **** 
 364:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 365:Src/tim.c     ****     /* TIM1 clock enable */
 366:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 367:Src/tim.c     **** 
 368:Src/tim.c     ****     /* TIM1 interrupt Init */
 369:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 6, 0);
 370:Src/tim.c     ****  //   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 371:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 372:Src/tim.c     **** 
 373:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 374:Src/tim.c     ****   }
 375:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 376:Src/tim.c     ****   {
 377:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 0 */
 378:Src/tim.c     **** 
 379:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 0 */
 380:Src/tim.c     ****     /* TIM13 clock enable */
 381:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_ENABLE();
 382:Src/tim.c     **** 
 383:Src/tim.c     ****     /* TIM13 interrupt Init */
 384:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 6, 0);
 385:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 386:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 387:Src/tim.c     **** 
 388:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 1 */
 389:Src/tim.c     ****   }
 390:Src/tim.c     **** }
 391:Src/tim.c     **** 
 392:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 393:Src/tim.c     **** {
 394:Src/tim.c     **** 
 395:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 396:Src/tim.c     ****   {
 397:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 398:Src/tim.c     **** 
 399:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 400:Src/tim.c     ****     /* TIM2 clock enable */
 401:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 402:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 403:Src/tim.c     **** 
ARM GAS  /tmp/ccQYv0hE.s 			page 14


 404:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 405:Src/tim.c     ****   }
 406:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM8)
 407:Src/tim.c     ****   {
 408:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspInit 0 */
 409:Src/tim.c     **** 
 410:Src/tim.c     ****   /* USER CODE END TIM8_MspInit 0 */
 411:Src/tim.c     ****     /* TIM8 clock enable */
 412:Src/tim.c     ****     __HAL_RCC_TIM8_CLK_ENABLE();
 413:Src/tim.c     **** 
 414:Src/tim.c     ****     /* TIM8 interrupt Init */
 415:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM8_UP_IRQn, 6, 0);
 416:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 417:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM8_TRG_COM_IRQn, 6, 0);
 418:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 419:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 420:Src/tim.c     **** 
 421:Src/tim.c     ****   /* USER CODE END TIM8_MspInit 1 */
 422:Src/tim.c     ****   }
 423:Src/tim.c     **** }
 424:Src/tim.c     **** 
 425:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 426:Src/tim.c     **** {
 427:Src/tim.c     **** 
 428:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 429:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM3)
 430:Src/tim.c     ****   {
 431:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 432:Src/tim.c     **** 
 433:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 434:Src/tim.c     ****     /* TIM3 clock enable */
 435:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 436:Src/tim.c     ****   
 437:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 438:Src/tim.c     ****     PB4     ------> TIM3_CH1
 439:Src/tim.c     ****     PB5     ------> TIM3_CH2 
 440:Src/tim.c     ****     */
 441:Src/tim.c     **** 
 442:Src/tim.c     **** 
 443:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 444:Src/tim.c     **** 
 445:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 446:Src/tim.c     ****   }
 447:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM4)
 448:Src/tim.c     ****   {
 449:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 450:Src/tim.c     **** 
 451:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 0 */
 452:Src/tim.c     ****     /* TIM4 clock enable */
 453:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_ENABLE();
 454:Src/tim.c     ****   
 455:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 456:Src/tim.c     ****     PB6     ------> TIM4_CH1
 457:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 458:Src/tim.c     ****     */
 459:Src/tim.c     **** \
 460:Src/tim.c     **** 
ARM GAS  /tmp/ccQYv0hE.s 			page 15


 461:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 462:Src/tim.c     **** 
 463:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 1 */
 464:Src/tim.c     ****   }
 465:Src/tim.c     **** }
 466:Src/tim.c     **** 
 467:Src/tim.c     **** void HAL_TIM_IC_MspInit(TIM_HandleTypeDef* tim_icHandle)
 468:Src/tim.c     **** {
 469:Src/tim.c     **** 
 470:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 471:Src/tim.c     ****   if(tim_icHandle->Instance==TIM15)
 472:Src/tim.c     ****   {
 473:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 0 */
 474:Src/tim.c     **** 
 475:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 476:Src/tim.c     **** 
 477:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 1 */
 478:Src/tim.c     ****   }
 479:Src/tim.c     **** }
 480:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 481:Src/tim.c     **** {
 482:Src/tim.c     **** 
 483:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 313              		.loc 1 483 3 view .LVU113
 484:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 314              		.loc 1 484 3 view .LVU114
 485:Src/tim.c     ****   {
 486:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 487:Src/tim.c     **** 
 488:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 489:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 490:Src/tim.c     ****     PB13     ------> TIM1_CH1N
 491:Src/tim.c     ****     PB14     ------> TIM1_CH2N
 492:Src/tim.c     ****     PB15     ------> TIM1_CH3N
 493:Src/tim.c     ****     PA8     ------> TIM1_CH1
 494:Src/tim.c     ****     PA9     ------> TIM1_CH2
 495:Src/tim.c     ****     PA10     ------> TIM1_CH3 
 496:Src/tim.c     ****     */
 497:Src/tim.c     **** 
 498:Src/tim.c     **** 
 499:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 500:Src/tim.c     **** 
 501:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 502:Src/tim.c     ****   }
 503:Src/tim.c     ****   else if(timHandle->Instance==TIM2)
 504:Src/tim.c     ****   {
 505:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 506:Src/tim.c     **** 
 507:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
 508:Src/tim.c     ****   
 509:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 510:Src/tim.c     ****     PB10     ------> TIM2_CH3
 511:Src/tim.c     ****     PB11     ------> TIM2_CH4 
 512:Src/tim.c     ****     */
 513:Src/tim.c     **** 
 514:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 515:Src/tim.c     **** 
ARM GAS  /tmp/ccQYv0hE.s 			page 16


 516:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 517:Src/tim.c     ****   }
 518:Src/tim.c     ****   else if(timHandle->Instance==TIM8)
 519:Src/tim.c     ****   {
 520:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspPostInit 0 */
 521:Src/tim.c     **** 
 522:Src/tim.c     ****   /* USER CODE END TIM8_MspPostInit 0 */
 523:Src/tim.c     ****   
 524:Src/tim.c     ****     /**TIM8 GPIO Configuration    
 525:Src/tim.c     ****     PA7     ------> TIM8_CH1N
 526:Src/tim.c     ****     PB0     ------> TIM8_CH2N
 527:Src/tim.c     ****     PB1     ------> TIM8_CH3N
 528:Src/tim.c     ****     PC6     ------> TIM8_CH1
 529:Src/tim.c     ****     PC7     ------> TIM8_CH2
 530:Src/tim.c     ****     PC8     ------> TIM8_CH3 
 531:Src/tim.c     ****     */
 532:Src/tim.c     **** 
 533:Src/tim.c     **** 
 534:Src/tim.c     **** 
 535:Src/tim.c     **** 
 536:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspPostInit 1 */
 537:Src/tim.c     **** 
 538:Src/tim.c     ****   /* USER CODE END TIM8_MspPostInit 1 */
 539:Src/tim.c     ****   }
 315              		.loc 1 539 3 view .LVU115
 169:Src/tim.c     **** /* TIM2 init function */
 316              		.loc 1 169 1 is_stmt 0 view .LVU116
 317 00de 1EB0     		add	sp, sp, #120
 318              	.LCFI7:
 319              		.cfi_remember_state
 320              		.cfi_def_cfa_offset 8
 321              		@ sp needed
 322 00e0 10BD     		pop	{r4, pc}
 323              	.L56:
 324              	.LCFI8:
 325              		.cfi_restore_state
 152:Src/tim.c     ****   }
 326              		.loc 1 152 5 is_stmt 1 view .LVU117
 327 00e2 FFF7FEFF 		bl	Error_Handler
 328              	.LVL14:
 329 00e6 E0E7     		b	.L15
 330              	.L55:
 146:Src/tim.c     ****   }
 331              		.loc 1 146 5 view .LVU118
 332 00e8 FFF7FEFF 		bl	Error_Handler
 333              	.LVL15:
 334 00ec D5E7     		b	.L14
 335              	.L54:
 141:Src/tim.c     ****   }
 336              		.loc 1 141 5 view .LVU119
 337 00ee FFF7FEFF 		bl	Error_Handler
 338              	.LVL16:
 339 00f2 CCE7     		b	.L13
 340              	.L53:
 136:Src/tim.c     ****   }
 341              		.loc 1 136 5 view .LVU120
 342 00f4 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccQYv0hE.s 			page 17


 343              	.LVL17:
 344 00f8 C3E7     		b	.L12
 345              	.L52:
 124:Src/tim.c     ****   }
 346              		.loc 1 124 5 view .LVU121
 347 00fa FFF7FEFF 		bl	Error_Handler
 348              	.LVL18:
 349 00fe AEE7     		b	.L11
 350              	.L51:
 117:Src/tim.c     ****   }
 351              		.loc 1 117 5 view .LVU122
 352 0100 FFF7FEFF 		bl	Error_Handler
 353              	.LVL19:
 354 0104 A1E7     		b	.L10
 355              	.L50:
 112:Src/tim.c     ****   }
 356              		.loc 1 112 5 view .LVU123
 357 0106 FFF7FEFF 		bl	Error_Handler
 358              	.LVL20:
 359 010a 99E7     		b	.L9
 360              	.L49:
 107:Src/tim.c     ****   }
 361              		.loc 1 107 5 view .LVU124
 362 010c FFF7FEFF 		bl	Error_Handler
 363              	.LVL21:
 364 0110 91E7     		b	.L8
 365              	.L59:
 366 0112 00BFAFF3 		.align	3
 366      0080
 367              	.L58:
 368 0118 70000000 		.word	112
 369 011c 00000000 		.word	0
 370 0120 00080000 		.word	2048
 371 0124 00040000 		.word	1024
 372 0128 00000000 		.word	0
 373 012c 00200000 		.word	8192
 374 0130 00000000 		.word	.LANCHOR0
 375 0134 002C0140 		.word	1073818624
 376              		.cfi_endproc
 377              	.LFE1868:
 379              		.section	.text.MX_TIM2_Init,"ax",%progbits
 380              		.align	1
 381              		.p2align 2,,3
 382              		.global	MX_TIM2_Init
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv4-sp-d16
 388              	MX_TIM2_Init:
 389              	.LFB1869:
 172:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 390              		.loc 1 172 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 48
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 173:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 394              		.loc 1 173 3 view .LVU126
ARM GAS  /tmp/ccQYv0hE.s 			page 18


 174:Src/tim.c     **** 
 395              		.loc 1 174 3 view .LVU127
 176:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 396              		.loc 1 176 3 view .LVU128
 172:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 397              		.loc 1 172 1 is_stmt 0 view .LVU129
 398 0000 10B5     		push	{r4, lr}
 399              	.LCFI9:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 4, -8
 402              		.cfi_offset 14, -4
 176:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 403              		.loc 1 176 18 view .LVU130
 404 0002 2048     		ldr	r0, .L82
 177:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 405              		.loc 1 177 24 view .LVU131
 406 0004 0023     		movs	r3, #0
 172:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 407              		.loc 1 172 1 view .LVU132
 408 0006 8CB0     		sub	sp, sp, #48
 409              	.LCFI10:
 410              		.cfi_def_cfa_offset 56
 176:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 411              		.loc 1 176 18 view .LVU133
 412 0008 4FF08044 		mov	r4, #1073741824
 178:Src/tim.c     ****   htim2.Init.Period = TIM_APB1_PERIOD_CLOCKS;
 413              		.loc 1 178 26 view .LVU134
 414 000c 6021     		movs	r1, #96
 179:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 415              		.loc 1 179 21 view .LVU135
 416 000e 4FF48052 		mov	r2, #4096
 177:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 417              		.loc 1 177 24 view .LVU136
 418 0012 C0E90043 		strd	r4, r3, [r0]
 178:Src/tim.c     ****   htim2.Init.Period = TIM_APB1_PERIOD_CLOCKS;
 419              		.loc 1 178 3 is_stmt 1 view .LVU137
 179:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 420              		.loc 1 179 21 is_stmt 0 view .LVU138
 421 0016 C0E90212 		strd	r1, r2, [r0, #8]
 180:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 422              		.loc 1 180 3 is_stmt 1 view .LVU139
 180:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 423              		.loc 1 180 28 is_stmt 0 view .LVU140
 424 001a 0361     		str	r3, [r0, #16]
 181:Src/tim.c     ****   {
 425              		.loc 1 181 3 is_stmt 1 view .LVU141
 181:Src/tim.c     ****   {
 426              		.loc 1 181 7 is_stmt 0 view .LVU142
 427 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 428              	.LVL22:
 181:Src/tim.c     ****   {
 429              		.loc 1 181 6 view .LVU143
 430 0020 10BB     		cbnz	r0, .L78
 431              	.L61:
 186:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 432              		.loc 1 186 3 is_stmt 1 view .LVU144
 186:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccQYv0hE.s 			page 19


 433              		.loc 1 186 37 is_stmt 0 view .LVU145
 434 0022 0023     		movs	r3, #0
 188:Src/tim.c     ****   {
 435              		.loc 1 188 7 view .LVU146
 436 0024 1748     		ldr	r0, .L82
 186:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 437              		.loc 1 186 37 view .LVU147
 438 0026 0193     		str	r3, [sp, #4]
 187:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 439              		.loc 1 187 3 is_stmt 1 view .LVU148
 188:Src/tim.c     ****   {
 440              		.loc 1 188 7 is_stmt 0 view .LVU149
 441 0028 01A9     		add	r1, sp, #4
 187:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 442              		.loc 1 187 33 view .LVU150
 443 002a 0393     		str	r3, [sp, #12]
 188:Src/tim.c     ****   {
 444              		.loc 1 188 3 is_stmt 1 view .LVU151
 188:Src/tim.c     ****   {
 445              		.loc 1 188 7 is_stmt 0 view .LVU152
 446 002c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 447              	.LVL23:
 188:Src/tim.c     ****   {
 448              		.loc 1 188 6 view .LVU153
 449 0030 20BB     		cbnz	r0, .L79
 450              	.L62:
 193:Src/tim.c     ****   sConfigOC.Pulse = 0;
 451              		.loc 1 193 3 is_stmt 1 view .LVU154
 194:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 452              		.loc 1 194 3 view .LVU155
 193:Src/tim.c     ****   sConfigOC.Pulse = 0;
 453              		.loc 1 193 20 is_stmt 0 view .LVU156
 454 0032 7022     		movs	r2, #112
 455 0034 0023     		movs	r3, #0
 195:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 456              		.loc 1 195 24 view .LVU157
 457 0036 0221     		movs	r1, #2
 193:Src/tim.c     ****   sConfigOC.Pulse = 0;
 458              		.loc 1 193 20 view .LVU158
 459 0038 CDE90423 		strd	r2, [sp, #16]
 195:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 460              		.loc 1 195 3 is_stmt 1 view .LVU159
 195:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 461              		.loc 1 195 24 is_stmt 0 view .LVU160
 462 003c 0691     		str	r1, [sp, #24]
 196:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 463              		.loc 1 196 3 is_stmt 1 view .LVU161
 196:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 464              		.loc 1 196 24 is_stmt 0 view .LVU162
 465 003e 0023     		movs	r3, #0
 197:Src/tim.c     ****   {
 466              		.loc 1 197 7 view .LVU163
 467 0040 1048     		ldr	r0, .L82
 196:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 468              		.loc 1 196 24 view .LVU164
 469 0042 0893     		str	r3, [sp, #32]
 197:Src/tim.c     ****   {
ARM GAS  /tmp/ccQYv0hE.s 			page 20


 470              		.loc 1 197 3 is_stmt 1 view .LVU165
 197:Src/tim.c     ****   {
 471              		.loc 1 197 7 is_stmt 0 view .LVU166
 472 0044 0822     		movs	r2, #8
 473 0046 04A9     		add	r1, sp, #16
 474 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 475              	.LVL24:
 197:Src/tim.c     ****   {
 476              		.loc 1 197 6 view .LVU167
 477 004c 98B9     		cbnz	r0, .L80
 478              	.L63:
 202:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 479              		.loc 1 202 3 is_stmt 1 view .LVU168
 202:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 480              		.loc 1 202 19 is_stmt 0 view .LVU169
 481 004e 41F20104 		movw	r4, #4097
 203:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 482              		.loc 1 203 24 view .LVU170
 483 0052 0023     		movs	r3, #0
 204:Src/tim.c     ****   {
 484              		.loc 1 204 7 view .LVU171
 485 0054 0B48     		ldr	r0, .L82
 486 0056 0C22     		movs	r2, #12
 487 0058 04A9     		add	r1, sp, #16
 203:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 488              		.loc 1 203 24 view .LVU172
 489 005a CDE90543 		strd	r4, r3, [sp, #20]
 204:Src/tim.c     ****   {
 490              		.loc 1 204 3 is_stmt 1 view .LVU173
 204:Src/tim.c     ****   {
 491              		.loc 1 204 7 is_stmt 0 view .LVU174
 492 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 493              	.LVL25:
 204:Src/tim.c     ****   {
 494              		.loc 1 204 6 view .LVU175
 495 0062 20B9     		cbnz	r0, .L81
 211:Src/tim.c     **** /* TIM3 init function */
 496              		.loc 1 211 1 view .LVU176
 497 0064 0CB0     		add	sp, sp, #48
 498              	.LCFI11:
 499              		.cfi_remember_state
 500              		.cfi_def_cfa_offset 8
 501              		@ sp needed
 502 0066 10BD     		pop	{r4, pc}
 503              	.L78:
 504              	.LCFI12:
 505              		.cfi_restore_state
 183:Src/tim.c     ****   }
 506              		.loc 1 183 5 is_stmt 1 view .LVU177
 507 0068 FFF7FEFF 		bl	Error_Handler
 508              	.LVL26:
 509 006c D9E7     		b	.L61
 510              	.L81:
 206:Src/tim.c     ****   }
 511              		.loc 1 206 5 view .LVU178
 512 006e FFF7FEFF 		bl	Error_Handler
 513              	.LVL27:
ARM GAS  /tmp/ccQYv0hE.s 			page 21


 209:Src/tim.c     **** 
 514              		.loc 1 209 3 view .LVU179
 483:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 515              		.loc 1 483 3 view .LVU180
 484:Src/tim.c     ****   {
 516              		.loc 1 484 3 view .LVU181
 517              		.loc 1 539 3 view .LVU182
 211:Src/tim.c     **** /* TIM3 init function */
 518              		.loc 1 211 1 is_stmt 0 view .LVU183
 519 0072 0CB0     		add	sp, sp, #48
 520              	.LCFI13:
 521              		.cfi_remember_state
 522              		.cfi_def_cfa_offset 8
 523              		@ sp needed
 524 0074 10BD     		pop	{r4, pc}
 525              	.L80:
 526              	.LCFI14:
 527              		.cfi_restore_state
 199:Src/tim.c     ****   }
 528              		.loc 1 199 5 is_stmt 1 view .LVU184
 529 0076 FFF7FEFF 		bl	Error_Handler
 530              	.LVL28:
 531 007a E8E7     		b	.L63
 532              	.L79:
 190:Src/tim.c     ****   }
 533              		.loc 1 190 5 view .LVU185
 534 007c FFF7FEFF 		bl	Error_Handler
 535              	.LVL29:
 536 0080 D7E7     		b	.L62
 537              	.L83:
 538 0082 00BF     		.align	2
 539              	.L82:
 540 0084 00000000 		.word	.LANCHOR1
 541              		.cfi_endproc
 542              	.LFE1869:
 544              		.section	.text.MX_TIM3_Init,"ax",%progbits
 545              		.align	1
 546              		.p2align 2,,3
 547              		.global	MX_TIM3_Init
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv4-sp-d16
 553              	MX_TIM3_Init:
 554              	.LFB1870:
 214:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 555              		.loc 1 214 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 56
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 215:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 559              		.loc 1 215 3 view .LVU187
 216:Src/tim.c     **** 
 560              		.loc 1 216 3 view .LVU188
 218:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 561              		.loc 1 218 3 view .LVU189
 214:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
ARM GAS  /tmp/ccQYv0hE.s 			page 22


 562              		.loc 1 214 1 is_stmt 0 view .LVU190
 563 0000 00B5     		push	{lr}
 564              	.LCFI15:
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 14, -4
 218:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 567              		.loc 1 218 18 view .LVU191
 568 0002 1D48     		ldr	r0, .L96+16
 569 0004 1D49     		ldr	r1, .L96+20
 214:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 570              		.loc 1 214 1 view .LVU192
 571 0006 8FB0     		sub	sp, sp, #60
 572              	.LCFI16:
 573              		.cfi_def_cfa_offset 64
 219:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 574              		.loc 1 219 24 view .LVU193
 575 0008 0023     		movs	r3, #0
 223:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 576              		.loc 1 223 23 view .LVU194
 577 000a 9FED177B 		vldr.64	d7, .L96	@ int
 221:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 578              		.loc 1 221 21 view .LVU195
 579 000e 4FF6FF72 		movw	r2, #65535
 223:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 580              		.loc 1 223 23 view .LVU196
 581 0012 9FED176B 		vldr.64	d6, .L96+8	@ int
 221:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 582              		.loc 1 221 21 view .LVU197
 583 0016 C0E90232 		strd	r3, r2, [r0, #8]
 231:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 584              		.loc 1 231 21 view .LVU198
 585 001a 0422     		movs	r2, #4
 219:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 586              		.loc 1 219 24 view .LVU199
 587 001c C0E90013 		strd	r1, r3, [r0]
 220:Src/tim.c     ****   htim3.Init.Period = 0xffff;
 588              		.loc 1 220 3 is_stmt 1 view .LVU200
 222:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 589              		.loc 1 222 3 view .LVU201
 222:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 590              		.loc 1 222 28 is_stmt 0 view .LVU202
 591 0020 0361     		str	r3, [r0, #16]
 223:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 592              		.loc 1 223 3 is_stmt 1 view .LVU203
 224:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 593              		.loc 1 224 3 view .LVU204
 225:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 594              		.loc 1 225 3 view .LVU205
 226:Src/tim.c     ****   sConfig.IC1Filter = 4;
 595              		.loc 1 226 3 view .LVU206
 227:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 596              		.loc 1 227 3 view .LVU207
 228:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 597              		.loc 1 228 3 view .LVU208
 229:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 598              		.loc 1 229 3 view .LVU209
 230:Src/tim.c     ****   sConfig.IC2Filter = 4;
ARM GAS  /tmp/ccQYv0hE.s 			page 23


 599              		.loc 1 230 3 view .LVU210
 231:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 600              		.loc 1 231 3 view .LVU211
 231:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 601              		.loc 1 231 21 is_stmt 0 view .LVU212
 602 0022 0C92     		str	r2, [sp, #48]
 232:Src/tim.c     ****   {
 603              		.loc 1 232 3 is_stmt 1 view .LVU213
 223:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 604              		.loc 1 223 23 is_stmt 0 view .LVU214
 605 0024 0023     		movs	r3, #0
 606 0026 0422     		movs	r2, #4
 232:Src/tim.c     ****   {
 607              		.loc 1 232 7 view .LVU215
 608 0028 04A9     		add	r1, sp, #16
 223:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 609              		.loc 1 223 23 view .LVU216
 610 002a 8DED046B 		vstr.64	d6, [sp, #16]	@ int
 611 002e 8DED067B 		vstr.64	d7, [sp, #24]	@ int
 612 0032 8DED0A7B 		vstr.64	d7, [sp, #40]	@ int
 613 0036 CDE90823 		strd	r2, [sp, #32]
 232:Src/tim.c     ****   {
 614              		.loc 1 232 7 view .LVU217
 615 003a FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 616              	.LVL30:
 232:Src/tim.c     ****   {
 617              		.loc 1 232 6 view .LVU218
 618 003e 50B9     		cbnz	r0, .L94
 619              	.L85:
 237:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 620              		.loc 1 237 3 is_stmt 1 view .LVU219
 237:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 621              		.loc 1 237 37 is_stmt 0 view .LVU220
 622 0040 0023     		movs	r3, #0
 239:Src/tim.c     ****   {
 623              		.loc 1 239 7 view .LVU221
 624 0042 0D48     		ldr	r0, .L96+16
 237:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 625              		.loc 1 237 37 view .LVU222
 626 0044 0193     		str	r3, [sp, #4]
 238:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 627              		.loc 1 238 3 is_stmt 1 view .LVU223
 239:Src/tim.c     ****   {
 628              		.loc 1 239 7 is_stmt 0 view .LVU224
 629 0046 01A9     		add	r1, sp, #4
 238:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 630              		.loc 1 238 33 view .LVU225
 631 0048 0393     		str	r3, [sp, #12]
 239:Src/tim.c     ****   {
 632              		.loc 1 239 3 is_stmt 1 view .LVU226
 239:Src/tim.c     ****   {
 633              		.loc 1 239 7 is_stmt 0 view .LVU227
 634 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 635              	.LVL31:
 239:Src/tim.c     ****   {
 636              		.loc 1 239 6 view .LVU228
 637 004e 28B9     		cbnz	r0, .L95
ARM GAS  /tmp/ccQYv0hE.s 			page 24


 244:Src/tim.c     **** /* TIM4 init function */
 638              		.loc 1 244 1 view .LVU229
 639 0050 0FB0     		add	sp, sp, #60
 640              	.LCFI17:
 641              		.cfi_remember_state
 642              		.cfi_def_cfa_offset 4
 643              		@ sp needed
 644 0052 5DF804FB 		ldr	pc, [sp], #4
 645              	.L94:
 646              	.LCFI18:
 647              		.cfi_restore_state
 234:Src/tim.c     ****   }
 648              		.loc 1 234 5 is_stmt 1 view .LVU230
 649 0056 FFF7FEFF 		bl	Error_Handler
 650              	.LVL32:
 651 005a F1E7     		b	.L85
 652              	.L95:
 241:Src/tim.c     ****   }
 653              		.loc 1 241 5 view .LVU231
 654 005c FFF7FEFF 		bl	Error_Handler
 655              	.LVL33:
 244:Src/tim.c     **** /* TIM4 init function */
 656              		.loc 1 244 1 is_stmt 0 view .LVU232
 657 0060 0FB0     		add	sp, sp, #60
 658              	.LCFI19:
 659              		.cfi_def_cfa_offset 4
 660              		@ sp needed
 661 0062 5DF804FB 		ldr	pc, [sp], #4
 662              	.L97:
 663 0066 00BF     		.align	3
 664              	.L96:
 665 0068 01000000 		.word	1
 666 006c 00000000 		.word	0
 667 0070 03000000 		.word	3
 668 0074 00000000 		.word	0
 669 0078 00000000 		.word	.LANCHOR2
 670 007c 00040040 		.word	1073742848
 671              		.cfi_endproc
 672              	.LFE1870:
 674              		.section	.text.MX_TIM4_Init,"ax",%progbits
 675              		.align	1
 676              		.p2align 2,,3
 677              		.global	MX_TIM4_Init
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu fpv4-sp-d16
 683              	MX_TIM4_Init:
 684              	.LFB1871:
 247:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 685              		.loc 1 247 1 is_stmt 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 56
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 248:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 689              		.loc 1 248 3 view .LVU234
 249:Src/tim.c     **** 
ARM GAS  /tmp/ccQYv0hE.s 			page 25


 690              		.loc 1 249 3 view .LVU235
 251:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 691              		.loc 1 251 3 view .LVU236
 247:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 692              		.loc 1 247 1 is_stmt 0 view .LVU237
 693 0000 00B5     		push	{lr}
 694              	.LCFI20:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 14, -4
 251:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 697              		.loc 1 251 18 view .LVU238
 698 0002 1D48     		ldr	r0, .L110+16
 699 0004 1D49     		ldr	r1, .L110+20
 247:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 700              		.loc 1 247 1 view .LVU239
 701 0006 8FB0     		sub	sp, sp, #60
 702              	.LCFI21:
 703              		.cfi_def_cfa_offset 64
 252:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 704              		.loc 1 252 24 view .LVU240
 705 0008 0023     		movs	r3, #0
 256:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 706              		.loc 1 256 23 view .LVU241
 707 000a 9FED177B 		vldr.64	d7, .L110	@ int
 254:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 708              		.loc 1 254 21 view .LVU242
 709 000e 4FF6FF72 		movw	r2, #65535
 256:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 710              		.loc 1 256 23 view .LVU243
 711 0012 9FED176B 		vldr.64	d6, .L110+8	@ int
 254:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 712              		.loc 1 254 21 view .LVU244
 713 0016 C0E90232 		strd	r3, r2, [r0, #8]
 264:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 714              		.loc 1 264 21 view .LVU245
 715 001a 0422     		movs	r2, #4
 252:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 716              		.loc 1 252 24 view .LVU246
 717 001c C0E90013 		strd	r1, r3, [r0]
 253:Src/tim.c     ****   htim4.Init.Period = 0xffff;
 718              		.loc 1 253 3 is_stmt 1 view .LVU247
 255:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 719              		.loc 1 255 3 view .LVU248
 255:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 720              		.loc 1 255 28 is_stmt 0 view .LVU249
 721 0020 0361     		str	r3, [r0, #16]
 256:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 722              		.loc 1 256 3 is_stmt 1 view .LVU250
 257:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 723              		.loc 1 257 3 view .LVU251
 258:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 724              		.loc 1 258 3 view .LVU252
 259:Src/tim.c     ****   sConfig.IC1Filter = 4;
 725              		.loc 1 259 3 view .LVU253
 260:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 726              		.loc 1 260 3 view .LVU254
 261:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
ARM GAS  /tmp/ccQYv0hE.s 			page 26


 727              		.loc 1 261 3 view .LVU255
 262:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 728              		.loc 1 262 3 view .LVU256
 263:Src/tim.c     ****   sConfig.IC2Filter = 4;
 729              		.loc 1 263 3 view .LVU257
 264:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 730              		.loc 1 264 3 view .LVU258
 264:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 731              		.loc 1 264 21 is_stmt 0 view .LVU259
 732 0022 0C92     		str	r2, [sp, #48]
 265:Src/tim.c     ****   {
 733              		.loc 1 265 3 is_stmt 1 view .LVU260
 256:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 734              		.loc 1 256 23 is_stmt 0 view .LVU261
 735 0024 0023     		movs	r3, #0
 736 0026 0422     		movs	r2, #4
 265:Src/tim.c     ****   {
 737              		.loc 1 265 7 view .LVU262
 738 0028 04A9     		add	r1, sp, #16
 256:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 739              		.loc 1 256 23 view .LVU263
 740 002a 8DED046B 		vstr.64	d6, [sp, #16]	@ int
 741 002e 8DED067B 		vstr.64	d7, [sp, #24]	@ int
 742 0032 8DED0A7B 		vstr.64	d7, [sp, #40]	@ int
 743 0036 CDE90823 		strd	r2, [sp, #32]
 265:Src/tim.c     ****   {
 744              		.loc 1 265 7 view .LVU264
 745 003a FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 746              	.LVL34:
 265:Src/tim.c     ****   {
 747              		.loc 1 265 6 view .LVU265
 748 003e 50B9     		cbnz	r0, .L108
 749              	.L99:
 270:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 750              		.loc 1 270 3 is_stmt 1 view .LVU266
 270:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 751              		.loc 1 270 37 is_stmt 0 view .LVU267
 752 0040 0023     		movs	r3, #0
 272:Src/tim.c     ****   {
 753              		.loc 1 272 7 view .LVU268
 754 0042 0D48     		ldr	r0, .L110+16
 270:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 755              		.loc 1 270 37 view .LVU269
 756 0044 0193     		str	r3, [sp, #4]
 271:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 757              		.loc 1 271 3 is_stmt 1 view .LVU270
 272:Src/tim.c     ****   {
 758              		.loc 1 272 7 is_stmt 0 view .LVU271
 759 0046 01A9     		add	r1, sp, #4
 271:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 760              		.loc 1 271 33 view .LVU272
 761 0048 0393     		str	r3, [sp, #12]
 272:Src/tim.c     ****   {
 762              		.loc 1 272 3 is_stmt 1 view .LVU273
 272:Src/tim.c     ****   {
 763              		.loc 1 272 7 is_stmt 0 view .LVU274
 764 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/ccQYv0hE.s 			page 27


 765              	.LVL35:
 272:Src/tim.c     ****   {
 766              		.loc 1 272 6 view .LVU275
 767 004e 28B9     		cbnz	r0, .L109
 277:Src/tim.c     **** 
 768              		.loc 1 277 1 view .LVU276
 769 0050 0FB0     		add	sp, sp, #60
 770              	.LCFI22:
 771              		.cfi_remember_state
 772              		.cfi_def_cfa_offset 4
 773              		@ sp needed
 774 0052 5DF804FB 		ldr	pc, [sp], #4
 775              	.L108:
 776              	.LCFI23:
 777              		.cfi_restore_state
 267:Src/tim.c     ****   }
 778              		.loc 1 267 5 is_stmt 1 view .LVU277
 779 0056 FFF7FEFF 		bl	Error_Handler
 780              	.LVL36:
 781 005a F1E7     		b	.L99
 782              	.L109:
 274:Src/tim.c     ****   }
 783              		.loc 1 274 5 view .LVU278
 784 005c FFF7FEFF 		bl	Error_Handler
 785              	.LVL37:
 277:Src/tim.c     **** 
 786              		.loc 1 277 1 is_stmt 0 view .LVU279
 787 0060 0FB0     		add	sp, sp, #60
 788              	.LCFI24:
 789              		.cfi_def_cfa_offset 4
 790              		@ sp needed
 791 0062 5DF804FB 		ldr	pc, [sp], #4
 792              	.L111:
 793 0066 00BF     		.align	3
 794              	.L110:
 795 0068 01000000 		.word	1
 796 006c 00000000 		.word	0
 797 0070 03000000 		.word	3
 798 0074 00000000 		.word	0
 799 0078 00000000 		.word	.LANCHOR3
 800 007c 00080040 		.word	1073743872
 801              		.cfi_endproc
 802              	.LFE1871:
 804              		.section	.text.MX_TIM8_Init,"ax",%progbits
 805              		.align	1
 806              		.p2align 2,,3
 807              		.global	MX_TIM8_Init
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv4-sp-d16
 813              	MX_TIM8_Init:
 814              	.LFB1872:
 281:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 815              		.loc 1 281 1 is_stmt 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 104
ARM GAS  /tmp/ccQYv0hE.s 			page 28


 818              		@ frame_needed = 0, uses_anonymous_args = 0
 282:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 819              		.loc 1 282 3 view .LVU281
 283:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 820              		.loc 1 283 3 view .LVU282
 284:Src/tim.c     **** 
 821              		.loc 1 284 3 view .LVU283
 286:Src/tim.c     ****   htim8.Init.Prescaler = 0;
 822              		.loc 1 286 3 view .LVU284
 281:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 823              		.loc 1 281 1 is_stmt 0 view .LVU285
 824 0000 10B5     		push	{r4, lr}
 825              	.LCFI25:
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 4, -8
 828              		.cfi_offset 14, -4
 286:Src/tim.c     ****   htim8.Init.Prescaler = 0;
 829              		.loc 1 286 18 view .LVU286
 830 0002 3B48     		ldr	r0, .L144+32
 831 0004 3B4C     		ldr	r4, .L144+36
 287:Src/tim.c     ****   htim8.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 832              		.loc 1 287 24 view .LVU287
 833 0006 0023     		movs	r3, #0
 834 0008 C4E90003 		strd	r0, r3, [r4]
 288:Src/tim.c     ****   htim8.Init.Period = TIM_1_8_PERIOD_CLOCKS;
 835              		.loc 1 288 3 is_stmt 1 view .LVU288
 281:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 836              		.loc 1 281 1 is_stmt 0 view .LVU289
 837 000c 9AB0     		sub	sp, sp, #104
 838              	.LCFI26:
 839              		.cfi_def_cfa_offset 112
 288:Src/tim.c     ****   htim8.Init.Period = TIM_1_8_PERIOD_CLOCKS;
 840              		.loc 1 288 26 view .LVU290
 841 000e 6021     		movs	r1, #96
 289:Src/tim.c     ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 842              		.loc 1 289 21 view .LVU291
 843 0010 41F29A02 		movw	r2, #4250
 292:Src/tim.c     ****   {
 844              		.loc 1 292 7 view .LVU292
 845 0014 2046     		mov	r0, r4
 290:Src/tim.c     ****   htim8.Init.RepetitionCounter = TIM_1_8_RCR;
 846              		.loc 1 290 28 view .LVU293
 847 0016 C4E90323 		strd	r2, r3, [r4, #12]
 288:Src/tim.c     ****   htim8.Init.Period = TIM_1_8_PERIOD_CLOCKS;
 848              		.loc 1 288 26 view .LVU294
 849 001a A160     		str	r1, [r4, #8]
 289:Src/tim.c     ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 850              		.loc 1 289 3 is_stmt 1 view .LVU295
 291:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 851              		.loc 1 291 3 view .LVU296
 291:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 852              		.loc 1 291 32 is_stmt 0 view .LVU297
 853 001c 6361     		str	r3, [r4, #20]
 292:Src/tim.c     ****   {
 854              		.loc 1 292 3 is_stmt 1 view .LVU298
 292:Src/tim.c     ****   {
 855              		.loc 1 292 7 is_stmt 0 view .LVU299
ARM GAS  /tmp/ccQYv0hE.s 			page 29


 856 001e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 857              	.LVL38:
 292:Src/tim.c     ****   {
 858              		.loc 1 292 6 view .LVU300
 859 0022 0028     		cmp	r0, #0
 860 0024 40D1     		bne	.L138
 861              	.L113:
 297:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 862              		.loc 1 297 3 is_stmt 1 view .LVU301
 297:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 863              		.loc 1 297 37 is_stmt 0 view .LVU302
 864 0026 2022     		movs	r2, #32
 298:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 865              		.loc 1 298 33 view .LVU303
 866 0028 0023     		movs	r3, #0
 299:Src/tim.c     ****   {
 867              		.loc 1 299 7 view .LVU304
 868 002a 3248     		ldr	r0, .L144+36
 297:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 869              		.loc 1 297 37 view .LVU305
 870 002c 0192     		str	r2, [sp, #4]
 298:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 871              		.loc 1 298 3 is_stmt 1 view .LVU306
 299:Src/tim.c     ****   {
 872              		.loc 1 299 7 is_stmt 0 view .LVU307
 873 002e 01A9     		add	r1, sp, #4
 298:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 874              		.loc 1 298 33 view .LVU308
 875 0030 0393     		str	r3, [sp, #12]
 299:Src/tim.c     ****   {
 876              		.loc 1 299 3 is_stmt 1 view .LVU309
 299:Src/tim.c     ****   {
 877              		.loc 1 299 7 is_stmt 0 view .LVU310
 878 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 879              	.LVL39:
 299:Src/tim.c     ****   {
 880              		.loc 1 299 6 view .LVU311
 881 0036 0028     		cmp	r0, #0
 882 0038 45D1     		bne	.L139
 883              	.L114:
 304:Src/tim.c     ****   sConfigOC.Pulse = 0;
 884              		.loc 1 304 3 is_stmt 1 view .LVU312
 305:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 885              		.loc 1 305 3 view .LVU313
 306:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 886              		.loc 1 306 3 view .LVU314
 307:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 887              		.loc 1 307 3 view .LVU315
 308:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 888              		.loc 1 308 3 view .LVU316
 309:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 889              		.loc 1 309 3 view .LVU317
 304:Src/tim.c     ****   sConfigOC.Pulse = 0;
 890              		.loc 1 304 20 is_stmt 0 view .LVU318
 891 003a 9FED257B 		vldr.64	d7, .L144	@ int
 892 003e 0020     		movs	r0, #0
 893 0040 0021     		movs	r1, #0
ARM GAS  /tmp/ccQYv0hE.s 			page 30


 894 0042 CDE90601 		strd	r0, [sp, #24]
 895 0046 CDE90801 		strd	r0, [sp, #32]
 310:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 896              		.loc 1 310 3 is_stmt 1 view .LVU319
 310:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 897              		.loc 1 310 26 is_stmt 0 view .LVU320
 898 004a 0022     		movs	r2, #0
 311:Src/tim.c     ****   {
 899              		.loc 1 311 7 view .LVU321
 900 004c 2948     		ldr	r0, .L144+36
 310:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 901              		.loc 1 310 26 view .LVU322
 902 004e 0A92     		str	r2, [sp, #40]
 311:Src/tim.c     ****   {
 903              		.loc 1 311 3 is_stmt 1 view .LVU323
 311:Src/tim.c     ****   {
 904              		.loc 1 311 7 is_stmt 0 view .LVU324
 905 0050 04A9     		add	r1, sp, #16
 304:Src/tim.c     ****   sConfigOC.Pulse = 0;
 906              		.loc 1 304 20 view .LVU325
 907 0052 8DED047B 		vstr.64	d7, [sp, #16]	@ int
 311:Src/tim.c     ****   {
 908              		.loc 1 311 7 view .LVU326
 909 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 910              	.LVL40:
 311:Src/tim.c     ****   {
 911              		.loc 1 311 6 view .LVU327
 912 005a 88BB     		cbnz	r0, .L140
 913              	.L115:
 316:Src/tim.c     ****   {
 914              		.loc 1 316 3 is_stmt 1 view .LVU328
 316:Src/tim.c     ****   {
 915              		.loc 1 316 7 is_stmt 0 view .LVU329
 916 005c 2548     		ldr	r0, .L144+36
 917 005e 0422     		movs	r2, #4
 918 0060 04A9     		add	r1, sp, #16
 919 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 920              	.LVL41:
 316:Src/tim.c     ****   {
 921              		.loc 1 316 6 view .LVU330
 922 0066 40BB     		cbnz	r0, .L141
 923              	.L116:
 321:Src/tim.c     ****   {
 924              		.loc 1 321 3 is_stmt 1 view .LVU331
 321:Src/tim.c     ****   {
 925              		.loc 1 321 7 is_stmt 0 view .LVU332
 926 0068 2248     		ldr	r0, .L144+36
 927 006a 0822     		movs	r2, #8
 928 006c 04A9     		add	r1, sp, #16
 929 006e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 930              	.LVL42:
 321:Src/tim.c     ****   {
 931              		.loc 1 321 6 view .LVU333
 932 0072 F8B9     		cbnz	r0, .L142
 933              	.L117:
 326:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 934              		.loc 1 326 3 is_stmt 1 view .LVU334
ARM GAS  /tmp/ccQYv0hE.s 			page 31


 327:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 935              		.loc 1 327 3 view .LVU335
 328:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = TIM_1_8_DEADTIME_CLOCKS;
 936              		.loc 1 328 3 view .LVU336
 329:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 937              		.loc 1 329 3 view .LVU337
 330:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 938              		.loc 1 330 3 view .LVU338
 331:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 939              		.loc 1 331 3 view .LVU339
 326:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 940              		.loc 1 326 40 is_stmt 0 view .LVU340
 941 0074 9FED187B 		vldr.64	d7, .L144+8	@ int
 942 0078 8DED0C7B 		vstr.64	d7, [sp, #48]	@ int
 943 007c 9FED187B 		vldr.64	d7, .L144+16	@ int
 944 0080 8DED0E7B 		vstr.64	d7, [sp, #56]	@ int
 945 0084 9FED187B 		vldr.64	d7, .L144+24	@ int
 332:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 946              		.loc 1 332 40 view .LVU341
 947 0088 0023     		movs	r3, #0
 333:Src/tim.c     ****   {
 948              		.loc 1 333 7 view .LVU342
 949 008a 1A48     		ldr	r0, .L144+36
 332:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 950              		.loc 1 332 40 view .LVU343
 951 008c 1893     		str	r3, [sp, #96]
 333:Src/tim.c     ****   {
 952              		.loc 1 333 7 view .LVU344
 953 008e 0CA9     		add	r1, sp, #48
 326:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 954              		.loc 1 326 40 view .LVU345
 955 0090 8DED107B 		vstr.64	d7, [sp, #64]	@ int
 332:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 956              		.loc 1 332 3 is_stmt 1 view .LVU346
 333:Src/tim.c     ****   {
 957              		.loc 1 333 3 view .LVU347
 333:Src/tim.c     ****   {
 958              		.loc 1 333 7 is_stmt 0 view .LVU348
 959 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 960              	.LVL43:
 333:Src/tim.c     ****   {
 961              		.loc 1 333 6 view .LVU349
 962 0098 48B9     		cbnz	r0, .L143
 963              	.L118:
 338:Src/tim.c     **** __HAL_TIM_MOE_DISABLE_UNCONDITIONALLY(&htim8);
 964              		.loc 1 338 3 is_stmt 1 view .LVU350
 965              	.LVL44:
 483:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 966              		.loc 1 483 3 view .LVU351
 484:Src/tim.c     ****   {
 967              		.loc 1 484 3 view .LVU352
 968              		.loc 1 539 3 view .LVU353
 339:Src/tim.c     **** }
 969              		.loc 1 339 1 view .LVU354
 970 009a 2268     		ldr	r2, [r4]
 971 009c 536C     		ldr	r3, [r2, #68]
 972 009e 23F40043 		bic	r3, r3, #32768
ARM GAS  /tmp/ccQYv0hE.s 			page 32


 973 00a2 5364     		str	r3, [r2, #68]
 340:Src/tim.c     **** /* TIM13 init function */
 974              		.loc 1 340 1 is_stmt 0 view .LVU355
 975 00a4 1AB0     		add	sp, sp, #104
 976              	.LCFI27:
 977              		.cfi_remember_state
 978              		.cfi_def_cfa_offset 8
 979              		@ sp needed
 980 00a6 10BD     		pop	{r4, pc}
 981              	.L138:
 982              	.LCFI28:
 983              		.cfi_restore_state
 294:Src/tim.c     ****   }
 984              		.loc 1 294 5 is_stmt 1 view .LVU356
 985 00a8 FFF7FEFF 		bl	Error_Handler
 986              	.LVL45:
 987 00ac BBE7     		b	.L113
 988              	.L143:
 335:Src/tim.c     ****   }
 989              		.loc 1 335 5 view .LVU357
 990 00ae FFF7FEFF 		bl	Error_Handler
 991              	.LVL46:
 992 00b2 F2E7     		b	.L118
 993              	.L142:
 323:Src/tim.c     ****   }
 994              		.loc 1 323 5 view .LVU358
 995 00b4 FFF7FEFF 		bl	Error_Handler
 996              	.LVL47:
 997 00b8 DCE7     		b	.L117
 998              	.L141:
 318:Src/tim.c     ****   }
 999              		.loc 1 318 5 view .LVU359
 1000 00ba FFF7FEFF 		bl	Error_Handler
 1001              	.LVL48:
 1002 00be D3E7     		b	.L116
 1003              	.L140:
 313:Src/tim.c     ****   }
 1004              		.loc 1 313 5 view .LVU360
 1005 00c0 FFF7FEFF 		bl	Error_Handler
 1006              	.LVL49:
 1007 00c4 CAE7     		b	.L115
 1008              	.L139:
 301:Src/tim.c     ****   }
 1009              		.loc 1 301 5 view .LVU361
 1010 00c6 FFF7FEFF 		bl	Error_Handler
 1011              	.LVL50:
 1012 00ca B6E7     		b	.L114
 1013              	.L145:
 1014 00cc AFF30080 		.align	3
 1015              	.L144:
 1016 00d0 70000000 		.word	112
 1017 00d4 00000000 		.word	0
 1018 00d8 00080000 		.word	2048
 1019 00dc 00040000 		.word	1024
 1020 00e0 00000000 		.word	0
 1021 00e4 28000000 		.word	40
 1022 00e8 00000000 		.word	0
ARM GAS  /tmp/ccQYv0hE.s 			page 33


 1023 00ec 00200000 		.word	8192
 1024 00f0 00340140 		.word	1073820672
 1025 00f4 00000000 		.word	.LANCHOR4
 1026              		.cfi_endproc
 1027              	.LFE1872:
 1029              		.section	.text.MX_TIM15_Init,"ax",%progbits
 1030              		.align	1
 1031              		.p2align 2,,3
 1032              		.global	MX_TIM15_Init
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	MX_TIM15_Init:
 1039              	.LFB1873:
 343:Src/tim.c     **** 
 1040              		.loc 1 343 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 345:Src/tim.c     ****   htim15.Init.Prescaler = 0;
 1044              		.loc 1 345 3 view .LVU363
 345:Src/tim.c     ****   htim15.Init.Prescaler = 0;
 1045              		.loc 1 345 19 is_stmt 0 view .LVU364
 1046 0000 0948     		ldr	r0, .L150
 1047 0002 0A49     		ldr	r1, .L150+4
 343:Src/tim.c     **** 
 1048              		.loc 1 343 1 view .LVU365
 1049 0004 08B5     		push	{r3, lr}
 1050              	.LCFI29:
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 3, -8
 1053              		.cfi_offset 14, -4
 348:Src/tim.c     ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1054              		.loc 1 348 22 view .LVU366
 1055 0006 41F29902 		movw	r2, #4249
 346:Src/tim.c     ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1056              		.loc 1 346 25 view .LVU367
 1057 000a 0023     		movs	r3, #0
 1058 000c C0E90013 		strd	r1, r3, [r0]
 347:Src/tim.c     ****   htim15.Init.Period = (2 * TIM_1_8_PERIOD_CLOCKS * (TIM_1_8_RCR+1)) * ((float)TIM_APB1_CLOCK_HZ / 
 1059              		.loc 1 347 3 is_stmt 1 view .LVU368
 348:Src/tim.c     ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1060              		.loc 1 348 22 is_stmt 0 view .LVU369
 1061 0010 C0E90232 		strd	r3, r2, [r0, #8]
 349:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1062              		.loc 1 349 3 is_stmt 1 view .LVU370
 349:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1063              		.loc 1 349 29 is_stmt 0 view .LVU371
 1064 0014 0361     		str	r3, [r0, #16]
 350:Src/tim.c     ****   {
 1065              		.loc 1 350 3 is_stmt 1 view .LVU372
 350:Src/tim.c     ****   {
 1066              		.loc 1 350 7 is_stmt 0 view .LVU373
 1067 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1068              	.LVL51:
 350:Src/tim.c     ****   {
ARM GAS  /tmp/ccQYv0hE.s 			page 34


 1069              		.loc 1 350 6 view .LVU374
 1070 001a 00B9     		cbnz	r0, .L149
 355:Src/tim.c     **** 
 1071              		.loc 1 355 1 view .LVU375
 1072 001c 08BD     		pop	{r3, pc}
 1073              	.L149:
 352:Src/tim.c     ****   }
 1074              		.loc 1 352 5 is_stmt 1 view .LVU376
 355:Src/tim.c     **** 
 1075              		.loc 1 355 1 is_stmt 0 view .LVU377
 1076 001e BDE80840 		pop	{r3, lr}
 1077              	.LCFI30:
 1078              		.cfi_restore 14
 1079              		.cfi_restore 3
 1080              		.cfi_def_cfa_offset 0
 352:Src/tim.c     ****   }
 1081              		.loc 1 352 5 view .LVU378
 1082 0022 FFF7FEBF 		b	Error_Handler
 1083              	.LVL52:
 1084              	.L151:
 1085 0026 00BF     		.align	2
 1086              	.L150:
 1087 0028 00000000 		.word	.LANCHOR5
 1088 002c 00400140 		.word	1073823744
 1089              		.cfi_endproc
 1090              	.LFE1873:
 1092              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 1093              		.align	1
 1094              		.p2align 2,,3
 1095              		.global	HAL_TIM_Base_MspInit
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv4-sp-d16
 1101              	HAL_TIM_Base_MspInit:
 1102              	.LVL53:
 1103              	.LFB1874:
 358:Src/tim.c     **** 
 1104              		.loc 1 358 1 is_stmt 1 view -0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 8
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 360:Src/tim.c     ****   {
 1109              		.loc 1 360 3 view .LVU380
 360:Src/tim.c     ****   {
 1110              		.loc 1 360 5 is_stmt 0 view .LVU381
 1111 0000 144A     		ldr	r2, .L158
 360:Src/tim.c     ****   {
 1112              		.loc 1 360 20 view .LVU382
 1113 0002 0368     		ldr	r3, [r0]
 360:Src/tim.c     ****   {
 1114              		.loc 1 360 5 view .LVU383
 1115 0004 9342     		cmp	r3, r2
 358:Src/tim.c     **** 
 1116              		.loc 1 358 1 view .LVU384
 1117 0006 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccQYv0hE.s 			page 35


 1118              	.LCFI31:
 1119              		.cfi_def_cfa_offset 8
 360:Src/tim.c     ****   {
 1120              		.loc 1 360 5 view .LVU385
 1121 0008 04D0     		beq	.L156
 375:Src/tim.c     ****   {
 1122              		.loc 1 375 8 is_stmt 1 view .LVU386
 375:Src/tim.c     ****   {
 1123              		.loc 1 375 10 is_stmt 0 view .LVU387
 1124 000a 134A     		ldr	r2, .L158+4
 1125 000c 9342     		cmp	r3, r2
 1126 000e 11D0     		beq	.L157
 390:Src/tim.c     **** 
 1127              		.loc 1 390 1 view .LVU388
 1128 0010 02B0     		add	sp, sp, #8
 1129              	.LCFI32:
 1130              		.cfi_remember_state
 1131              		.cfi_def_cfa_offset 0
 1132              		@ sp needed
 1133 0012 7047     		bx	lr
 1134              	.L156:
 1135              	.LCFI33:
 1136              		.cfi_restore_state
 366:Src/tim.c     **** 
 1137              		.loc 1 366 5 is_stmt 1 view .LVU389
 1138              	.LBB8:
 366:Src/tim.c     **** 
 1139              		.loc 1 366 5 view .LVU390
 366:Src/tim.c     **** 
 1140              		.loc 1 366 5 view .LVU391
 1141 0014 114B     		ldr	r3, .L158+8
 1142 0016 186E     		ldr	r0, [r3, #96]
 1143              	.LVL54:
 366:Src/tim.c     **** 
 1144              		.loc 1 366 5 is_stmt 0 view .LVU392
 1145 0018 40F40060 		orr	r0, r0, #2048
 1146 001c 1866     		str	r0, [r3, #96]
 366:Src/tim.c     **** 
 1147              		.loc 1 366 5 is_stmt 1 view .LVU393
 1148 001e 1B6E     		ldr	r3, [r3, #96]
 1149 0020 03F40063 		and	r3, r3, #2048
 1150 0024 0093     		str	r3, [sp]
 366:Src/tim.c     **** 
 1151              		.loc 1 366 5 view .LVU394
 1152 0026 009B     		ldr	r3, [sp]
 1153              	.LBE8:
 366:Src/tim.c     **** 
 1154              		.loc 1 366 5 view .LVU395
 369:Src/tim.c     ****  //   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 1155              		.loc 1 369 5 view .LVU396
 1156 0028 0022     		movs	r2, #0
 1157 002a 0621     		movs	r1, #6
 1158 002c 1920     		movs	r0, #25
 390:Src/tim.c     **** 
 1159              		.loc 1 390 1 is_stmt 0 view .LVU397
 1160 002e 02B0     		add	sp, sp, #8
 1161              	.LCFI34:
ARM GAS  /tmp/ccQYv0hE.s 			page 36


 1162              		.cfi_remember_state
 1163              		.cfi_def_cfa_offset 0
 1164              		@ sp needed
 369:Src/tim.c     ****  //   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 1165              		.loc 1 369 5 view .LVU398
 1166 0030 FFF7FEBF 		b	HAL_NVIC_SetPriority
 1167              	.LVL55:
 1168              	.L157:
 1169              	.LCFI35:
 1170              		.cfi_restore_state
 381:Src/tim.c     **** 
 1171              		.loc 1 381 5 is_stmt 1 view .LVU399
 1172              	.LBB9:
 381:Src/tim.c     **** 
 1173              		.loc 1 381 5 view .LVU400
 381:Src/tim.c     **** 
 1174              		.loc 1 381 5 view .LVU401
 1175 0034 094B     		ldr	r3, .L158+8
 1176 0036 186E     		ldr	r0, [r3, #96]
 1177              	.LVL56:
 381:Src/tim.c     **** 
 1178              		.loc 1 381 5 is_stmt 0 view .LVU402
 1179 0038 40F48030 		orr	r0, r0, #65536
 1180 003c 1866     		str	r0, [r3, #96]
 381:Src/tim.c     **** 
 1181              		.loc 1 381 5 is_stmt 1 view .LVU403
 1182 003e 1B6E     		ldr	r3, [r3, #96]
 1183 0040 03F48033 		and	r3, r3, #65536
 1184 0044 0193     		str	r3, [sp, #4]
 381:Src/tim.c     **** 
 1185              		.loc 1 381 5 view .LVU404
 1186 0046 019B     		ldr	r3, [sp, #4]
 1187              	.LBE9:
 381:Src/tim.c     **** 
 1188              		.loc 1 381 5 view .LVU405
 384:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1189              		.loc 1 384 5 view .LVU406
 1190 0048 0022     		movs	r2, #0
 1191 004a 0621     		movs	r1, #6
 1192 004c 1820     		movs	r0, #24
 390:Src/tim.c     **** 
 1193              		.loc 1 390 1 is_stmt 0 view .LVU407
 1194 004e 02B0     		add	sp, sp, #8
 1195              	.LCFI36:
 1196              		.cfi_def_cfa_offset 0
 1197              		@ sp needed
 384:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1198              		.loc 1 384 5 view .LVU408
 1199 0050 FFF7FEBF 		b	HAL_NVIC_SetPriority
 1200              	.LVL57:
 1201              	.L159:
 1202              		.align	2
 1203              	.L158:
 1204 0054 002C0140 		.word	1073818624
 1205 0058 00400140 		.word	1073823744
 1206 005c 00100240 		.word	1073876992
 1207              		.cfi_endproc
ARM GAS  /tmp/ccQYv0hE.s 			page 37


 1208              	.LFE1874:
 1210              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 1211              		.align	1
 1212              		.p2align 2,,3
 1213              		.global	HAL_TIM_PWM_MspInit
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	HAL_TIM_PWM_MspInit:
 1220              	.LVL58:
 1221              	.LFB1875:
 393:Src/tim.c     **** 
 1222              		.loc 1 393 1 is_stmt 1 view -0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 8
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 395:Src/tim.c     ****   {
 1226              		.loc 1 395 3 view .LVU410
 393:Src/tim.c     **** 
 1227              		.loc 1 393 1 is_stmt 0 view .LVU411
 1228 0000 00B5     		push	{lr}
 1229              	.LCFI37:
 1230              		.cfi_def_cfa_offset 4
 1231              		.cfi_offset 14, -4
 395:Src/tim.c     ****   {
 1232              		.loc 1 395 19 view .LVU412
 1233 0002 0368     		ldr	r3, [r0]
 395:Src/tim.c     ****   {
 1234              		.loc 1 395 5 view .LVU413
 1235 0004 B3F1804F 		cmp	r3, #1073741824
 393:Src/tim.c     **** 
 1236              		.loc 1 393 1 view .LVU414
 1237 0008 83B0     		sub	sp, sp, #12
 1238              	.LCFI38:
 1239              		.cfi_def_cfa_offset 16
 395:Src/tim.c     ****   {
 1240              		.loc 1 395 5 view .LVU415
 1241 000a 05D0     		beq	.L164
 406:Src/tim.c     ****   {
 1242              		.loc 1 406 8 is_stmt 1 view .LVU416
 406:Src/tim.c     ****   {
 1243              		.loc 1 406 10 is_stmt 0 view .LVU417
 1244 000c 154A     		ldr	r2, .L166
 1245 000e 9342     		cmp	r3, r2
 1246 0010 10D0     		beq	.L165
 423:Src/tim.c     **** 
 1247              		.loc 1 423 1 view .LVU418
 1248 0012 03B0     		add	sp, sp, #12
 1249              	.LCFI39:
 1250              		.cfi_remember_state
 1251              		.cfi_def_cfa_offset 4
 1252              		@ sp needed
 1253 0014 5DF804FB 		ldr	pc, [sp], #4
 1254              	.L164:
 1255              	.LCFI40:
 1256              		.cfi_restore_state
ARM GAS  /tmp/ccQYv0hE.s 			page 38


 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1257              		.loc 1 401 5 is_stmt 1 view .LVU419
 1258              	.LBB10:
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1259              		.loc 1 401 5 view .LVU420
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1260              		.loc 1 401 5 view .LVU421
 1261 0018 03F50433 		add	r3, r3, #135168
 1262 001c 9A6D     		ldr	r2, [r3, #88]
 1263 001e 42F00102 		orr	r2, r2, #1
 1264 0022 9A65     		str	r2, [r3, #88]
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1265              		.loc 1 401 5 view .LVU422
 1266 0024 9B6D     		ldr	r3, [r3, #88]
 1267 0026 03F00103 		and	r3, r3, #1
 1268 002a 0093     		str	r3, [sp]
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1269              		.loc 1 401 5 view .LVU423
 1270 002c 009B     		ldr	r3, [sp]
 1271              	.LBE10:
 401:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 1272              		.loc 1 401 5 view .LVU424
 423:Src/tim.c     **** 
 1273              		.loc 1 423 1 is_stmt 0 view .LVU425
 1274 002e 03B0     		add	sp, sp, #12
 1275              	.LCFI41:
 1276              		.cfi_remember_state
 1277              		.cfi_def_cfa_offset 4
 1278              		@ sp needed
 1279 0030 5DF804FB 		ldr	pc, [sp], #4
 1280              	.L165:
 1281              	.LCFI42:
 1282              		.cfi_restore_state
 412:Src/tim.c     **** 
 1283              		.loc 1 412 5 is_stmt 1 view .LVU426
 1284              	.LBB11:
 412:Src/tim.c     **** 
 1285              		.loc 1 412 5 view .LVU427
 412:Src/tim.c     **** 
 1286              		.loc 1 412 5 view .LVU428
 1287 0034 0C4B     		ldr	r3, .L166+4
 1288 0036 186E     		ldr	r0, [r3, #96]
 1289              	.LVL59:
 412:Src/tim.c     **** 
 1290              		.loc 1 412 5 is_stmt 0 view .LVU429
 1291 0038 40F40050 		orr	r0, r0, #8192
 1292 003c 1866     		str	r0, [r3, #96]
 412:Src/tim.c     **** 
 1293              		.loc 1 412 5 is_stmt 1 view .LVU430
 1294 003e 1B6E     		ldr	r3, [r3, #96]
 1295 0040 03F40053 		and	r3, r3, #8192
 1296 0044 0193     		str	r3, [sp, #4]
 412:Src/tim.c     **** 
 1297              		.loc 1 412 5 view .LVU431
 1298              	.LBE11:
 415:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1299              		.loc 1 415 5 is_stmt 0 view .LVU432
ARM GAS  /tmp/ccQYv0hE.s 			page 39


 1300 0046 0022     		movs	r2, #0
 1301 0048 0621     		movs	r1, #6
 1302 004a 2C20     		movs	r0, #44
 1303              	.LBB12:
 412:Src/tim.c     **** 
 1304              		.loc 1 412 5 view .LVU433
 1305 004c 019B     		ldr	r3, [sp, #4]
 1306              	.LBE12:
 412:Src/tim.c     **** 
 1307              		.loc 1 412 5 is_stmt 1 view .LVU434
 415:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 1308              		.loc 1 415 5 view .LVU435
 1309 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1310              	.LVL60:
 417:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 1311              		.loc 1 417 5 view .LVU436
 1312 0052 0022     		movs	r2, #0
 1313 0054 0621     		movs	r1, #6
 1314 0056 2D20     		movs	r0, #45
 423:Src/tim.c     **** 
 1315              		.loc 1 423 1 is_stmt 0 view .LVU437
 1316 0058 03B0     		add	sp, sp, #12
 1317              	.LCFI43:
 1318              		.cfi_def_cfa_offset 4
 1319              		@ sp needed
 1320 005a 5DF804EB 		ldr	lr, [sp], #4
 1321              	.LCFI44:
 1322              		.cfi_restore 14
 1323              		.cfi_def_cfa_offset 0
 417:Src/tim.c     ****   //  HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 1324              		.loc 1 417 5 view .LVU438
 1325 005e FFF7FEBF 		b	HAL_NVIC_SetPriority
 1326              	.LVL61:
 1327              	.L167:
 1328 0062 00BF     		.align	2
 1329              	.L166:
 1330 0064 00340140 		.word	1073820672
 1331 0068 00100240 		.word	1073876992
 1332              		.cfi_endproc
 1333              	.LFE1875:
 1335              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 1336              		.align	1
 1337              		.p2align 2,,3
 1338              		.global	HAL_TIM_Encoder_MspInit
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	HAL_TIM_Encoder_MspInit:
 1345              	.LVL62:
 1346              	.LFB1876:
 426:Src/tim.c     **** 
 1347              		.loc 1 426 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 8
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
ARM GAS  /tmp/ccQYv0hE.s 			page 40


 428:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM3)
 1352              		.loc 1 428 3 view .LVU440
 429:Src/tim.c     ****   {
 1353              		.loc 1 429 3 view .LVU441
 429:Src/tim.c     ****   {
 1354              		.loc 1 429 5 is_stmt 0 view .LVU442
 1355 0000 104A     		ldr	r2, .L174
 429:Src/tim.c     ****   {
 1356              		.loc 1 429 23 view .LVU443
 1357 0002 0368     		ldr	r3, [r0]
 429:Src/tim.c     ****   {
 1358              		.loc 1 429 5 view .LVU444
 1359 0004 9342     		cmp	r3, r2
 426:Src/tim.c     **** 
 1360              		.loc 1 426 1 view .LVU445
 1361 0006 82B0     		sub	sp, sp, #8
 1362              	.LCFI45:
 1363              		.cfi_def_cfa_offset 8
 429:Src/tim.c     ****   {
 1364              		.loc 1 429 5 view .LVU446
 1365 0008 10D0     		beq	.L172
 447:Src/tim.c     ****   {
 1366              		.loc 1 447 8 is_stmt 1 view .LVU447
 447:Src/tim.c     ****   {
 1367              		.loc 1 447 10 is_stmt 0 view .LVU448
 1368 000a 0F4A     		ldr	r2, .L174+4
 1369 000c 9342     		cmp	r3, r2
 1370 000e 01D0     		beq	.L173
 465:Src/tim.c     **** 
 1371              		.loc 1 465 1 view .LVU449
 1372 0010 02B0     		add	sp, sp, #8
 1373              	.LCFI46:
 1374              		.cfi_remember_state
 1375              		.cfi_def_cfa_offset 0
 1376              		@ sp needed
 1377 0012 7047     		bx	lr
 1378              	.L173:
 1379              	.LCFI47:
 1380              		.cfi_restore_state
 453:Src/tim.c     ****   
 1381              		.loc 1 453 5 is_stmt 1 view .LVU450
 1382              	.LBB13:
 453:Src/tim.c     ****   
 1383              		.loc 1 453 5 view .LVU451
 453:Src/tim.c     ****   
 1384              		.loc 1 453 5 view .LVU452
 1385 0014 0D4B     		ldr	r3, .L174+8
 1386 0016 9A6D     		ldr	r2, [r3, #88]
 1387 0018 42F00402 		orr	r2, r2, #4
 1388 001c 9A65     		str	r2, [r3, #88]
 453:Src/tim.c     ****   
 1389              		.loc 1 453 5 view .LVU453
 1390 001e 9B6D     		ldr	r3, [r3, #88]
 1391 0020 03F00403 		and	r3, r3, #4
 1392 0024 0193     		str	r3, [sp, #4]
 453:Src/tim.c     ****   
 1393              		.loc 1 453 5 view .LVU454
ARM GAS  /tmp/ccQYv0hE.s 			page 41


 1394 0026 019B     		ldr	r3, [sp, #4]
 1395              	.LBE13:
 453:Src/tim.c     ****   
 1396              		.loc 1 453 5 view .LVU455
 465:Src/tim.c     **** 
 1397              		.loc 1 465 1 is_stmt 0 view .LVU456
 1398 0028 02B0     		add	sp, sp, #8
 1399              	.LCFI48:
 1400              		.cfi_remember_state
 1401              		.cfi_def_cfa_offset 0
 1402              		@ sp needed
 1403 002a 7047     		bx	lr
 1404              	.L172:
 1405              	.LCFI49:
 1406              		.cfi_restore_state
 435:Src/tim.c     ****   
 1407              		.loc 1 435 5 is_stmt 1 view .LVU457
 1408              	.LBB14:
 435:Src/tim.c     ****   
 1409              		.loc 1 435 5 view .LVU458
 435:Src/tim.c     ****   
 1410              		.loc 1 435 5 view .LVU459
 1411 002c 074B     		ldr	r3, .L174+8
 1412 002e 9A6D     		ldr	r2, [r3, #88]
 1413 0030 42F00202 		orr	r2, r2, #2
 1414 0034 9A65     		str	r2, [r3, #88]
 435:Src/tim.c     ****   
 1415              		.loc 1 435 5 view .LVU460
 1416 0036 9B6D     		ldr	r3, [r3, #88]
 1417 0038 03F00203 		and	r3, r3, #2
 1418 003c 0093     		str	r3, [sp]
 435:Src/tim.c     ****   
 1419              		.loc 1 435 5 view .LVU461
 1420 003e 009B     		ldr	r3, [sp]
 1421              	.LBE14:
 435:Src/tim.c     ****   
 1422              		.loc 1 435 5 view .LVU462
 465:Src/tim.c     **** 
 1423              		.loc 1 465 1 is_stmt 0 view .LVU463
 1424 0040 02B0     		add	sp, sp, #8
 1425              	.LCFI50:
 1426              		.cfi_def_cfa_offset 0
 1427              		@ sp needed
 1428 0042 7047     		bx	lr
 1429              	.L175:
 1430              		.align	2
 1431              	.L174:
 1432 0044 00040040 		.word	1073742848
 1433 0048 00080040 		.word	1073743872
 1434 004c 00100240 		.word	1073876992
 1435              		.cfi_endproc
 1436              	.LFE1876:
 1438              		.section	.text.HAL_TIM_IC_MspInit,"ax",%progbits
 1439              		.align	1
 1440              		.p2align 2,,3
 1441              		.global	HAL_TIM_IC_MspInit
 1442              		.syntax unified
ARM GAS  /tmp/ccQYv0hE.s 			page 42


 1443              		.thumb
 1444              		.thumb_func
 1445              		.fpu fpv4-sp-d16
 1447              	HAL_TIM_IC_MspInit:
 1448              	.LVL63:
 1449              	.LFB1877:
 468:Src/tim.c     **** 
 1450              		.loc 1 468 1 is_stmt 1 view -0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
 470:Src/tim.c     ****   if(tim_icHandle->Instance==TIM15)
 1455              		.loc 1 470 3 view .LVU465
 471:Src/tim.c     ****   {
 1456              		.loc 1 471 3 view .LVU466
 478:Src/tim.c     **** }
 1457              		.loc 1 478 3 view .LVU467
 479:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 1458              		.loc 1 479 1 is_stmt 0 view .LVU468
 1459 0000 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE1877:
 1463 0002 00BF     		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 1464              		.align	1
 1465              		.p2align 2,,3
 1466              		.global	HAL_TIM_MspPostInit
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu fpv4-sp-d16
 1472              	HAL_TIM_MspPostInit:
 1473              	.LFB1886:
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477              		@ link register save eliminated.
 1478 0000 7047     		bx	lr
 1479              		.cfi_endproc
 1480              	.LFE1886:
 1482 0002 00BF     		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 1483              		.align	1
 1484              		.p2align 2,,3
 1485              		.global	HAL_TIM_Base_MspDeInit
 1486              		.syntax unified
 1487              		.thumb
 1488              		.thumb_func
 1489              		.fpu fpv4-sp-d16
 1491              	HAL_TIM_Base_MspDeInit:
 1492              	.LVL64:
 1493              	.LFB1879:
 540:Src/tim.c     **** 
 541:Src/tim.c     **** }
 542:Src/tim.c     **** 
 543:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 544:Src/tim.c     **** {
 1494              		.loc 1 544 1 is_stmt 1 view -0
ARM GAS  /tmp/ccQYv0hE.s 			page 43


 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 545:Src/tim.c     **** 
 546:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 1499              		.loc 1 546 3 view .LVU470
 1500              		.loc 1 546 5 is_stmt 0 view .LVU471
 1501 0000 0B4A     		ldr	r2, .L183
 1502              		.loc 1 546 20 view .LVU472
 1503 0002 0368     		ldr	r3, [r0]
 1504              		.loc 1 546 5 view .LVU473
 1505 0004 9342     		cmp	r3, r2
 1506 0006 0AD0     		beq	.L181
 547:Src/tim.c     ****   {
 548:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 549:Src/tim.c     **** 
 550:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 551:Src/tim.c     ****     /* Peripheral clock disable */
 552:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 553:Src/tim.c     **** 
 554:Src/tim.c     ****     /* TIM1 interrupt Deinit */
 555:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn);
 556:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 557:Src/tim.c     **** 
 558:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 559:Src/tim.c     ****   }
 560:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 1507              		.loc 1 560 8 is_stmt 1 view .LVU474
 1508              		.loc 1 560 10 is_stmt 0 view .LVU475
 1509 0008 0A4A     		ldr	r2, .L183+4
 1510 000a 9342     		cmp	r3, r2
 1511 000c 00D0     		beq	.L182
 561:Src/tim.c     ****   {
 562:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 0 */
 563:Src/tim.c     **** 
 564:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 0 */
 565:Src/tim.c     ****     /* Peripheral clock disable */
 566:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_DISABLE();
 567:Src/tim.c     **** 
 568:Src/tim.c     ****     /* TIM13 interrupt Deinit */
 569:Src/tim.c     ****   /* USER CODE BEGIN TIM13:TIM8_UP_TIM13_IRQn disable */
 570:Src/tim.c     ****     /**
 571:Src/tim.c     ****     * Uncomment the line below to disable the "TIM8_UP_TIM13_IRQn" interrupt
 572:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 573:Src/tim.c     ****     */
 574:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM8_UP_TIM13_IRQn); */
 575:Src/tim.c     ****   /* USER CODE END TIM13:TIM8_UP_TIM13_IRQn disable */
 576:Src/tim.c     **** 
 577:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 578:Src/tim.c     **** 
 579:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 1 */
 580:Src/tim.c     ****   }
 581:Src/tim.c     **** }
 1512              		.loc 1 581 1 view .LVU476
 1513 000e 7047     		bx	lr
 1514              	.L182:
ARM GAS  /tmp/ccQYv0hE.s 			page 44


 566:Src/tim.c     **** 
 1515              		.loc 1 566 5 is_stmt 1 view .LVU477
 1516 0010 02F55042 		add	r2, r2, #53248
 1517 0014 136E     		ldr	r3, [r2, #96]
 1518 0016 23F48033 		bic	r3, r3, #65536
 1519 001a 1366     		str	r3, [r2, #96]
 1520              		.loc 1 581 1 is_stmt 0 view .LVU478
 1521 001c 7047     		bx	lr
 1522              	.L181:
 552:Src/tim.c     **** 
 1523              		.loc 1 552 5 is_stmt 1 view .LVU479
 1524 001e 02F56442 		add	r2, r2, #58368
 555:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 1525              		.loc 1 555 5 is_stmt 0 view .LVU480
 1526 0022 1920     		movs	r0, #25
 1527              	.LVL65:
 552:Src/tim.c     **** 
 1528              		.loc 1 552 5 view .LVU481
 1529 0024 136E     		ldr	r3, [r2, #96]
 1530 0026 23F40063 		bic	r3, r3, #2048
 1531 002a 1366     		str	r3, [r2, #96]
 555:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 1532              		.loc 1 555 5 is_stmt 1 view .LVU482
 1533 002c FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 1534              	.LVL66:
 1535              	.L184:
 1536              		.align	2
 1537              	.L183:
 1538 0030 002C0140 		.word	1073818624
 1539 0034 00400140 		.word	1073823744
 1540              		.cfi_endproc
 1541              	.LFE1879:
 1543              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 1544              		.align	1
 1545              		.p2align 2,,3
 1546              		.global	HAL_TIM_PWM_MspDeInit
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu fpv4-sp-d16
 1552              	HAL_TIM_PWM_MspDeInit:
 1553              	.LVL67:
 1554              	.LFB1880:
 582:Src/tim.c     **** 
 583:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 584:Src/tim.c     **** {
 1555              		.loc 1 584 1 view -0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 585:Src/tim.c     **** 
 586:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 1560              		.loc 1 586 3 view .LVU484
 1561              		.loc 1 586 19 is_stmt 0 view .LVU485
 1562 0000 0368     		ldr	r3, [r0]
 1563              		.loc 1 586 5 view .LVU486
ARM GAS  /tmp/ccQYv0hE.s 			page 45


 1564 0002 B3F1804F 		cmp	r3, #1073741824
 1565 0006 0AD0     		beq	.L188
 587:Src/tim.c     ****   {
 588:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 589:Src/tim.c     **** 
 590:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 591:Src/tim.c     ****     /* Peripheral clock disable */
 592:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 593:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 594:Src/tim.c     **** 
 595:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 596:Src/tim.c     ****   }
 597:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM8)
 1566              		.loc 1 597 8 is_stmt 1 view .LVU487
 1567              		.loc 1 597 10 is_stmt 0 view .LVU488
 1568 0008 084A     		ldr	r2, .L190
 1569 000a 9342     		cmp	r3, r2
 1570 000c 00D0     		beq	.L189
 598:Src/tim.c     ****   {
 599:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspDeInit 0 */
 600:Src/tim.c     **** 
 601:Src/tim.c     ****   /* USER CODE END TIM8_MspDeInit 0 */
 602:Src/tim.c     ****     /* Peripheral clock disable */
 603:Src/tim.c     ****     __HAL_RCC_TIM8_CLK_DISABLE();
 604:Src/tim.c     **** 
 605:Src/tim.c     ****     /* TIM8 interrupt Deinit */
 606:Src/tim.c     ****   /* USER CODE BEGIN TIM8:TIM8_UP_TIM13_IRQn disable */
 607:Src/tim.c     ****     /**
 608:Src/tim.c     ****     * Uncomment the line below to disable the "TIM8_UP_TIM13_IRQn" interrupt
 609:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 610:Src/tim.c     ****     */
 611:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM8_UP_TIM13_IRQn); */
 612:Src/tim.c     ****   /* USER CODE END TIM8:TIM8_UP_TIM13_IRQn disable */
 613:Src/tim.c     **** 
 614:Src/tim.c     ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 615:Src/tim.c     **** 
 616:Src/tim.c     ****   /* USER CODE END TIM8_MspDeInit 1 */
 617:Src/tim.c     ****   }
 618:Src/tim.c     **** }
 1571              		.loc 1 618 1 view .LVU489
 1572 000e 7047     		bx	lr
 1573              	.L189:
 603:Src/tim.c     **** 
 1574              		.loc 1 603 5 is_stmt 1 view .LVU490
 1575 0010 02F55C42 		add	r2, r2, #56320
 1576 0014 136E     		ldr	r3, [r2, #96]
 1577 0016 23F40053 		bic	r3, r3, #8192
 1578 001a 1366     		str	r3, [r2, #96]
 1579              		.loc 1 618 1 is_stmt 0 view .LVU491
 1580 001c 7047     		bx	lr
 1581              	.L188:
 592:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 1582              		.loc 1 592 5 is_stmt 1 view .LVU492
 1583 001e 044A     		ldr	r2, .L190+4
 1584 0020 936D     		ldr	r3, [r2, #88]
 1585 0022 23F00103 		bic	r3, r3, #1
 1586 0026 9365     		str	r3, [r2, #88]
ARM GAS  /tmp/ccQYv0hE.s 			page 46


 1587 0028 7047     		bx	lr
 1588              	.L191:
 1589 002a 00BF     		.align	2
 1590              	.L190:
 1591 002c 00340140 		.word	1073820672
 1592 0030 00100240 		.word	1073876992
 1593              		.cfi_endproc
 1594              	.LFE1880:
 1596              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 1597              		.align	1
 1598              		.p2align 2,,3
 1599              		.global	HAL_TIM_Encoder_MspDeInit
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu fpv4-sp-d16
 1605              	HAL_TIM_Encoder_MspDeInit:
 1606              	.LVL68:
 1607              	.LFB1881:
 619:Src/tim.c     **** 
 620:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 621:Src/tim.c     **** {
 1608              		.loc 1 621 1 view -0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 1612              		@ link register save eliminated.
 622:Src/tim.c     **** 
 623:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM3)
 1613              		.loc 1 623 3 view .LVU494
 1614              		.loc 1 623 5 is_stmt 0 view .LVU495
 1615 0000 0A4A     		ldr	r2, .L197
 1616              		.loc 1 623 23 view .LVU496
 1617 0002 0368     		ldr	r3, [r0]
 1618              		.loc 1 623 5 view .LVU497
 1619 0004 9342     		cmp	r3, r2
 1620 0006 0AD0     		beq	.L195
 624:Src/tim.c     ****   {
 625:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 626:Src/tim.c     **** 
 627:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 628:Src/tim.c     ****     /* Peripheral clock disable */
 629:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 630:Src/tim.c     ****   
 631:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 632:Src/tim.c     ****     PB4     ------> TIM3_CH1
 633:Src/tim.c     ****     PB5     ------> TIM3_CH2 
 634:Src/tim.c     ****     */
 635:Src/tim.c     ****   
 636:Src/tim.c     **** 
 637:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 638:Src/tim.c     **** 
 639:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 640:Src/tim.c     ****   }
 641:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM4)
 1621              		.loc 1 641 8 is_stmt 1 view .LVU498
 1622              		.loc 1 641 10 is_stmt 0 view .LVU499
ARM GAS  /tmp/ccQYv0hE.s 			page 47


 1623 0008 094A     		ldr	r2, .L197+4
 1624 000a 9342     		cmp	r3, r2
 1625 000c 00D0     		beq	.L196
 642:Src/tim.c     ****   {
 643:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 644:Src/tim.c     **** 
 645:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 0 */
 646:Src/tim.c     ****     /* Peripheral clock disable */
 647:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_DISABLE();
 648:Src/tim.c     ****   
 649:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 650:Src/tim.c     ****     PB6     ------> TIM4_CH1
 651:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 652:Src/tim.c     ****     */
 653:Src/tim.c     **** 
 654:Src/tim.c     **** 
 655:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 656:Src/tim.c     **** 
 657:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 1 */
 658:Src/tim.c     ****   }
 659:Src/tim.c     **** }
 1626              		.loc 1 659 1 view .LVU500
 1627 000e 7047     		bx	lr
 1628              	.L196:
 647:Src/tim.c     ****   
 1629              		.loc 1 647 5 is_stmt 1 view .LVU501
 1630 0010 02F50232 		add	r2, r2, #133120
 1631 0014 936D     		ldr	r3, [r2, #88]
 1632 0016 23F00403 		bic	r3, r3, #4
 1633 001a 9365     		str	r3, [r2, #88]
 1634              		.loc 1 659 1 is_stmt 0 view .LVU502
 1635 001c 7047     		bx	lr
 1636              	.L195:
 629:Src/tim.c     ****   
 1637              		.loc 1 629 5 is_stmt 1 view .LVU503
 1638 001e 02F50332 		add	r2, r2, #134144
 1639 0022 936D     		ldr	r3, [r2, #88]
 1640 0024 23F00203 		bic	r3, r3, #2
 1641 0028 9365     		str	r3, [r2, #88]
 1642 002a 7047     		bx	lr
 1643              	.L198:
 1644              		.align	2
 1645              	.L197:
 1646 002c 00040040 		.word	1073742848
 1647 0030 00080040 		.word	1073743872
 1648              		.cfi_endproc
 1649              	.LFE1881:
 1651              		.section	.text.HAL_TIM_IC_MspDeInit,"ax",%progbits
 1652              		.align	1
 1653              		.p2align 2,,3
 1654              		.global	HAL_TIM_IC_MspDeInit
 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1658              		.fpu fpv4-sp-d16
 1660              	HAL_TIM_IC_MspDeInit:
 1661              	.LFB1884:
ARM GAS  /tmp/ccQYv0hE.s 			page 48


 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 0
 1664              		@ frame_needed = 0, uses_anonymous_args = 0
 1665              		@ link register save eliminated.
 1666 0000 7047     		bx	lr
 1667              		.cfi_endproc
 1668              	.LFE1884:
 1670              		.global	htim15
 1671              		.global	htim8
 1672              		.global	htim4
 1673              		.global	htim3
 1674              		.global	htim2
 1675              		.global	htim1
 1676 0002 00BF     		.section	.bss.htim1,"aw",%nobits
 1677              		.align	2
 1678              		.set	.LANCHOR0,. + 0
 1681              	htim1:
 1682 0000 00000000 		.space	76
 1682      00000000 
 1682      00000000 
 1682      00000000 
 1682      00000000 
 1683              		.section	.bss.htim15,"aw",%nobits
 1684              		.align	2
 1685              		.set	.LANCHOR5,. + 0
 1688              	htim15:
 1689 0000 00000000 		.space	76
 1689      00000000 
 1689      00000000 
 1689      00000000 
 1689      00000000 
 1690              		.section	.bss.htim2,"aw",%nobits
 1691              		.align	2
 1692              		.set	.LANCHOR1,. + 0
 1695              	htim2:
 1696 0000 00000000 		.space	76
 1696      00000000 
 1696      00000000 
 1696      00000000 
 1696      00000000 
 1697              		.section	.bss.htim3,"aw",%nobits
 1698              		.align	2
 1699              		.set	.LANCHOR2,. + 0
 1702              	htim3:
 1703 0000 00000000 		.space	76
 1703      00000000 
 1703      00000000 
 1703      00000000 
 1703      00000000 
 1704              		.section	.bss.htim4,"aw",%nobits
 1705              		.align	2
 1706              		.set	.LANCHOR3,. + 0
 1709              	htim4:
 1710 0000 00000000 		.space	76
 1710      00000000 
 1710      00000000 
 1710      00000000 
ARM GAS  /tmp/ccQYv0hE.s 			page 49


 1710      00000000 
 1711              		.section	.bss.htim8,"aw",%nobits
 1712              		.align	2
 1713              		.set	.LANCHOR4,. + 0
 1716              	htim8:
 1717 0000 00000000 		.space	76
 1717      00000000 
 1717      00000000 
 1717      00000000 
 1717      00000000 
 1718              		.text
 1719              	.Letext0:
 1720              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1721              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1722              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1723              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1724              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1725              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1726              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1727              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1728              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1729              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1730              		.file 12 "Inc/tim.h"
 1731              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 1732              		.file 14 "Inc/main.h"
 1733              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
ARM GAS  /tmp/ccQYv0hE.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccQYv0hE.s:18     .text.OC4_PWM_Override:0000000000000000 $t
     /tmp/ccQYv0hE.s:27     .text.OC4_PWM_Override:0000000000000000 OC4_PWM_Override
     /tmp/ccQYv0hE.s:81     .text.OC4_PWM_Override:0000000000000030 $d
     /tmp/ccQYv0hE.s:87     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccQYv0hE.s:95     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccQYv0hE.s:368    .text.MX_TIM1_Init:0000000000000118 $d
     /tmp/ccQYv0hE.s:380    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccQYv0hE.s:388    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccQYv0hE.s:540    .text.MX_TIM2_Init:0000000000000084 $d
     /tmp/ccQYv0hE.s:545    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccQYv0hE.s:553    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccQYv0hE.s:665    .text.MX_TIM3_Init:0000000000000068 $d
     /tmp/ccQYv0hE.s:675    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccQYv0hE.s:683    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccQYv0hE.s:795    .text.MX_TIM4_Init:0000000000000068 $d
     /tmp/ccQYv0hE.s:805    .text.MX_TIM8_Init:0000000000000000 $t
     /tmp/ccQYv0hE.s:813    .text.MX_TIM8_Init:0000000000000000 MX_TIM8_Init
     /tmp/ccQYv0hE.s:1016   .text.MX_TIM8_Init:00000000000000d0 $d
     /tmp/ccQYv0hE.s:1030   .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccQYv0hE.s:1038   .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccQYv0hE.s:1087   .text.MX_TIM15_Init:0000000000000028 $d
     /tmp/ccQYv0hE.s:1093   .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1101   .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccQYv0hE.s:1204   .text.HAL_TIM_Base_MspInit:0000000000000054 $d
     /tmp/ccQYv0hE.s:1211   .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1219   .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccQYv0hE.s:1330   .text.HAL_TIM_PWM_MspInit:0000000000000064 $d
     /tmp/ccQYv0hE.s:1336   .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1344   .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccQYv0hE.s:1432   .text.HAL_TIM_Encoder_MspInit:0000000000000044 $d
     /tmp/ccQYv0hE.s:1439   .text.HAL_TIM_IC_MspInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1447   .text.HAL_TIM_IC_MspInit:0000000000000000 HAL_TIM_IC_MspInit
     /tmp/ccQYv0hE.s:1464   .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1472   .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccQYv0hE.s:1483   .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1491   .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccQYv0hE.s:1538   .text.HAL_TIM_Base_MspDeInit:0000000000000030 $d
     /tmp/ccQYv0hE.s:1544   .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1552   .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccQYv0hE.s:1591   .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d
     /tmp/ccQYv0hE.s:1597   .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1605   .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccQYv0hE.s:1646   .text.HAL_TIM_Encoder_MspDeInit:000000000000002c $d
     /tmp/ccQYv0hE.s:1652   .text.HAL_TIM_IC_MspDeInit:0000000000000000 $t
     /tmp/ccQYv0hE.s:1660   .text.HAL_TIM_IC_MspDeInit:0000000000000000 HAL_TIM_IC_MspDeInit
     /tmp/ccQYv0hE.s:1688   .bss.htim15:0000000000000000 htim15
     /tmp/ccQYv0hE.s:1716   .bss.htim8:0000000000000000 htim8
     /tmp/ccQYv0hE.s:1709   .bss.htim4:0000000000000000 htim4
     /tmp/ccQYv0hE.s:1702   .bss.htim3:0000000000000000 htim3
     /tmp/ccQYv0hE.s:1695   .bss.htim2:0000000000000000 htim2
     /tmp/ccQYv0hE.s:1681   .bss.htim1:0000000000000000 htim1
     /tmp/ccQYv0hE.s:1677   .bss.htim1:0000000000000000 $d
     /tmp/ccQYv0hE.s:1684   .bss.htim15:0000000000000000 $d
     /tmp/ccQYv0hE.s:1691   .bss.htim2:0000000000000000 $d
     /tmp/ccQYv0hE.s:1698   .bss.htim3:0000000000000000 $d
ARM GAS  /tmp/ccQYv0hE.s 			page 51


     /tmp/ccQYv0hE.s:1705   .bss.htim4:0000000000000000 $d
     /tmp/ccQYv0hE.s:1712   .bss.htim8:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_OC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_TIM_Encoder_Init
HAL_NVIC_SetPriority
HAL_NVIC_DisableIRQ
