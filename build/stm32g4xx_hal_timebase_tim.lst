ARM GAS  /tmp/ccvDaYNH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32g4xx_hal_timebase_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	htim6
  18              		.section	.bss.htim6,"aw",%nobits
  19              		.align	2
  22              	htim6:
  23 0000 00000000 		.space	76
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.text.HAL_InitTick,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_InitTick
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	HAL_InitTick:
  34              	.LFB132:
  35              		.file 1 "Src/stm32g4xx_hal_timebase_tim.c"
   1:Src/stm32g4xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g4xx_hal_timebase_tim.c **** /**
   3:Src/stm32g4xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Src/stm32g4xx_hal_timebase_tim.c ****   * @file    stm32g4xx_hal_timebase_tim.c
   5:Src/stm32g4xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Src/stm32g4xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Src/stm32g4xx_hal_timebase_tim.c ****   * @attention
   8:Src/stm32g4xx_hal_timebase_tim.c ****   *
   9:Src/stm32g4xx_hal_timebase_tim.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Src/stm32g4xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Src/stm32g4xx_hal_timebase_tim.c ****   *
  12:Src/stm32g4xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32g4xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Src/stm32g4xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32g4xx_hal_timebase_tim.c ****   *
  16:Src/stm32g4xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Src/stm32g4xx_hal_timebase_tim.c ****   */
  18:Src/stm32g4xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Src/stm32g4xx_hal_timebase_tim.c **** 
  20:Src/stm32g4xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32g4xx_hal_timebase_tim.c **** #include "stm32g4xx_hal.h"
ARM GAS  /tmp/ccvDaYNH.s 			page 2


  22:Src/stm32g4xx_hal_timebase_tim.c **** #include "stm32g4xx_hal_tim.h"
  23:Src/stm32g4xx_hal_timebase_tim.c **** 
  24:Src/stm32g4xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Src/stm32g4xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Src/stm32g4xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Src/stm32g4xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Src/stm32g4xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim6;
  29:Src/stm32g4xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Src/stm32g4xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  31:Src/stm32g4xx_hal_timebase_tim.c **** 
  32:Src/stm32g4xx_hal_timebase_tim.c **** /**
  33:Src/stm32g4xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM6 as a time base source.
  34:Src/stm32g4xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Src/stm32g4xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Src/stm32g4xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Src/stm32g4xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Src/stm32g4xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Src/stm32g4xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Src/stm32g4xx_hal_timebase_tim.c ****   */
  41:Src/stm32g4xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Src/stm32g4xx_hal_timebase_tim.c **** {
  36              		.loc 1 42 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 48
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 8CB0     		sub	sp, sp, #48
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 56
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  43:Src/stm32g4xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  44:Src/stm32g4xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  52              		.loc 1 44 25
  53 0008 0023     		movs	r3, #0
  54 000a BB62     		str	r3, [r7, #40]
  45:Src/stm32g4xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  55              		.loc 1 45 25
  56 000c 0023     		movs	r3, #0
  57 000e 7B62     		str	r3, [r7, #36]
  58              	.LBB2:
  46:Src/stm32g4xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  47:Src/stm32g4xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status;
  48:Src/stm32g4xx_hal_timebase_tim.c **** 
  49:Src/stm32g4xx_hal_timebase_tim.c ****   /* Enable TIM6 clock */
  50:Src/stm32g4xx_hal_timebase_tim.c ****   __HAL_RCC_TIM6_CLK_ENABLE();
  59              		.loc 1 50 3
  60 0010 2C4B     		ldr	r3, .L5
  61 0012 9B6D     		ldr	r3, [r3, #88]
  62 0014 2B4A     		ldr	r2, .L5
  63 0016 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/ccvDaYNH.s 			page 3


  64 001a 9365     		str	r3, [r2, #88]
  65 001c 294B     		ldr	r3, .L5
  66 001e 9B6D     		ldr	r3, [r3, #88]
  67 0020 03F01003 		and	r3, r3, #16
  68 0024 BB60     		str	r3, [r7, #8]
  69 0026 BB68     		ldr	r3, [r7, #8]
  70              	.LBE2:
  51:Src/stm32g4xx_hal_timebase_tim.c **** 
  52:Src/stm32g4xx_hal_timebase_tim.c ****   /* Get clock configuration */
  53:Src/stm32g4xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  71              		.loc 1 53 3
  72 0028 07F10C02 		add	r2, r7, #12
  73 002c 07F11003 		add	r3, r7, #16
  74 0030 1146     		mov	r1, r2
  75 0032 1846     		mov	r0, r3
  76 0034 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  54:Src/stm32g4xx_hal_timebase_tim.c **** 
  55:Src/stm32g4xx_hal_timebase_tim.c ****   /* Compute TIM6 clock */
  56:Src/stm32g4xx_hal_timebase_tim.c ****   uwTimclock = HAL_RCC_GetPCLK1Freq();
  77              		.loc 1 56 16
  78 0038 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  79 003c B862     		str	r0, [r7, #40]
  57:Src/stm32g4xx_hal_timebase_tim.c **** 
  58:Src/stm32g4xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  59:Src/stm32g4xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  80              		.loc 1 59 46
  81 003e BB6A     		ldr	r3, [r7, #40]
  82 0040 214A     		ldr	r2, .L5+4
  83 0042 A2FB0323 		umull	r2, r3, r2, r3
  84 0046 9B0C     		lsrs	r3, r3, #18
  85              		.loc 1 59 20
  86 0048 013B     		subs	r3, r3, #1
  87 004a 7B62     		str	r3, [r7, #36]
  60:Src/stm32g4xx_hal_timebase_tim.c **** 
  61:Src/stm32g4xx_hal_timebase_tim.c ****   /* Initialize TIM6 */
  62:Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Instance = TIM6;
  88              		.loc 1 62 18
  89 004c 1F4B     		ldr	r3, .L5+8
  90 004e 204A     		ldr	r2, .L5+12
  91 0050 1A60     		str	r2, [r3]
  63:Src/stm32g4xx_hal_timebase_tim.c **** 
  64:Src/stm32g4xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  65:Src/stm32g4xx_hal_timebase_tim.c **** 
  66:Src/stm32g4xx_hal_timebase_tim.c ****   + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  67:Src/stm32g4xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  68:Src/stm32g4xx_hal_timebase_tim.c ****   + ClockDivision = 0
  69:Src/stm32g4xx_hal_timebase_tim.c ****   + Counter direction = Up
  70:Src/stm32g4xx_hal_timebase_tim.c ****   */
  71:Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.Period = (1000000U / 1000U) - 1U;
  92              		.loc 1 71 21
  93 0052 1E4B     		ldr	r3, .L5+8
  94 0054 40F2E732 		movw	r2, #999
  95 0058 DA60     		str	r2, [r3, #12]
  72:Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.Prescaler = uwPrescalerValue;
  96              		.loc 1 72 24
  97 005a 1C4A     		ldr	r2, .L5+8
  98 005c 7B6A     		ldr	r3, [r7, #36]
ARM GAS  /tmp/ccvDaYNH.s 			page 4


  99 005e 5360     		str	r3, [r2, #4]
  73:Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.ClockDivision = 0;
 100              		.loc 1 73 28
 101 0060 1A4B     		ldr	r3, .L5+8
 102 0062 0022     		movs	r2, #0
 103 0064 1A61     		str	r2, [r3, #16]
  74:Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 104              		.loc 1 74 26
 105 0066 194B     		ldr	r3, .L5+8
 106 0068 0022     		movs	r2, #0
 107 006a 9A60     		str	r2, [r3, #8]
  75:Src/stm32g4xx_hal_timebase_tim.c **** 
  76:Src/stm32g4xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim6);
 108              		.loc 1 76 12
 109 006c 1748     		ldr	r0, .L5+8
 110 006e FFF7FEFF 		bl	HAL_TIM_Base_Init
 111 0072 0346     		mov	r3, r0
 112 0074 87F82F30 		strb	r3, [r7, #47]
  77:Src/stm32g4xx_hal_timebase_tim.c ****   if (status == HAL_OK)
 113              		.loc 1 77 6
 114 0078 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 115 007c 002B     		cmp	r3, #0
 116 007e 1BD1     		bne	.L2
  78:Src/stm32g4xx_hal_timebase_tim.c ****   {
  79:Src/stm32g4xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  80:Src/stm32g4xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim6);
 117              		.loc 1 80 14
 118 0080 1248     		ldr	r0, .L5+8
 119 0082 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 120 0086 0346     		mov	r3, r0
 121 0088 87F82F30 		strb	r3, [r7, #47]
  81:Src/stm32g4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 122              		.loc 1 81 8
 123 008c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 124 0090 002B     		cmp	r3, #0
 125 0092 11D1     		bne	.L2
  82:Src/stm32g4xx_hal_timebase_tim.c ****     {
  83:Src/stm32g4xx_hal_timebase_tim.c ****     /* Enable the TIM6 global Interrupt */
  84:Src/stm32g4xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 126              		.loc 1 84 9
 127 0094 3620     		movs	r0, #54
 128 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  85:Src/stm32g4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  86:Src/stm32g4xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 129              		.loc 1 86 10
 130 009a 7B68     		ldr	r3, [r7, #4]
 131 009c 0F2B     		cmp	r3, #15
 132 009e 08D8     		bhi	.L3
  87:Src/stm32g4xx_hal_timebase_tim.c ****       {
  88:Src/stm32g4xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
  89:Src/stm32g4xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 133              		.loc 1 89 9
 134 00a0 0022     		movs	r2, #0
 135 00a2 7968     		ldr	r1, [r7, #4]
 136 00a4 3620     		movs	r0, #54
 137 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  90:Src/stm32g4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
ARM GAS  /tmp/ccvDaYNH.s 			page 5


 138              		.loc 1 90 20
 139 00aa 0A4A     		ldr	r2, .L5+16
 140 00ac 7B68     		ldr	r3, [r7, #4]
 141 00ae 1360     		str	r3, [r2]
 142 00b0 02E0     		b	.L2
 143              	.L3:
  91:Src/stm32g4xx_hal_timebase_tim.c ****       }
  92:Src/stm32g4xx_hal_timebase_tim.c ****       else
  93:Src/stm32g4xx_hal_timebase_tim.c ****       {
  94:Src/stm32g4xx_hal_timebase_tim.c ****         status = HAL_ERROR;
 144              		.loc 1 94 16
 145 00b2 0123     		movs	r3, #1
 146 00b4 87F82F30 		strb	r3, [r7, #47]
 147              	.L2:
  95:Src/stm32g4xx_hal_timebase_tim.c ****       }
  96:Src/stm32g4xx_hal_timebase_tim.c ****     }
  97:Src/stm32g4xx_hal_timebase_tim.c ****   }
  98:Src/stm32g4xx_hal_timebase_tim.c **** 
  99:Src/stm32g4xx_hal_timebase_tim.c ****  /* Return function status */
 100:Src/stm32g4xx_hal_timebase_tim.c ****   return status;
 148              		.loc 1 100 10
 149 00b8 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 101:Src/stm32g4xx_hal_timebase_tim.c **** }
 150              		.loc 1 101 1
 151 00bc 1846     		mov	r0, r3
 152 00be 3037     		adds	r7, r7, #48
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155 00c0 BD46     		mov	sp, r7
 156              	.LCFI4:
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 00c2 80BD     		pop	{r7, pc}
 160              	.L6:
 161              		.align	2
 162              	.L5:
 163 00c4 00100240 		.word	1073876992
 164 00c8 83DE1B43 		.word	1125899907
 165 00cc 00000000 		.word	htim6
 166 00d0 00100040 		.word	1073745920
 167 00d4 00000000 		.word	uwTickPrio
 168              		.cfi_endproc
 169              	.LFE132:
 171              		.section	.text.HAL_SuspendTick,"ax",%progbits
 172              		.align	1
 173              		.global	HAL_SuspendTick
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	HAL_SuspendTick:
 180              	.LFB133:
 102:Src/stm32g4xx_hal_timebase_tim.c **** 
 103:Src/stm32g4xx_hal_timebase_tim.c **** /**
 104:Src/stm32g4xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 105:Src/stm32g4xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM6 update interrupt.
 106:Src/stm32g4xx_hal_timebase_tim.c ****   * @param  None
ARM GAS  /tmp/ccvDaYNH.s 			page 6


 107:Src/stm32g4xx_hal_timebase_tim.c ****   * @retval None
 108:Src/stm32g4xx_hal_timebase_tim.c ****   */
 109:Src/stm32g4xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 110:Src/stm32g4xx_hal_timebase_tim.c **** {
 181              		.loc 1 110 1
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186 0000 80B4     		push	{r7}
 187              	.LCFI5:
 188              		.cfi_def_cfa_offset 4
 189              		.cfi_offset 7, -4
 190 0002 00AF     		add	r7, sp, #0
 191              	.LCFI6:
 192              		.cfi_def_cfa_register 7
 111:Src/stm32g4xx_hal_timebase_tim.c ****   /* Disable TIM6 update Interrupt */
 112:Src/stm32g4xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim6, TIM_IT_UPDATE);
 193              		.loc 1 112 3
 194 0004 064B     		ldr	r3, .L8
 195 0006 1B68     		ldr	r3, [r3]
 196 0008 DA68     		ldr	r2, [r3, #12]
 197 000a 054B     		ldr	r3, .L8
 198 000c 1B68     		ldr	r3, [r3]
 199 000e 22F00102 		bic	r2, r2, #1
 200 0012 DA60     		str	r2, [r3, #12]
 113:Src/stm32g4xx_hal_timebase_tim.c **** }
 201              		.loc 1 113 1
 202 0014 00BF     		nop
 203 0016 BD46     		mov	sp, r7
 204              	.LCFI7:
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0018 5DF8047B 		ldr	r7, [sp], #4
 208              	.LCFI8:
 209              		.cfi_restore 7
 210              		.cfi_def_cfa_offset 0
 211 001c 7047     		bx	lr
 212              	.L9:
 213 001e 00BF     		.align	2
 214              	.L8:
 215 0020 00000000 		.word	htim6
 216              		.cfi_endproc
 217              	.LFE133:
 219              		.section	.text.HAL_ResumeTick,"ax",%progbits
 220              		.align	1
 221              		.global	HAL_ResumeTick
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	HAL_ResumeTick:
 228              	.LFB134:
 114:Src/stm32g4xx_hal_timebase_tim.c **** 
 115:Src/stm32g4xx_hal_timebase_tim.c **** /**
 116:Src/stm32g4xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 117:Src/stm32g4xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM6 update interrupt.
ARM GAS  /tmp/ccvDaYNH.s 			page 7


 118:Src/stm32g4xx_hal_timebase_tim.c ****   * @param  None
 119:Src/stm32g4xx_hal_timebase_tim.c ****   * @retval None
 120:Src/stm32g4xx_hal_timebase_tim.c ****   */
 121:Src/stm32g4xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 122:Src/stm32g4xx_hal_timebase_tim.c **** {
 229              		.loc 1 122 1
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 0000 80B4     		push	{r7}
 235              	.LCFI9:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 00AF     		add	r7, sp, #0
 239              	.LCFI10:
 240              		.cfi_def_cfa_register 7
 123:Src/stm32g4xx_hal_timebase_tim.c ****   /* Enable TIM6 Update interrupt */
 124:Src/stm32g4xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim6, TIM_IT_UPDATE);
 241              		.loc 1 124 3
 242 0004 064B     		ldr	r3, .L11
 243 0006 1B68     		ldr	r3, [r3]
 244 0008 DA68     		ldr	r2, [r3, #12]
 245 000a 054B     		ldr	r3, .L11
 246 000c 1B68     		ldr	r3, [r3]
 247 000e 42F00102 		orr	r2, r2, #1
 248 0012 DA60     		str	r2, [r3, #12]
 125:Src/stm32g4xx_hal_timebase_tim.c **** }
 249              		.loc 1 125 1
 250 0014 00BF     		nop
 251 0016 BD46     		mov	sp, r7
 252              	.LCFI11:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 0018 5DF8047B 		ldr	r7, [sp], #4
 256              	.LCFI12:
 257              		.cfi_restore 7
 258              		.cfi_def_cfa_offset 0
 259 001c 7047     		bx	lr
 260              	.L12:
 261 001e 00BF     		.align	2
 262              	.L11:
 263 0020 00000000 		.word	htim6
 264              		.cfi_endproc
 265              	.LFE134:
 267              		.text
 268              	.Letext0:
 269              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 270              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 271              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 272              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 273              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 274              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 275              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 276              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccvDaYNH.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_timebase_tim.c
     /tmp/ccvDaYNH.s:22     .bss.htim6:0000000000000000 htim6
     /tmp/ccvDaYNH.s:19     .bss.htim6:0000000000000000 $d
     /tmp/ccvDaYNH.s:25     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccvDaYNH.s:33     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccvDaYNH.s:163    .text.HAL_InitTick:00000000000000c4 $d
     /tmp/ccvDaYNH.s:172    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccvDaYNH.s:179    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccvDaYNH.s:215    .text.HAL_SuspendTick:0000000000000020 $d
     /tmp/ccvDaYNH.s:220    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccvDaYNH.s:227    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccvDaYNH.s:263    .text.HAL_ResumeTick:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
