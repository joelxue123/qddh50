ARM GAS  /tmp/cckYcgKs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"interface_can.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata._ZN6__pstl9execution2v1L3seqE,"a"
  18              		.align	2
  21              	_ZN6__pstl9execution2v1L3seqE:
  22 0000 00       		.space	1
  23              		.section	.rodata._ZN6__pstl9execution2v1L3parE,"a"
  24              		.align	2
  27              	_ZN6__pstl9execution2v1L3parE:
  28 0000 00       		.space	1
  29              		.section	.rodata._ZN6__pstl9execution2v1L9par_unseqE,"a"
  30              		.align	2
  33              	_ZN6__pstl9execution2v1L9par_unseqE:
  34 0000 00       		.space	1
  35              		.section	.rodata._ZN6__pstl9execution2v1L5unseqE,"a"
  36              		.align	2
  39              	_ZN6__pstl9execution2v1L5unseqE:
  40 0000 00       		.space	1
  41              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
  42              		.align	1
  43              		.arch armv7e-m
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZL20__gthread_key_deletei:
  50              	.LFB2573:
  51              		.file 1 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-e
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Compile this one with gcc.  */
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** This file is part of GCC.
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** version.
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** for more details.
ARM GAS  /tmp/cckYcgKs.s 			page 2


  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_key_t;
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_once_t;
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_mutex_t;
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #ifdef _LIBOBJC
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Thread local storage for a single thread */
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static void *thread_local_storage = NULL;
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend initialization functions */
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Initialize the threads subsystem.  */
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Close the threads subsystem.  */
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend thread functions */
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Create a new thread of execution.  */
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline objc_thread_t
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
ARM GAS  /tmp/cckYcgKs.s 			page 3


  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return NULL;
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Set the current thread's priority.  */
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Return the current thread's priority.  */
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Yield our process time to another thread.  */
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline void
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_yield (void)
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return;
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Terminate the current thread.  */
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_exit (void)
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support available */
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* Should we really exit the program */
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return -1;
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline objc_thread_t
 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_id (void)
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* No thread support, use 1.  */
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return (objc_thread_t) 1;
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   thread_local_storage = value;
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline void *
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return thread_local_storage;
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
ARM GAS  /tmp/cckYcgKs.s 			page 4


 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend mutex functions */
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Allocate a mutex.  */
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Deallocate a mutex.  */
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Grab a lock on a mutex.  */
 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Unlock the mutex */
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Backend condition mutex functions */
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Allocate a condition.  */
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Deallocate a condition.  */
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Wait on the condition */
ARM GAS  /tmp/cckYcgKs.s 			page 5


 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** #else /* _LIBOBJC */
 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_active_p (void)
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** 
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** static int _GLIBCXX_UNUSED
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** {
  52              		.loc 1 230 1
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 80B4     		push	{r7}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 83B0     		sub	sp, sp, #12
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 16
  64 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cckYcgKs.s 			page 6


  65              	.LCFI2:
  66              		.cfi_def_cfa_register 7
  67 0006 7860     		str	r0, [r7, #4]
 231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h ****   return 0;
  68              		.loc 1 231 10
  69 0008 0023     		movs	r3, #0
 232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/gthr-default.h **** }
  70              		.loc 1 232 1
  71 000a 1846     		mov	r0, r3
  72 000c 0C37     		adds	r7, r7, #12
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75 000e BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0010 5DF8047B 		ldr	r7, [sp], #4
  80              	.LCFI5:
  81              		.cfi_restore 7
  82              		.cfi_def_cfa_offset 0
  83 0014 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE2573:
  87              		.section	.rodata._ZL12one_by_sqrt3,"a"
  88              		.align	2
  91              	_ZL12one_by_sqrt3:
  92 0000 3ACD133F 		.word	1058262330
  93              		.section	.rodata._ZL12two_by_sqrt3,"a"
  94              		.align	2
  97              	_ZL12two_by_sqrt3:
  98 0000 3ACD933F 		.word	1066650938
  99              		.section	.rodata._ZL10sqrt3_by_2,"a"
 100              		.align	2
 103              	_ZL10sqrt3_by_2:
 104 0000 D7B35D3F 		.word	1063105495
 105              		.section	.rodata._ZL16OFFSET_TAB_CCMRx,"a"
 106              		.align	2
 109              	_ZL16OFFSET_TAB_CCMRx:
 110 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
 110      04040404 
 110      3838
 111              		.section	.rodata._ZL14SHIFT_TAB_OCxx,"a"
 112              		.align	2
 115              	_ZL14SHIFT_TAB_OCxx:
 116 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
 116      00000800 
 116      0008
 117              		.section	.rodata._ZL14SHIFT_TAB_ICxx,"a"
 118              		.align	2
 121              	_ZL14SHIFT_TAB_ICxx:
 122 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
 122      00000800 
 122      0000
 123              		.section	.rodata._ZL14SHIFT_TAB_CCxP,"a"
 124              		.align	2
 127              	_ZL14SHIFT_TAB_CCxP:
 128 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
ARM GAS  /tmp/cckYcgKs.s 			page 7


 128      080A0C0E 
 128      1014
 129              		.section	.rodata._ZL14SHIFT_TAB_OISx,"a"
 130              		.align	2
 133              	_ZL14SHIFT_TAB_OISx:
 134 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
 134      04050607 
 134      080A
 135              		.section	.rodata._ZL19USART_PRESCALER_TAB,"a"
 136              		.align	2
 139              	_ZL19USART_PRESCALER_TAB:
 140 0000 01000000 		.word	1
 141 0004 02000000 		.word	2
 142 0008 04000000 		.word	4
 143 000c 06000000 		.word	6
 144 0010 08000000 		.word	8
 145 0014 0A000000 		.word	10
 146 0018 0C000000 		.word	12
 147 001c 10000000 		.word	16
 148 0020 20000000 		.word	32
 149 0024 40000000 		.word	64
 150 0028 80000000 		.word	128
 151 002c 00010000 		.word	256
 152              		.section	.rodata._ZL18CHANNEL_OFFSET_TAB,"a"
 153              		.align	2
 156              	_ZL18CHANNEL_OFFSET_TAB:
 157 0000 081C3044 		.ascii	"\010\0340DXl"
 157      586C
 158              		.section	.text._ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef,"ax",%progbits
 159              		.align	1
 160              		.global	_ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	_ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef:
 167              	.LFB5710:
 168              		.file 2 "Src/interface_can.cpp"
   1:Src/interface_can.cpp **** #include "interface_can.hpp"
   2:Src/interface_can.cpp **** 
   3:Src/interface_can.cpp **** #include "crc.hpp"
   4:Src/interface_can.cpp **** #include "freertos_vars.h"
   5:Src/interface_can.cpp **** #include "utils.hpp"
   6:Src/interface_can.cpp **** 
   7:Src/interface_can.cpp **** #include <cmsis_os.h>
   8:Src/interface_can.cpp **** #include "stm32g4xx_hal.h"
   9:Src/interface_can.cpp **** 
  10:Src/interface_can.cpp **** // Specific CAN Protocols
  11:Src/interface_can.cpp **** #include "can_encos.hpp"
  12:Src/interface_can.cpp **** #include "stm32g4xx_hal_fdcan.h"  // Include FDCAN header
  13:Src/interface_can.cpp **** #include "axis.hpp"
  14:Src/interface_can.cpp **** 
  15:Src/interface_can.cpp **** 
  16:Src/interface_can.cpp **** // Safer context handling via maps instead of arrays
  17:Src/interface_can.cpp **** // #include <unordered_map>
  18:Src/interface_can.cpp **** // std::unordered_map<CAN_HandleTypeDef *, ODriveCAN *> ctxMap;
  19:Src/interface_can.cpp **** 
ARM GAS  /tmp/cckYcgKs.s 			page 8


  20:Src/interface_can.cpp **** // Constructor is called by communication.cpp and the handle is assigned appropriately
  21:Src/interface_can.cpp **** ODriveCAN::ODriveCAN(ODriveCAN::Config_t &config, FDCAN_HandleTypeDef *handle)
 169              		.loc 2 21 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 16
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI6:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 85B0     		sub	sp, sp, #20
 179              	.LCFI7:
 180              		.cfi_def_cfa_offset 24
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI8:
 183              		.cfi_def_cfa_register 7
 184 0006 F860     		str	r0, [r7, #12]
 185 0008 B960     		str	r1, [r7, #8]
 186 000a 7A60     		str	r2, [r7, #4]
 187              	.LBB2:
  22:Src/interface_can.cpp ****     : config_{config},
  23:Src/interface_can.cpp ****       handle_{handle} {
 188              		.loc 2 23 21
 189 000c FB68     		ldr	r3, [r7, #12]
 190 000e 4FF48062 		mov	r2, #1024
 191 0012 5A60     		str	r2, [r3, #4]
 192 0014 FB68     		ldr	r3, [r7, #12]
 193 0016 0022     		movs	r2, #0
 194 0018 1A72     		strb	r2, [r3, #8]
 195 001a FB68     		ldr	r3, [r7, #12]
 196 001c 0022     		movs	r2, #0
 197 001e 5A72     		strb	r2, [r3, #9]
 198 0020 FB68     		ldr	r3, [r7, #12]
 199 0022 BA68     		ldr	r2, [r7, #8]
 200 0024 DA60     		str	r2, [r3, #12]
 201 0026 FB68     		ldr	r3, [r7, #12]
 202 0028 7A68     		ldr	r2, [r7, #4]
 203 002a 1A61     		str	r2, [r3, #16]
 204              	.LBE2:
  24:Src/interface_can.cpp ****     // ctxMap[handle_] = this;
  25:Src/interface_can.cpp **** }
 205              		.loc 2 25 1
 206 002c FB68     		ldr	r3, [r7, #12]
 207 002e 1846     		mov	r0, r3
 208 0030 1437     		adds	r7, r7, #20
 209              	.LCFI9:
 210              		.cfi_def_cfa_offset 4
 211 0032 BD46     		mov	sp, r7
 212              	.LCFI10:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0034 5DF8047B 		ldr	r7, [sp], #4
 216              	.LCFI11:
 217              		.cfi_restore 7
 218              		.cfi_def_cfa_offset 0
 219 0038 7047     		bx	lr
ARM GAS  /tmp/cckYcgKs.s 			page 9


 220              		.cfi_endproc
 221              	.LFE5710:
 223              		.global	_ZN9ODriveCANC1ERNS_8Config_tEP19FDCAN_HandleTypeDef
 224              		.thumb_set _ZN9ODriveCANC1ERNS_8Config_tEP19FDCAN_HandleTypeDef,_ZN9ODriveCANC2ERNS_8Config_tEP19F
 225              		.section	.rodata
 226              		.align	2
 227              	.LC0:
 228 0000 00000000 		.word	0
 229 0004 00       		.byte	0
 230 0005 00       		.byte	0
 231 0006 08       		.byte	8
 232 0007 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 232      00000000 
 233 000f 00       		.space	1
 234              		.section	.text._ZN9ODriveCAN17can_server_threadEv,"ax",%progbits
 235              		.align	1
 236              		.global	_ZN9ODriveCAN17can_server_threadEv
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv4-sp-d16
 242              	_ZN9ODriveCAN17can_server_threadEv:
 243              	.LFB5712:
  26:Src/interface_can.cpp **** 
  27:Src/interface_can.cpp **** void ODriveCAN::can_server_thread() {
 244              		.loc 2 27 37
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 32
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 90B5     		push	{r4, r7, lr}
 249              	.LCFI12:
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 89B0     		sub	sp, sp, #36
 255              	.LCFI13:
 256              		.cfi_def_cfa_offset 48
 257 0004 00AF     		add	r7, sp, #0
 258              	.LCFI14:
 259              		.cfi_def_cfa_register 7
 260 0006 7860     		str	r0, [r7, #4]
 261              	.L13:
 262              	.LBB3:
 263              	.LBB4:
  28:Src/interface_can.cpp ****     for (;;) {
  29:Src/interface_can.cpp ****         uint32_t status = HAL_FDCAN_GetError(handle_);
 264              		.loc 2 29 46
 265 0008 7B68     		ldr	r3, [r7, #4]
 266 000a 1B69     		ldr	r3, [r3, #16]
 267              		.loc 2 29 45
 268 000c 1846     		mov	r0, r3
 269 000e FFF7FEFF 		bl	HAL_FDCAN_GetError
 270 0012 F861     		str	r0, [r7, #28]
 271              	.LBB5:
  30:Src/interface_can.cpp ****         if (status == HAL_FDCAN_ERROR_NONE) {
 272              		.loc 2 30 9
ARM GAS  /tmp/cckYcgKs.s 			page 10


 273 0014 FB69     		ldr	r3, [r7, #28]
 274 0016 002B     		cmp	r3, #0
 275 0018 33D1     		bne	.L6
 276              	.LBB6:
  31:Src/interface_can.cpp ****             can_Message_t rxmsg;
 277              		.loc 2 31 27
 278 001a 2E4B     		ldr	r3, .L15
 279 001c 07F10C04 		add	r4, r7, #12
 280 0020 0FCB     		ldm	r3, {r0, r1, r2, r3}
 281 0022 84E80F00 		stm	r4, {r0, r1, r2, r3}
  32:Src/interface_can.cpp **** 
  33:Src/interface_can.cpp ****             // Poll every 10ms regardless of semaphore status
  34:Src/interface_can.cpp ****             osSemaphoreWait(sem_can, 10);  
 282              		.loc 2 34 28
 283 0026 2C4B     		ldr	r3, .L15+4
 284 0028 1B68     		ldr	r3, [r3]
 285 002a 0A21     		movs	r1, #10
 286 002c 1846     		mov	r0, r3
 287 002e FFF7FEFF 		bl	osSemaphoreWait
 288              	.L11:
  35:Src/interface_can.cpp ****             
  36:Src/interface_can.cpp ****             while (available()) {
 289              		.loc 2 36 29
 290 0032 7868     		ldr	r0, [r7, #4]
 291 0034 FFF7FEFF 		bl	_ZN9ODriveCAN9availableEv
 292 0038 0346     		mov	r3, r0
 293 003a 002B     		cmp	r3, #0
 294 003c 14BF     		ite	ne
 295 003e 0123     		movne	r3, #1
 296 0040 0023     		moveq	r3, #0
 297 0042 DBB2     		uxtb	r3, r3
 298 0044 002B     		cmp	r3, #0
 299 0046 14D0     		beq	.L7
  37:Src/interface_can.cpp ****                 read(rxmsg);
 300              		.loc 2 37 21
 301 0048 07F10C03 		add	r3, r7, #12
 302 004c 1946     		mov	r1, r3
 303 004e 7868     		ldr	r0, [r7, #4]
 304 0050 FFF7FEFF 		bl	_ZN9ODriveCAN4readER13can_Message_t
  38:Src/interface_can.cpp ****                 switch (config_.protocol) {
 305              		.loc 2 38 25
 306 0054 7B68     		ldr	r3, [r7, #4]
 307 0056 DB68     		ldr	r3, [r3, #12]
 308              		.loc 2 38 33
 309 0058 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 310              		.loc 2 38 17
 311 005a 002B     		cmp	r3, #0
 312 005c 07D0     		beq	.L14
 313 005e 012B     		cmp	r3, #1
 314 0060 06D1     		bne	.L10
  39:Src/interface_can.cpp ****                     case PROTOCOL_SIMPLE:
  40:Src/interface_can.cpp ****                         break;
  41:Src/interface_can.cpp ****                     case PROTOCOL_ENCOS:
  42:Src/interface_can.cpp ****                         CANEncos::handle_can_message(rxmsg);
 315              		.loc 2 42 53
 316 0062 07F10C03 		add	r3, r7, #12
 317 0066 1846     		mov	r0, r3
ARM GAS  /tmp/cckYcgKs.s 			page 11


 318 0068 FFF7FEFF 		bl	_ZN8CANEncos18handle_can_messageER13can_Message_t
  43:Src/interface_can.cpp ****                         break;
 319              		.loc 2 43 25
 320 006c 00E0     		b	.L10
 321              	.L14:
  40:Src/interface_can.cpp ****                     case PROTOCOL_ENCOS:
 322              		.loc 2 40 25
 323 006e 00BF     		nop
 324              	.L10:
  36:Src/interface_can.cpp ****                 read(rxmsg);
 325              		.loc 2 36 13
 326 0070 DFE7     		b	.L11
 327              	.L7:
  44:Src/interface_can.cpp ****                 }
  45:Src/interface_can.cpp ****             }
  46:Src/interface_can.cpp ****             
  47:Src/interface_can.cpp ****             // Re-enable FDCAN notifications
  48:Src/interface_can.cpp ****             HAL_FDCAN_ActivateNotification(handle_, 
 328              		.loc 2 48 43
 329 0072 7B68     		ldr	r3, [r7, #4]
 330 0074 1B69     		ldr	r3, [r3, #16]
 331 0076 0122     		movs	r2, #1
 332 0078 0121     		movs	r1, #1
 333 007a 1846     		mov	r0, r3
 334 007c FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 335              	.LBE6:
 336 0080 C2E7     		b	.L13
 337              	.L6:
  49:Src/interface_can.cpp ****                 FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 
  50:Src/interface_can.cpp ****                 FDCAN_INTERRUPT_LINE0);
  51:Src/interface_can.cpp ****                 
  52:Src/interface_can.cpp ****         } else {
  53:Src/interface_can.cpp ****             if (status == HAL_FDCAN_ERROR_TIMEOUT) {
 338              		.loc 2 53 13
 339 0082 FB69     		ldr	r3, [r7, #28]
 340 0084 012B     		cmp	r3, #1
 341 0086 BFD1     		bne	.L13
  54:Src/interface_can.cpp ****                 // Reset FDCAN on timeout by stopping and restarting
  55:Src/interface_can.cpp ****                 HAL_FDCAN_Stop(handle_);
 342              		.loc 2 55 31
 343 0088 7B68     		ldr	r3, [r7, #4]
 344 008a 1B69     		ldr	r3, [r3, #16]
 345 008c 1846     		mov	r0, r3
 346 008e FFF7FEFF 		bl	HAL_FDCAN_Stop
  56:Src/interface_can.cpp ****                 
  57:Src/interface_can.cpp ****                 // Clear error flags in ECR register
  58:Src/interface_can.cpp ****                 CLEAR_BIT(handle_->Instance->ECR, (FDCAN_ECR_TEC | FDCAN_ECR_REC));
 347              		.loc 2 58 17
 348 0092 7B68     		ldr	r3, [r7, #4]
 349 0094 1B69     		ldr	r3, [r3, #16]
 350 0096 1B68     		ldr	r3, [r3]
 351 0098 1B6C     		ldr	r3, [r3, #64]
 352 009a 7A68     		ldr	r2, [r7, #4]
 353 009c 1269     		ldr	r2, [r2, #16]
 354 009e 1268     		ldr	r2, [r2]
 355 00a0 23F4FF43 		bic	r3, r3, #32640
 356 00a4 23F07F03 		bic	r3, r3, #127
ARM GAS  /tmp/cckYcgKs.s 			page 12


 357 00a8 1364     		str	r3, [r2, #64]
  59:Src/interface_can.cpp ****                 
  60:Src/interface_can.cpp ****                 // Restart FDCAN
  61:Src/interface_can.cpp ****                 status = HAL_FDCAN_Start(handle_);
 358              		.loc 2 61 41
 359 00aa 7B68     		ldr	r3, [r7, #4]
 360 00ac 1B69     		ldr	r3, [r3, #16]
 361 00ae 1846     		mov	r0, r3
 362 00b0 FFF7FEFF 		bl	HAL_FDCAN_Start
 363 00b4 0346     		mov	r3, r0
 364              		.loc 2 61 24
 365 00b6 FB61     		str	r3, [r7, #28]
  62:Src/interface_can.cpp ****                 if (status == HAL_OK) {
 366              		.loc 2 62 17
 367 00b8 FB69     		ldr	r3, [r7, #28]
 368 00ba 002B     		cmp	r3, #0
 369 00bc A4D1     		bne	.L13
  63:Src/interface_can.cpp ****                     status = HAL_FDCAN_ActivateNotification(handle_,
 370              		.loc 2 63 60
 371 00be 7B68     		ldr	r3, [r7, #4]
 372 00c0 1B69     		ldr	r3, [r3, #16]
 373 00c2 0122     		movs	r2, #1
 374 00c4 0121     		movs	r1, #1
 375 00c6 1846     		mov	r0, r3
 376 00c8 FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 377 00cc 0346     		mov	r3, r0
 378              		.loc 2 63 28
 379 00ce FB61     		str	r3, [r7, #28]
 380              	.LBE5:
 381              	.LBE4:
  64:Src/interface_can.cpp ****                         FDCAN_IT_RX_FIFO0_NEW_MESSAGE,
  65:Src/interface_can.cpp ****                         FDCAN_INTERRUPT_LINE0);
  66:Src/interface_can.cpp ****                 }
  67:Src/interface_can.cpp ****             }
  68:Src/interface_can.cpp ****         }
  69:Src/interface_can.cpp ****     }
 382              		.loc 2 69 5
 383 00d0 9AE7     		b	.L13
 384              	.L16:
 385 00d2 00BF     		.align	2
 386              	.L15:
 387 00d4 00000000 		.word	.LC0
 388 00d8 00000000 		.word	sem_can
 389              	.LBE3:
 390              		.cfi_endproc
 391              	.LFE5712:
 393              		.section	.text._ZL25can_server_thread_wrapperPv,"ax",%progbits
 394              		.align	1
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	_ZL25can_server_thread_wrapperPv:
 401              	.LFB5716:
  70:Src/interface_can.cpp **** }
  71:Src/interface_can.cpp **** 
  72:Src/interface_can.cpp ****  
ARM GAS  /tmp/cckYcgKs.s 			page 13


  73:Src/interface_can.cpp **** 
  74:Src/interface_can.cpp **** static void can_server_thread_wrapper(void *ctx) {
 402              		.loc 2 74 50
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406 0000 80B5     		push	{r7, lr}
 407              	.LCFI15:
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 82B0     		sub	sp, sp, #8
 412              	.LCFI16:
 413              		.cfi_def_cfa_offset 16
 414 0004 00AF     		add	r7, sp, #0
 415              	.LCFI17:
 416              		.cfi_def_cfa_register 7
 417 0006 7860     		str	r0, [r7, #4]
  75:Src/interface_can.cpp ****     reinterpret_cast<ODriveCAN *>(ctx)->can_server_thread();
 418              		.loc 2 75 58
 419 0008 7868     		ldr	r0, [r7, #4]
 420 000a FFF7FEFF 		bl	_ZN9ODriveCAN17can_server_threadEv
  76:Src/interface_can.cpp ****     reinterpret_cast<ODriveCAN *>(ctx)->thread_id_valid_ = false;
 421              		.loc 2 76 58
 422 000e 7B68     		ldr	r3, [r7, #4]
 423 0010 0022     		movs	r2, #0
 424 0012 5A72     		strb	r2, [r3, #9]
  77:Src/interface_can.cpp **** }
 425              		.loc 2 77 1
 426 0014 00BF     		nop
 427 0016 0837     		adds	r7, r7, #8
 428              	.LCFI18:
 429              		.cfi_def_cfa_offset 8
 430 0018 BD46     		mov	sp, r7
 431              	.LCFI19:
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 001a 80BD     		pop	{r7, pc}
 435              		.cfi_endproc
 436              	.LFE5716:
 438              		.section	.rodata
 439              		.align	2
 440              	.LC1:
 441 0010 63616E5F 		.ascii	"can_server\000"
 441      73657276 
 441      657200
 442              		.section	.text._ZN9ODriveCAN16start_can_serverEv,"ax",%progbits
 443              		.align	1
 444              		.global	_ZN9ODriveCAN16start_can_serverEv
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	_ZN9ODriveCAN16start_can_serverEv:
 451              	.LFB5717:
  78:Src/interface_can.cpp **** 
  79:Src/interface_can.cpp **** bool ODriveCAN::start_can_server() {
ARM GAS  /tmp/cckYcgKs.s 			page 14


 452              		.loc 2 79 36
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 32
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              	.LCFI20:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 8AB0     		sub	sp, sp, #40
 462              	.LCFI21:
 463              		.cfi_def_cfa_offset 48
 464 0004 02AF     		add	r7, sp, #8
 465              	.LCFI22:
 466              		.cfi_def_cfa 7, 40
 467 0006 7860     		str	r0, [r7, #4]
  80:Src/interface_can.cpp ****     HAL_StatusTypeDef status;
  81:Src/interface_can.cpp **** 
  82:Src/interface_can.cpp ****     // Set initial baud rate
  83:Src/interface_can.cpp ****     set_baud_rate(config_.baud_rate);
 468              		.loc 2 83 19
 469 0008 7B68     		ldr	r3, [r7, #4]
 470 000a DB68     		ldr	r3, [r3, #12]
 471              		.loc 2 83 18
 472 000c 1B68     		ldr	r3, [r3]
 473 000e 1946     		mov	r1, r3
 474 0010 7868     		ldr	r0, [r7, #4]
 475 0012 FFF7FEFF 		bl	_ZN9ODriveCAN13set_baud_rateEm
  84:Src/interface_can.cpp **** 
  85:Src/interface_can.cpp ****     // Initialize FDCAN with current configuration
  86:Src/interface_can.cpp ****     status = HAL_FDCAN_Init(handle_);
 476              		.loc 2 86 28
 477 0016 7B68     		ldr	r3, [r7, #4]
 478 0018 1B69     		ldr	r3, [r3, #16]
 479 001a 1846     		mov	r0, r3
 480 001c FFF7FEFF 		bl	HAL_FDCAN_Init
 481 0020 0346     		mov	r3, r0
 482 0022 FB77     		strb	r3, [r7, #31]
  87:Src/interface_can.cpp ****     if (status != HAL_OK) {
 483              		.loc 2 87 5
 484 0024 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 485 0026 002B     		cmp	r3, #0
 486 0028 01D0     		beq	.L19
  88:Src/interface_can.cpp ****         return false;
 487              		.loc 2 88 16
 488 002a 0023     		movs	r3, #0
 489 002c 43E0     		b	.L23
 490              	.L19:
  89:Src/interface_can.cpp ****     }
  90:Src/interface_can.cpp **** 
  91:Src/interface_can.cpp ****     // Configure FDCAN global filter
  92:Src/interface_can.cpp ****     HAL_FDCAN_ConfigGlobalFilter(handle_,
 491              		.loc 2 92 33
 492 002e 7B68     		ldr	r3, [r7, #4]
 493 0030 1869     		ldr	r0, [r3, #16]
 494 0032 0323     		movs	r3, #3
 495 0034 0093     		str	r3, [sp]
ARM GAS  /tmp/cckYcgKs.s 			page 15


 496 0036 0023     		movs	r3, #0
 497 0038 0022     		movs	r2, #0
 498 003a 0021     		movs	r1, #0
 499 003c FFF7FEFF 		bl	HAL_FDCAN_ConfigGlobalFilter
  93:Src/interface_can.cpp ****                                 FDCAN_ACCEPT_IN_RX_FIFO0,
  94:Src/interface_can.cpp ****                                 FDCAN_ACCEPT_IN_RX_FIFO0,
  95:Src/interface_can.cpp ****                                 FDCAN_FILTER_REMOTE,
  96:Src/interface_can.cpp ****                                 FDCAN_FILTER_REJECT);
  97:Src/interface_can.cpp **** 
  98:Src/interface_can.cpp ****     // Start FDCAN peripheral
  99:Src/interface_can.cpp ****     status = HAL_FDCAN_Start(handle_);
 500              		.loc 2 99 29
 501 0040 7B68     		ldr	r3, [r7, #4]
 502 0042 1B69     		ldr	r3, [r3, #16]
 503 0044 1846     		mov	r0, r3
 504 0046 FFF7FEFF 		bl	HAL_FDCAN_Start
 505 004a 0346     		mov	r3, r0
 506 004c FB77     		strb	r3, [r7, #31]
 100:Src/interface_can.cpp ****     if (status != HAL_OK) {
 507              		.loc 2 100 5
 508 004e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 509 0050 002B     		cmp	r3, #0
 510 0052 01D0     		beq	.L21
 101:Src/interface_can.cpp ****         return false;
 511              		.loc 2 101 16
 512 0054 0023     		movs	r3, #0
 513 0056 2EE0     		b	.L23
 514              	.L21:
 102:Src/interface_can.cpp ****     }
 103:Src/interface_can.cpp **** 
 104:Src/interface_can.cpp ****     // Enable FDCAN notifications
 105:Src/interface_can.cpp ****     status = HAL_FDCAN_ActivateNotification(handle_,
 515              		.loc 2 105 44
 516 0058 7B68     		ldr	r3, [r7, #4]
 517 005a 1B69     		ldr	r3, [r3, #16]
 518 005c 0122     		movs	r2, #1
 519 005e 1849     		ldr	r1, .L24
 520 0060 1846     		mov	r0, r3
 521 0062 FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 522 0066 0346     		mov	r3, r0
 523 0068 FB77     		strb	r3, [r7, #31]
 106:Src/interface_can.cpp ****         FDCAN_IT_RX_FIFO0_NEW_MESSAGE | 
 107:Src/interface_can.cpp ****         FDCAN_IT_RX_FIFO0_FULL | 
 108:Src/interface_can.cpp ****         FDCAN_IT_ERROR_WARNING,
 109:Src/interface_can.cpp ****         FDCAN_INTERRUPT_LINE0);
 110:Src/interface_can.cpp ****     
 111:Src/interface_can.cpp ****     if (status != HAL_OK) {
 524              		.loc 2 111 5
 525 006a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 526 006c 002B     		cmp	r3, #0
 527 006e 01D0     		beq	.L22
 112:Src/interface_can.cpp ****         return false;
 528              		.loc 2 112 16
 529 0070 0023     		movs	r3, #0
 530 0072 20E0     		b	.L23
 531              	.L22:
 113:Src/interface_can.cpp ****     }
ARM GAS  /tmp/cckYcgKs.s 			page 16


 114:Src/interface_can.cpp **** 
 115:Src/interface_can.cpp ****     // Create CAN server thread using CMSIS-RTOS v1
 116:Src/interface_can.cpp ****     osThreadDef_t thread_def;
 117:Src/interface_can.cpp ****     thread_def.name = "can_server";
 532              		.loc 2 117 21
 533 0074 134B     		ldr	r3, .L24+4
 534 0076 BB60     		str	r3, [r7, #8]
 118:Src/interface_can.cpp ****     thread_def.pthread = (os_pthread)can_server_thread_wrapper;
 535              		.loc 2 118 24
 536 0078 134B     		ldr	r3, .L24+8
 537 007a FB60     		str	r3, [r7, #12]
 119:Src/interface_can.cpp ****     thread_def.tpriority = osPriorityRealtime;
 538              		.loc 2 119 26
 539 007c 0323     		movs	r3, #3
 540 007e 3B82     		strh	r3, [r7, #16]	@ movhi
 120:Src/interface_can.cpp ****     thread_def.instances = 0;
 541              		.loc 2 120 26
 542 0080 0023     		movs	r3, #0
 543 0082 7B61     		str	r3, [r7, #20]
 121:Src/interface_can.cpp ****     thread_def.stacksize = stack_size_ / sizeof(StackType_t);
 544              		.loc 2 121 28
 545 0084 7B68     		ldr	r3, [r7, #4]
 546 0086 5B68     		ldr	r3, [r3, #4]
 547              		.loc 2 121 40
 548 0088 9B08     		lsrs	r3, r3, #2
 549              		.loc 2 121 26
 550 008a BB61     		str	r3, [r7, #24]
 122:Src/interface_can.cpp **** 
 123:Src/interface_can.cpp ****     thread_id_ = osThreadCreate(&thread_def, this);
 551              		.loc 2 123 32
 552 008c 07F10803 		add	r3, r7, #8
 553 0090 7968     		ldr	r1, [r7, #4]
 554 0092 1846     		mov	r0, r3
 555 0094 FFF7FEFF 		bl	osThreadCreate
 556 0098 0246     		mov	r2, r0
 557              		.loc 2 123 16
 558 009a 7B68     		ldr	r3, [r7, #4]
 559 009c 1A60     		str	r2, [r3]
 124:Src/interface_can.cpp ****     thread_id_valid_ = (thread_id_ != nullptr);
 560              		.loc 2 124 25
 561 009e 7B68     		ldr	r3, [r7, #4]
 562 00a0 1B68     		ldr	r3, [r3]
 563              		.loc 2 124 36
 564 00a2 002B     		cmp	r3, #0
 565 00a4 14BF     		ite	ne
 566 00a6 0123     		movne	r3, #1
 567 00a8 0023     		moveq	r3, #0
 568 00aa DAB2     		uxtb	r2, r3
 569              		.loc 2 124 22
 570 00ac 7B68     		ldr	r3, [r7, #4]
 571 00ae 5A72     		strb	r2, [r3, #9]
 125:Src/interface_can.cpp **** 
 126:Src/interface_can.cpp ****     return thread_id_valid_;
 572              		.loc 2 126 12
 573 00b0 7B68     		ldr	r3, [r7, #4]
 574 00b2 5B7A     		ldrb	r3, [r3, #9]
 575 00b4 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cckYcgKs.s 			page 17


 576              	.L23:
 127:Src/interface_can.cpp **** }
 577              		.loc 2 127 1 discriminator 1
 578 00b6 1846     		mov	r0, r3
 579 00b8 2037     		adds	r7, r7, #32
 580              	.LCFI23:
 581              		.cfi_def_cfa_offset 8
 582 00ba BD46     		mov	sp, r7
 583              	.LCFI24:
 584              		.cfi_def_cfa_register 13
 585              		@ sp needed
 586 00bc 80BD     		pop	{r7, pc}
 587              	.L25:
 588 00be 00BF     		.align	2
 589              	.L24:
 590 00c0 03000400 		.word	262147
 591 00c4 10000000 		.word	.LC1
 592 00c8 00000000 		.word	_ZL25can_server_thread_wrapperPv
 593              		.cfi_endproc
 594              	.LFE5717:
 596              		.section	.text._ZN9ODriveCAN5writeER13can_Message_t,"ax",%progbits
 597              		.align	1
 598              		.global	_ZN9ODriveCAN5writeER13can_Message_t
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv4-sp-d16
 604              	_ZN9ODriveCAN5writeER13can_Message_t:
 605              	.LFB5718:
 128:Src/interface_can.cpp **** 
 129:Src/interface_can.cpp **** // Send a CAN message on the bus
 130:Src/interface_can.cpp **** 
 131:Src/interface_can.cpp **** uint32_t ODriveCAN::write(can_Message_t &txmsg) {
 606              		.loc 2 131 49
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 48
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 80B5     		push	{r7, lr}
 611              	.LCFI25:
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 8CB0     		sub	sp, sp, #48
 616              	.LCFI26:
 617              		.cfi_def_cfa_offset 56
 618 0004 00AF     		add	r7, sp, #0
 619              	.LCFI27:
 620              		.cfi_def_cfa_register 7
 621 0006 7860     		str	r0, [r7, #4]
 622 0008 3960     		str	r1, [r7]
 623              	.LBB7:
 132:Src/interface_can.cpp ****     if (HAL_FDCAN_GetError(handle_) == HAL_FDCAN_ERROR_NONE) {
 624              		.loc 2 132 28
 625 000a 7B68     		ldr	r3, [r7, #4]
 626 000c 1B69     		ldr	r3, [r3, #16]
 627              		.loc 2 132 27
 628 000e 1846     		mov	r0, r3
ARM GAS  /tmp/cckYcgKs.s 			page 18


 629 0010 FFF7FEFF 		bl	HAL_FDCAN_GetError
 630 0014 0346     		mov	r3, r0
 631              		.loc 2 132 37
 632 0016 002B     		cmp	r3, #0
 633 0018 0CBF     		ite	eq
 634 001a 0123     		moveq	r3, #1
 635 001c 0023     		movne	r3, #0
 636 001e DBB2     		uxtb	r3, r3
 637              		.loc 2 132 5
 638 0020 002B     		cmp	r3, #0
 639 0022 45D0     		beq	.L27
 640              	.LBB8:
 133:Src/interface_can.cpp ****         FDCAN_TxHeaderTypeDef header;
 134:Src/interface_can.cpp ****         
 135:Src/interface_can.cpp ****         // Configure message header
 136:Src/interface_can.cpp ****         header.Identifier = txmsg.id;
 641              		.loc 2 136 35
 642 0024 3B68     		ldr	r3, [r7]
 643 0026 1B68     		ldr	r3, [r3]
 644              		.loc 2 136 27
 645 0028 BB60     		str	r3, [r7, #8]
 137:Src/interface_can.cpp ****         header.IdType = txmsg.isExt ? FDCAN_EXTENDED_ID : FDCAN_STANDARD_ID;
 646              		.loc 2 137 31
 647 002a 3B68     		ldr	r3, [r7]
 648 002c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 649              		.loc 2 137 37
 650 002e 002B     		cmp	r3, #0
 651 0030 02D0     		beq	.L28
 652              		.loc 2 137 37 is_stmt 0 discriminator 1
 653 0032 4FF08043 		mov	r3, #1073741824
 654 0036 00E0     		b	.L29
 655              	.L28:
 656              		.loc 2 137 37 discriminator 2
 657 0038 0023     		movs	r3, #0
 658              	.L29:
 659              		.loc 2 137 23 is_stmt 1 discriminator 4
 660 003a FB60     		str	r3, [r7, #12]
 138:Src/interface_can.cpp ****         header.TxFrameType = txmsg.rtr ? FDCAN_REMOTE_FRAME : FDCAN_DATA_FRAME;
 661              		.loc 2 138 36 discriminator 4
 662 003c 3B68     		ldr	r3, [r7]
 663 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 664              		.loc 2 138 40 discriminator 4
 665 0040 002B     		cmp	r3, #0
 666 0042 02D0     		beq	.L30
 667              		.loc 2 138 40 is_stmt 0 discriminator 1
 668 0044 4FF00053 		mov	r3, #536870912
 669 0048 00E0     		b	.L31
 670              	.L30:
 671              		.loc 2 138 40 discriminator 2
 672 004a 0023     		movs	r3, #0
 673              	.L31:
 674              		.loc 2 138 28 is_stmt 1 discriminator 4
 675 004c 3B61     		str	r3, [r7, #16]
 139:Src/interface_can.cpp ****         header.DataLength = txmsg.len << 16;  // FDCAN uses shifted DLC format
 676              		.loc 2 139 35 discriminator 4
 677 004e 3B68     		ldr	r3, [r7]
 678 0050 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cckYcgKs.s 			page 19


 679              		.loc 2 139 39 discriminator 4
 680 0052 1B04     		lsls	r3, r3, #16
 681              		.loc 2 139 27 discriminator 4
 682 0054 7B61     		str	r3, [r7, #20]
 140:Src/interface_can.cpp ****         header.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 683              		.loc 2 140 36 discriminator 4
 684 0056 0023     		movs	r3, #0
 685 0058 BB61     		str	r3, [r7, #24]
 141:Src/interface_can.cpp ****         header.BitRateSwitch = FDCAN_BRS_OFF;
 686              		.loc 2 141 30 discriminator 4
 687 005a 0023     		movs	r3, #0
 688 005c FB61     		str	r3, [r7, #28]
 142:Src/interface_can.cpp ****         header.FDFormat = FDCAN_CLASSIC_CAN;
 689              		.loc 2 142 25 discriminator 4
 690 005e 0023     		movs	r3, #0
 691 0060 3B62     		str	r3, [r7, #32]
 143:Src/interface_can.cpp ****         header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 692              		.loc 2 143 35 discriminator 4
 693 0062 0023     		movs	r3, #0
 694 0064 7B62     		str	r3, [r7, #36]
 144:Src/interface_can.cpp ****         header.MessageMarker = 0;
 695              		.loc 2 144 30 discriminator 4
 696 0066 0023     		movs	r3, #0
 697 0068 BB62     		str	r3, [r7, #40]
 698              	.LBB9:
 145:Src/interface_can.cpp **** 
 146:Src/interface_can.cpp ****         // Add message to transmission FIFO
 147:Src/interface_can.cpp ****         if (HAL_FDCAN_GetTxFifoFreeLevel(handle_) > 0) {
 699              		.loc 2 147 42 discriminator 4
 700 006a 7B68     		ldr	r3, [r7, #4]
 701 006c 1B69     		ldr	r3, [r3, #16]
 702              		.loc 2 147 41 discriminator 4
 703 006e 1846     		mov	r0, r3
 704 0070 FFF7FEFF 		bl	HAL_FDCAN_GetTxFifoFreeLevel
 705 0074 0346     		mov	r3, r0
 706              		.loc 2 147 51 discriminator 4
 707 0076 002B     		cmp	r3, #0
 708 0078 14BF     		ite	ne
 709 007a 0123     		movne	r3, #1
 710 007c 0023     		moveq	r3, #0
 711 007e DBB2     		uxtb	r3, r3
 712              		.loc 2 147 9 discriminator 4
 713 0080 002B     		cmp	r3, #0
 714 0082 13D0     		beq	.L32
 715              	.LBB10:
 148:Src/interface_can.cpp ****             HAL_StatusTypeDef status = HAL_FDCAN_AddMessageToTxFifoQ(handle_, 
 716              		.loc 2 148 69
 717 0084 7B68     		ldr	r3, [r7, #4]
 718 0086 1869     		ldr	r0, [r3, #16]
 149:Src/interface_can.cpp ****                                                                     &header,
 150:Src/interface_can.cpp ****                                                                     txmsg.buf);
 719              		.loc 2 150 75
 720 0088 3B68     		ldr	r3, [r7]
 721 008a DA1D     		adds	r2, r3, #7
 148:Src/interface_can.cpp ****             HAL_StatusTypeDef status = HAL_FDCAN_AddMessageToTxFifoQ(handle_, 
 722              		.loc 2 148 69
 723 008c 07F10803 		add	r3, r7, #8
ARM GAS  /tmp/cckYcgKs.s 			page 20


 724 0090 1946     		mov	r1, r3
 725 0092 FFF7FEFF 		bl	HAL_FDCAN_AddMessageToTxFifoQ
 726 0096 0346     		mov	r3, r0
 727 0098 87F82F30 		strb	r3, [r7, #47]
 151:Src/interface_can.cpp ****             return (status == HAL_OK) ? 1 : 0;
 728              		.loc 2 151 39
 729 009c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 730 00a0 002B     		cmp	r3, #0
 731 00a2 01D1     		bne	.L33
 732              		.loc 2 151 39 is_stmt 0 discriminator 1
 733 00a4 0123     		movs	r3, #1
 734              		.loc 2 151 45 is_stmt 1 discriminator 1
 735 00a6 05E0     		b	.L36
 736              	.L33:
 737              		.loc 2 151 39 discriminator 2
 738 00a8 0023     		movs	r3, #0
 739              		.loc 2 151 45 discriminator 2
 740 00aa 03E0     		b	.L36
 741              	.L32:
 742              	.LBE10:
 743              	.LBE9:
 152:Src/interface_can.cpp ****         }
 153:Src/interface_can.cpp ****         return 0;
 744              		.loc 2 153 16
 745 00ac 0023     		movs	r3, #0
 746 00ae 01E0     		b	.L36
 747              	.L27:
 748              	.LBE8:
 749              	.LBE7:
 154:Src/interface_can.cpp ****     }
 155:Src/interface_can.cpp ****     return -1;
 750              		.loc 2 155 13
 751 00b0 4FF0FF33 		mov	r3, #-1
 752              	.L36:
 156:Src/interface_can.cpp **** }
 753              		.loc 2 156 1 discriminator 1
 754 00b4 1846     		mov	r0, r3
 755 00b6 3037     		adds	r7, r7, #48
 756              	.LCFI28:
 757              		.cfi_def_cfa_offset 8
 758 00b8 BD46     		mov	sp, r7
 759              	.LCFI29:
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 00ba 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE5718:
 766              		.section	.text._ZN9ODriveCAN9availableEv,"ax",%progbits
 767              		.align	1
 768              		.global	_ZN9ODriveCAN9availableEv
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	_ZN9ODriveCAN9availableEv:
 775              	.LFB5719:
 157:Src/interface_can.cpp **** 
ARM GAS  /tmp/cckYcgKs.s 			page 21


 158:Src/interface_can.cpp **** 
 159:Src/interface_can.cpp **** uint32_t ODriveCAN::available() {
 776              		.loc 2 159 33
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 90B5     		push	{r4, r7, lr}
 781              	.LCFI30:
 782              		.cfi_def_cfa_offset 12
 783              		.cfi_offset 4, -12
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 83B0     		sub	sp, sp, #12
 787              	.LCFI31:
 788              		.cfi_def_cfa_offset 24
 789 0004 00AF     		add	r7, sp, #0
 790              	.LCFI32:
 791              		.cfi_def_cfa_register 7
 792 0006 7860     		str	r0, [r7, #4]
 160:Src/interface_can.cpp ****     return (HAL_FDCAN_GetRxFifoFillLevel(handle_, FDCAN_RX_FIFO0) + 
 793              		.loc 2 160 42
 794 0008 7B68     		ldr	r3, [r7, #4]
 795 000a 1B69     		ldr	r3, [r3, #16]
 796              		.loc 2 160 41
 797 000c 4021     		movs	r1, #64
 798 000e 1846     		mov	r0, r3
 799 0010 FFF7FEFF 		bl	HAL_FDCAN_GetRxFifoFillLevel
 800 0014 0446     		mov	r4, r0
 161:Src/interface_can.cpp ****             HAL_FDCAN_GetRxFifoFillLevel(handle_, FDCAN_RX_FIFO1));
 801              		.loc 2 161 42
 802 0016 7B68     		ldr	r3, [r7, #4]
 803 0018 1B69     		ldr	r3, [r3, #16]
 804              		.loc 2 161 41
 805 001a 4121     		movs	r1, #65
 806 001c 1846     		mov	r0, r3
 807 001e FFF7FEFF 		bl	HAL_FDCAN_GetRxFifoFillLevel
 808 0022 0346     		mov	r3, r0
 809              		.loc 2 161 66
 810 0024 2344     		add	r3, r3, r4
 162:Src/interface_can.cpp **** }
 811              		.loc 2 162 1
 812 0026 1846     		mov	r0, r3
 813 0028 0C37     		adds	r7, r7, #12
 814              	.LCFI33:
 815              		.cfi_def_cfa_offset 12
 816 002a BD46     		mov	sp, r7
 817              	.LCFI34:
 818              		.cfi_def_cfa_register 13
 819              		@ sp needed
 820 002c 90BD     		pop	{r4, r7, pc}
 821              		.cfi_endproc
 822              	.LFE5719:
 824              		.section	.text._ZN9ODriveCAN4readER13can_Message_t,"ax",%progbits
 825              		.align	1
 826              		.global	_ZN9ODriveCAN4readER13can_Message_t
 827              		.syntax unified
 828              		.thumb
ARM GAS  /tmp/cckYcgKs.s 			page 22


 829              		.thumb_func
 830              		.fpu fpv4-sp-d16
 832              	_ZN9ODriveCAN4readER13can_Message_t:
 833              	.LFB5720:
 163:Src/interface_can.cpp **** 
 164:Src/interface_can.cpp **** bool ODriveCAN::read(can_Message_t &rxmsg) {
 834              		.loc 2 164 44
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 56
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              	.LCFI35:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 8EB0     		sub	sp, sp, #56
 844              	.LCFI36:
 845              		.cfi_def_cfa_offset 64
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI37:
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 850 0008 3960     		str	r1, [r7]
 165:Src/interface_can.cpp ****     FDCAN_RxHeaderTypeDef header;
 166:Src/interface_can.cpp ****     bool validRead = false;
 851              		.loc 2 166 10
 852 000a 0023     		movs	r3, #0
 853 000c 87F83730 		strb	r3, [r7, #55]
 167:Src/interface_can.cpp **** 
 168:Src/interface_can.cpp ****     if (HAL_FDCAN_GetRxFifoFillLevel(handle_, FDCAN_RX_FIFO0) > 0) {
 854              		.loc 2 168 38
 855 0010 7B68     		ldr	r3, [r7, #4]
 856 0012 1B69     		ldr	r3, [r3, #16]
 857              		.loc 2 168 37
 858 0014 4021     		movs	r1, #64
 859 0016 1846     		mov	r0, r3
 860 0018 FFF7FEFF 		bl	HAL_FDCAN_GetRxFifoFillLevel
 861 001c 0346     		mov	r3, r0
 862              		.loc 2 168 63
 863 001e 002B     		cmp	r3, #0
 864 0020 14BF     		ite	ne
 865 0022 0123     		movne	r3, #1
 866 0024 0023     		moveq	r3, #0
 867 0026 DBB2     		uxtb	r3, r3
 868              		.loc 2 168 5
 869 0028 002B     		cmp	r3, #0
 870 002a 14D0     		beq	.L40
 169:Src/interface_can.cpp ****         if (HAL_FDCAN_GetRxMessage(handle_, FDCAN_RX_FIFO0, &header, rxmsg.buf) == HAL_OK) {
 871              		.loc 2 169 35
 872 002c 7B68     		ldr	r3, [r7, #4]
 873 002e 1869     		ldr	r0, [r3, #16]
 874              		.loc 2 169 76
 875 0030 3B68     		ldr	r3, [r7]
 876 0032 0733     		adds	r3, r3, #7
 877              		.loc 2 169 35
 878 0034 07F10C02 		add	r2, r7, #12
 879 0038 4021     		movs	r1, #64
ARM GAS  /tmp/cckYcgKs.s 			page 23


 880 003a FFF7FEFF 		bl	HAL_FDCAN_GetRxMessage
 881 003e 0346     		mov	r3, r0
 882              		.loc 2 169 81
 883 0040 002B     		cmp	r3, #0
 884 0042 0CBF     		ite	eq
 885 0044 0123     		moveq	r3, #1
 886 0046 0023     		movne	r3, #0
 887 0048 DBB2     		uxtb	r3, r3
 888              		.loc 2 169 9
 889 004a 002B     		cmp	r3, #0
 890 004c 25D0     		beq	.L41
 170:Src/interface_can.cpp ****             validRead = true;
 891              		.loc 2 170 23
 892 004e 0123     		movs	r3, #1
 893 0050 87F83730 		strb	r3, [r7, #55]
 894 0054 21E0     		b	.L41
 895              	.L40:
 171:Src/interface_can.cpp ****         }
 172:Src/interface_can.cpp ****     } else if (HAL_FDCAN_GetRxFifoFillLevel(handle_, FDCAN_RX_FIFO1) > 0) {
 896              		.loc 2 172 45
 897 0056 7B68     		ldr	r3, [r7, #4]
 898 0058 1B69     		ldr	r3, [r3, #16]
 899              		.loc 2 172 44
 900 005a 4121     		movs	r1, #65
 901 005c 1846     		mov	r0, r3
 902 005e FFF7FEFF 		bl	HAL_FDCAN_GetRxFifoFillLevel
 903 0062 0346     		mov	r3, r0
 904              		.loc 2 172 70
 905 0064 002B     		cmp	r3, #0
 906 0066 14BF     		ite	ne
 907 0068 0123     		movne	r3, #1
 908 006a 0023     		moveq	r3, #0
 909 006c DBB2     		uxtb	r3, r3
 910              		.loc 2 172 12
 911 006e 002B     		cmp	r3, #0
 912 0070 13D0     		beq	.L41
 173:Src/interface_can.cpp ****         if (HAL_FDCAN_GetRxMessage(handle_, FDCAN_RX_FIFO1, &header, rxmsg.buf) == HAL_OK) {
 913              		.loc 2 173 35
 914 0072 7B68     		ldr	r3, [r7, #4]
 915 0074 1869     		ldr	r0, [r3, #16]
 916              		.loc 2 173 76
 917 0076 3B68     		ldr	r3, [r7]
 918 0078 0733     		adds	r3, r3, #7
 919              		.loc 2 173 35
 920 007a 07F10C02 		add	r2, r7, #12
 921 007e 4121     		movs	r1, #65
 922 0080 FFF7FEFF 		bl	HAL_FDCAN_GetRxMessage
 923 0084 0346     		mov	r3, r0
 924              		.loc 2 173 81
 925 0086 002B     		cmp	r3, #0
 926 0088 0CBF     		ite	eq
 927 008a 0123     		moveq	r3, #1
 928 008c 0023     		movne	r3, #0
 929 008e DBB2     		uxtb	r3, r3
 930              		.loc 2 173 9
 931 0090 002B     		cmp	r3, #0
 932 0092 02D0     		beq	.L41
ARM GAS  /tmp/cckYcgKs.s 			page 24


 174:Src/interface_can.cpp ****             validRead = true;
 933              		.loc 2 174 23
 934 0094 0123     		movs	r3, #1
 935 0096 87F83730 		strb	r3, [r7, #55]
 936              	.L41:
 175:Src/interface_can.cpp ****         }
 176:Src/interface_can.cpp ****     }
 177:Src/interface_can.cpp **** 
 178:Src/interface_can.cpp ****     if (validRead) {
 937              		.loc 2 178 5
 938 009a 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 939 009e 002B     		cmp	r3, #0
 940 00a0 19D0     		beq	.L42
 179:Src/interface_can.cpp ****         rxmsg.isExt = (header.IdType == FDCAN_EXTENDED_ID);
 941              		.loc 2 179 31
 942 00a2 3B69     		ldr	r3, [r7, #16]
 943              		.loc 2 179 38
 944 00a4 B3F1804F 		cmp	r3, #1073741824
 945 00a8 0CBF     		ite	eq
 946 00aa 0123     		moveq	r3, #1
 947 00ac 0023     		movne	r3, #0
 948 00ae DAB2     		uxtb	r2, r3
 949              		.loc 2 179 21
 950 00b0 3B68     		ldr	r3, [r7]
 951 00b2 1A71     		strb	r2, [r3, #4]
 180:Src/interface_can.cpp ****         rxmsg.id = rxmsg.isExt ? header.Identifier : header.Identifier;
 952              		.loc 2 180 41
 953 00b4 FA68     		ldr	r2, [r7, #12]
 954              		.loc 2 180 18
 955 00b6 3B68     		ldr	r3, [r7]
 956 00b8 1A60     		str	r2, [r3]
 181:Src/interface_can.cpp ****         rxmsg.len = header.DataLength >> 16; // Convert FDCAN DLC to actual length
 957              		.loc 2 181 28
 958 00ba BB69     		ldr	r3, [r7, #24]
 959              		.loc 2 181 39
 960 00bc 1B0C     		lsrs	r3, r3, #16
 961              		.loc 2 181 19
 962 00be DAB2     		uxtb	r2, r3
 963 00c0 3B68     		ldr	r3, [r7]
 964 00c2 9A71     		strb	r2, [r3, #6]
 182:Src/interface_can.cpp ****         rxmsg.rtr = (header.RxFrameType == FDCAN_REMOTE_FRAME);
 965              		.loc 2 182 29
 966 00c4 7B69     		ldr	r3, [r7, #20]
 967              		.loc 2 182 41
 968 00c6 B3F1005F 		cmp	r3, #536870912
 969 00ca 0CBF     		ite	eq
 970 00cc 0123     		moveq	r3, #1
 971 00ce 0023     		movne	r3, #0
 972 00d0 DAB2     		uxtb	r2, r3
 973              		.loc 2 182 19
 974 00d2 3B68     		ldr	r3, [r7]
 975 00d4 5A71     		strb	r2, [r3, #5]
 976              	.L42:
 183:Src/interface_can.cpp ****     }
 184:Src/interface_can.cpp **** 
 185:Src/interface_can.cpp ****     return validRead;
 977              		.loc 2 185 12
ARM GAS  /tmp/cckYcgKs.s 			page 25


 978 00d6 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 186:Src/interface_can.cpp **** }
 979              		.loc 2 186 1
 980 00da 1846     		mov	r0, r3
 981 00dc 3837     		adds	r7, r7, #56
 982              	.LCFI38:
 983              		.cfi_def_cfa_offset 8
 984 00de BD46     		mov	sp, r7
 985              	.LCFI39:
 986              		.cfi_def_cfa_register 13
 987              		@ sp needed
 988 00e0 80BD     		pop	{r7, pc}
 989              		.cfi_endproc
 990              	.LFE5720:
 992              		.section	.text._ZN9ODriveCAN13set_baud_rateEm,"ax",%progbits
 993              		.align	1
 994              		.global	_ZN9ODriveCAN13set_baud_rateEm
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv4-sp-d16
 1000              	_ZN9ODriveCAN13set_baud_rateEm:
 1001              	.LFB5721:
 187:Src/interface_can.cpp **** 
 188:Src/interface_can.cpp **** // Set one of only a few common baud rates.  CAN doesn't do arbitrary baud rates well due to the ti
 189:Src/interface_can.cpp **** // 21 TQ allows for easy sampling at exactly 80% (recommended by Vector Informatik GmbH for high re
 190:Src/interface_can.cpp **** // Conveniently, the CAN peripheral's 42MHz clock lets us easily create 21TQs for all common baud r
 191:Src/interface_can.cpp **** void ODriveCAN::set_baud_rate(uint32_t baudRate) {
 1002              		.loc 2 191 50
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006 0000 80B5     		push	{r7, lr}
 1007              	.LCFI40:
 1008              		.cfi_def_cfa_offset 8
 1009              		.cfi_offset 7, -8
 1010              		.cfi_offset 14, -4
 1011 0002 82B0     		sub	sp, sp, #8
 1012              	.LCFI41:
 1013              		.cfi_def_cfa_offset 16
 1014 0004 00AF     		add	r7, sp, #0
 1015              	.LCFI42:
 1016              		.cfi_def_cfa_register 7
 1017 0006 7860     		str	r0, [r7, #4]
 1018 0008 3960     		str	r1, [r7]
 192:Src/interface_can.cpp ****     switch (baudRate) {
 1019              		.loc 2 192 5
 1020 000a 3B68     		ldr	r3, [r7]
 1021 000c 3E4A     		ldr	r2, .L52
 1022 000e 9342     		cmp	r3, r2
 1023 0010 5CD0     		beq	.L45
 1024 0012 3B68     		ldr	r3, [r7]
 1025 0014 3C4A     		ldr	r2, .L52
 1026 0016 9342     		cmp	r3, r2
 1027 0018 70D8     		bhi	.L51
 1028 001a 3B68     		ldr	r3, [r7]
 1029 001c 3B4A     		ldr	r2, .L52+4
ARM GAS  /tmp/cckYcgKs.s 			page 26


 1030 001e 9342     		cmp	r3, r2
 1031 0020 3CD0     		beq	.L47
 1032 0022 3B68     		ldr	r3, [r7]
 1033 0024 394A     		ldr	r2, .L52+4
 1034 0026 9342     		cmp	r3, r2
 1035 0028 68D8     		bhi	.L51
 1036 002a 3B68     		ldr	r3, [r7]
 1037 002c 384A     		ldr	r2, .L52+8
 1038 002e 9342     		cmp	r3, r2
 1039 0030 04D0     		beq	.L48
 1040 0032 3B68     		ldr	r3, [r7]
 1041 0034 374A     		ldr	r2, .L52+12
 1042 0036 9342     		cmp	r3, r2
 1043 0038 18D0     		beq	.L49
 193:Src/interface_can.cpp ****         case CAN_BAUD_125K:
 194:Src/interface_can.cpp ****             handle_->Init.NominalPrescaler = 16;    // 21 TQ's
 195:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 196:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 197:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 198:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 199:Src/interface_can.cpp ****             reinit_can();
 200:Src/interface_can.cpp ****             break;
 201:Src/interface_can.cpp **** 
 202:Src/interface_can.cpp ****         case CAN_BAUD_250K:
 203:Src/interface_can.cpp ****             handle_->Init.NominalPrescaler = 8;     // 21 TQ's
 204:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 205:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 206:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 207:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 208:Src/interface_can.cpp ****             reinit_can();
 209:Src/interface_can.cpp ****             break;
 210:Src/interface_can.cpp **** 
 211:Src/interface_can.cpp ****         case CAN_BAUD_500K:
 212:Src/interface_can.cpp ****             handle_->Init.NominalPrescaler = 4;     // 21 TQ's
 213:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 214:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 215:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 216:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 217:Src/interface_can.cpp ****             reinit_can();
 218:Src/interface_can.cpp ****             break;
 219:Src/interface_can.cpp **** 
 220:Src/interface_can.cpp ****         case CAN_BAUD_1000K:
 221:Src/interface_can.cpp ****             handle_->Init.NominalPrescaler = 2;     // 21 TQ's
 222:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 223:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 224:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 225:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 226:Src/interface_can.cpp ****             reinit_can();
 227:Src/interface_can.cpp ****             break;
 228:Src/interface_can.cpp **** 
 229:Src/interface_can.cpp ****         default:
 230:Src/interface_can.cpp ****             // baudRate is invalid, so don't accept it.
 231:Src/interface_can.cpp ****             break;
 1044              		.loc 2 231 13
 1045 003a 5FE0     		b	.L51
 1046              	.L48:
 194:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
ARM GAS  /tmp/cckYcgKs.s 			page 27


 1047              		.loc 2 194 13
 1048 003c 7B68     		ldr	r3, [r7, #4]
 1049 003e 1B69     		ldr	r3, [r3, #16]
 194:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1050              		.loc 2 194 44
 1051 0040 1022     		movs	r2, #16
 1052 0042 5A61     		str	r2, [r3, #20]
 195:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1053              		.loc 2 195 13
 1054 0044 7B68     		ldr	r3, [r7, #4]
 1055 0046 1B69     		ldr	r3, [r3, #16]
 195:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1056              		.loc 2 195 43
 1057 0048 0D22     		movs	r2, #13
 1058 004a DA61     		str	r2, [r3, #28]
 196:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1059              		.loc 2 196 13
 1060 004c 7B68     		ldr	r3, [r7, #4]
 1061 004e 1B69     		ldr	r3, [r3, #16]
 196:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1062              		.loc 2 196 43
 1063 0050 0222     		movs	r2, #2
 1064 0052 1A62     		str	r2, [r3, #32]
 197:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1065              		.loc 2 197 13
 1066 0054 7B68     		ldr	r3, [r7, #4]
 1067 0056 1B69     		ldr	r3, [r3, #16]
 197:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1068              		.loc 2 197 48
 1069 0058 0122     		movs	r2, #1
 1070 005a 9A61     		str	r2, [r3, #24]
 198:Src/interface_can.cpp ****             reinit_can();
 1071              		.loc 2 198 13
 1072 005c 7B68     		ldr	r3, [r7, #4]
 1073 005e DB68     		ldr	r3, [r3, #12]
 198:Src/interface_can.cpp ****             reinit_can();
 1074              		.loc 2 198 31
 1075 0060 3A68     		ldr	r2, [r7]
 1076 0062 1A60     		str	r2, [r3]
 199:Src/interface_can.cpp ****             break;
 1077              		.loc 2 199 23
 1078 0064 7868     		ldr	r0, [r7, #4]
 1079 0066 FFF7FEFF 		bl	_ZN9ODriveCAN10reinit_canEv
 200:Src/interface_can.cpp **** 
 1080              		.loc 2 200 13
 1081 006a 48E0     		b	.L50
 1082              	.L49:
 203:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1083              		.loc 2 203 13
 1084 006c 7B68     		ldr	r3, [r7, #4]
 1085 006e 1B69     		ldr	r3, [r3, #16]
 203:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1086              		.loc 2 203 44
 1087 0070 0822     		movs	r2, #8
 1088 0072 5A61     		str	r2, [r3, #20]
 204:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1089              		.loc 2 204 13
ARM GAS  /tmp/cckYcgKs.s 			page 28


 1090 0074 7B68     		ldr	r3, [r7, #4]
 1091 0076 1B69     		ldr	r3, [r3, #16]
 204:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1092              		.loc 2 204 43
 1093 0078 0D22     		movs	r2, #13
 1094 007a DA61     		str	r2, [r3, #28]
 205:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1095              		.loc 2 205 13
 1096 007c 7B68     		ldr	r3, [r7, #4]
 1097 007e 1B69     		ldr	r3, [r3, #16]
 205:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1098              		.loc 2 205 43
 1099 0080 0222     		movs	r2, #2
 1100 0082 1A62     		str	r2, [r3, #32]
 206:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1101              		.loc 2 206 13
 1102 0084 7B68     		ldr	r3, [r7, #4]
 1103 0086 1B69     		ldr	r3, [r3, #16]
 206:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1104              		.loc 2 206 48
 1105 0088 0122     		movs	r2, #1
 1106 008a 9A61     		str	r2, [r3, #24]
 207:Src/interface_can.cpp ****             reinit_can();
 1107              		.loc 2 207 13
 1108 008c 7B68     		ldr	r3, [r7, #4]
 1109 008e DB68     		ldr	r3, [r3, #12]
 207:Src/interface_can.cpp ****             reinit_can();
 1110              		.loc 2 207 31
 1111 0090 3A68     		ldr	r2, [r7]
 1112 0092 1A60     		str	r2, [r3]
 208:Src/interface_can.cpp ****             break;
 1113              		.loc 2 208 23
 1114 0094 7868     		ldr	r0, [r7, #4]
 1115 0096 FFF7FEFF 		bl	_ZN9ODriveCAN10reinit_canEv
 209:Src/interface_can.cpp **** 
 1116              		.loc 2 209 13
 1117 009a 30E0     		b	.L50
 1118              	.L47:
 212:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1119              		.loc 2 212 13
 1120 009c 7B68     		ldr	r3, [r7, #4]
 1121 009e 1B69     		ldr	r3, [r3, #16]
 212:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1122              		.loc 2 212 44
 1123 00a0 0422     		movs	r2, #4
 1124 00a2 5A61     		str	r2, [r3, #20]
 213:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1125              		.loc 2 213 13
 1126 00a4 7B68     		ldr	r3, [r7, #4]
 1127 00a6 1B69     		ldr	r3, [r3, #16]
 213:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1128              		.loc 2 213 43
 1129 00a8 0D22     		movs	r2, #13
 1130 00aa DA61     		str	r2, [r3, #28]
 214:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1131              		.loc 2 214 13
 1132 00ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckYcgKs.s 			page 29


 1133 00ae 1B69     		ldr	r3, [r3, #16]
 214:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1134              		.loc 2 214 43
 1135 00b0 0222     		movs	r2, #2
 1136 00b2 1A62     		str	r2, [r3, #32]
 215:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1137              		.loc 2 215 13
 1138 00b4 7B68     		ldr	r3, [r7, #4]
 1139 00b6 1B69     		ldr	r3, [r3, #16]
 215:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1140              		.loc 2 215 48
 1141 00b8 0122     		movs	r2, #1
 1142 00ba 9A61     		str	r2, [r3, #24]
 216:Src/interface_can.cpp ****             reinit_can();
 1143              		.loc 2 216 13
 1144 00bc 7B68     		ldr	r3, [r7, #4]
 1145 00be DB68     		ldr	r3, [r3, #12]
 216:Src/interface_can.cpp ****             reinit_can();
 1146              		.loc 2 216 31
 1147 00c0 3A68     		ldr	r2, [r7]
 1148 00c2 1A60     		str	r2, [r3]
 217:Src/interface_can.cpp ****             break;
 1149              		.loc 2 217 23
 1150 00c4 7868     		ldr	r0, [r7, #4]
 1151 00c6 FFF7FEFF 		bl	_ZN9ODriveCAN10reinit_canEv
 218:Src/interface_can.cpp **** 
 1152              		.loc 2 218 13
 1153 00ca 18E0     		b	.L50
 1154              	.L45:
 221:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1155              		.loc 2 221 13
 1156 00cc 7B68     		ldr	r3, [r7, #4]
 1157 00ce 1B69     		ldr	r3, [r3, #16]
 221:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg1 = 13;     // 80% sample point
 1158              		.loc 2 221 44
 1159 00d0 0222     		movs	r2, #2
 1160 00d2 5A61     		str	r2, [r3, #20]
 222:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1161              		.loc 2 222 13
 1162 00d4 7B68     		ldr	r3, [r7, #4]
 1163 00d6 1B69     		ldr	r3, [r3, #16]
 222:Src/interface_can.cpp ****             handle_->Init.NominalTimeSeg2 = 2;
 1164              		.loc 2 222 43
 1165 00d8 0D22     		movs	r2, #13
 1166 00da DA61     		str	r2, [r3, #28]
 223:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1167              		.loc 2 223 13
 1168 00dc 7B68     		ldr	r3, [r7, #4]
 1169 00de 1B69     		ldr	r3, [r3, #16]
 223:Src/interface_can.cpp ****             handle_->Init.NominalSyncJumpWidth = 1;
 1170              		.loc 2 223 43
 1171 00e0 0222     		movs	r2, #2
 1172 00e2 1A62     		str	r2, [r3, #32]
 224:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1173              		.loc 2 224 13
 1174 00e4 7B68     		ldr	r3, [r7, #4]
 1175 00e6 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/cckYcgKs.s 			page 30


 224:Src/interface_can.cpp ****             config_.baud_rate = baudRate;
 1176              		.loc 2 224 48
 1177 00e8 0122     		movs	r2, #1
 1178 00ea 9A61     		str	r2, [r3, #24]
 225:Src/interface_can.cpp ****             reinit_can();
 1179              		.loc 2 225 13
 1180 00ec 7B68     		ldr	r3, [r7, #4]
 1181 00ee DB68     		ldr	r3, [r3, #12]
 225:Src/interface_can.cpp ****             reinit_can();
 1182              		.loc 2 225 31
 1183 00f0 3A68     		ldr	r2, [r7]
 1184 00f2 1A60     		str	r2, [r3]
 226:Src/interface_can.cpp ****             break;
 1185              		.loc 2 226 23
 1186 00f4 7868     		ldr	r0, [r7, #4]
 1187 00f6 FFF7FEFF 		bl	_ZN9ODriveCAN10reinit_canEv
 227:Src/interface_can.cpp **** 
 1188              		.loc 2 227 13
 1189 00fa 00E0     		b	.L50
 1190              	.L51:
 1191              		.loc 2 231 13
 1192 00fc 00BF     		nop
 1193              	.L50:
 232:Src/interface_can.cpp ****     }
 233:Src/interface_can.cpp **** }
 1194              		.loc 2 233 1
 1195 00fe 00BF     		nop
 1196 0100 0837     		adds	r7, r7, #8
 1197              	.LCFI43:
 1198              		.cfi_def_cfa_offset 8
 1199 0102 BD46     		mov	sp, r7
 1200              	.LCFI44:
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed
 1203 0104 80BD     		pop	{r7, pc}
 1204              	.L53:
 1205 0106 00BF     		.align	2
 1206              	.L52:
 1207 0108 40420F00 		.word	1000000
 1208 010c 20A10700 		.word	500000
 1209 0110 48E80100 		.word	125000
 1210 0114 90D00300 		.word	250000
 1211              		.cfi_endproc
 1212              	.LFE5721:
 1214              		.section	.text._ZN9ODriveCAN10reinit_canEv,"ax",%progbits
 1215              		.align	1
 1216              		.global	_ZN9ODriveCAN10reinit_canEv
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.fpu fpv4-sp-d16
 1222              	_ZN9ODriveCAN10reinit_canEv:
 1223              	.LFB5722:
 234:Src/interface_can.cpp **** void ODriveCAN::reinit_can() {
 1224              		.loc 2 234 30
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cckYcgKs.s 			page 31


 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0000 80B5     		push	{r7, lr}
 1229              	.LCFI45:
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 86B0     		sub	sp, sp, #24
 1234              	.LCFI46:
 1235              		.cfi_def_cfa_offset 32
 1236 0004 02AF     		add	r7, sp, #8
 1237              	.LCFI47:
 1238              		.cfi_def_cfa 7, 24
 1239 0006 7860     		str	r0, [r7, #4]
 235:Src/interface_can.cpp ****     // Stop FDCAN peripheral
 236:Src/interface_can.cpp ****     HAL_FDCAN_Stop(handle_);
 1240              		.loc 2 236 19
 1241 0008 7B68     		ldr	r3, [r7, #4]
 1242 000a 1B69     		ldr	r3, [r3, #16]
 1243 000c 1846     		mov	r0, r3
 1244 000e FFF7FEFF 		bl	HAL_FDCAN_Stop
 237:Src/interface_can.cpp ****     
 238:Src/interface_can.cpp ****     // Configure FDCAN init structure
 239:Src/interface_can.cpp ****     handle_->Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1245              		.loc 2 239 5
 1246 0012 7B68     		ldr	r3, [r7, #4]
 1247 0014 1B69     		ldr	r3, [r3, #16]
 1248              		.loc 2 239 31
 1249 0016 0022     		movs	r2, #0
 1250 0018 9A60     		str	r2, [r3, #8]
 240:Src/interface_can.cpp ****     handle_->Init.Mode = FDCAN_MODE_NORMAL;
 1251              		.loc 2 240 5
 1252 001a 7B68     		ldr	r3, [r7, #4]
 1253 001c 1B69     		ldr	r3, [r3, #16]
 1254              		.loc 2 240 24
 1255 001e 0022     		movs	r2, #0
 1256 0020 DA60     		str	r2, [r3, #12]
 241:Src/interface_can.cpp ****     handle_->Init.AutoRetransmission = ENABLE;
 1257              		.loc 2 241 5
 1258 0022 7B68     		ldr	r3, [r7, #4]
 1259 0024 1B69     		ldr	r3, [r3, #16]
 1260              		.loc 2 241 38
 1261 0026 0122     		movs	r2, #1
 1262 0028 1A74     		strb	r2, [r3, #16]
 242:Src/interface_can.cpp ****     handle_->Init.TransmitPause = DISABLE;
 1263              		.loc 2 242 5
 1264 002a 7B68     		ldr	r3, [r7, #4]
 1265 002c 1B69     		ldr	r3, [r3, #16]
 1266              		.loc 2 242 33
 1267 002e 0022     		movs	r2, #0
 1268 0030 5A74     		strb	r2, [r3, #17]
 243:Src/interface_can.cpp ****     handle_->Init.ProtocolException = DISABLE;
 1269              		.loc 2 243 5
 1270 0032 7B68     		ldr	r3, [r7, #4]
 1271 0034 1B69     		ldr	r3, [r3, #16]
 1272              		.loc 2 243 37
 1273 0036 0022     		movs	r2, #0
 1274 0038 9A74     		strb	r2, [r3, #18]
ARM GAS  /tmp/cckYcgKs.s 			page 32


 244:Src/interface_can.cpp ****     
 245:Src/interface_can.cpp ****     // Set timing parameters for the selected baud rate
 246:Src/interface_can.cpp ****     handle_->Init.NominalPrescaler = handle_->Init.NominalPrescaler; // Use existing prescaler
 1275              		.loc 2 246 38
 1276 003a 7B68     		ldr	r3, [r7, #4]
 1277 003c 1A69     		ldr	r2, [r3, #16]
 1278              		.loc 2 246 5
 1279 003e 7B68     		ldr	r3, [r7, #4]
 1280 0040 1B69     		ldr	r3, [r3, #16]
 1281              		.loc 2 246 52
 1282 0042 5269     		ldr	r2, [r2, #20]
 1283              		.loc 2 246 36
 1284 0044 5A61     		str	r2, [r3, #20]
 247:Src/interface_can.cpp ****     handle_->Init.NominalSyncJumpWidth = 1;
 1285              		.loc 2 247 5
 1286 0046 7B68     		ldr	r3, [r7, #4]
 1287 0048 1B69     		ldr	r3, [r3, #16]
 1288              		.loc 2 247 40
 1289 004a 0122     		movs	r2, #1
 1290 004c 9A61     		str	r2, [r3, #24]
 248:Src/interface_can.cpp ****     handle_->Init.NominalTimeSeg1 = 13; // 80% sample point
 1291              		.loc 2 248 5
 1292 004e 7B68     		ldr	r3, [r7, #4]
 1293 0050 1B69     		ldr	r3, [r3, #16]
 1294              		.loc 2 248 35
 1295 0052 0D22     		movs	r2, #13
 1296 0054 DA61     		str	r2, [r3, #28]
 249:Src/interface_can.cpp ****     handle_->Init.NominalTimeSeg2 = 2;
 1297              		.loc 2 249 5
 1298 0056 7B68     		ldr	r3, [r7, #4]
 1299 0058 1B69     		ldr	r3, [r3, #16]
 1300              		.loc 2 249 35
 1301 005a 0222     		movs	r2, #2
 1302 005c 1A62     		str	r2, [r3, #32]
 250:Src/interface_can.cpp ****     
 251:Src/interface_can.cpp ****     // Reinitialize FDCAN
 252:Src/interface_can.cpp ****     HAL_FDCAN_Init(handle_);
 1303              		.loc 2 252 19
 1304 005e 7B68     		ldr	r3, [r7, #4]
 1305 0060 1B69     		ldr	r3, [r3, #16]
 1306 0062 1846     		mov	r0, r3
 1307 0064 FFF7FEFF 		bl	HAL_FDCAN_Init
 253:Src/interface_can.cpp ****     
 254:Src/interface_can.cpp ****     // Configure global filter to accept all messages
 255:Src/interface_can.cpp ****     HAL_FDCAN_ConfigGlobalFilter(handle_,
 1308              		.loc 2 255 33
 1309 0068 7B68     		ldr	r3, [r7, #4]
 1310 006a 1869     		ldr	r0, [r3, #16]
 1311 006c 0323     		movs	r3, #3
 1312 006e 0093     		str	r3, [sp]
 1313 0070 0023     		movs	r3, #0
 1314 0072 0022     		movs	r2, #0
 1315 0074 0021     		movs	r1, #0
 1316 0076 FFF7FEFF 		bl	HAL_FDCAN_ConfigGlobalFilter
 256:Src/interface_can.cpp ****                                 FDCAN_ACCEPT_IN_RX_FIFO0,  // Non-matching frames
 257:Src/interface_can.cpp ****                                 FDCAN_ACCEPT_IN_RX_FIFO0,  // Non-matching frames
 258:Src/interface_can.cpp ****                                 FDCAN_FILTER_REMOTE,       // Remote frames
ARM GAS  /tmp/cckYcgKs.s 			page 33


 259:Src/interface_can.cpp ****                                 FDCAN_FILTER_REJECT);      // Reject error frames
 260:Src/interface_can.cpp ****     
 261:Src/interface_can.cpp ****     // Start FDCAN peripheral
 262:Src/interface_can.cpp ****     HAL_StatusTypeDef status = HAL_FDCAN_Start(handle_);
 1317              		.loc 2 262 47
 1318 007a 7B68     		ldr	r3, [r7, #4]
 1319 007c 1B69     		ldr	r3, [r3, #16]
 1320 007e 1846     		mov	r0, r3
 1321 0080 FFF7FEFF 		bl	HAL_FDCAN_Start
 1322 0084 0346     		mov	r3, r0
 1323 0086 FB73     		strb	r3, [r7, #15]
 263:Src/interface_can.cpp ****     
 264:Src/interface_can.cpp ****     if (status == HAL_OK) {
 1324              		.loc 2 264 5
 1325 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1326 008a 002B     		cmp	r3, #0
 1327 008c 08D1     		bne	.L56
 265:Src/interface_can.cpp ****         // Enable notifications for new messages
 266:Src/interface_can.cpp ****         // FDCAN requires interrupt line parameter (0 or 1)
 267:Src/interface_can.cpp ****         status = HAL_FDCAN_ActivateNotification(handle_, 
 1328              		.loc 2 267 48
 1329 008e 7B68     		ldr	r3, [r7, #4]
 1330 0090 1B69     		ldr	r3, [r3, #16]
 1331 0092 0122     		movs	r2, #1
 1332 0094 0449     		ldr	r1, .L57
 1333 0096 1846     		mov	r0, r3
 1334 0098 FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 1335 009c 0346     		mov	r3, r0
 1336 009e FB73     		strb	r3, [r7, #15]
 1337              	.L56:
 268:Src/interface_can.cpp ****             FDCAN_IT_RX_FIFO0_NEW_MESSAGE | 
 269:Src/interface_can.cpp ****             FDCAN_IT_RX_FIFO0_FULL | 
 270:Src/interface_can.cpp ****             FDCAN_IT_ERROR_WARNING,
 271:Src/interface_can.cpp ****             FDCAN_INTERRUPT_LINE0);  // Use interrupt line 0
 272:Src/interface_can.cpp ****     }
 273:Src/interface_can.cpp **** }
 1338              		.loc 2 273 1
 1339 00a0 00BF     		nop
 1340 00a2 1037     		adds	r7, r7, #16
 1341              	.LCFI48:
 1342              		.cfi_def_cfa_offset 8
 1343 00a4 BD46     		mov	sp, r7
 1344              	.LCFI49:
 1345              		.cfi_def_cfa_register 13
 1346              		@ sp needed
 1347 00a6 80BD     		pop	{r7, pc}
 1348              	.L58:
 1349              		.align	2
 1350              	.L57:
 1351 00a8 03000400 		.word	262147
 1352              		.cfi_endproc
 1353              	.LFE5722:
 1355              		.section	.text._ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE,"ax",%progbits
 1356              		.align	1
 1357              		.global	_ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE
 1358              		.syntax unified
 1359              		.thumb
ARM GAS  /tmp/cckYcgKs.s 			page 34


 1360              		.thumb_func
 1361              		.fpu fpv4-sp-d16
 1363              	_ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE:
 1364              	.LFB5723:
 274:Src/interface_can.cpp **** void ODriveCAN::set_error(Error error) {
 1365              		.loc 2 274 40
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 8
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370 0000 80B4     		push	{r7}
 1371              	.LCFI50:
 1372              		.cfi_def_cfa_offset 4
 1373              		.cfi_offset 7, -4
 1374 0002 83B0     		sub	sp, sp, #12
 1375              	.LCFI51:
 1376              		.cfi_def_cfa_offset 16
 1377 0004 00AF     		add	r7, sp, #0
 1378              	.LCFI52:
 1379              		.cfi_def_cfa_register 7
 1380 0006 7860     		str	r0, [r7, #4]
 1381 0008 0B46     		mov	r3, r1
 1382 000a FB70     		strb	r3, [r7, #3]
 275:Src/interface_can.cpp ****     error_ = error;
 1383              		.loc 2 275 12
 1384 000c 7B68     		ldr	r3, [r7, #4]
 1385 000e FA78     		ldrb	r2, [r7, #3]
 1386 0010 1A72     		strb	r2, [r3, #8]
 276:Src/interface_can.cpp **** }
 1387              		.loc 2 276 1
 1388 0012 00BF     		nop
 1389 0014 0C37     		adds	r7, r7, #12
 1390              	.LCFI53:
 1391              		.cfi_def_cfa_offset 4
 1392 0016 BD46     		mov	sp, r7
 1393              	.LCFI54:
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 0018 5DF8047B 		ldr	r7, [sp], #4
 1397              	.LCFI55:
 1398              		.cfi_restore 7
 1399              		.cfi_def_cfa_offset 0
 1400 001c 7047     		bx	lr
 1401              		.cfi_endproc
 1402              	.LFE5723:
 1404              		.section	.text._ZN9ODriveCAN14send_heartbeatEP4Axis,"ax",%progbits
 1405              		.align	1
 1406              		.global	_ZN9ODriveCAN14send_heartbeatEP4Axis
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1410              		.fpu fpv4-sp-d16
 1412              	_ZN9ODriveCAN14send_heartbeatEP4Axis:
 1413              	.LFB5724:
 277:Src/interface_can.cpp **** // This function is called by each axis.
 278:Src/interface_can.cpp **** // It provides an abstraction from the specific CAN protocol in use
 279:Src/interface_can.cpp **** void ODriveCAN::send_heartbeat(Axis *axis) {
ARM GAS  /tmp/cckYcgKs.s 			page 35


 1414              		.loc 2 279 44
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 16
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418 0000 80B5     		push	{r7, lr}
 1419              	.LCFI56:
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 84B0     		sub	sp, sp, #16
 1424              	.LCFI57:
 1425              		.cfi_def_cfa_offset 24
 1426 0004 00AF     		add	r7, sp, #0
 1427              	.LCFI58:
 1428              		.cfi_def_cfa_register 7
 1429 0006 7860     		str	r0, [r7, #4]
 1430 0008 3960     		str	r1, [r7]
 1431              	.LBB11:
 280:Src/interface_can.cpp ****     // Handle heartbeat message
 281:Src/interface_can.cpp ****     if (axis->config_.can_heartbeat_rate_ms > 0) {
 1432              		.loc 2 281 15
 1433 000a 3B68     		ldr	r3, [r7]
 1434 000c 5B68     		ldr	r3, [r3, #4]
 1435              		.loc 2 281 23
 1436 000e 9B6F     		ldr	r3, [r3, #120]
 1437              		.loc 2 281 5
 1438 0010 002B     		cmp	r3, #0
 1439 0012 1BD0     		beq	.L66
 1440              	.LBB12:
 282:Src/interface_can.cpp ****         uint32_t now = osKernelSysTick();
 1441              		.loc 2 282 39
 1442 0014 FFF7FEFF 		bl	osKernelSysTick
 1443 0018 F860     		str	r0, [r7, #12]
 283:Src/interface_can.cpp ****         if ((now - axis->last_heartbeat_) >= axis->config_.can_heartbeat_rate_ms) {
 1444              		.loc 2 283 26
 1445 001a 3B68     		ldr	r3, [r7]
 1446 001c D3F8A431 		ldr	r3, [r3, #420]
 1447              		.loc 2 283 18
 1448 0020 FA68     		ldr	r2, [r7, #12]
 1449 0022 D21A     		subs	r2, r2, r3
 1450              		.loc 2 283 52
 1451 0024 3B68     		ldr	r3, [r7]
 1452 0026 5B68     		ldr	r3, [r3, #4]
 1453              		.loc 2 283 60
 1454 0028 9B6F     		ldr	r3, [r3, #120]
 1455              		.loc 2 283 9
 1456 002a 9A42     		cmp	r2, r3
 1457 002c 0ED3     		bcc	.L66
 284:Src/interface_can.cpp ****             switch (config_.protocol) {
 1458              		.loc 2 284 21
 1459 002e 7B68     		ldr	r3, [r7, #4]
 1460 0030 DB68     		ldr	r3, [r3, #12]
 1461              		.loc 2 284 29
 1462 0032 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1463              		.loc 2 284 13
 1464 0034 002B     		cmp	r3, #0
 1465 0036 02D0     		beq	.L67
ARM GAS  /tmp/cckYcgKs.s 			page 36


 1466 0038 012B     		cmp	r3, #1
 1467 003a 02D0     		beq	.L68
 285:Src/interface_can.cpp ****                 case PROTOCOL_SIMPLE:
 286:Src/interface_can.cpp ****                     break;
 287:Src/interface_can.cpp ****                 case PROTOCOL_ENCOS:
 288:Src/interface_can.cpp ****                     break;
 289:Src/interface_can.cpp **** 
 290:Src/interface_can.cpp ****                 default:
 291:Src/interface_can.cpp ****                     break;
 1468              		.loc 2 291 21
 1469 003c 02E0     		b	.L65
 1470              	.L67:
 286:Src/interface_can.cpp ****                 case PROTOCOL_ENCOS:
 1471              		.loc 2 286 21
 1472 003e 00BF     		nop
 1473 0040 00E0     		b	.L65
 1474              	.L68:
 288:Src/interface_can.cpp **** 
 1475              		.loc 2 288 21
 1476 0042 00BF     		nop
 1477              	.L65:
 292:Src/interface_can.cpp **** 
 293:Src/interface_can.cpp ****             }
 294:Src/interface_can.cpp ****             axis->last_heartbeat_ = now;
 1478              		.loc 2 294 35
 1479 0044 3B68     		ldr	r3, [r7]
 1480 0046 FA68     		ldr	r2, [r7, #12]
 1481 0048 C3F8A421 		str	r2, [r3, #420]
 1482              	.L66:
 1483              	.LBE12:
 1484              	.LBE11:
 295:Src/interface_can.cpp ****         }
 296:Src/interface_can.cpp ****     }
 297:Src/interface_can.cpp **** }
 1485              		.loc 2 297 1
 1486 004c 00BF     		nop
 1487 004e 1037     		adds	r7, r7, #16
 1488              	.LCFI59:
 1489              		.cfi_def_cfa_offset 8
 1490 0050 BD46     		mov	sp, r7
 1491              	.LCFI60:
 1492              		.cfi_def_cfa_register 13
 1493              		@ sp needed
 1494 0052 80BD     		pop	{r7, pc}
 1495              		.cfi_endproc
 1496              	.LFE5724:
 1498              		.section	.text.HAL_FDCAN_TxFifoEmptyCallback,"ax",%progbits
 1499              		.align	1
 1500              		.global	HAL_FDCAN_TxFifoEmptyCallback
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	HAL_FDCAN_TxFifoEmptyCallback:
 1507              	.LFB5725:
 298:Src/interface_can.cpp **** void HAL_FDCAN_TxFifoEmptyCallback(FDCAN_HandleTypeDef *hfdcan) {}
 1508              		.loc 2 298 65
ARM GAS  /tmp/cckYcgKs.s 			page 37


 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 8
 1511              		@ frame_needed = 1, uses_anonymous_args = 0
 1512              		@ link register save eliminated.
 1513 0000 80B4     		push	{r7}
 1514              	.LCFI61:
 1515              		.cfi_def_cfa_offset 4
 1516              		.cfi_offset 7, -4
 1517 0002 83B0     		sub	sp, sp, #12
 1518              	.LCFI62:
 1519              		.cfi_def_cfa_offset 16
 1520 0004 00AF     		add	r7, sp, #0
 1521              	.LCFI63:
 1522              		.cfi_def_cfa_register 7
 1523 0006 7860     		str	r0, [r7, #4]
 1524              		.loc 2 298 66
 1525 0008 00BF     		nop
 1526 000a 0C37     		adds	r7, r7, #12
 1527              	.LCFI64:
 1528              		.cfi_def_cfa_offset 4
 1529 000c BD46     		mov	sp, r7
 1530              	.LCFI65:
 1531              		.cfi_def_cfa_register 13
 1532              		@ sp needed
 1533 000e 5DF8047B 		ldr	r7, [sp], #4
 1534              	.LCFI66:
 1535              		.cfi_restore 7
 1536              		.cfi_def_cfa_offset 0
 1537 0012 7047     		bx	lr
 1538              		.cfi_endproc
 1539              	.LFE5725:
 1541              		.section	.text._Z34HAL_FDCAN_TxBufferCompleteCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1542              		.align	1
 1543              		.global	_Z34HAL_FDCAN_TxBufferCompleteCallbackP19FDCAN_HandleTypeDef
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv4-sp-d16
 1549              	_Z34HAL_FDCAN_TxBufferCompleteCallbackP19FDCAN_HandleTypeDef:
 1550              	.LFB5726:
 299:Src/interface_can.cpp **** void HAL_FDCAN_TxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan) {}
 1551              		.loc 2 299 70
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 8
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555              		@ link register save eliminated.
 1556 0000 80B4     		push	{r7}
 1557              	.LCFI67:
 1558              		.cfi_def_cfa_offset 4
 1559              		.cfi_offset 7, -4
 1560 0002 83B0     		sub	sp, sp, #12
 1561              	.LCFI68:
 1562              		.cfi_def_cfa_offset 16
 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI69:
 1565              		.cfi_def_cfa_register 7
 1566 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cckYcgKs.s 			page 38


 1567              		.loc 2 299 71
 1568 0008 00BF     		nop
 1569 000a 0C37     		adds	r7, r7, #12
 1570              	.LCFI70:
 1571              		.cfi_def_cfa_offset 4
 1572 000c BD46     		mov	sp, r7
 1573              	.LCFI71:
 1574              		.cfi_def_cfa_register 13
 1575              		@ sp needed
 1576 000e 5DF8047B 		ldr	r7, [sp], #4
 1577              	.LCFI72:
 1578              		.cfi_restore 7
 1579              		.cfi_def_cfa_offset 0
 1580 0012 7047     		bx	lr
 1581              		.cfi_endproc
 1582              	.LFE5726:
 1584              		.section	.text._Z31HAL_FDCAN_TxBufferAbortCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1585              		.align	1
 1586              		.global	_Z31HAL_FDCAN_TxBufferAbortCallbackP19FDCAN_HandleTypeDef
 1587              		.syntax unified
 1588              		.thumb
 1589              		.thumb_func
 1590              		.fpu fpv4-sp-d16
 1592              	_Z31HAL_FDCAN_TxBufferAbortCallbackP19FDCAN_HandleTypeDef:
 1593              	.LFB5727:
 300:Src/interface_can.cpp **** void HAL_FDCAN_TxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan) {}
 1594              		.loc 2 300 67
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 8
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598              		@ link register save eliminated.
 1599 0000 80B4     		push	{r7}
 1600              	.LCFI73:
 1601              		.cfi_def_cfa_offset 4
 1602              		.cfi_offset 7, -4
 1603 0002 83B0     		sub	sp, sp, #12
 1604              	.LCFI74:
 1605              		.cfi_def_cfa_offset 16
 1606 0004 00AF     		add	r7, sp, #0
 1607              	.LCFI75:
 1608              		.cfi_def_cfa_register 7
 1609 0006 7860     		str	r0, [r7, #4]
 1610              		.loc 2 300 68
 1611 0008 00BF     		nop
 1612 000a 0C37     		adds	r7, r7, #12
 1613              	.LCFI76:
 1614              		.cfi_def_cfa_offset 4
 1615 000c BD46     		mov	sp, r7
 1616              	.LCFI77:
 1617              		.cfi_def_cfa_register 13
 1618              		@ sp needed
 1619 000e 5DF8047B 		ldr	r7, [sp], #4
 1620              	.LCFI78:
 1621              		.cfi_restore 7
 1622              		.cfi_def_cfa_offset 0
 1623 0012 7047     		bx	lr
 1624              		.cfi_endproc
ARM GAS  /tmp/cckYcgKs.s 			page 39


 1625              	.LFE5727:
 1627              		.section	.text._Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1628              		.align	1
 1629              		.global	_Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu fpv4-sp-d16
 1635              	_Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef:
 1636              	.LFB5728:
 301:Src/interface_can.cpp **** void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan) {
 1637              		.loc 2 301 61
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 8
 1640              		@ frame_needed = 1, uses_anonymous_args = 0
 1641 0000 80B5     		push	{r7, lr}
 1642              	.LCFI79:
 1643              		.cfi_def_cfa_offset 8
 1644              		.cfi_offset 7, -8
 1645              		.cfi_offset 14, -4
 1646 0002 82B0     		sub	sp, sp, #8
 1647              	.LCFI80:
 1648              		.cfi_def_cfa_offset 16
 1649 0004 00AF     		add	r7, sp, #0
 1650              	.LCFI81:
 1651              		.cfi_def_cfa_register 7
 1652 0006 7860     		str	r0, [r7, #4]
 302:Src/interface_can.cpp ****     HAL_FDCAN_DeactivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE);
 1653              		.loc 2 302 37
 1654 0008 0121     		movs	r1, #1
 1655 000a 7868     		ldr	r0, [r7, #4]
 1656 000c FFF7FEFF 		bl	HAL_FDCAN_DeactivateNotification
 303:Src/interface_can.cpp ****     osSemaphoreRelease(sem_can);
 1657              		.loc 2 303 23
 1658 0010 044B     		ldr	r3, .L73
 1659 0012 1B68     		ldr	r3, [r3]
 1660 0014 1846     		mov	r0, r3
 1661 0016 FFF7FEFF 		bl	osSemaphoreRelease
 304:Src/interface_can.cpp **** }
 1662              		.loc 2 304 1
 1663 001a 00BF     		nop
 1664 001c 0837     		adds	r7, r7, #8
 1665              	.LCFI82:
 1666              		.cfi_def_cfa_offset 8
 1667 001e BD46     		mov	sp, r7
 1668              	.LCFI83:
 1669              		.cfi_def_cfa_register 13
 1670              		@ sp needed
 1671 0020 80BD     		pop	{r7, pc}
 1672              	.L74:
 1673 0022 00BF     		.align	2
 1674              	.L73:
 1675 0024 00000000 		.word	sem_can
 1676              		.cfi_endproc
 1677              	.LFE5728:
 1679              		.section	.text._Z29HAL_FDCAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1680              		.align	1
ARM GAS  /tmp/cckYcgKs.s 			page 40


 1681              		.global	_Z29HAL_FDCAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu fpv4-sp-d16
 1687              	_Z29HAL_FDCAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef:
 1688              	.LFB5729:
 305:Src/interface_can.cpp **** void HAL_FDCAN_RxFifo0FullCallback(FDCAN_HandleTypeDef *hfdcan) {
 1689              		.loc 2 305 65
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 8
 1692              		@ frame_needed = 1, uses_anonymous_args = 0
 1693              		@ link register save eliminated.
 1694 0000 80B4     		push	{r7}
 1695              	.LCFI84:
 1696              		.cfi_def_cfa_offset 4
 1697              		.cfi_offset 7, -4
 1698 0002 83B0     		sub	sp, sp, #12
 1699              	.LCFI85:
 1700              		.cfi_def_cfa_offset 16
 1701 0004 00AF     		add	r7, sp, #0
 1702              	.LCFI86:
 1703              		.cfi_def_cfa_register 7
 1704 0006 7860     		str	r0, [r7, #4]
 306:Src/interface_can.cpp ****     // osSemaphoreRelease(sem_can);
 307:Src/interface_can.cpp **** }
 1705              		.loc 2 307 1
 1706 0008 00BF     		nop
 1707 000a 0C37     		adds	r7, r7, #12
 1708              	.LCFI87:
 1709              		.cfi_def_cfa_offset 4
 1710 000c BD46     		mov	sp, r7
 1711              	.LCFI88:
 1712              		.cfi_def_cfa_register 13
 1713              		@ sp needed
 1714 000e 5DF8047B 		ldr	r7, [sp], #4
 1715              	.LCFI89:
 1716              		.cfi_restore 7
 1717              		.cfi_def_cfa_offset 0
 1718 0012 7047     		bx	lr
 1719              		.cfi_endproc
 1720              	.LFE5729:
 1722              		.section	.text._Z27HAL_CAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1723              		.align	1
 1724              		.global	_Z27HAL_CAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef
 1725              		.syntax unified
 1726              		.thumb
 1727              		.thumb_func
 1728              		.fpu fpv4-sp-d16
 1730              	_Z27HAL_CAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef:
 1731              	.LFB5730:
 308:Src/interface_can.cpp **** void HAL_CAN_RxFifo0FullCallback(FDCAN_HandleTypeDef *hcan) {
 1732              		.loc 2 308 61
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 8
 1735              		@ frame_needed = 1, uses_anonymous_args = 0
 1736              		@ link register save eliminated.
ARM GAS  /tmp/cckYcgKs.s 			page 41


 1737 0000 80B4     		push	{r7}
 1738              	.LCFI90:
 1739              		.cfi_def_cfa_offset 4
 1740              		.cfi_offset 7, -4
 1741 0002 83B0     		sub	sp, sp, #12
 1742              	.LCFI91:
 1743              		.cfi_def_cfa_offset 16
 1744 0004 00AF     		add	r7, sp, #0
 1745              	.LCFI92:
 1746              		.cfi_def_cfa_register 7
 1747 0006 7860     		str	r0, [r7, #4]
 309:Src/interface_can.cpp ****     // osSemaphoreRelease(sem_can);
 310:Src/interface_can.cpp **** }
 1748              		.loc 2 310 1
 1749 0008 00BF     		nop
 1750 000a 0C37     		adds	r7, r7, #12
 1751              	.LCFI93:
 1752              		.cfi_def_cfa_offset 4
 1753 000c BD46     		mov	sp, r7
 1754              	.LCFI94:
 1755              		.cfi_def_cfa_register 13
 1756              		@ sp needed
 1757 000e 5DF8047B 		ldr	r7, [sp], #4
 1758              	.LCFI95:
 1759              		.cfi_restore 7
 1760              		.cfi_def_cfa_offset 0
 1761 0012 7047     		bx	lr
 1762              		.cfi_endproc
 1763              	.LFE5730:
 1765              		.section	.text._Z25HAL_FDCAN_RxFifo1CallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1766              		.align	1
 1767              		.global	_Z25HAL_FDCAN_RxFifo1CallbackP19FDCAN_HandleTypeDef
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
 1771              		.fpu fpv4-sp-d16
 1773              	_Z25HAL_FDCAN_RxFifo1CallbackP19FDCAN_HandleTypeDef:
 1774              	.LFB5731:
 311:Src/interface_can.cpp **** void HAL_FDCAN_RxFifo1Callback(FDCAN_HandleTypeDef *hcan) {}
 1775              		.loc 2 311 59
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 8
 1778              		@ frame_needed = 1, uses_anonymous_args = 0
 1779              		@ link register save eliminated.
 1780 0000 80B4     		push	{r7}
 1781              	.LCFI96:
 1782              		.cfi_def_cfa_offset 4
 1783              		.cfi_offset 7, -4
 1784 0002 83B0     		sub	sp, sp, #12
 1785              	.LCFI97:
 1786              		.cfi_def_cfa_offset 16
 1787 0004 00AF     		add	r7, sp, #0
 1788              	.LCFI98:
 1789              		.cfi_def_cfa_register 7
 1790 0006 7860     		str	r0, [r7, #4]
 1791              		.loc 2 311 60
 1792 0008 00BF     		nop
ARM GAS  /tmp/cckYcgKs.s 			page 42


 1793 000a 0C37     		adds	r7, r7, #12
 1794              	.LCFI99:
 1795              		.cfi_def_cfa_offset 4
 1796 000c BD46     		mov	sp, r7
 1797              	.LCFI100:
 1798              		.cfi_def_cfa_register 13
 1799              		@ sp needed
 1800 000e 5DF8047B 		ldr	r7, [sp], #4
 1801              	.LCFI101:
 1802              		.cfi_restore 7
 1803              		.cfi_def_cfa_offset 0
 1804 0012 7047     		bx	lr
 1805              		.cfi_endproc
 1806              	.LFE5731:
 1808              		.section	.text._Z29HAL_FDCAN_RxFifo1FullCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1809              		.align	1
 1810              		.global	_Z29HAL_FDCAN_RxFifo1FullCallbackP19FDCAN_HandleTypeDef
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	_Z29HAL_FDCAN_RxFifo1FullCallbackP19FDCAN_HandleTypeDef:
 1817              	.LFB5732:
 312:Src/interface_can.cpp **** void HAL_FDCAN_RxFifo1FullCallback(FDCAN_HandleTypeDef *hcan) {}
 1818              		.loc 2 312 63
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 8
 1821              		@ frame_needed = 1, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
 1823 0000 80B4     		push	{r7}
 1824              	.LCFI102:
 1825              		.cfi_def_cfa_offset 4
 1826              		.cfi_offset 7, -4
 1827 0002 83B0     		sub	sp, sp, #12
 1828              	.LCFI103:
 1829              		.cfi_def_cfa_offset 16
 1830 0004 00AF     		add	r7, sp, #0
 1831              	.LCFI104:
 1832              		.cfi_def_cfa_register 7
 1833 0006 7860     		str	r0, [r7, #4]
 1834              		.loc 2 312 64
 1835 0008 00BF     		nop
 1836 000a 0C37     		adds	r7, r7, #12
 1837              	.LCFI105:
 1838              		.cfi_def_cfa_offset 4
 1839 000c BD46     		mov	sp, r7
 1840              	.LCFI106:
 1841              		.cfi_def_cfa_register 13
 1842              		@ sp needed
 1843 000e 5DF8047B 		ldr	r7, [sp], #4
 1844              	.LCFI107:
 1845              		.cfi_restore 7
 1846              		.cfi_def_cfa_offset 0
 1847 0012 7047     		bx	lr
 1848              		.cfi_endproc
 1849              	.LFE5732:
 1851              		.section	.text._Z23HAL_FDCAN_SleepCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
ARM GAS  /tmp/cckYcgKs.s 			page 43


 1852              		.align	1
 1853              		.global	_Z23HAL_FDCAN_SleepCallbackP19FDCAN_HandleTypeDef
 1854              		.syntax unified
 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu fpv4-sp-d16
 1859              	_Z23HAL_FDCAN_SleepCallbackP19FDCAN_HandleTypeDef:
 1860              	.LFB5733:
 313:Src/interface_can.cpp **** void HAL_FDCAN_SleepCallback(FDCAN_HandleTypeDef *hcan) {}
 1861              		.loc 2 313 57
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 8
 1864              		@ frame_needed = 1, uses_anonymous_args = 0
 1865              		@ link register save eliminated.
 1866 0000 80B4     		push	{r7}
 1867              	.LCFI108:
 1868              		.cfi_def_cfa_offset 4
 1869              		.cfi_offset 7, -4
 1870 0002 83B0     		sub	sp, sp, #12
 1871              	.LCFI109:
 1872              		.cfi_def_cfa_offset 16
 1873 0004 00AF     		add	r7, sp, #0
 1874              	.LCFI110:
 1875              		.cfi_def_cfa_register 7
 1876 0006 7860     		str	r0, [r7, #4]
 1877              		.loc 2 313 58
 1878 0008 00BF     		nop
 1879 000a 0C37     		adds	r7, r7, #12
 1880              	.LCFI111:
 1881              		.cfi_def_cfa_offset 4
 1882 000c BD46     		mov	sp, r7
 1883              	.LCFI112:
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 000e 5DF8047B 		ldr	r7, [sp], #4
 1887              	.LCFI113:
 1888              		.cfi_restore 7
 1889              		.cfi_def_cfa_offset 0
 1890 0012 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE5733:
 1894              		.section	.text._Z33HAL_FDCAN_WakeUpFromRxMsgCallbackP19FDCAN_HandleTypeDef,"ax",%progbits
 1895              		.align	1
 1896              		.global	_Z33HAL_FDCAN_WakeUpFromRxMsgCallbackP19FDCAN_HandleTypeDef
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	_Z33HAL_FDCAN_WakeUpFromRxMsgCallbackP19FDCAN_HandleTypeDef:
 1903              	.LFB5734:
 314:Src/interface_can.cpp **** void HAL_FDCAN_WakeUpFromRxMsgCallback(FDCAN_HandleTypeDef *hcan) {}
 1904              		.loc 2 314 67
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 8
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908              		@ link register save eliminated.
 1909 0000 80B4     		push	{r7}
ARM GAS  /tmp/cckYcgKs.s 			page 44


 1910              	.LCFI114:
 1911              		.cfi_def_cfa_offset 4
 1912              		.cfi_offset 7, -4
 1913 0002 83B0     		sub	sp, sp, #12
 1914              	.LCFI115:
 1915              		.cfi_def_cfa_offset 16
 1916 0004 00AF     		add	r7, sp, #0
 1917              	.LCFI116:
 1918              		.cfi_def_cfa_register 7
 1919 0006 7860     		str	r0, [r7, #4]
 1920              		.loc 2 314 68
 1921 0008 00BF     		nop
 1922 000a 0C37     		adds	r7, r7, #12
 1923              	.LCFI117:
 1924              		.cfi_def_cfa_offset 4
 1925 000c BD46     		mov	sp, r7
 1926              	.LCFI118:
 1927              		.cfi_def_cfa_register 13
 1928              		@ sp needed
 1929 000e 5DF8047B 		ldr	r7, [sp], #4
 1930              	.LCFI119:
 1931              		.cfi_restore 7
 1932              		.cfi_def_cfa_offset 0
 1933 0012 7047     		bx	lr
 1934              		.cfi_endproc
 1935              	.LFE5734:
 1937              		.section	.text.HAL_FDCAN_ErrorCallback,"ax",%progbits
 1938              		.align	1
 1939              		.global	HAL_FDCAN_ErrorCallback
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu fpv4-sp-d16
 1945              	HAL_FDCAN_ErrorCallback:
 1946              	.LFB5735:
 315:Src/interface_can.cpp **** void HAL_FDCAN_ErrorCallback(FDCAN_HandleTypeDef *hcan) {
 1947              		.loc 2 315 57
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 16
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 0000 80B5     		push	{r7, lr}
 1952              	.LCFI120:
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 84B0     		sub	sp, sp, #16
 1957              	.LCFI121:
 1958              		.cfi_def_cfa_offset 24
 1959 0004 00AF     		add	r7, sp, #0
 1960              	.LCFI122:
 1961              		.cfi_def_cfa_register 7
 1962 0006 7860     		str	r0, [r7, #4]
 316:Src/interface_can.cpp ****     uint32_t CounterStartValue = 0;
 1963              		.loc 2 316 14
 1964 0008 0023     		movs	r3, #0
 1965 000a FB60     		str	r3, [r7, #12]
 317:Src/interface_can.cpp ****     HAL_FDCAN_ConfigRamWatchdog(hcan, CounterStartValue);
ARM GAS  /tmp/cckYcgKs.s 			page 45


 1966              		.loc 2 317 32
 1967 000c F968     		ldr	r1, [r7, #12]
 1968 000e 7868     		ldr	r0, [r7, #4]
 1969 0010 FFF7FEFF 		bl	HAL_FDCAN_ConfigRamWatchdog
 318:Src/interface_can.cpp ****     
 319:Src/interface_can.cpp ****     // Clear error flags in ECR register
 320:Src/interface_can.cpp ****     CLEAR_BIT(hcan->Instance->ECR, (FDCAN_ECR_TEC | FDCAN_ECR_REC));
 1970              		.loc 2 320 5
 1971 0014 7B68     		ldr	r3, [r7, #4]
 1972 0016 1B68     		ldr	r3, [r3]
 1973 0018 1B6C     		ldr	r3, [r3, #64]
 1974 001a 7A68     		ldr	r2, [r7, #4]
 1975 001c 1268     		ldr	r2, [r2]
 1976 001e 23F4FF43 		bic	r3, r3, #32640
 1977 0022 23F07F03 		bic	r3, r3, #127
 1978 0026 1364     		str	r3, [r2, #64]
 321:Src/interface_can.cpp **** }
 1979              		.loc 2 321 1
 1980 0028 00BF     		nop
 1981 002a 1037     		adds	r7, r7, #16
 1982              	.LCFI123:
 1983              		.cfi_def_cfa_offset 8
 1984 002c BD46     		mov	sp, r7
 1985              	.LCFI124:
 1986              		.cfi_def_cfa_register 13
 1987              		@ sp needed
 1988 002e 80BD     		pop	{r7, pc}
 1989              		.cfi_endproc
 1990              	.LFE5735:
 1992              		.text
 1993              	.Letext0:
 1994              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 1995              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1996              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1997              		.file 6 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdint.h"
 1998              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1999              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2000              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 2001              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2002              		.file 11 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 2003              		.file 12 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2004              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2005              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 2006              		.file 15 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/basi
 2007              		.file 16 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_trai
 2008              		.file 17 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 2009              		.file 18 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debug/deb
 2010              		.file 19 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdlib"
 2011              		.file 20 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/algo
 2012              		.file 21 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/exce
 2013              		.file 22 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 2014              		.file 23 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allo
 2015              		.file 24 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 2016              		.file 25 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/functiona
 2017              		.file 26 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstring"
 2018              		.file 27 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cwchar"
 2019              		.file 28 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/clocale"
ARM GAS  /tmp/cckYcgKs.s 			page 46


 2020              		.file 29 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/char
 2021              		.file 30 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdint"
 2022              		.file 31 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/string_vi
 2023              		.file 32 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdio"
 2024              		.file 33 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allo
 2025              		.file 34 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/initializ
 2026              		.file 35 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stri
 2027              		.file 36 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/loca
 2028              		.file 37 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath"
 2029              		.file 38 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 2030              		.file 39 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/array"
 2031              		.file 40 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 2032              		.file 41 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/refw
 2033              		.file 42 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 2034              		.file 43 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pred
 2035              		.file 44 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_a
 2036              		.file 45 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/alloc
 2037              		.file 46 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 2038              		.file 47 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_types.h"
 2039              		.file 48 "<built-in>"
 2040              		.file 49 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/reent.h"
 2041              		.file 50 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/lock.h"
 2042              		.file 51 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h"
 2043              		.file 52 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/pstl/exec
 2044              		.file 53 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/string.h"
 2045              		.file 54 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stdar
 2046              		.file 55 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/wchar.h"
 2047              		.file 56 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/locale.h"
 2048              		.file 57 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 2049              		.file 58 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
 2050              		.file 59 "Inc/can_helpers.hpp"
 2051              		.file 60 "Inc/interfaces.hpp"
 2052              		.file 61 "Inc/interface_can.hpp"
 2053              		.file 62 "Inc/axis.hpp"
 2054              		.file 63 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 2055              		.file 64 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math.h"
 2056              		.file 65 "Inc/utils.hpp"
 2057              		.file 66 "Inc/can_encos.hpp"
 2058              		.file 67 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 2059              		.file 68 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 2060              		.file 69 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 2061              		.file 70 "Inc/task_timer.hpp"
 2062              		.file 71 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/ios_
 2063              		.file 72 "Inc/freertos_vars.h"
ARM GAS  /tmp/cckYcgKs.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interface_can.cpp
     /tmp/cckYcgKs.s:18     .rodata._ZN6__pstl9execution2v1L3seqE:0000000000000000 $d
     /tmp/cckYcgKs.s:21     .rodata._ZN6__pstl9execution2v1L3seqE:0000000000000000 _ZN6__pstl9execution2v1L3seqE
     /tmp/cckYcgKs.s:24     .rodata._ZN6__pstl9execution2v1L3parE:0000000000000000 $d
     /tmp/cckYcgKs.s:27     .rodata._ZN6__pstl9execution2v1L3parE:0000000000000000 _ZN6__pstl9execution2v1L3parE
     /tmp/cckYcgKs.s:30     .rodata._ZN6__pstl9execution2v1L9par_unseqE:0000000000000000 $d
     /tmp/cckYcgKs.s:33     .rodata._ZN6__pstl9execution2v1L9par_unseqE:0000000000000000 _ZN6__pstl9execution2v1L9par_unseqE
     /tmp/cckYcgKs.s:36     .rodata._ZN6__pstl9execution2v1L5unseqE:0000000000000000 $d
     /tmp/cckYcgKs.s:39     .rodata._ZN6__pstl9execution2v1L5unseqE:0000000000000000 _ZN6__pstl9execution2v1L5unseqE
     /tmp/cckYcgKs.s:42     .text._ZL20__gthread_key_deletei:0000000000000000 $t
     /tmp/cckYcgKs.s:49     .text._ZL20__gthread_key_deletei:0000000000000000 _ZL20__gthread_key_deletei
     /tmp/cckYcgKs.s:88     .rodata._ZL12one_by_sqrt3:0000000000000000 $d
     /tmp/cckYcgKs.s:91     .rodata._ZL12one_by_sqrt3:0000000000000000 _ZL12one_by_sqrt3
     /tmp/cckYcgKs.s:94     .rodata._ZL12two_by_sqrt3:0000000000000000 $d
     /tmp/cckYcgKs.s:97     .rodata._ZL12two_by_sqrt3:0000000000000000 _ZL12two_by_sqrt3
     /tmp/cckYcgKs.s:100    .rodata._ZL10sqrt3_by_2:0000000000000000 $d
     /tmp/cckYcgKs.s:103    .rodata._ZL10sqrt3_by_2:0000000000000000 _ZL10sqrt3_by_2
     /tmp/cckYcgKs.s:106    .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cckYcgKs.s:109    .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 _ZL16OFFSET_TAB_CCMRx
     /tmp/cckYcgKs.s:112    .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cckYcgKs.s:115    .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 _ZL14SHIFT_TAB_OCxx
     /tmp/cckYcgKs.s:118    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cckYcgKs.s:121    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 _ZL14SHIFT_TAB_ICxx
     /tmp/cckYcgKs.s:124    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cckYcgKs.s:127    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 _ZL14SHIFT_TAB_CCxP
     /tmp/cckYcgKs.s:130    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/cckYcgKs.s:133    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 _ZL14SHIFT_TAB_OISx
     /tmp/cckYcgKs.s:136    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/cckYcgKs.s:139    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 _ZL19USART_PRESCALER_TAB
     /tmp/cckYcgKs.s:153    .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cckYcgKs.s:156    .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 _ZL18CHANNEL_OFFSET_TAB
     /tmp/cckYcgKs.s:159    .text._ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:166    .text._ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef:0000000000000000 _ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:166    .text._ZN9ODriveCANC2ERNS_8Config_tEP19FDCAN_HandleTypeDef:0000000000000000 _ZN9ODriveCANC1ERNS_8Config_tEP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:226    .rodata:0000000000000000 $d
     /tmp/cckYcgKs.s:235    .text._ZN9ODriveCAN17can_server_threadEv:0000000000000000 $t
     /tmp/cckYcgKs.s:242    .text._ZN9ODriveCAN17can_server_threadEv:0000000000000000 _ZN9ODriveCAN17can_server_threadEv
     /tmp/cckYcgKs.s:774    .text._ZN9ODriveCAN9availableEv:0000000000000000 _ZN9ODriveCAN9availableEv
     /tmp/cckYcgKs.s:832    .text._ZN9ODriveCAN4readER13can_Message_t:0000000000000000 _ZN9ODriveCAN4readER13can_Message_t
     /tmp/cckYcgKs.s:387    .text._ZN9ODriveCAN17can_server_threadEv:00000000000000d4 $d
     /tmp/cckYcgKs.s:394    .text._ZL25can_server_thread_wrapperPv:0000000000000000 $t
     /tmp/cckYcgKs.s:400    .text._ZL25can_server_thread_wrapperPv:0000000000000000 _ZL25can_server_thread_wrapperPv
     /tmp/cckYcgKs.s:443    .text._ZN9ODriveCAN16start_can_serverEv:0000000000000000 $t
     /tmp/cckYcgKs.s:450    .text._ZN9ODriveCAN16start_can_serverEv:0000000000000000 _ZN9ODriveCAN16start_can_serverEv
     /tmp/cckYcgKs.s:1000   .text._ZN9ODriveCAN13set_baud_rateEm:0000000000000000 _ZN9ODriveCAN13set_baud_rateEm
     /tmp/cckYcgKs.s:590    .text._ZN9ODriveCAN16start_can_serverEv:00000000000000c0 $d
     /tmp/cckYcgKs.s:597    .text._ZN9ODriveCAN5writeER13can_Message_t:0000000000000000 $t
     /tmp/cckYcgKs.s:604    .text._ZN9ODriveCAN5writeER13can_Message_t:0000000000000000 _ZN9ODriveCAN5writeER13can_Message_t
     /tmp/cckYcgKs.s:767    .text._ZN9ODriveCAN9availableEv:0000000000000000 $t
     /tmp/cckYcgKs.s:825    .text._ZN9ODriveCAN4readER13can_Message_t:0000000000000000 $t
     /tmp/cckYcgKs.s:993    .text._ZN9ODriveCAN13set_baud_rateEm:0000000000000000 $t
     /tmp/cckYcgKs.s:1222   .text._ZN9ODriveCAN10reinit_canEv:0000000000000000 _ZN9ODriveCAN10reinit_canEv
     /tmp/cckYcgKs.s:1207   .text._ZN9ODriveCAN13set_baud_rateEm:0000000000000108 $d
     /tmp/cckYcgKs.s:1215   .text._ZN9ODriveCAN10reinit_canEv:0000000000000000 $t
     /tmp/cckYcgKs.s:1351   .text._ZN9ODriveCAN10reinit_canEv:00000000000000a8 $d
     /tmp/cckYcgKs.s:1356   .text._ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE:0000000000000000 $t
ARM GAS  /tmp/cckYcgKs.s 			page 48


     /tmp/cckYcgKs.s:1363   .text._ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE:0000000000000000 _ZN9ODriveCAN9set_errorEN10ODriveIntf7CanIntf5ErrorE
     /tmp/cckYcgKs.s:1405   .text._ZN9ODriveCAN14send_heartbeatEP4Axis:0000000000000000 $t
     /tmp/cckYcgKs.s:1412   .text._ZN9ODriveCAN14send_heartbeatEP4Axis:0000000000000000 _ZN9ODriveCAN14send_heartbeatEP4Axis
     /tmp/cckYcgKs.s:1499   .text.HAL_FDCAN_TxFifoEmptyCallback:0000000000000000 $t
     /tmp/cckYcgKs.s:1506   .text.HAL_FDCAN_TxFifoEmptyCallback:0000000000000000 HAL_FDCAN_TxFifoEmptyCallback
     /tmp/cckYcgKs.s:1542   .text._Z34HAL_FDCAN_TxBufferCompleteCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1549   .text._Z34HAL_FDCAN_TxBufferCompleteCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z34HAL_FDCAN_TxBufferCompleteCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1585   .text._Z31HAL_FDCAN_TxBufferAbortCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1592   .text._Z31HAL_FDCAN_TxBufferAbortCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z31HAL_FDCAN_TxBufferAbortCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1628   .text._Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1635   .text._Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1675   .text._Z25HAL_FDCAN_RxFifo0CallbackP19FDCAN_HandleTypeDef:0000000000000024 $d
     /tmp/cckYcgKs.s:1680   .text._Z29HAL_FDCAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1687   .text._Z29HAL_FDCAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z29HAL_FDCAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1723   .text._Z27HAL_CAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1730   .text._Z27HAL_CAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z27HAL_CAN_RxFifo0FullCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1766   .text._Z25HAL_FDCAN_RxFifo1CallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1773   .text._Z25HAL_FDCAN_RxFifo1CallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z25HAL_FDCAN_RxFifo1CallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1809   .text._Z29HAL_FDCAN_RxFifo1FullCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1816   .text._Z29HAL_FDCAN_RxFifo1FullCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z29HAL_FDCAN_RxFifo1FullCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1852   .text._Z23HAL_FDCAN_SleepCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1859   .text._Z23HAL_FDCAN_SleepCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z23HAL_FDCAN_SleepCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1895   .text._Z33HAL_FDCAN_WakeUpFromRxMsgCallbackP19FDCAN_HandleTypeDef:0000000000000000 $t
     /tmp/cckYcgKs.s:1902   .text._Z33HAL_FDCAN_WakeUpFromRxMsgCallbackP19FDCAN_HandleTypeDef:0000000000000000 _Z33HAL_FDCAN_WakeUpFromRxMsgCallbackP19FDCAN_HandleTypeDef
     /tmp/cckYcgKs.s:1938   .text.HAL_FDCAN_ErrorCallback:0000000000000000 $t
     /tmp/cckYcgKs.s:1945   .text.HAL_FDCAN_ErrorCallback:0000000000000000 HAL_FDCAN_ErrorCallback

UNDEFINED SYMBOLS
HAL_FDCAN_GetError
osSemaphoreWait
_ZN8CANEncos18handle_can_messageER13can_Message_t
HAL_FDCAN_ActivateNotification
HAL_FDCAN_Stop
HAL_FDCAN_Start
sem_can
HAL_FDCAN_Init
HAL_FDCAN_ConfigGlobalFilter
osThreadCreate
HAL_FDCAN_GetTxFifoFreeLevel
HAL_FDCAN_AddMessageToTxFifoQ
HAL_FDCAN_GetRxFifoFillLevel
HAL_FDCAN_GetRxMessage
osKernelSysTick
HAL_FDCAN_DeactivateNotification
osSemaphoreRelease
HAL_FDCAN_ConfigRamWatchdog
