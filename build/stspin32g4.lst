ARM GAS  /tmp/ccIRHRej.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stspin32g4.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_I2C_IsActiveFlag_TXIS,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_I2C_IsActiveFlag_TXIS:
  26              	.LFB216:
  27              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @file    stm32g4xx_ll_i2c.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief   Header file of I2C LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #ifndef STM32G4xx_LL_I2C_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define STM32G4xx_LL_I2C_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
ARM GAS  /tmp/ccIRHRej.s 			page 2


  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #if defined (I2C1) || defined (I2C2) || defined (I2C3) || defined (I2C4)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL I2C
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Constants I2C Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Macros I2C Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Exported types ------------------------------------------------------------*/
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_ES_INIT I2C Exported Init structure
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** typedef struct
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t PeripheralMode;      /*!< Specifies the peripheral mode.
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_PERIPHERAL_MOD
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_SetMode(). */
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t Timing;              /*!< Specifies the SDA setup, hold time and the SCL high, low perio
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter must be set by referring to the STM32CubeMX Too
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      the helper macro @ref __LL_I2C_CONVERT_TIMINGS().
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_SetTiming(). */
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t AnalogFilter;        /*!< Enables or disables analog noise filter.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_ANALOGFILTER_S
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_EnableAnalogFilter() or LL_I2C_DisableAnalogFilter
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t DigitalFilter;       /*!< Configures the digital noise filter.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter can be a number between Min_Data = 0x00 and Max
ARM GAS  /tmp/ccIRHRej.s 			page 3


  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_SetDigitalFilter(). */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t OwnAddress1;         /*!< Specifies the device own address 1.
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter must be a value between Min_Data = 0x00 and Max
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t TypeAcknowledge;     /*!< Specifies the ACKnowledge or Non ACKnowledge condition after t
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      match code or next received byte.
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_I2C_ACKNOWLEDG
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_AcknowledgeNextData(). */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t OwnAddrSize;         /*!< Specifies the device own address 1 size (7-bit or 10-bit).
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_OWNADDRESS1.
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** } LL_I2C_InitTypeDef;
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Exported constants --------------------------------------------------------*/
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Constants I2C Exported Constants
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_CLEAR_FLAG Clear Flags Defines
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_WriteReg function
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_ADDRCF                   I2C_ICR_ADDRCF          /*!< Address Matched flag   */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_NACKCF                   I2C_ICR_NACKCF          /*!< Not Acknowledge flag   */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_STOPCF                   I2C_ICR_STOPCF          /*!< Stop detection flag    */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_BERRCF                   I2C_ICR_BERRCF          /*!< Bus error flag         */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_ARLOCF                   I2C_ICR_ARLOCF          /*!< Arbitration Lost flag  */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_OVRCF                    I2C_ICR_OVRCF           /*!< Overrun/Underrun flag  */
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_PECCF                    I2C_ICR_PECCF           /*!< PEC error flag         */
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_TIMOUTCF                 I2C_ICR_TIMOUTCF        /*!< Timeout detection flag */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ICR_ALERTCF                  I2C_ICR_ALERTCF         /*!< Alert flag             */
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GET_FLAG Get Flags Defines
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_ReadReg function
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_TXE                      I2C_ISR_TXE             /*!< Transmit data register emp
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_TXIS                     I2C_ISR_TXIS            /*!< Transmit interrupt status 
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_RXNE                     I2C_ISR_RXNE            /*!< Receive data register not 
ARM GAS  /tmp/ccIRHRej.s 			page 4


 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_ADDR                     I2C_ISR_ADDR            /*!< Address matched (slave mod
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_NACKF                    I2C_ISR_NACKF           /*!< Not Acknowledge received f
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_STOPF                    I2C_ISR_STOPF           /*!< Stop detection flag       
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_TC                       I2C_ISR_TC              /*!< Transfer Complete (master 
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_TCR                      I2C_ISR_TCR             /*!< Transfer Complete Reload  
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_BERR                     I2C_ISR_BERR            /*!< Bus error                 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_ARLO                     I2C_ISR_ARLO            /*!< Arbitration lost          
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_OVR                      I2C_ISR_OVR             /*!< Overrun/Underrun (slave mo
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_PECERR                   I2C_ISR_PECERR          /*!< PEC Error in reception (SM
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_TIMEOUT                  I2C_ISR_TIMEOUT         /*!< Timeout detection flag (SM
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_ALERT                    I2C_ISR_ALERT           /*!< SMBus alert (SMBus mode)  
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ISR_BUSY                     I2C_ISR_BUSY            /*!< Bus busy                  
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_IT IT Defines
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief    IT defines which can be used with LL_I2C_ReadReg and  LL_I2C_WriteReg functions
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_TXIE                     I2C_CR1_TXIE            /*!< TX Interrupt enable       
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_RXIE                     I2C_CR1_RXIE            /*!< RX Interrupt enable       
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_ADDRIE                   I2C_CR1_ADDRIE          /*!< Address match Interrupt en
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_NACKIE                   I2C_CR1_NACKIE          /*!< Not acknowledge received I
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_STOPIE                   I2C_CR1_STOPIE          /*!< STOP detection Interrupt e
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_TCIE                     I2C_CR1_TCIE            /*!< Transfer Complete interrup
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_CR1_ERRIE                    I2C_CR1_ERRIE           /*!< Error interrupts enable   
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_PERIPHERAL_MODE Peripheral Mode
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_I2C                    0x00000000U              /*!< I2C Master or Slave mode  
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_HOST             I2C_CR1_SMBHEN           /*!< SMBus Host address acknowl
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE           0x00000000U              /*!< SMBus Device default mode
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                          (Default address not ackno
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE_ARP       I2C_CR1_SMBDEN           /*!< SMBus Device Default addre
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ANALOGFILTER_SELECTION Analog Filter Selection
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_ENABLE          0x00000000U             /*!< Analog filter is enabled. 
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_DISABLE         I2C_CR1_ANFOFF          /*!< Analog filter is disabled.
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRESSING_MODE Master Addressing Mode
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_7BIT         0x00000000U              /*!< Master operates in 7-bit 
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_10BIT        I2C_CR2_ADD10            /*!< Master operates in 10-bit
ARM GAS  /tmp/ccIRHRej.s 			page 5


 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS1 Own Address 1 Length
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_7BIT             0x00000000U             /*!< Own address 1 is a 7-bit a
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_10BIT            I2C_OAR1_OA1MODE        /*!< Own address 1 is a 10-bit 
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS2 Own Address 2 Masks
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_NOMASK           I2C_OAR2_OA2NOMASK      /*!< Own Address2 No mask.     
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK01           I2C_OAR2_OA2MASK01      /*!< Only Address2 bits[7:2] ar
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK02           I2C_OAR2_OA2MASK02      /*!< Only Address2 bits[7:3] ar
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK03           I2C_OAR2_OA2MASK03      /*!< Only Address2 bits[7:4] ar
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK04           I2C_OAR2_OA2MASK04      /*!< Only Address2 bits[7:5] ar
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK05           I2C_OAR2_OA2MASK05      /*!< Only Address2 bits[7:6] ar
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK06           I2C_OAR2_OA2MASK06      /*!< Only Address2 bits[7] are 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK07           I2C_OAR2_OA2MASK07      /*!< No comparison is done.
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                          All Address2 are acknowled
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_I2C_ACKNOWLEDGE Acknowledge Generation
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ACK                          0x00000000U              /*!< ACK is sent after current
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_NACK                         I2C_CR2_NACK             /*!< NACK is sent after curren
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRSLAVE Slave Address Length
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_7BIT               0x00000000U              /*!< Slave Address in 7-bit. *
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_10BIT              I2C_CR2_ADD10            /*!< Slave Address in 10-bit.*
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_REQUEST Transfer Request Direction
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_REQUEST_WRITE                0x00000000U              /*!< Master request a write tr
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_REQUEST_READ                 I2C_CR2_RD_WRN           /*!< Master request a read tra
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_MODE Transfer End Mode
ARM GAS  /tmp/ccIRHRej.s 			page 6


 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_RELOAD                  I2C_CR2_RELOAD           /*!< Enable I2C Reload mode.  
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_AUTOEND                 I2C_CR2_AUTOEND          /*!< Enable I2C Automatic end 
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           with no HW PEC comparison
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SOFTEND                 0x00000000U              /*!< Enable I2C Software end m
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           with no HW PEC comparison
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_RELOAD            LL_I2C_MODE_RELOAD       /*!< Enable SMBUS Automatic en
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC    LL_I2C_MODE_AUTOEND      /*!< Enable SMBUS Automatic en
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC    LL_I2C_MODE_SOFTEND      /*!< Enable SMBUS Software end
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_AUTOEND | I2C_CR2_PECBYTE)
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Enable SMBUS Automatic end mode with HW PEC comparison.   */
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_SOFTEND | I2C_CR2_PECBYTE)
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Enable SMBUS Software end mode with HW PEC comparison.    */
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GENERATE Start And Stop Generation
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_NOSTARTSTOP         0x00000000U
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Don't Generate Stop and Start condition. */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_STOP                (uint32_t)(0x80000000U | I2C_CR2_STOP)
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Stop condition (Size should be set to 0).      */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_START_READ          (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Start for read request. */
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_START_WRITE         (uint32_t)(0x80000000U | I2C_CR2_START)
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Start for write request. */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_READ   (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Restart for read request, slave 7Bit address.  */
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_WRITE  (uint32_t)(0x80000000U | I2C_CR2_START)
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Restart for write request, slave 7Bit address. */
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_READ  (uint32_t)(0x80000000U | I2C_CR2_START | \
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                        I2C_CR2_RD_WRN | I2C_CR2_HEAD10R)
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Restart for read request, slave 10Bit address. */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_WRITE (uint32_t)(0x80000000U | I2C_CR2_START)
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /*!< Generate Restart for write request, slave 10Bit address.*/
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DIRECTION Read Write Direction
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_DIRECTION_WRITE              0x00000000U              /*!< Write transfer request by
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           slave enters receiver mod
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_DIRECTION_READ               I2C_ISR_DIR              /*!< Read transfer request by 
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           slave enters transmitter 
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DMA_REG_DATA DMA Register Data
ARM GAS  /tmp/ccIRHRej.s 			page 7


 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_TRANSMIT        0x00000000U              /*!< Get address of data regis
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           transmission */
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_RECEIVE         0x00000001U              /*!< Get address of data regis
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           reception */
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUTA_MODE SMBus TimeoutA Mode SCL SDA Timeout
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW      0x00000000U          /*!< TimeoutA is used to detec
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           SCL low level timeout.   
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH I2C_TIMEOUTR_TIDLE   /*!< TimeoutA is used to detec
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                           both SCL and SDA high lev
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUT_SELECTION SMBus Timeout Selection
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA               I2C_TIMEOUTR_TIMOUTEN                 /*!< TimeoutA ena
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTB               I2C_TIMEOUTR_TEXTEN                   /*!< TimeoutB (ex
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                                                        enable bit  
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_SMBUS_ALL_TIMEOUT            (uint32_t)(I2C_TIMEOUTR_TIMOUTEN | \
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                        I2C_TIMEOUTR_TEXTEN)       /*!< TimeoutA and
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** (extended clock) enable bits */
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Exported macro ------------------------------------------------------------*/
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Macros I2C Exported Macros
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EM_WRITE_READ Common Write and read registers Macros
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Write a value in I2C register
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __REG__ Register to be written
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __VALUE__ Value to be written in the register
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
ARM GAS  /tmp/ccIRHRej.s 			page 8


 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Read a value in I2C register
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __REG__ Register to be read
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Register value
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define LL_I2C_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EM_CONVERT_TIMINGS Convert SDA SCL timings
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __PRESCALER__ This parameter must be a value between  Min_Data=0 and Max_Data=0xF.
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __SETUP_TIME__ This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                            (tscldel = (SCLDEL+1)xtpresc)
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __HOLD_TIME__  This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                            (tsdadel = SDADELxtpresc)
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __SCLH_PERIOD__ This parameter must be a value between Min_Data=0 and Max_Data=0xFF.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                             (tsclh = (SCLH+1)xtpresc)
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  __SCLL_PERIOD__ This parameter must be a value between  Min_Data=0 and Max_Data=0xFF.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                             (tscll = (SCLL+1)xtpresc)
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFFFFFFF
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** #define __LL_I2C_CONVERT_TIMINGS(__PRESCALER__, __SETUP_TIME__, __HOLD_TIME__, __SCLH_PERIOD__, __S
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   ((((uint32_t)(__PRESCALER__)    << I2C_TIMINGR_PRESC_Pos)  & I2C_TIMINGR_PRESC)   | \
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****    (((uint32_t)(__SETUP_TIME__)   << I2C_TIMINGR_SCLDEL_Pos) & I2C_TIMINGR_SCLDEL)  | \
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****    (((uint32_t)(__HOLD_TIME__)    << I2C_TIMINGR_SDADEL_Pos) & I2C_TIMINGR_SDADEL)  | \
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****    (((uint32_t)(__SCLH_PERIOD__)  << I2C_TIMINGR_SCLH_Pos)   & I2C_TIMINGR_SCLH)    | \
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****    (((uint32_t)(__SCLL_PERIOD__)  << I2C_TIMINGR_SCLL_Pos)   & I2C_TIMINGR_SCLL))
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /* Exported functions --------------------------------------------------------*/
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Functions I2C Exported Functions
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Configuration Configuration
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable I2C peripheral (PE = 1).
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Enable
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Enable(I2C_TypeDef *I2Cx)
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
ARM GAS  /tmp/ccIRHRej.s 			page 9


 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PE);
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable I2C peripheral (PE = 0).
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   When PE = 0, the I2C SCL and SDA lines are released.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Internal state machines and status bits are put back to their reset value.
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         When cleared, PE must be kept low for at least 3 APB clock cycles.
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Disable
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Disable(I2C_TypeDef *I2Cx)
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PE);
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if the I2C peripheral is enabled or disabled.
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_IsEnabled
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabled(const I2C_TypeDef *I2Cx)
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PE) == (I2C_CR1_PE)) ? 1UL : 0UL);
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure Noise Filters (Analog and Digital).
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         The filters can only be programmed when the I2C is disabled (PE = 0).
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_ConfigFilters\n
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR1          DNF           LL_I2C_ConfigFilters
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  AnalogFilter This parameter can be one of the following values:
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_ENABLE
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_DISABLE
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigFilters(I2C_TypeDef *I2Cx, uint32_t AnalogFilter, uint32_t Digita
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_ANFOFF | I2C_CR1_DNF, AnalogFilter | (DigitalFilter << I2C_CR1_DNF_
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure Digital Noise Filter.
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This filter can only be programmed when the I2C is disabled (PE = 0).
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_SetDigitalFilter
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
ARM GAS  /tmp/ccIRHRej.s 			page 10


 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetDigitalFilter(I2C_TypeDef *I2Cx, uint32_t DigitalFilter)
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_DNF, DigitalFilter << I2C_CR1_DNF_Pos);
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the current Digital Noise Filter configuration.
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_GetDigitalFilter
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDigitalFilter(const I2C_TypeDef *I2Cx)
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_DNF) >> I2C_CR1_DNF_Pos);
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Analog Noise Filter.
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_EnableAnalogFilter
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAnalogFilter(I2C_TypeDef *I2Cx)
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Analog Noise Filter.
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_DisableAnalogFilter
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAnalogFilter(I2C_TypeDef *I2Cx)
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Analog Noise Filter is enabled or disabled.
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_IsEnabledAnalogFilter
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAnalogFilter(const I2C_TypeDef *I2Cx)
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ANFOFF) != (I2C_CR1_ANFOFF)) ? 1UL : 0UL);
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable DMA transmission requests.
ARM GAS  /tmp/ccIRHRej.s 			page 11


 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_EnableDMAReq_TX
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_TX(I2C_TypeDef *I2Cx)
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable DMA transmission requests.
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_DisableDMAReq_TX
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_TX(I2C_TypeDef *I2Cx)
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if DMA transmission requests are enabled or disabled.
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_IsEnabledDMAReq_TX
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_TX(const I2C_TypeDef *I2Cx)
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN) == (I2C_CR1_TXDMAEN)) ? 1UL : 0UL);
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable DMA reception requests.
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_EnableDMAReq_RX
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_RX(I2C_TypeDef *I2Cx)
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable DMA reception requests.
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_DisableDMAReq_RX
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_RX(I2C_TypeDef *I2Cx)
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if DMA reception requests are enabled or disabled.
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_IsEnabledDMAReq_RX
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /tmp/ccIRHRej.s 			page 12


 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_RX(const I2C_TypeDef *I2Cx)
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN) == (I2C_CR1_RXDMAEN)) ? 1UL : 0UL);
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the data register address used for DMA transfer
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_DMA_GetRegAddr\n
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         RXDR         RXDATA        LL_I2C_DMA_GetRegAddr
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  Direction This parameter can be one of the following values:
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_TRANSMIT
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_RECEIVE
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Address of data register
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_DMA_GetRegAddr(const I2C_TypeDef *I2Cx, uint32_t Direction)
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t data_reg_addr;
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   if (Direction == LL_I2C_DMA_REG_DATA_TRANSMIT)
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   {
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****     /* return address of TXDR register */
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->TXDR);
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   }
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   else
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   {
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****     /* return address of RXDR register */
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->RXDR);
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   }
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return data_reg_addr;
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Clock stretching.
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_EnableClockStretching
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableClockStretching(I2C_TypeDef *I2Cx)
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Clock stretching.
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_DisableClockStretching
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableClockStretching(I2C_TypeDef *I2Cx)
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
ARM GAS  /tmp/ccIRHRej.s 			page 13


 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Clock stretching is enabled or disabled.
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_IsEnabledClockStretching
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledClockStretching(const I2C_TypeDef *I2Cx)
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH) != (I2C_CR1_NOSTRETCH)) ? 1UL : 0UL);
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable hardware byte control in slave mode.
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_EnableSlaveByteControl
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSlaveByteControl(I2C_TypeDef *I2Cx)
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_SBC);
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable hardware byte control in slave mode.
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_DisableSlaveByteControl
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSlaveByteControl(I2C_TypeDef *I2Cx)
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_SBC);
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if hardware byte control in slave mode is enabled or disabled.
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_IsEnabledSlaveByteControl
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSlaveByteControl(const I2C_TypeDef *I2Cx)
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_SBC) == (I2C_CR1_SBC)) ? 1UL : 0UL);
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Wakeup from STOP.
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This bit can only be programmed when Digital Filter is disabled.
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_EnableWakeUpFromStop
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableWakeUpFromStop(I2C_TypeDef *I2Cx)
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
ARM GAS  /tmp/ccIRHRej.s 			page 14


 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Wakeup from STOP.
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_DisableWakeUpFromStop
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableWakeUpFromStop(I2C_TypeDef *I2Cx)
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Wakeup from STOP is enabled or disabled.
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_IsEnabledWakeUpFromStop
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledWakeUpFromStop(const I2C_TypeDef *I2Cx)
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_WUPEN) == (I2C_CR1_WUPEN)) ? 1UL : 0UL);
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable General Call.
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   When enabled the Address 0x00 is ACKed.
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_EnableGeneralCall
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableGeneralCall(I2C_TypeDef *I2Cx)
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable General Call.
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   When disabled the Address 0x00 is NACKed.
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_DisableGeneralCall
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableGeneralCall(I2C_TypeDef *I2Cx)
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if General Call is enabled or disabled.
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_IsEnabledGeneralCall
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /tmp/ccIRHRej.s 			page 15


 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledGeneralCall(const I2C_TypeDef *I2Cx)
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_GCEN) == (I2C_CR1_GCEN)) ? 1UL : 0UL);
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the Master to operate in 7-bit or 10-bit addressing mode.
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Changing this bit is not allowed, when the START bit is set.
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_SetMasterAddressingMode
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  AddressingMode This parameter can be one of the following values:
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMasterAddressingMode(I2C_TypeDef *I2Cx, uint32_t AddressingMode)
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_ADD10, AddressingMode);
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the Master addressing mode.
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_GetMasterAddressingMode
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMasterAddressingMode(const I2C_TypeDef *I2Cx)
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_ADD10));
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Set the Own Address1.
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR1         OA1           LL_I2C_SetOwnAddress1\n
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         OAR1         OA1MODE       LL_I2C_SetOwnAddress1
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  OwnAddress1 This parameter must be a value between Min_Data=0 and Max_Data=0x3FF.
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  OwnAddrSize This parameter can be one of the following values:
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_7BIT
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_10BIT
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress1(I2C_TypeDef *I2Cx, uint32_t OwnAddress1, uint32_t OwnAdd
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR1, I2C_OAR1_OA1 | I2C_OAR1_OA1MODE, OwnAddress1 | OwnAddrSize);
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address1 match address.
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_EnableOwnAddress1
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
ARM GAS  /tmp/ccIRHRej.s 			page 16


 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress1(I2C_TypeDef *I2Cx)
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable acknowledge on Own Address1 match address.
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_DisableOwnAddress1
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress1(I2C_TypeDef *I2Cx)
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_IsEnabledOwnAddress1
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress1(const I2C_TypeDef *I2Cx)
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN) == (I2C_OAR1_OA1EN)) ? 1UL : 0UL);
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Set the 7bits Own Address2.
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This action has no effect if own address2 is enabled.
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR2         OA2           LL_I2C_SetOwnAddress2\n
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         OAR2         OA2MSK        LL_I2C_SetOwnAddress2
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  OwnAddress2 Value between Min_Data=0 and Max_Data=0x7F.
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  OwnAddrMask This parameter can be one of the following values:
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_NOMASK
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK01
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK02
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK03
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK04
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK05
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK06
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK07
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress2(I2C_TypeDef *I2Cx, uint32_t OwnAddress2, uint32_t OwnAdd
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR2, I2C_OAR2_OA2 | I2C_OAR2_OA2MSK, OwnAddress2 | OwnAddrMask);
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address2 match address.
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_EnableOwnAddress2
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress2(I2C_TypeDef *I2Cx)
ARM GAS  /tmp/ccIRHRej.s 			page 17


 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable  acknowledge on Own Address2 match address.
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_DisableOwnAddress2
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress2(I2C_TypeDef *I2Cx)
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_IsEnabledOwnAddress2
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress2(const I2C_TypeDef *I2Cx)
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN) == (I2C_OAR2_OA2EN)) ? 1UL : 0UL);
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMINGR      TIMINGR       LL_I2C_SetTiming
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  Timing This parameter must be a value between Min_Data=0 and Max_Data=0xFFFFFFFF.
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This parameter is computed with the STM32CubeMX Tool.
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTiming(I2C_TypeDef *I2Cx, uint32_t Timing)
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMINGR, Timing);
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the Timing Prescaler setting.
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMINGR      PRESC         LL_I2C_GetTimingPrescaler
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTimingPrescaler(const I2C_TypeDef *I2Cx)
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_PRESC) >> I2C_TIMINGR_PRESC_Pos);
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SCL low period setting.
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLL          LL_I2C_GetClockLowPeriod
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
ARM GAS  /tmp/ccIRHRej.s 			page 18


 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockLowPeriod(const I2C_TypeDef *I2Cx)
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLL) >> I2C_TIMINGR_SCLL_Pos);
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SCL high period setting.
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLH          LL_I2C_GetClockHighPeriod
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockHighPeriod(const I2C_TypeDef *I2Cx)
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLH) >> I2C_TIMINGR_SCLH_Pos);
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SDA hold time.
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMINGR      SDADEL        LL_I2C_GetDataHoldTime
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataHoldTime(const I2C_TypeDef *I2Cx)
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SDADEL) >> I2C_TIMINGR_SDADEL_Pos);
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SDA setup time.
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLDEL        LL_I2C_GetDataSetupTime
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataSetupTime(const I2C_TypeDef *I2Cx)
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLDEL) >> I2C_TIMINGR_SCLDEL_Pos);
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure peripheral mode.
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_SetMode\n
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_SetMode
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  PeripheralMode This parameter can be one of the following values:
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMode(I2C_TypeDef *I2Cx, uint32_t PeripheralMode)
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN, PeripheralMode);
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
ARM GAS  /tmp/ccIRHRej.s 			page 19


1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get peripheral mode.
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_GetMode\n
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_GetMode
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMode(const I2C_TypeDef *I2Cx)
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN));
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable SMBus alert (Host or Device mode)
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   SMBus Device mode:
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         - SMBus Alert pin is drived low and
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is enabled.
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus Host mode:
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         - SMBus Alert pin management is supported.
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_EnableSMBusAlert
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusAlert(I2C_TypeDef *I2Cx)
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable SMBus alert (Host or Device mode)
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   SMBus Device mode:
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         - SMBus Alert pin is not drived (can be used as a standard GPIO) and
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is disabled.
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus Host mode:
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         - SMBus Alert pin management is not supported.
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_DisableSMBusAlert
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusAlert(I2C_TypeDef *I2Cx)
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if SMBus alert (Host or Device mode) is enabled or disabled.
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
ARM GAS  /tmp/ccIRHRej.s 			page 20


1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_IsEnabledSMBusAlert
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusAlert(const I2C_TypeDef *I2Cx)
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ALERTEN) == (I2C_CR1_ALERTEN)) ? 1UL : 0UL);
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable SMBus Packet Error Calculation (PEC).
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_EnableSMBusPEC
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPEC(I2C_TypeDef *I2Cx)
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable SMBus Packet Error Calculation (PEC).
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_DisableSMBusPEC
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusPEC(I2C_TypeDef *I2Cx)
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if SMBus Packet Error Calculation (PEC) is enabled or disabled.
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_IsEnabledSMBusPEC
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPEC(const I2C_TypeDef *I2Cx)
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PECEN) == (I2C_CR1_PECEN)) ? 1UL : 0UL);
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the SMBus Clock Timeout.
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This configuration can only be programmed when associated Timeout is disabled (TimeoutA
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_ConfigSMBusTimeout\n
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         TIMEOUTR     TIDLE         LL_I2C_ConfigSMBusTimeout\n
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         TIMEOUTR     TIMEOUTB      LL_I2C_ConfigSMBusTimeout
ARM GAS  /tmp/ccIRHRej.s 			page 21


1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TimeoutB
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t TimeoutA, uint32_t Timeo
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                                uint32_t TimeoutB)
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA | I2C_TIMEOUTR_TIDLE | I2C_TIMEOUTR_TIMEOUTB,
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****              TimeoutA | TimeoutAMode | (TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos));
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the SMBus Clock TimeoutA (SCL low timeout or SCL and SDA high timeout depends
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutA is disabled.
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_SetSMBusTimeoutA
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutA(I2C_TypeDef *I2Cx, uint32_t TimeoutA)
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutA);
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA setting.
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_GetSMBusTimeoutA
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutA(const I2C_TypeDef *I2Cx)
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA));
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Set the SMBus Clock TimeoutA mode.
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This bit can only be programmed when TimeoutA is disabled.
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_SetSMBusTimeoutAMode
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutAMode(I2C_TypeDef *I2Cx, uint32_t TimeoutAMode)
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
ARM GAS  /tmp/ccIRHRej.s 			page 22


1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutAMode);
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA mode.
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_GetSMBusTimeoutAMode
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutAMode(const I2C_TypeDef *I2Cx)
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIDLE));
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the SMBus Extended Cumulative Clock TimeoutB (Master or Slave mode).
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutB is disabled.
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_SetSMBusTimeoutB
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TimeoutB This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutB(I2C_TypeDef *I2Cx, uint32_t TimeoutB)
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos);
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SMBus Extended Cumulative Clock TimeoutB setting.
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_GetSMBusTimeoutB
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutB(const I2C_TypeDef *I2Cx)
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTB) >> I2C_TIMEOUTR_TIMEOUTB_Pos);
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable the SMBus Clock Timeout.
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_EnableSMBusTimeout\n
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_EnableSMBusTimeout
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
ARM GAS  /tmp/ccIRHRej.s 			page 23


1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable the SMBus Clock Timeout.
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_DisableSMBusTimeout\n
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_DisableSMBusTimeout
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if the SMBus Clock Timeout is enabled or disabled.
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_IsEnabledSMBusTimeout\n
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_IsEnabledSMBusTimeout
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusTimeout(const I2C_TypeDef *I2Cx, uint32_t ClockTimeou
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->TIMEOUTR, (I2C_TIMEOUTR_TIMOUTEN | I2C_TIMEOUTR_TEXTEN)) == \
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****            (ClockTimeout)) ? 1UL : 0UL);
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_IT_Management IT_Management
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable TXIS interrupt.
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_EnableIT_TX
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
ARM GAS  /tmp/ccIRHRej.s 			page 24


1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TX(I2C_TypeDef *I2Cx)
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable TXIS interrupt.
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_DisableIT_TX
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TX(I2C_TypeDef *I2Cx)
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if the TXIS Interrupt is enabled or disabled.
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_IsEnabledIT_TX
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TX(const I2C_TypeDef *I2Cx)
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXIE) == (I2C_CR1_TXIE)) ? 1UL : 0UL);
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable RXNE interrupt.
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_EnableIT_RX
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_RX(I2C_TypeDef *I2Cx)
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable RXNE interrupt.
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_DisableIT_RX
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_RX(I2C_TypeDef *I2Cx)
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if the RXNE Interrupt is enabled or disabled.
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_IsEnabledIT_RX
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_RX(const I2C_TypeDef *I2Cx)
ARM GAS  /tmp/ccIRHRej.s 			page 25


1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXIE) == (I2C_CR1_RXIE)) ? 1UL : 0UL);
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Address match interrupt (slave mode only).
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_EnableIT_ADDR
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ADDR(I2C_TypeDef *I2Cx)
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Address match interrupt (slave mode only).
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_DisableIT_ADDR
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ADDR(I2C_TypeDef *I2Cx)
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Address match interrupt is enabled or disabled.
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_IsEnabledIT_ADDR
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ADDR(const I2C_TypeDef *I2Cx)
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ADDRIE) == (I2C_CR1_ADDRIE)) ? 1UL : 0UL);
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Not acknowledge received interrupt.
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_EnableIT_NACK
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_NACK(I2C_TypeDef *I2Cx)
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Not acknowledge received interrupt.
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_DisableIT_NACK
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_NACK(I2C_TypeDef *I2Cx)
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
ARM GAS  /tmp/ccIRHRej.s 			page 26


1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Not acknowledge received interrupt is enabled or disabled.
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_IsEnabledIT_NACK
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_NACK(const I2C_TypeDef *I2Cx)
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NACKIE) == (I2C_CR1_NACKIE)) ? 1UL : 0UL);
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable STOP detection interrupt.
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_EnableIT_STOP
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_STOP(I2C_TypeDef *I2Cx)
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable STOP detection interrupt.
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_DisableIT_STOP
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_STOP(I2C_TypeDef *I2Cx)
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if STOP detection interrupt is enabled or disabled.
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_IsEnabledIT_STOP
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_STOP(const I2C_TypeDef *I2Cx)
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_STOPIE) == (I2C_CR1_STOPIE)) ? 1UL : 0UL);
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Transfer Complete interrupt.
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Transfer Complete (TC)
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_EnableIT_TC
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TC(I2C_TypeDef *I2Cx)
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
ARM GAS  /tmp/ccIRHRej.s 			page 27


1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Transfer Complete interrupt.
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Transfer Complete (TC)
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_DisableIT_TC
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TC(I2C_TypeDef *I2Cx)
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Transfer Complete interrupt is enabled or disabled.
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_IsEnabledIT_TC
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TC(const I2C_TypeDef *I2Cx)
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TCIE) == (I2C_CR1_TCIE)) ? 1UL : 0UL);
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable Error interrupts.
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Bus Error detection (BERR)
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_EnableIT_ERR
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ERR(I2C_TypeDef *I2Cx)
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable Error interrupts.
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Bus Error detection (BERR)
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
ARM GAS  /tmp/ccIRHRej.s 			page 28


1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_DisableIT_ERR
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ERR(I2C_TypeDef *I2Cx)
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if Error interrupts are enabled or disabled.
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_IsEnabledIT_ERR
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ERR(const I2C_TypeDef *I2Cx)
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ERRIE) == (I2C_CR1_ERRIE)) ? 1UL : 0UL);
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_FLAG_management FLAG_management
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Transmit data register empty flag.
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_IsActiveFlag_TXE
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXE(const I2C_TypeDef *I2Cx)
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXE) == (I2C_ISR_TXE)) ? 1UL : 0UL);
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Transmit interrupt flag.
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          TXIS          LL_I2C_IsActiveFlag_TXIS
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXIS(const I2C_TypeDef *I2Cx)
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
  28              		.loc 1 1566 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccIRHRej.s 			page 29


  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXIS) == (I2C_ISR_TXIS)) ? 1UL : 0UL);
  44              		.loc 1 1567 12
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 9B69     		ldr	r3, [r3, #24]
  47 000c 03F00203 		and	r3, r3, #2
  48              		.loc 1 1567 71
  49 0010 022B     		cmp	r3, #2
  50 0012 01D1     		bne	.L2
  51              		.loc 1 1567 71 is_stmt 0 discriminator 1
  52 0014 0123     		movs	r3, #1
  53 0016 00E0     		b	.L4
  54              	.L2:
  55              		.loc 1 1567 71 discriminator 2
  56 0018 0023     		movs	r3, #0
  57              	.L4:
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
  58              		.loc 1 1568 1 is_stmt 1 discriminator 5
  59 001a 1846     		mov	r0, r3
  60 001c 0C37     		adds	r7, r7, #12
  61              	.LCFI3:
  62              		.cfi_def_cfa_offset 4
  63 001e BD46     		mov	sp, r7
  64              	.LCFI4:
  65              		.cfi_def_cfa_register 13
  66              		@ sp needed
  67 0020 5DF8047B 		ldr	r7, [sp], #4
  68              	.LCFI5:
  69              		.cfi_restore 7
  70              		.cfi_def_cfa_offset 0
  71 0024 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE216:
  75              		.section	.text.LL_I2C_IsActiveFlag_RXNE,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	LL_I2C_IsActiveFlag_RXNE:
  83              	.LFB217:
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Receive data register not empty flag.
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: When Receive data register is read.
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When the received data is copied in Receive data register.
ARM GAS  /tmp/ccIRHRej.s 			page 30


1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          RXNE          LL_I2C_IsActiveFlag_RXNE
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_RXNE(const I2C_TypeDef *I2Cx)
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
  84              		.loc 1 1579 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI6:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 83B0     		sub	sp, sp, #12
  94              	.LCFI7:
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI8:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_RXNE) == (I2C_ISR_RXNE)) ? 1UL : 0UL);
 100              		.loc 1 1580 12
 101 0008 7B68     		ldr	r3, [r7, #4]
 102 000a 9B69     		ldr	r3, [r3, #24]
 103 000c 03F00403 		and	r3, r3, #4
 104              		.loc 1 1580 71
 105 0010 042B     		cmp	r3, #4
 106 0012 01D1     		bne	.L6
 107              		.loc 1 1580 71 is_stmt 0 discriminator 1
 108 0014 0123     		movs	r3, #1
 109 0016 00E0     		b	.L8
 110              	.L6:
 111              		.loc 1 1580 71 discriminator 2
 112 0018 0023     		movs	r3, #0
 113              	.L8:
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 114              		.loc 1 1581 1 is_stmt 1 discriminator 5
 115 001a 1846     		mov	r0, r3
 116 001c 0C37     		adds	r7, r7, #12
 117              	.LCFI9:
 118              		.cfi_def_cfa_offset 4
 119 001e BD46     		mov	sp, r7
 120              	.LCFI10:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 0020 5DF8047B 		ldr	r7, [sp], #4
 124              	.LCFI11:
 125              		.cfi_restore 7
 126              		.cfi_def_cfa_offset 0
 127 0024 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE217:
 131              		.section	.text.LL_I2C_IsActiveFlag_STOP,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
ARM GAS  /tmp/ccIRHRej.s 			page 31


 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	LL_I2C_IsActiveFlag_STOP:
 139              	.LFB220:
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Address matched flag (slave mode).
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When the received slave address matched with one of the enabled slave address.
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          ADDR          LL_I2C_IsActiveFlag_ADDR
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ADDR(const I2C_TypeDef *I2Cx)
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ADDR) == (I2C_ISR_ADDR)) ? 1UL : 0UL);
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Not Acknowledge received flag.
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When a NACK is received after a byte transmission.
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          NACKF         LL_I2C_IsActiveFlag_NACK
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_NACK(const I2C_TypeDef *I2Cx)
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_NACKF) == (I2C_ISR_NACKF)) ? 1UL : 0UL);
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Stop detection flag.
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When a Stop condition is detected.
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          STOPF         LL_I2C_IsActiveFlag_STOP
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_STOP(const I2C_TypeDef *I2Cx)
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 140              		.loc 1 1618 1
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 8
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI12:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 83B0     		sub	sp, sp, #12
 150              	.LCFI13:
 151              		.cfi_def_cfa_offset 16
 152 0004 00AF     		add	r7, sp, #0
 153              	.LCFI14:
 154              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccIRHRej.s 			page 32


 155 0006 7860     		str	r0, [r7, #4]
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_STOPF) == (I2C_ISR_STOPF)) ? 1UL : 0UL);
 156              		.loc 1 1619 12
 157 0008 7B68     		ldr	r3, [r7, #4]
 158 000a 9B69     		ldr	r3, [r3, #24]
 159 000c 03F02003 		and	r3, r3, #32
 160              		.loc 1 1619 73
 161 0010 202B     		cmp	r3, #32
 162 0012 01D1     		bne	.L10
 163              		.loc 1 1619 73 is_stmt 0 discriminator 1
 164 0014 0123     		movs	r3, #1
 165 0016 00E0     		b	.L12
 166              	.L10:
 167              		.loc 1 1619 73 discriminator 2
 168 0018 0023     		movs	r3, #0
 169              	.L12:
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 170              		.loc 1 1620 1 is_stmt 1 discriminator 5
 171 001a 1846     		mov	r0, r3
 172 001c 0C37     		adds	r7, r7, #12
 173              	.LCFI15:
 174              		.cfi_def_cfa_offset 4
 175 001e BD46     		mov	sp, r7
 176              	.LCFI16:
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 0020 5DF8047B 		ldr	r7, [sp], #4
 180              	.LCFI17:
 181              		.cfi_restore 7
 182              		.cfi_def_cfa_offset 0
 183 0024 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE220:
 187              		.section	.text.LL_I2C_IsActiveFlag_TC,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu fpv4-sp-d16
 194              	LL_I2C_IsActiveFlag_TC:
 195              	.LFB221:
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When RELOAD=0, AUTOEND=0 and NBYTES date have been transferred.
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          TC            LL_I2C_IsActiveFlag_TC
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TC(const I2C_TypeDef *I2Cx)
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 196              		.loc 1 1631 1
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200              		@ link register save eliminated.
ARM GAS  /tmp/ccIRHRej.s 			page 33


 201 0000 80B4     		push	{r7}
 202              	.LCFI18:
 203              		.cfi_def_cfa_offset 4
 204              		.cfi_offset 7, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              	.LCFI19:
 207              		.cfi_def_cfa_offset 16
 208 0004 00AF     		add	r7, sp, #0
 209              	.LCFI20:
 210              		.cfi_def_cfa_register 7
 211 0006 7860     		str	r0, [r7, #4]
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TC) == (I2C_ISR_TC)) ? 1UL : 0UL);
 212              		.loc 1 1632 12
 213 0008 7B68     		ldr	r3, [r7, #4]
 214 000a 9B69     		ldr	r3, [r3, #24]
 215 000c 03F04003 		and	r3, r3, #64
 216              		.loc 1 1632 67
 217 0010 402B     		cmp	r3, #64
 218 0012 01D1     		bne	.L14
 219              		.loc 1 1632 67 is_stmt 0 discriminator 1
 220 0014 0123     		movs	r3, #1
 221 0016 00E0     		b	.L16
 222              	.L14:
 223              		.loc 1 1632 67 discriminator 2
 224 0018 0023     		movs	r3, #0
 225              	.L16:
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 226              		.loc 1 1633 1 is_stmt 1 discriminator 5
 227 001a 1846     		mov	r0, r3
 228 001c 0C37     		adds	r7, r7, #12
 229              	.LCFI21:
 230              		.cfi_def_cfa_offset 4
 231 001e BD46     		mov	sp, r7
 232              	.LCFI22:
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 0020 5DF8047B 		ldr	r7, [sp], #4
 236              	.LCFI23:
 237              		.cfi_restore 7
 238              		.cfi_def_cfa_offset 0
 239 0024 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE221:
 243              		.section	.text.LL_I2C_IsActiveFlag_TCR,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	LL_I2C_IsActiveFlag_TCR:
 251              	.LFB222:
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When RELOAD=1 and NBYTES date have been transferred.
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          TCR           LL_I2C_IsActiveFlag_TCR
ARM GAS  /tmp/ccIRHRej.s 			page 34


1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TCR(const I2C_TypeDef *I2Cx)
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 252              		.loc 1 1644 1
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0000 80B4     		push	{r7}
 258              	.LCFI24:
 259              		.cfi_def_cfa_offset 4
 260              		.cfi_offset 7, -4
 261 0002 83B0     		sub	sp, sp, #12
 262              	.LCFI25:
 263              		.cfi_def_cfa_offset 16
 264 0004 00AF     		add	r7, sp, #0
 265              	.LCFI26:
 266              		.cfi_def_cfa_register 7
 267 0006 7860     		str	r0, [r7, #4]
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TCR) == (I2C_ISR_TCR)) ? 1UL : 0UL);
 268              		.loc 1 1645 12
 269 0008 7B68     		ldr	r3, [r7, #4]
 270 000a 9B69     		ldr	r3, [r3, #24]
 271 000c 03F08003 		and	r3, r3, #128
 272              		.loc 1 1645 69
 273 0010 802B     		cmp	r3, #128
 274 0012 01D1     		bne	.L18
 275              		.loc 1 1645 69 is_stmt 0 discriminator 1
 276 0014 0123     		movs	r3, #1
 277 0016 00E0     		b	.L20
 278              	.L18:
 279              		.loc 1 1645 69 discriminator 2
 280 0018 0023     		movs	r3, #0
 281              	.L20:
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 282              		.loc 1 1646 1 is_stmt 1 discriminator 5
 283 001a 1846     		mov	r0, r3
 284 001c 0C37     		adds	r7, r7, #12
 285              	.LCFI27:
 286              		.cfi_def_cfa_offset 4
 287 001e BD46     		mov	sp, r7
 288              	.LCFI28:
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0020 5DF8047B 		ldr	r7, [sp], #4
 292              	.LCFI29:
 293              		.cfi_restore 7
 294              		.cfi_def_cfa_offset 0
 295 0024 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE222:
 299              		.section	.text.LL_I2C_IsActiveFlag_BUSY,"ax",%progbits
 300              		.align	1
 301              		.syntax unified
 302              		.thumb
ARM GAS  /tmp/ccIRHRej.s 			page 35


 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	LL_I2C_IsActiveFlag_BUSY:
 307              	.LFB229:
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Bus error flag.
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When a misplaced Start or Stop condition is detected.
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          BERR          LL_I2C_IsActiveFlag_BERR
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BERR(const I2C_TypeDef *I2Cx)
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BERR) == (I2C_ISR_BERR)) ? 1UL : 0UL);
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Arbitration lost flag.
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When arbitration lost.
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          ARLO          LL_I2C_IsActiveFlag_ARLO
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ARLO(const I2C_TypeDef *I2Cx)
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ARLO) == (I2C_ISR_ARLO)) ? 1UL : 0UL);
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Overrun/Underrun flag (slave mode).
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When an overrun/underrun error occurs (Clock Stretching Disabled).
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          OVR           LL_I2C_IsActiveFlag_OVR
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_OVR(const I2C_TypeDef *I2Cx)
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_OVR) == (I2C_ISR_OVR)) ? 1UL : 0UL);
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus PEC error flag in reception.
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When the received PEC does not match with the PEC register content.
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          PECERR        LL_I2C_IsActiveSMBusFlag_PECERR
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_PECERR(const I2C_TypeDef *I2Cx)
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_PECERR) == (I2C_ISR_PECERR)) ? 1UL : 0UL);
ARM GAS  /tmp/ccIRHRej.s 			page 36


1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus Timeout detection flag.
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When a timeout or extended clock timeout occurs.
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          TIMEOUT       LL_I2C_IsActiveSMBusFlag_TIMEOUT
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_TIMEOUT(const I2C_TypeDef *I2Cx)
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TIMEOUT) == (I2C_ISR_TIMEOUT)) ? 1UL : 0UL);
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of SMBus alert flag.
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When SMBus host configuration, SMBus alert enabled and
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *              a falling edge event occurs on SMBA pin.
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          ALERT         LL_I2C_IsActiveSMBusFlag_ALERT
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_ALERT(const I2C_TypeDef *I2Cx)
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ALERT) == (I2C_ISR_ALERT)) ? 1UL : 0UL);
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the status of Bus Busy flag.
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Clear default value.
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: When a Start condition is detected.
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          BUSY          LL_I2C_IsActiveFlag_BUSY
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BUSY(const I2C_TypeDef *I2Cx)
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 308              		.loc 1 1742 1
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              	.LCFI30:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 83B0     		sub	sp, sp, #12
 318              	.LCFI31:
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI32:
ARM GAS  /tmp/ccIRHRej.s 			page 37


 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BUSY) == (I2C_ISR_BUSY)) ? 1UL : 0UL);
 324              		.loc 1 1743 12
 325 0008 7B68     		ldr	r3, [r7, #4]
 326 000a 9B69     		ldr	r3, [r3, #24]
 327 000c 03F40043 		and	r3, r3, #32768
 328              		.loc 1 1743 71
 329 0010 B3F5004F 		cmp	r3, #32768
 330 0014 01D1     		bne	.L22
 331              		.loc 1 1743 71 is_stmt 0 discriminator 1
 332 0016 0123     		movs	r3, #1
 333 0018 00E0     		b	.L24
 334              	.L22:
 335              		.loc 1 1743 71 discriminator 2
 336 001a 0023     		movs	r3, #0
 337              	.L24:
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 338              		.loc 1 1744 1 is_stmt 1 discriminator 5
 339 001c 1846     		mov	r0, r3
 340 001e 0C37     		adds	r7, r7, #12
 341              	.LCFI33:
 342              		.cfi_def_cfa_offset 4
 343 0020 BD46     		mov	sp, r7
 344              	.LCFI34:
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0022 5DF8047B 		ldr	r7, [sp], #4
 348              	.LCFI35:
 349              		.cfi_restore 7
 350              		.cfi_def_cfa_offset 0
 351 0026 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE229:
 355              		.section	.text.LL_I2C_ClearFlag_STOP,"ax",%progbits
 356              		.align	1
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	LL_I2C_ClearFlag_STOP:
 363              	.LFB232:
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Address Matched flag.
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          ADDRCF        LL_I2C_ClearFlag_ADDR
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ADDR(I2C_TypeDef *I2Cx)
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ADDRCF);
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Not Acknowledge flag.
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          NACKCF        LL_I2C_ClearFlag_NACK
ARM GAS  /tmp/ccIRHRej.s 			page 38


1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_NACK(I2C_TypeDef *I2Cx)
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_NACKCF);
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Stop detection flag.
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          STOPCF        LL_I2C_ClearFlag_STOP
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_STOP(I2C_TypeDef *I2Cx)
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 364              		.loc 1 1775 1
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              	.LCFI36:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 83B0     		sub	sp, sp, #12
 374              	.LCFI37:
 375              		.cfi_def_cfa_offset 16
 376 0004 00AF     		add	r7, sp, #0
 377              	.LCFI38:
 378              		.cfi_def_cfa_register 7
 379 0006 7860     		str	r0, [r7, #4]
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_STOPCF);
 380              		.loc 1 1776 3
 381 0008 7B68     		ldr	r3, [r7, #4]
 382 000a DB69     		ldr	r3, [r3, #28]
 383 000c 43F02002 		orr	r2, r3, #32
 384 0010 7B68     		ldr	r3, [r7, #4]
 385 0012 DA61     		str	r2, [r3, #28]
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 386              		.loc 1 1777 1
 387 0014 00BF     		nop
 388 0016 0C37     		adds	r7, r7, #12
 389              	.LCFI39:
 390              		.cfi_def_cfa_offset 4
 391 0018 BD46     		mov	sp, r7
 392              	.LCFI40:
 393              		.cfi_def_cfa_register 13
 394              		@ sp needed
 395 001a 5DF8047B 		ldr	r7, [sp], #4
 396              	.LCFI41:
 397              		.cfi_restore 7
 398              		.cfi_def_cfa_offset 0
 399 001e 7047     		bx	lr
 400              		.cfi_endproc
 401              	.LFE232:
 403              		.section	.text.LL_I2C_HandleTransfer,"ax",%progbits
ARM GAS  /tmp/ccIRHRej.s 			page 39


 404              		.align	1
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	LL_I2C_HandleTransfer:
 411              	.LFB258:
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Transmit data register empty flag (TXE).
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This bit can be clear by software in order to flush the transmit data register (TXDR).
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_ClearFlag_TXE
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_TXE(I2C_TypeDef *I2Cx)
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   WRITE_REG(I2Cx->ISR, I2C_ISR_TXE);
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Bus error flag.
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          BERRCF        LL_I2C_ClearFlag_BERR
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_BERR(I2C_TypeDef *I2Cx)
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_BERRCF);
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Arbitration lost flag.
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          ARLOCF        LL_I2C_ClearFlag_ARLO
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ARLO(I2C_TypeDef *I2Cx)
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ARLOCF);
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear Overrun/Underrun flag.
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          OVRCF         LL_I2C_ClearFlag_OVR
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_OVR(I2C_TypeDef *I2Cx)
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_OVRCF);
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear SMBus PEC error flag.
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
ARM GAS  /tmp/ccIRHRej.s 			page 40


1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          PECCF         LL_I2C_ClearSMBusFlag_PECERR
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_PECCF);
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear SMBus Timeout detection flag.
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          TIMOUTCF      LL_I2C_ClearSMBusFlag_TIMEOUT
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_TIMOUTCF);
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Clear SMBus Alert flag.
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ICR          ALERTCF       LL_I2C_ClearSMBusFlag_ALERT
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ALERTCF);
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @}
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Data_Management Data_Management
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @{
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable automatic STOP condition generation (master mode).
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Automatic end mode : a STOP condition is automatically sent when NBYTES data are transf
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This bit has no effect in slave mode or when RELOAD bit is set.
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_EnableAutoEndMode
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAutoEndMode(I2C_TypeDef *I2Cx)
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
ARM GAS  /tmp/ccIRHRej.s 			page 41


1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable automatic STOP condition generation (master mode).
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Software end mode : TC flag is set when NBYTES data are transferre, stretching SCL low.
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_DisableAutoEndMode
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAutoEndMode(I2C_TypeDef *I2Cx)
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if automatic STOP condition is enabled or disabled.
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_IsEnabledAutoEndMode
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAutoEndMode(const I2C_TypeDef *I2Cx)
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_AUTOEND) == (I2C_CR2_AUTOEND)) ? 1UL : 0UL);
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable reload mode (master mode).
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The transfer is not completed after the NBYTES data transfer, NBYTES will be reloaded w
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_EnableReloadMode
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableReloadMode(I2C_TypeDef *I2Cx)
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable reload mode (master mode).
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The transfer is completed after the NBYTES data transfer(STOP or RESTART will follow).
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_DisableReloadMode
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableReloadMode(I2C_TypeDef *I2Cx)
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if reload mode is enabled or disabled.
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_IsEnabledReloadMode
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledReloadMode(const I2C_TypeDef *I2Cx)
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_RELOAD) == (I2C_CR2_RELOAD)) ? 1UL : 0UL);
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
ARM GAS  /tmp/ccIRHRej.s 			page 42


1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the number of bytes for transfer.
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_SetTransferSize
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TransferSize This parameter must be a value between Min_Data=0x00 and Max_Data=0xFF.
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTransferSize(I2C_TypeDef *I2Cx, uint32_t TransferSize)
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NBYTES, TransferSize << I2C_CR2_NBYTES_Pos);
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the number of bytes configured for transfer.
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_GetTransferSize
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xFF
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferSize(const I2C_TypeDef *I2Cx)
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_NBYTES) >> I2C_CR2_NBYTES_Pos);
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Prepare the generation of a ACKnowledge or Non ACKnowledge condition after the address 
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****             or next received byte.
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Usage in Slave mode only.
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          NACK          LL_I2C_AcknowledgeNextData
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TypeAcknowledge This parameter can be one of the following values:
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ACK
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_NACK
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_AcknowledgeNextData(I2C_TypeDef *I2Cx, uint32_t TypeAcknowledge)
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NACK, TypeAcknowledge);
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Generate a START or RESTART condition
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The START bit can be set even if bus is BUSY or I2C is in slave mode.
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This action has no effect when RELOAD is set.
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          START           LL_I2C_GenerateStartCondition
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_GenerateStartCondition(I2C_TypeDef *I2Cx)
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_START);
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Generate a STOP condition after the current byte transfer (master mode).
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          STOP          LL_I2C_GenerateStopCondition
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /tmp/ccIRHRej.s 			page 43


1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_GenerateStopCondition(I2C_TypeDef *I2Cx)
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_STOP);
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable automatic RESTART Read request condition for 10bit address header (master mode).
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The master sends the complete 10bit slave address read sequence :
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         Start + 2 bytes 10bit address in Write direction + Restart + first 7 bits of 10bit addr
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****             in Read direction.
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          HEAD10R       LL_I2C_EnableAuto10BitRead
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAuto10BitRead(I2C_TypeDef *I2Cx)
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_HEAD10R);
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Disable automatic RESTART Read request condition for 10bit address header (master mode)
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The master only sends the first 7 bits of 10bit address in Read direction.
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          HEAD10R       LL_I2C_DisableAuto10BitRead
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAuto10BitRead(I2C_TypeDef *I2Cx)
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_HEAD10R);
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if automatic RESTART Read request condition for 10bit address header is enabled o
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          HEAD10R       LL_I2C_IsEnabledAuto10BitRead
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAuto10BitRead(const I2C_TypeDef *I2Cx)
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_HEAD10R) != (I2C_CR2_HEAD10R)) ? 1UL : 0UL);
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the transfer direction (master mode).
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          RD_WRN           LL_I2C_SetTransferRequest
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TransferRequest This parameter can be one of the following values:
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_WRITE
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_READ
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTransferRequest(I2C_TypeDef *I2Cx, uint32_t TransferRequest)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_RD_WRN, TransferRequest);
ARM GAS  /tmp/ccIRHRej.s 			page 44


2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the transfer direction requested (master mode).
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          RD_WRN           LL_I2C_GetTransferRequest
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_WRITE
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_REQUEST_READ
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferRequest(const I2C_TypeDef *I2Cx)
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_RD_WRN));
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Configure the slave address for transfer (master mode).
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          SADD           LL_I2C_SetSlaveAddr
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  SlaveAddr This parameter must be a value between Min_Data=0x00 and Max_Data=0x3F.
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSlaveAddr(I2C_TypeDef *I2Cx, uint32_t SlaveAddr)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_SADD, SlaveAddr);
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the slave address programmed for transfer.
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          SADD           LL_I2C_GetSlaveAddr
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0x3F
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSlaveAddr(const I2C_TypeDef *I2Cx)
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_SADD));
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          SADD          LL_I2C_HandleTransfer\n
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          ADD10         LL_I2C_HandleTransfer\n
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          RD_WRN        LL_I2C_HandleTransfer\n
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          START         LL_I2C_HandleTransfer\n
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          STOP          LL_I2C_HandleTransfer\n
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          RELOAD        LL_I2C_HandleTransfer\n
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          NBYTES        LL_I2C_HandleTransfer\n
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          AUTOEND       LL_I2C_HandleTransfer\n
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         CR2          HEAD10R       LL_I2C_HandleTransfer
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  SlaveAddr Specifies the slave address to be programmed.
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  SlaveAddrSize This parameter can be one of the following values:
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRSLAVE_7BIT
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRSLAVE_10BIT
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  TransferSize Specifies the number of bytes to be programmed.
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *                       This parameter must be a value between Min_Data=0 and Max_Data=255.
ARM GAS  /tmp/ccIRHRej.s 			page 45


2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  EndMode This parameter can be one of the following values:
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_RELOAD
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_AUTOEND
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SOFTEND
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_RELOAD
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  Request This parameter can be one of the following values:
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_NOSTARTSTOP
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_STOP
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_START_READ
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_START_WRITE
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_7BIT_READ
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_7BIT_WRITE
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_10BIT_READ
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_GENERATE_RESTART_10BIT_WRITE
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_HandleTransfer(I2C_TypeDef *I2Cx, uint32_t SlaveAddr, uint32_t SlaveAdd
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                                            uint32_t TransferSize, uint32_t EndMode, uint32_t Reques
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 412              		.loc 1 2135 1
 413              		.cfi_startproc
 414              		@ args = 8, pretend = 0, frame = 24
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              	.LCFI42:
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 87B0     		sub	sp, sp, #28
 422              	.LCFI43:
 423              		.cfi_def_cfa_offset 32
 424 0004 00AF     		add	r7, sp, #0
 425              	.LCFI44:
 426              		.cfi_def_cfa_register 7
 427 0006 F860     		str	r0, [r7, #12]
 428 0008 B960     		str	r1, [r7, #8]
 429 000a 7A60     		str	r2, [r7, #4]
 430 000c 3B60     		str	r3, [r7]
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   uint32_t tmp = ((uint32_t)(((uint32_t)SlaveAddr & I2C_CR2_SADD) | \
 431              		.loc 1 2137 51
 432 000e BB68     		ldr	r3, [r7, #8]
 433 0010 C3F30902 		ubfx	r2, r3, #0, #10
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              ((uint32_t)SlaveAddrSize & I2C_CR2_ADD10) | \
 434              		.loc 1 2138 55
 435 0014 7B68     		ldr	r3, [r7, #4]
 436 0016 03F40063 		and	r3, r3, #2048
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              ((uint32_t)SlaveAddrSize & I2C_CR2_ADD10) | \
 437              		.loc 1 2137 67
 438 001a 1A43     		orrs	r2, r2, r3
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              (((uint32_t)TransferSize << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 439              		.loc 1 2139 55
 440 001c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccIRHRej.s 			page 46


 441 001e 1B04     		lsls	r3, r3, #16
 442              		.loc 1 2139 78
 443 0020 03F47F03 		and	r3, r3, #16711680
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              ((uint32_t)SlaveAddrSize & I2C_CR2_ADD10) | \
 444              		.loc 1 2138 72
 445 0024 1A43     		orrs	r2, r2, r3
 446              		.loc 1 2139 96
 447 0026 3B6A     		ldr	r3, [r7, #32]
 448 0028 1A43     		orrs	r2, r2, r3
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              ((uint32_t)SlaveAddrSize & I2C_CR2_ADD10) | \
 449              		.loc 1 2137 19
 450 002a 7B6A     		ldr	r3, [r7, #36]
 451 002c 1343     		orrs	r3, r3, r2
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              ((uint32_t)SlaveAddrSize & I2C_CR2_ADD10) | \
 452              		.loc 1 2137 12
 453 002e 23F00043 		bic	r3, r3, #-2147483648
 454 0032 7B61     		str	r3, [r7, #20]
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****                              (uint32_t)EndMode | (uint32_t)Request) & (~0x80000000U));
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   /* update CR2 register */
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_SADD | I2C_CR2_ADD10 |
 455              		.loc 1 2143 3
 456 0034 FB68     		ldr	r3, [r7, #12]
 457 0036 5A68     		ldr	r2, [r3, #4]
 458 0038 7B6A     		ldr	r3, [r7, #36]
 459 003a 5B0D     		lsrs	r3, r3, #21
 460 003c 03F48061 		and	r1, r3, #1024
 461 0040 064B     		ldr	r3, .L27
 462 0042 0B43     		orrs	r3, r3, r1
 463 0044 DB43     		mvns	r3, r3
 464 0046 1A40     		ands	r2, r2, r3
 465 0048 7B69     		ldr	r3, [r7, #20]
 466 004a 1A43     		orrs	r2, r2, r3
 467 004c FB68     		ldr	r3, [r7, #12]
 468 004e 5A60     		str	r2, [r3, #4]
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****              (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) |
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****              I2C_CR2_START | I2C_CR2_STOP | I2C_CR2_RELOAD |
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****              I2C_CR2_NBYTES | I2C_CR2_AUTOEND | I2C_CR2_HEAD10R,
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****              tmp);
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 469              		.loc 1 2148 1
 470 0050 00BF     		nop
 471 0052 1C37     		adds	r7, r7, #28
 472              	.LCFI45:
 473              		.cfi_def_cfa_offset 4
 474 0054 BD46     		mov	sp, r7
 475              	.LCFI46:
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 0056 5DF8047B 		ldr	r7, [sp], #4
 479              	.LCFI47:
 480              		.cfi_restore 7
 481              		.cfi_def_cfa_offset 0
 482 005a 7047     		bx	lr
 483              	.L28:
 484              		.align	2
 485              	.L27:
ARM GAS  /tmp/ccIRHRej.s 			page 47


 486 005c FF7BFF03 		.word	67075071
 487              		.cfi_endproc
 488              	.LFE258:
 490              		.section	.text.LL_I2C_ReceiveData8,"ax",%progbits
 491              		.align	1
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv4-sp-d16
 497              	LL_I2C_ReceiveData8:
 498              	.LFB264:
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Indicate the value of transfer direction (slave mode).
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   RESET: Write transfer, Slave enters in receiver mode.
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SET: Read transfer, Slave enters in transmitter mode.
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          DIR           LL_I2C_GetTransferDirection
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DIRECTION_WRITE
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         @arg @ref LL_I2C_DIRECTION_READ
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferDirection(const I2C_TypeDef *I2Cx)
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->ISR, I2C_ISR_DIR));
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Return the slave matched address.
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll ISR          ADDCODE       LL_I2C_GetAddressMatchCode
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetAddressMatchCode(const I2C_TypeDef *I2Cx)
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->ISR, I2C_ISR_ADDCODE) >> I2C_ISR_ADDCODE_Pos << 1);
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Enable internal comparison of the SMBus Packet Error byte (transmission or reception mo
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   This feature is cleared by hardware when the PEC byte is transferred, or when a STOP co
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****             or an Address Matched is received.
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This bit has no effect when RELOAD bit is set.
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         This bit has no effect in device mode when SBC bit is not set.
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          PECBYTE       LL_I2C_EnableSMBusPECCompare
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPECCompare(I2C_TypeDef *I2Cx)
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_PECBYTE);
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Check if the SMBus Packet Error byte internal comparison is requested or not.
ARM GAS  /tmp/ccIRHRej.s 			page 48


2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll CR2          PECBYTE       LL_I2C_IsEnabledSMBusPECCompare
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval State of bit (1 or 0).
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPECCompare(const I2C_TypeDef *I2Cx)
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_PECBYTE) == (I2C_CR2_PECBYTE)) ? 1UL : 0UL);
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Get the SMBus Packet Error byte calculated.
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll PECR         PEC           LL_I2C_GetSMBusPEC
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusPEC(const I2C_TypeDef *I2Cx)
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->PECR, I2C_PECR_PEC));
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Read Receive Data register.
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll RXDR         RXDATA        LL_I2C_ReceiveData8
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE uint8_t LL_I2C_ReceiveData8(const I2C_TypeDef *I2Cx)
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 499              		.loc 1 2226 1
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 8
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 80B4     		push	{r7}
 505              	.LCFI48:
 506              		.cfi_def_cfa_offset 4
 507              		.cfi_offset 7, -4
 508 0002 83B0     		sub	sp, sp, #12
 509              	.LCFI49:
 510              		.cfi_def_cfa_offset 16
 511 0004 00AF     		add	r7, sp, #0
 512              	.LCFI50:
 513              		.cfi_def_cfa_register 7
 514 0006 7860     		str	r0, [r7, #4]
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   return (uint8_t)(READ_BIT(I2Cx->RXDR, I2C_RXDR_RXDATA));
 515              		.loc 1 2227 20
 516 0008 7B68     		ldr	r3, [r7, #4]
 517 000a 5B6A     		ldr	r3, [r3, #36]
 518              		.loc 1 2227 10
 519 000c DBB2     		uxtb	r3, r3
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 520              		.loc 1 2228 1
 521 000e 1846     		mov	r0, r3
ARM GAS  /tmp/ccIRHRej.s 			page 49


 522 0010 0C37     		adds	r7, r7, #12
 523              	.LCFI51:
 524              		.cfi_def_cfa_offset 4
 525 0012 BD46     		mov	sp, r7
 526              	.LCFI52:
 527              		.cfi_def_cfa_register 13
 528              		@ sp needed
 529 0014 5DF8047B 		ldr	r7, [sp], #4
 530              	.LCFI53:
 531              		.cfi_restore 7
 532              		.cfi_def_cfa_offset 0
 533 0018 7047     		bx	lr
 534              		.cfi_endproc
 535              	.LFE264:
 537              		.section	.text.LL_I2C_TransmitData8,"ax",%progbits
 538              		.align	1
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu fpv4-sp-d16
 544              	LL_I2C_TransmitData8:
 545              	.LFB265:
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** 
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** /**
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @brief  Write in Transmit Data Register .
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_TransmitData8
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFF
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   * @retval None
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   */
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_TransmitData8(I2C_TypeDef *I2Cx, uint8_t Data)
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** {
 546              		.loc 1 2238 1
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 8
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              	.LCFI54:
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 83B0     		sub	sp, sp, #12
 556              	.LCFI55:
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              	.LCFI56:
 560              		.cfi_def_cfa_register 7
 561 0006 7860     		str	r0, [r7, #4]
 562 0008 0B46     		mov	r3, r1
 563 000a FB70     		strb	r3, [r7, #3]
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h ****   WRITE_REG(I2Cx->TXDR, Data);
 564              		.loc 1 2239 3
 565 000c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 566 000e 7B68     		ldr	r3, [r7, #4]
 567 0010 9A62     		str	r2, [r3, #40]
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_i2c.h **** }
 568              		.loc 1 2240 1
ARM GAS  /tmp/ccIRHRej.s 			page 50


 569 0012 00BF     		nop
 570 0014 0C37     		adds	r7, r7, #12
 571              	.LCFI57:
 572              		.cfi_def_cfa_offset 4
 573 0016 BD46     		mov	sp, r7
 574              	.LCFI58:
 575              		.cfi_def_cfa_register 13
 576              		@ sp needed
 577 0018 5DF8047B 		ldr	r7, [sp], #4
 578              	.LCFI59:
 579              		.cfi_restore 7
 580              		.cfi_def_cfa_offset 0
 581 001c 7047     		bx	lr
 582              		.cfi_endproc
 583              	.LFE265:
 585              		.section	.text.LL_GPIO_IsInputPinSet,"ax",%progbits
 586              		.align	1
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	LL_GPIO_IsInputPinSet:
 593              	.LFB282:
 594              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
ARM GAS  /tmp/ccIRHRej.s 			page 51


  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
ARM GAS  /tmp/ccIRHRej.s 			page 52


  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
ARM GAS  /tmp/ccIRHRej.s 			page 53


 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
ARM GAS  /tmp/ccIRHRej.s 			page 54


 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
ARM GAS  /tmp/ccIRHRej.s 			page 55


 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/ccIRHRej.s 			page 56


 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
ARM GAS  /tmp/ccIRHRej.s 			page 57


 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
ARM GAS  /tmp/ccIRHRej.s 			page 58


 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  /tmp/ccIRHRej.s 			page 59


 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
ARM GAS  /tmp/ccIRHRej.s 			page 60


 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
ARM GAS  /tmp/ccIRHRej.s 			page 61


 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/ccIRHRej.s 			page 62


 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         next reset.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         (control and alternate function registers).
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
ARM GAS  /tmp/ccIRHRej.s 			page 63


 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   __IO uint32_t temp;
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
ARM GAS  /tmp/ccIRHRej.s 			page 64


 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Input data register value of port
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 595              		.loc 2 814 1
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 8
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600 0000 80B4     		push	{r7}
 601              	.LCFI60:
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 83B0     		sub	sp, sp, #12
 605              	.LCFI61:
 606              		.cfi_def_cfa_offset 16
 607 0004 00AF     		add	r7, sp, #0
 608              	.LCFI62:
 609              		.cfi_def_cfa_register 7
 610 0006 7860     		str	r0, [r7, #4]
 611 0008 3960     		str	r1, [r7]
ARM GAS  /tmp/ccIRHRej.s 			page 65


 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 612              		.loc 2 815 12
 613 000a 7B68     		ldr	r3, [r7, #4]
 614 000c 1A69     		ldr	r2, [r3, #16]
 615 000e 3B68     		ldr	r3, [r7]
 616 0010 1340     		ands	r3, r3, r2
 617              		.loc 2 815 62
 618 0012 3A68     		ldr	r2, [r7]
 619 0014 9A42     		cmp	r2, r3
 620 0016 01D1     		bne	.L33
 621              		.loc 2 815 62 is_stmt 0 discriminator 1
 622 0018 0123     		movs	r3, #1
 623 001a 00E0     		b	.L35
 624              	.L33:
 625              		.loc 2 815 62 discriminator 2
 626 001c 0023     		movs	r3, #0
 627              	.L35:
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 628              		.loc 2 816 1 is_stmt 1 discriminator 5
 629 001e 1846     		mov	r0, r3
 630 0020 0C37     		adds	r7, r7, #12
 631              	.LCFI63:
 632              		.cfi_def_cfa_offset 4
 633 0022 BD46     		mov	sp, r7
 634              	.LCFI64:
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 0024 5DF8047B 		ldr	r7, [sp], #4
 638              	.LCFI65:
 639              		.cfi_restore 7
 640              		.cfi_def_cfa_offset 0
 641 0028 7047     		bx	lr
 642              		.cfi_endproc
 643              	.LFE282:
 645              		.section	.text.LL_GPIO_SetOutputPin,"ax",%progbits
 646              		.align	1
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 650              		.fpu fpv4-sp-d16
 652              	LL_GPIO_SetOutputPin:
 653              	.LFB286:
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
ARM GAS  /tmp/ccIRHRej.s 			page 66


 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Output data register value of port
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->ODR, PinMask) == (PinMask)) ? 1UL : 0UL);
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  /tmp/ccIRHRej.s 			page 67


 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 654              		.loc 2 895 1
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 8
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659 0000 80B4     		push	{r7}
 660              	.LCFI66:
 661              		.cfi_def_cfa_offset 4
 662              		.cfi_offset 7, -4
 663 0002 83B0     		sub	sp, sp, #12
 664              	.LCFI67:
 665              		.cfi_def_cfa_offset 16
 666 0004 00AF     		add	r7, sp, #0
 667              	.LCFI68:
 668              		.cfi_def_cfa_register 7
 669 0006 7860     		str	r0, [r7, #4]
 670 0008 3960     		str	r1, [r7]
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 671              		.loc 2 896 3
 672 000a 7B68     		ldr	r3, [r7, #4]
 673 000c 3A68     		ldr	r2, [r7]
 674 000e 9A61     		str	r2, [r3, #24]
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 675              		.loc 2 897 1
 676 0010 00BF     		nop
 677 0012 0C37     		adds	r7, r7, #12
 678              	.LCFI69:
 679              		.cfi_def_cfa_offset 4
 680 0014 BD46     		mov	sp, r7
 681              	.LCFI70:
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 0016 5DF8047B 		ldr	r7, [sp], #4
 685              	.LCFI71:
 686              		.cfi_restore 7
 687              		.cfi_def_cfa_offset 0
 688 001a 7047     		bx	lr
 689              		.cfi_endproc
 690              	.LFE286:
 692              		.section	.text.LL_GPIO_ResetOutputPin,"ax",%progbits
 693              		.align	1
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv4-sp-d16
 699              	LL_GPIO_ResetOutputPin:
 700              	.LFB287:
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
ARM GAS  /tmp/ccIRHRej.s 			page 68


 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 701              		.loc 2 924 1
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 8
 704              		@ frame_needed = 1, uses_anonymous_args = 0
 705              		@ link register save eliminated.
 706 0000 80B4     		push	{r7}
 707              	.LCFI72:
 708              		.cfi_def_cfa_offset 4
 709              		.cfi_offset 7, -4
 710 0002 83B0     		sub	sp, sp, #12
 711              	.LCFI73:
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              	.LCFI74:
 715              		.cfi_def_cfa_register 7
 716 0006 7860     		str	r0, [r7, #4]
 717 0008 3960     		str	r1, [r7]
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
 718              		.loc 2 925 3
 719 000a 7B68     		ldr	r3, [r7, #4]
 720 000c 3A68     		ldr	r2, [r7]
 721 000e 9A62     		str	r2, [r3, #40]
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 722              		.loc 2 926 1
 723 0010 00BF     		nop
 724 0012 0C37     		adds	r7, r7, #12
 725              	.LCFI75:
 726              		.cfi_def_cfa_offset 4
 727 0014 BD46     		mov	sp, r7
 728              	.LCFI76:
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0016 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccIRHRej.s 			page 69


 732              	.LCFI77:
 733              		.cfi_restore 7
 734              		.cfi_def_cfa_offset 0
 735 001a 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE287:
 739              		.section	.text.LL_SYSTICK_IsActiveCounterFlag,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	LL_SYSTICK_IsActiveCounterFlag:
 747              	.LFB331:
 748              		.file 3 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @file    stm32g4xx_ll_cortex.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   @verbatim
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   ==============================================================================
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****                      ##### How to use this driver #####
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   ==============================================================================
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****     [..]
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****     used by user:
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****       (+) SYSTICK configuration used by LL_mDelay and LL_Init1msTick
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****           functions
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****       (+) MPU API to configure and enable regions
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****       (+) API to enable fault handler (SHCSR accesses)
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   @endverbatim
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #ifndef __STM32G4xx_LL_CORTEX_H
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define __STM32G4xx_LL_CORTEX_H
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #ifdef __cplusplus
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** extern "C" {
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #endif
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccIRHRej.s 			page 70


  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #include "stm32g4xx.h"
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @addtogroup STM32G4xx_LL_Driver
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     0x00000000U                 /*!< AHB clock divided by 8 
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          SysTick_CTRL_CLKSOURCE_Msk  /*!< AHB clock selected as S
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_FAULT Handler Fault type
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_HANDLER_FAULT_USG               SCB_SHCSR_USGFAULTENA_Msk              /*!< Usage fault 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_HANDLER_FAULT_BUS               SCB_SHCSR_BUSFAULTENA_Msk              /*!< Bus fault */
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_HANDLER_FAULT_MEM               SCB_SHCSR_MEMFAULTENA_Msk              /*!< Memory manag
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #if __MPU_PRESENT
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CTRL_HFNMI_PRIVDEF MPU Control
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF_NONE     0x00000000U                                       /*!< D
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_CTRL_HARDFAULT_NMI          MPU_CTRL_HFNMIENA_Msk                             /*!< E
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_CTRL_PRIVILEGED_DEFAULT     MPU_CTRL_PRIVDEFENA_Msk                           /*!< E
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF          (MPU_CTRL_HFNMIENA_Msk | MPU_CTRL_PRIVDEFENA_Msk) /*!< E
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION MPU Region Number
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
ARM GAS  /tmp/ccIRHRej.s 			page 71


 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER0              0x00U /*!< REGION Number 0 */
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER1              0x01U /*!< REGION Number 1 */
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER2              0x02U /*!< REGION Number 2 */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER3              0x03U /*!< REGION Number 3 */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER4              0x04U /*!< REGION Number 4 */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER5              0x05U /*!< REGION Number 5 */
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER6              0x06U /*!< REGION Number 6 */
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER7              0x07U /*!< REGION Number 7 */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_SIZE MPU Region Size
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32B             (0x04U << MPU_RASR_SIZE_Pos) /*!< 32B Size of the MPU pr
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64B             (0x05U << MPU_RASR_SIZE_Pos) /*!< 64B Size of the MPU pr
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128B            (0x06U << MPU_RASR_SIZE_Pos) /*!< 128B Size of the MPU p
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256B            (0x07U << MPU_RASR_SIZE_Pos) /*!< 256B Size of the MPU p
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512B            (0x08U << MPU_RASR_SIZE_Pos) /*!< 512B Size of the MPU p
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1KB             (0x09U << MPU_RASR_SIZE_Pos) /*!< 1KB Size of the MPU pr
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2KB             (0x0AU << MPU_RASR_SIZE_Pos) /*!< 2KB Size of the MPU pr
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4KB             (0x0BU << MPU_RASR_SIZE_Pos) /*!< 4KB Size of the MPU pr
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8KB             (0x0CU << MPU_RASR_SIZE_Pos) /*!< 8KB Size of the MPU pr
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16KB            (0x0DU << MPU_RASR_SIZE_Pos) /*!< 16KB Size of the MPU p
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32KB            (0x0EU << MPU_RASR_SIZE_Pos) /*!< 32KB Size of the MPU p
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64KB            (0x0FU << MPU_RASR_SIZE_Pos) /*!< 64KB Size of the MPU p
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128KB           (0x10U << MPU_RASR_SIZE_Pos) /*!< 128KB Size of the MPU 
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256KB           (0x11U << MPU_RASR_SIZE_Pos) /*!< 256KB Size of the MPU 
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512KB           (0x12U << MPU_RASR_SIZE_Pos) /*!< 512KB Size of the MPU 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1MB             (0x13U << MPU_RASR_SIZE_Pos) /*!< 1MB Size of the MPU pr
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2MB             (0x14U << MPU_RASR_SIZE_Pos) /*!< 2MB Size of the MPU pr
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4MB             (0x15U << MPU_RASR_SIZE_Pos) /*!< 4MB Size of the MPU pr
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8MB             (0x16U << MPU_RASR_SIZE_Pos) /*!< 8MB Size of the MPU pr
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16MB            (0x17U << MPU_RASR_SIZE_Pos) /*!< 16MB Size of the MPU p
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32MB            (0x18U << MPU_RASR_SIZE_Pos) /*!< 32MB Size of the MPU p
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64MB            (0x19U << MPU_RASR_SIZE_Pos) /*!< 64MB Size of the MPU p
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128MB           (0x1AU << MPU_RASR_SIZE_Pos) /*!< 128MB Size of the MPU 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256MB           (0x1BU << MPU_RASR_SIZE_Pos) /*!< 256MB Size of the MPU 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512MB           (0x1CU << MPU_RASR_SIZE_Pos) /*!< 512MB Size of the MPU 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1GB             (0x1DU << MPU_RASR_SIZE_Pos) /*!< 1GB Size of the MPU pr
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2GB             (0x1EU << MPU_RASR_SIZE_Pos) /*!< 2GB Size of the MPU pr
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4GB             (0x1FU << MPU_RASR_SIZE_Pos) /*!< 4GB Size of the MPU pr
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_PRIVILEDGES MPU Region Privileges
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_NO_ACCESS            (0x00U << MPU_RASR_AP_Pos) /*!< No access*/
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW              (0x01U << MPU_RASR_AP_Pos) /*!< RW privileged (privilege
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW_URO          (0x02U << MPU_RASR_AP_Pos) /*!< RW privileged - RO user 
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_FULL_ACCESS          (0x03U << MPU_RASR_AP_Pos) /*!< RW privileged & user (Fu
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO              (0x05U << MPU_RASR_AP_Pos) /*!< RO privileged (privilege
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO_URO          (0x06U << MPU_RASR_AP_Pos) /*!< RO privileged & user (re
ARM GAS  /tmp/ccIRHRej.s 			page 72


 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_TEX MPU TEX Level
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL0                  (0x00U << MPU_RASR_TEX_Pos) /*!< b000 for TEX bits */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL1                  (0x01U << MPU_RASR_TEX_Pos) /*!< b001 for TEX bits */
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL2                  (0x02U << MPU_RASR_TEX_Pos) /*!< b010 for TEX bits */
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL4                  (0x04U << MPU_RASR_TEX_Pos) /*!< b100 for TEX bits */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_INSTRUCTION_ACCESS MPU Instruction Access
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_ENABLE   0x00U            /*!< Instruction fetches enabled */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_DISABLE  MPU_RASR_XN_Msk  /*!< Instruction fetches disabled*/
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_SHAREABLE_ACCESS MPU Shareable Access
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_ACCESS_SHAREABLE            MPU_RASR_S_Msk   /*!< Shareable memory attribute */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_SHAREABLE        0x00U            /*!< Not Shareable memory attribute */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CACHEABLE_ACCESS MPU Cacheable Access
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_ACCESS_CACHEABLE            MPU_RASR_C_Msk   /*!< Cacheable memory attribute */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_CACHEABLE        0x00U            /*!< Not Cacheable memory attribute */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_BUFFERABLE_ACCESS MPU Bufferable Access
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_ACCESS_BUFFERABLE           MPU_RASR_B_Msk   /*!< Bufferable memory attribute */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_BUFFERABLE       0x00U            /*!< Not Bufferable memory attribute */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** #endif /* __MPU_PRESENT */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @}
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
ARM GAS  /tmp/ccIRHRej.s 			page 73


 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @{
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** {
 749              		.loc 3 230 1
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              	.LCFI78:
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 7, -4
 758 0002 00AF     		add	r7, sp, #0
 759              	.LCFI79:
 760              		.cfi_def_cfa_register 7
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   return (((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk)) ? 1UL : 0U
 761              		.loc 3 231 20
 762 0004 074B     		ldr	r3, .L42
 763 0006 1B68     		ldr	r3, [r3]
 764              		.loc 3 231 27
 765 0008 03F48033 		and	r3, r3, #65536
 766              		.loc 3 231 96
 767 000c B3F5803F 		cmp	r3, #65536
 768 0010 01D1     		bne	.L39
 769              		.loc 3 231 96 is_stmt 0 discriminator 1
 770 0012 0123     		movs	r3, #1
 771 0014 00E0     		b	.L41
 772              	.L39:
 773              		.loc 3 231 96 discriminator 2
 774 0016 0023     		movs	r3, #0
 775              	.L41:
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** }
 776              		.loc 3 232 1 is_stmt 1 discriminator 5
 777 0018 1846     		mov	r0, r3
 778 001a BD46     		mov	sp, r7
 779              	.LCFI80:
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 001c 5DF8047B 		ldr	r7, [sp], #4
 783              	.LCFI81:
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 0020 7047     		bx	lr
ARM GAS  /tmp/ccIRHRej.s 			page 74


 787              	.L43:
 788 0022 00BF     		.align	2
 789              	.L42:
 790 0024 10E000E0 		.word	-536813552
 791              		.cfi_endproc
 792              	.LFE331:
 794              		.section	.text.LL_SYSTICK_GetClkSource,"ax",%progbits
 795              		.align	1
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv4-sp-d16
 801              	LL_SYSTICK_GetClkSource:
 802              	.LFB333:
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @brief  Configures the SysTick clock source
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @rmtoll STK_CTRL     CLKSOURCE     LL_SYSTICK_SetClkSource
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @param  Source This parameter can be one of the following values:
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK_DIV8
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @retval None
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** __STATIC_INLINE void LL_SYSTICK_SetClkSource(uint32_t Source)
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** {
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   if (Source == LL_SYSTICK_CLKSOURCE_HCLK)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   {
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****     SET_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   }
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   else
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   {
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****     CLEAR_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   }
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** }
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** 
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** /**
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @brief  Get the SysTick clock source
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @rmtoll STK_CTRL     CLKSOURCE     LL_SYSTICK_GetClkSource
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   * @retval Returned value can be one of the following values:
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK_DIV8
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   */
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_GetClkSource(void)
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** {
 803              		.loc 3 262 1
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808 0000 80B4     		push	{r7}
 809              	.LCFI82:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 7, -4
 812 0002 00AF     		add	r7, sp, #0
 813              	.LCFI83:
 814              		.cfi_def_cfa_register 7
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h ****   return READ_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
ARM GAS  /tmp/ccIRHRej.s 			page 75


 815              		.loc 3 263 10
 816 0004 044B     		ldr	r3, .L46
 817 0006 1B68     		ldr	r3, [r3]
 818 0008 03F00403 		and	r3, r3, #4
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_cortex.h **** }
 819              		.loc 3 264 1
 820 000c 1846     		mov	r0, r3
 821 000e BD46     		mov	sp, r7
 822              	.LCFI84:
 823              		.cfi_def_cfa_register 13
 824              		@ sp needed
 825 0010 5DF8047B 		ldr	r7, [sp], #4
 826              	.LCFI85:
 827              		.cfi_restore 7
 828              		.cfi_def_cfa_offset 0
 829 0014 7047     		bx	lr
 830              	.L47:
 831 0016 00BF     		.align	2
 832              	.L46:
 833 0018 10E000E0 		.word	-536813552
 834              		.cfi_endproc
 835              	.LFE333:
 837              		.section	.bss.STSPIN32G4_bkupREADY,"aw",%nobits
 840              	STSPIN32G4_bkupREADY:
 841 0000 00       		.space	1
 842              		.section	.text.STSPIN32G4_init,"ax",%progbits
 843              		.align	1
 844              		.global	STSPIN32G4_init
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv4-sp-d16
 850              	STSPIN32G4_init:
 851              	.LFB502:
 852              		.file 4 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * @file    stspin32g4.c
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * @author  P. Lombardi, IPC Application Team
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * @brief   Implementation of STSPIN32G4 driver library
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   ******************************************************************************
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * @attention
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * All rights reserved.</center></h2>
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   * the License. You may obtain a copy of the License at:
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *                             www.st.com/SLA0044
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   ******************************************************************************
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   **/
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_ll_i2c.h>
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_ll_gpio.h>
ARM GAS  /tmp/ccIRHRej.s 			page 76


  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_ll_bus.h>
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_ll_cortex.h>
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_ll_rcc.h>
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_ll_utils.h>
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_hal.h>
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_hal_def.h>
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stm32g4xx_hal_i2c.h>
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stdint.h>
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stdbool.h>
  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #include <stspin32g4.h>
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define STSPIN32G4_I2C_TIMEOUT      (100u)
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define STSPIN32G4_I2C_LOCKCODE     (0xDu)
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_READY_GPIO_Port GPIOE
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_READY_Pin LL_GPIO_PIN_14
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_NFAULT_GPIO_Port GPIOE
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_NFAULT_Pin LL_GPIO_PIN_15
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_WAKE_GPIO_Port GPIOE
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_WAKE_Pin LL_GPIO_PIN_7
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_READY_GPIO_Port GPIOE
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_READY_Pin GPIO_PIN_14
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_NFAULT_GPIO_Port GPIOE
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_NFAULT_Pin GPIO_PIN_15
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_WAKE_GPIO_Port GPIOE
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #define GD_WAKE_Pin GPIO_PIN_7
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** static uint8_t STSPIN32G4_bkupREADY;
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if !defined(USE_FULL_LL_DRIVER)
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** extern I2C_HandleTypeDef hi2c3;
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** void SystemClock_Config(void);
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_init(STSPIN32G4_HandleTypeDef *hdl)
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 853              		.loc 4 75 1
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 16
 856              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccIRHRej.s 			page 77


 857              		@ link register save eliminated.
 858 0000 80B4     		push	{r7}
 859              	.LCFI86:
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 7, -4
 862 0002 85B0     		sub	sp, sp, #20
 863              	.LCFI87:
 864              		.cfi_def_cfa_offset 24
 865 0004 00AF     		add	r7, sp, #0
 866              	.LCFI88:
 867              		.cfi_def_cfa_register 7
 868 0006 7860     		str	r0, [r7, #4]
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status = STSPIN32G4_OK;
 869              		.loc 4 76 28
 870 0008 0023     		movs	r3, #0
 871 000a FB73     		strb	r3, [r7, #15]
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 872              		.loc 4 78 6
 873 000c 7B68     		ldr	r3, [r7, #4]
 874 000e 002B     		cmp	r3, #0
 875 0010 01D1     		bne	.L49
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 876              		.loc 4 80 12
 877 0012 0123     		movs	r3, #1
 878 0014 08E0     		b	.L50
 879              	.L49:
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   hdl->i2cHdl = I2C3;
 880              		.loc 4 85 15
 881 0016 7B68     		ldr	r3, [r7, #4]
 882 0018 064A     		ldr	r2, .L52
 883 001a 1A60     		str	r2, [r3]
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   hdl->i2cHdl = &hi2c3;
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status != STSPIN32G4_OK)
 884              		.loc 4 93 6
 885 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 886 001e 002B     		cmp	r3, #0
 887 0020 01D0     		beq	.L51
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 888              		.loc 4 95 12
 889 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 890 0024 00E0     		b	.L50
 891              	.L51:
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
ARM GAS  /tmp/ccIRHRej.s 			page 78


  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 892              		.loc 4 98 10
 893 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 894              	.L50:
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 895              		.loc 4 99 1
 896 0028 1846     		mov	r0, r3
 897 002a 1437     		adds	r7, r7, #20
 898              	.LCFI89:
 899              		.cfi_def_cfa_offset 4
 900 002c BD46     		mov	sp, r7
 901              	.LCFI90:
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 002e 5DF8047B 		ldr	r7, [sp], #4
 905              	.LCFI91:
 906              		.cfi_restore 7
 907              		.cfi_def_cfa_offset 0
 908 0032 7047     		bx	lr
 909              	.L53:
 910              		.align	2
 911              	.L52:
 912 0034 00780040 		.word	1073772544
 913              		.cfi_endproc
 914              	.LFE502:
 916              		.section	.text.STSPIN32G4_deInit,"ax",%progbits
 917              		.align	1
 918              		.global	STSPIN32G4_deInit
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu fpv4-sp-d16
 924              	STSPIN32G4_deInit:
 925              	.LFB503:
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_deInit(STSPIN32G4_HandleTypeDef *hdl)
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 926              		.loc 4 102 1
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 16
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931 0000 80B4     		push	{r7}
 932              	.LCFI92:
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 7, -4
 935 0002 85B0     		sub	sp, sp, #20
 936              	.LCFI93:
 937              		.cfi_def_cfa_offset 24
 938 0004 00AF     		add	r7, sp, #0
 939              	.LCFI94:
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status = STSPIN32G4_OK;
 942              		.loc 4 103 28
 943 0008 0023     		movs	r3, #0
 944 000a FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccIRHRej.s 			page 79


 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   hdl->i2cHdl = NULL;
 945              		.loc 4 105 15
 946 000c 7B68     		ldr	r3, [r7, #4]
 947 000e 0022     		movs	r2, #0
 948 0010 1A60     		str	r2, [r3]
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 949              		.loc 4 107 10
 950 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 951              		.loc 4 108 1
 952 0014 1846     		mov	r0, r3
 953 0016 1437     		adds	r7, r7, #20
 954              	.LCFI95:
 955              		.cfi_def_cfa_offset 4
 956 0018 BD46     		mov	sp, r7
 957              	.LCFI96:
 958              		.cfi_def_cfa_register 13
 959              		@ sp needed
 960 001a 5DF8047B 		ldr	r7, [sp], #4
 961              	.LCFI97:
 962              		.cfi_restore 7
 963              		.cfi_def_cfa_offset 0
 964 001e 7047     		bx	lr
 965              		.cfi_endproc
 966              	.LFE503:
 968              		.section	.text.STSPIN32G4_lockReg,"ax",%progbits
 969              		.align	1
 970              		.global	STSPIN32G4_lockReg
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu fpv4-sp-d16
 976              	STSPIN32G4_lockReg:
 977              	.LFB504:
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_lockReg(STSPIN32G4_HandleTypeDef *hdl)
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 978              		.loc 4 111 1
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 16
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              	.LCFI98:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 84B0     		sub	sp, sp, #16
 988              	.LCFI99:
 989              		.cfi_def_cfa_offset 24
 990 0004 00AF     		add	r7, sp, #0
 991              	.LCFI100:
 992              		.cfi_def_cfa_register 7
 993 0006 7860     		str	r0, [r7, #4]
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_statusRegTypeDef statusReg;
ARM GAS  /tmp/ccIRHRej.s 			page 80


 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 994              		.loc 4 114 11
 995 0008 0023     		movs	r3, #0
 996 000a BB73     		strb	r3, [r7, #14]
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 997              		.loc 4 116 6
 998 000c 7B68     		ldr	r3, [r7, #4]
 999 000e 002B     		cmp	r3, #0
 1000 0010 01D1     		bne	.L57
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 1001              		.loc 4 118 12
 1002 0012 0123     		movs	r3, #1
 1003 0014 20E0     		b	.L61
 1004              	.L57:
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   i2cReg = ((STSPIN32G4_I2C_LOCKCODE << 4) & 0xf0) | (STSPIN32G4_I2C_LOCKCODE & 0x0f);
 1005              		.loc 4 121 10
 1006 0016 DD23     		movs	r3, #221
 1007 0018 BB73     		strb	r3, [r7, #14]
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_LOCK, i2cReg);
 1008              		.loc 4 122 12
 1009 001a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1010 001c 1A46     		mov	r2, r3
 1011 001e 0B21     		movs	r1, #11
 1012 0020 7868     		ldr	r0, [r7, #4]
 1013 0022 FFF7FEFF 		bl	STSPIN32G4_writeReg
 1014 0026 0346     		mov	r3, r0
 1015 0028 FB73     		strb	r3, [r7, #15]
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #ifdef STSPIN32G4_I2C_LOCKUSEPARANOID
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1016              		.loc 4 126 6
 1017 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1018 002c 002B     		cmp	r3, #0
 1019 002e 07D1     		bne	.L59
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_getStatus(hdl, &statusReg);
 1020              		.loc 4 128 14
 1021 0030 07F10C03 		add	r3, r7, #12
 1022 0034 1946     		mov	r1, r3
 1023 0036 7868     		ldr	r0, [r7, #4]
 1024 0038 FFF7FEFF 		bl	STSPIN32G4_getStatus
 1025 003c 0346     		mov	r3, r0
 1026 003e FB73     		strb	r3, [r7, #15]
 1027              	.L59:
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1028              		.loc 4 131 6
 1029 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1030 0042 002B     		cmp	r3, #0
 1031 0044 07D1     		bne	.L60
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
ARM GAS  /tmp/ccIRHRej.s 			page 81


 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (statusReg.lock != 1)
 1032              		.loc 4 133 24
 1033 0046 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1034 0048 23F07F03 		bic	r3, r3, #127
 1035 004c DBB2     		uxtb	r3, r3
 1036              		.loc 4 133 8
 1037 004e 002B     		cmp	r3, #0
 1038 0050 01D1     		bne	.L60
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_ERROR;
 1039              		.loc 4 135 14
 1040 0052 0123     		movs	r3, #1
 1041 0054 FB73     		strb	r3, [r7, #15]
 1042              	.L60:
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 1043              		.loc 4 141 10
 1044 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1045              	.L61:
 142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 1046              		.loc 4 142 1 discriminator 1
 1047 0058 1846     		mov	r0, r3
 1048 005a 1037     		adds	r7, r7, #16
 1049              	.LCFI101:
 1050              		.cfi_def_cfa_offset 8
 1051 005c BD46     		mov	sp, r7
 1052              	.LCFI102:
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 005e 80BD     		pop	{r7, pc}
 1056              		.cfi_endproc
 1057              	.LFE504:
 1059              		.section	.text.STSPIN32G4_unlockReg,"ax",%progbits
 1060              		.align	1
 1061              		.global	STSPIN32G4_unlockReg
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu fpv4-sp-d16
 1067              	STSPIN32G4_unlockReg:
 1068              	.LFB505:
 143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_unlockReg(STSPIN32G4_HandleTypeDef *hdl)
 145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 1069              		.loc 4 145 1
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 16
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              	.LCFI103:
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
ARM GAS  /tmp/ccIRHRej.s 			page 82


 1078 0002 84B0     		sub	sp, sp, #16
 1079              	.LCFI104:
 1080              		.cfi_def_cfa_offset 24
 1081 0004 00AF     		add	r7, sp, #0
 1082              	.LCFI105:
 1083              		.cfi_def_cfa_register 7
 1084 0006 7860     		str	r0, [r7, #4]
 146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_statusRegTypeDef statusReg;
 148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 1085              		.loc 4 148 11
 1086 0008 0023     		movs	r3, #0
 1087 000a BB73     		strb	r3, [r7, #14]
 149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 1088              		.loc 4 150 6
 1089 000c 7B68     		ldr	r3, [r7, #4]
 1090 000e 002B     		cmp	r3, #0
 1091 0010 01D1     		bne	.L63
 151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 1092              		.loc 4 152 12
 1093 0012 0123     		movs	r3, #1
 1094 0014 20E0     		b	.L67
 1095              	.L63:
 153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   i2cReg = (((~STSPIN32G4_I2C_LOCKCODE) << 4) & 0xf0) | (STSPIN32G4_I2C_LOCKCODE & 0x0f);
 1096              		.loc 4 155 10
 1097 0016 2D23     		movs	r3, #45
 1098 0018 BB73     		strb	r3, [r7, #14]
 156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_LOCK, i2cReg);
 1099              		.loc 4 156 12
 1100 001a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1101 001c 1A46     		mov	r2, r3
 1102 001e 0B21     		movs	r1, #11
 1103 0020 7868     		ldr	r0, [r7, #4]
 1104 0022 FFF7FEFF 		bl	STSPIN32G4_writeReg
 1105 0026 0346     		mov	r3, r0
 1106 0028 FB73     		strb	r3, [r7, #15]
 157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #ifdef STSPIN32G4_I2C_LOCKUSEPARANOID
 159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1107              		.loc 4 160 6
 1108 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1109 002c 002B     		cmp	r3, #0
 1110 002e 07D1     		bne	.L65
 161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_getStatus(hdl, &statusReg);
 1111              		.loc 4 162 14
 1112 0030 07F10C03 		add	r3, r7, #12
 1113 0034 1946     		mov	r1, r3
 1114 0036 7868     		ldr	r0, [r7, #4]
 1115 0038 FFF7FEFF 		bl	STSPIN32G4_getStatus
 1116 003c 0346     		mov	r3, r0
 1117 003e FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccIRHRej.s 			page 83


 1118              	.L65:
 163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1119              		.loc 4 165 6
 1120 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1121 0042 002B     		cmp	r3, #0
 1122 0044 07D1     		bne	.L66
 166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (statusReg.lock == 1)
 1123              		.loc 4 167 24
 1124 0046 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1125 0048 23F07F03 		bic	r3, r3, #127
 1126 004c DBB2     		uxtb	r3, r3
 1127              		.loc 4 167 8
 1128 004e 002B     		cmp	r3, #0
 1129 0050 01D0     		beq	.L66
 168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_ERROR;
 1130              		.loc 4 169 14
 1131 0052 0123     		movs	r3, #1
 1132 0054 FB73     		strb	r3, [r7, #15]
 1133              	.L66:
 170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
 174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 1134              		.loc 4 175 10
 1135 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1136              	.L67:
 176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 1137              		.loc 4 176 1 discriminator 1
 1138 0058 1846     		mov	r0, r3
 1139 005a 1037     		adds	r7, r7, #16
 1140              	.LCFI106:
 1141              		.cfi_def_cfa_offset 8
 1142 005c BD46     		mov	sp, r7
 1143              	.LCFI107:
 1144              		.cfi_def_cfa_register 13
 1145              		@ sp needed
 1146 005e 80BD     		pop	{r7, pc}
 1147              		.cfi_endproc
 1148              	.LFE505:
 1150              		.section	.text.STSPIN32G4_readReg,"ax",%progbits
 1151              		.align	1
 1152              		.global	STSPIN32G4_readReg
 1153              		.syntax unified
 1154              		.thumb
 1155              		.thumb_func
 1156              		.fpu fpv4-sp-d16
 1158              	STSPIN32G4_readReg:
 1159              	.LFB506:
 177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_readReg(STSPIN32G4_HandleTypeDef *hdl, uint8_t regAddr, uint8_t
 179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
ARM GAS  /tmp/ccIRHRej.s 			page 84


 1160              		.loc 4 179 1
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 48
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              	.LCFI108:
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 8EB0     		sub	sp, sp, #56
 1170              	.LCFI109:
 1171              		.cfi_def_cfa_offset 64
 1172 0004 02AF     		add	r7, sp, #8
 1173              	.LCFI110:
 1174              		.cfi_def_cfa 7, 56
 1175 0006 F860     		str	r0, [r7, #12]
 1176 0008 0B46     		mov	r3, r1
 1177 000a 7A60     		str	r2, [r7, #4]
 1178 000c FB72     		strb	r3, [r7, #11]
 180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status = STSPIN32G4_OK;
 1179              		.loc 4 180 28
 1180 000e 0023     		movs	r3, #0
 1181 0010 87F82330 		strb	r3, [r7, #35]
 181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 1182              		.loc 4 181 6
 1183 0014 FB68     		ldr	r3, [r7, #12]
 1184 0016 002B     		cmp	r3, #0
 1185 0018 05D1     		bne	.L69
 182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 		status = STSPIN32G4_ERROR;
 1186              		.loc 4 183 10
 1187 001a 0123     		movs	r3, #1
 1188 001c 87F82330 		strb	r3, [r7, #35]
 184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 1189              		.loc 4 184 12
 1190 0020 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1191 0024 F7E0     		b	.L90
 1192              	.L69:
 185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl->i2cHdl == NULL)
 1193              		.loc 4 187 10
 1194 0026 FB68     		ldr	r3, [r7, #12]
 1195 0028 1B68     		ldr	r3, [r3]
 1196              		.loc 4 187 6
 1197 002a 002B     		cmp	r3, #0
 1198 002c 05D1     		bne	.L71
 188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 		status = STSPIN32G4_ERROR;
 1199              		.loc 4 189 10
 1200 002e 0123     		movs	r3, #1
 1201 0030 87F82330 		strb	r3, [r7, #35]
 190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 1202              		.loc 4 190 12
 1203 0034 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1204 0038 EDE0     		b	.L90
 1205              	.L71:
ARM GAS  /tmp/ccIRHRej.s 			page 85


 191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (value == NULL)
 1206              		.loc 4 193 6
 1207 003a 7B68     		ldr	r3, [r7, #4]
 1208 003c 002B     		cmp	r3, #0
 1209 003e 05D1     		bne	.L72
 194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 		status = STSPIN32G4_ERROR;
 1210              		.loc 4 195 10
 1211 0040 0123     		movs	r3, #1
 1212 0042 87F82330 		strb	r3, [r7, #35]
 196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 1213              		.loc 4 196 12
 1214 0046 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1215 004a E4E0     		b	.L90
 1216              	.L72:
 197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
 200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
 202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 1217              		.loc 4 202 3
 1218 004c 07F11003 		add	r3, r7, #16
 1219 0050 1846     		mov	r0, r3
 1220 0052 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
 203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t tickFreq = RCC_Clocks.HCLK_Frequency /  (SysTick->LOAD + 1);
 1221              		.loc 4 204 33
 1222 0056 7A69     		ldr	r2, [r7, #20]
 1223              		.loc 4 204 60
 1224 0058 714B     		ldr	r3, .L91
 1225 005a 5B68     		ldr	r3, [r3, #4]
 1226              		.loc 4 204 67
 1227 005c 0133     		adds	r3, r3, #1
 1228              		.loc 4 204 12
 1229 005e B2FBF3F3 		udiv	r3, r2, r3
 1230 0062 FB62     		str	r3, [r7, #44]
 205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (LL_SYSTICK_GetClkSource() == LL_SYSTICK_CLKSOURCE_HCLK_DIV8)
 1231              		.loc 4 206 7
 1232 0064 FFF7FEFF 		bl	LL_SYSTICK_GetClkSource
 1233 0068 0346     		mov	r3, r0
 1234              		.loc 4 206 6
 1235 006a 002B     		cmp	r3, #0
 1236 006c 02D1     		bne	.L73
 207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     tickFreq /= 8;
 1237              		.loc 4 208 14
 1238 006e FB6A     		ldr	r3, [r7, #44]
 1239 0070 DB08     		lsrs	r3, r3, #3
 1240 0072 FB62     		str	r3, [r7, #44]
 1241              	.L73:
 209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t stat = 0;
ARM GAS  /tmp/ccIRHRej.s 			page 86


 1242              		.loc 4 211 11
 1243 0074 0023     		movs	r3, #0
 1244 0076 87F82B30 		strb	r3, [r7, #43]
 212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t ticks = (STSPIN32G4_I2C_TIMEOUT * tickFreq) / 1000 + 1;
 1245              		.loc 4 212 44
 1246 007a FB6A     		ldr	r3, [r7, #44]
 1247 007c 6422     		movs	r2, #100
 1248 007e 02FB03F3 		mul	r3, r2, r3
 1249              		.loc 4 212 56
 1250 0082 684A     		ldr	r2, .L91+4
 1251 0084 A2FB0323 		umull	r2, r3, r2, r3
 1252 0088 9B09     		lsrs	r3, r3, #6
 1253              		.loc 4 212 12
 1254 008a 0133     		adds	r3, r3, #1
 1255 008c 7B62     		str	r3, [r7, #36]
 1256              	.L89:
 213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   while (true)
 215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     switch (stat)
 1257              		.loc 4 216 5
 1258 008e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1259 0092 092B     		cmp	r3, #9
 1260 0094 00F2A880 		bhi	.L74
 1261 0098 01A2     		adr	r2, .L76
 1262 009a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1263 009e 00BF     		.p2align 2
 1264              	.L76:
 1265 00a0 C9000000 		.word	.L85+1
 1266 00a4 ED000000 		.word	.L84+1
 1267 00a8 0F010000 		.word	.L83+1
 1268 00ac 29010000 		.word	.L82+1
 1269 00b0 43010000 		.word	.L81+1
 1270 00b4 5D010000 		.word	.L80+1
 1271 00b8 81010000 		.word	.L79+1
 1272 00bc 9B010000 		.word	.L78+1
 1273 00c0 B9010000 		.word	.L77+1
 1274 00c4 D3010000 		.word	.L75+1
 1275              		.p2align 1
 1276              	.L85:
 217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 0:
 219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += !LL_I2C_IsActiveFlag_BUSY(hdl->i2cHdl);
 1277              		.loc 4 219 44
 1278 00c8 FB68     		ldr	r3, [r7, #12]
 1279 00ca 1B68     		ldr	r3, [r3]
 1280              		.loc 4 219 16
 1281 00cc 1846     		mov	r0, r3
 1282 00ce FFF7FEFF 		bl	LL_I2C_IsActiveFlag_BUSY
 1283 00d2 0346     		mov	r3, r0
 1284              		.loc 4 219 15
 1285 00d4 002B     		cmp	r3, #0
 1286 00d6 0CBF     		ite	eq
 1287 00d8 0123     		moveq	r3, #1
 1288 00da 0023     		movne	r3, #0
 1289 00dc DBB2     		uxtb	r3, r3
 1290              		.loc 4 219 12
ARM GAS  /tmp/ccIRHRej.s 			page 87


 1291 00de DAB2     		uxtb	r2, r3
 1292 00e0 97F82B30 		ldrb	r3, [r7, #43]
 1293 00e4 1344     		add	r3, r3, r2
 1294 00e6 87F82B30 		strb	r3, [r7, #43]
 220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1295              		.loc 4 220 7
 1296 00ea 83E0     		b	.L86
 1297              	.L84:
 221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 1:
 223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_HandleTransfer(hdl->i2cHdl, STSPIN32G4_I2C_ADDR, LL_I2C_ADDRSLAVE_7BIT, 1, LL_I2C_MODE
 1298              		.loc 4 223 7
 1299 00ec FB68     		ldr	r3, [r7, #12]
 1300 00ee 1868     		ldr	r0, [r3]
 1301 00f0 4D4B     		ldr	r3, .L91+8
 1302 00f2 0193     		str	r3, [sp, #4]
 1303 00f4 0023     		movs	r3, #0
 1304 00f6 0093     		str	r3, [sp]
 1305 00f8 0123     		movs	r3, #1
 1306 00fa 0022     		movs	r2, #0
 1307 00fc 8E21     		movs	r1, #142
 1308 00fe FFF7FEFF 		bl	LL_I2C_HandleTransfer
 224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1309              		.loc 4 224 11
 1310 0102 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1311 0106 0133     		adds	r3, r3, #1
 1312 0108 87F82B30 		strb	r3, [r7, #43]
 225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1313              		.loc 4 225 7
 1314 010c 72E0     		b	.L86
 1315              	.L83:
 226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 2:
 228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_TXIS(hdl->i2cHdl);
 1316              		.loc 4 228 43
 1317 010e FB68     		ldr	r3, [r7, #12]
 1318 0110 1B68     		ldr	r3, [r3]
 1319              		.loc 4 228 15
 1320 0112 1846     		mov	r0, r3
 1321 0114 FFF7FEFF 		bl	LL_I2C_IsActiveFlag_TXIS
 1322 0118 0346     		mov	r3, r0
 1323              		.loc 4 228 12
 1324 011a DAB2     		uxtb	r2, r3
 1325 011c 97F82B30 		ldrb	r3, [r7, #43]
 1326 0120 1344     		add	r3, r3, r2
 1327 0122 87F82B30 		strb	r3, [r7, #43]
 229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1328              		.loc 4 229 7
 1329 0126 65E0     		b	.L86
 1330              	.L82:
 230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 3:
 232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_TransmitData8(hdl->i2cHdl, regAddr);
 1331              		.loc 4 232 7
 1332 0128 FB68     		ldr	r3, [r7, #12]
 1333 012a 1B68     		ldr	r3, [r3]
 1334 012c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccIRHRej.s 			page 88


 1335 012e 1146     		mov	r1, r2
 1336 0130 1846     		mov	r0, r3
 1337 0132 FFF7FEFF 		bl	LL_I2C_TransmitData8
 233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1338              		.loc 4 233 11
 1339 0136 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1340 013a 0133     		adds	r3, r3, #1
 1341 013c 87F82B30 		strb	r3, [r7, #43]
 234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1342              		.loc 4 234 7
 1343 0140 58E0     		b	.L86
 1344              	.L81:
 235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 4:
 237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_TC(hdl->i2cHdl);
 1345              		.loc 4 237 41
 1346 0142 FB68     		ldr	r3, [r7, #12]
 1347 0144 1B68     		ldr	r3, [r3]
 1348              		.loc 4 237 15
 1349 0146 1846     		mov	r0, r3
 1350 0148 FFF7FEFF 		bl	LL_I2C_IsActiveFlag_TC
 1351 014c 0346     		mov	r3, r0
 1352              		.loc 4 237 12
 1353 014e DAB2     		uxtb	r2, r3
 1354 0150 97F82B30 		ldrb	r3, [r7, #43]
 1355 0154 1344     		add	r3, r3, r2
 1356 0156 87F82B30 		strb	r3, [r7, #43]
 238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1357              		.loc 4 238 7
 1358 015a 4BE0     		b	.L86
 1359              	.L80:
 239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 5:
 241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_HandleTransfer(hdl->i2cHdl, STSPIN32G4_I2C_ADDR, LL_I2C_ADDRSLAVE_7BIT, 1, I2C_CR2_AUT
 1360              		.loc 4 241 7
 1361 015c FB68     		ldr	r3, [r7, #12]
 1362 015e 1868     		ldr	r0, [r3]
 1363 0160 324B     		ldr	r3, .L91+12
 1364 0162 0193     		str	r3, [sp, #4]
 1365 0164 4FF00073 		mov	r3, #33554432
 1366 0168 0093     		str	r3, [sp]
 1367 016a 0123     		movs	r3, #1
 1368 016c 0022     		movs	r2, #0
 1369 016e 8E21     		movs	r1, #142
 1370 0170 FFF7FEFF 		bl	LL_I2C_HandleTransfer
 242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1371              		.loc 4 242 11
 1372 0174 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1373 0178 0133     		adds	r3, r3, #1
 1374 017a 87F82B30 		strb	r3, [r7, #43]
 243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1375              		.loc 4 243 7
 1376 017e 39E0     		b	.L86
 1377              	.L79:
 244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 6:
 246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_RXNE(hdl->i2cHdl);
ARM GAS  /tmp/ccIRHRej.s 			page 89


 1378              		.loc 4 246 43
 1379 0180 FB68     		ldr	r3, [r7, #12]
 1380 0182 1B68     		ldr	r3, [r3]
 1381              		.loc 4 246 15
 1382 0184 1846     		mov	r0, r3
 1383 0186 FFF7FEFF 		bl	LL_I2C_IsActiveFlag_RXNE
 1384 018a 0346     		mov	r3, r0
 1385              		.loc 4 246 12
 1386 018c DAB2     		uxtb	r2, r3
 1387 018e 97F82B30 		ldrb	r3, [r7, #43]
 1388 0192 1344     		add	r3, r3, r2
 1389 0194 87F82B30 		strb	r3, [r7, #43]
 247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1390              		.loc 4 247 7
 1391 0198 2CE0     		b	.L86
 1392              	.L78:
 248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 7:
 250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       *value = LL_I2C_ReceiveData8(hdl->i2cHdl);
 1393              		.loc 4 250 39
 1394 019a FB68     		ldr	r3, [r7, #12]
 1395 019c 1B68     		ldr	r3, [r3]
 1396              		.loc 4 250 16
 1397 019e 1846     		mov	r0, r3
 1398 01a0 FFF7FEFF 		bl	LL_I2C_ReceiveData8
 1399 01a4 0346     		mov	r3, r0
 1400 01a6 1A46     		mov	r2, r3
 1401              		.loc 4 250 14
 1402 01a8 7B68     		ldr	r3, [r7, #4]
 1403 01aa 1A70     		strb	r2, [r3]
 251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1404              		.loc 4 251 11
 1405 01ac 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1406 01b0 0133     		adds	r3, r3, #1
 1407 01b2 87F82B30 		strb	r3, [r7, #43]
 252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1408              		.loc 4 252 7
 1409 01b6 1DE0     		b	.L86
 1410              	.L77:
 253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 8:
 255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_STOP(hdl->i2cHdl);
 1411              		.loc 4 255 43
 1412 01b8 FB68     		ldr	r3, [r7, #12]
 1413 01ba 1B68     		ldr	r3, [r3]
 1414              		.loc 4 255 15
 1415 01bc 1846     		mov	r0, r3
 1416 01be FFF7FEFF 		bl	LL_I2C_IsActiveFlag_STOP
 1417 01c2 0346     		mov	r3, r0
 1418              		.loc 4 255 12
 1419 01c4 DAB2     		uxtb	r2, r3
 1420 01c6 97F82B30 		ldrb	r3, [r7, #43]
 1421 01ca 1344     		add	r3, r3, r2
 1422 01cc 87F82B30 		strb	r3, [r7, #43]
 256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1423              		.loc 4 256 7
 1424 01d0 10E0     		b	.L86
ARM GAS  /tmp/ccIRHRej.s 			page 90


 1425              	.L75:
 257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case 9:
 259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_ClearFlag_STOP(hdl->i2cHdl);
 1426              		.loc 4 259 7
 1427 01d2 FB68     		ldr	r3, [r7, #12]
 1428 01d4 1B68     		ldr	r3, [r3]
 1429 01d6 1846     		mov	r0, r3
 1430 01d8 FFF7FEFF 		bl	LL_I2C_ClearFlag_STOP
 260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_OK;
 1431              		.loc 4 260 14
 1432 01dc 0023     		movs	r3, #0
 1433 01de 87F82330 		strb	r3, [r7, #35]
 261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       return status;
 1434              		.loc 4 261 14
 1435 01e2 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1436 01e6 16E0     		b	.L90
 1437              	.L74:
 262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       default:
 264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_ERROR;
 1438              		.loc 4 264 14
 1439 01e8 0123     		movs	r3, #1
 1440 01ea 87F82330 		strb	r3, [r7, #35]
 265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       return status;
 1441              		.loc 4 265 14
 1442 01ee 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1443 01f2 10E0     		b	.L90
 1444              	.L86:
 266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (LL_SYSTICK_IsActiveCounterFlag())
 1445              		.loc 4 269 9
 1446 01f4 FFF7FEFF 		bl	LL_SYSTICK_IsActiveCounterFlag
 1447 01f8 0346     		mov	r3, r0
 1448              		.loc 4 269 8
 1449 01fa 002B     		cmp	r3, #0
 1450 01fc 02D0     		beq	.L87
 270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       ticks--;
 1451              		.loc 4 271 12
 1452 01fe 7B6A     		ldr	r3, [r7, #36]
 1453 0200 013B     		subs	r3, r3, #1
 1454 0202 7B62     		str	r3, [r7, #36]
 1455              	.L87:
 272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if(ticks == 0)
 1456              		.loc 4 274 7
 1457 0204 7B6A     		ldr	r3, [r7, #36]
 1458 0206 002B     		cmp	r3, #0
 1459 0208 7FF441AF 		bne	.L89
 275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_TIMEOUT;
 1460              		.loc 4 276 14
 1461 020c 0323     		movs	r3, #3
ARM GAS  /tmp/ccIRHRej.s 			page 91


 1462 020e 87F82330 		strb	r3, [r7, #35]
 277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       return status;
 1463              		.loc 4 277 14
 1464 0212 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1465              	.L90:
 278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
 282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t ticks = (STSPIN32G4_I2C_TIMEOUT * HAL_GetTickFreq()) / 1000 + 1;
 284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = (STSPIN32G4_StatusTypeDef) HAL_I2C_Mem_Read(hdl->i2cHdl, STSPIN32G4_I2C_ADDR, (uint16_t)
 285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
 289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 1466              		.loc 4 290 1 discriminator 1
 1467 0216 1846     		mov	r0, r3
 1468 0218 3037     		adds	r7, r7, #48
 1469              	.LCFI111:
 1470              		.cfi_def_cfa_offset 8
 1471 021a BD46     		mov	sp, r7
 1472              	.LCFI112:
 1473              		.cfi_def_cfa_register 13
 1474              		@ sp needed
 1475 021c 80BD     		pop	{r7, pc}
 1476              	.L92:
 1477 021e 00BF     		.align	2
 1478              	.L91:
 1479 0220 10E000E0 		.word	-536813552
 1480 0224 D34D6210 		.word	274877907
 1481 0228 00200080 		.word	-2147475456
 1482 022c 00240080 		.word	-2147474432
 1483              		.cfi_endproc
 1484              	.LFE506:
 1486              		.section	.text.STSPIN32G4_writeReg,"ax",%progbits
 1487              		.align	1
 1488              		.global	STSPIN32G4_writeReg
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	STSPIN32G4_writeReg:
 1495              	.LFB507:
 291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_writeReg(STSPIN32G4_HandleTypeDef *hdl, uint8_t regAddr, uint8_
 293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 1496              		.loc 4 293 1
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 40
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 80B5     		push	{r7, lr}
 1501              	.LCFI113:
 1502              		.cfi_def_cfa_offset 8
 1503              		.cfi_offset 7, -8
ARM GAS  /tmp/ccIRHRej.s 			page 92


 1504              		.cfi_offset 14, -4
 1505 0002 8CB0     		sub	sp, sp, #48
 1506              	.LCFI114:
 1507              		.cfi_def_cfa_offset 56
 1508 0004 02AF     		add	r7, sp, #8
 1509              	.LCFI115:
 1510              		.cfi_def_cfa 7, 48
 1511 0006 7860     		str	r0, [r7, #4]
 1512 0008 0B46     		mov	r3, r1
 1513 000a FB70     		strb	r3, [r7, #3]
 1514 000c 1346     		mov	r3, r2
 1515 000e BB70     		strb	r3, [r7, #2]
 294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status = STSPIN32G4_OK;
 1516              		.loc 4 294 28
 1517 0010 0023     		movs	r3, #0
 1518 0012 FB76     		strb	r3, [r7, #27]
 295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 1519              		.loc 4 295 6
 1520 0014 7B68     		ldr	r3, [r7, #4]
 1521 0016 002B     		cmp	r3, #0
 1522 0018 03D1     		bne	.L94
 296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 		status = STSPIN32G4_ERROR;
 1523              		.loc 4 297 10
 1524 001a 0123     		movs	r3, #1
 1525 001c FB76     		strb	r3, [r7, #27]
 298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 1526              		.loc 4 298 12
 1527 001e FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1528 0020 E4E0     		b	.L114
 1529              	.L94:
 299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl->i2cHdl == NULL)
 1530              		.loc 4 301 10
 1531 0022 7B68     		ldr	r3, [r7, #4]
 1532 0024 1B68     		ldr	r3, [r3]
 1533              		.loc 4 301 6
 1534 0026 002B     		cmp	r3, #0
 1535 0028 03D1     		bne	.L96
 302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 		status = STSPIN32G4_ERROR;
 1536              		.loc 4 303 10
 1537 002a 0123     		movs	r3, #1
 1538 002c FB76     		strb	r3, [r7, #27]
 304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 1539              		.loc 4 304 12
 1540 002e FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1541 0030 DCE0     		b	.L114
 1542              	.L96:
 305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
 308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
 310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 1543              		.loc 4 310 3
ARM GAS  /tmp/ccIRHRej.s 			page 93


 1544 0032 07F10803 		add	r3, r7, #8
 1545 0036 1846     		mov	r0, r3
 1546 0038 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
 311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t tickFreq = RCC_Clocks.HCLK_Frequency /  (SysTick->LOAD + 1);
 1547              		.loc 4 312 33
 1548 003c FA68     		ldr	r2, [r7, #12]
 1549              		.loc 4 312 60
 1550 003e 6D4B     		ldr	r3, .L115
 1551 0040 5B68     		ldr	r3, [r3, #4]
 1552              		.loc 4 312 67
 1553 0042 0133     		adds	r3, r3, #1
 1554              		.loc 4 312 12
 1555 0044 B2FBF3F3 		udiv	r3, r2, r3
 1556 0048 7B62     		str	r3, [r7, #36]
 313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (LL_SYSTICK_GetClkSource() == LL_SYSTICK_CLKSOURCE_HCLK_DIV8)
 1557              		.loc 4 314 7
 1558 004a FFF7FEFF 		bl	LL_SYSTICK_GetClkSource
 1559 004e 0346     		mov	r3, r0
 1560              		.loc 4 314 6
 1561 0050 002B     		cmp	r3, #0
 1562 0052 02D1     		bne	.L97
 315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     tickFreq /= 8;
 1563              		.loc 4 316 14
 1564 0054 7B6A     		ldr	r3, [r7, #36]
 1565 0056 DB08     		lsrs	r3, r3, #3
 1566 0058 7B62     		str	r3, [r7, #36]
 1567              	.L97:
 317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t stat = 0;
 1568              		.loc 4 319 11
 1569 005a 0023     		movs	r3, #0
 1570 005c 87F82330 		strb	r3, [r7, #35]
 320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t ticks = (STSPIN32G4_I2C_TIMEOUT * tickFreq) / 1000 + 1;
 1571              		.loc 4 320 44
 1572 0060 7B6A     		ldr	r3, [r7, #36]
 1573 0062 6422     		movs	r2, #100
 1574 0064 02FB03F3 		mul	r3, r2, r3
 1575              		.loc 4 320 56
 1576 0068 634A     		ldr	r2, .L115+4
 1577 006a A2FB0323 		umull	r2, r3, r2, r3
 1578 006e 9B09     		lsrs	r3, r3, #6
 1579              		.loc 4 320 12
 1580 0070 0133     		adds	r3, r3, #1
 1581 0072 FB61     		str	r3, [r7, #28]
 1582              	.L113:
 321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   while (true)
 323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     switch (stat)
 1583              		.loc 4 324 5
 1584 0074 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1585 0078 092B     		cmp	r3, #9
 1586 007a 00F2A480 		bhi	.L98
ARM GAS  /tmp/ccIRHRej.s 			page 94


 1587 007e 01A2     		adr	r2, .L100
 1588 0080 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1589              		.p2align 2
 1590              	.L100:
 1591 0084 AD000000 		.word	.L109+1
 1592 0088 D1000000 		.word	.L108+1
 1593 008c F5000000 		.word	.L107+1
 1594 0090 0F010000 		.word	.L106+1
 1595 0094 29010000 		.word	.L105+1
 1596 0098 43010000 		.word	.L104+1
 1597 009c 67010000 		.word	.L103+1
 1598 00a0 81010000 		.word	.L102+1
 1599 00a4 9B010000 		.word	.L101+1
 1600 00a8 B5010000 		.word	.L99+1
 1601              		.p2align 1
 1602              	.L109:
 325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 0:
 327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += !LL_I2C_IsActiveFlag_BUSY(hdl->i2cHdl);
 1603              		.loc 4 327 44
 1604 00ac 7B68     		ldr	r3, [r7, #4]
 1605 00ae 1B68     		ldr	r3, [r3]
 1606              		.loc 4 327 16
 1607 00b0 1846     		mov	r0, r3
 1608 00b2 FFF7FEFF 		bl	LL_I2C_IsActiveFlag_BUSY
 1609 00b6 0346     		mov	r3, r0
 1610              		.loc 4 327 15
 1611 00b8 002B     		cmp	r3, #0
 1612 00ba 0CBF     		ite	eq
 1613 00bc 0123     		moveq	r3, #1
 1614 00be 0023     		movne	r3, #0
 1615 00c0 DBB2     		uxtb	r3, r3
 1616              		.loc 4 327 12
 1617 00c2 DAB2     		uxtb	r2, r3
 1618 00c4 97F82330 		ldrb	r3, [r7, #35]
 1619 00c8 1344     		add	r3, r3, r2
 1620 00ca 87F82330 		strb	r3, [r7, #35]
 328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1621              		.loc 4 328 7
 1622 00ce 7EE0     		b	.L110
 1623              	.L108:
 329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 1:
 331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_HandleTransfer(hdl->i2cHdl, STSPIN32G4_I2C_ADDR, LL_I2C_ADDRSLAVE_7BIT, 1, I2C_CR2_REL
 1624              		.loc 4 331 7
 1625 00d0 7B68     		ldr	r3, [r7, #4]
 1626 00d2 1868     		ldr	r0, [r3]
 1627 00d4 494B     		ldr	r3, .L115+8
 1628 00d6 0193     		str	r3, [sp, #4]
 1629 00d8 4FF08073 		mov	r3, #16777216
 1630 00dc 0093     		str	r3, [sp]
 1631 00de 0123     		movs	r3, #1
 1632 00e0 0022     		movs	r2, #0
 1633 00e2 8E21     		movs	r1, #142
 1634 00e4 FFF7FEFF 		bl	LL_I2C_HandleTransfer
 332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1635              		.loc 4 332 11
ARM GAS  /tmp/ccIRHRej.s 			page 95


 1636 00e8 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1637 00ec 0133     		adds	r3, r3, #1
 1638 00ee 87F82330 		strb	r3, [r7, #35]
 333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1639              		.loc 4 333 7
 1640 00f2 6CE0     		b	.L110
 1641              	.L107:
 334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 2:
 336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_TXIS(hdl->i2cHdl);
 1642              		.loc 4 336 43
 1643 00f4 7B68     		ldr	r3, [r7, #4]
 1644 00f6 1B68     		ldr	r3, [r3]
 1645              		.loc 4 336 15
 1646 00f8 1846     		mov	r0, r3
 1647 00fa FFF7FEFF 		bl	LL_I2C_IsActiveFlag_TXIS
 1648 00fe 0346     		mov	r3, r0
 1649              		.loc 4 336 12
 1650 0100 DAB2     		uxtb	r2, r3
 1651 0102 97F82330 		ldrb	r3, [r7, #35]
 1652 0106 1344     		add	r3, r3, r2
 1653 0108 87F82330 		strb	r3, [r7, #35]
 337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1654              		.loc 4 337 7
 1655 010c 5FE0     		b	.L110
 1656              	.L106:
 338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 3:
 340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_TransmitData8(hdl->i2cHdl, regAddr);
 1657              		.loc 4 340 7
 1658 010e 7B68     		ldr	r3, [r7, #4]
 1659 0110 1B68     		ldr	r3, [r3]
 1660 0112 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1661 0114 1146     		mov	r1, r2
 1662 0116 1846     		mov	r0, r3
 1663 0118 FFF7FEFF 		bl	LL_I2C_TransmitData8
 341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1664              		.loc 4 341 11
 1665 011c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1666 0120 0133     		adds	r3, r3, #1
 1667 0122 87F82330 		strb	r3, [r7, #35]
 342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1668              		.loc 4 342 7
 1669 0126 52E0     		b	.L110
 1670              	.L105:
 343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 4:
 345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_TCR(hdl->i2cHdl);
 1671              		.loc 4 345 42
 1672 0128 7B68     		ldr	r3, [r7, #4]
 1673 012a 1B68     		ldr	r3, [r3]
 1674              		.loc 4 345 15
 1675 012c 1846     		mov	r0, r3
 1676 012e FFF7FEFF 		bl	LL_I2C_IsActiveFlag_TCR
 1677 0132 0346     		mov	r3, r0
 1678              		.loc 4 345 12
 1679 0134 DAB2     		uxtb	r2, r3
ARM GAS  /tmp/ccIRHRej.s 			page 96


 1680 0136 97F82330 		ldrb	r3, [r7, #35]
 1681 013a 1344     		add	r3, r3, r2
 1682 013c 87F82330 		strb	r3, [r7, #35]
 346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1683              		.loc 4 346 7
 1684 0140 45E0     		b	.L110
 1685              	.L104:
 347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 5:
 349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_HandleTransfer(hdl->i2cHdl, STSPIN32G4_I2C_ADDR, LL_I2C_ADDRSLAVE_7BIT, 1, I2C_CR2_AUT
 1686              		.loc 4 349 7
 1687 0142 7B68     		ldr	r3, [r7, #4]
 1688 0144 1868     		ldr	r0, [r3]
 1689 0146 0023     		movs	r3, #0
 1690 0148 0193     		str	r3, [sp, #4]
 1691 014a 4FF00073 		mov	r3, #33554432
 1692 014e 0093     		str	r3, [sp]
 1693 0150 0123     		movs	r3, #1
 1694 0152 0022     		movs	r2, #0
 1695 0154 8E21     		movs	r1, #142
 1696 0156 FFF7FEFF 		bl	LL_I2C_HandleTransfer
 350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1697              		.loc 4 350 11
 1698 015a 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1699 015e 0133     		adds	r3, r3, #1
 1700 0160 87F82330 		strb	r3, [r7, #35]
 351:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1701              		.loc 4 351 7
 1702 0164 33E0     		b	.L110
 1703              	.L103:
 352:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 353:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 6:
 354:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_TXIS(hdl->i2cHdl);
 1704              		.loc 4 354 43
 1705 0166 7B68     		ldr	r3, [r7, #4]
 1706 0168 1B68     		ldr	r3, [r3]
 1707              		.loc 4 354 15
 1708 016a 1846     		mov	r0, r3
 1709 016c FFF7FEFF 		bl	LL_I2C_IsActiveFlag_TXIS
 1710 0170 0346     		mov	r3, r0
 1711              		.loc 4 354 12
 1712 0172 DAB2     		uxtb	r2, r3
 1713 0174 97F82330 		ldrb	r3, [r7, #35]
 1714 0178 1344     		add	r3, r3, r2
 1715 017a 87F82330 		strb	r3, [r7, #35]
 355:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1716              		.loc 4 355 7
 1717 017e 26E0     		b	.L110
 1718              	.L102:
 356:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 357:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 7:
 358:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_TransmitData8(hdl->i2cHdl, value);
 1719              		.loc 4 358 7
 1720 0180 7B68     		ldr	r3, [r7, #4]
 1721 0182 1B68     		ldr	r3, [r3]
 1722 0184 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1723 0186 1146     		mov	r1, r2
ARM GAS  /tmp/ccIRHRej.s 			page 97


 1724 0188 1846     		mov	r0, r3
 1725 018a FFF7FEFF 		bl	LL_I2C_TransmitData8
 359:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat++;
 1726              		.loc 4 359 11
 1727 018e 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1728 0192 0133     		adds	r3, r3, #1
 1729 0194 87F82330 		strb	r3, [r7, #35]
 360:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1730              		.loc 4 360 7
 1731 0198 19E0     		b	.L110
 1732              	.L101:
 361:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 362:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 8:
 363:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       stat += LL_I2C_IsActiveFlag_STOP(hdl->i2cHdl);
 1733              		.loc 4 363 43
 1734 019a 7B68     		ldr	r3, [r7, #4]
 1735 019c 1B68     		ldr	r3, [r3]
 1736              		.loc 4 363 15
 1737 019e 1846     		mov	r0, r3
 1738 01a0 FFF7FEFF 		bl	LL_I2C_IsActiveFlag_STOP
 1739 01a4 0346     		mov	r3, r0
 1740              		.loc 4 363 12
 1741 01a6 DAB2     		uxtb	r2, r3
 1742 01a8 97F82330 		ldrb	r3, [r7, #35]
 1743 01ac 1344     		add	r3, r3, r2
 1744 01ae 87F82330 		strb	r3, [r7, #35]
 364:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
 1745              		.loc 4 364 7
 1746 01b2 0CE0     		b	.L110
 1747              	.L99:
 365:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 366:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     case 9:
 367:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       LL_I2C_ClearFlag_STOP(hdl->i2cHdl);
 1748              		.loc 4 367 7
 1749 01b4 7B68     		ldr	r3, [r7, #4]
 1750 01b6 1B68     		ldr	r3, [r3]
 1751 01b8 1846     		mov	r0, r3
 1752 01ba FFF7FEFF 		bl	LL_I2C_ClearFlag_STOP
 368:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 	    status = STSPIN32G4_OK;
 1753              		.loc 4 368 13
 1754 01be 0023     		movs	r3, #0
 1755 01c0 FB76     		strb	r3, [r7, #27]
 369:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       return status;
 1756              		.loc 4 369 14
 1757 01c2 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1758 01c4 12E0     		b	.L114
 1759              	.L98:
 370:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 371:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     default:
 372:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 			status = STSPIN32G4_ERROR;
 1760              		.loc 4 372 11
 1761 01c6 0123     		movs	r3, #1
 1762 01c8 FB76     		strb	r3, [r7, #27]
 373:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       return status;
 1763              		.loc 4 373 14
 1764 01ca FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1765 01cc 0EE0     		b	.L114
ARM GAS  /tmp/ccIRHRej.s 			page 98


 1766              	.L110:
 374:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 375:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 376:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 377:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (LL_SYSTICK_IsActiveCounterFlag())
 1767              		.loc 4 377 9
 1768 01ce FFF7FEFF 		bl	LL_SYSTICK_IsActiveCounterFlag
 1769 01d2 0346     		mov	r3, r0
 1770              		.loc 4 377 8
 1771 01d4 002B     		cmp	r3, #0
 1772 01d6 02D0     		beq	.L111
 378:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 379:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       ticks--;
 1773              		.loc 4 379 12
 1774 01d8 FB69     		ldr	r3, [r7, #28]
 1775 01da 013B     		subs	r3, r3, #1
 1776 01dc FB61     		str	r3, [r7, #28]
 1777              	.L111:
 380:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 381:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 382:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if(ticks == 0)
 1778              		.loc 4 382 7
 1779 01de FB69     		ldr	r3, [r7, #28]
 1780 01e0 002B     		cmp	r3, #0
 1781 01e2 7FF447AF 		bne	.L113
 383:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 384:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 			status = STSPIN32G4_TIMEOUT;
 1782              		.loc 4 384 11
 1783 01e6 0323     		movs	r3, #3
 1784 01e8 FB76     		strb	r3, [r7, #27]
 385:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       return status;
 1785              		.loc 4 385 14
 1786 01ea FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1787              	.L114:
 386:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 387:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 388:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 389:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
 390:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 391:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t ticks = (STSPIN32G4_I2C_TIMEOUT * HAL_GetTickFreq()) / 1000 + 1;
 392:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = (STSPIN32G4_StatusTypeDef) HAL_I2C_Mem_Write(hdl->i2cHdl, STSPIN32G4_I2C_ADDR, (uint16_t
 393:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 394:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 395:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
 396:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 397:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 1788              		.loc 4 397 1 discriminator 1
 1789 01ec 1846     		mov	r0, r3
 1790 01ee 2837     		adds	r7, r7, #40
 1791              	.LCFI116:
 1792              		.cfi_def_cfa_offset 8
 1793 01f0 BD46     		mov	sp, r7
 1794              	.LCFI117:
 1795              		.cfi_def_cfa_register 13
 1796              		@ sp needed
 1797 01f2 80BD     		pop	{r7, pc}
 1798              	.L116:
ARM GAS  /tmp/ccIRHRej.s 			page 99


 1799              		.align	2
 1800              	.L115:
 1801 01f4 10E000E0 		.word	-536813552
 1802 01f8 D34D6210 		.word	274877907
 1803 01fc 00200080 		.word	-2147475456
 1804              		.cfi_endproc
 1805              	.LFE507:
 1807              		.section	.text.STSPIN32G4_writeVerifyReg,"ax",%progbits
 1808              		.align	1
 1809              		.global	STSPIN32G4_writeVerifyReg
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu fpv4-sp-d16
 1815              	STSPIN32G4_writeVerifyReg:
 1816              	.LFB508:
 398:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 399:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_writeVerifyReg(STSPIN32G4_HandleTypeDef *hdl, uint8_t regAddr, 
 400:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 1817              		.loc 4 400 1
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 16
 1820              		@ frame_needed = 1, uses_anonymous_args = 0
 1821 0000 80B5     		push	{r7, lr}
 1822              	.LCFI118:
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 7, -8
 1825              		.cfi_offset 14, -4
 1826 0002 84B0     		sub	sp, sp, #16
 1827              	.LCFI119:
 1828              		.cfi_def_cfa_offset 24
 1829 0004 00AF     		add	r7, sp, #0
 1830              	.LCFI120:
 1831              		.cfi_def_cfa_register 7
 1832 0006 7860     		str	r0, [r7, #4]
 1833 0008 0B46     		mov	r3, r1
 1834 000a FB70     		strb	r3, [r7, #3]
 1835 000c 1346     		mov	r3, r2
 1836 000e BB70     		strb	r3, [r7, #2]
 401:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 402:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 1837              		.loc 4 402 11
 1838 0010 0023     		movs	r3, #0
 1839 0012 BB73     		strb	r3, [r7, #14]
 403:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 404:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_writeReg(hdl, regAddr, value);
 1840              		.loc 4 404 12
 1841 0014 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1842 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1843 0018 1946     		mov	r1, r3
 1844 001a 7868     		ldr	r0, [r7, #4]
 1845 001c FFF7FEFF 		bl	STSPIN32G4_writeReg
 1846 0020 0346     		mov	r3, r0
 1847 0022 FB73     		strb	r3, [r7, #15]
 405:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 406:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1848              		.loc 4 406 6
ARM GAS  /tmp/ccIRHRej.s 			page 100


 1849 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1850 0026 002B     		cmp	r3, #0
 1851 0028 08D1     		bne	.L118
 407:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 408:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, regAddr, &i2cReg);
 1852              		.loc 4 408 14
 1853 002a 07F10E02 		add	r2, r7, #14
 1854 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1855 0030 1946     		mov	r1, r3
 1856 0032 7868     		ldr	r0, [r7, #4]
 1857 0034 FFF7FEFF 		bl	STSPIN32G4_readReg
 1858 0038 0346     		mov	r3, r0
 1859 003a FB73     		strb	r3, [r7, #15]
 1860              	.L118:
 409:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 410:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 411:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1861              		.loc 4 411 6
 1862 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1863 003e 002B     		cmp	r3, #0
 1864 0040 05D1     		bne	.L119
 412:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 413:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (value != i2cReg)
 1865              		.loc 4 413 15
 1866 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1867              		.loc 4 413 8
 1868 0044 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1869 0046 9A42     		cmp	r2, r3
 1870 0048 01D0     		beq	.L119
 414:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 415:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_ERROR;
 1871              		.loc 4 415 14
 1872 004a 0123     		movs	r3, #1
 1873 004c FB73     		strb	r3, [r7, #15]
 1874              	.L119:
 416:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 417:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 418:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 419:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 1875              		.loc 4 419 10
 1876 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 420:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 1877              		.loc 4 420 1
 1878 0050 1846     		mov	r0, r3
 1879 0052 1037     		adds	r7, r7, #16
 1880              	.LCFI121:
 1881              		.cfi_def_cfa_offset 8
 1882 0054 BD46     		mov	sp, r7
 1883              	.LCFI122:
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 0056 80BD     		pop	{r7, pc}
 1887              		.cfi_endproc
 1888              	.LFE508:
 1890              		.section	.text.STSPIN32G4_set3V3,"ax",%progbits
 1891              		.align	1
 1892              		.global	STSPIN32G4_set3V3
ARM GAS  /tmp/ccIRHRej.s 			page 101


 1893              		.syntax unified
 1894              		.thumb
 1895              		.thumb_func
 1896              		.fpu fpv4-sp-d16
 1898              	STSPIN32G4_set3V3:
 1899              	.LFB509:
 421:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 422:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_set3V3(STSPIN32G4_HandleTypeDef *hdl, bool enabled)
 423:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 1900              		.loc 4 423 1
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 16
 1903              		@ frame_needed = 1, uses_anonymous_args = 0
 1904 0000 80B5     		push	{r7, lr}
 1905              	.LCFI123:
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 84B0     		sub	sp, sp, #16
 1910              	.LCFI124:
 1911              		.cfi_def_cfa_offset 24
 1912 0004 00AF     		add	r7, sp, #0
 1913              	.LCFI125:
 1914              		.cfi_def_cfa_register 7
 1915 0006 7860     		str	r0, [r7, #4]
 1916 0008 0B46     		mov	r3, r1
 1917 000a FB70     		strb	r3, [r7, #3]
 424:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 425:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 1918              		.loc 4 425 11
 1919 000c 0023     		movs	r3, #0
 1920 000e BB73     		strb	r3, [r7, #14]
 426:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 427:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 1921              		.loc 4 427 6
 1922 0010 7B68     		ldr	r3, [r7, #4]
 1923 0012 002B     		cmp	r3, #0
 1924 0014 01D1     		bne	.L122
 428:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 429:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 1925              		.loc 4 429 12
 1926 0016 0123     		movs	r3, #1
 1927 0018 35E0     		b	.L129
 1928              	.L122:
 430:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 431:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 432:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_POWMNG, &i2cReg);
 1929              		.loc 4 432 12
 1930 001a 07F10E03 		add	r3, r7, #14
 1931 001e 1A46     		mov	r2, r3
 1932 0020 0121     		movs	r1, #1
 1933 0022 7868     		ldr	r0, [r7, #4]
 1934 0024 FFF7FEFF 		bl	STSPIN32G4_readReg
 1935 0028 0346     		mov	r3, r0
 1936 002a FB73     		strb	r3, [r7, #15]
 433:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 434:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
ARM GAS  /tmp/ccIRHRej.s 			page 102


 1937              		.loc 4 434 6
 1938 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1939 002e 002B     		cmp	r3, #0
 1940 0030 04D1     		bne	.L124
 435:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 436:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 1941              		.loc 4 436 14
 1942 0032 7868     		ldr	r0, [r7, #4]
 1943 0034 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 1944 0038 0346     		mov	r3, r0
 1945 003a FB73     		strb	r3, [r7, #15]
 1946              	.L124:
 437:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 438:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 439:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1947              		.loc 4 439 6
 1948 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1949 003e 002B     		cmp	r3, #0
 1950 0040 15D1     		bne	.L125
 440:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 441:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (enabled)
 1951              		.loc 4 441 8
 1952 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1953 0044 002B     		cmp	r3, #0
 1954 0046 05D0     		beq	.L126
 442:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 443:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_REG3V3_DIS;
 1955              		.loc 4 443 14
 1956 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1957 004a 23F04003 		bic	r3, r3, #64
 1958 004e DBB2     		uxtb	r3, r3
 1959 0050 BB73     		strb	r3, [r7, #14]
 1960 0052 04E0     		b	.L127
 1961              	.L126:
 444:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 445:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 446:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 447:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_REG3V3_DIS;
 1962              		.loc 4 447 14
 1963 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1964 0056 43F04003 		orr	r3, r3, #64
 1965 005a DBB2     		uxtb	r3, r3
 1966 005c BB73     		strb	r3, [r7, #14]
 1967              	.L127:
 448:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 449:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 450:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_POWMNG, i2cReg);
 1968              		.loc 4 450 14
 1969 005e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1970 0060 1A46     		mov	r2, r3
 1971 0062 0121     		movs	r1, #1
 1972 0064 7868     		ldr	r0, [r7, #4]
 1973 0066 FFF7FEFF 		bl	STSPIN32G4_writeReg
 1974 006a 0346     		mov	r3, r0
 1975 006c FB73     		strb	r3, [r7, #15]
 1976              	.L125:
 451:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
ARM GAS  /tmp/ccIRHRej.s 			page 103


 452:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 453:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 1977              		.loc 4 453 6
 1978 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1979 0070 002B     		cmp	r3, #0
 1980 0072 04D1     		bne	.L128
 454:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 455:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     STSPIN32G4_lockReg(hdl);
 1981              		.loc 4 455 5
 1982 0074 7868     		ldr	r0, [r7, #4]
 1983 0076 FFF7FEFF 		bl	STSPIN32G4_lockReg
 456:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 1984              		.loc 4 456 12
 1985 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1986 007c 03E0     		b	.L129
 1987              	.L128:
 457:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 458:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
 459:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 460:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_lockReg(hdl);
 1988              		.loc 4 460 12
 1989 007e 7868     		ldr	r0, [r7, #4]
 1990 0080 FFF7FEFF 		bl	STSPIN32G4_lockReg
 1991 0084 0346     		mov	r3, r0
 1992              	.L129:
 461:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 462:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 1993              		.loc 4 462 1 discriminator 1
 1994 0086 1846     		mov	r0, r3
 1995 0088 1037     		adds	r7, r7, #16
 1996              	.LCFI126:
 1997              		.cfi_def_cfa_offset 8
 1998 008a BD46     		mov	sp, r7
 1999              	.LCFI127:
 2000              		.cfi_def_cfa_register 13
 2001              		@ sp needed
 2002 008c 80BD     		pop	{r7, pc}
 2003              		.cfi_endproc
 2004              	.LFE509:
 2006              		.section	.text.STSPIN32G4_get3V3,"ax",%progbits
 2007              		.align	1
 2008              		.global	STSPIN32G4_get3V3
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu fpv4-sp-d16
 2014              	STSPIN32G4_get3V3:
 2015              	.LFB510:
 463:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 464:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_get3V3(STSPIN32G4_HandleTypeDef *hdl, bool *enabled)
 465:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2016              		.loc 4 465 1
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 16
 2019              		@ frame_needed = 1, uses_anonymous_args = 0
 2020 0000 80B5     		push	{r7, lr}
 2021              	.LCFI128:
ARM GAS  /tmp/ccIRHRej.s 			page 104


 2022              		.cfi_def_cfa_offset 8
 2023              		.cfi_offset 7, -8
 2024              		.cfi_offset 14, -4
 2025 0002 84B0     		sub	sp, sp, #16
 2026              	.LCFI129:
 2027              		.cfi_def_cfa_offset 24
 2028 0004 00AF     		add	r7, sp, #0
 2029              	.LCFI130:
 2030              		.cfi_def_cfa_register 7
 2031 0006 7860     		str	r0, [r7, #4]
 2032 0008 3960     		str	r1, [r7]
 466:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 467:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2033              		.loc 4 467 11
 2034 000a 0023     		movs	r3, #0
 2035 000c BB73     		strb	r3, [r7, #14]
 468:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 469:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2036              		.loc 4 469 6
 2037 000e 7B68     		ldr	r3, [r7, #4]
 2038 0010 002B     		cmp	r3, #0
 2039 0012 01D1     		bne	.L131
 470:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 471:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2040              		.loc 4 471 12
 2041 0014 0123     		movs	r3, #1
 2042 0016 18E0     		b	.L134
 2043              	.L131:
 472:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 473:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 474:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (enabled == NULL)
 2044              		.loc 4 474 6
 2045 0018 3B68     		ldr	r3, [r7]
 2046 001a 002B     		cmp	r3, #0
 2047 001c 01D1     		bne	.L133
 475:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 476:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2048              		.loc 4 476 12
 2049 001e 0123     		movs	r3, #1
 2050 0020 13E0     		b	.L134
 2051              	.L133:
 477:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 478:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 479:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_POWMNG, &i2cReg);
 2052              		.loc 4 479 12
 2053 0022 07F10E03 		add	r3, r7, #14
 2054 0026 1A46     		mov	r2, r3
 2055 0028 0121     		movs	r1, #1
 2056 002a 7868     		ldr	r0, [r7, #4]
 2057 002c FFF7FEFF 		bl	STSPIN32G4_readReg
 2058 0030 0346     		mov	r3, r0
 2059 0032 FB73     		strb	r3, [r7, #15]
 480:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *enabled = (i2cReg & STSPIN32G4_I2C_REG3V3_DIS) ? false : true;
 2060              		.loc 4 480 22
 2061 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2062 0036 03F04003 		and	r3, r3, #64
 2063              		.loc 4 480 59
ARM GAS  /tmp/ccIRHRej.s 			page 105


 2064 003a 002B     		cmp	r3, #0
 2065 003c 0CBF     		ite	eq
 2066 003e 0123     		moveq	r3, #1
 2067 0040 0023     		movne	r3, #0
 2068 0042 DAB2     		uxtb	r2, r3
 2069              		.loc 4 480 12
 2070 0044 3B68     		ldr	r3, [r7]
 2071 0046 1A70     		strb	r2, [r3]
 481:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 482:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 2072              		.loc 4 482 10
 2073 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2074              	.L134:
 483:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2075              		.loc 4 483 1 discriminator 1
 2076 004a 1846     		mov	r0, r3
 2077 004c 1037     		adds	r7, r7, #16
 2078              	.LCFI131:
 2079              		.cfi_def_cfa_offset 8
 2080 004e BD46     		mov	sp, r7
 2081              	.LCFI132:
 2082              		.cfi_def_cfa_register 13
 2083              		@ sp needed
 2084 0050 80BD     		pop	{r7, pc}
 2085              		.cfi_endproc
 2086              	.LFE510:
 2088              		.section	.text.STSPIN32G4_setVCC,"ax",%progbits
 2089              		.align	1
 2090              		.global	STSPIN32G4_setVCC
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2094              		.fpu fpv4-sp-d16
 2096              	STSPIN32G4_setVCC:
 2097              	.LFB511:
 484:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 485:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_setVCC(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_confVCC vcc)
 486:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2098              		.loc 4 486 1
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 16
 2101              		@ frame_needed = 1, uses_anonymous_args = 0
 2102 0000 80B5     		push	{r7, lr}
 2103              	.LCFI133:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 7, -8
 2106              		.cfi_offset 14, -4
 2107 0002 84B0     		sub	sp, sp, #16
 2108              	.LCFI134:
 2109              		.cfi_def_cfa_offset 24
 2110 0004 00AF     		add	r7, sp, #0
 2111              	.LCFI135:
 2112              		.cfi_def_cfa_register 7
 2113 0006 7860     		str	r0, [r7, #4]
 2114 0008 3960     		str	r1, [r7]
 487:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 488:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
ARM GAS  /tmp/ccIRHRej.s 			page 106


 2115              		.loc 4 488 11
 2116 000a 0023     		movs	r3, #0
 2117 000c BB73     		strb	r3, [r7, #14]
 489:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 490:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2118              		.loc 4 490 6
 2119 000e 7B68     		ldr	r3, [r7, #4]
 2120 0010 002B     		cmp	r3, #0
 2121 0012 01D1     		bne	.L136
 491:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 492:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2122              		.loc 4 492 12
 2123 0014 0123     		movs	r3, #1
 2124 0016 B7E0     		b	.L157
 2125              	.L136:
 493:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 494:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 495:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_POWMNG, &i2cReg);
 2126              		.loc 4 495 12
 2127 0018 07F10E03 		add	r3, r7, #14
 2128 001c 1A46     		mov	r2, r3
 2129 001e 0121     		movs	r1, #1
 2130 0020 7868     		ldr	r0, [r7, #4]
 2131 0022 FFF7FEFF 		bl	STSPIN32G4_readReg
 2132 0026 0346     		mov	r3, r0
 2133 0028 FB73     		strb	r3, [r7, #15]
 496:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 497:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2134              		.loc 4 497 6
 2135 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2136 002c 002B     		cmp	r3, #0
 2137 002e 04D1     		bne	.L138
 498:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 499:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 2138              		.loc 4 499 14
 2139 0030 7868     		ldr	r0, [r7, #4]
 2140 0032 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 2141 0036 0346     		mov	r3, r0
 2142 0038 FB73     		strb	r3, [r7, #15]
 2143              	.L138:
 500:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 501:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 502:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2144              		.loc 4 502 6
 2145 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2146 003c 002B     		cmp	r3, #0
 2147 003e 41D1     		bne	.L158
 503:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 504:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     switch (vcc.voltage)
 2148              		.loc 4 504 16
 2149 0040 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2150 0042 042B     		cmp	r3, #4
 2151 0044 3BD8     		bhi	.L140
 2152 0046 01A2     		adr	r2, .L142
 2153 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2154              		.p2align 2
 2155              	.L142:
ARM GAS  /tmp/ccIRHRej.s 			page 107


 2156 004c 61000000 		.word	.L146+1
 2157 0050 6D000000 		.word	.L145+1
 2158 0054 7D000000 		.word	.L144+1
 2159 0058 93000000 		.word	.L143+1
 2160 005c A9000000 		.word	.L141+1
 2161              		.p2align 1
 2162              	.L146:
 505:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 506:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _EXT:
 507:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VCC_DIS;
 2163              		.loc 4 507 16
 2164 0060 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2165 0062 43F02003 		orr	r3, r3, #32
 2166 0066 DBB2     		uxtb	r3, r3
 2167 0068 BB73     		strb	r3, [r7, #14]
 508:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 2168              		.loc 4 508 9
 2169 006a 2CE0     		b	.L139
 2170              	.L145:
 509:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 510:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _8V:
 511:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg &= ~(STSPIN32G4_I2C_VCC_DIS | STSPIN32G4_I2C_VCC_VAL_3);
 2171              		.loc 4 511 16
 2172 006c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2173 006e 23F02303 		bic	r3, r3, #35
 2174 0072 DBB2     		uxtb	r3, r3
 2175 0074 BB73     		strb	r3, [r7, #14]
 512:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VCC_VAL_0;
 2176              		.loc 4 512 16
 2177 0076 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2178 0078 BB73     		strb	r3, [r7, #14]
 513:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 2179              		.loc 4 513 9
 2180 007a 24E0     		b	.L139
 2181              	.L144:
 514:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 515:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _10V:
 516:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg &= ~(STSPIN32G4_I2C_VCC_DIS | STSPIN32G4_I2C_VCC_VAL_3);
 2182              		.loc 4 516 16
 2183 007c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2184 007e 23F02303 		bic	r3, r3, #35
 2185 0082 DBB2     		uxtb	r3, r3
 2186 0084 BB73     		strb	r3, [r7, #14]
 517:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VCC_VAL_1;
 2187              		.loc 4 517 16
 2188 0086 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2189 0088 43F00103 		orr	r3, r3, #1
 2190 008c DBB2     		uxtb	r3, r3
 2191 008e BB73     		strb	r3, [r7, #14]
 518:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 2192              		.loc 4 518 9
 2193 0090 19E0     		b	.L139
 2194              	.L143:
 519:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 520:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _12V:
 521:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg &= ~(STSPIN32G4_I2C_VCC_DIS | STSPIN32G4_I2C_VCC_VAL_3);
 2195              		.loc 4 521 16
ARM GAS  /tmp/ccIRHRej.s 			page 108


 2196 0092 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2197 0094 23F02303 		bic	r3, r3, #35
 2198 0098 DBB2     		uxtb	r3, r3
 2199 009a BB73     		strb	r3, [r7, #14]
 522:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VCC_VAL_2;
 2200              		.loc 4 522 16
 2201 009c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2202 009e 43F00203 		orr	r3, r3, #2
 2203 00a2 DBB2     		uxtb	r3, r3
 2204 00a4 BB73     		strb	r3, [r7, #14]
 523:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 2205              		.loc 4 523 9
 2206 00a6 0EE0     		b	.L139
 2207              	.L141:
 524:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 525:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _15V:
 526:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg &= ~STSPIN32G4_I2C_VCC_DIS;
 2208              		.loc 4 526 16
 2209 00a8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2210 00aa 23F02003 		bic	r3, r3, #32
 2211 00ae DBB2     		uxtb	r3, r3
 2212 00b0 BB73     		strb	r3, [r7, #14]
 527:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VCC_VAL_3;
 2213              		.loc 4 527 16
 2214 00b2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2215 00b4 43F00303 		orr	r3, r3, #3
 2216 00b8 DBB2     		uxtb	r3, r3
 2217 00ba BB73     		strb	r3, [r7, #14]
 528:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 2218              		.loc 4 528 9
 2219 00bc 03E0     		b	.L139
 2220              	.L140:
 529:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       default:
 530:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         status = STSPIN32G4_ERROR;
 2221              		.loc 4 530 16
 2222 00be 0123     		movs	r3, #1
 2223 00c0 FB73     		strb	r3, [r7, #15]
 531:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 2224              		.loc 4 531 9
 2225 00c2 00E0     		b	.L139
 2226              	.L158:
 532:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 533:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 2227              		.loc 4 533 3
 2228 00c4 00BF     		nop
 2229              	.L139:
 534:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 535:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2230              		.loc 4 535 6
 2231 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2232 00c8 002B     		cmp	r3, #0
 2233 00ca 07D1     		bne	.L147
 536:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 537:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_POWMNG, i2cReg);
 2234              		.loc 4 537 14
 2235 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2236 00ce 1A46     		mov	r2, r3
ARM GAS  /tmp/ccIRHRej.s 			page 109


 2237 00d0 0121     		movs	r1, #1
 2238 00d2 7868     		ldr	r0, [r7, #4]
 2239 00d4 FFF7FEFF 		bl	STSPIN32G4_writeReg
 2240 00d8 0346     		mov	r3, r0
 2241 00da FB73     		strb	r3, [r7, #15]
 2242              	.L147:
 538:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 539:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 540:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2243              		.loc 4 540 6
 2244 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2245 00de 002B     		cmp	r3, #0
 2246 00e0 08D1     		bne	.L148
 541:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 542:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_NFAULT, &i2cReg);
 2247              		.loc 4 542 14
 2248 00e2 07F10E03 		add	r3, r7, #14
 2249 00e6 1A46     		mov	r2, r3
 2250 00e8 0821     		movs	r1, #8
 2251 00ea 7868     		ldr	r0, [r7, #4]
 2252 00ec FFF7FEFF 		bl	STSPIN32G4_readReg
 2253 00f0 0346     		mov	r3, r0
 2254 00f2 FB73     		strb	r3, [r7, #15]
 2255              	.L148:
 543:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 544:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 545:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // configuration of nFAULT pin
 2256              		.loc 4 545 6
 2257 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2258 00f6 002B     		cmp	r3, #0
 2259 00f8 15D1     		bne	.L149
 546:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 547:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (vcc.useNFAULT)
 2260              		.loc 4 547 12
 2261 00fa 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2262              		.loc 4 547 8
 2263 00fc 002B     		cmp	r3, #0
 2264 00fe 05D0     		beq	.L150
 548:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 549:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_VCC_UVLO_FLT;
 2265              		.loc 4 549 14
 2266 0100 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2267 0102 43F00103 		orr	r3, r3, #1
 2268 0106 DBB2     		uxtb	r3, r3
 2269 0108 BB73     		strb	r3, [r7, #14]
 2270 010a 04E0     		b	.L151
 2271              	.L150:
 550:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 551:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 552:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 553:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_VCC_UVLO_FLT;
 2272              		.loc 4 553 14
 2273 010c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2274 010e 23F00103 		bic	r3, r3, #1
 2275 0112 DBB2     		uxtb	r3, r3
 2276 0114 BB73     		strb	r3, [r7, #14]
 2277              	.L151:
ARM GAS  /tmp/ccIRHRej.s 			page 110


 554:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 555:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 556:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_NFAULT, i2cReg);
 2278              		.loc 4 556 14
 2279 0116 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2280 0118 1A46     		mov	r2, r3
 2281 011a 0821     		movs	r1, #8
 2282 011c 7868     		ldr	r0, [r7, #4]
 2283 011e FFF7FEFF 		bl	STSPIN32G4_writeReg
 2284 0122 0346     		mov	r3, r0
 2285 0124 FB73     		strb	r3, [r7, #15]
 2286              	.L149:
 557:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 558:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 559:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2287              		.loc 4 559 6
 2288 0126 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2289 0128 002B     		cmp	r3, #0
 2290 012a 08D1     		bne	.L152
 560:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 561:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_READY, &i2cReg);
 2291              		.loc 4 561 14
 2292 012c 07F10E03 		add	r3, r7, #14
 2293 0130 1A46     		mov	r2, r3
 2294 0132 0721     		movs	r1, #7
 2295 0134 7868     		ldr	r0, [r7, #4]
 2296 0136 FFF7FEFF 		bl	STSPIN32G4_readReg
 2297 013a 0346     		mov	r3, r0
 2298 013c FB73     		strb	r3, [r7, #15]
 2299              	.L152:
 562:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 563:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 564:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // configuration of READY pin
 2300              		.loc 4 564 6
 2301 013e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2302 0140 002B     		cmp	r3, #0
 2303 0142 15D1     		bne	.L153
 565:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 566:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (vcc.useREADY)
 2304              		.loc 4 566 12
 2305 0144 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2306              		.loc 4 566 8
 2307 0146 002B     		cmp	r3, #0
 2308 0148 05D0     		beq	.L154
 567:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 568:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_VCC_UVLO_RDY;
 2309              		.loc 4 568 14
 2310 014a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2311 014c 43F00103 		orr	r3, r3, #1
 2312 0150 DBB2     		uxtb	r3, r3
 2313 0152 BB73     		strb	r3, [r7, #14]
 2314 0154 04E0     		b	.L155
 2315              	.L154:
 569:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 570:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 571:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 572:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_VCC_UVLO_RDY;
ARM GAS  /tmp/ccIRHRej.s 			page 111


 2316              		.loc 4 572 14
 2317 0156 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2318 0158 23F00103 		bic	r3, r3, #1
 2319 015c DBB2     		uxtb	r3, r3
 2320 015e BB73     		strb	r3, [r7, #14]
 2321              	.L155:
 573:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 574:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 575:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_READY, i2cReg);
 2322              		.loc 4 575 14
 2323 0160 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2324 0162 1A46     		mov	r2, r3
 2325 0164 0721     		movs	r1, #7
 2326 0166 7868     		ldr	r0, [r7, #4]
 2327 0168 FFF7FEFF 		bl	STSPIN32G4_writeReg
 2328 016c 0346     		mov	r3, r0
 2329 016e FB73     		strb	r3, [r7, #15]
 2330              	.L153:
 576:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 577:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 578:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2331              		.loc 4 578 6
 2332 0170 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2333 0172 002B     		cmp	r3, #0
 2334 0174 04D1     		bne	.L156
 579:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 580:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     STSPIN32G4_lockReg(hdl);
 2335              		.loc 4 580 5
 2336 0176 7868     		ldr	r0, [r7, #4]
 2337 0178 FFF7FEFF 		bl	STSPIN32G4_lockReg
 581:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 2338              		.loc 4 581 12
 2339 017c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2340 017e 03E0     		b	.L157
 2341              	.L156:
 582:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 583:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
 584:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 585:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_lockReg(hdl);
 2342              		.loc 4 585 12
 2343 0180 7868     		ldr	r0, [r7, #4]
 2344 0182 FFF7FEFF 		bl	STSPIN32G4_lockReg
 2345 0186 0346     		mov	r3, r0
 2346              	.L157:
 586:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 587:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2347              		.loc 4 587 1 discriminator 1
 2348 0188 1846     		mov	r0, r3
 2349 018a 1037     		adds	r7, r7, #16
 2350              	.LCFI136:
 2351              		.cfi_def_cfa_offset 8
 2352 018c BD46     		mov	sp, r7
 2353              	.LCFI137:
 2354              		.cfi_def_cfa_register 13
 2355              		@ sp needed
 2356 018e 80BD     		pop	{r7, pc}
 2357              		.cfi_endproc
ARM GAS  /tmp/ccIRHRej.s 			page 112


 2358              	.LFE511:
 2360              		.section	.text.STSPIN32G4_getVCC,"ax",%progbits
 2361              		.align	1
 2362              		.global	STSPIN32G4_getVCC
 2363              		.syntax unified
 2364              		.thumb
 2365              		.thumb_func
 2366              		.fpu fpv4-sp-d16
 2368              	STSPIN32G4_getVCC:
 2369              	.LFB512:
 588:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 589:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_getVCC(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_confVCC *vcc)
 590:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2370              		.loc 4 590 1
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 16
 2373              		@ frame_needed = 1, uses_anonymous_args = 0
 2374 0000 80B5     		push	{r7, lr}
 2375              	.LCFI138:
 2376              		.cfi_def_cfa_offset 8
 2377              		.cfi_offset 7, -8
 2378              		.cfi_offset 14, -4
 2379 0002 84B0     		sub	sp, sp, #16
 2380              	.LCFI139:
 2381              		.cfi_def_cfa_offset 24
 2382 0004 00AF     		add	r7, sp, #0
 2383              	.LCFI140:
 2384              		.cfi_def_cfa_register 7
 2385 0006 7860     		str	r0, [r7, #4]
 2386 0008 3960     		str	r1, [r7]
 591:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 592:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2387              		.loc 4 592 11
 2388 000a 0023     		movs	r3, #0
 2389 000c BB73     		strb	r3, [r7, #14]
 593:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 594:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2390              		.loc 4 594 6
 2391 000e 7B68     		ldr	r3, [r7, #4]
 2392 0010 002B     		cmp	r3, #0
 2393 0012 01D1     		bne	.L160
 595:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 596:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2394              		.loc 4 596 12
 2395 0014 0123     		movs	r3, #1
 2396 0016 6AE0     		b	.L173
 2397              	.L160:
 597:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 598:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 599:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (vcc == NULL)
 2398              		.loc 4 599 6
 2399 0018 3B68     		ldr	r3, [r7]
 2400 001a 002B     		cmp	r3, #0
 2401 001c 01D1     		bne	.L162
 600:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 601:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2402              		.loc 4 601 12
ARM GAS  /tmp/ccIRHRej.s 			page 113


 2403 001e 0123     		movs	r3, #1
 2404 0020 65E0     		b	.L173
 2405              	.L162:
 602:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 603:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 604:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_POWMNG, &i2cReg);
 2406              		.loc 4 604 12
 2407 0022 07F10E03 		add	r3, r7, #14
 2408 0026 1A46     		mov	r2, r3
 2409 0028 0121     		movs	r1, #1
 2410 002a 7868     		ldr	r0, [r7, #4]
 2411 002c FFF7FEFF 		bl	STSPIN32G4_readReg
 2412 0030 0346     		mov	r3, r0
 2413 0032 FB73     		strb	r3, [r7, #15]
 605:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 606:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2414              		.loc 4 606 6
 2415 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2416 0036 002B     		cmp	r3, #0
 2417 0038 2BD1     		bne	.L174
 607:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 608:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (i2cReg & STSPIN32G4_I2C_VCC_DIS)
 2418              		.loc 4 608 16
 2419 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2420 003c 03F02003 		and	r3, r3, #32
 2421              		.loc 4 608 8
 2422 0040 002B     		cmp	r3, #0
 2423 0042 03D0     		beq	.L164
 609:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 610:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       vcc->voltage = _EXT;
 2424              		.loc 4 610 20
 2425 0044 3B68     		ldr	r3, [r7]
 2426 0046 0022     		movs	r2, #0
 2427 0048 1A70     		strb	r2, [r3]
 2428 004a 23E0     		b	.L163
 2429              	.L164:
 611:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 612:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 613:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 614:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       switch (i2cReg & STSPIN32G4_I2C_VCC_VAL_3)
 2430              		.loc 4 614 22
 2431 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2432 004e 03F00303 		and	r3, r3, #3
 2433 0052 032B     		cmp	r3, #3
 2434 0054 1AD8     		bhi	.L165
 2435 0056 01A2     		adr	r2, .L167
 2436 0058 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2437              		.p2align 2
 2438              	.L167:
 2439 005c 6D000000 		.word	.L170+1
 2440 0060 75000000 		.word	.L169+1
 2441 0064 7D000000 		.word	.L168+1
 2442 0068 85000000 		.word	.L166+1
 2443              		.p2align 1
 2444              	.L170:
 615:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       {
 616:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         case STSPIN32G4_I2C_VCC_VAL_0:
ARM GAS  /tmp/ccIRHRej.s 			page 114


 617:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           vcc->voltage = _8V;
 2445              		.loc 4 617 24
 2446 006c 3B68     		ldr	r3, [r7]
 2447 006e 0122     		movs	r2, #1
 2448 0070 1A70     		strb	r2, [r3]
 618:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           break;
 2449              		.loc 4 618 11
 2450 0072 0FE0     		b	.L163
 2451              	.L169:
 619:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 620:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         case STSPIN32G4_I2C_VCC_VAL_1:
 621:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           vcc->voltage = _10V;
 2452              		.loc 4 621 24
 2453 0074 3B68     		ldr	r3, [r7]
 2454 0076 0222     		movs	r2, #2
 2455 0078 1A70     		strb	r2, [r3]
 622:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           break;
 2456              		.loc 4 622 11
 2457 007a 0BE0     		b	.L163
 2458              	.L168:
 623:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 624:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         case STSPIN32G4_I2C_VCC_VAL_2:
 625:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           vcc->voltage = _12V;
 2459              		.loc 4 625 24
 2460 007c 3B68     		ldr	r3, [r7]
 2461 007e 0322     		movs	r2, #3
 2462 0080 1A70     		strb	r2, [r3]
 626:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           break;
 2463              		.loc 4 626 11
 2464 0082 07E0     		b	.L163
 2465              	.L166:
 627:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 628:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         case STSPIN32G4_I2C_VCC_VAL_3:
 629:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           vcc->voltage = _15V;
 2466              		.loc 4 629 24
 2467 0084 3B68     		ldr	r3, [r7]
 2468 0086 0422     		movs	r2, #4
 2469 0088 1A70     		strb	r2, [r3]
 630:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           break;
 2470              		.loc 4 630 11
 2471 008a 03E0     		b	.L163
 2472              	.L165:
 631:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 632:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         default:
 633:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           status = STSPIN32G4_ERROR;
 2473              		.loc 4 633 18
 2474 008c 0123     		movs	r3, #1
 2475 008e FB73     		strb	r3, [r7, #15]
 634:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           break;
 2476              		.loc 4 634 11
 2477 0090 00E0     		b	.L163
 2478              	.L174:
 635:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       }
 636:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 2479              		.loc 4 636 5
 2480 0092 00BF     		nop
 2481              	.L163:
ARM GAS  /tmp/ccIRHRej.s 			page 115


 637:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 638:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 639:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2482              		.loc 4 639 6
 2483 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2484 0096 002B     		cmp	r3, #0
 2485 0098 12D1     		bne	.L171
 640:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 641:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_NFAULT, &i2cReg);
 2486              		.loc 4 641 14
 2487 009a 07F10E03 		add	r3, r7, #14
 2488 009e 1A46     		mov	r2, r3
 2489 00a0 0821     		movs	r1, #8
 2490 00a2 7868     		ldr	r0, [r7, #4]
 2491 00a4 FFF7FEFF 		bl	STSPIN32G4_readReg
 2492 00a8 0346     		mov	r3, r0
 2493 00aa FB73     		strb	r3, [r7, #15]
 642:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     vcc->useNFAULT = (i2cReg & STSPIN32G4_I2C_VCC_UVLO_FLT) ? true : false;
 2494              		.loc 4 642 68
 2495 00ac BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2496 00ae 03F00103 		and	r3, r3, #1
 2497 00b2 002B     		cmp	r3, #0
 2498 00b4 14BF     		ite	ne
 2499 00b6 0123     		movne	r3, #1
 2500 00b8 0023     		moveq	r3, #0
 2501 00ba DAB2     		uxtb	r2, r3
 2502              		.loc 4 642 20
 2503 00bc 3B68     		ldr	r3, [r7]
 2504 00be 5A70     		strb	r2, [r3, #1]
 2505              	.L171:
 643:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 644:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 645:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2506              		.loc 4 645 6
 2507 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2508 00c2 002B     		cmp	r3, #0
 2509 00c4 12D1     		bne	.L172
 646:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 647:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_READY, &i2cReg);
 2510              		.loc 4 647 14
 2511 00c6 07F10E03 		add	r3, r7, #14
 2512 00ca 1A46     		mov	r2, r3
 2513 00cc 0721     		movs	r1, #7
 2514 00ce 7868     		ldr	r0, [r7, #4]
 2515 00d0 FFF7FEFF 		bl	STSPIN32G4_readReg
 2516 00d4 0346     		mov	r3, r0
 2517 00d6 FB73     		strb	r3, [r7, #15]
 648:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     vcc->useREADY = (i2cReg & STSPIN32G4_I2C_VCC_UVLO_RDY) ? true : false;
 2518              		.loc 4 648 67
 2519 00d8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2520 00da 03F00103 		and	r3, r3, #1
 2521 00de 002B     		cmp	r3, #0
 2522 00e0 14BF     		ite	ne
 2523 00e2 0123     		movne	r3, #1
 2524 00e4 0023     		moveq	r3, #0
 2525 00e6 DAB2     		uxtb	r2, r3
 2526              		.loc 4 648 19
ARM GAS  /tmp/ccIRHRej.s 			page 116


 2527 00e8 3B68     		ldr	r3, [r7]
 2528 00ea 9A70     		strb	r2, [r3, #2]
 2529              	.L172:
 649:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 650:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 651:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 2530              		.loc 4 651 10
 2531 00ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2532              	.L173:
 652:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2533              		.loc 4 652 1 discriminator 1
 2534 00ee 1846     		mov	r0, r3
 2535 00f0 1037     		adds	r7, r7, #16
 2536              	.LCFI141:
 2537              		.cfi_def_cfa_offset 8
 2538 00f2 BD46     		mov	sp, r7
 2539              	.LCFI142:
 2540              		.cfi_def_cfa_register 13
 2541              		@ sp needed
 2542 00f4 80BD     		pop	{r7, pc}
 2543              		.cfi_endproc
 2544              	.LFE512:
 2546 00f6 00BF     		.section	.text.STSPIN32G4_setInterlocking,"ax",%progbits
 2547              		.align	1
 2548              		.global	STSPIN32G4_setInterlocking
 2549              		.syntax unified
 2550              		.thumb
 2551              		.thumb_func
 2552              		.fpu fpv4-sp-d16
 2554              	STSPIN32G4_setInterlocking:
 2555              	.LFB513:
 653:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 654:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_setInterlocking(STSPIN32G4_HandleTypeDef *hdl, bool enabled)
 655:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2556              		.loc 4 655 1
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 16
 2559              		@ frame_needed = 1, uses_anonymous_args = 0
 2560 0000 80B5     		push	{r7, lr}
 2561              	.LCFI143:
 2562              		.cfi_def_cfa_offset 8
 2563              		.cfi_offset 7, -8
 2564              		.cfi_offset 14, -4
 2565 0002 84B0     		sub	sp, sp, #16
 2566              	.LCFI144:
 2567              		.cfi_def_cfa_offset 24
 2568 0004 00AF     		add	r7, sp, #0
 2569              	.LCFI145:
 2570              		.cfi_def_cfa_register 7
 2571 0006 7860     		str	r0, [r7, #4]
 2572 0008 0B46     		mov	r3, r1
 2573 000a FB70     		strb	r3, [r7, #3]
 656:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 657:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2574              		.loc 4 657 11
 2575 000c 0023     		movs	r3, #0
 2576 000e BB73     		strb	r3, [r7, #14]
ARM GAS  /tmp/ccIRHRej.s 			page 117


 658:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 659:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2577              		.loc 4 659 6
 2578 0010 7B68     		ldr	r3, [r7, #4]
 2579 0012 002B     		cmp	r3, #0
 2580 0014 01D1     		bne	.L176
 660:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 661:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2581              		.loc 4 661 12
 2582 0016 0123     		movs	r3, #1
 2583 0018 35E0     		b	.L183
 2584              	.L176:
 662:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 663:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 664:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_LOGIC, &i2cReg);
 2585              		.loc 4 664 12
 2586 001a 07F10E03 		add	r3, r7, #14
 2587 001e 1A46     		mov	r2, r3
 2588 0020 0221     		movs	r1, #2
 2589 0022 7868     		ldr	r0, [r7, #4]
 2590 0024 FFF7FEFF 		bl	STSPIN32G4_readReg
 2591 0028 0346     		mov	r3, r0
 2592 002a FB73     		strb	r3, [r7, #15]
 665:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 666:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2593              		.loc 4 666 6
 2594 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2595 002e 002B     		cmp	r3, #0
 2596 0030 04D1     		bne	.L178
 667:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 668:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 2597              		.loc 4 668 14
 2598 0032 7868     		ldr	r0, [r7, #4]
 2599 0034 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 2600 0038 0346     		mov	r3, r0
 2601 003a FB73     		strb	r3, [r7, #15]
 2602              	.L178:
 669:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 670:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 671:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2603              		.loc 4 671 6
 2604 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2605 003e 002B     		cmp	r3, #0
 2606 0040 15D1     		bne	.L179
 672:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 673:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (enabled)
 2607              		.loc 4 673 8
 2608 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2609 0044 002B     		cmp	r3, #0
 2610 0046 05D0     		beq	.L180
 674:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 675:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_ILOCK;
 2611              		.loc 4 675 14
 2612 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2613 004a 43F00103 		orr	r3, r3, #1
 2614 004e DBB2     		uxtb	r3, r3
 2615 0050 BB73     		strb	r3, [r7, #14]
ARM GAS  /tmp/ccIRHRej.s 			page 118


 2616 0052 04E0     		b	.L181
 2617              	.L180:
 676:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 677:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 678:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 679:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_ILOCK;
 2618              		.loc 4 679 14
 2619 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2620 0056 23F00103 		bic	r3, r3, #1
 2621 005a DBB2     		uxtb	r3, r3
 2622 005c BB73     		strb	r3, [r7, #14]
 2623              	.L181:
 680:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 681:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 682:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_LOGIC, i2cReg);
 2624              		.loc 4 682 14
 2625 005e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2626 0060 1A46     		mov	r2, r3
 2627 0062 0221     		movs	r1, #2
 2628 0064 7868     		ldr	r0, [r7, #4]
 2629 0066 FFF7FEFF 		bl	STSPIN32G4_writeReg
 2630 006a 0346     		mov	r3, r0
 2631 006c FB73     		strb	r3, [r7, #15]
 2632              	.L179:
 683:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 684:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 685:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2633              		.loc 4 685 6
 2634 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2635 0070 002B     		cmp	r3, #0
 2636 0072 04D1     		bne	.L182
 686:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 687:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     STSPIN32G4_lockReg(hdl);
 2637              		.loc 4 687 5
 2638 0074 7868     		ldr	r0, [r7, #4]
 2639 0076 FFF7FEFF 		bl	STSPIN32G4_lockReg
 688:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 2640              		.loc 4 688 12
 2641 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2642 007c 03E0     		b	.L183
 2643              	.L182:
 689:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 690:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
 691:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 692:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_lockReg(hdl);
 2644              		.loc 4 692 12
 2645 007e 7868     		ldr	r0, [r7, #4]
 2646 0080 FFF7FEFF 		bl	STSPIN32G4_lockReg
 2647 0084 0346     		mov	r3, r0
 2648              	.L183:
 693:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 694:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2649              		.loc 4 694 1 discriminator 1
 2650 0086 1846     		mov	r0, r3
 2651 0088 1037     		adds	r7, r7, #16
 2652              	.LCFI146:
 2653              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccIRHRej.s 			page 119


 2654 008a BD46     		mov	sp, r7
 2655              	.LCFI147:
 2656              		.cfi_def_cfa_register 13
 2657              		@ sp needed
 2658 008c 80BD     		pop	{r7, pc}
 2659              		.cfi_endproc
 2660              	.LFE513:
 2662              		.section	.text.STSPIN32G4_getInterlocking,"ax",%progbits
 2663              		.align	1
 2664              		.global	STSPIN32G4_getInterlocking
 2665              		.syntax unified
 2666              		.thumb
 2667              		.thumb_func
 2668              		.fpu fpv4-sp-d16
 2670              	STSPIN32G4_getInterlocking:
 2671              	.LFB514:
 695:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 696:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_getInterlocking(STSPIN32G4_HandleTypeDef *hdl, bool *enabled)
 697:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2672              		.loc 4 697 1
 2673              		.cfi_startproc
 2674              		@ args = 0, pretend = 0, frame = 16
 2675              		@ frame_needed = 1, uses_anonymous_args = 0
 2676 0000 80B5     		push	{r7, lr}
 2677              	.LCFI148:
 2678              		.cfi_def_cfa_offset 8
 2679              		.cfi_offset 7, -8
 2680              		.cfi_offset 14, -4
 2681 0002 84B0     		sub	sp, sp, #16
 2682              	.LCFI149:
 2683              		.cfi_def_cfa_offset 24
 2684 0004 00AF     		add	r7, sp, #0
 2685              	.LCFI150:
 2686              		.cfi_def_cfa_register 7
 2687 0006 7860     		str	r0, [r7, #4]
 2688 0008 3960     		str	r1, [r7]
 698:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 699:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2689              		.loc 4 699 11
 2690 000a 0023     		movs	r3, #0
 2691 000c BB73     		strb	r3, [r7, #14]
 700:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 701:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2692              		.loc 4 701 6
 2693 000e 7B68     		ldr	r3, [r7, #4]
 2694 0010 002B     		cmp	r3, #0
 2695 0012 01D1     		bne	.L185
 702:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 703:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2696              		.loc 4 703 12
 2697 0014 0123     		movs	r3, #1
 2698 0016 18E0     		b	.L188
 2699              	.L185:
 704:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 705:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 706:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (enabled == NULL)
 2700              		.loc 4 706 6
ARM GAS  /tmp/ccIRHRej.s 			page 120


 2701 0018 3B68     		ldr	r3, [r7]
 2702 001a 002B     		cmp	r3, #0
 2703 001c 01D1     		bne	.L187
 707:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 708:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2704              		.loc 4 708 12
 2705 001e 0123     		movs	r3, #1
 2706 0020 13E0     		b	.L188
 2707              	.L187:
 709:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 710:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 711:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_LOGIC, &i2cReg);
 2708              		.loc 4 711 12
 2709 0022 07F10E03 		add	r3, r7, #14
 2710 0026 1A46     		mov	r2, r3
 2711 0028 0221     		movs	r1, #2
 2712 002a 7868     		ldr	r0, [r7, #4]
 2713 002c FFF7FEFF 		bl	STSPIN32G4_readReg
 2714 0030 0346     		mov	r3, r0
 2715 0032 FB73     		strb	r3, [r7, #15]
 712:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *enabled = (i2cReg & STSPIN32G4_I2C_ILOCK) ? true : false;
 2716              		.loc 4 712 53
 2717 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2718 0036 03F00103 		and	r3, r3, #1
 2719 003a 002B     		cmp	r3, #0
 2720 003c 14BF     		ite	ne
 2721 003e 0123     		movne	r3, #1
 2722 0040 0023     		moveq	r3, #0
 2723 0042 DAB2     		uxtb	r2, r3
 2724              		.loc 4 712 12
 2725 0044 3B68     		ldr	r3, [r7]
 2726 0046 1A70     		strb	r2, [r3]
 713:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 714:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 2727              		.loc 4 714 10
 2728 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2729              	.L188:
 715:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2730              		.loc 4 715 1 discriminator 1
 2731 004a 1846     		mov	r0, r3
 2732 004c 1037     		adds	r7, r7, #16
 2733              	.LCFI151:
 2734              		.cfi_def_cfa_offset 8
 2735 004e BD46     		mov	sp, r7
 2736              	.LCFI152:
 2737              		.cfi_def_cfa_register 13
 2738              		@ sp needed
 2739 0050 80BD     		pop	{r7, pc}
 2740              		.cfi_endproc
 2741              	.LFE514:
 2743              		.section	.text.STSPIN32G4_setMinimumDeadTime,"ax",%progbits
 2744              		.align	1
 2745              		.global	STSPIN32G4_setMinimumDeadTime
 2746              		.syntax unified
 2747              		.thumb
 2748              		.thumb_func
 2749              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccIRHRej.s 			page 121


 2751              	STSPIN32G4_setMinimumDeadTime:
 2752              	.LFB515:
 716:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 717:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_setMinimumDeadTime(STSPIN32G4_HandleTypeDef *hdl, bool enabled)
 718:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2753              		.loc 4 718 1
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 16
 2756              		@ frame_needed = 1, uses_anonymous_args = 0
 2757 0000 80B5     		push	{r7, lr}
 2758              	.LCFI153:
 2759              		.cfi_def_cfa_offset 8
 2760              		.cfi_offset 7, -8
 2761              		.cfi_offset 14, -4
 2762 0002 84B0     		sub	sp, sp, #16
 2763              	.LCFI154:
 2764              		.cfi_def_cfa_offset 24
 2765 0004 00AF     		add	r7, sp, #0
 2766              	.LCFI155:
 2767              		.cfi_def_cfa_register 7
 2768 0006 7860     		str	r0, [r7, #4]
 2769 0008 0B46     		mov	r3, r1
 2770 000a FB70     		strb	r3, [r7, #3]
 719:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 720:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2771              		.loc 4 720 11
 2772 000c 0023     		movs	r3, #0
 2773 000e BB73     		strb	r3, [r7, #14]
 721:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 722:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2774              		.loc 4 722 6
 2775 0010 7B68     		ldr	r3, [r7, #4]
 2776 0012 002B     		cmp	r3, #0
 2777 0014 01D1     		bne	.L190
 723:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 724:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2778              		.loc 4 724 12
 2779 0016 0123     		movs	r3, #1
 2780 0018 35E0     		b	.L197
 2781              	.L190:
 725:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 726:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 727:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_LOGIC, &i2cReg);
 2782              		.loc 4 727 12
 2783 001a 07F10E03 		add	r3, r7, #14
 2784 001e 1A46     		mov	r2, r3
 2785 0020 0221     		movs	r1, #2
 2786 0022 7868     		ldr	r0, [r7, #4]
 2787 0024 FFF7FEFF 		bl	STSPIN32G4_readReg
 2788 0028 0346     		mov	r3, r0
 2789 002a FB73     		strb	r3, [r7, #15]
 728:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 729:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2790              		.loc 4 729 6
 2791 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2792 002e 002B     		cmp	r3, #0
 2793 0030 04D1     		bne	.L192
ARM GAS  /tmp/ccIRHRej.s 			page 122


 730:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 731:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 2794              		.loc 4 731 14
 2795 0032 7868     		ldr	r0, [r7, #4]
 2796 0034 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 2797 0038 0346     		mov	r3, r0
 2798 003a FB73     		strb	r3, [r7, #15]
 2799              	.L192:
 732:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 733:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 734:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2800              		.loc 4 734 6
 2801 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2802 003e 002B     		cmp	r3, #0
 2803 0040 15D1     		bne	.L193
 735:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 736:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (enabled)
 2804              		.loc 4 736 8
 2805 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2806 0044 002B     		cmp	r3, #0
 2807 0046 05D0     		beq	.L194
 737:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 738:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_DTMIN;
 2808              		.loc 4 738 14
 2809 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2810 004a 43F00203 		orr	r3, r3, #2
 2811 004e DBB2     		uxtb	r3, r3
 2812 0050 BB73     		strb	r3, [r7, #14]
 2813 0052 04E0     		b	.L195
 2814              	.L194:
 739:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 740:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 741:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 742:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_DTMIN;
 2815              		.loc 4 742 14
 2816 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2817 0056 23F00203 		bic	r3, r3, #2
 2818 005a DBB2     		uxtb	r3, r3
 2819 005c BB73     		strb	r3, [r7, #14]
 2820              	.L195:
 743:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 744:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 745:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_LOGIC, i2cReg);
 2821              		.loc 4 745 14
 2822 005e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2823 0060 1A46     		mov	r2, r3
 2824 0062 0221     		movs	r1, #2
 2825 0064 7868     		ldr	r0, [r7, #4]
 2826 0066 FFF7FEFF 		bl	STSPIN32G4_writeReg
 2827 006a 0346     		mov	r3, r0
 2828 006c FB73     		strb	r3, [r7, #15]
 2829              	.L193:
 746:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 747:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 748:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2830              		.loc 4 748 6
 2831 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccIRHRej.s 			page 123


 2832 0070 002B     		cmp	r3, #0
 2833 0072 04D1     		bne	.L196
 749:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 750:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     STSPIN32G4_lockReg(hdl);
 2834              		.loc 4 750 5
 2835 0074 7868     		ldr	r0, [r7, #4]
 2836 0076 FFF7FEFF 		bl	STSPIN32G4_lockReg
 751:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 2837              		.loc 4 751 12
 2838 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2839 007c 03E0     		b	.L197
 2840              	.L196:
 752:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 753:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
 754:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 755:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_lockReg(hdl);
 2841              		.loc 4 755 12
 2842 007e 7868     		ldr	r0, [r7, #4]
 2843 0080 FFF7FEFF 		bl	STSPIN32G4_lockReg
 2844 0084 0346     		mov	r3, r0
 2845              	.L197:
 756:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 757:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2846              		.loc 4 757 1 discriminator 1
 2847 0086 1846     		mov	r0, r3
 2848 0088 1037     		adds	r7, r7, #16
 2849              	.LCFI156:
 2850              		.cfi_def_cfa_offset 8
 2851 008a BD46     		mov	sp, r7
 2852              	.LCFI157:
 2853              		.cfi_def_cfa_register 13
 2854              		@ sp needed
 2855 008c 80BD     		pop	{r7, pc}
 2856              		.cfi_endproc
 2857              	.LFE515:
 2859              		.section	.text.STSPIN32G4_getMinimumDeadTime,"ax",%progbits
 2860              		.align	1
 2861              		.global	STSPIN32G4_getMinimumDeadTime
 2862              		.syntax unified
 2863              		.thumb
 2864              		.thumb_func
 2865              		.fpu fpv4-sp-d16
 2867              	STSPIN32G4_getMinimumDeadTime:
 2868              	.LFB516:
 758:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 759:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_getMinimumDeadTime(STSPIN32G4_HandleTypeDef *hdl, bool *enabled
 760:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2869              		.loc 4 760 1
 2870              		.cfi_startproc
 2871              		@ args = 0, pretend = 0, frame = 16
 2872              		@ frame_needed = 1, uses_anonymous_args = 0
 2873 0000 80B5     		push	{r7, lr}
 2874              	.LCFI158:
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 7, -8
 2877              		.cfi_offset 14, -4
 2878 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccIRHRej.s 			page 124


 2879              	.LCFI159:
 2880              		.cfi_def_cfa_offset 24
 2881 0004 00AF     		add	r7, sp, #0
 2882              	.LCFI160:
 2883              		.cfi_def_cfa_register 7
 2884 0006 7860     		str	r0, [r7, #4]
 2885 0008 3960     		str	r1, [r7]
 761:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 762:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2886              		.loc 4 762 11
 2887 000a 0023     		movs	r3, #0
 2888 000c BB73     		strb	r3, [r7, #14]
 763:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 764:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2889              		.loc 4 764 6
 2890 000e 7B68     		ldr	r3, [r7, #4]
 2891 0010 002B     		cmp	r3, #0
 2892 0012 01D1     		bne	.L199
 765:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 766:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2893              		.loc 4 766 12
 2894 0014 0123     		movs	r3, #1
 2895 0016 19E0     		b	.L202
 2896              	.L199:
 767:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 768:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 769:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (enabled == NULL)
 2897              		.loc 4 769 6
 2898 0018 3B68     		ldr	r3, [r7]
 2899 001a 002B     		cmp	r3, #0
 2900 001c 01D1     		bne	.L201
 770:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 771:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2901              		.loc 4 771 12
 2902 001e 0123     		movs	r3, #1
 2903 0020 14E0     		b	.L202
 2904              	.L201:
 772:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 773:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 774:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_LOGIC, &i2cReg);
 2905              		.loc 4 774 12
 2906 0022 07F10E03 		add	r3, r7, #14
 2907 0026 1A46     		mov	r2, r3
 2908 0028 0221     		movs	r1, #2
 2909 002a 7868     		ldr	r0, [r7, #4]
 2910 002c FFF7FEFF 		bl	STSPIN32G4_readReg
 2911 0030 0346     		mov	r3, r0
 2912 0032 FB73     		strb	r3, [r7, #15]
 775:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   *enabled = (i2cReg & STSPIN32G4_I2C_DTMIN) ? true : false;
 2913              		.loc 4 775 53
 2914 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2915 0036 5B10     		asrs	r3, r3, #1
 2916 0038 03F00103 		and	r3, r3, #1
 2917 003c 002B     		cmp	r3, #0
 2918 003e 14BF     		ite	ne
 2919 0040 0123     		movne	r3, #1
 2920 0042 0023     		moveq	r3, #0
ARM GAS  /tmp/ccIRHRej.s 			page 125


 2921 0044 DAB2     		uxtb	r2, r3
 2922              		.loc 4 775 12
 2923 0046 3B68     		ldr	r3, [r7]
 2924 0048 1A70     		strb	r2, [r3]
 776:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 777:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 2925              		.loc 4 777 10
 2926 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2927              	.L202:
 778:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 2928              		.loc 4 778 1 discriminator 1
 2929 004c 1846     		mov	r0, r3
 2930 004e 1037     		adds	r7, r7, #16
 2931              	.LCFI161:
 2932              		.cfi_def_cfa_offset 8
 2933 0050 BD46     		mov	sp, r7
 2934              	.LCFI162:
 2935              		.cfi_def_cfa_register 13
 2936              		@ sp needed
 2937 0052 80BD     		pop	{r7, pc}
 2938              		.cfi_endproc
 2939              	.LFE516:
 2941              		.section	.text.STSPIN32G4_setVDSP,"ax",%progbits
 2942              		.align	1
 2943              		.global	STSPIN32G4_setVDSP
 2944              		.syntax unified
 2945              		.thumb
 2946              		.thumb_func
 2947              		.fpu fpv4-sp-d16
 2949              	STSPIN32G4_setVDSP:
 2950              	.LFB517:
 779:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 780:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_setVDSP(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_confVDSP vdsp
 781:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 2951              		.loc 4 781 1
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 16
 2954              		@ frame_needed = 1, uses_anonymous_args = 0
 2955 0000 80B5     		push	{r7, lr}
 2956              	.LCFI163:
 2957              		.cfi_def_cfa_offset 8
 2958              		.cfi_offset 7, -8
 2959              		.cfi_offset 14, -4
 2960 0002 84B0     		sub	sp, sp, #16
 2961              	.LCFI164:
 2962              		.cfi_def_cfa_offset 24
 2963 0004 00AF     		add	r7, sp, #0
 2964              	.LCFI165:
 2965              		.cfi_def_cfa_register 7
 2966 0006 7860     		str	r0, [r7, #4]
 2967 0008 3980     		strh	r1, [r7]	@ movhi
 782:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 783:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 2968              		.loc 4 783 11
 2969 000a 0023     		movs	r3, #0
 2970 000c BB73     		strb	r3, [r7, #14]
 784:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
ARM GAS  /tmp/ccIRHRej.s 			page 126


 785:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 2971              		.loc 4 785 6
 2972 000e 7B68     		ldr	r3, [r7, #4]
 2973 0010 002B     		cmp	r3, #0
 2974 0012 01D1     		bne	.L204
 786:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 787:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 2975              		.loc 4 787 12
 2976 0014 0123     		movs	r3, #1
 2977 0016 7CE0     		b	.L220
 2978              	.L204:
 788:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 789:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 790:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_LOGIC, &i2cReg);
 2979              		.loc 4 790 12
 2980 0018 07F10E03 		add	r3, r7, #14
 2981 001c 1A46     		mov	r2, r3
 2982 001e 0221     		movs	r1, #2
 2983 0020 7868     		ldr	r0, [r7, #4]
 2984 0022 FFF7FEFF 		bl	STSPIN32G4_readReg
 2985 0026 0346     		mov	r3, r0
 2986 0028 FB73     		strb	r3, [r7, #15]
 791:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 792:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2987              		.loc 4 792 6
 2988 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2989 002c 002B     		cmp	r3, #0
 2990 002e 04D1     		bne	.L206
 793:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 794:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 2991              		.loc 4 794 14
 2992 0030 7868     		ldr	r0, [r7, #4]
 2993 0032 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 2994 0036 0346     		mov	r3, r0
 2995 0038 FB73     		strb	r3, [r7, #15]
 2996              	.L206:
 795:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 796:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 797:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 2997              		.loc 4 797 6
 2998 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2999 003c 002B     		cmp	r3, #0
 3000 003e 2BD1     		bne	.L221
 798:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 799:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     i2cReg &= ~STSPIN32G4_I2C_VDS_P_DEG_3;
 3001              		.loc 4 799 12
 3002 0040 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3003 0042 23F00C03 		bic	r3, r3, #12
 3004 0046 DBB2     		uxtb	r3, r3
 3005 0048 BB73     		strb	r3, [r7, #14]
 800:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     switch (vdsp.deglitchTime)
 3006              		.loc 4 800 17
 3007 004a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3008 004c 032B     		cmp	r3, #3
 3009 004e 20D8     		bhi	.L208
 3010 0050 01A2     		adr	r2, .L210
 3011 0052 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  /tmp/ccIRHRej.s 			page 127


 3012 0056 00BF     		.p2align 2
 3013              	.L210:
 3014 0058 69000000 		.word	.L213+1
 3015 005c 6F000000 		.word	.L212+1
 3016 0060 7B000000 		.word	.L211+1
 3017 0064 87000000 		.word	.L209+1
 3018              		.p2align 1
 3019              	.L213:
 801:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 802:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _6us:
 803:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VDS_P_DEG_0;
 3020              		.loc 4 803 16
 3021 0068 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3022 006a BB73     		strb	r3, [r7, #14]
 804:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3023              		.loc 4 804 9
 3024 006c 15E0     		b	.L207
 3025              	.L212:
 805:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 806:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _4us:
 807:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VDS_P_DEG_1;
 3026              		.loc 4 807 16
 3027 006e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3028 0070 43F00403 		orr	r3, r3, #4
 3029 0074 DBB2     		uxtb	r3, r3
 3030 0076 BB73     		strb	r3, [r7, #14]
 808:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3031              		.loc 4 808 9
 3032 0078 0FE0     		b	.L207
 3033              	.L211:
 809:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 810:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _3us:
 811:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VDS_P_DEG_2;
 3034              		.loc 4 811 16
 3035 007a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3036 007c 43F00803 		orr	r3, r3, #8
 3037 0080 DBB2     		uxtb	r3, r3
 3038 0082 BB73     		strb	r3, [r7, #14]
 812:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3039              		.loc 4 812 9
 3040 0084 09E0     		b	.L207
 3041              	.L209:
 813:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 814:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case _2us:
 815:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         i2cReg |= STSPIN32G4_I2C_VDS_P_DEG_3;
 3042              		.loc 4 815 16
 3043 0086 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3044 0088 43F00C03 		orr	r3, r3, #12
 3045 008c DBB2     		uxtb	r3, r3
 3046 008e BB73     		strb	r3, [r7, #14]
 816:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3047              		.loc 4 816 9
 3048 0090 03E0     		b	.L207
 3049              	.L208:
 817:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 818:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       default:
 819:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         status = STSPIN32G4_ERROR;
ARM GAS  /tmp/ccIRHRej.s 			page 128


 3050              		.loc 4 819 16
 3051 0092 0123     		movs	r3, #1
 3052 0094 FB73     		strb	r3, [r7, #15]
 820:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3053              		.loc 4 820 9
 3054 0096 00E0     		b	.L207
 3055              	.L221:
 821:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 822:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 3056              		.loc 4 822 3
 3057 0098 00BF     		nop
 3058              	.L207:
 823:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3059              		.loc 4 823 6
 3060 009a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3061 009c 002B     		cmp	r3, #0
 3062 009e 07D1     		bne	.L214
 824:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 825:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_LOGIC, i2cReg);
 3063              		.loc 4 825 14
 3064 00a0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3065 00a2 1A46     		mov	r2, r3
 3066 00a4 0221     		movs	r1, #2
 3067 00a6 7868     		ldr	r0, [r7, #4]
 3068 00a8 FFF7FEFF 		bl	STSPIN32G4_writeReg
 3069 00ac 0346     		mov	r3, r0
 3070 00ae FB73     		strb	r3, [r7, #15]
 3071              	.L214:
 826:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 827:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 828:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3072              		.loc 4 828 6
 3073 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3074 00b2 002B     		cmp	r3, #0
 3075 00b4 08D1     		bne	.L215
 829:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 830:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_NFAULT, &i2cReg);
 3076              		.loc 4 830 14
 3077 00b6 07F10E03 		add	r3, r7, #14
 3078 00ba 1A46     		mov	r2, r3
 3079 00bc 0821     		movs	r1, #8
 3080 00be 7868     		ldr	r0, [r7, #4]
 3081 00c0 FFF7FEFF 		bl	STSPIN32G4_readReg
 3082 00c4 0346     		mov	r3, r0
 3083 00c6 FB73     		strb	r3, [r7, #15]
 3084              	.L215:
 831:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 832:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 833:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // configure nFault signaling
 3085              		.loc 4 833 6
 3086 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3087 00ca 002B     		cmp	r3, #0
 3088 00cc 15D1     		bne	.L216
 834:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 835:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (vdsp.useNFAULT)
 3089              		.loc 4 835 13
 3090 00ce 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccIRHRej.s 			page 129


 3091              		.loc 4 835 8
 3092 00d0 002B     		cmp	r3, #0
 3093 00d2 05D0     		beq	.L217
 836:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 837:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_VDS_P_FLT;
 3094              		.loc 4 837 14
 3095 00d4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3096 00d6 43F00403 		orr	r3, r3, #4
 3097 00da DBB2     		uxtb	r3, r3
 3098 00dc BB73     		strb	r3, [r7, #14]
 3099 00de 04E0     		b	.L218
 3100              	.L217:
 838:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 839:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 840:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 841:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_VDS_P_FLT;
 3101              		.loc 4 841 14
 3102 00e0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3103 00e2 23F00403 		bic	r3, r3, #4
 3104 00e6 DBB2     		uxtb	r3, r3
 3105 00e8 BB73     		strb	r3, [r7, #14]
 3106              	.L218:
 842:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 843:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 844:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_NFAULT, i2cReg);
 3107              		.loc 4 844 14
 3108 00ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3109 00ec 1A46     		mov	r2, r3
 3110 00ee 0821     		movs	r1, #8
 3111 00f0 7868     		ldr	r0, [r7, #4]
 3112 00f2 FFF7FEFF 		bl	STSPIN32G4_writeReg
 3113 00f6 0346     		mov	r3, r0
 3114 00f8 FB73     		strb	r3, [r7, #15]
 3115              	.L216:
 845:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 846:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 847:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3116              		.loc 4 847 6
 3117 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3118 00fc 002B     		cmp	r3, #0
 3119 00fe 04D1     		bne	.L219
 848:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 849:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     STSPIN32G4_lockReg(hdl);
 3120              		.loc 4 849 5
 3121 0100 7868     		ldr	r0, [r7, #4]
 3122 0102 FFF7FEFF 		bl	STSPIN32G4_lockReg
 850:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 3123              		.loc 4 850 12
 3124 0106 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3125 0108 03E0     		b	.L220
 3126              	.L219:
 851:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 852:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
 853:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 854:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_lockReg(hdl);
 3127              		.loc 4 854 12
 3128 010a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccIRHRej.s 			page 130


 3129 010c FFF7FEFF 		bl	STSPIN32G4_lockReg
 3130 0110 0346     		mov	r3, r0
 3131              	.L220:
 855:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 856:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3132              		.loc 4 856 1 discriminator 1
 3133 0112 1846     		mov	r0, r3
 3134 0114 1037     		adds	r7, r7, #16
 3135              	.LCFI166:
 3136              		.cfi_def_cfa_offset 8
 3137 0116 BD46     		mov	sp, r7
 3138              	.LCFI167:
 3139              		.cfi_def_cfa_register 13
 3140              		@ sp needed
 3141 0118 80BD     		pop	{r7, pc}
 3142              		.cfi_endproc
 3143              	.LFE517:
 3145 011a 00BF     		.section	.text.STSPIN32G4_getVDSP,"ax",%progbits
 3146              		.align	1
 3147              		.global	STSPIN32G4_getVDSP
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3151              		.fpu fpv4-sp-d16
 3153              	STSPIN32G4_getVDSP:
 3154              	.LFB518:
 857:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 858:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_getVDSP(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_confVDSP *vds
 859:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 3155              		.loc 4 859 1
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 16
 3158              		@ frame_needed = 1, uses_anonymous_args = 0
 3159 0000 80B5     		push	{r7, lr}
 3160              	.LCFI168:
 3161              		.cfi_def_cfa_offset 8
 3162              		.cfi_offset 7, -8
 3163              		.cfi_offset 14, -4
 3164 0002 84B0     		sub	sp, sp, #16
 3165              	.LCFI169:
 3166              		.cfi_def_cfa_offset 24
 3167 0004 00AF     		add	r7, sp, #0
 3168              	.LCFI170:
 3169              		.cfi_def_cfa_register 7
 3170 0006 7860     		str	r0, [r7, #4]
 3171 0008 3960     		str	r1, [r7]
 860:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 861:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 3172              		.loc 4 861 11
 3173 000a 0023     		movs	r3, #0
 3174 000c BB73     		strb	r3, [r7, #14]
 862:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 863:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 3175              		.loc 4 863 6
 3176 000e 7B68     		ldr	r3, [r7, #4]
 3177 0010 002B     		cmp	r3, #0
 3178 0012 01D1     		bne	.L223
ARM GAS  /tmp/ccIRHRej.s 			page 131


 864:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 865:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3179              		.loc 4 865 12
 3180 0014 0123     		movs	r3, #1
 3181 0016 5FE0     		b	.L234
 3182              	.L223:
 866:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 867:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 868:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (vdsp == NULL)
 3183              		.loc 4 868 6
 3184 0018 3B68     		ldr	r3, [r7]
 3185 001a 002B     		cmp	r3, #0
 3186 001c 01D1     		bne	.L225
 869:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 870:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3187              		.loc 4 870 12
 3188 001e 0123     		movs	r3, #1
 3189 0020 5AE0     		b	.L234
 3190              	.L225:
 871:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 872:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 873:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_LOGIC, &i2cReg);
 3191              		.loc 4 873 12
 3192 0022 07F10E03 		add	r3, r7, #14
 3193 0026 1A46     		mov	r2, r3
 3194 0028 0221     		movs	r1, #2
 3195 002a 7868     		ldr	r0, [r7, #4]
 3196 002c FFF7FEFF 		bl	STSPIN32G4_readReg
 3197 0030 0346     		mov	r3, r0
 3198 0032 FB73     		strb	r3, [r7, #15]
 874:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 875:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3199              		.loc 4 875 6
 3200 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3201 0036 002B     		cmp	r3, #0
 3202 0038 35D1     		bne	.L235
 876:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 877:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     switch (i2cReg & STSPIN32G4_I2C_VDS_P_DEG_3)
 3203              		.loc 4 877 20
 3204 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3205 003c 03F00C03 		and	r3, r3, #12
 3206 0040 0C2B     		cmp	r3, #12
 3207 0042 2DD8     		bhi	.L227
 3208 0044 01A2     		adr	r2, .L229
 3209 0046 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3210 004a 00BF     		.p2align 2
 3211              	.L229:
 3212 004c 81000000 		.word	.L232+1
 3213 0050 A1000000 		.word	.L227+1
 3214 0054 A1000000 		.word	.L227+1
 3215 0058 A1000000 		.word	.L227+1
 3216 005c 89000000 		.word	.L231+1
 3217 0060 A1000000 		.word	.L227+1
 3218 0064 A1000000 		.word	.L227+1
 3219 0068 A1000000 		.word	.L227+1
 3220 006c 91000000 		.word	.L230+1
 3221 0070 A1000000 		.word	.L227+1
ARM GAS  /tmp/ccIRHRej.s 			page 132


 3222 0074 A1000000 		.word	.L227+1
 3223 0078 A1000000 		.word	.L227+1
 3224 007c 99000000 		.word	.L228+1
 3225              		.p2align 1
 3226              	.L232:
 878:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 879:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case STSPIN32G4_I2C_VDS_P_DEG_0:
 880:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         vdsp->deglitchTime = _6us;
 3227              		.loc 4 880 28
 3228 0080 3B68     		ldr	r3, [r7]
 3229 0082 0022     		movs	r2, #0
 3230 0084 1A70     		strb	r2, [r3]
 881:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3231              		.loc 4 881 9
 3232 0086 0FE0     		b	.L226
 3233              	.L231:
 882:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 883:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case STSPIN32G4_I2C_VDS_P_DEG_1:
 884:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         vdsp->deglitchTime = _4us;
 3234              		.loc 4 884 28
 3235 0088 3B68     		ldr	r3, [r7]
 3236 008a 0122     		movs	r2, #1
 3237 008c 1A70     		strb	r2, [r3]
 885:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3238              		.loc 4 885 9
 3239 008e 0BE0     		b	.L226
 3240              	.L230:
 886:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 887:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case STSPIN32G4_I2C_VDS_P_DEG_2:
 888:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         vdsp->deglitchTime = _3us;
 3241              		.loc 4 888 28
 3242 0090 3B68     		ldr	r3, [r7]
 3243 0092 0222     		movs	r2, #2
 3244 0094 1A70     		strb	r2, [r3]
 889:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3245              		.loc 4 889 9
 3246 0096 07E0     		b	.L226
 3247              	.L228:
 890:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 891:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       case STSPIN32G4_I2C_VDS_P_DEG_3:
 892:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         vdsp->deglitchTime = _2us;
 3248              		.loc 4 892 28
 3249 0098 3B68     		ldr	r3, [r7]
 3250 009a 0322     		movs	r2, #3
 3251 009c 1A70     		strb	r2, [r3]
 893:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3252              		.loc 4 893 9
 3253 009e 03E0     		b	.L226
 3254              	.L227:
 894:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 895:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       default:
 896:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         status = STSPIN32G4_ERROR;
 3255              		.loc 4 896 16
 3256 00a0 0123     		movs	r3, #1
 3257 00a2 FB73     		strb	r3, [r7, #15]
 897:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 3258              		.loc 4 897 9
ARM GAS  /tmp/ccIRHRej.s 			page 133


 3259 00a4 00E0     		b	.L226
 3260              	.L235:
 898:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 899:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 3261              		.loc 4 899 3
 3262 00a6 00BF     		nop
 3263              	.L226:
 900:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 901:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3264              		.loc 4 901 6
 3265 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3266 00aa 002B     		cmp	r3, #0
 3267 00ac 13D1     		bne	.L233
 902:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 903:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_NFAULT, &i2cReg);
 3268              		.loc 4 903 14
 3269 00ae 07F10E03 		add	r3, r7, #14
 3270 00b2 1A46     		mov	r2, r3
 3271 00b4 0821     		movs	r1, #8
 3272 00b6 7868     		ldr	r0, [r7, #4]
 3273 00b8 FFF7FEFF 		bl	STSPIN32G4_readReg
 3274 00bc 0346     		mov	r3, r0
 3275 00be FB73     		strb	r3, [r7, #15]
 904:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     vdsp->useNFAULT = (i2cReg & STSPIN32G4_I2C_VDS_P_FLT) ? true : false;
 3276              		.loc 4 904 66
 3277 00c0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3278 00c2 9B10     		asrs	r3, r3, #2
 3279 00c4 03F00103 		and	r3, r3, #1
 3280 00c8 002B     		cmp	r3, #0
 3281 00ca 14BF     		ite	ne
 3282 00cc 0123     		movne	r3, #1
 3283 00ce 0023     		moveq	r3, #0
 3284 00d0 DAB2     		uxtb	r2, r3
 3285              		.loc 4 904 21
 3286 00d2 3B68     		ldr	r3, [r7]
 3287 00d4 5A70     		strb	r2, [r3, #1]
 3288              	.L233:
 905:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 906:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 907:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 3289              		.loc 4 907 10
 3290 00d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3291              	.L234:
 908:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3292              		.loc 4 908 1 discriminator 1
 3293 00d8 1846     		mov	r0, r3
 3294 00da 1037     		adds	r7, r7, #16
 3295              	.LCFI171:
 3296              		.cfi_def_cfa_offset 8
 3297 00dc BD46     		mov	sp, r7
 3298              	.LCFI172:
 3299              		.cfi_def_cfa_register 13
 3300              		@ sp needed
 3301 00de 80BD     		pop	{r7, pc}
 3302              		.cfi_endproc
 3303              	.LFE518:
 3305              		.section	.text.STSPIN32G4_setTHSD,"ax",%progbits
ARM GAS  /tmp/ccIRHRej.s 			page 134


 3306              		.align	1
 3307              		.global	STSPIN32G4_setTHSD
 3308              		.syntax unified
 3309              		.thumb
 3310              		.thumb_func
 3311              		.fpu fpv4-sp-d16
 3313              	STSPIN32G4_setTHSD:
 3314              	.LFB519:
 909:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 910:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_setTHSD(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_confTHSD thsd
 911:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 3315              		.loc 4 911 1
 3316              		.cfi_startproc
 3317              		@ args = 0, pretend = 0, frame = 16
 3318              		@ frame_needed = 1, uses_anonymous_args = 0
 3319 0000 80B5     		push	{r7, lr}
 3320              	.LCFI173:
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 84B0     		sub	sp, sp, #16
 3325              	.LCFI174:
 3326              		.cfi_def_cfa_offset 24
 3327 0004 00AF     		add	r7, sp, #0
 3328              	.LCFI175:
 3329              		.cfi_def_cfa_register 7
 3330 0006 7860     		str	r0, [r7, #4]
 3331 0008 3980     		strh	r1, [r7]	@ movhi
 912:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 913:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 3332              		.loc 4 913 11
 3333 000a 0023     		movs	r3, #0
 3334 000c BB73     		strb	r3, [r7, #14]
 914:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 915:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 3335              		.loc 4 915 6
 3336 000e 7B68     		ldr	r3, [r7, #4]
 3337 0010 002B     		cmp	r3, #0
 3338 0012 01D1     		bne	.L237
 916:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 917:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3339              		.loc 4 917 12
 3340 0014 0123     		movs	r3, #1
 3341 0016 5AE0     		b	.L248
 3342              	.L237:
 918:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 919:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 920:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_NFAULT, &i2cReg);
 3343              		.loc 4 920 12
 3344 0018 07F10E03 		add	r3, r7, #14
 3345 001c 1A46     		mov	r2, r3
 3346 001e 0821     		movs	r1, #8
 3347 0020 7868     		ldr	r0, [r7, #4]
 3348 0022 FFF7FEFF 		bl	STSPIN32G4_readReg
 3349 0026 0346     		mov	r3, r0
 3350 0028 FB73     		strb	r3, [r7, #15]
 921:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
ARM GAS  /tmp/ccIRHRej.s 			page 135


 922:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3351              		.loc 4 922 6
 3352 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3353 002c 002B     		cmp	r3, #0
 3354 002e 04D1     		bne	.L239
 923:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 924:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 3355              		.loc 4 924 14
 3356 0030 7868     		ldr	r0, [r7, #4]
 3357 0032 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 3358 0036 0346     		mov	r3, r0
 3359 0038 FB73     		strb	r3, [r7, #15]
 3360              	.L239:
 925:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 926:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 927:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3361              		.loc 4 927 6
 3362 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3363 003c 002B     		cmp	r3, #0
 3364 003e 15D1     		bne	.L240
 928:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 929:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (thsd.useNFAULT)
 3365              		.loc 4 929 13
 3366 0040 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3367              		.loc 4 929 8
 3368 0042 002B     		cmp	r3, #0
 3369 0044 05D0     		beq	.L241
 930:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 931:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_THSD_FLT;
 3370              		.loc 4 931 14
 3371 0046 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3372 0048 43F00203 		orr	r3, r3, #2
 3373 004c DBB2     		uxtb	r3, r3
 3374 004e BB73     		strb	r3, [r7, #14]
 3375 0050 04E0     		b	.L242
 3376              	.L241:
 932:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 933:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 934:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 935:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_THSD_FLT;
 3377              		.loc 4 935 14
 3378 0052 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3379 0054 23F00203 		bic	r3, r3, #2
 3380 0058 DBB2     		uxtb	r3, r3
 3381 005a BB73     		strb	r3, [r7, #14]
 3382              	.L242:
 936:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 937:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 938:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_NFAULT, i2cReg);
 3383              		.loc 4 938 14
 3384 005c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3385 005e 1A46     		mov	r2, r3
 3386 0060 0821     		movs	r1, #8
 3387 0062 7868     		ldr	r0, [r7, #4]
 3388 0064 FFF7FEFF 		bl	STSPIN32G4_writeReg
 3389 0068 0346     		mov	r3, r0
 3390 006a FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccIRHRej.s 			page 136


 3391              	.L240:
 939:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 940:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 941:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3392              		.loc 4 941 6
 3393 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3394 006e 002B     		cmp	r3, #0
 3395 0070 08D1     		bne	.L243
 942:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 943:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_READY, &i2cReg);
 3396              		.loc 4 943 14
 3397 0072 07F10E03 		add	r3, r7, #14
 3398 0076 1A46     		mov	r2, r3
 3399 0078 0721     		movs	r1, #7
 3400 007a 7868     		ldr	r0, [r7, #4]
 3401 007c FFF7FEFF 		bl	STSPIN32G4_readReg
 3402 0080 0346     		mov	r3, r0
 3403 0082 FB73     		strb	r3, [r7, #15]
 3404              	.L243:
 944:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 945:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 946:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3405              		.loc 4 946 6
 3406 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3407 0086 002B     		cmp	r3, #0
 3408 0088 15D1     		bne	.L244
 947:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 948:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (thsd.useREADY)
 3409              		.loc 4 948 13
 3410 008a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3411              		.loc 4 948 8
 3412 008c 002B     		cmp	r3, #0
 3413 008e 05D0     		beq	.L245
 949:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 950:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_THSD_RDY;
 3414              		.loc 4 950 14
 3415 0090 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3416 0092 43F00203 		orr	r3, r3, #2
 3417 0096 DBB2     		uxtb	r3, r3
 3418 0098 BB73     		strb	r3, [r7, #14]
 3419 009a 04E0     		b	.L246
 3420              	.L245:
 951:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 952:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
 953:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 954:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_THSD_RDY;
 3421              		.loc 4 954 14
 3422 009c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3423 009e 23F00203 		bic	r3, r3, #2
 3424 00a2 DBB2     		uxtb	r3, r3
 3425 00a4 BB73     		strb	r3, [r7, #14]
 3426              	.L246:
 955:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
 956:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 957:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_READY, i2cReg);
 3427              		.loc 4 957 14
 3428 00a6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccIRHRej.s 			page 137


 3429 00a8 1A46     		mov	r2, r3
 3430 00aa 0721     		movs	r1, #7
 3431 00ac 7868     		ldr	r0, [r7, #4]
 3432 00ae FFF7FEFF 		bl	STSPIN32G4_writeReg
 3433 00b2 0346     		mov	r3, r0
 3434 00b4 FB73     		strb	r3, [r7, #15]
 3435              	.L244:
 958:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 959:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 960:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3436              		.loc 4 960 6
 3437 00b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3438 00b8 002B     		cmp	r3, #0
 3439 00ba 04D1     		bne	.L247
 961:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 962:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     STSPIN32G4_lockReg(hdl);
 3440              		.loc 4 962 5
 3441 00bc 7868     		ldr	r0, [r7, #4]
 3442 00be FFF7FEFF 		bl	STSPIN32G4_lockReg
 963:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return status;
 3443              		.loc 4 963 12
 3444 00c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3445 00c4 03E0     		b	.L248
 3446              	.L247:
 964:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 965:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
 966:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 967:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_lockReg(hdl);
 3447              		.loc 4 967 12
 3448 00c6 7868     		ldr	r0, [r7, #4]
 3449 00c8 FFF7FEFF 		bl	STSPIN32G4_lockReg
 3450 00cc 0346     		mov	r3, r0
 3451              	.L248:
 968:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 969:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3452              		.loc 4 969 1 discriminator 1
 3453 00ce 1846     		mov	r0, r3
 3454 00d0 1037     		adds	r7, r7, #16
 3455              	.LCFI176:
 3456              		.cfi_def_cfa_offset 8
 3457 00d2 BD46     		mov	sp, r7
 3458              	.LCFI177:
 3459              		.cfi_def_cfa_register 13
 3460              		@ sp needed
 3461 00d4 80BD     		pop	{r7, pc}
 3462              		.cfi_endproc
 3463              	.LFE519:
 3465              		.section	.text.STSPIN32G4_getTHSD,"ax",%progbits
 3466              		.align	1
 3467              		.global	STSPIN32G4_getTHSD
 3468              		.syntax unified
 3469              		.thumb
 3470              		.thumb_func
 3471              		.fpu fpv4-sp-d16
 3473              	STSPIN32G4_getTHSD:
 3474              	.LFB520:
 970:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
ARM GAS  /tmp/ccIRHRej.s 			page 138


 971:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_getTHSD(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_confTHSD *ths
 972:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 3475              		.loc 4 972 1
 3476              		.cfi_startproc
 3477              		@ args = 0, pretend = 0, frame = 16
 3478              		@ frame_needed = 1, uses_anonymous_args = 0
 3479 0000 80B5     		push	{r7, lr}
 3480              	.LCFI178:
 3481              		.cfi_def_cfa_offset 8
 3482              		.cfi_offset 7, -8
 3483              		.cfi_offset 14, -4
 3484 0002 84B0     		sub	sp, sp, #16
 3485              	.LCFI179:
 3486              		.cfi_def_cfa_offset 24
 3487 0004 00AF     		add	r7, sp, #0
 3488              	.LCFI180:
 3489              		.cfi_def_cfa_register 7
 3490 0006 7860     		str	r0, [r7, #4]
 3491 0008 3960     		str	r1, [r7]
 973:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
 974:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 3492              		.loc 4 974 11
 3493 000a 0023     		movs	r3, #0
 3494 000c BB73     		strb	r3, [r7, #14]
 975:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 976:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 3495              		.loc 4 976 6
 3496 000e 7B68     		ldr	r3, [r7, #4]
 3497 0010 002B     		cmp	r3, #0
 3498 0012 01D1     		bne	.L250
 977:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 978:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3499              		.loc 4 978 12
 3500 0014 0123     		movs	r3, #1
 3501 0016 30E0     		b	.L254
 3502              	.L250:
 979:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 980:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 981:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (thsd == NULL)
 3503              		.loc 4 981 6
 3504 0018 3B68     		ldr	r3, [r7]
 3505 001a 002B     		cmp	r3, #0
 3506 001c 01D1     		bne	.L252
 982:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 983:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3507              		.loc 4 983 12
 3508 001e 0123     		movs	r3, #1
 3509 0020 2BE0     		b	.L254
 3510              	.L252:
 984:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 985:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 986:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_NFAULT, &i2cReg);
 3511              		.loc 4 986 12
 3512 0022 07F10E03 		add	r3, r7, #14
 3513 0026 1A46     		mov	r2, r3
 3514 0028 0821     		movs	r1, #8
 3515 002a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccIRHRej.s 			page 139


 3516 002c FFF7FEFF 		bl	STSPIN32G4_readReg
 3517 0030 0346     		mov	r3, r0
 3518 0032 FB73     		strb	r3, [r7, #15]
 987:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   thsd->useNFAULT = (i2cReg & STSPIN32G4_I2C_THSD_FLT) ? true : false;
 3519              		.loc 4 987 63
 3520 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3521 0036 5B10     		asrs	r3, r3, #1
 3522 0038 03F00103 		and	r3, r3, #1
 3523 003c 002B     		cmp	r3, #0
 3524 003e 14BF     		ite	ne
 3525 0040 0123     		movne	r3, #1
 3526 0042 0023     		moveq	r3, #0
 3527 0044 DAB2     		uxtb	r2, r3
 3528              		.loc 4 987 19
 3529 0046 3B68     		ldr	r3, [r7]
 3530 0048 1A70     		strb	r2, [r3]
 988:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 989:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3531              		.loc 4 989 6
 3532 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3533 004c 002B     		cmp	r3, #0
 3534 004e 13D1     		bne	.L253
 990:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 991:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_READY, &i2cReg);
 3535              		.loc 4 991 14
 3536 0050 07F10E03 		add	r3, r7, #14
 3537 0054 1A46     		mov	r2, r3
 3538 0056 0721     		movs	r1, #7
 3539 0058 7868     		ldr	r0, [r7, #4]
 3540 005a FFF7FEFF 		bl	STSPIN32G4_readReg
 3541 005e 0346     		mov	r3, r0
 3542 0060 FB73     		strb	r3, [r7, #15]
 992:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     thsd->useREADY = (i2cReg & STSPIN32G4_I2C_THSD_RDY) ? true : false;
 3543              		.loc 4 992 64
 3544 0062 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3545 0064 5B10     		asrs	r3, r3, #1
 3546 0066 03F00103 		and	r3, r3, #1
 3547 006a 002B     		cmp	r3, #0
 3548 006c 14BF     		ite	ne
 3549 006e 0123     		movne	r3, #1
 3550 0070 0023     		moveq	r3, #0
 3551 0072 DAB2     		uxtb	r2, r3
 3552              		.loc 4 992 20
 3553 0074 3B68     		ldr	r3, [r7]
 3554 0076 5A70     		strb	r2, [r3, #1]
 3555              	.L253:
 993:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
 994:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 995:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 3556              		.loc 4 995 10
 3557 0078 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3558              	.L254:
 996:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 997:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3559              		.loc 4 997 1 discriminator 1
 3560 007a 1846     		mov	r0, r3
 3561 007c 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccIRHRej.s 			page 140


 3562              	.LCFI181:
 3563              		.cfi_def_cfa_offset 8
 3564 007e BD46     		mov	sp, r7
 3565              	.LCFI182:
 3566              		.cfi_def_cfa_register 13
 3567              		@ sp needed
 3568 0080 80BD     		pop	{r7, pc}
 3569              		.cfi_endproc
 3570              	.LFE520:
 3572              		.section	.text.STSPIN32G4_clearFaults,"ax",%progbits
 3573              		.align	1
 3574              		.global	STSPIN32G4_clearFaults
 3575              		.syntax unified
 3576              		.thumb
 3577              		.thumb_func
 3578              		.fpu fpv4-sp-d16
 3580              	STSPIN32G4_clearFaults:
 3581              	.LFB521:
 998:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
 999:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_clearFaults(STSPIN32G4_HandleTypeDef *hdl)
1000:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 3582              		.loc 4 1000 1
 3583              		.cfi_startproc
 3584              		@ args = 0, pretend = 0, frame = 16
 3585              		@ frame_needed = 1, uses_anonymous_args = 0
 3586 0000 80B5     		push	{r7, lr}
 3587              	.LCFI183:
 3588              		.cfi_def_cfa_offset 8
 3589              		.cfi_offset 7, -8
 3590              		.cfi_offset 14, -4
 3591 0002 84B0     		sub	sp, sp, #16
 3592              	.LCFI184:
 3593              		.cfi_def_cfa_offset 24
 3594 0004 00AF     		add	r7, sp, #0
 3595              	.LCFI185:
 3596              		.cfi_def_cfa_register 7
 3597 0006 7860     		str	r0, [r7, #4]
1001:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0xff;
 3598              		.loc 4 1001 11
 3599 0008 FF23     		movs	r3, #255
 3600 000a FB73     		strb	r3, [r7, #15]
1002:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1003:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 3601              		.loc 4 1003 6
 3602 000c 7B68     		ldr	r3, [r7, #4]
 3603 000e 002B     		cmp	r3, #0
 3604 0010 01D1     		bne	.L256
1004:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1005:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3605              		.loc 4 1005 12
 3606 0012 0123     		movs	r3, #1
 3607 0014 06E0     		b	.L257
 3608              	.L256:
1006:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1007:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1008:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_CLEAR, i2cReg);
 3609              		.loc 4 1008 10
ARM GAS  /tmp/ccIRHRej.s 			page 141


 3610 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3611 0018 1A46     		mov	r2, r3
 3612 001a 0921     		movs	r1, #9
 3613 001c 7868     		ldr	r0, [r7, #4]
 3614 001e FFF7FEFF 		bl	STSPIN32G4_writeReg
 3615 0022 0346     		mov	r3, r0
 3616              	.L257:
1009:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3617              		.loc 4 1009 1
 3618 0024 1846     		mov	r0, r3
 3619 0026 1037     		adds	r7, r7, #16
 3620              	.LCFI186:
 3621              		.cfi_def_cfa_offset 8
 3622 0028 BD46     		mov	sp, r7
 3623              	.LCFI187:
 3624              		.cfi_def_cfa_register 13
 3625              		@ sp needed
 3626 002a 80BD     		pop	{r7, pc}
 3627              		.cfi_endproc
 3628              	.LFE521:
 3630              		.section	.text.STSPIN32G4_reset,"ax",%progbits
 3631              		.align	1
 3632              		.global	STSPIN32G4_reset
 3633              		.syntax unified
 3634              		.thumb
 3635              		.thumb_func
 3636              		.fpu fpv4-sp-d16
 3638              	STSPIN32G4_reset:
 3639              	.LFB522:
1010:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1011:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_reset(STSPIN32G4_HandleTypeDef *hdl)
1012:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 3640              		.loc 4 1012 1
 3641              		.cfi_startproc
 3642              		@ args = 0, pretend = 0, frame = 16
 3643              		@ frame_needed = 1, uses_anonymous_args = 0
 3644 0000 80B5     		push	{r7, lr}
 3645              	.LCFI188:
 3646              		.cfi_def_cfa_offset 8
 3647              		.cfi_offset 7, -8
 3648              		.cfi_offset 14, -4
 3649 0002 84B0     		sub	sp, sp, #16
 3650              	.LCFI189:
 3651              		.cfi_def_cfa_offset 24
 3652 0004 00AF     		add	r7, sp, #0
 3653              	.LCFI190:
 3654              		.cfi_def_cfa_register 7
 3655 0006 7860     		str	r0, [r7, #4]
1013:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
1014:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0xff;
 3656              		.loc 4 1014 11
 3657 0008 FF23     		movs	r3, #255
 3658 000a BB73     		strb	r3, [r7, #14]
1015:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1016:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 3659              		.loc 4 1016 6
 3660 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIRHRej.s 			page 142


 3661 000e 002B     		cmp	r3, #0
 3662 0010 01D1     		bne	.L259
1017:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1018:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3663              		.loc 4 1018 12
 3664 0012 0123     		movs	r3, #1
 3665 0014 10E0     		b	.L260
 3666              	.L259:
1019:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1020:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1021:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_unlockReg(hdl);
 3667              		.loc 4 1021 12
 3668 0016 7868     		ldr	r0, [r7, #4]
 3669 0018 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 3670 001c 0346     		mov	r3, r0
 3671 001e FB73     		strb	r3, [r7, #15]
1022:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1023:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3672              		.loc 4 1023 6
 3673 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3674 0022 002B     		cmp	r3, #0
 3675 0024 07D1     		bne	.L261
1024:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1025:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_RESET, i2cReg);
 3676              		.loc 4 1025 14
 3677 0026 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3678 0028 1A46     		mov	r2, r3
 3679 002a 0C21     		movs	r1, #12
 3680 002c 7868     		ldr	r0, [r7, #4]
 3681 002e FFF7FEFF 		bl	STSPIN32G4_writeReg
 3682 0032 0346     		mov	r3, r0
 3683 0034 FB73     		strb	r3, [r7, #15]
 3684              	.L261:
1026:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1027:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1028:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 3685              		.loc 4 1028 10
 3686 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3687              	.L260:
1029:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3688              		.loc 4 1029 1
 3689 0038 1846     		mov	r0, r3
 3690 003a 1037     		adds	r7, r7, #16
 3691              	.LCFI191:
 3692              		.cfi_def_cfa_offset 8
 3693 003c BD46     		mov	sp, r7
 3694              	.LCFI192:
 3695              		.cfi_def_cfa_register 13
 3696              		@ sp needed
 3697 003e 80BD     		pop	{r7, pc}
 3698              		.cfi_endproc
 3699              	.LFE522:
 3701              		.section	.text.STSPIN32G4_standby,"ax",%progbits
 3702              		.align	1
 3703              		.global	STSPIN32G4_standby
 3704              		.syntax unified
 3705              		.thumb
ARM GAS  /tmp/ccIRHRej.s 			page 143


 3706              		.thumb_func
 3707              		.fpu fpv4-sp-d16
 3709              	STSPIN32G4_standby:
 3710              	.LFB523:
1030:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1031:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_standby(STSPIN32G4_HandleTypeDef *hdl, bool enableStbyReg)
1032:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 3711              		.loc 4 1032 1
 3712              		.cfi_startproc
 3713              		@ args = 0, pretend = 0, frame = 40
 3714              		@ frame_needed = 1, uses_anonymous_args = 0
 3715 0000 80B5     		push	{r7, lr}
 3716              	.LCFI193:
 3717              		.cfi_def_cfa_offset 8
 3718              		.cfi_offset 7, -8
 3719              		.cfi_offset 14, -4
 3720 0002 8AB0     		sub	sp, sp, #40
 3721              	.LCFI194:
 3722              		.cfi_def_cfa_offset 48
 3723 0004 00AF     		add	r7, sp, #0
 3724              	.LCFI195:
 3725              		.cfi_def_cfa_register 7
 3726 0006 7860     		str	r0, [r7, #4]
 3727 0008 0B46     		mov	r3, r1
 3728 000a FB70     		strb	r3, [r7, #3]
1033:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
1034:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint8_t i2cReg = 0;
 3729              		.loc 4 1034 11
 3730 000c 0023     		movs	r3, #0
 3731 000e FB76     		strb	r3, [r7, #27]
1035:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t tickFreq;
1036:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t ticks;
1037:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1038:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1039:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1040:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
1041:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 3732              		.loc 4 1041 3
 3733 0010 07F10803 		add	r3, r7, #8
 3734 0014 1846     		mov	r0, r3
 3735 0016 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
1042:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1043:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   tickFreq = RCC_Clocks.HCLK_Frequency /  (SysTick->LOAD + 1);
 3736              		.loc 4 1043 24
 3737 001a FA68     		ldr	r2, [r7, #12]
 3738              		.loc 4 1043 51
 3739 001c 694B     		ldr	r3, .L284
 3740 001e 5B68     		ldr	r3, [r3, #4]
 3741              		.loc 4 1043 58
 3742 0020 0133     		adds	r3, r3, #1
 3743              		.loc 4 1043 12
 3744 0022 B2FBF3F3 		udiv	r3, r2, r3
 3745 0026 3B62     		str	r3, [r7, #32]
1044:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1045:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (LL_SYSTICK_GetClkSource() == LL_SYSTICK_CLKSOURCE_HCLK_DIV8)
 3746              		.loc 4 1045 7
 3747 0028 FFF7FEFF 		bl	LL_SYSTICK_GetClkSource
ARM GAS  /tmp/ccIRHRej.s 			page 144


 3748 002c 0346     		mov	r3, r0
 3749              		.loc 4 1045 6
 3750 002e 002B     		cmp	r3, #0
 3751 0030 02D1     		bne	.L263
1046:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1047:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     tickFreq /= 8;
 3752              		.loc 4 1047 14
 3753 0032 3B6A     		ldr	r3, [r7, #32]
 3754 0034 DB08     		lsrs	r3, r3, #3
 3755 0036 3B62     		str	r3, [r7, #32]
 3756              	.L263:
1048:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1049:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1050:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1051:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1052:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t tickStart;
1053:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   tickFreq = HAL_GetTickFreq() / 1000; // in kHz to have ms base
1054:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1055:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1056:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1057:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 3757              		.loc 4 1057 6
 3758 0038 7B68     		ldr	r3, [r7, #4]
 3759 003a 002B     		cmp	r3, #0
 3760 003c 01D1     		bne	.L264
1058:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1059:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 3761              		.loc 4 1059 12
 3762 003e 0123     		movs	r3, #1
 3763 0040 BBE0     		b	.L283
 3764              	.L264:
1060:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1061:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1062:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_POWMNG, &i2cReg);
 3765              		.loc 4 1062 12
 3766 0042 07F11B03 		add	r3, r7, #27
 3767 0046 1A46     		mov	r2, r3
 3768 0048 0121     		movs	r1, #1
 3769 004a 7868     		ldr	r0, [r7, #4]
 3770 004c FFF7FEFF 		bl	STSPIN32G4_readReg
 3771 0050 0346     		mov	r3, r0
 3772 0052 87F82730 		strb	r3, [r7, #39]
1063:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1064:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3773              		.loc 4 1064 6
 3774 0056 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3775 005a 002B     		cmp	r3, #0
 3776 005c 05D1     		bne	.L266
1065:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1066:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_unlockReg(hdl);
 3777              		.loc 4 1066 14
 3778 005e 7868     		ldr	r0, [r7, #4]
 3779 0060 FFF7FEFF 		bl	STSPIN32G4_unlockReg
 3780 0064 0346     		mov	r3, r0
 3781 0066 87F82730 		strb	r3, [r7, #39]
 3782              	.L266:
1067:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
ARM GAS  /tmp/ccIRHRej.s 			page 145


1068:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1069:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // configure the Standby regulator
 3783              		.loc 4 1069 6
 3784 006a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3785 006e 002B     		cmp	r3, #0
 3786 0070 16D1     		bne	.L267
1070:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1071:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (enableStbyReg)
 3787              		.loc 4 1071 8
 3788 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3789 0074 002B     		cmp	r3, #0
 3790 0076 05D0     		beq	.L268
1072:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1073:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg |= STSPIN32G4_I2C_STBY_REG_EN;
 3791              		.loc 4 1073 14
 3792 0078 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3793 007a 43F01003 		orr	r3, r3, #16
 3794 007e DBB2     		uxtb	r3, r3
 3795 0080 FB76     		strb	r3, [r7, #27]
 3796 0082 04E0     		b	.L269
 3797              	.L268:
1074:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1075:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     else
1076:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1077:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       i2cReg &= ~STSPIN32G4_I2C_STBY_REG_EN;
 3798              		.loc 4 1077 14
 3799 0084 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3800 0086 23F01003 		bic	r3, r3, #16
 3801 008a DBB2     		uxtb	r3, r3
 3802 008c FB76     		strb	r3, [r7, #27]
 3803              	.L269:
1078:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1079:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1080:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_POWMNG, i2cReg);
 3804              		.loc 4 1080 14
 3805 008e FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3806 0090 1A46     		mov	r2, r3
 3807 0092 0121     		movs	r1, #1
 3808 0094 7868     		ldr	r0, [r7, #4]
 3809 0096 FFF7FEFF 		bl	STSPIN32G4_writeReg
 3810 009a 0346     		mov	r3, r0
 3811 009c 87F82730 		strb	r3, [r7, #39]
 3812              	.L267:
1081:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1082:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1083:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // create backup of the READY register
 3813              		.loc 4 1083 6
 3814 00a0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3815 00a4 002B     		cmp	r3, #0
 3816 00a6 07D1     		bne	.L270
1084:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1085:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_READY, &STSPIN32G4_bkupREADY);
 3817              		.loc 4 1085 14
 3818 00a8 474A     		ldr	r2, .L284+4
 3819 00aa 0721     		movs	r1, #7
 3820 00ac 7868     		ldr	r0, [r7, #4]
 3821 00ae FFF7FEFF 		bl	STSPIN32G4_readReg
ARM GAS  /tmp/ccIRHRej.s 			page 146


 3822 00b2 0346     		mov	r3, r0
 3823 00b4 87F82730 		strb	r3, [r7, #39]
 3824              	.L270:
1086:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1087:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1088:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // set only STBY_RDY to signal the exit from standby
 3825              		.loc 4 1088 6
 3826 00b8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3827 00bc 002B     		cmp	r3, #0
 3828 00be 0AD1     		bne	.L271
1089:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1090:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     i2cReg = STSPIN32G4_I2C_STBY_RDY;
 3829              		.loc 4 1090 12
 3830 00c0 0823     		movs	r3, #8
 3831 00c2 FB76     		strb	r3, [r7, #27]
1091:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_READY, i2cReg);
 3832              		.loc 4 1091 14
 3833 00c4 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3834 00c6 1A46     		mov	r2, r3
 3835 00c8 0721     		movs	r1, #7
 3836 00ca 7868     		ldr	r0, [r7, #4]
 3837 00cc FFF7FEFF 		bl	STSPIN32G4_writeReg
 3838 00d0 0346     		mov	r3, r0
 3839 00d2 87F82730 		strb	r3, [r7, #39]
 3840              	.L271:
1092:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1093:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1094:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK) // WAKE line low
 3841              		.loc 4 1094 6
 3842 00d6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3843 00da 002B     		cmp	r3, #0
 3844 00dc 03D1     		bne	.L272
1095:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1096:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1097:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1098:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     LL_GPIO_ResetOutputPin(GD_WAKE_GPIO_Port, GD_WAKE_Pin);
 3845              		.loc 4 1098 5
 3846 00de 8021     		movs	r1, #128
 3847 00e0 3A48     		ldr	r0, .L284+8
 3848 00e2 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 3849              	.L272:
1099:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     HAL_GPIO_WritePin(GD_WAKE_GPIO_Port, GD_WAKE_Pin, GPIO_PIN_RESET);
1103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #ifdef STSPIN32G4_HSI16
1108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3850              		.loc 4 1109 6
 3851 00e6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3852 00ea 002B     		cmp	r3, #0
 3853 00ec 07D1     		bne	.L273
1110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
ARM GAS  /tmp/ccIRHRej.s 			page 147


1111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (enableStbyReg)
 3854              		.loc 4 1111 8
 3855 00ee FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3856 00f0 002B     		cmp	r3, #0
 3857 00f2 04D0     		beq	.L273
1112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       // Set HSI16 clock to reduce current consumption
1114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = (STSPIN32G4_StatusTypeDef) LL_RCC_DeInit();
 3858              		.loc 4 1116 43
 3859 00f4 FFF7FEFF 		bl	LL_RCC_DeInit
 3860 00f8 0346     		mov	r3, r0
 3861 00fa 87F82730 		strb	r3, [r7, #39]
 3862              	.L273:
1117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = (STSPIN32G4_StatusTypeDef) HAL_RCC_DeInit();
1121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   // request to enter standby
1129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 3863              		.loc 4 1129 6
 3864 00fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3865 0102 002B     		cmp	r3, #0
 3866 0104 0AD1     		bne	.L274
1130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     i2cReg = 0x01;
 3867              		.loc 4 1131 12
 3868 0106 0123     		movs	r3, #1
 3869 0108 FB76     		strb	r3, [r7, #27]
1132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_STBY, i2cReg);
 3870              		.loc 4 1132 14
 3871 010a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3872 010c 1A46     		mov	r2, r3
 3873 010e 0A21     		movs	r1, #10
 3874 0110 7868     		ldr	r0, [r7, #4]
 3875 0112 FFF7FEFF 		bl	STSPIN32G4_writeReg
 3876 0116 0346     		mov	r3, r0
 3877 0118 87F82730 		strb	r3, [r7, #39]
 3878              	.L274:
1133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   ticks = (1 * tickFreq) / 1000 + 1;
 3879              		.loc 4 1135 26
 3880 011c 3B6A     		ldr	r3, [r7, #32]
 3881 011e 2C4A     		ldr	r2, .L284+12
 3882 0120 A2FB0323 		umull	r2, r3, r2, r3
 3883 0124 9B09     		lsrs	r3, r3, #6
 3884              		.loc 4 1135 9
 3885 0126 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccIRHRej.s 			page 148


 3886 0128 FB61     		str	r3, [r7, #28]
1136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (LL_GPIO_IsInputPinSet(GD_READY_GPIO_Port, GD_READY_Pin))
 3887              		.loc 4 1139 7
 3888 012a 4FF48041 		mov	r1, #16384
 3889 012e 2748     		ldr	r0, .L284+8
 3890 0130 FFF7FEFF 		bl	LL_GPIO_IsInputPinSet
 3891 0134 0346     		mov	r3, r0
 3892              		.loc 4 1139 6
 3893 0136 002B     		cmp	r3, #0
 3894 0138 07D0     		beq	.L275
1140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1141:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     LL_GPIO_SetOutputPin(GD_WAKE_GPIO_Port, GD_WAKE_Pin);
 3895              		.loc 4 1141 5
 3896 013a 8021     		movs	r1, #128
 3897 013c 2348     		ldr	r0, .L284+8
 3898 013e FFF7FEFF 		bl	LL_GPIO_SetOutputPin
1142:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status =  STSPIN32G4_ERROR;
 3899              		.loc 4 1142 12
 3900 0142 0123     		movs	r3, #1
 3901 0144 87F82730 		strb	r3, [r7, #39]
 3902 0148 19E0     		b	.L276
 3903              	.L275:
1143:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1144:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
1145:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1146:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     LL_SYSTICK_IsActiveCounterFlag();
 3904              		.loc 4 1146 5
 3905 014a FFF7FEFF 		bl	LL_SYSTICK_IsActiveCounterFlag
1147:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     while (!LL_GPIO_IsInputPinSet(GD_READY_GPIO_Port, GD_READY_Pin))
 3906              		.loc 4 1148 11
 3907 014e 0EE0     		b	.L277
 3908              	.L279:
1149:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1150:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         if (LL_SYSTICK_IsActiveCounterFlag())
 3909              		.loc 4 1150 13
 3910 0150 FFF7FEFF 		bl	LL_SYSTICK_IsActiveCounterFlag
 3911 0154 0346     		mov	r3, r0
 3912              		.loc 4 1150 12
 3913 0156 002B     		cmp	r3, #0
 3914 0158 02D0     		beq	.L278
1151:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         {
1152:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           ticks--;
 3915              		.loc 4 1152 16
 3916 015a FB69     		ldr	r3, [r7, #28]
 3917 015c 013B     		subs	r3, r3, #1
 3918 015e FB61     		str	r3, [r7, #28]
 3919              	.L278:
1153:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         }
1154:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1155:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         if (ticks == 0)
 3920              		.loc 4 1155 12
 3921 0160 FB69     		ldr	r3, [r7, #28]
 3922 0162 002B     		cmp	r3, #0
ARM GAS  /tmp/ccIRHRej.s 			page 149


 3923 0164 03D1     		bne	.L277
1156:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         {
1157:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           status = STSPIN32G4_TIMEOUT;
 3924              		.loc 4 1157 18
 3925 0166 0323     		movs	r3, #3
 3926 0168 87F82730 		strb	r3, [r7, #39]
1158:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****           break;
 3927              		.loc 4 1158 11
 3928 016c 07E0     		b	.L276
 3929              	.L277:
1148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 3930              		.loc 4 1148 13
 3931 016e 4FF48041 		mov	r1, #16384
 3932 0172 1648     		ldr	r0, .L284+8
 3933 0174 FFF7FEFF 		bl	LL_GPIO_IsInputPinSet
 3934 0178 0346     		mov	r3, r0
1148:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
 3935              		.loc 4 1148 11
 3936 017a 002B     		cmp	r3, #0
 3937 017c E8D0     		beq	.L279
 3938              	.L276:
1159:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         }
1160:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1161:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1162:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1163:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1164:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1165:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (HAL_GPIO_ReadPin(GD_READY_GPIO_Port, GD_READY_Pin) == GPIO_PIN_SET)
1166:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1167:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     HAL_GPIO_WritePin(GD_WAKE_GPIO_Port, GD_WAKE_Pin, GPIO_PIN_SET);
1168:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status =  STSPIN32G4_ERROR;
1169:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1170:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   else
1171:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1172:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     tickStart = HAL_GetTick();
1173:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     while (HAL_GPIO_ReadPin(GD_READY_GPIO_Port, GD_READY_Pin) == GPIO_PIN_RESET)
1174:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1175:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       if ((HAL_GetTick() - tickStart) > ticks) // expected time is 100us
1176:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       {
1177:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         status = STSPIN32G4_TIMEOUT;
1178:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
1179:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       }
1180:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1181:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1182:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1183:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1184:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1185:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   // wait 1ms and check possible exit from standby
1186:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1187:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1188:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_mDelay(ticks);
 3939              		.loc 4 1188 3
 3940 017e F869     		ldr	r0, [r7, #28]
 3941 0180 FFF7FEFF 		bl	LL_mDelay
1189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (!LL_GPIO_IsInputPinSet(GD_READY_GPIO_Port, GD_READY_Pin) ||
 3942              		.loc 4 1189 8
 3943 0184 4FF48041 		mov	r1, #16384
ARM GAS  /tmp/ccIRHRej.s 			page 150


 3944 0188 1048     		ldr	r0, .L284+8
 3945 018a FFF7FEFF 		bl	LL_GPIO_IsInputPinSet
 3946 018e 0346     		mov	r3, r0
 3947              		.loc 4 1189 6
 3948 0190 002B     		cmp	r3, #0
 3949 0192 07D0     		beq	.L280
1190:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****        !LL_GPIO_IsInputPinSet(GD_NFAULT_GPIO_Port, GD_NFAULT_Pin))
 3950              		.loc 4 1190 9 discriminator 1
 3951 0194 4FF40041 		mov	r1, #32768
 3952 0198 0C48     		ldr	r0, .L284+8
 3953 019a FFF7FEFF 		bl	LL_GPIO_IsInputPinSet
 3954 019e 0346     		mov	r3, r0
1189:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (!LL_GPIO_IsInputPinSet(GD_READY_GPIO_Port, GD_READY_Pin) ||
 3955              		.loc 4 1189 64 discriminator 1
 3956 01a0 002B     		cmp	r3, #0
 3957 01a2 02D1     		bne	.L281
 3958              	.L280:
1191:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1192:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_ERROR;
 3959              		.loc 4 1192 12
 3960 01a4 0123     		movs	r3, #1
 3961 01a6 87F82730 		strb	r3, [r7, #39]
 3962              	.L281:
1193:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1194:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1195:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1196:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1197:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   HAL_Delay(ticks);
1198:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if ((HAL_GPIO_ReadPin(GD_READY_GPIO_Port, GD_READY_Pin) != GPIO_PIN_SET) ||
1199:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       (HAL_GPIO_ReadPin(GD_NFAULT_GPIO_Port, GD_NFAULT_Pin) != GPIO_PIN_SET))
1200:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1201:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_ERROR;
1202:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1203:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1204:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1205:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1206:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #ifdef STSPIN32G4_HSI16
1207:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1208:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   // if the driver failed to enter standby clock is reconfigured
1209:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status != STSPIN32G4_OK)
 3963              		.loc 4 1209 6
 3964 01aa 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3965 01ae 002B     		cmp	r3, #0
 3966 01b0 01D0     		beq	.L282
1210:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1211:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     SystemClock_Config();  // restore clock configuration
 3967              		.loc 4 1211 5
 3968 01b2 FFF7FEFF 		bl	SystemClock_Config
 3969              	.L282:
1212:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1213:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1214:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1215:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1216:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 3970              		.loc 4 1216 10
 3971 01b6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3972              	.L283:
ARM GAS  /tmp/ccIRHRej.s 			page 151


1217:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 3973              		.loc 4 1217 1 discriminator 1
 3974 01ba 1846     		mov	r0, r3
 3975 01bc 2837     		adds	r7, r7, #40
 3976              	.LCFI196:
 3977              		.cfi_def_cfa_offset 8
 3978 01be BD46     		mov	sp, r7
 3979              	.LCFI197:
 3980              		.cfi_def_cfa_register 13
 3981              		@ sp needed
 3982 01c0 80BD     		pop	{r7, pc}
 3983              	.L285:
 3984 01c2 00BF     		.align	2
 3985              	.L284:
 3986 01c4 10E000E0 		.word	-536813552
 3987 01c8 00000000 		.word	STSPIN32G4_bkupREADY
 3988 01cc 00100048 		.word	1207963648
 3989 01d0 D34D6210 		.word	274877907
 3990              		.cfi_endproc
 3991              	.LFE523:
 3993              		.section	.text.STSPIN32G4_wakeup,"ax",%progbits
 3994              		.align	1
 3995              		.global	STSPIN32G4_wakeup
 3996              		.syntax unified
 3997              		.thumb
 3998              		.thumb_func
 3999              		.fpu fpv4-sp-d16
 4001              	STSPIN32G4_wakeup:
 4002              	.LFB524:
1218:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1219:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_wakeup(STSPIN32G4_HandleTypeDef *hdl, uint8_t timeout_ms)
1220:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 4003              		.loc 4 1220 1
 4004              		.cfi_startproc
 4005              		@ args = 0, pretend = 0, frame = 40
 4006              		@ frame_needed = 1, uses_anonymous_args = 0
 4007 0000 80B5     		push	{r7, lr}
 4008              	.LCFI198:
 4009              		.cfi_def_cfa_offset 8
 4010              		.cfi_offset 7, -8
 4011              		.cfi_offset 14, -4
 4012 0002 8AB0     		sub	sp, sp, #40
 4013              	.LCFI199:
 4014              		.cfi_def_cfa_offset 48
 4015 0004 00AF     		add	r7, sp, #0
 4016              	.LCFI200:
 4017              		.cfi_def_cfa_register 7
 4018 0006 7860     		str	r0, [r7, #4]
 4019 0008 0B46     		mov	r3, r1
 4020 000a FB70     		strb	r3, [r7, #3]
1221:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_StatusTypeDef status;
1222:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   STSPIN32G4_statusRegTypeDef statReg;
1223:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t tickFreq;
1224:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t ticks;
1225:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1226:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1227:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
ARM GAS  /tmp/ccIRHRej.s 			page 152


1228:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
1229:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 4021              		.loc 4 1229 3
 4022 000c 07F10803 		add	r3, r7, #8
 4023 0010 1846     		mov	r0, r3
 4024 0012 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
1230:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1231:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   tickFreq = RCC_Clocks.HCLK_Frequency /  (SysTick->LOAD + 1);
 4025              		.loc 4 1231 24
 4026 0016 FA68     		ldr	r2, [r7, #12]
 4027              		.loc 4 1231 51
 4028 0018 3E4B     		ldr	r3, .L301
 4029 001a 5B68     		ldr	r3, [r3, #4]
 4030              		.loc 4 1231 58
 4031 001c 0133     		adds	r3, r3, #1
 4032              		.loc 4 1231 12
 4033 001e B2FBF3F3 		udiv	r3, r2, r3
 4034 0022 3B62     		str	r3, [r7, #32]
1232:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1233:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (LL_SYSTICK_GetClkSource() == LL_SYSTICK_CLKSOURCE_HCLK_DIV8)
 4035              		.loc 4 1233 7
 4036 0024 FFF7FEFF 		bl	LL_SYSTICK_GetClkSource
 4037 0028 0346     		mov	r3, r0
 4038              		.loc 4 1233 6
 4039 002a 002B     		cmp	r3, #0
 4040 002c 02D1     		bne	.L287
1234:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1235:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     tickFreq /= 8;
 4041              		.loc 4 1235 14
 4042 002e 3B6A     		ldr	r3, [r7, #32]
 4043 0030 DB08     		lsrs	r3, r3, #3
 4044 0032 3B62     		str	r3, [r7, #32]
 4045              	.L287:
1236:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1237:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1238:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1239:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1240:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   uint32_t tickStart;
1241:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   tickFreq = HAL_GetTickFreq() / 1000; // in kHz to have ms base
1242:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1243:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1244:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1245:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1246:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 4046              		.loc 4 1246 6
 4047 0034 7B68     		ldr	r3, [r7, #4]
 4048 0036 002B     		cmp	r3, #0
 4049 0038 01D1     		bne	.L288
1247:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1248:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 4050              		.loc 4 1248 12
 4051 003a 0123     		movs	r3, #1
 4052 003c 66E0     		b	.L300
 4053              	.L288:
1249:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1250:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1251:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /tmp/ccIRHRej.s 			page 153


1252:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1253:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_GPIO_SetOutputPin(GD_WAKE_GPIO_Port, GD_WAKE_Pin);
 4054              		.loc 4 1253 3
 4055 003e 8021     		movs	r1, #128
 4056 0040 3548     		ldr	r0, .L301+4
 4057 0042 FFF7FEFF 		bl	LL_GPIO_SetOutputPin
1254:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1255:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1256:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1257:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   HAL_GPIO_WritePin(GD_WAKE_GPIO_Port, GD_WAKE_Pin, GPIO_PIN_SET);
1258:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1259:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1260:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1261:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (timeout_ms < 4)
 4058              		.loc 4 1261 6
 4059 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4060 0048 032B     		cmp	r3, #3
 4061 004a 01D8     		bhi	.L290
1262:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1263:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     timeout_ms = 4;  // The soft start is expected to take 4ms
 4062              		.loc 4 1263 16
 4063 004c 0423     		movs	r3, #4
 4064 004e FB70     		strb	r3, [r7, #3]
 4065              	.L290:
1264:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1265:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1266:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   ticks = (timeout_ms * tickFreq) / 1000 + 1;
 4066              		.loc 4 1266 23
 4067 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4068 0052 3A6A     		ldr	r2, [r7, #32]
 4069 0054 02FB03F3 		mul	r3, r2, r3
 4070              		.loc 4 1266 35
 4071 0058 304A     		ldr	r2, .L301+8
 4072 005a A2FB0323 		umull	r2, r3, r2, r3
 4073 005e 9B09     		lsrs	r3, r3, #6
 4074              		.loc 4 1266 9
 4075 0060 0133     		adds	r3, r3, #1
 4076 0062 FB61     		str	r3, [r7, #28]
1267:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1268:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #if defined(USE_FULL_LL_DRIVER)
1269:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1270:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   LL_SYSTICK_IsActiveCounterFlag();
 4077              		.loc 4 1270 3
 4078 0064 FFF7FEFF 		bl	LL_SYSTICK_IsActiveCounterFlag
1271:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   while (!LL_GPIO_IsInputPinSet(GD_READY_GPIO_Port, GD_READY_Pin))
 4079              		.loc 4 1272 9
 4080 0068 0EE0     		b	.L291
 4081              	.L294:
1273:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1274:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       if (LL_SYSTICK_IsActiveCounterFlag())
 4082              		.loc 4 1274 11
 4083 006a FFF7FEFF 		bl	LL_SYSTICK_IsActiveCounterFlag
 4084 006e 0346     		mov	r3, r0
 4085              		.loc 4 1274 10
 4086 0070 002B     		cmp	r3, #0
 4087 0072 02D0     		beq	.L292
ARM GAS  /tmp/ccIRHRej.s 			page 154


1275:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       {
1276:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         ticks--;
 4088              		.loc 4 1276 14
 4089 0074 FB69     		ldr	r3, [r7, #28]
 4090 0076 013B     		subs	r3, r3, #1
 4091 0078 FB61     		str	r3, [r7, #28]
 4092              	.L292:
1277:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       }
1278:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1279:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       if (ticks == 0)
 4093              		.loc 4 1279 10
 4094 007a FB69     		ldr	r3, [r7, #28]
 4095 007c 002B     		cmp	r3, #0
 4096 007e 03D1     		bne	.L291
1280:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       {
1281:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         status = STSPIN32G4_TIMEOUT;
 4097              		.loc 4 1281 16
 4098 0080 0323     		movs	r3, #3
 4099 0082 87F82730 		strb	r3, [r7, #39]
1282:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****         break;
 4100              		.loc 4 1282 9
 4101 0086 07E0     		b	.L293
 4102              	.L291:
1272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 4103              		.loc 4 1272 11
 4104 0088 4FF48041 		mov	r1, #16384
 4105 008c 2248     		ldr	r0, .L301+4
 4106 008e FFF7FEFF 		bl	LL_GPIO_IsInputPinSet
 4107 0092 0346     		mov	r3, r0
1272:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
 4108              		.loc 4 1272 9
 4109 0094 002B     		cmp	r3, #0
 4110 0096 E8D0     		beq	.L294
 4111              	.L293:
1283:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       }
1284:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1285:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1286:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #else
1287:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1288:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   tickStart = HAL_GetTick();
1289:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1290:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   while (HAL_GPIO_ReadPin(GD_READY_GPIO_Port, GD_READY_Pin) == GPIO_PIN_RESET)
1291:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1292:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if ((HAL_GetTick() - tickStart) > ticks)
1293:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1294:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_TIMEOUT;
1295:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       break;
1296:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1297:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1298:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1299:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1300:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1301:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #ifdef STSPIN32G4_HSI16
1302:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1303:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 4112              		.loc 4 1303 6
 4113 0098 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
ARM GAS  /tmp/ccIRHRej.s 			page 155


 4114 009c 002B     		cmp	r3, #0
 4115 009e 01D1     		bne	.L295
1304:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1305:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     SystemClock_Config();
 4116              		.loc 4 1305 5
 4117 00a0 FFF7FEFF 		bl	SystemClock_Config
 4118              	.L295:
1306:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1307:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1308:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** #endif
1309:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1310:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   // Restore READY register
1311:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 4119              		.loc 4 1311 6
 4120 00a4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4121 00a8 002B     		cmp	r3, #0
 4122 00aa 09D1     		bne	.L296
1312:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1313:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_writeReg(hdl, STSPIN32G4_I2C_READY, STSPIN32G4_bkupREADY);
 4123              		.loc 4 1313 14
 4124 00ac 1C4B     		ldr	r3, .L301+12
 4125 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 00b0 1A46     		mov	r2, r3
 4127 00b2 0721     		movs	r1, #7
 4128 00b4 7868     		ldr	r0, [r7, #4]
 4129 00b6 FFF7FEFF 		bl	STSPIN32G4_writeReg
 4130 00ba 0346     		mov	r3, r0
 4131 00bc 87F82730 		strb	r3, [r7, #39]
 4132              	.L296:
1314:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1315:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1316:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 4133              		.loc 4 1316 6
 4134 00c0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4135 00c4 002B     		cmp	r3, #0
 4136 00c6 05D1     		bne	.L297
1317:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1318:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_lockReg(hdl);
 4137              		.loc 4 1318 14
 4138 00c8 7868     		ldr	r0, [r7, #4]
 4139 00ca FFF7FEFF 		bl	STSPIN32G4_lockReg
 4140 00ce 0346     		mov	r3, r0
 4141 00d0 87F82730 		strb	r3, [r7, #39]
 4142              	.L297:
1319:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1320:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1321:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 4143              		.loc 4 1321 6
 4144 00d4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4145 00d8 002B     		cmp	r3, #0
 4146 00da 08D1     		bne	.L298
1322:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1323:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     status = STSPIN32G4_getStatus(hdl, &statReg);
 4147              		.loc 4 1323 14
 4148 00dc 07F11803 		add	r3, r7, #24
 4149 00e0 1946     		mov	r1, r3
 4150 00e2 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccIRHRej.s 			page 156


 4151 00e4 FFF7FEFF 		bl	STSPIN32G4_getStatus
 4152 00e8 0346     		mov	r3, r0
 4153 00ea 87F82730 		strb	r3, [r7, #39]
 4154              	.L298:
1324:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1325:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1326:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == STSPIN32G4_OK)
 4155              		.loc 4 1326 6
 4156 00ee 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4157 00f2 002B     		cmp	r3, #0
 4158 00f4 08D1     		bne	.L299
1327:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1328:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     if (statReg.reset == 1)
 4159              		.loc 4 1328 23
 4160 00f6 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 4161 00f8 03F00803 		and	r3, r3, #8
 4162 00fc DBB2     		uxtb	r3, r3
 4163              		.loc 4 1328 8
 4164 00fe 002B     		cmp	r3, #0
 4165 0100 02D0     		beq	.L299
1329:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     {
1330:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****       status = STSPIN32G4_ERROR;
 4166              		.loc 4 1330 14
 4167 0102 0123     		movs	r3, #1
 4168 0104 87F82730 		strb	r3, [r7, #39]
 4169              	.L299:
1331:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     }
1332:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1333:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1334:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return status;
 4170              		.loc 4 1334 10
 4171 0108 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4172              	.L300:
1335:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 4173              		.loc 4 1335 1 discriminator 1
 4174 010c 1846     		mov	r0, r3
 4175 010e 2837     		adds	r7, r7, #40
 4176              	.LCFI201:
 4177              		.cfi_def_cfa_offset 8
 4178 0110 BD46     		mov	sp, r7
 4179              	.LCFI202:
 4180              		.cfi_def_cfa_register 13
 4181              		@ sp needed
 4182 0112 80BD     		pop	{r7, pc}
 4183              	.L302:
 4184              		.align	2
 4185              	.L301:
 4186 0114 10E000E0 		.word	-536813552
 4187 0118 00100048 		.word	1207963648
 4188 011c D34D6210 		.word	274877907
 4189 0120 00000000 		.word	STSPIN32G4_bkupREADY
 4190              		.cfi_endproc
 4191              	.LFE524:
 4193              		.section	.text.STSPIN32G4_getStatus,"ax",%progbits
 4194              		.align	1
 4195              		.global	STSPIN32G4_getStatus
 4196              		.syntax unified
ARM GAS  /tmp/ccIRHRej.s 			page 157


 4197              		.thumb
 4198              		.thumb_func
 4199              		.fpu fpv4-sp-d16
 4201              	STSPIN32G4_getStatus:
 4202              	.LFB525:
1336:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1337:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** STSPIN32G4_StatusTypeDef STSPIN32G4_getStatus(STSPIN32G4_HandleTypeDef *hdl, STSPIN32G4_statusRegTy
1338:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** {
 4203              		.loc 4 1338 1
 4204              		.cfi_startproc
 4205              		@ args = 0, pretend = 0, frame = 8
 4206              		@ frame_needed = 1, uses_anonymous_args = 0
 4207 0000 80B5     		push	{r7, lr}
 4208              	.LCFI203:
 4209              		.cfi_def_cfa_offset 8
 4210              		.cfi_offset 7, -8
 4211              		.cfi_offset 14, -4
 4212 0002 82B0     		sub	sp, sp, #8
 4213              	.LCFI204:
 4214              		.cfi_def_cfa_offset 16
 4215 0004 00AF     		add	r7, sp, #0
 4216              	.LCFI205:
 4217              		.cfi_def_cfa_register 7
 4218 0006 7860     		str	r0, [r7, #4]
 4219 0008 3960     		str	r1, [r7]
1339:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (hdl == NULL)
 4220              		.loc 4 1339 6
 4221 000a 7B68     		ldr	r3, [r7, #4]
 4222 000c 002B     		cmp	r3, #0
 4223 000e 01D1     		bne	.L304
1340:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1341:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 4224              		.loc 4 1341 12
 4225 0010 0123     		movs	r3, #1
 4226 0012 0AE0     		b	.L305
 4227              	.L304:
1342:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1343:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1344:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   if (status == NULL)
 4228              		.loc 4 1344 6
 4229 0014 3B68     		ldr	r3, [r7]
 4230 0016 002B     		cmp	r3, #0
 4231 0018 01D1     		bne	.L306
1345:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   {
1346:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****     return STSPIN32G4_ERROR;
 4232              		.loc 4 1346 12
 4233 001a 0123     		movs	r3, #1
 4234 001c 05E0     		b	.L305
 4235              	.L306:
1347:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   }
1348:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** 
1349:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c ****   return STSPIN32G4_readReg(hdl, STSPIN32G4_I2C_STATUS, (uint8_t *)status);
 4236              		.loc 4 1349 10
 4237 001e 3A68     		ldr	r2, [r7]
 4238 0020 8021     		movs	r1, #128
 4239 0022 7868     		ldr	r0, [r7, #4]
 4240 0024 FFF7FEFF 		bl	STSPIN32G4_readReg
ARM GAS  /tmp/ccIRHRej.s 			page 158


 4241 0028 0346     		mov	r3, r0
 4242              	.L305:
1350:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Src/stspin32g4.c **** }
 4243              		.loc 4 1350 1
 4244 002a 1846     		mov	r0, r3
 4245 002c 0837     		adds	r7, r7, #8
 4246              	.LCFI206:
 4247              		.cfi_def_cfa_offset 8
 4248 002e BD46     		mov	sp, r7
 4249              	.LCFI207:
 4250              		.cfi_def_cfa_register 13
 4251              		@ sp needed
 4252 0030 80BD     		pop	{r7, pc}
 4253              		.cfi_endproc
 4254              	.LFE525:
 4256              		.text
 4257              	.Letext0:
 4258              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 4259              		.file 6 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 4260              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 4261              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 4262              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h"
 4263              		.file 10 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/stspin32g4.h"
ARM GAS  /tmp/ccIRHRej.s 			page 159


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stspin32g4.c
     /tmp/ccIRHRej.s:18     .text.LL_I2C_IsActiveFlag_TXIS:0000000000000000 $t
     /tmp/ccIRHRej.s:25     .text.LL_I2C_IsActiveFlag_TXIS:0000000000000000 LL_I2C_IsActiveFlag_TXIS
     /tmp/ccIRHRej.s:76     .text.LL_I2C_IsActiveFlag_RXNE:0000000000000000 $t
     /tmp/ccIRHRej.s:82     .text.LL_I2C_IsActiveFlag_RXNE:0000000000000000 LL_I2C_IsActiveFlag_RXNE
     /tmp/ccIRHRej.s:132    .text.LL_I2C_IsActiveFlag_STOP:0000000000000000 $t
     /tmp/ccIRHRej.s:138    .text.LL_I2C_IsActiveFlag_STOP:0000000000000000 LL_I2C_IsActiveFlag_STOP
     /tmp/ccIRHRej.s:188    .text.LL_I2C_IsActiveFlag_TC:0000000000000000 $t
     /tmp/ccIRHRej.s:194    .text.LL_I2C_IsActiveFlag_TC:0000000000000000 LL_I2C_IsActiveFlag_TC
     /tmp/ccIRHRej.s:244    .text.LL_I2C_IsActiveFlag_TCR:0000000000000000 $t
     /tmp/ccIRHRej.s:250    .text.LL_I2C_IsActiveFlag_TCR:0000000000000000 LL_I2C_IsActiveFlag_TCR
     /tmp/ccIRHRej.s:300    .text.LL_I2C_IsActiveFlag_BUSY:0000000000000000 $t
     /tmp/ccIRHRej.s:306    .text.LL_I2C_IsActiveFlag_BUSY:0000000000000000 LL_I2C_IsActiveFlag_BUSY
     /tmp/ccIRHRej.s:356    .text.LL_I2C_ClearFlag_STOP:0000000000000000 $t
     /tmp/ccIRHRej.s:362    .text.LL_I2C_ClearFlag_STOP:0000000000000000 LL_I2C_ClearFlag_STOP
     /tmp/ccIRHRej.s:404    .text.LL_I2C_HandleTransfer:0000000000000000 $t
     /tmp/ccIRHRej.s:410    .text.LL_I2C_HandleTransfer:0000000000000000 LL_I2C_HandleTransfer
     /tmp/ccIRHRej.s:486    .text.LL_I2C_HandleTransfer:000000000000005c $d
     /tmp/ccIRHRej.s:491    .text.LL_I2C_ReceiveData8:0000000000000000 $t
     /tmp/ccIRHRej.s:497    .text.LL_I2C_ReceiveData8:0000000000000000 LL_I2C_ReceiveData8
     /tmp/ccIRHRej.s:538    .text.LL_I2C_TransmitData8:0000000000000000 $t
     /tmp/ccIRHRej.s:544    .text.LL_I2C_TransmitData8:0000000000000000 LL_I2C_TransmitData8
     /tmp/ccIRHRej.s:586    .text.LL_GPIO_IsInputPinSet:0000000000000000 $t
     /tmp/ccIRHRej.s:592    .text.LL_GPIO_IsInputPinSet:0000000000000000 LL_GPIO_IsInputPinSet
     /tmp/ccIRHRej.s:646    .text.LL_GPIO_SetOutputPin:0000000000000000 $t
     /tmp/ccIRHRej.s:652    .text.LL_GPIO_SetOutputPin:0000000000000000 LL_GPIO_SetOutputPin
     /tmp/ccIRHRej.s:693    .text.LL_GPIO_ResetOutputPin:0000000000000000 $t
     /tmp/ccIRHRej.s:699    .text.LL_GPIO_ResetOutputPin:0000000000000000 LL_GPIO_ResetOutputPin
     /tmp/ccIRHRej.s:740    .text.LL_SYSTICK_IsActiveCounterFlag:0000000000000000 $t
     /tmp/ccIRHRej.s:746    .text.LL_SYSTICK_IsActiveCounterFlag:0000000000000000 LL_SYSTICK_IsActiveCounterFlag
     /tmp/ccIRHRej.s:790    .text.LL_SYSTICK_IsActiveCounterFlag:0000000000000024 $d
     /tmp/ccIRHRej.s:795    .text.LL_SYSTICK_GetClkSource:0000000000000000 $t
     /tmp/ccIRHRej.s:801    .text.LL_SYSTICK_GetClkSource:0000000000000000 LL_SYSTICK_GetClkSource
     /tmp/ccIRHRej.s:833    .text.LL_SYSTICK_GetClkSource:0000000000000018 $d
     /tmp/ccIRHRej.s:840    .bss.STSPIN32G4_bkupREADY:0000000000000000 STSPIN32G4_bkupREADY
     /tmp/ccIRHRej.s:841    .bss.STSPIN32G4_bkupREADY:0000000000000000 $d
     /tmp/ccIRHRej.s:843    .text.STSPIN32G4_init:0000000000000000 $t
     /tmp/ccIRHRej.s:850    .text.STSPIN32G4_init:0000000000000000 STSPIN32G4_init
     /tmp/ccIRHRej.s:912    .text.STSPIN32G4_init:0000000000000034 $d
     /tmp/ccIRHRej.s:917    .text.STSPIN32G4_deInit:0000000000000000 $t
     /tmp/ccIRHRej.s:924    .text.STSPIN32G4_deInit:0000000000000000 STSPIN32G4_deInit
     /tmp/ccIRHRej.s:969    .text.STSPIN32G4_lockReg:0000000000000000 $t
     /tmp/ccIRHRej.s:976    .text.STSPIN32G4_lockReg:0000000000000000 STSPIN32G4_lockReg
     /tmp/ccIRHRej.s:1494   .text.STSPIN32G4_writeReg:0000000000000000 STSPIN32G4_writeReg
     /tmp/ccIRHRej.s:4201   .text.STSPIN32G4_getStatus:0000000000000000 STSPIN32G4_getStatus
     /tmp/ccIRHRej.s:1060   .text.STSPIN32G4_unlockReg:0000000000000000 $t
     /tmp/ccIRHRej.s:1067   .text.STSPIN32G4_unlockReg:0000000000000000 STSPIN32G4_unlockReg
     /tmp/ccIRHRej.s:1151   .text.STSPIN32G4_readReg:0000000000000000 $t
     /tmp/ccIRHRej.s:1158   .text.STSPIN32G4_readReg:0000000000000000 STSPIN32G4_readReg
     /tmp/ccIRHRej.s:1265   .text.STSPIN32G4_readReg:00000000000000a0 $d
     /tmp/ccIRHRej.s:1275   .text.STSPIN32G4_readReg:00000000000000c8 $t
     /tmp/ccIRHRej.s:1479   .text.STSPIN32G4_readReg:0000000000000220 $d
     /tmp/ccIRHRej.s:1487   .text.STSPIN32G4_writeReg:0000000000000000 $t
     /tmp/ccIRHRej.s:1591   .text.STSPIN32G4_writeReg:0000000000000084 $d
     /tmp/ccIRHRej.s:1601   .text.STSPIN32G4_writeReg:00000000000000ac $t
     /tmp/ccIRHRej.s:1801   .text.STSPIN32G4_writeReg:00000000000001f4 $d
ARM GAS  /tmp/ccIRHRej.s 			page 160


     /tmp/ccIRHRej.s:1808   .text.STSPIN32G4_writeVerifyReg:0000000000000000 $t
     /tmp/ccIRHRej.s:1815   .text.STSPIN32G4_writeVerifyReg:0000000000000000 STSPIN32G4_writeVerifyReg
     /tmp/ccIRHRej.s:1891   .text.STSPIN32G4_set3V3:0000000000000000 $t
     /tmp/ccIRHRej.s:1898   .text.STSPIN32G4_set3V3:0000000000000000 STSPIN32G4_set3V3
     /tmp/ccIRHRej.s:2007   .text.STSPIN32G4_get3V3:0000000000000000 $t
     /tmp/ccIRHRej.s:2014   .text.STSPIN32G4_get3V3:0000000000000000 STSPIN32G4_get3V3
     /tmp/ccIRHRej.s:2089   .text.STSPIN32G4_setVCC:0000000000000000 $t
     /tmp/ccIRHRej.s:2096   .text.STSPIN32G4_setVCC:0000000000000000 STSPIN32G4_setVCC
     /tmp/ccIRHRej.s:2156   .text.STSPIN32G4_setVCC:000000000000004c $d
     /tmp/ccIRHRej.s:2161   .text.STSPIN32G4_setVCC:0000000000000060 $t
     /tmp/ccIRHRej.s:2361   .text.STSPIN32G4_getVCC:0000000000000000 $t
     /tmp/ccIRHRej.s:2368   .text.STSPIN32G4_getVCC:0000000000000000 STSPIN32G4_getVCC
     /tmp/ccIRHRej.s:2439   .text.STSPIN32G4_getVCC:000000000000005c $d
     /tmp/ccIRHRej.s:2443   .text.STSPIN32G4_getVCC:000000000000006c $t
     /tmp/ccIRHRej.s:2547   .text.STSPIN32G4_setInterlocking:0000000000000000 $t
     /tmp/ccIRHRej.s:2554   .text.STSPIN32G4_setInterlocking:0000000000000000 STSPIN32G4_setInterlocking
     /tmp/ccIRHRej.s:2663   .text.STSPIN32G4_getInterlocking:0000000000000000 $t
     /tmp/ccIRHRej.s:2670   .text.STSPIN32G4_getInterlocking:0000000000000000 STSPIN32G4_getInterlocking
     /tmp/ccIRHRej.s:2744   .text.STSPIN32G4_setMinimumDeadTime:0000000000000000 $t
     /tmp/ccIRHRej.s:2751   .text.STSPIN32G4_setMinimumDeadTime:0000000000000000 STSPIN32G4_setMinimumDeadTime
     /tmp/ccIRHRej.s:2860   .text.STSPIN32G4_getMinimumDeadTime:0000000000000000 $t
     /tmp/ccIRHRej.s:2867   .text.STSPIN32G4_getMinimumDeadTime:0000000000000000 STSPIN32G4_getMinimumDeadTime
     /tmp/ccIRHRej.s:2942   .text.STSPIN32G4_setVDSP:0000000000000000 $t
     /tmp/ccIRHRej.s:2949   .text.STSPIN32G4_setVDSP:0000000000000000 STSPIN32G4_setVDSP
     /tmp/ccIRHRej.s:3014   .text.STSPIN32G4_setVDSP:0000000000000058 $d
     /tmp/ccIRHRej.s:3018   .text.STSPIN32G4_setVDSP:0000000000000068 $t
     /tmp/ccIRHRej.s:3146   .text.STSPIN32G4_getVDSP:0000000000000000 $t
     /tmp/ccIRHRej.s:3153   .text.STSPIN32G4_getVDSP:0000000000000000 STSPIN32G4_getVDSP
     /tmp/ccIRHRej.s:3212   .text.STSPIN32G4_getVDSP:000000000000004c $d
     /tmp/ccIRHRej.s:3225   .text.STSPIN32G4_getVDSP:0000000000000080 $t
     /tmp/ccIRHRej.s:3306   .text.STSPIN32G4_setTHSD:0000000000000000 $t
     /tmp/ccIRHRej.s:3313   .text.STSPIN32G4_setTHSD:0000000000000000 STSPIN32G4_setTHSD
     /tmp/ccIRHRej.s:3466   .text.STSPIN32G4_getTHSD:0000000000000000 $t
     /tmp/ccIRHRej.s:3473   .text.STSPIN32G4_getTHSD:0000000000000000 STSPIN32G4_getTHSD
     /tmp/ccIRHRej.s:3573   .text.STSPIN32G4_clearFaults:0000000000000000 $t
     /tmp/ccIRHRej.s:3580   .text.STSPIN32G4_clearFaults:0000000000000000 STSPIN32G4_clearFaults
     /tmp/ccIRHRej.s:3631   .text.STSPIN32G4_reset:0000000000000000 $t
     /tmp/ccIRHRej.s:3638   .text.STSPIN32G4_reset:0000000000000000 STSPIN32G4_reset
     /tmp/ccIRHRej.s:3702   .text.STSPIN32G4_standby:0000000000000000 $t
     /tmp/ccIRHRej.s:3709   .text.STSPIN32G4_standby:0000000000000000 STSPIN32G4_standby
     /tmp/ccIRHRej.s:3986   .text.STSPIN32G4_standby:00000000000001c4 $d
     /tmp/ccIRHRej.s:3994   .text.STSPIN32G4_wakeup:0000000000000000 $t
     /tmp/ccIRHRej.s:4001   .text.STSPIN32G4_wakeup:0000000000000000 STSPIN32G4_wakeup
     /tmp/ccIRHRej.s:4186   .text.STSPIN32G4_wakeup:0000000000000114 $d
     /tmp/ccIRHRej.s:4194   .text.STSPIN32G4_getStatus:0000000000000000 $t

UNDEFINED SYMBOLS
LL_RCC_GetSystemClocksFreq
LL_RCC_DeInit
LL_mDelay
SystemClock_Config
