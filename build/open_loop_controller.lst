ARM GAS  /tmp/ccCqaElO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"open_loop_controller.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata._ZL12one_by_sqrt3,"a"
  18              		.align	2
  21              	_ZL12one_by_sqrt3:
  22 0000 3ACD133F 		.word	1058262330
  23              		.section	.rodata._ZL12two_by_sqrt3,"a"
  24              		.align	2
  27              	_ZL12two_by_sqrt3:
  28 0000 3ACD933F 		.word	1066650938
  29              		.section	.rodata._ZL10sqrt3_by_2,"a"
  30              		.align	2
  33              	_ZL10sqrt3_by_2:
  34 0000 D7B35D3F 		.word	1063105495
  35              		.section	.text.fmodf_pos,"ax",%progbits
  36              		.align	1
  37              		.arch armv7e-m
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu fpv4-sp-d16
  43              	fmodf_pos:
  44              	.LFB1549:
  45              		.file 1 "Inc/utils.hpp"
   1:Inc/utils.hpp **** 
   2:Inc/utils.hpp **** #ifndef __UTILS_H
   3:Inc/utils.hpp **** #define __UTILS_H
   4:Inc/utils.hpp **** 
   5:Inc/utils.hpp **** #include <stdint.h>
   6:Inc/utils.hpp **** #include <math.h>
   7:Inc/utils.hpp **** 
   8:Inc/utils.hpp **** /**
   9:Inc/utils.hpp ****  * @brief Flash size register address
  10:Inc/utils.hpp ****  */
  11:Inc/utils.hpp **** #define ID_FLASH_ADDRESS (0x1FFF7A22)
  12:Inc/utils.hpp **** 
  13:Inc/utils.hpp **** /**
  14:Inc/utils.hpp ****  * @brief Device ID register address
  15:Inc/utils.hpp ****  */
  16:Inc/utils.hpp **** #define ID_DBGMCU_IDCODE (0xE0042000)
  17:Inc/utils.hpp **** 
  18:Inc/utils.hpp **** /**
  19:Inc/utils.hpp ****  * "Returns" the device signature
ARM GAS  /tmp/ccCqaElO.s 			page 2


  20:Inc/utils.hpp ****  *
  21:Inc/utils.hpp ****  * Possible returns:
  22:Inc/utils.hpp ****  *    - 0x0413: STM32F405xx/07xx and STM32F415xx/17xx)
  23:Inc/utils.hpp ****  *    - 0x0419: STM32F42xxx and STM32F43xxx
  24:Inc/utils.hpp ****  *    - 0x0423: STM32F401xB/C
  25:Inc/utils.hpp ****  *    - 0x0433: STM32F401xD/E
  26:Inc/utils.hpp ****  *    - 0x0431: STM32F411xC/E
  27:Inc/utils.hpp ****  *
  28:Inc/utils.hpp ****  * Returned data is in 16-bit mode, but only bits 11:0 are valid, bits 15:12 are always 0.
  29:Inc/utils.hpp ****  * Defined as macro
  30:Inc/utils.hpp ****  */
  31:Inc/utils.hpp **** #define STM_ID_GetSignature() ((*(uint16_t *)(ID_DBGMCU_IDCODE)) & 0x0FFF)
  32:Inc/utils.hpp **** 
  33:Inc/utils.hpp **** /**
  34:Inc/utils.hpp ****  * "Returns" the device revision
  35:Inc/utils.hpp ****  *
  36:Inc/utils.hpp ****  * Revisions possible:
  37:Inc/utils.hpp ****  *    - 0x1000: Revision A
  38:Inc/utils.hpp ****  *    - 0x1001: Revision Z
  39:Inc/utils.hpp ****  *    - 0x1003: Revision Y
  40:Inc/utils.hpp ****  *    - 0x1007: Revision 1
  41:Inc/utils.hpp ****  *    - 0x2001: Revision 3
  42:Inc/utils.hpp ****  *
  43:Inc/utils.hpp ****  * Returned data is in 16-bit mode.
  44:Inc/utils.hpp ****  */
  45:Inc/utils.hpp **** #define STM_ID_GetRevision() (*(uint16_t *)(ID_DBGMCU_IDCODE + 2))
  46:Inc/utils.hpp **** 
  47:Inc/utils.hpp **** /**
  48:Inc/utils.hpp **** * "Returns" the Flash size
  49:Inc/utils.hpp **** *
  50:Inc/utils.hpp **** * Returned data is in 16-bit mode, returned value is flash size in kB (kilo bytes).
  51:Inc/utils.hpp **** */
  52:Inc/utils.hpp **** #define STM_ID_GetFlashSize() (*(uint16_t *)(ID_FLASH_ADDRESS))
  53:Inc/utils.hpp **** 
  54:Inc/utils.hpp **** #ifdef M_PI
  55:Inc/utils.hpp **** #undef M_PI
  56:Inc/utils.hpp **** #endif
  57:Inc/utils.hpp **** #define M_PI (3.14159265358979323846f)
  58:Inc/utils.hpp **** 
  59:Inc/utils.hpp **** #define MACRO_MAX(x, y) (((x) > (y)) ? (x) : (y))
  60:Inc/utils.hpp **** #define MACRO_MIN(x, y) (((x) < (y)) ? (x) : (y))
  61:Inc/utils.hpp **** 
  62:Inc/utils.hpp **** #define SQ(x) ((x) * (x))
  63:Inc/utils.hpp **** 
  64:Inc/utils.hpp **** #ifdef __cplusplus
  65:Inc/utils.hpp **** 
  66:Inc/utils.hpp **** #include <array>
  67:Inc/utils.hpp **** 
  68:Inc/utils.hpp **** /**
  69:Inc/utils.hpp ****  * @brief Small helper to make array with known size
  70:Inc/utils.hpp ****  * in contrast to initializer lists the number of arguments
  71:Inc/utils.hpp ****  * has to match exactly. Whereas initializer lists allow
  72:Inc/utils.hpp ****  * less arguments.
  73:Inc/utils.hpp ****  */
  74:Inc/utils.hpp **** template<class T, class... Tail>
  75:Inc/utils.hpp **** std::array<T, 1 + sizeof...(Tail)> make_array(T head, Tail... tail)
  76:Inc/utils.hpp **** {
ARM GAS  /tmp/ccCqaElO.s 			page 3


  77:Inc/utils.hpp ****     return std::array<T, 1 + sizeof...(Tail)>({ head, tail ... });
  78:Inc/utils.hpp **** }
  79:Inc/utils.hpp **** 
  80:Inc/utils.hpp **** extern "C" {
  81:Inc/utils.hpp **** #endif
  82:Inc/utils.hpp **** 
  83:Inc/utils.hpp **** static const float one_by_sqrt3 = 0.57735026919f;
  84:Inc/utils.hpp **** static const float two_by_sqrt3 = 1.15470053838f;
  85:Inc/utils.hpp **** static const float sqrt3_by_2 = 0.86602540378f;
  86:Inc/utils.hpp **** 
  87:Inc/utils.hpp **** // like fmodf, but always positive
  88:Inc/utils.hpp **** static inline float fmodf_pos(float x, float y) {
  46              		.loc 1 88 49
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 16
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 84B0     		sub	sp, sp, #16
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 24
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
  60              		.cfi_def_cfa_register 7
  61 0006 87ED010A 		vstr.32	s0, [r7, #4]
  62 000a C7ED000A 		vstr.32	s1, [r7]
  89:Inc/utils.hpp ****     float out = fmodf(x, y);
  63              		.loc 1 89 22
  64 000e D7ED000A 		vldr.32	s1, [r7]
  65 0012 97ED010A 		vldr.32	s0, [r7, #4]
  66 0016 FFF7FEFF 		bl	fmodf
  67 001a 87ED030A 		vstr.32	s0, [r7, #12]
  90:Inc/utils.hpp ****     if (out < 0.0f)
  68              		.loc 1 90 5
  69 001e D7ED037A 		vldr.32	s15, [r7, #12]
  70 0022 F5EEC07A 		vcmpe.f32	s15, #0
  71 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  72 002a 07D5     		bpl	.L2
  91:Inc/utils.hpp ****         out += y;
  73              		.loc 1 91 13
  74 002c 97ED037A 		vldr.32	s14, [r7, #12]
  75 0030 D7ED007A 		vldr.32	s15, [r7]
  76 0034 77EE277A 		vadd.f32	s15, s14, s15
  77 0038 C7ED037A 		vstr.32	s15, [r7, #12]
  78              	.L2:
  92:Inc/utils.hpp ****     return out;
  79              		.loc 1 92 12
  80 003c FB68     		ldr	r3, [r7, #12]	@ float
  81 003e 07EE903A 		vmov	s15, r3
  93:Inc/utils.hpp **** }
  82              		.loc 1 93 1
  83 0042 B0EE670A 		vmov.f32	s0, s15
  84 0046 1037     		adds	r7, r7, #16
  85              	.LCFI3:
ARM GAS  /tmp/ccCqaElO.s 			page 4


  86              		.cfi_def_cfa_offset 8
  87 0048 BD46     		mov	sp, r7
  88              	.LCFI4:
  89              		.cfi_def_cfa_register 13
  90              		@ sp needed
  91 004a 80BD     		pop	{r7, pc}
  92              		.cfi_endproc
  93              	.LFE1549:
  95              		.section	.text.wrap_pm,"ax",%progbits
  96              		.align	1
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	wrap_pm:
 103              	.LFB1550:
  94:Inc/utils.hpp **** 
  95:Inc/utils.hpp **** /**
  96:Inc/utils.hpp ****  * @brief Similar to modulo operator, except that the output range is centered
  97:Inc/utils.hpp ****  * around zero.
  98:Inc/utils.hpp ****  * The returned value is always in the range [-pm_range, pm_range).
  99:Inc/utils.hpp ****  */
 100:Inc/utils.hpp **** static inline float wrap_pm(float x, float pm_range) {
 104              		.loc 1 100 54
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              	.LCFI5:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 82B0     		sub	sp, sp, #8
 114              	.LCFI6:
 115              		.cfi_def_cfa_offset 16
 116 0004 00AF     		add	r7, sp, #0
 117              	.LCFI7:
 118              		.cfi_def_cfa_register 7
 119 0006 87ED010A 		vstr.32	s0, [r7, #4]
 120 000a C7ED000A 		vstr.32	s1, [r7]
 101:Inc/utils.hpp ****     return fmodf_pos(x + pm_range, 2.0f * pm_range) - pm_range;
 121              		.loc 1 101 21
 122 000e 97ED017A 		vldr.32	s14, [r7, #4]
 123 0012 D7ED007A 		vldr.32	s15, [r7]
 124 0016 37EE277A 		vadd.f32	s14, s14, s15
 125 001a D7ED007A 		vldr.32	s15, [r7]
 126 001e 77EEA77A 		vadd.f32	s15, s15, s15
 127 0022 F0EE670A 		vmov.f32	s1, s15
 128 0026 B0EE470A 		vmov.f32	s0, s14
 129 002a FFF7FEFF 		bl	fmodf_pos
 130 002e B0EE407A 		vmov.f32	s14, s0
 131              		.loc 1 101 55
 132 0032 D7ED007A 		vldr.32	s15, [r7]
 133 0036 77EE677A 		vsub.f32	s15, s14, s15
 102:Inc/utils.hpp **** }
 134              		.loc 1 102 1
 135 003a B0EE670A 		vmov.f32	s0, s15
ARM GAS  /tmp/ccCqaElO.s 			page 5


 136 003e 0837     		adds	r7, r7, #8
 137              	.LCFI8:
 138              		.cfi_def_cfa_offset 8
 139 0040 BD46     		mov	sp, r7
 140              	.LCFI9:
 141              		.cfi_def_cfa_register 13
 142              		@ sp needed
 143 0042 80BD     		pop	{r7, pc}
 144              		.cfi_endproc
 145              	.LFE1550:
 147              		.section	.text.wrap_pm_pi,"ax",%progbits
 148              		.align	1
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	wrap_pm_pi:
 155              	.LFB1551:
 103:Inc/utils.hpp **** 
 104:Inc/utils.hpp **** static inline float wrap_pm_pi(float theta) {
 156              		.loc 1 104 45
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              	.LCFI10:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 82B0     		sub	sp, sp, #8
 166              	.LCFI11:
 167              		.cfi_def_cfa_offset 16
 168 0004 00AF     		add	r7, sp, #0
 169              	.LCFI12:
 170              		.cfi_def_cfa_register 7
 171 0006 87ED010A 		vstr.32	s0, [r7, #4]
 105:Inc/utils.hpp ****     return wrap_pm(theta, M_PI);
 172              		.loc 1 105 19
 173 000a DFED060A 		vldr.32	s1, .L10
 174 000e 97ED010A 		vldr.32	s0, [r7, #4]
 175 0012 FFF7FEFF 		bl	wrap_pm
 176 0016 F0EE407A 		vmov.f32	s15, s0
 106:Inc/utils.hpp **** }
 177              		.loc 1 106 1
 178 001a B0EE670A 		vmov.f32	s0, s15
 179 001e 0837     		adds	r7, r7, #8
 180              	.LCFI13:
 181              		.cfi_def_cfa_offset 8
 182 0020 BD46     		mov	sp, r7
 183              	.LCFI14:
 184              		.cfi_def_cfa_register 13
 185              		@ sp needed
 186 0022 80BD     		pop	{r7, pc}
 187              	.L11:
 188              		.align	2
 189              	.L10:
 190 0024 DB0F4940 		.word	1078530011
ARM GAS  /tmp/ccCqaElO.s 			page 6


 191              		.cfi_endproc
 192              	.LFE1551:
 194              		.section	.rodata._ZL16OFFSET_TAB_CCMRx,"a"
 195              		.align	2
 198              	_ZL16OFFSET_TAB_CCMRx:
 199 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
 199      04040404 
 199      3838
 200              		.section	.rodata._ZL14SHIFT_TAB_OCxx,"a"
 201              		.align	2
 204              	_ZL14SHIFT_TAB_OCxx:
 205 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
 205      00000800 
 205      0008
 206              		.section	.rodata._ZL14SHIFT_TAB_ICxx,"a"
 207              		.align	2
 210              	_ZL14SHIFT_TAB_ICxx:
 211 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
 211      00000800 
 211      0000
 212              		.section	.rodata._ZL14SHIFT_TAB_CCxP,"a"
 213              		.align	2
 216              	_ZL14SHIFT_TAB_CCxP:
 217 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
 217      080A0C0E 
 217      1014
 218              		.section	.rodata._ZL14SHIFT_TAB_OISx,"a"
 219              		.align	2
 222              	_ZL14SHIFT_TAB_OISx:
 223 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
 223      04050607 
 223      080A
 224              		.section	.rodata._ZL19USART_PRESCALER_TAB,"a"
 225              		.align	2
 228              	_ZL19USART_PRESCALER_TAB:
 229 0000 01000000 		.word	1
 230 0004 02000000 		.word	2
 231 0008 04000000 		.word	4
 232 000c 06000000 		.word	6
 233 0010 08000000 		.word	8
 234 0014 0A000000 		.word	10
 235 0018 0C000000 		.word	12
 236 001c 10000000 		.word	16
 237 0020 20000000 		.word	32
 238 0024 40000000 		.word	64
 239 0028 80000000 		.word	128
 240 002c 00010000 		.word	256
 241              		.section	.rodata._ZL18CHANNEL_OFFSET_TAB,"a"
 242              		.align	2
 245              	_ZL18CHANNEL_OFFSET_TAB:
 246 0000 081C3044 		.ascii	"\010\0340DXl"
 246      586C
 247              		.section	.text._ZSt5clampIfERKT_S2_S2_S2_,"axG",%progbits,_ZSt5clampIfERKT_S2_S2_S2_,comdat
 248              		.align	1
 249              		.weak	_ZSt5clampIfERKT_S2_S2_S2_
 250              		.syntax unified
 251              		.thumb
ARM GAS  /tmp/ccCqaElO.s 			page 7


 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	_ZSt5clampIfERKT_S2_S2_S2_:
 256              	.LFB4794:
 257              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_a
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // Algorithm implementation -*- C++ -*-
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** //
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // terms of the GNU General Public License as published by the
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // any later version.
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // GNU General Public License for more details.
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** /*
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * Copyright (c) 1994
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * Hewlett-Packard Company
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * representations about the suitability of this software for any
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * Copyright (c) 1996
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * representations about the suitability of this software for any
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  */
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** /** @file bits/stl_algo.h
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  /tmp/ccCqaElO.s 			page 8


  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  */
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #ifndef _STL_ALGO_H
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #define _STL_ALGO_H 1
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #include <cstdlib>	     // for rand
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #include <bits/algorithmfwd.h>
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #include <bits/stl_heap.h>
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #include <bits/stl_tempbuf.h>  // for _Temporary_buffer
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #include <bits/predefined_ops.h>
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #include <bits/uniform_int_dist.h>
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #endif
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** // See concept_check.h for the __glibcxx_*_requires macros.
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** namespace std _GLIBCXX_VISIBILITY(default)
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** {
  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// Swaps the median value of *__a, *__b and *__c under __comp to *__result
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Iterator, typename _Compare>
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _Iterator __c, _Compare __comp)
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__comp(__a, __b))
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__b, __c))
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::iter_swap(__result, __b);
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::iter_swap(__result, __c);
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::iter_swap(__result, __a);
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__comp(__a, __c))
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::iter_swap(__result, __a);
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__comp(__b, __c))
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::iter_swap(__result, __c);
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::iter_swap(__result, __b);
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// Provided for stable_partition to use.
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _InputIterator
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __find_if_not(_InputIterator __first, _InputIterator __last,
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _Predicate __pred)
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__find_if(__first, __last,
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__negate(__pred),
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    std::__iterator_category(__first));
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
ARM GAS  /tmp/ccCqaElO.s 			page 9


 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// Like find_if_not(), but uses and updates a count of the
 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// remaining range length instead of comparing against an end
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// iterator.
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate, typename _Distance>
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _InputIterator
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __len; --__len,  (void) ++__first)
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__pred(__first))
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  break;
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __first;
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_difference
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_intersection
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_symmetric_difference
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_union
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // for_each
 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // find
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // find_if
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // find_first_of
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // adjacent_find
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // count
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // count_if
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // search
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator1
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _BinaryPredicate  __predicate)
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // Test for empty ranges
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first1 == __last1 || __first2 == __last2)
 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first1;
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // Test for a pattern of length 1.
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator2 __p1(__first2);
 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (++__p1 == __last2)
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return std::__find_if(__first1, __last1,
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // General case.
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator1 __current = __first1;
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (;;)
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first1 =
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::__find_if(__first1, __last1,
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__first1 == __last1)
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __last1;
ARM GAS  /tmp/ccCqaElO.s 			page 10


 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator2 __p = __p1;
 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __current = __first1;
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (++__current == __last1)
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __last1;
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (__predicate(__current, __p))
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (++__p == __last2)
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		return __first1;
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (++__current == __last1)
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		return __last1;
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first1;
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __first1;
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // search_n
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for forward iterators.
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   std::forward_iterator_tag)
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __unary_pred);
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first != __last)
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::difference_type
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __n = __count;
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator __i = __first;
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__i;
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (__i != __last && __n != 1 && __unary_pred(__i))
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__i;
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      --__n;
 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__n == 1)
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __first;
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__i == __last)
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __last;
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first = std::__find_if(++__i, __last, __unary_pred);
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __last;
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for random access
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  iterators.
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIter, typename _Integer,
ARM GAS  /tmp/ccCqaElO.s 			page 11


 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _RandomAccessIter
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   std::random_access_iterator_tag)
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_DistanceType;
 233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _DistanceType __tailSize = __last - __first;
 235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _DistanceType __remainder = __count;
 236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__remainder <= __tailSize) // the main loop...
 238:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 239:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first += __remainder;
 240:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __tailSize -= __remainder;
 241:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  // __first here is always pointing to one past the last element of
 242:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  // next possible match.
 243:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _RandomAccessIter __backTrack = __first; 
 244:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (__unary_pred(--__backTrack))
 245:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
 246:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (--__remainder == 0)
 247:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		return (__first - __count); // Success
 248:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
 249:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __remainder = __count + 1 - (__first - __backTrack);
 250:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 251:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __last; // Failure
 252:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 253:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 254:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 255:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 256:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 257:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
 258:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __search_n(_ForwardIterator __first, _ForwardIterator __last,
 259:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _Integer __count,
 260:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _UnaryPredicate __unary_pred)
 261:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 262:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__count <= 0)
 263:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
 264:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 265:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__count == 1)
 266:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return std::__find_if(__first, __last, __unary_pred);
 267:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__search_n_aux(__first, __last, __count, __unary_pred,
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				 std::__iterator_category(__first));
 270:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 271:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 272:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // find_end for forward iterators.
 273:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 274:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 275:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 276:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator1
 277:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 278:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 279:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       forward_iterator_tag, forward_iterator_tag,
 280:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
ARM GAS  /tmp/ccCqaElO.s 			page 12


 281:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 282:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first2 == __last2)
 283:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last1;
 284:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 285:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator1 __result = __last1;
 286:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (1)
 287:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 288:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator1 __new_result
 289:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    = std::__search(__first1, __last1, __first2, __last2, __comp);
 290:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__new_result == __last1)
 291:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __result;
 292:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
 293:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
 294:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __result = __new_result;
 295:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __first1 = __new_result;
 296:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first1;
 297:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
 298:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 299:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 300:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // find_end for bidirectional iterators (much faster).
 302:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
 303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 304:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 305:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _BidirectionalIterator1
 306:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __find_end(_BidirectionalIterator1 __first1,
 307:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _BidirectionalIterator1 __last1,
 308:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _BidirectionalIterator2 __first2,
 309:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _BidirectionalIterator2 __last2,
 310:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       bidirectional_iterator_tag, bidirectional_iterator_tag,
 311:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 312:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 313:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 314:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 315:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator1>)
 316:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 317:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator2>)
 318:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 319:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
 320:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
 321:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 322:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RevIterator1 __rlast1(__first1);
 323:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RevIterator2 __rlast2(__first2);
 324:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
 325:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					      _RevIterator2(__last2), __rlast2,
 326:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					      __comp);
 327:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 328:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__rresult == __rlast1)
 329:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last1;
 330:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
 331:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 332:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator1 __result = __rresult.base();
 333:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::advance(__result, -std::distance(__first2, __last2));
 334:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __result;
 335:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccCqaElO.s 			page 13


 338:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 339:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence.
 340:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 341:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 342:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 343:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 344:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 345:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   The last iterator @c i in the range
 346:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that @c *(i+N) ==
 347:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p *(__first2+N) for each @c N in the range @p
 348:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
 349:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 350:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 351:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 352:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the __first
 353:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  element of the sub-sequence, or @p __last1 if the sub-sequence
 354:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  is not found.  The sub-sequence will be the last such
 355:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  subsequence contained in [__first1,__last1).
 356:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 357:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 358:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 360:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 362:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 363:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 364:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 365:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 366:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator1
 367:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 368:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2)
 369:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 370:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 371:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 372:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 373:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 374:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 375:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 376:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 377:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 378:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 379:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 380:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 381:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 382:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equal_to_iter());
 383:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 384:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 385:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 386:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence using a predicate.
 387:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 388:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 389:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 390:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 391:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 392:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    The predicate to use.
 393:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return The last iterator @c i in the range @p
 394:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c
ARM GAS  /tmp/ccCqaElO.s 			page 14


 395:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  predicate(*(i+N), @p (__first2+N)) is true for each @c N in the
 396:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  range @p [0,__last2-__first2), or @p __last1 if no such iterator
 397:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  exists.
 398:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 399:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 400:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 401:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first2,__last2) using comp as a predicate and returns an
 402:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  iterator to the first element of the sub-sequence, or @p __last1
 403:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  if the sub-sequence is not found.  The sub-sequence will be the
 404:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  last such subsequence contained in [__first,__last1).
 405:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 406:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 407:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 408:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 409:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 410:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 411:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 412:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 413:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 414:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 415:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 416:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator1
 417:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 418:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 419:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _BinaryPredicate __comp)
 420:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 421:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 422:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 423:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 424:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
 425:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 426:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 427:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 428:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 429:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 430:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 431:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 432:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 433:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
 434:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 436:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
 437:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 438:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks that a predicate is true for all the elements
 439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          of a sequence.
 440:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 441:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 444:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 445:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 446:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Returns true if @p __pred is true for each element in the range
 447:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 448:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 449:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 450:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 451:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
ARM GAS  /tmp/ccCqaElO.s 			page 15


 452:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 453:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return __last == std::find_if_not(__first, __last, __pred); }
 454:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 455:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 456:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for all the elements
 457:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          of a sequence.
 458:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 459:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 460:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 461:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 462:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 463:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 464:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Returns true if @p __pred is false for each element in the range
 465:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 466:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 467:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 468:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 469:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
 470:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 471:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return __last == _GLIBCXX_STD_A::find_if(__first, __last, __pred); }
 472:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 473:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 474:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks that a predicate is true for at least one element
 475:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          of a sequence.
 476:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 477:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 478:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 479:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 480:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 481:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 482:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Returns true if an element exists in the range @p
 483:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first,__last) such that @p __pred is true, and false
 484:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  otherwise.
 485:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 486:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 487:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 488:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
 489:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 490:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return !std::none_of(__first, __last, __pred); }
 491:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 492:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 493:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Find the first element in a sequence for which a
 494:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          predicate is false.
 495:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 496:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 497:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 498:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 499:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
 500:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  such that @p __pred(*i) is false, or @p __last if no such iterator exists.
 501:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 502:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 503:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 504:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _InputIterator
 505:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     find_if_not(_InputIterator __first, _InputIterator __last,
 506:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		_Predicate __pred)
 507:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 508:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
ARM GAS  /tmp/ccCqaElO.s 			page 16


 509:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 510:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 511:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
 512:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 513:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__find_if_not(__first, __last,
 514:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred));
 515:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 516:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 517:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 518:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks whether the sequence is partitioned.
 519:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 520:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 521:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 522:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 523:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if the range @p [__first,__last) is partioned by @p __pred,
 524:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  i.e. if all elements that satisfy @p __pred appear before those that
 525:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  do not.
 526:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 527:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 528:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 529:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
 530:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_partitioned(_InputIterator __first, _InputIterator __last,
 531:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _Predicate __pred)
 532:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 533:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first = std::find_if_not(__first, __last, __pred);
 534:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
 535:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return true;
 536:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       ++__first;
 537:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::none_of(__first, __last, __pred);
 538:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 539:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 540:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 541:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Find the partition point of a partitioned range.
 542:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 543:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
 544:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
 545:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 546:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator @p mid such that @p all_of(__first, mid, __pred)
 547:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           and @p none_of(mid, __last, __pred) are both true.
 548:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 549:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 550:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 551:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
 552:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     partition_point(_ForwardIterator __first, _ForwardIterator __last,
 553:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _Predicate __pred)
 554:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 555:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 556:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 557:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 558:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      typename iterator_traits<_ForwardIterator>::value_type>)
 559:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 560:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // A specific debug-mode test will be necessary...
 561:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 562:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 563:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 564:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_DistanceType;
 565:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccCqaElO.s 			page 17


 566:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
 567:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 568:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__len > 0)
 569:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 570:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
 571:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
 572:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::advance(__middle, __half);
 573:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__pred(*__middle))
 574:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
 575:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __first = __middle;
 576:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first;
 577:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len = __len - __half - 1;
 578:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
 579:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
 580:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __len = __half;
 581:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 582:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __first;
 583:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 584:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #endif
 585:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 586:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 587:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Predicate>
 588:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 589:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
 590:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __remove_copy_if(_InputIterator __first, _InputIterator __last,
 591:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _OutputIterator __result, _Predicate __pred)
 592:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 593:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 594:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__pred(__first))
 595:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
 596:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *__result = *__first;
 597:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__result;
 598:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
 599:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result;
 600:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 601:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 602:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements of a given value.
 604:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 605:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 606:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 607:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __value   The value to be removed.
 609:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 611:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) not equal
 612:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  to @p __value to the range beginning at @p __result.
 613:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  remove_copy() is stable, so the relative order of elements that
 614:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  are copied is unchanged.
 615:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 616:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
 617:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 618:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
 619:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     remove_copy(_InputIterator __first, _InputIterator __last,
 620:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		_OutputIterator __result, const _Tp& __value)
 621:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 622:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
ARM GAS  /tmp/ccCqaElO.s 			page 18


 623:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 624:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 625:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 626:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 627:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
 628:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 629:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 630:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 631:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	__gnu_cxx::__ops::__iter_equals_val(__value));
 632:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 633:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 634:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 635:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements for which a predicate is true.
 636:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 637:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 638:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 639:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 640:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 641:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 642:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 643:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 644:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p __pred returns false to the range beginning at @p __result.
 645:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 646:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  remove_copy_if() is stable, so the relative order of elements that are
 647:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  copied is unchanged.
 648:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 649:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 650:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Predicate>
 651:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 652:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
 653:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     remove_copy_if(_InputIterator __first, _InputIterator __last,
 654:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _OutputIterator __result, _Predicate __pred)
 655:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 656:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 657:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 658:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 659:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 660:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 661:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 662:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 663:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 664:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 665:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__pred_iter(__pred));
 666:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 667:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 668:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
 669:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 670:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence for which a predicate is true.
 671:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 672:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 673:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 674:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 675:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 676:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 677:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 678:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 679:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p __result.
ARM GAS  /tmp/ccCqaElO.s 			page 19


 680:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 681:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  copy_if() is stable, so the relative order of elements that are
 682:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  copied is unchanged.
 683:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 684:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 685:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Predicate>
 686:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 687:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
 688:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     copy_if(_InputIterator __first, _InputIterator __last,
 689:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    _OutputIterator __result, _Predicate __pred)
 690:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 691:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 692:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 694:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 695:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 696:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 697:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 698:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 699:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 700:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__pred(*__first))
 701:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
 702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *__result = *__first;
 703:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__result;
 704:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
 705:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result;
 706:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 707:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 708:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 709:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 710:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
 711:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __copy_n_a(_InputIterator __first, _Size __n, _OutputIterator __result)
 712:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 713:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__n > 0)
 714:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 715:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (true)
 716:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
 717:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *__result = *__first;
 718:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__result;
 719:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (--__n > 0)
 720:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		++__first;
 721:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      else
 722:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		break;
 723:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
 724:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 725:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result;
 726:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 727:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****  
 728:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _CharT, typename _Size>
 729:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __enable_if_t<__is_char<_CharT>::__value, _CharT*>
 730:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __copy_n_a(istreambuf_iterator<_CharT, char_traits<_CharT>>,
 731:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _Size, _CharT*);
 732:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 733:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 734:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 735:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
 736:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __copy_n(_InputIterator __first, _Size __n,
ARM GAS  /tmp/ccCqaElO.s 			page 20


 737:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _OutputIterator __result, input_iterator_tag)
 738:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 739:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__niter_wrap(__result,
 740:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			       __copy_n_a(__first, __n,
 741:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					  std::__niter_base(__result)));
 742:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 743:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 744:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size,
 745:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _OutputIterator>
 746:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 747:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
 748:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __copy_n(_RandomAccessIterator __first, _Size __n,
 749:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _OutputIterator __result, random_access_iterator_tag)
 750:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return std::copy(__first, __first + __n, __result); }
 751:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 752:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 753:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copies the range [first,first+n) into [result,result+n).
 754:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 755:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 756:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __n      The number of elements to copy.
 757:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result An output iterator.
 758:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  result+n.
 759:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 760:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This inline function will boil down to a call to @c memmove whenever
 761:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 762:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  loop count will be known (and therefore a candidate for compiler
 763:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  optimizations such as unrolling).
 764:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 765:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 766:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 767:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
 768:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)
 769:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 770:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 771:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 772:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 773:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 774:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_can_increment(__first, __n);
 775:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_can_increment(__result, __n);
 776:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 777:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__copy_n(__first, __n, __result,
 778:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   std::__iterator_category(__first));
 779:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 780:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 781:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 782:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence to separate output sequences
 783:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         depending on the truth value of a predicate.
 784:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 785:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 786:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 787:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __out_true   An output iterator.
 788:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __out_false  An output iterator.
 789:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 790:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   A pair designating the ends of the resulting sequences.
 791:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 792:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 793:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p out_true
ARM GAS  /tmp/ccCqaElO.s 			page 21


 794:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  and each element for which @p __pred returns false to @p __out_false.
 795:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 796:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator1,
 797:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _OutputIterator2, typename _Predicate>
 798:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 799:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     pair<_OutputIterator1, _OutputIterator2>
 800:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     partition_copy(_InputIterator __first, _InputIterator __last,
 801:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _OutputIterator1 __out_true, _OutputIterator2 __out_false,
 802:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _Predicate __pred)
 803:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 804:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 805:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 806:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator1,
 807:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 808:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator2,
 809:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 810:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 811:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 812:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 813:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       
 814:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 815:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__pred(*__first))
 816:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
 817:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *__out_true = *__first;
 818:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__out_true;
 819:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
 820:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	else
 821:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
 822:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *__out_false = *__first;
 823:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__out_false;
 824:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
 825:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 826:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);
 827:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 828:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #endif // C++11
 829:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 830:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 831:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 832:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
 833:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __remove_if(_ForwardIterator __first, _ForwardIterator __last,
 834:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		_Predicate __pred)
 835:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 836:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __pred);
 837:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
 838:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
 839:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __result = __first;
 840:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       ++__first;
 841:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 842:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__pred(__first))
 843:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
 844:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *__result = _GLIBCXX_MOVE(*__first);
 845:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__result;
 846:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
 847:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result;
 848:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 849:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 850:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
ARM GAS  /tmp/ccCqaElO.s 			page 22


 851:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Remove elements from a sequence.
 852:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 853:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 854:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 855:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __value  The value to be removed.
 856:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 857:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 858:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  All elements equal to @p __value are removed from the range
 859:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first,__last).
 860:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 861:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  remove() is stable, so the relative order of elements that are
 862:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 863:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 864:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 865:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 866:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 867:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
 868:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 869:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
 870:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     remove(_ForwardIterator __first, _ForwardIterator __last,
 871:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   const _Tp& __value)
 872:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 873:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 874:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 875:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
 876:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 877:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 878:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 879:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 880:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 881:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_equals_val(__value));
 882:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 883:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 884:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 885:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Remove elements from a sequence using a predicate.
 886:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 887:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 888:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 889:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 890:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 891:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 892:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  All elements for which @p __pred returns true are removed from the range
 893:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first,__last).
 894:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 895:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  remove_if() is stable, so the relative order of elements that are
 896:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 897:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 898:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 899:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 900:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 901:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 902:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 903:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
 904:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     remove_if(_ForwardIterator __first, _ForwardIterator __last,
 905:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _Predicate __pred)
 906:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 907:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
ARM GAS  /tmp/ccCqaElO.s 			page 23


 908:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 909:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
 910:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 911:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
 912:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 913:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 914:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 915:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__pred_iter(__pred));
 916:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 917:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 918:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 919:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 920:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
 921:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
 922:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _BinaryPredicate __binary_pred)
 923:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 924:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
 925:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last;
 926:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
 927:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (++__next != __last)
 928:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
 929:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__binary_pred(__first, __next))
 930:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __first;
 931:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first = __next;
 932:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
 933:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __last;
 934:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 935:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 936:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 937:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 938:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
 939:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unique(_ForwardIterator __first, _ForwardIterator __last,
 940:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
 941:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 942:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // Skip the beginning, if already unique.
 943:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first = std::__adjacent_find(__first, __last, __binary_pred);
 944:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
 945:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last;
 946:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 947:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // Do the real copy work.
 948:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __dest = __first;
 949:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       ++__first;
 950:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (++__first != __last)
 951:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__binary_pred(__dest, __first))
 952:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *++__dest = _GLIBCXX_MOVE(*__first);
 953:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return ++__dest;
 954:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 955:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 956:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 957:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Remove consecutive duplicate values from a sequence.
 958:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 959:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 960:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 961:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
 962:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 963:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 964:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  values that compare equal.
ARM GAS  /tmp/ccCqaElO.s 			page 24


 965:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 966:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 967:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 968:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 969:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
 970:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
 973:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last)
 974:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
 975:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
 976:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 977:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
 978:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
 979:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     typename iterator_traits<_ForwardIterator>::value_type>)
 980:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 981:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 982:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__unique(__first, __last,
 983:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
 984:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 985:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
 986:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
 987:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Remove consecutive values from a sequence using a predicate.
 988:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 989:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
 990:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
 991:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
 992:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
 993:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
 994:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 995:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  values for which @p __binary_pred returns true.
 996:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 997:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 998:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 999:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
1000:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1001:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
1002:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1003:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
1004:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last,
1005:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   _BinaryPredicate __binary_pred)
1006:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1007:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1008:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1009:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1010:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1011:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type,
1012:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1013:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1014:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1015:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__unique(__first, __last,
1016:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
1017:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1018:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1019:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1020:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an uglified
1021:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
ARM GAS  /tmp/ccCqaElO.s 			page 25


1022:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *              _BinaryPredicate)
1023:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  overloaded for forward iterators and output iterator as result.
1024:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1025:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator,
1026:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1027:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1028:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
1029:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
1030:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1031:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  forward_iterator_tag, output_iterator_tag)
1032:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1033:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1034:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1035:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1036:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type>)
1037:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1038:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1039:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       *__result = *__first;
1040:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (++__next != __last)
1041:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__binary_pred(__first, __next))
1042:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
1043:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __first = __next;
1044:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *++__result = *__first;
1045:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
1046:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return ++__result;
1047:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1048:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1049:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1050:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an uglified
1051:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1052:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *              _BinaryPredicate)
1053:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  overloaded for input iterators and output iterator as result.
1054:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1055:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
1056:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1057:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1058:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
1059:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1060:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1061:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  input_iterator_tag, output_iterator_tag)
1062:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1063:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1064:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1065:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type,
1066:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1067:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1068:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::value_type __value = *__first;
1069:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
1070:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	__rebound_pred
1071:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	= __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
1072:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       *__result = __value;
1073:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (++__first != __last)
1074:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__rebound_pred(__first, __value))
1075:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
1076:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __value = *__first;
1077:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    *++__result = __value;
1078:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
ARM GAS  /tmp/ccCqaElO.s 			page 26


1079:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return ++__result;
1080:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1081:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1082:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1083:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an uglified
1084:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1085:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *              _BinaryPredicate)
1086:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  overloaded for input iterators and forward iterator as result.
1087:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1088:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
1089:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1090:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1091:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
1092:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1093:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _ForwardIterator __result, _BinaryPredicate __binary_pred,
1094:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  input_iterator_tag, forward_iterator_tag)
1095:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1096:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1097:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1098:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1099:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       *__result = *__first;
1101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (++__first != __last)
1102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__binary_pred(__result, __first))
1103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *++__result = *__first;
1104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return ++__result;
1105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  overloaded for bidirectional iterators.
1111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
1116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (true)
1119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__first == __last || __first == --__last)
1120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return;
1121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	else
1122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
1123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::iter_swap(__first, __last);
1124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__first;
1125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
1126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  overloaded for random access iterators.
1132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
ARM GAS  /tmp/ccCqaElO.s 			page 27


1136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
1137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      random_access_iterator_tag)
1138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
1140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return;
1141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       --__last;
1142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first < __last)
1143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__last;
1147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Reverse a sequence.
1152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  A bidirectional iterator.
1154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   A bidirectional iterator.
1155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   reverse() returns no value.
1156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Reverses the order of the elements in the range @p [__first,__last),
1158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  so that the first element becomes the last etc.
1159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  For every @c i such that @p 0<=i<=(__last-__first)/2), @p reverse()
1160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  swaps @p *(__first+i) and @p *(__last-(i+1))
1161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline void
1165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
1166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__reverse(__first, __last, std::__iterator_category(__first));
1172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, reversing its elements.
1176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   A bidirectional iterator.
1178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    A bidirectional iterator.
1179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies the elements in the range @p [__first,__last) to the
1183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  range @p [__result,__result+(__last-__first)) such that the
1184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  order of the elements is reversed.  For every @c i such that @p
1185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  0<=i<=(__last-__first), @p reverse_copy() performs the
1186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  assignment @p *(__result+(__last-__first)-1-i) = *(__first+i).
1187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The ranges @p [__first,__last) and @p
1188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__result,__result+(__last-__first)) must not overlap.
1189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _OutputIterator>
1191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
ARM GAS  /tmp/ccCqaElO.s 			page 28


1193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
1194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		 _OutputIterator __result)
1195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
1198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		typename iterator_traits<_BidirectionalIterator>::value_type>)
1201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first != __last)
1204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__last;
1206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *__result = *__last;
1207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__result;
1208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result;
1210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is a helper function for the rotate algorithm specialized on RAIs.
1214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  It returns the greatest common divisor of two integer values.
1215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _EuclideanRingElement>
1217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _EuclideanRingElement
1219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
1220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__n != 0)
1222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _EuclideanRingElement __t = __m % __n;
1224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __m = __n;
1225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __n = __t;
1226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __m;
1228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   inline namespace _V2
1231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   {
1232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
1235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
1237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __rotate(_ForwardIterator __first,
1238:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _ForwardIterator __middle,
1239:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _ForwardIterator __last,
1240:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     forward_iterator_tag)
1241:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1242:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __middle)
1243:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last;
1244:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__last == __middle)
1245:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
1246:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1247:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __first2 = __middle;
1248:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       do
1249:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
ARM GAS  /tmp/ccCqaElO.s 			page 29


1250:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1251:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1252:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first2;
1253:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__first == __middle)
1254:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __middle = __first2;
1255:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1256:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first2 != __last);
1257:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1258:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __ret = __first;
1259:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1260:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first2 = __middle;
1261:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1262:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first2 != __last)
1263:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1264:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1265:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1266:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first2;
1267:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__first == __middle)
1268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __middle = __first2;
1269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else if (__first2 == __last)
1270:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __first2 = __middle;
1271:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1272:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __ret;
1273:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1274:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1275:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    /// This is a helper function for the rotate algorithm.
1276:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1277:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1278:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _BidirectionalIterator
1279:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __rotate(_BidirectionalIterator __first,
1280:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _BidirectionalIterator __middle,
1281:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _BidirectionalIterator __last,
1282:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1283:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1284:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1285:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1286:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1287:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1288:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __middle)
1289:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last;
1290:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__last == __middle)
1291:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
1292:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1293:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1294:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1295:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1296:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first != __middle && __middle != __last)
1297:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1298:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, --__last);
1299:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1300:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1302:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __middle)
1303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1304:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1305:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __last;
1306:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
ARM GAS  /tmp/ccCqaElO.s 			page 30


1307:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
1308:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1309:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1310:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __first;
1311:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1312:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1313:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1314:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1315:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1316:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1317:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _RandomAccessIterator
1318:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __rotate(_RandomAccessIterator __first,
1319:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _RandomAccessIterator __middle,
1320:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _RandomAccessIterator __last,
1321:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     random_access_iterator_tag)
1322:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1323:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1324:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1325:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1326:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1327:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __middle)
1328:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last;
1329:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__last == __middle)
1330:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
1331:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1332:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1333:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Distance;
1334:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1335:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_ValueType;
1336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Distance __n = __last   - __first;
1338:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Distance __k = __middle - __first;
1339:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1340:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__k == __n - __k)
1341:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1342:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::swap_ranges(__first, __middle, __middle);
1343:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __middle;
1344:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1345:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1346:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RandomAccessIterator __p = __first;
1347:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RandomAccessIterator __ret = __first + (__last - __middle);
1348:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1349:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (;;)
1350:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1351:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__k < __n - __k)
1352:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
1353:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1354:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{
1355:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*__p);
1356:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _GLIBCXX_MOVE3(__p + 1, __p + __n, __p);
1357:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  *(__p + __n - 1) = _GLIBCXX_MOVE(__t);
1358:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  return __ret;
1359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		}
1360:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __k;
1361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1362:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{
1363:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
ARM GAS  /tmp/ccCqaElO.s 			page 31


1364:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  ++__p;
1365:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  ++__q;
1366:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		}
1367:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __n %= __k;
1368:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__n == 0)
1369:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		return __ret;
1370:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::swap(__n, __k);
1371:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __k = __n - __k;
1372:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
1373:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
1374:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
1375:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __k = __n - __k;
1376:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1377:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{
1378:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*(__p + __n - 1));
1379:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__p, __p + __n - 1, __p + __n);
1380:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  *__p = _GLIBCXX_MOVE(__t);
1381:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  return __ret;
1382:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		}
1383:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __n;
1384:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __p = __q - __k;
1385:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1386:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{
1387:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  --__p;
1388:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  --__q;
1389:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1390:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		}
1391:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __n %= __k;
1392:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__n == 0)
1393:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		return __ret;
1394:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::swap(__n, __k);
1395:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
1396:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1397:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1398:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1399:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
1400:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    // DR 488. rotate throws away useful information
1401:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1402:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Rotate the elements of a sequence.
1403:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1404:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1405:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1406:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1407:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  first + (last - middle).
1408:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1409:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Rotates the elements of the range @p [__first,__last) by 
1410:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p (__middle - __first) positions so that the element at @p __middle
1411:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  is moved to @p __first, the element at @p __middle+1 is moved to
1412:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p __first+1 and so on for each element in the range
1413:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first,__last).
1414:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1415:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This effectively swaps the ranges @p [__first,__middle) and
1416:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__middle,__last).
1417:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1418:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Performs
1419:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *   @p *(__first+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1420:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
ARM GAS  /tmp/ccCqaElO.s 			page 32


1421:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1422:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
1423:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1424:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
1425:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     rotate(_ForwardIterator __first, _ForwardIterator __middle,
1426:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   _ForwardIterator __last)
1427:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1428:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1429:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1430:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1431:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1432:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1433:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1434:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__rotate(__first, __middle, __last,
1435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   std::__iterator_category(__first));
1436:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1437:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1438:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   } // namespace _V2
1439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1440:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1441:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, rotating its elements.
1442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1444:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1445:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1446:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1447:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
1448:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1449:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies the elements of the range @p [__first,__last) to the
1450:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  range beginning at @result, rotating the copied elements by 
1451:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p (__middle-__first) positions so that the element at @p __middle
1452:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  is moved to @p __result, the element at @p __middle+1 is moved
1453:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  to @p __result+1 and so on for each element in the range @p
1454:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first,__last).
1455:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1456:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Performs 
1457:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p *(__result+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1458:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1459:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1460:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator>
1461:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1462:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
1463:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
1464:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		_ForwardIterator __last, _OutputIterator __result)
1465:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1466:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1467:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1468:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1469:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1470:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1471:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1472:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1473:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::copy(__first, __middle,
1474:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		       std::copy(__middle, __last, __result));
1475:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1476:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1477:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function...
ARM GAS  /tmp/ccCqaElO.s 			page 33


1478:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1479:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1480:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
1481:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __partition(_ForwardIterator __first, _ForwardIterator __last,
1482:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		_Predicate __pred, forward_iterator_tag)
1483:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1484:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
1485:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
1486:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1487:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__pred(*__first))
1488:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (++__first == __last)
1489:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __first;
1490:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1491:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1492:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1493:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (++__next != __last)
1494:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__pred(*__next))
1495:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
1496:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::iter_swap(__first, __next);
1497:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__first;
1498:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
1499:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1500:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __first;
1501:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1502:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1503:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function...
1504:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Predicate>
1505:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1506:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _BidirectionalIterator
1507:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
1508:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		_Predicate __pred, bidirectional_iterator_tag)
1509:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1510:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (true)
1511:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1512:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (true)
1513:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    if (__first == __last)
1514:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return __first;
1515:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    else if (__pred(*__first))
1516:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first;
1517:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    else
1518:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      break;
1519:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__last;
1520:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (true)
1521:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    if (__first == __last)
1522:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return __first;
1523:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    else if (!bool(__pred(*__last)))
1524:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      --__last;
1525:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    else
1526:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      break;
1527:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1528:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1529:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1530:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1531:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1532:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // partition
1533:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1534:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function...
ARM GAS  /tmp/ccCqaElO.s 			page 34


1535:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// Requires __first != __last and !__pred(__first)
1536:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// and __len == distance(__first, __last).
1537:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   ///
1538:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// !__pred(__first) allows us to guarantee that we don't
1539:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// move-assign an element onto itself.
1540:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
1541:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Distance>
1542:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
1543:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __stable_partition_adaptive(_ForwardIterator __first,
1544:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				_ForwardIterator __last,
1545:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				_Predicate __pred, _Distance __len,
1546:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				_Pointer __buffer,
1547:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				_Distance __buffer_size)
1548:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1549:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len == 1)
1550:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
1551:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1552:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len <= __buffer_size)
1553:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1554:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator __result1 = __first;
1555:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _Pointer __result2 = __buffer;
1556:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1557:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  // The precondition guarantees that !__pred(__first), so
1558:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  // move that element to the buffer before starting the loop.
1559:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  // This ensures that we only call __pred once per element.
1560:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *__result2 = _GLIBCXX_MOVE(*__first);
1561:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__result2;
1562:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1563:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  for (; __first != __last; ++__first)
1564:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    if (__pred(__first))
1565:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      {
1566:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		*__result1 = _GLIBCXX_MOVE(*__first);
1567:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		++__result1;
1568:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      }
1569:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    else
1570:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      {
1571:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		*__result2 = _GLIBCXX_MOVE(*__first);
1572:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		++__result2;
1573:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      }
1574:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1575:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _GLIBCXX_MOVE3(__buffer, __result2, __result1);
1576:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __result1;
1577:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1578:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1579:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __middle = __first;
1580:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::advance(__middle, __len / 2);
1581:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __left_split =
1582:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__stable_partition_adaptive(__first, __middle, __pred,
1583:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					 __len / 2, __buffer,
1584:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					 __buffer_size);
1585:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1586:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // Advance past true-predicate values to satisfy this
1587:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // function's preconditions.
1588:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Distance __right_len = __len - __len / 2;
1589:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __right_split =
1590:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__find_if_not_n(__middle, __right_len, __pred);
1591:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccCqaElO.s 			page 35


1592:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__right_len)
1593:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	__right_split =
1594:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__stable_partition_adaptive(__right_split, __last, __pred,
1595:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					   __right_len,
1596:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					   __buffer, __buffer_size);
1597:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1598:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::rotate(__left_split, __middle, __right_split);
1599:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1600:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1601:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1602:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
1603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1604:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		       _Predicate __pred)
1605:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1606:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first = std::__find_if_not(__first, __last, __pred);
1607:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
1609:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __first;
1610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1611:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1612:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_ValueType;
1613:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
1614:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_DistanceType;
1615:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1616:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Temporary_buffer<_ForwardIterator, _ValueType>
1617:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	__buf(__first, std::distance(__first, __last));
1618:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return
1619:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__stable_partition_adaptive(__first, __last, __pred,
1620:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					 _DistanceType(__buf.requested_size()),
1621:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					 __buf.begin(),
1622:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					 _DistanceType(__buf.size()));
1623:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1624:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1625:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1626:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Move elements for which a predicate is true to the beginning
1627:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         of a sequence, preserving relative ordering.
1628:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1629:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1630:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1631:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate functor.
1632:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator @p middle such that @p __pred(i) is true for each
1633:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  iterator @p i in the range @p [first,middle) and false for each @p i
1634:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  in the range @p [middle,last).
1635:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1636:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Performs the same function as @p partition() with the additional
1637:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  guarantee that the relative ordering of elements in each group is
1638:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  preserved, so any two elements @p x and @p y in the range
1639:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__first,__last) such that @p __pred(x)==__pred(y) will have the same
1640:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  relative ordering after calling @p stable_partition().
1641:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1642:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1643:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
1644:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1645:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _Predicate __pred)
1646:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1647:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1648:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  /tmp/ccCqaElO.s 			page 36


1649:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1650:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
1651:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
1652:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1653:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1654:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__stable_partition(__first, __last,
1655:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__pred_iter(__pred));
1656:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1657:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1658:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routines.
1659:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1660:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1661:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1662:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __heap_select(_RandomAccessIterator __first,
1663:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _RandomAccessIterator __middle,
1664:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Compare __comp)
1665:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1666:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__make_heap(__first, __middle, __comp);
1667:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
1668:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__comp(__i, __first))
1669:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__pop_heap(__first, __middle, __i, __comp);
1670:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1671:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1672:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // partial_sort
1673:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1674:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1675:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
1676:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1677:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _RandomAccessIterator
1678:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __partial_sort_copy(_InputIterator __first, _InputIterator __last,
1679:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			_RandomAccessIterator __result_first,
1680:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			_RandomAccessIterator __result_last,
1681:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			_Compare __comp)
1682:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1683:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1684:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_InputValueType;
1685:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef iterator_traits<_RandomAccessIterator> _RItTraits;
1686:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename _RItTraits::difference_type _DistanceType;
1687:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1688:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__result_first == __result_last)
1689:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __result_last;
1690:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RandomAccessIterator __result_real_last = __result_first;
1691:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first != __last && __result_real_last != __result_last)
1692:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *__result_real_last = *__first;
1694:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__result_real_last;
1695:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1696:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1697:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       
1698:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__make_heap(__result_first, __result_real_last, __comp);
1699:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first != __last)
1700:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1701:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__first, __result_first))
1702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::__adjust_heap(__result_first, _DistanceType(0),
1703:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			       _DistanceType(__result_real_last
1704:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					     - __result_first),
1705:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			       _InputValueType(*__first), __comp);
ARM GAS  /tmp/ccCqaElO.s 			page 37


1706:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1707:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1708:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__sort_heap(__result_first, __result_real_last, __comp);
1709:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result_real_last;
1710:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1711:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1712:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1713:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence.
1714:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1715:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
1716:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
1717:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1718:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1719:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1720:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1721:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1722:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  to the range beginning at @p __result_first, where the number of
1723:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1724:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1725:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1726:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1727:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  *j<*i is false.
1728:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1729:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1730:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator>
1731:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1732:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _RandomAccessIterator
1733:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1734:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1735:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last)
1736:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1737:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
1738:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1739:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_InputValueType;
1740:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1741:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_OutputValueType;
1742:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #endif
1743:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1744:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1745:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1746:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1747:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _OutputValueType>)
1748:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_InputValueType,
1749:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						     _OutputValueType>)
1750:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_OutputValueType>)
1751:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1752:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
1753:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1754:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1755:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1756:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				      __result_first, __result_last,
1757:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				      __gnu_cxx::__ops::__iter_less_iter());
1758:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1759:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1760:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1761:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence using a predicate for
1762:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         comparison.
ARM GAS  /tmp/ccCqaElO.s 			page 38


1763:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1764:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
1765:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another input iterator.
1766:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1767:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1768:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
1769:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1770:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
1771:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1772:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  to the range beginning at @p result_first, where the number of
1773:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1774:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1775:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1776:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1777:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p __comp(*j,*i) is false.
1778:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1779:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1780:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1781:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
1782:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1783:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _RandomAccessIterator
1784:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1785:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1786:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last,
1787:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _Compare __comp)
1788:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1789:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
1790:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1791:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_InputValueType;
1792:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1793:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_OutputValueType;
1794:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #endif
1795:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1796:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
1797:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1798:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1799:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1800:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1801:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _OutputValueType>)
1802:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1803:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _InputValueType, _OutputValueType>)
1804:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1805:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _OutputValueType, _OutputValueType>)
1806:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1807:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
1808:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1809:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1810:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1811:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				      __result_first, __result_last,
1812:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
1813:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1814:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1815:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1816:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1817:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1818:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1819:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unguarded_linear_insert(_RandomAccessIterator __last,
ARM GAS  /tmp/ccCqaElO.s 			page 39


1820:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			      _Compare __comp)
1821:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1822:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::value_type
1823:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
1824:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RandomAccessIterator __next = __last;
1825:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       --__next;
1826:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__comp(__val, __next))
1827:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1828:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
1829:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __last = __next;
1830:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__next;
1831:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1832:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
1833:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1834:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1835:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1836:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1837:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1838:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1839:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __insertion_sort(_RandomAccessIterator __first,
1840:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _RandomAccessIterator __last, _Compare __comp)
1841:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1842:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last) return;
1843:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1844:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
1845:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1846:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__i, __first))
1847:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
1848:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      typename iterator_traits<_RandomAccessIterator>::value_type
1849:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__val = _GLIBCXX_MOVE(*__i);
1850:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
1851:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
1852:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
1853:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
1854:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::__unguarded_linear_insert(__i,
1855:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1856:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1857:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1858:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1859:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1860:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1861:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1862:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline void
1863:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unguarded_insertion_sort(_RandomAccessIterator __first,
1864:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			       _RandomAccessIterator __last, _Compare __comp)
1865:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1866:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
1867:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__unguarded_linear_insert(__i,
1868:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1869:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1870:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1871:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
1872:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @doctodo
1873:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This controls some aspect of the sort routines.
1874:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
1875:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   enum { _S_threshold = 16 };
1876:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccCqaElO.s 			page 40


1877:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1878:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1879:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1880:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1881:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __final_insertion_sort(_RandomAccessIterator __first,
1882:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _RandomAccessIterator __last, _Compare __comp)
1883:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1884:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
1885:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1886:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
1887:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
1888:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					  __comp);
1889:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1890:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
1891:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__insertion_sort(__first, __last, __comp);
1892:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1893:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1894:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function...
1895:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1896:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1897:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _RandomAccessIterator
1898:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unguarded_partition(_RandomAccessIterator __first,
1899:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			  _RandomAccessIterator __last,
1900:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			  _RandomAccessIterator __pivot, _Compare __comp)
1901:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1902:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (true)
1903:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1904:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
1905:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__first;
1906:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__last;
1907:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
1908:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    --__last;
1909:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (!(__first < __last))
1910:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __first;
1911:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1912:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
1913:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1914:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1915:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1916:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function...
1917:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1918:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1919:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _RandomAccessIterator
1920:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __unguarded_partition_pivot(_RandomAccessIterator __first,
1921:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				_RandomAccessIterator __last, _Compare __comp)
1922:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1923:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
1924:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
1925:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  __comp);
1926:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__unguarded_partition(__first + 1, __last, __first, __comp);
1927:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1928:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1929:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1930:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1931:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline void
1932:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __partial_sort(_RandomAccessIterator __first,
1933:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _RandomAccessIterator __middle,
ARM GAS  /tmp/ccCqaElO.s 			page 41


1934:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _RandomAccessIterator __last,
1935:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _Compare __comp)
1936:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1937:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__heap_select(__first, __middle, __last, __comp);
1938:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__sort_heap(__first, __middle, __comp);
1939:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1940:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1941:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1942:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1943:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1944:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1945:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
1946:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _RandomAccessIterator __last,
1947:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _Size __depth_limit, _Compare __comp)
1948:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1949:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
1950:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1951:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1952:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
1953:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::__partial_sort(__first, __last, __last, __comp);
1954:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return;
1955:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
1956:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__depth_limit;
1957:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1958:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1959:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
1960:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __last = __cut;
1961:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1962:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1963:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1964:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // sort
1965:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1966:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1967:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1968:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline void
1969:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
1970:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   _Compare __comp)
1971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first != __last)
1973:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1974:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
1975:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				std::__lg(__last - __first) * 2,
1976:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__comp);
1977:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__final_insertion_sort(__first, __last, __comp);
1978:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
1979:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
1980:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
1981:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1982:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1983:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
1984:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
1985:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Size __depth_limit,
1986:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _Compare __comp)
1987:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
1988:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__last - __first > 3)
1989:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
1990:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__depth_limit == 0)
ARM GAS  /tmp/ccCqaElO.s 			page 42


1991:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
1992:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::__heap_select(__first, __nth + 1, __last, __comp);
1993:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      // Place the nth largest element in its final position.
1994:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::iter_swap(__first, __nth);
1995:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return;
1996:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
1997:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__depth_limit;
1998:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1999:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
2000:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__cut <= __nth)
2001:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __first = __cut;
2002:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2003:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __last = __cut;
2004:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2005:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2006:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2007:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2008:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // nth_element
2009:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2010:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // lower_bound moved to stl_algobase.h
2011:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2012:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2013:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Finds the first position in which @p __val could be inserted
2014:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         without changing the ordering.
2015:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2016:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2017:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2018:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2019:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2020:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return An iterator pointing to the first element <em>not less
2021:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           than</em> @p __val, or end() if every element is less
2022:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           than @p __val.
2023:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2024:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2025:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2026:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2027:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2028:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2029:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2030:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
2031:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
2032:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2033:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2034:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2035:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2036:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2037:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2038:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2039:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						__val, __comp);
2040:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2041:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__lower_bound(__first, __last, __val,
2042:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp));
2043:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2044:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2045:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2046:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2047:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
ARM GAS  /tmp/ccCqaElO.s 			page 43


2048:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2049:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2050:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2051:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2052:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_DistanceType;
2053:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2054:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2055:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2056:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__len > 0)
2057:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2058:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2059:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2060:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2061:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__val, __middle))
2062:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __len = __half;
2063:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2064:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2065:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __first = __middle;
2066:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first;
2067:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2068:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2069:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2070:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __first;
2071:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2072:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2073:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2074:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2075:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         without changing the ordering.
2076:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2077:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2078:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2079:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2080:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2081:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2082:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2083:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2084:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2085:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2086:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
2087:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2088:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		const _Tp& __val)
2089:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2090:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2091:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2092:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2093:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2094:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2095:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2096:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2097:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2098:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2099:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         without changing the ordering.
2103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
ARM GAS  /tmp/ccCqaElO.s 			page 44


2105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
2118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						__val, __comp);
2127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp,
2133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _CompareItTp, typename _CompareTpIt>
2134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
2136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __equal_range(_ForwardIterator __first, _ForwardIterator __last,
2137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  const _Tp& __val,
2138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
2139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_DistanceType;
2142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__len > 0)
2146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp_it_val(__middle, __val))
2151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __first = __middle;
2153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first;
2154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else if (__comp_val_it(__val, __middle))
2157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    __len = __half;
2158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _ForwardIterator __left
2161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		= std::__lower_bound(__first, __middle, __val, __comp_it_val);
ARM GAS  /tmp/ccCqaElO.s 			page 45


2162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::advance(__first, __len);
2163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _ForwardIterator __right
2164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		= std::__upper_bound(++__middle, __first, __val, __comp_val_it);
2165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
2166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
2169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is equivalent to
2182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @code
2183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val),
2184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val))
2185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @endcode
2186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  but does not actually call those functions.
2187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		const _Tp& __val)
2193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_less_val(),
2205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This is equivalent to
ARM GAS  /tmp/ccCqaElO.s 			page 46


2219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @code
2220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val, __comp),
2221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val, __comp))
2222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @endcode
2223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  but does not actually call those functions.
2224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2238:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						__val, __comp);
2239:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2240:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						__val, __comp);
2241:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2242:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2243:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp),
2244:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2245:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2246:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2247:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2248:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2249:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2250:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2251:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2252:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2253:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return True if @p __val (or its equivalent) is in [@p
2254:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  __first,@p __last ].
2255:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2256:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2257:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2258:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2259:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2260:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2261:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     bool
2262:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2263:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  const _Tp& __val)
2264:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2265:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2266:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2267:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2270:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2271:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2272:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __i
2273:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2274:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_val());
2275:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __i != __last && !(__val < *__i);
ARM GAS  /tmp/ccCqaElO.s 			page 47


2276:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2277:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2278:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2279:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2280:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2281:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2282:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2283:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2284:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2285:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].
2286:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2287:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2288:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2289:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2290:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2291:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2292:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2293:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2294:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2295:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     bool
2296:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2297:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2298:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2299:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2300:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2302:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2304:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						__val, __comp);
2305:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2306:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 						__val, __comp);
2307:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2308:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __i
2309:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2310:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_val(__comp));
2311:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __i != __last && !bool(__comp(__val, *__i));
2312:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2313:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2314:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // merge
2315:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2316:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2317:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2318:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _OutputIterator, typename _Compare>
2319:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2320:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
2321:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			  _InputIterator2 __first2, _InputIterator2 __last2,
2322:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			  _OutputIterator __result, _Compare __comp)
2323:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2324:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2325:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2326:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2327:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2328:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2329:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first2;
2330:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2331:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2332:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
ARM GAS  /tmp/ccCqaElO.s 			page 48


2333:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2334:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first1;
2335:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__result;
2337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2338:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first1 != __last1)
2339:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_GLIBCXX_MOVE3(__first1, __last1, __result);
2340:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2341:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2342:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2343:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2344:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BidirectionalIterator3, typename _Compare>
2345:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2346:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
2347:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator1 __last1,
2348:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator2 __first2,
2349:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator2 __last2,
2350:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator3 __result,
2351:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   _Compare __comp)
2352:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2353:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first1 == __last1)
2354:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2355:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _GLIBCXX_MOVE_BACKWARD3(__first2, __last2, __result);
2356:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return;
2357:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2358:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__first2 == __last2)
2359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return;
2360:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       --__last1;
2362:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       --__last2;
2363:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (true)
2364:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2365:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__last2, __last1))
2366:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2367:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last1);
2368:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__first1 == __last1)
2369:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{
2370:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__first2, ++__last2, __result);
2371:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  return;
2372:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		}
2373:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      --__last1;
2374:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2375:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2376:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2377:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last2);
2378:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__first2 == __last2)
2379:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		return;
2380:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      --__last2;
2381:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2382:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2383:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2384:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2385:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2386:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2387:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Distance>
2388:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _BidirectionalIterator1
2389:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __rotate_adaptive(_BidirectionalIterator1 __first,
ARM GAS  /tmp/ccCqaElO.s 			page 49


2390:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _BidirectionalIterator1 __middle,
2391:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _BidirectionalIterator1 __last,
2392:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _Distance __len1, _Distance __len2,
2393:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _BidirectionalIterator2 __buffer,
2394:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _Distance __buffer_size)
2395:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2396:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _BidirectionalIterator2 __buffer_end;
2397:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len1 > __len2 && __len2 <= __buffer_size)
2398:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2399:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__len2)
2400:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2401:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2402:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __middle, __last);
2403:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE3(__buffer, __buffer_end, __first);
2404:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2405:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2406:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __first;
2407:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2408:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__len1 <= __buffer_size)
2409:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2410:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__len1)
2411:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2412:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2413:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _GLIBCXX_MOVE3(__middle, __last, __first);
2414:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE_BACKWARD3(__buffer, __buffer_end, __last);
2415:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2416:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2417:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return __last;
2418:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2419:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
2420:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return std::rotate(__first, __middle, __last);
2421:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2422:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2423:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2424:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance, 
2425:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Pointer, typename _Compare>
2426:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2427:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __merge_adaptive(_BidirectionalIterator __first,
2428:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __middle,
2429:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last,
2430:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _Distance __len1, _Distance __len2,
2431:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _Pointer __buffer, _Distance __buffer_size,
2432:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _Compare __comp)
2433:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2434:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len1 <= __len2 && __len1 <= __buffer_size)
2435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2436:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2437:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
2438:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __first, __comp);
2439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2440:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else if (__len2 <= __buffer_size)
2441:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__move_merge_adaptive_backward(__first, __middle, __buffer,
2444:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					      __buffer_end, __last, __comp);
2445:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2446:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
ARM GAS  /tmp/ccCqaElO.s 			page 50


2447:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2448:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __first_cut = __first;
2449:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __second_cut = __middle;
2450:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _Distance __len11 = 0;
2451:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _Distance __len22 = 0;
2452:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__len1 > __len2)
2453:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2454:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len11 = __len1 / 2;
2455:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::advance(__first_cut, __len11);
2456:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __second_cut
2457:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		= std::__lower_bound(__middle, __last, *__first_cut,
2458:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_comp_val(__comp));
2459:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len22 = std::distance(__middle, __second_cut);
2460:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2461:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2462:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2463:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len22 = __len2 / 2;
2464:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::advance(__second_cut, __len22);
2465:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __first_cut
2466:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		= std::__upper_bound(__first, __middle, *__second_cut,
2467:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__val_comp_iter(__comp));
2468:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      __len11 = std::distance(__first, __first_cut);
2469:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2470:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2471:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __new_middle
2472:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
2473:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __len1 - __len11, __len22, __buffer,
2474:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __buffer_size);
2475:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
2476:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__len22, __buffer, __buffer_size, __comp);
2477:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__merge_adaptive(__new_middle, __second_cut, __last,
2478:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__len1 - __len11,
2479:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__len2 - __len22, __buffer,
2480:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__buffer_size, __comp);
2481:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2482:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2483:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2484:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2485:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance,
2486:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
2487:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2488:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __merge_without_buffer(_BidirectionalIterator __first,
2489:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _BidirectionalIterator __middle,
2490:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _BidirectionalIterator __last,
2491:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _Distance __len1, _Distance __len2,
2492:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _Compare __comp)
2493:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2494:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len1 == 0 || __len2 == 0)
2495:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return;
2496:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2497:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len1 + __len2 == 2)
2498:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2499:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__middle, __first))
2500:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    std::iter_swap(__first, __middle);
2501:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return;
2502:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2503:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccCqaElO.s 			page 51


2504:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _BidirectionalIterator __first_cut = __first;
2505:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _BidirectionalIterator __second_cut = __middle;
2506:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Distance __len11 = 0;
2507:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Distance __len22 = 0;
2508:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len1 > __len2)
2509:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2510:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __len11 = __len1 / 2;
2511:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::advance(__first_cut, __len11);
2512:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __second_cut
2513:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    = std::__lower_bound(__middle, __last, *__first_cut,
2514:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__iter_comp_val(__comp));
2515:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __len22 = std::distance(__middle, __second_cut);
2516:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2517:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
2518:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2519:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __len22 = __len2 / 2;
2520:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::advance(__second_cut, __len22);
2521:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first_cut
2522:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    = std::__upper_bound(__first, __middle, *__second_cut,
2523:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__val_comp_iter(__comp));
2524:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __len11 = std::distance(__first, __first_cut);
2525:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2526:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2527:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _BidirectionalIterator __new_middle
2528:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	= std::rotate(__first_cut, __middle, __second_cut);
2529:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __first_cut, __new_middle,
2530:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  __len11, __len22, __comp);
2531:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__merge_without_buffer(__new_middle, __second_cut, __last,
2532:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  __len1 - __len11, __len2 - __len22, __comp);
2533:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2534:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2535:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2536:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2537:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __inplace_merge(_BidirectionalIterator __first,
2538:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _BidirectionalIterator __middle,
2539:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _BidirectionalIterator __last,
2540:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _Compare __comp)
2541:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2542:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::value_type
2543:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _ValueType;
2544:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::difference_type
2545:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _DistanceType;
2546:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2547:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __middle || __middle == __last)
2548:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return;
2549:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2550:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _DistanceType __len1 = std::distance(__first, __middle);
2551:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _DistanceType __len2 = std::distance(__middle, __last);
2552:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2553:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
2554:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _TmpBuf __buf(__first, __len1 + __len2);
2555:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2556:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__buf.begin() == 0)
2557:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__merge_without_buffer
2558:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __comp);
2559:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
2560:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__merge_adaptive
ARM GAS  /tmp/ccCqaElO.s 			page 52


2561:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __buf.begin(),
2562:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   _DistanceType(__buf.size()), __comp);
2563:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2564:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2565:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2566:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2567:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2568:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2569:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2570:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2571:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  Nothing.
2572:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2573:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2574:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__middle,__last), and puts the result in [__first,__last).  The
2575:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  output will be sorted.  The sort is @e stable, that is, for
2576:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  equivalent elements in the two ranges, elements from the first
2577:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  range will always come before elements from the second.
2578:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2579:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2580:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2581:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  distance(__first,__last).
2582:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2583:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2584:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline void
2585:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2586:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2587:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __last)
2588:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2589:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2590:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2591:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2592:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2593:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2594:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted(__first, __middle);
2595:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted(__middle, __last);
2596:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
2597:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2598:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2599:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_less_iter());
2600:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2601:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2602:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2604:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2605:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2606:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2607:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2609:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  Nothing.
2610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2611:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2612:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [middle,last), and puts the result in [__first,__last).  The output will
2613:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  be sorted.  The sort is @e stable, that is, for equivalent
2614:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  elements in the two ranges, elements from the first range will always
2615:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  come before elements from the second.
2616:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2617:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
ARM GAS  /tmp/ccCqaElO.s 			page 53


2618:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2619:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  distance(__first,__last).
2620:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2621:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2622:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2623:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2624:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2625:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline void
2626:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2627:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2628:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __last,
2629:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		  _Compare __comp)
2630:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2631:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2632:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2633:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2634:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2635:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2636:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2637:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__first, __middle, __comp);
2638:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__middle, __last, __comp);
2639:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
2640:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2641:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2642:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__comp));
2643:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2644:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2645:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2646:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the __merge_sort_loop routines.
2647:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
2648:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
2649:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
2650:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __move_merge(_InputIterator __first1, _InputIterator __last1,
2651:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		 _InputIterator __first2, _InputIterator __last2,
2652:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		 _OutputIterator __result, _Compare __comp)
2653:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2654:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2655:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2656:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2657:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2658:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2659:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first2;
2660:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2661:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
2662:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2663:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2664:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      ++__first1;
2665:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2666:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__result;
2667:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2668:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return _GLIBCXX_MOVE3(__first2, __last2,
2669:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    _GLIBCXX_MOVE3(__first1, __last1,
2670:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					   __result));
2671:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2672:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2673:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
2674:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
ARM GAS  /tmp/ccCqaElO.s 			page 54


2675:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2676:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __merge_sort_loop(_RandomAccessIterator1 __first,
2677:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator1 __last,
2678:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator2 __result, _Distance __step_size,
2679:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _Compare __comp)
2680:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2681:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _Distance __two_step = 2 * __step_size;
2682:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2683:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__last - __first >= __two_step)
2684:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2685:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __result = std::__move_merge(__first, __first + __step_size,
2686:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				       __first + __step_size,
2687:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				       __first + __two_step,
2688:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				       __result, __comp);
2689:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first += __two_step;
2690:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2691:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __step_size = std::min(_Distance(__last - __first), __step_size);
2692:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__move_merge(__first, __first + __step_size,
2694:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			__first + __step_size, __last, __result, __comp);
2695:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2696:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2697:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Distance,
2698:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
2699:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2700:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2701:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __chunk_insertion_sort(_RandomAccessIterator __first,
2702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2703:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _Distance __chunk_size, _Compare __comp)
2704:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2705:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__last - __first >= __chunk_size)
2706:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2707:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + __chunk_size, __comp);
2708:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first += __chunk_size;
2709:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2710:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2711:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2712:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2713:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   enum { _S_chunk_size = 7 };
2714:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2715:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
2716:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2717:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __merge_sort_with_buffer(_RandomAccessIterator __first,
2718:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     _RandomAccessIterator __last,
2719:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     _Pointer __buffer, _Compare __comp)
2720:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2721:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
2722:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	_Distance;
2723:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2724:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _Distance __len = __last - __first;
2725:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _Pointer __buffer_last = __buffer + __len;
2726:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2727:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _Distance __step_size = _S_chunk_size;
2728:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
2729:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2730:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__step_size < __len)
2731:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
ARM GAS  /tmp/ccCqaElO.s 			page 55


2732:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__merge_sort_loop(__first, __last, __buffer,
2733:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				 __step_size, __comp);
2734:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __step_size *= 2;
2735:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__merge_sort_loop(__buffer, __buffer_last, __first,
2736:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				 __step_size, __comp);
2737:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __step_size *= 2;
2738:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2739:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2740:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2741:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer,
2742:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2743:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2744:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __stable_sort_adaptive(_RandomAccessIterator __first,
2745:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2746:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _Pointer __buffer, _Distance __buffer_size,
2747:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			   _Compare __comp)
2748:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2749:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _Distance __len = (__last - __first + 1) / 2;
2750:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       const _RandomAccessIterator __middle = __first + __len;
2751:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__len > __buffer_size)
2752:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2753:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__first, __middle, __buffer,
2754:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				      __buffer_size, __comp);
2755:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__middle, __last, __buffer,
2756:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				      __buffer_size, __comp);
2757:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2758:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
2759:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2760:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
2761:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
2762:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2763:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__merge_adaptive(__first, __middle, __last,
2764:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    _Distance(__middle - __first),
2765:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    _Distance(__last - __middle),
2766:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    __buffer, __buffer_size,
2767:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			    __comp);
2768:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2769:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2770:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /// This is a helper function for the stable sorting routines.
2771:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
2772:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     void
2773:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __inplace_stable_sort(_RandomAccessIterator __first,
2774:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			  _RandomAccessIterator __last, _Compare __comp)
2775:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2776:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__last - __first < 15)
2777:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2778:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __last, __comp);
2779:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return;
2780:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2781:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _RandomAccessIterator __middle = __first + (__last - __first) / 2;
2782:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__inplace_stable_sort(__first, __middle, __comp);
2783:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__inplace_stable_sort(__middle, __last, __comp);
2784:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __middle, __last,
2785:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  __middle - __first,
2786:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  __last - __middle,
2787:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  __comp);
2788:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
ARM GAS  /tmp/ccCqaElO.s 			page 56


2789:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2790:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // stable_sort
2791:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2792:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // Set algorithms: includes, set_union, set_intersection, set_difference,
2793:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_symmetric_difference.  All of these algorithms have the precondition
2794:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // that their input ranges are sorted and the postcondition that their output
2795:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // ranges are sorted.
2796:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2797:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2798:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
2799:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2800:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     bool
2801:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __includes(_InputIterator1 __first1, _InputIterator1 __last1,
2802:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _InputIterator2 __first2, _InputIterator2 __last2,
2803:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	       _Compare __comp)
2804:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2805:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2806:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__comp(__first2, __first1))
2807:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return false;
2808:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	else if (__comp(__first1, __first2))
2809:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first1;
2810:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	else
2811:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  {
2812:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__first1;
2813:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    ++__first2;
2814:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  }
2815:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2816:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __first2 == __last2;
2817:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2818:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2819:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2820:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range.
2821:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2822:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2823:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2824:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2825:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if each element in [__first2,__last2) is contained in order
2826:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  within [__first1,__last1).  False otherwise.
2827:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup set_algorithms
2828:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2829:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2830:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2831:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1).
2832:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  The iterators over each range only move forward, so this is a
2833:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  linear algorithm.  If an element in [__first2,__last2) is not
2834:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  found before the search iterator reaches @p __last2, false is
2835:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  returned.
2836:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2837:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2>
2838:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2839:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
2840:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2841:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2)
2842:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2843:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2844:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2845:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
ARM GAS  /tmp/ccCqaElO.s 			page 57


2846:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2847:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2848:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2849:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2850:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2851:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2852:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first1, __last1, __first2);
2853:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first2, __last2, __first1);
2854:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive2(__first1, __last1);
2855:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive2(__first2, __last2);
2856:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2857:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2858:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_iter());
2859:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2860:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2861:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2862:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range
2863:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  using comparison.
2864:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup set_algorithms
2865:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2866:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2867:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2868:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2869:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    Comparison function to use.
2870:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return True if each element in [__first2,__last2) is contained
2871:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  in order within [__first1,__last1) according to comp.  False
2872:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  otherwise.  @ingroup set_algorithms
2873:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2874:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2875:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2876:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1),
2877:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  using comp to decide.  The iterators over each range only move
2878:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  forward, so this is a linear algorithm.  If an element in
2879:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  [__first2,__last2) is not found before the search iterator
2880:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  reaches @p __last2, false is returned.
2881:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2882:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2883:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Compare>
2884:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2885:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
2886:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2887:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2,
2888:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	     _Compare __comp)
2889:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2890:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2891:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2892:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2893:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2894:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2895:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2896:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2897:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2898:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2899:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first1, __last1, __first2, __comp);
2900:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first2, __last2, __first1, __comp);
2901:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred2(__first1, __last1, __comp);
2902:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred2(__first2, __last2, __comp);
ARM GAS  /tmp/ccCqaElO.s 			page 58


2903:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2904:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2905:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
2906:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2907:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2908:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // nth_element
2909:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // merge
2910:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_difference
2911:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_intersection
2912:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_union
2913:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // stable_sort
2914:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // set_symmetric_difference
2915:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // min_element
2916:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // max_element
2917:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2918:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2919:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2920:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     bool
2921:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __next_permutation(_BidirectionalIterator __first,
2922:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
2923:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2924:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
2925:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return false;
2926:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
2927:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       ++__i;
2928:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__i == __last)
2929:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return false;
2930:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __i = __last;
2931:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       --__i;
2932:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2933:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for(;;)
2934:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
2935:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
2936:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__i;
2937:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__i, __ii))
2938:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2939:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
2940:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      while (!__comp(__i, --__j))
2941:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{}
2942:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
2943:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
2944:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2945:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return true;
2946:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2947:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__i == __first)
2948:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
2949:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
2950:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2951:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return false;
2952:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
2953:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
2954:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2955:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2956:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2957:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering.
2958:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2959:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
ARM GAS  /tmp/ccCqaElO.s 			page 59


2960:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
2961:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2962:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2963:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
2964:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the next one of this set.
2965:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Returns true if there are more sequences to generate.  If the sequence
2966:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  is the largest of the set, the smallest is generated and false returned.
2967:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
2968:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2969:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2970:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
2971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
2973:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
2974:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
2975:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2976:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2977:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2978:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2979:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2980:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
2981:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2982:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__next_permutation
2983:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
2984:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
2985:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
2986:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
2987:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering using
2988:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          comparison functor.
2989:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2990:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
2991:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
2992:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
2993:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2994:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
2995:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
2996:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
2997:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  sequence into the next one of this set.  Returns true if there are more
2998:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  sequences to generate.  If the sequence is the largest of the set, the
2999:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  smallest is generated and false returned.
3000:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3001:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3002:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3003:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3004:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
3005:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3006:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3007:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3008:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3009:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3010:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3011:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3012:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3013:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3014:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3015:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3016:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__next_permutation
ARM GAS  /tmp/ccCqaElO.s 			page 60


3017:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
3018:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3019:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3020:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3021:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3022:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     bool
3023:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __prev_permutation(_BidirectionalIterator __first,
3024:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
3025:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3026:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
3027:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return false;
3028:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
3029:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       ++__i;
3030:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__i == __last)
3031:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return false;
3032:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __i = __last;
3033:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       --__i;
3034:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3035:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for(;;)
3036:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3037:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
3038:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  --__i;
3039:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__ii, __i))
3040:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
3041:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
3042:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      while (!__comp(--__j, __i))
3043:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		{}
3044:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
3045:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
3046:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3047:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return true;
3048:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
3049:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__i == __first)
3050:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
3051:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
3052:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3053:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      return false;
3054:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
3055:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3056:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3057:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3058:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3059:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering.
3060:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3061:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3062:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3063:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3064:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
3065:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
3066:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the previous one of this
3067:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  set.  Returns true if there are more sequences to generate.  If the
3068:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  sequence is the smallest of the set, the largest is generated and false
3069:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  returned.
3070:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3071:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
3072:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3073:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
ARM GAS  /tmp/ccCqaElO.s 			page 61


3074:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3075:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
3076:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3077:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3078:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3079:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3080:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3081:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3082:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3083:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3084:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3085:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3086:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_less_iter());
3087:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3088:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3089:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3090:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering using
3091:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          comparison functor.
3092:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3093:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3094:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3095:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
3096:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3097:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
3098:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
3099:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
3100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  sequence into the previous one of this set.  Returns true if there are
3101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  more sequences to generate.  If the sequence is the smallest of the set,
3102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  the largest is generated and false returned.
3103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
3121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // replace
3124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // replace_if
3125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _OutputIterator
3130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __replace_copy_if(_InputIterator __first, _InputIterator __last,
ARM GAS  /tmp/ccCqaElO.s 			page 62


3131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _OutputIterator __result,
3132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _Predicate __pred, const _Tp& __new_value)
3133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first, (void)++__result)
3135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__pred(__first))
3136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *__result = __new_value;
3137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	else
3138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  *__result = *__first;
3139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __result;
3140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each element of one value with another
3144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         value.
3145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
3149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p result+(last-first).
3151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
3152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies each element in the input range @p [__first,__last) to the
3153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  output range @p [__result,__result+(__last-__first)) replacing elements
3154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  equal to @p __old_value with @p __new_value.
3155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
3157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
3159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     replace_copy(_InputIterator __first, _InputIterator __last,
3160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		 _OutputIterator __result,
3161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		 const _Tp& __old_value, const _Tp& __new_value)
3162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_equals_val(__old_value),
3173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					      __new_value);
3174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each value for which a predicate
3178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *         returns true with another value.
3179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred       A predicate.
3184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p __result+(__last-__first).
3186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *
3187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) to the range
ARM GAS  /tmp/ccCqaElO.s 			page 63


3188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p [__result,__result+(__last-__first)) replacing elements for which
3189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @p __pred returns true with @p __new_value.
3190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _OutputIterator
3195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     replace_copy_if(_InputIterator __first, _InputIterator __last,
3196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _OutputIterator __result,
3197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _Predicate __pred, const _Tp& __new_value)
3198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred),
3209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 					      __new_value);
3210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
3213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted.
3215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
3221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last)
3224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last) == __last; }
3225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted
3228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          according to a comparison functor.
3229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3238:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last,
3239:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      _Compare __comp)
3240:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last, __comp) == __last; }
3241:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3242:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3243:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3244:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _ForwardIterator
ARM GAS  /tmp/ccCqaElO.s 			page 64


3245:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3246:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		      _Compare __comp)
3247:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3248:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last)
3249:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return __last;
3250:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3251:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3252:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (++__next; __next != __last; __first = __next, (void)++__next)
3253:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (__comp(__next, __first))
3254:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  return __next;
3255:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __next;
3256:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3257:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3258:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3259:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence.
3260:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3261:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3262:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3263:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3264:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3265:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3266:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
3267:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
3269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)
3270:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3271:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3272:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3273:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3274:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3275:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3276:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3277:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3278:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3279:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_less_iter());
3280:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3281:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3282:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3283:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence using comparison functor.
3284:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3285:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3286:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3287:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3288:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3289:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3290:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3291:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3292:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3293:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _ForwardIterator
3294:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3295:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		    _Compare __comp)
3296:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3297:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3298:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3299:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3300:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
ARM GAS  /tmp/ccCqaElO.s 			page 65


3302:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3304:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3305:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3306:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_comp_iter(__comp));
3307:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3308:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3309:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3310:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3311:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3312:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3313:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3314:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3315:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  __b) otherwise.
3316:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3317:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp>
3318:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3319:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3320:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b)
3321:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3322:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3323:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
3324:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3325:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __b < __a ? pair<const _Tp&, const _Tp&>(__b, __a)
3326:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		       : pair<const _Tp&, const _Tp&>(__a, __b);
3327:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3328:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3329:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3330:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3331:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3332:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3333:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3334:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp  A @link comparison_functors comparison functor @endlink.
3335:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  __b) otherwise.
3337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3338:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3339:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3340:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3341:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)
3342:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3343:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return __comp(__b, __a) ? pair<const _Tp&, const _Tp&>(__b, __a)
3344:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			      : pair<const _Tp&, const _Tp&>(__a, __b);
3345:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3346:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3347:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3348:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3349:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
3350:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3351:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _Compare __comp)
3352:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3353:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3354:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__first == __last
3355:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  || ++__next == __last)
3356:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	return std::make_pair(__first, __first);
3357:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3358:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       _ForwardIterator __min{}, __max{};
ARM GAS  /tmp/ccCqaElO.s 			page 66


3359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__comp(__next, __first))
3360:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __min = __next;
3362:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __max = __first;
3363:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3364:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
3365:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3366:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __min = __first;
3367:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __max = __next;
3368:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3369:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3370:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __first = __next;
3371:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       ++__first;
3372:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3373:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       while (__first != __last)
3374:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3375:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __next = __first;
3376:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (++__next == __last)
3377:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
3378:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3379:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__min = __first;
3380:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      else if (!__comp(__first, __max))
3381:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__max = __first;
3382:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      break;
3383:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
3384:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3385:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__comp(__next, __first))
3386:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
3387:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__comp(__next, __min))
3388:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__min = __next;
3389:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (!__comp(__first, __max))
3390:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__max = __first;
3391:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
3392:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  else
3393:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    {
3394:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3395:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__min = __first;
3396:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      if (!__comp(__next, __max))
3397:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__max = __next;
3398:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    }
3399:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3400:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  __first = __next;
3401:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first;
3402:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3403:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3404:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::make_pair(__min, __max);
3405:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3406:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3407:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3408:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3409:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          elements in a range.
3410:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3411:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3412:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3413:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3414:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3415:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
ARM GAS  /tmp/ccCqaElO.s 			page 67


3416:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3417:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3418:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
3419:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3420:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3421:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last)
3422:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3423:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3424:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3425:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3426:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3427:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3428:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3429:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3430:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3431:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_less_iter());
3432:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3433:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3434:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3436:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          elements in a range.
3437:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3438:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3440:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __comp   Comparison functor.
3441:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3444:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3445:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3446:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3447:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3448:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3449:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3450:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _Compare __comp)
3451:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3452:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3453:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3454:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3455:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3456:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3457:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3458:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3459:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3460:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3461:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__comp));
3462:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3463:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3464:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   // N2722 + DR 915.
3465:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp>
3466:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3467:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _Tp
3468:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     min(initializer_list<_Tp> __l)
3469:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end()); }
3470:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3471:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3472:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
ARM GAS  /tmp/ccCqaElO.s 			page 68


3473:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _Tp
3474:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     min(initializer_list<_Tp> __l, _Compare __comp)
3475:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end(), __comp); }
3476:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3477:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp>
3478:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3479:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _Tp
3480:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     max(initializer_list<_Tp> __l)
3481:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end()); }
3482:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3483:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3484:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3485:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline _Tp
3486:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     max(initializer_list<_Tp> __l, _Compare __comp)
3487:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end(), __comp); }
3488:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3489:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp>
3490:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3491:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3492:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l)
3493:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3494:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3495:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end());
3496:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3497:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3498:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3499:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3500:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3501:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3502:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l, _Compare __comp)
3503:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3504:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3505:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end(), __comp);
3506:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3507:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3508:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3509:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3510:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3511:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          to the first sequence.
3512:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3513:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3514:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3515:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3516:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3517:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in
3518:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          the range [__first2, __first2 + (__last1 - __first1)),
3519:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          beginning with ForwardIterator2 begin, such that
3520:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          equal(__first1, __last1, __begin, __pred) returns true;
3521:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          otherwise, returns false.
3522:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3523:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3524:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3525:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3526:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3527:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3528:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _BinaryPredicate __pred)
3529:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
ARM GAS  /tmp/ccCqaElO.s 			page 69


3530:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // concept requirements
3531:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3532:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3533:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3534:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
3535:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
3536:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3537:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3538:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3539:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3540:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3541:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3542:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #if __cplusplus > 201103L
3543:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3544:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3545:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3546:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     bool
3547:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3548:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3549:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		     _BinaryPredicate __pred)
3550:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3551:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       using _Cat1
3552:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator1>::iterator_category;
3553:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       using _Cat2
3554:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator2>::iterator_category;
3555:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;
3556:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;
3557:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       constexpr bool __ra_iters = _It1_is_RA() && _It2_is_RA();
3558:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__ra_iters)
3559:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3560:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3561:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3562:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__d1 != __d2)
3563:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return false;
3564:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3565:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3566:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3567:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       // have the same elements in the same order.
3568:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (; __first1 != __last1 && __first2 != __last2;
3569:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  ++__first1, (void)++__first2)
3570:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3571:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  break;
3572:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3573:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       if (__ra_iters)
3574:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3575:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__first1 == __last1)
3576:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return true;
3577:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3578:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       else
3579:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3580:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3581:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3582:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__d1 == 0 && __d2 == 0)
3583:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return true;
3584:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__d1 != __d2)
3585:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return false;
3586:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
ARM GAS  /tmp/ccCqaElO.s 			page 70


3587:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3588:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3589:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	{
3590:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3591:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3592:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3593:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3594:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  auto __matches = std::__count_if(__first2, __last2,
3595:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3596:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	  if (0 == __matches
3597:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      || std::__count_if(__scan, __last1,
3598:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3599:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	      != __matches)
3600:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	    return false;
3601:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	}
3602:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return true;
3603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3604:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3605:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3606:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutaion of the second sequence is equal
3607:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          to the first sequence.
3608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3609:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3611:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3612:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3613:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3614:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3615:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          such that equal(__first1, __last1, begin) returns true;
3616:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          otherwise, returns false.
3617:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3618:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3619:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3620:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3621:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3622:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
3623:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3624:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3625:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3626:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3627:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return
3628:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	std::__is_permutation(__first1, __last1, __first2, __last2,
3629:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__iter_equal_to_iter());
3630:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3631:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3632:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3633:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3634:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          to the first sequence.
3635:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3636:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3637:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3638:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3639:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3640:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3641:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3642:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3643:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          such that equal(__first1, __last1, __begin, __pred) returns true;
ARM GAS  /tmp/ccCqaElO.s 			page 71


3644:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *          otherwise, returns false.
3645:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   */
3646:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3647:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3648:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3649:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     inline bool
3650:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3651:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3652:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 		   _BinaryPredicate __pred)
3653:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3654:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3655:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3656:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3657:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2, __last2,
3658:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3659:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
3660:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3661:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #if __cplusplus > 201402L
3662:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3663:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** #define __cpp_lib_clamp 201603
3664:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h **** 
3665:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   /**
3666:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @brief  Returns the value clamped between lo and hi.
3667:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3668:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __val  A value of arbitrary type.
3669:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __lo   A lower limit of arbitrary type.
3670:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @param  __hi   An upper limit of arbitrary type.
3671:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    *  @return max(__val, __lo) if __val < __hi or min(__val, __hi) otherwise.
3672:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****    */
3673:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****   template<typename _Tp>
3674:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     constexpr const _Tp&
3675:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
 258              		.loc 2 3675 5
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 16
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              	.LCFI15:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 7, -4
 267 0002 85B0     		sub	sp, sp, #20
 268              	.LCFI16:
 269              		.cfi_def_cfa_offset 24
 270 0004 00AF     		add	r7, sp, #0
 271              	.LCFI17:
 272              		.cfi_def_cfa_register 7
 273 0006 F860     		str	r0, [r7, #12]
 274 0008 B960     		str	r1, [r7, #8]
 275 000a 7A60     		str	r2, [r7, #4]
3676:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     {
3677:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       __glibcxx_assert(!(__hi < __lo));
3678:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****       return (__val < __lo) ? __lo : (__hi < __val) ? __hi : __val;
 276              		.loc 2 3678 21
 277 000c FB68     		ldr	r3, [r7, #12]
 278 000e 93ED007A 		vldr.32	s14, [r3]
 279 0012 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccCqaElO.s 			page 72


 280 0014 D3ED007A 		vldr.32	s15, [r3]
 281              		.loc 2 3678 29
 282 0018 B4EEE77A 		vcmpe.f32	s14, s15
 283 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 284 0020 01D5     		bpl	.L22
 285              		.loc 2 3678 29 is_stmt 0 discriminator 1
 286 0022 BB68     		ldr	r3, [r7, #8]
 287              		.loc 2 3678 62 is_stmt 1 discriminator 1
 288 0024 0DE0     		b	.L19
 289              	.L22:
 290              		.loc 2 3678 44 discriminator 2
 291 0026 7B68     		ldr	r3, [r7, #4]
 292 0028 93ED007A 		vldr.32	s14, [r3]
 293 002c FB68     		ldr	r3, [r7, #12]
 294 002e D3ED007A 		vldr.32	s15, [r3]
 295              		.loc 2 3678 29 discriminator 2
 296 0032 B4EEE77A 		vcmpe.f32	s14, s15
 297 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 298 003a 01D5     		bpl	.L23
 299              		.loc 2 3678 29 is_stmt 0 discriminator 4
 300 003c 7B68     		ldr	r3, [r7, #4]
 301              		.loc 2 3678 62 is_stmt 1 discriminator 4
 302 003e 00E0     		b	.L19
 303              	.L23:
 304              		.loc 2 3678 29 discriminator 5
 305 0040 FB68     		ldr	r3, [r7, #12]
 306              	.L19:
3679:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h ****     }
 307              		.loc 2 3679 5 discriminator 9
 308 0042 1846     		mov	r0, r3
 309 0044 1437     		adds	r7, r7, #20
 310              	.LCFI18:
 311              		.cfi_def_cfa_offset 4
 312 0046 BD46     		mov	sp, r7
 313              	.LCFI19:
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 0048 5DF8047B 		ldr	r7, [sp], #4
 317              	.LCFI20:
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 004c 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE4794:
 324              		.section	.text._ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_,"axG",%progbits,
 325              		.align	1
 326              		.weak	_ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	_ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_:
 333              	.LFB4798:
 334              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility"
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // <utility> -*- C++ -*-
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  /tmp/ccCqaElO.s 			page 73


   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** //
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // software; you can redistribute it and/or modify it under the
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // terms of the GNU General Public License as published by the
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // any later version.
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // This library is distributed in the hope that it will be useful,
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // GNU General Public License for more details.
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // 3.1, as published by the Free Software Foundation.
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // You should have received a copy of the GNU General Public License and
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // <http://www.gnu.org/licenses/>.
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** /*
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Copyright (c) 1994
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Hewlett-Packard Company
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * provided that the above copyright notice appear in all copies and
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * that both that copyright notice and this permission notice appear
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * representations about the suitability of this software for any
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Copyright (c) 1996,1997
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * provided that the above copyright notice appear in all copies and
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * that both that copyright notice and this permission notice appear
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * representations about the suitability of this software for any
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  */
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** /** @file include/utility
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *  This is a Standard C++ Library header.
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  */
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #ifndef _GLIBCXX_UTILITY
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #define _GLIBCXX_UTILITY 1
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #pragma GCC system_header
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** /**
ARM GAS  /tmp/ccCqaElO.s 			page 74


  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * @defgroup utilities Utilities
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  *
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * Components deemed generally useful. Includes pair, tuple,
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * forward/move helpers, ratio, function object, metaprogramming and
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  * type traits, time, date, and memory functions.
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****  */
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <bits/c++config.h>
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <bits/stl_relops.h>
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <bits/stl_pair.h>
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #if __cplusplus >= 201103L
  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <type_traits>
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <bits/move.h>
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <initializer_list>
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #if __cplusplus > 201703L
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #include <ext/numeric_traits.h>
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #endif
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** namespace std _GLIBCXX_VISIBILITY(default)
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** {
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   /// Finds the size of a given tuple type.
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<typename _Tp>
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_size;
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   // 2313. tuple_size should always derive from integral_constant<size_t, N>
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   // 2770. tuple_size<const T> specialization is not SFINAE compatible
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<typename _Tp,
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 	   typename _Up = typename remove_cv<_Tp>::type,
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 	   typename = typename enable_if<is_same<_Tp, _Up>::value>::type,
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 	   size_t = tuple_size<_Tp>::value>
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     using __enable_if_has_tuple_size = _Tp;
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<typename _Tp>
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_size<const __enable_if_has_tuple_size<_Tp>>
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     : public tuple_size<_Tp> { };
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<typename _Tp>
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_size<volatile __enable_if_has_tuple_size<_Tp>>
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     : public tuple_size<_Tp> { };
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<typename _Tp>
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_size<const volatile __enable_if_has_tuple_size<_Tp>>
 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     : public tuple_size<_Tp> { };
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   /// Gives the type of the ith element of a given tuple type.
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t __i, typename _Tp>
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_element;
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   // Duplicate of C++14's tuple_element_t for internal use in C++11 mode
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t __i, typename _Tp>
ARM GAS  /tmp/ccCqaElO.s 			page 75


 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     using __tuple_element_t = typename tuple_element<__i, _Tp>::type;
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t __i, typename _Tp>
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_element<__i, const _Tp>
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     {
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       typedef typename add_const<__tuple_element_t<__i, _Tp>>::type type;
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     };
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t __i, typename _Tp>
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_element<__i, volatile _Tp>
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     {
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       typedef typename add_volatile<__tuple_element_t<__i, _Tp>>::type type;
 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     };
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t __i, typename _Tp>
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_element<__i, const volatile _Tp>
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     {
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       typedef typename add_cv<__tuple_element_t<__i, _Tp>>::type type;
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     };
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #if __cplusplus >= 201402L
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // The standard says this macro and alias template should be in <tuple>
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // but we define them here, to be available when the partial specializations
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** // of tuple_element<pair<T,U>> and tuple_element<array<T,N>> are defined.
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #define __cpp_lib_tuple_element_t 201402L
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t __i, typename _Tp>
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     using tuple_element_t = typename tuple_element<__i, _Tp>::type;
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** #endif
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   // Various functions which give std::pair a tuple-like interface.
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   /// Partial specialization for std::pair
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<typename _T1, typename _T2>
 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct __is_tuple_like_impl<std::pair<_T1, _T2>> : true_type
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     { };
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   /// Partial specialization for std::pair
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<class _Tp1, class _Tp2>
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_size<std::pair<_Tp1, _Tp2>>
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     : public integral_constant<std::size_t, 2> { };
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   /// Partial specialization for std::pair
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<class _Tp1, class _Tp2>
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_element<0, std::pair<_Tp1, _Tp2>>
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     { typedef _Tp1 type; };
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   /// Partial specialization for std::pair
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<class _Tp1, class _Tp2>
 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct tuple_element<1, std::pair<_Tp1, _Tp2>>
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     { typedef _Tp2 type; };
 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t _Int>
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct __pair_get;
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<>
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct __pair_get<0>
ARM GAS  /tmp/ccCqaElO.s 			page 76


 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     {
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr _Tp1&
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __get(std::pair<_Tp1, _Tp2>& __pair) noexcept
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return __pair.first; }
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr _Tp1&&
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __move_get(std::pair<_Tp1, _Tp2>&& __pair) noexcept
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return std::forward<_Tp1>(__pair.first); }
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr const _Tp1&
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __const_get(const std::pair<_Tp1, _Tp2>& __pair) noexcept
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return __pair.first; }
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr const _Tp1&&
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __const_move_get(const std::pair<_Tp1, _Tp2>&& __pair) noexcept
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return std::forward<const _Tp1>(__pair.first); }
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     };
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<>
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     struct __pair_get<1>
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     {
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr _Tp2&
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __get(std::pair<_Tp1, _Tp2>& __pair) noexcept
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return __pair.second; }
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr _Tp2&&
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __move_get(std::pair<_Tp1, _Tp2>&& __pair) noexcept
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return std::forward<_Tp2>(__pair.second); }
 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr const _Tp2&
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __const_get(const std::pair<_Tp1, _Tp2>& __pair) noexcept
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return __pair.second; }
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****       template<typename _Tp1, typename _Tp2>
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         static constexpr const _Tp2&&
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         __const_move_get(const std::pair<_Tp1, _Tp2>&& __pair) noexcept
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return std::forward<const _Tp2>(__pair.second); }
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     };
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t _Int, class _Tp1, class _Tp2>
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     get(std::pair<_Tp1, _Tp2>& __in) noexcept
 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     { return __pair_get<_Int>::__get(__in); }
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****   template<std::size_t _Int, class _Tp1, class _Tp2>
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&&
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
 335              		.loc 3 228 5
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccCqaElO.s 			page 77


 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339 0000 80B5     		push	{r7, lr}
 340              	.LCFI21:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 82B0     		sub	sp, sp, #8
 345              	.LCFI22:
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              	.LCFI23:
 349              		.cfi_def_cfa_register 7
 350 0006 7860     		str	r0, [r7, #4]
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     { return __pair_get<_Int>::__move_get(std::move(__in)); }
 351              		.loc 3 229 52
 352 0008 7868     		ldr	r0, [r7, #4]
 353 000a FFF7FEFF 		bl	_ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_
 354 000e 0346     		mov	r3, r0
 355              		.loc 3 229 42
 356 0010 1846     		mov	r0, r3
 357 0012 FFF7FEFF 		bl	_ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E
 358 0016 0346     		mov	r3, r0
 359              		.loc 3 229 61
 360 0018 1846     		mov	r0, r3
 361 001a 0837     		adds	r7, r7, #8
 362              	.LCFI24:
 363              		.cfi_def_cfa_offset 8
 364 001c BD46     		mov	sp, r7
 365              	.LCFI25:
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 001e 80BD     		pop	{r7, pc}
 369              		.cfi_endproc
 370              	.LFE4798:
 372              		.section	.text._ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E,"axG",%progbits,_ZNSt10
 373              		.align	1
 374              		.weak	_ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	_ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E:
 381              	.LFB4799:
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return std::forward<_Tp1>(__pair.first); }
 382              		.loc 3 183 9
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386 0000 80B5     		push	{r7, lr}
 387              	.LCFI26:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              	.LCFI27:
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccCqaElO.s 			page 78


 395              	.LCFI28:
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 398              		.loc 3 184 44
 399 0008 7B68     		ldr	r3, [r7, #4]
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 400              		.loc 3 184 36
 401 000a 1846     		mov	r0, r3
 402 000c FFF7FEFF 		bl	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
 403 0010 0346     		mov	r3, r0
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 404              		.loc 3 184 52
 405 0012 1846     		mov	r0, r3
 406 0014 0837     		adds	r7, r7, #8
 407              	.LCFI29:
 408              		.cfi_def_cfa_offset 8
 409 0016 BD46     		mov	sp, r7
 410              	.LCFI30:
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 0018 80BD     		pop	{r7, pc}
 414              		.cfi_endproc
 415              	.LFE4799:
 417              		.section	.text._ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_,"axG",%progbits,_ZSt4mo
 418              		.align	1
 419              		.weak	_ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv4-sp-d16
 425              	_ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_:
 426              	.LFB4800:
 427              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** //
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // any later version.
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // GNU General Public License for more details.
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  /tmp/ccCqaElO.s 			page 79


  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** /** @file bits/move.h
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****  */
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #ifndef _MOVE_H
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #define _MOVE_H 1
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #include <bits/c++config.h>
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #if __cplusplus < 201103L
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** # include <bits/concept_check.h>
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #endif
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** {
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   /**
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @brief Same as C++11 std::addressof
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @ingroup utilities
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    */
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   template<typename _Tp>
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return __builtin_addressof(__r); }
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #if __cplusplus >= 201103L
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** } // namespace
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** {
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   /**
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @addtogroup utilities
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @{
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    */
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   /**
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    */
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   template<typename _Tp>
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     constexpr _Tp&&
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   /**
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @brief  Forward an rvalue.
ARM GAS  /tmp/ccCqaElO.s 			page 80


  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    */
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   template<typename _Tp>
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     constexpr _Tp&&
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     {
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****       return static_cast<_Tp&&>(__t);
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     }
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   /**
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   */
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****   template<typename _Tp>
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     move(_Tp&& __t) noexcept
 428              		.loc 4 101 5
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI31:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI32:
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              	.LCFI33:
 442              		.cfi_def_cfa_register 7
 443 0006 7860     		str	r0, [r7, #4]
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 444              		.loc 4 102 74
 445 0008 7B68     		ldr	r3, [r7, #4]
 446              		.loc 4 102 77
 447 000a 1846     		mov	r0, r3
 448 000c 0C37     		adds	r7, r7, #12
 449              	.LCFI34:
 450              		.cfi_def_cfa_offset 4
 451 000e BD46     		mov	sp, r7
 452              	.LCFI35:
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 0010 5DF8047B 		ldr	r7, [sp], #4
 456              	.LCFI36:
 457              		.cfi_restore 7
 458              		.cfi_def_cfa_offset 0
 459 0014 7047     		bx	lr
 460              		.cfi_endproc
 461              	.LFE4800:
 463              		.section	.text._ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE,"axG",%progbits,_ZSt7forwardIfE
ARM GAS  /tmp/ccCqaElO.s 			page 81


 464              		.align	1
 465              		.weak	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE:
 472              	.LFB4801:
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 473              		.loc 4 76 5
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              	.LCFI37:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 0002 83B0     		sub	sp, sp, #12
 483              	.LCFI38:
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              	.LCFI39:
 487              		.cfi_def_cfa_register 7
 488 0006 7860     		str	r0, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 489              		.loc 4 77 36
 490 0008 7B68     		ldr	r3, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 491              		.loc 4 77 39
 492 000a 1846     		mov	r0, r3
 493 000c 0C37     		adds	r7, r7, #12
 494              	.LCFI40:
 495              		.cfi_def_cfa_offset 4
 496 000e BD46     		mov	sp, r7
 497              	.LCFI41:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0010 5DF8047B 		ldr	r7, [sp], #4
 501              	.LCFI42:
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 0014 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE4801:
 508              		.section	.text._ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_,"axG",%progbits,
 509              		.align	1
 510              		.weak	_ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv4-sp-d16
 516              	_ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_:
 517              	.LFB4802:
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****     { return __pair_get<_Int>::__move_get(std::move(__in)); }
 518              		.loc 3 228 5
 519              		.cfi_startproc
ARM GAS  /tmp/ccCqaElO.s 			page 82


 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              	.LCFI43:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 82B0     		sub	sp, sp, #8
 528              	.LCFI44:
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              	.LCFI45:
 532              		.cfi_def_cfa_register 7
 533 0006 7860     		str	r0, [r7, #4]
 534              		.loc 3 229 52
 535 0008 7868     		ldr	r0, [r7, #4]
 536 000a FFF7FEFF 		bl	_ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_
 537 000e 0346     		mov	r3, r0
 538              		.loc 3 229 42
 539 0010 1846     		mov	r0, r3
 540 0012 FFF7FEFF 		bl	_ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E
 541 0016 0346     		mov	r3, r0
 542              		.loc 3 229 61
 543 0018 1846     		mov	r0, r3
 544 001a 0837     		adds	r7, r7, #8
 545              	.LCFI46:
 546              		.cfi_def_cfa_offset 8
 547 001c BD46     		mov	sp, r7
 548              	.LCFI47:
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 001e 80BD     		pop	{r7, pc}
 552              		.cfi_endproc
 553              	.LFE4802:
 555              		.section	.text._ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E,"axG",%progbits,_ZNSt10
 556              		.align	1
 557              		.weak	_ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu fpv4-sp-d16
 563              	_ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E:
 564              	.LFB4803:
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility ****         { return std::forward<_Tp2>(__pair.second); }
 565              		.loc 3 207 9
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              	.LCFI48:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 82B0     		sub	sp, sp, #8
 575              	.LCFI49:
 576              		.cfi_def_cfa_offset 16
 577 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccCqaElO.s 			page 83


 578              	.LCFI50:
 579              		.cfi_def_cfa_register 7
 580 0006 7860     		str	r0, [r7, #4]
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 581              		.loc 3 208 44
 582 0008 7B68     		ldr	r3, [r7, #4]
 583 000a 0433     		adds	r3, r3, #4
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 584              		.loc 3 208 36
 585 000c 1846     		mov	r0, r3
 586 000e FFF7FEFF 		bl	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
 587 0012 0346     		mov	r3, r0
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/utility **** 
 588              		.loc 3 208 53
 589 0014 1846     		mov	r0, r3
 590 0016 0837     		adds	r7, r7, #8
 591              	.LCFI51:
 592              		.cfi_def_cfa_offset 8
 593 0018 BD46     		mov	sp, r7
 594              	.LCFI52:
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 001a 80BD     		pop	{r7, pc}
 598              		.cfi_endproc
 599              	.LFE4803:
 601              		.section	.text._ZN18OpenLoopController6updateEm,"ax",%progbits
 602              		.align	1
 603              		.global	_ZN18OpenLoopController6updateEm
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv4-sp-d16
 609              	_ZN18OpenLoopController6updateEm:
 610              	.LFB4795:
 611              		.file 5 "Src/open_loop_controller.cpp"
   1:Src/open_loop_controller.cpp **** #include "open_loop_controller.hpp"
   2:Src/open_loop_controller.cpp **** #include "utils.hpp"
   3:Src/open_loop_controller.cpp **** 
   4:Src/open_loop_controller.cpp **** #include "axis.hpp"
   5:Src/open_loop_controller.cpp **** 
   6:Src/open_loop_controller.cpp **** 
   7:Src/open_loop_controller.cpp **** void OpenLoopController::update(uint32_t timestamp) {
 612              		.loc 5 7 53
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 192
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              	.LCFI53:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 B0B0     		sub	sp, sp, #192
 622              	.LCFI54:
 623              		.cfi_def_cfa_offset 200
 624 0004 00AF     		add	r7, sp, #0
 625              	.LCFI55:
 626              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccCqaElO.s 			page 84


 627 0006 7860     		str	r0, [r7, #4]
 628 0008 3960     		str	r1, [r7]
   8:Src/open_loop_controller.cpp ****     auto [prev_Id, prev_Iq] = Idq_setpoint_.previous().value_or(float2D{0.0f, 0.0f});
 629              		.loc 5 8 54
 630 000a 7B68     		ldr	r3, [r7, #4]
 631 000c 03F12402 		add	r2, r3, #36
 632 0010 07F11C03 		add	r3, r7, #28
 633 0014 1146     		mov	r1, r2
 634 0016 1846     		mov	r0, r3
 635 0018 FFF7FEFF 		bl	_ZN10OutputPortISt4pairIffEE8previousEv
 636              		.loc 5 8 73
 637 001c 4FF00003 		mov	r3, #0
 638 0020 3B63     		str	r3, [r7, #48]	@ float
 639              		.loc 5 8 79
 640 0022 4FF00003 		mov	r3, #0
 641 0026 7B63     		str	r3, [r7, #52]	@ float
 642              		.loc 5 8 83
 643 0028 07F13402 		add	r2, r7, #52
 644 002c 07F13001 		add	r1, r7, #48
 645 0030 07F12803 		add	r3, r7, #40
 646 0034 1846     		mov	r0, r3
 647 0036 FFF7FEFF 		bl	_ZNSt4pairIffEC1IffLb1EEEOT_OT0_
 648              		.loc 5 8 84
 649 003a 07F12802 		add	r2, r7, #40
 650 003e 07F11C03 		add	r3, r7, #28
 651 0042 1146     		mov	r1, r2
 652 0044 1846     		mov	r0, r3
 653 0046 FFF7FEFF 		bl	_ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_
 654 004a B0EE407A 		vmov.f32	s14, s0
 655 004e F0EE607A 		vmov.f32	s15, s1
 656 0052 87ED057A 		vstr.32	s14, [r7, #20]
 657 0056 C7ED067A 		vstr.32	s15, [r7, #24]
 658              		.loc 5 8 11
 659 005a 07F11403 		add	r3, r7, #20
 660 005e 1846     		mov	r0, r3
 661 0060 FFF7FEFF 		bl	_ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
 662 0064 C7F8BC00 		str	r0, [r7, #188]
 663              		.loc 5 8 20
 664 0068 07F11403 		add	r3, r7, #20
 665 006c 1846     		mov	r0, r3
 666 006e FFF7FEFF 		bl	_ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
 667 0072 C7F8B800 		str	r0, [r7, #184]
   9:Src/open_loop_controller.cpp ****     auto [prev_Vd, prev_Vq] = Vdq_setpoint_.previous().value_or(float2D{0.0f, 0.0f});
 668              		.loc 5 9 54
 669 0076 7B68     		ldr	r3, [r7, #4]
 670 0078 03F13002 		add	r2, r3, #48
 671 007c 07F13803 		add	r3, r7, #56
 672 0080 1146     		mov	r1, r2
 673 0082 1846     		mov	r0, r3
 674 0084 FFF7FEFF 		bl	_ZN10OutputPortISt4pairIffEE8previousEv
 675              		.loc 5 9 73
 676 0088 4FF00003 		mov	r3, #0
 677 008c FB64     		str	r3, [r7, #76]	@ float
 678              		.loc 5 9 79
 679 008e 4FF00003 		mov	r3, #0
 680 0092 3B65     		str	r3, [r7, #80]	@ float
 681              		.loc 5 9 83
ARM GAS  /tmp/ccCqaElO.s 			page 85


 682 0094 07F15002 		add	r2, r7, #80
 683 0098 07F14C01 		add	r1, r7, #76
 684 009c 07F14403 		add	r3, r7, #68
 685 00a0 1846     		mov	r0, r3
 686 00a2 FFF7FEFF 		bl	_ZNSt4pairIffEC1IffLb1EEEOT_OT0_
 687              		.loc 5 9 84
 688 00a6 07F14402 		add	r2, r7, #68
 689 00aa 07F13803 		add	r3, r7, #56
 690 00ae 1146     		mov	r1, r2
 691 00b0 1846     		mov	r0, r3
 692 00b2 FFF7FEFF 		bl	_ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_
 693 00b6 B0EE407A 		vmov.f32	s14, s0
 694 00ba F0EE607A 		vmov.f32	s15, s1
 695 00be 87ED037A 		vstr.32	s14, [r7, #12]
 696 00c2 C7ED047A 		vstr.32	s15, [r7, #16]
 697              		.loc 5 9 11
 698 00c6 07F10C03 		add	r3, r7, #12
 699 00ca 1846     		mov	r0, r3
 700 00cc FFF7FEFF 		bl	_ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
 701 00d0 C7F8B400 		str	r0, [r7, #180]
 702              		.loc 5 9 20
 703 00d4 07F10C03 		add	r3, r7, #12
 704 00d8 1846     		mov	r0, r3
 705 00da FFF7FEFF 		bl	_ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
 706 00de C7F8B000 		str	r0, [r7, #176]
  10:Src/open_loop_controller.cpp ****     float phase = phase_.previous().value_or(initial_phase_);
 707              		.loc 5 10 35
 708 00e2 7B68     		ldr	r3, [r7, #4]
 709 00e4 03F13C02 		add	r2, r3, #60
 710 00e8 07F15403 		add	r3, r7, #84
 711 00ec 1146     		mov	r1, r2
 712 00ee 1846     		mov	r0, r3
 713 00f0 FFF7FEFF 		bl	_ZN10OutputPortIfE8previousEv
 714              		.loc 5 10 46
 715 00f4 7B68     		ldr	r3, [r7, #4]
 716 00f6 03F11C02 		add	r2, r3, #28
 717              		.loc 5 10 45
 718 00fa 07F15403 		add	r3, r7, #84
 719 00fe 1146     		mov	r1, r2
 720 0100 1846     		mov	r0, r3
 721 0102 FFF7FEFF 		bl	_ZNOSt8optionalIfE8value_orIRfEEfOT_
 722 0106 87ED2B0A 		vstr.32	s0, [r7, #172]
  11:Src/open_loop_controller.cpp ****     float phase_vel = phase_vel_.previous().value_or(0.0f);
 723              		.loc 5 11 43
 724 010a 7B68     		ldr	r3, [r7, #4]
 725 010c 03F14402 		add	r2, r3, #68
 726 0110 07F15C03 		add	r3, r7, #92
 727 0114 1146     		mov	r1, r2
 728 0116 1846     		mov	r0, r3
 729 0118 FFF7FEFF 		bl	_ZN10OutputPortIfE8previousEv
 730              		.loc 5 11 54
 731 011c 4FF00003 		mov	r3, #0
 732 0120 7B66     		str	r3, [r7, #100]	@ float
 733              		.loc 5 11 53
 734 0122 07F16402 		add	r2, r7, #100
 735 0126 07F15C03 		add	r3, r7, #92
 736 012a 1146     		mov	r1, r2
ARM GAS  /tmp/ccCqaElO.s 			page 86


 737 012c 1846     		mov	r0, r3
 738 012e FFF7FEFF 		bl	_ZNOSt8optionalIfE8value_orIfEEfOT_
 739 0132 87ED2A0A 		vstr.32	s0, [r7, #168]
  12:Src/open_loop_controller.cpp **** 
  13:Src/open_loop_controller.cpp ****     (void)prev_Iq; // unused
  14:Src/open_loop_controller.cpp ****     (void)prev_Vq; // unused
  15:Src/open_loop_controller.cpp **** 
  16:Src/open_loop_controller.cpp ****     float dt = (float)(timestamp - timestamp_) / (float)TIM_1_8_CLOCK_HZ;
 740              		.loc 5 16 36
 741 0136 7B68     		ldr	r3, [r7, #4]
 742 0138 1B6A     		ldr	r3, [r3, #32]
 743              		.loc 5 16 34
 744 013a 3A68     		ldr	r2, [r7]
 745 013c D31A     		subs	r3, r2, r3
 746              		.loc 5 16 16
 747 013e 07EE903A 		vmov	s15, r3	@ int
 748 0142 B8EE677A 		vcvt.f32.u32	s14, s15
 749              		.loc 5 16 11
 750 0146 DFED7D6A 		vldr.32	s13, .L37
 751 014a C7EE267A 		vdiv.f32	s15, s14, s13
 752 014e C7ED297A 		vstr.32	s15, [r7, #164]
  17:Src/open_loop_controller.cpp ****     
  18:Src/open_loop_controller.cpp ****     Idq_setpoint_ = {
  19:Src/open_loop_controller.cpp ****         std::clamp(target_current_, prev_Id - max_current_ramp_ * dt, prev_Id + max_current_ramp_ *
 753              		.loc 5 19 20
 754 0152 7B68     		ldr	r3, [r7, #4]
 755 0154 03F11400 		add	r0, r3, #20
 756              		.loc 5 19 37
 757 0158 D7F8BC30 		ldr	r3, [r7, #188]
 758 015c 93ED007A 		vldr.32	s14, [r3]
 759              		.loc 5 19 47
 760 0160 7B68     		ldr	r3, [r7, #4]
 761 0162 D3ED016A 		vldr.32	s13, [r3, #4]
 762              		.loc 5 19 65
 763 0166 D7ED297A 		vldr.32	s15, [r7, #164]
 764 016a 66EEA77A 		vmul.f32	s15, s13, s15
 765              		.loc 5 19 45
 766 016e 77EE677A 		vsub.f32	s15, s14, s15
 767 0172 C7ED1C7A 		vstr.32	s15, [r7, #112]
 768              		.loc 5 19 71
 769 0176 D7F8BC30 		ldr	r3, [r7, #188]
 770 017a 93ED007A 		vldr.32	s14, [r3]
 771              		.loc 5 19 81
 772 017e 7B68     		ldr	r3, [r7, #4]
 773 0180 D3ED016A 		vldr.32	s13, [r3, #4]
 774              		.loc 5 19 99
 775 0184 D7ED297A 		vldr.32	s15, [r7, #164]
 776 0188 66EEA77A 		vmul.f32	s15, s13, s15
 777              		.loc 5 19 79
 778 018c 77EE277A 		vadd.f32	s15, s14, s15
 779 0190 C7ED1D7A 		vstr.32	s15, [r7, #116]
  20:Src/open_loop_controller.cpp ****         0.0f
  21:Src/open_loop_controller.cpp ****     };
 780              		.loc 5 21 5
 781 0194 07F17402 		add	r2, r7, #116
 782 0198 07F17003 		add	r3, r7, #112
 783 019c 1946     		mov	r1, r3
ARM GAS  /tmp/ccCqaElO.s 			page 87


 784 019e FFF7FEFF 		bl	_ZSt5clampIfERKT_S2_S2_S2_
 785 01a2 0146     		mov	r1, r0
  20:Src/open_loop_controller.cpp ****         0.0f
 786              		.loc 5 20 9
 787 01a4 4FF00003 		mov	r3, #0
 788 01a8 BB67     		str	r3, [r7, #120]	@ float
 789              		.loc 5 21 5
 790 01aa 07F17802 		add	r2, r7, #120
 791 01ae 07F16803 		add	r3, r7, #104
 792 01b2 1846     		mov	r0, r3
 793 01b4 FFF7FEFF 		bl	_ZNSt4pairIffEC1IfLb1EEERKfOT_
  18:Src/open_loop_controller.cpp ****         std::clamp(target_current_, prev_Id - max_current_ramp_ * dt, prev_Id + max_current_ramp_ *
 794              		.loc 5 18 19
 795 01b8 7B68     		ldr	r3, [r7, #4]
 796 01ba 2433     		adds	r3, r3, #36
 797 01bc 97ED1A7A 		vldr.32	s14, [r7, #104]
 798 01c0 D7ED1B7A 		vldr.32	s15, [r7, #108]
 799 01c4 B0EE470A 		vmov.f32	s0, s14
 800 01c8 F0EE670A 		vmov.f32	s1, s15
 801 01cc 1846     		mov	r0, r3
 802 01ce FFF7FEFF 		bl	_ZN10OutputPortISt4pairIffEEaSES1_
  22:Src/open_loop_controller.cpp ****     Vdq_setpoint_ = {
  23:Src/open_loop_controller.cpp ****         std::clamp(target_voltage_, prev_Vd - max_voltage_ramp_ * dt, prev_Vd + max_voltage_ramp_ *
 803              		.loc 5 23 20
 804 01d2 7B68     		ldr	r3, [r7, #4]
 805 01d4 03F11800 		add	r0, r3, #24
 806              		.loc 5 23 37
 807 01d8 D7F8B430 		ldr	r3, [r7, #180]
 808 01dc 93ED007A 		vldr.32	s14, [r3]
 809              		.loc 5 23 47
 810 01e0 7B68     		ldr	r3, [r7, #4]
 811 01e2 D3ED026A 		vldr.32	s13, [r3, #8]
 812              		.loc 5 23 65
 813 01e6 D7ED297A 		vldr.32	s15, [r7, #164]
 814 01ea 66EEA77A 		vmul.f32	s15, s13, s15
 815              		.loc 5 23 45
 816 01ee 77EE677A 		vsub.f32	s15, s14, s15
 817 01f2 C7ED217A 		vstr.32	s15, [r7, #132]
 818              		.loc 5 23 71
 819 01f6 D7F8B430 		ldr	r3, [r7, #180]
 820 01fa 93ED007A 		vldr.32	s14, [r3]
 821              		.loc 5 23 81
 822 01fe 7B68     		ldr	r3, [r7, #4]
 823 0200 D3ED026A 		vldr.32	s13, [r3, #8]
 824              		.loc 5 23 99
 825 0204 D7ED297A 		vldr.32	s15, [r7, #164]
 826 0208 66EEA77A 		vmul.f32	s15, s13, s15
 827              		.loc 5 23 79
 828 020c 77EE277A 		vadd.f32	s15, s14, s15
 829 0210 C7ED227A 		vstr.32	s15, [r7, #136]
  24:Src/open_loop_controller.cpp ****         0.0f
  25:Src/open_loop_controller.cpp ****     };
 830              		.loc 5 25 5
 831 0214 07F18802 		add	r2, r7, #136
 832 0218 07F18403 		add	r3, r7, #132
 833 021c 1946     		mov	r1, r3
 834 021e FFF7FEFF 		bl	_ZSt5clampIfERKT_S2_S2_S2_
ARM GAS  /tmp/ccCqaElO.s 			page 88


 835 0222 0146     		mov	r1, r0
  24:Src/open_loop_controller.cpp ****         0.0f
 836              		.loc 5 24 9
 837 0224 4FF00003 		mov	r3, #0
 838 0228 C7F88C30 		str	r3, [r7, #140]	@ float
 839              		.loc 5 25 5
 840 022c 07F18C02 		add	r2, r7, #140
 841 0230 07F17C03 		add	r3, r7, #124
 842 0234 1846     		mov	r0, r3
 843 0236 FFF7FEFF 		bl	_ZNSt4pairIffEC1IfLb1EEERKfOT_
  22:Src/open_loop_controller.cpp ****     Vdq_setpoint_ = {
 844              		.loc 5 22 19
 845 023a 7B68     		ldr	r3, [r7, #4]
 846 023c 3033     		adds	r3, r3, #48
 847 023e 97ED1F7A 		vldr.32	s14, [r7, #124]
 848 0242 D7ED207A 		vldr.32	s15, [r7, #128]
 849 0246 B0EE470A 		vmov.f32	s0, s14
 850 024a F0EE670A 		vmov.f32	s1, s15
 851 024e 1846     		mov	r0, r3
 852 0250 FFF7FEFF 		bl	_ZN10OutputPortISt4pairIffEEaSES1_
  26:Src/open_loop_controller.cpp ****     
  27:Src/open_loop_controller.cpp ****     phase_vel = std::clamp(target_vel_, phase_vel - max_phase_vel_ramp_ * dt, phase_vel + max_phase
 853              		.loc 5 27 28
 854 0254 7B68     		ldr	r3, [r7, #4]
 855 0256 03F11000 		add	r0, r3, #16
 856              		.loc 5 27 53
 857 025a 7B68     		ldr	r3, [r7, #4]
 858 025c 93ED037A 		vldr.32	s14, [r3, #12]
 859              		.loc 5 27 73
 860 0260 D7ED297A 		vldr.32	s15, [r7, #164]
 861 0264 67EE277A 		vmul.f32	s15, s14, s15
 862              		.loc 5 27 51
 863 0268 97ED2A7A 		vldr.32	s14, [r7, #168]
 864 026c 77EE677A 		vsub.f32	s15, s14, s15
 865 0270 C7ED247A 		vstr.32	s15, [r7, #144]
 866              		.loc 5 27 91
 867 0274 7B68     		ldr	r3, [r7, #4]
 868 0276 93ED037A 		vldr.32	s14, [r3, #12]
 869              		.loc 5 27 111
 870 027a D7ED297A 		vldr.32	s15, [r7, #164]
 871 027e 27EE277A 		vmul.f32	s14, s14, s15
 872              		.loc 5 27 89
 873 0282 D7ED2A7A 		vldr.32	s15, [r7, #168]
 874 0286 77EE277A 		vadd.f32	s15, s14, s15
 875 028a C7ED257A 		vstr.32	s15, [r7, #148]
 876              		.loc 5 27 115
 877 028e 07F19402 		add	r2, r7, #148
 878 0292 07F19003 		add	r3, r7, #144
 879 0296 1946     		mov	r1, r3
 880 0298 FFF7FEFF 		bl	_ZSt5clampIfERKT_S2_S2_S2_
 881 029c 0346     		mov	r3, r0
 882              		.loc 5 27 15
 883 029e 1B68     		ldr	r3, [r3]	@ float
 884 02a0 C7F8A830 		str	r3, [r7, #168]	@ float
  28:Src/open_loop_controller.cpp ****     phase_vel_ = phase_vel;
 885              		.loc 5 28 16
 886 02a4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccCqaElO.s 			page 89


 887 02a6 4433     		adds	r3, r3, #68
 888 02a8 97ED2A0A 		vldr.32	s0, [r7, #168]
 889 02ac 1846     		mov	r0, r3
 890 02ae FFF7FEFF 		bl	_ZN10OutputPortIfEaSEf
  29:Src/open_loop_controller.cpp ****     phase_ = wrap_pm_pi(phase + phase_vel * dt);
 891              		.loc 5 29 43
 892 02b2 97ED2A7A 		vldr.32	s14, [r7, #168]
 893 02b6 D7ED297A 		vldr.32	s15, [r7, #164]
 894 02ba 27EE277A 		vmul.f32	s14, s14, s15
 895              		.loc 5 29 12
 896 02be D7ED2B7A 		vldr.32	s15, [r7, #172]
 897 02c2 77EE277A 		vadd.f32	s15, s14, s15
 898 02c6 B0EE670A 		vmov.f32	s0, s15
 899 02ca FFF7FEFF 		bl	wrap_pm_pi
 900 02ce F0EE407A 		vmov.f32	s15, s0
 901 02d2 7B68     		ldr	r3, [r7, #4]
 902 02d4 3C33     		adds	r3, r3, #60
 903 02d6 B0EE670A 		vmov.f32	s0, s15
 904 02da 1846     		mov	r0, r3
 905 02dc FFF7FEFF 		bl	_ZN10OutputPortIfEaSEf
  30:Src/open_loop_controller.cpp ****     total_distance_ = total_distance_.previous().value_or(0.0f) + phase_vel * dt;
 906              		.loc 5 30 48
 907 02e0 7B68     		ldr	r3, [r7, #4]
 908 02e2 03F14C02 		add	r2, r3, #76
 909 02e6 07F19803 		add	r3, r7, #152
 910 02ea 1146     		mov	r1, r2
 911 02ec 1846     		mov	r0, r3
 912 02ee FFF7FEFF 		bl	_ZN10OutputPortIfE8previousEv
 913              		.loc 5 30 59
 914 02f2 4FF00003 		mov	r3, #0
 915 02f6 C7F8A030 		str	r3, [r7, #160]	@ float
 916              		.loc 5 30 58
 917 02fa 07F1A002 		add	r2, r7, #160
 918 02fe 07F19803 		add	r3, r7, #152
 919 0302 1146     		mov	r1, r2
 920 0304 1846     		mov	r0, r3
 921 0306 FFF7FEFF 		bl	_ZNOSt8optionalIfE8value_orIfEEfOT_
 922 030a F0EE406A 		vmov.f32	s13, s0
 923              		.loc 5 30 77
 924 030e 97ED2A7A 		vldr.32	s14, [r7, #168]
 925 0312 D7ED297A 		vldr.32	s15, [r7, #164]
 926 0316 67EE277A 		vmul.f32	s15, s14, s15
 927              		.loc 5 30 21
 928 031a 76EEA77A 		vadd.f32	s15, s13, s15
 929 031e 7B68     		ldr	r3, [r7, #4]
 930 0320 4C33     		adds	r3, r3, #76
 931 0322 B0EE670A 		vmov.f32	s0, s15
 932 0326 1846     		mov	r0, r3
 933 0328 FFF7FEFF 		bl	_ZN10OutputPortIfEaSEf
  31:Src/open_loop_controller.cpp ****     timestamp_ = timestamp;
 934              		.loc 5 31 16
 935 032c 7B68     		ldr	r3, [r7, #4]
 936 032e 3A68     		ldr	r2, [r7]
 937 0330 1A62     		str	r2, [r3, #32]
  32:Src/open_loop_controller.cpp **** }
 938              		.loc 5 32 1
 939 0332 00BF     		nop
ARM GAS  /tmp/ccCqaElO.s 			page 90


 940 0334 C037     		adds	r7, r7, #192
 941              	.LCFI56:
 942              		.cfi_def_cfa_offset 8
 943 0336 BD46     		mov	sp, r7
 944              	.LCFI57:
 945              		.cfi_def_cfa_register 13
 946              		@ sp needed
 947 0338 80BD     		pop	{r7, pc}
 948              	.L38:
 949 033a 00BF     		.align	2
 950              	.L37:
 951 033c E81F224D 		.word	1294082024
 952              		.cfi_endproc
 953              	.LFE4795:
 955              		.section	.text._ZNSt4pairIffEC2IffLb1EEEOT_OT0_,"axG",%progbits,_ZNSt4pairIffEC5IffLb1EEEOT_OT0_,c
 956              		.align	1
 957              		.weak	_ZNSt4pairIffEC2IffLb1EEEOT_OT0_
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	_ZNSt4pairIffEC2IffLb1EEEOT_OT0_:
 964              	.LFB4856:
 965              		.file 6 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_p
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** //
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // any later version.
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** /*
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
ARM GAS  /tmp/ccCqaElO.s 			page 91


  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  */
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  */
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus > 201703L
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** # include <compare>
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** {
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   /**
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *  @addtogroup utilities
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *  @{
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    */
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     piecewise_construct_t();
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   /// @cond undocumented
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   // Forward declarations.
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   template<typename...>
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     class tuple;
ARM GAS  /tmp/ccCqaElO.s 			page 92


  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   template<std::size_t...>
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     struct _Index_tuple;
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   // constructors.
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   // is_convertible if the types are the same to
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     struct _PCC
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     {
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 				       __do_converts,
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      __converts
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      >::value;
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
ARM GAS  /tmp/ccCqaElO.s 			page 93


 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 				       __do_converts,
 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      __converts
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		      >::value;
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   };
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     {
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return false;
 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return false;
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return false;
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return false;
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   };
 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif // C++11
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   {
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     __pair_base() = default;
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     ~__pair_base() = default;
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif // C++11
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   };
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   /// @endcond
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****  /**
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *
ARM GAS  /tmp/ccCqaElO.s 			page 94


 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****    */
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     struct pair
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****     {
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       _T1 first;                 ///< The first member
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       _T2 second;                ///< The second member
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        *  respective default constructors.  */
 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1 = _T1,
 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                 typename _U2 = _T2,
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                 typename enable_if<__and_<
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                                    ::value, bool>::type = true>
 231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif
 232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       : first(), second() { }
 234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1 = _T1,
 237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                 typename _U2 = _T2,
 238:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                 typename enable_if<__and_<
 239:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                        is_default_constructible<_U1>,
 240:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                        is_default_constructible<_U2>,
 241:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                        __not_<
 242:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                                    ::value, bool>::type = false>
 245:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       explicit constexpr pair()
 246:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       : first(), second() { }
 247:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif
 248:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 249:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus < 201103L
 250:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       : first(__a), second(__b) { }
 253:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #else
 254:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// @cond undocumented
 256:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// @endcond
 258:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 259:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
ARM GAS  /tmp/ccCqaElO.s 			page 95


 262:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	                 && _PCCP::template
 264:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=true>
 266:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       : first(__a), second(__b) { }
 268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		enable_if<_PCCP::template
 272:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	                  && !_PCCP::template
 274:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=false>
 276:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       : first(__a), second(__b) { }
 278:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif
 279:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 280:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus < 201103L
 281:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2>
 283:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #else
 286:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// @cond undocumented
 288:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 289:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			    _T1, _T2>;
 292:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       /// @endcond
 293:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 294:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			  bool>::type=true>
 300:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=false>
 309:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #endif
 312:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 313:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 314:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 317:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       // DR 811.
 318:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename
ARM GAS  /tmp/ccCqaElO.s 			page 96


 319:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 320:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=true>
 322:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 325:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename
 326:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 327:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=false>
 329:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 332:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U2, typename
 333:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 334:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=true>
 336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 339:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U2, typename
 340:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 341:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=false>
 343:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 346:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 348:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			  && _PCCP::template
 350:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=true>
 352:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 966              		.loc 6 352 12
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 16
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970 0000 80B5     		push	{r7, lr}
 971              	.LCFI58:
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 7, -8
 974              		.cfi_offset 14, -4
 975 0002 84B0     		sub	sp, sp, #16
 976              	.LCFI59:
 977              		.cfi_def_cfa_offset 24
 978 0004 00AF     		add	r7, sp, #0
 979              	.LCFI60:
 980              		.cfi_def_cfa_register 7
 981 0006 F860     		str	r0, [r7, #12]
 982 0008 B960     		str	r1, [r7, #8]
 983 000a 7A60     		str	r2, [r7, #4]
 984              	.LBB2:
 353:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 985              		.loc 6 353 27
 986 000c B868     		ldr	r0, [r7, #8]
 987 000e FFF7FEFF 		bl	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
ARM GAS  /tmp/ccCqaElO.s 			page 97


 988 0012 0346     		mov	r3, r0
 989              		.loc 6 353 64
 990 0014 1A68     		ldr	r2, [r3]	@ float
 991 0016 FB68     		ldr	r3, [r7, #12]
 992 0018 1A60     		str	r2, [r3]	@ float
 993              		.loc 6 353 59
 994 001a 7868     		ldr	r0, [r7, #4]
 995 001c FFF7FEFF 		bl	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
 996 0020 0346     		mov	r3, r0
 997              		.loc 6 353 64
 998 0022 1A68     		ldr	r2, [r3]	@ float
 999 0024 FB68     		ldr	r3, [r7, #12]
 1000 0026 5A60     		str	r2, [r3, #4]	@ float
 1001              	.LBE2:
 1002              		.loc 6 353 68
 1003 0028 FB68     		ldr	r3, [r7, #12]
 1004 002a 1846     		mov	r0, r3
 1005 002c 1037     		adds	r7, r7, #16
 1006              	.LCFI61:
 1007              		.cfi_def_cfa_offset 8
 1008 002e BD46     		mov	sp, r7
 1009              	.LCFI62:
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 0030 80BD     		pop	{r7, pc}
 1013              		.cfi_endproc
 1014              	.LFE4856:
 1016              		.weak	_ZNSt4pairIffEC1IffLb1EEEOT_OT0_
 1017              		.thumb_set _ZNSt4pairIffEC1IffLb1EEEOT_OT0_,_ZNSt4pairIffEC2IffLb1EEEOT_OT0_
 1018              		.section	.text._ZN10OutputPortISt4pairIffEE8previousEv,"axG",%progbits,_ZN10OutputPortISt4pairIffE
 1019              		.align	1
 1020              		.weak	_ZN10OutputPortISt4pairIffEE8previousEv
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1024              		.fpu fpv4-sp-d16
 1026              	_ZN10OutputPortISt4pairIffEE8previousEv:
 1027              	.LFB4875:
 1028              		.file 7 "Inc/component.hpp"
   1:Inc/component.hpp **** #ifndef __COMPONENT_HPP
   2:Inc/component.hpp **** #define __COMPONENT_HPP
   3:Inc/component.hpp **** 
   4:Inc/component.hpp **** #include <stdint.h>
   5:Inc/component.hpp **** #include <optional>
   6:Inc/component.hpp **** #include <variant>
   7:Inc/component.hpp **** #include "user_int.hpp"
   8:Inc/component.hpp **** class ComponentBase {
   9:Inc/component.hpp **** public:
  10:Inc/component.hpp ****     /**
  11:Inc/component.hpp ****      * @brief Shall run the update action of this component.
  12:Inc/component.hpp ****      * 
  13:Inc/component.hpp ****      * This function gets called in a low priority interrupt context and is
  14:Inc/component.hpp ****      * allowed to call CMSIS functions.
  15:Inc/component.hpp ****      * 
  16:Inc/component.hpp ****      * @param timestamp: The timestamp (in HCLK ticks) for which this update
  17:Inc/component.hpp ****      * is run.
  18:Inc/component.hpp ****      */
ARM GAS  /tmp/ccCqaElO.s 			page 98


  19:Inc/component.hpp ****     virtual void update(uint32_t timestamp) = 0;
  20:Inc/component.hpp **** };
  21:Inc/component.hpp **** 
  22:Inc/component.hpp **** 
  23:Inc/component.hpp **** template<typename T>
  24:Inc/component.hpp **** class InputPort;
  25:Inc/component.hpp **** 
  26:Inc/component.hpp **** /**
  27:Inc/component.hpp ****  * @brief An output port stores a value for consumption by a connecting input
  28:Inc/component.hpp ****  * port.
  29:Inc/component.hpp ****  * 
  30:Inc/component.hpp ****  * Output ports are supposed to be reset at the beginning of a control loop
  31:Inc/component.hpp ****  * iteration. This ensures that connecting input ports don't use an outdated
  32:Inc/component.hpp ****  * value and, more importantly, ensures proper handling if the producer of the
  33:Inc/component.hpp ****  * value is incapable of producing the value for any reason.
  34:Inc/component.hpp ****  * 
  35:Inc/component.hpp ****  * Member functions of this class are not thread-safe unless noted otherwise.
  36:Inc/component.hpp ****  */
  37:Inc/component.hpp **** template<typename T>
  38:Inc/component.hpp **** class OutputPort {
  39:Inc/component.hpp **** public:
  40:Inc/component.hpp ****     /**
  41:Inc/component.hpp ****      * @brief Initializes the output port with the specified value.
  42:Inc/component.hpp ****      * 
  43:Inc/component.hpp ****      * An initialization value is required for any() to work properly.
  44:Inc/component.hpp ****      * present() and previous() cannot be used to fetch the
  45:Inc/component.hpp ****      * initialization value.
  46:Inc/component.hpp ****      */
  47:Inc/component.hpp ****     OutputPort(T val) : content_(val) {}
  48:Inc/component.hpp ****     
  49:Inc/component.hpp ****     /**
  50:Inc/component.hpp ****      * @brief Updates the underlying value of this output port.
  51:Inc/component.hpp ****      */
  52:Inc/component.hpp ****     void operator=(T value) {
  53:Inc/component.hpp ****         content_ = value;
  54:Inc/component.hpp ****         age_ = 0;
  55:Inc/component.hpp ****     }
  56:Inc/component.hpp **** 
  57:Inc/component.hpp ****     /**
  58:Inc/component.hpp ****      * @brief Marks the contained value as outdated. The value is not actually
  59:Inc/component.hpp ****      * deleted and can still be accessed through some of the member functions
  60:Inc/component.hpp ****      * of this class.
  61:Inc/component.hpp ****      */
  62:Inc/component.hpp ****     void reset() {
  63:Inc/component.hpp ****         // This will eventually overflow to 0 so present() could
  64:Inc/component.hpp ****         // theoretically return a very old value however it is very likely that
  65:Inc/component.hpp ****         // the motor will be long disarmed by then.
  66:Inc/component.hpp ****         age_++;
  67:Inc/component.hpp ****     }
  68:Inc/component.hpp **** 
  69:Inc/component.hpp ****     /**
  70:Inc/component.hpp ****      * @brief Returns the value from this control loop iteration or std::nullopt
  71:Inc/component.hpp ****      * if the value was not yet set during this control loop iteration.
  72:Inc/component.hpp ****      */
  73:Inc/component.hpp ****     std::optional<T> present() {
  74:Inc/component.hpp ****         if (age_ == 0) {
  75:Inc/component.hpp ****             return content_;
ARM GAS  /tmp/ccCqaElO.s 			page 99


  76:Inc/component.hpp ****         } else {
  77:Inc/component.hpp ****             return std::nullopt;
  78:Inc/component.hpp ****         }
  79:Inc/component.hpp ****     }
  80:Inc/component.hpp **** 
  81:Inc/component.hpp ****     /**
  82:Inc/component.hpp ****      * @brief Returns the value from exactly the previous control loop iteration.
  83:Inc/component.hpp ****      * 
  84:Inc/component.hpp ****      * If during the last iteration no value was set or the value was already
  85:Inc/component.hpp ****      * overwritten during this control loop iteration then this function returns
  86:Inc/component.hpp ****      * std::nullopt.
  87:Inc/component.hpp ****      */
  88:Inc/component.hpp ****     std::optional<T> previous() {
 1029              		.loc 7 88 22
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              	.LCFI63:
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 82B0     		sub	sp, sp, #8
 1039              	.LCFI64:
 1040              		.cfi_def_cfa_offset 16
 1041 0004 00AF     		add	r7, sp, #0
 1042              	.LCFI65:
 1043              		.cfi_def_cfa_register 7
 1044 0006 7860     		str	r0, [r7, #4]
 1045 0008 3960     		str	r1, [r7]
  89:Inc/component.hpp ****         if (age_ == 1) {
 1046              		.loc 7 89 13
 1047 000a 3B68     		ldr	r3, [r7]
 1048 000c 1B68     		ldr	r3, [r3]
 1049              		.loc 7 89 9
 1050 000e 012B     		cmp	r3, #1
 1051 0010 06D1     		bne	.L42
  90:Inc/component.hpp ****             return content_;
 1052              		.loc 7 90 20
 1053 0012 3B68     		ldr	r3, [r7]
 1054 0014 0433     		adds	r3, r3, #4
 1055 0016 1946     		mov	r1, r3
 1056 0018 7868     		ldr	r0, [r7, #4]
 1057 001a FFF7FEFF 		bl	_ZNSt8optionalISt4pairIffEEC1IRS1_Lb1EEEOT_
 1058 001e 03E0     		b	.L43
 1059              	.L42:
  91:Inc/component.hpp ****         } else {
  92:Inc/component.hpp ****             return std::nullopt;
 1060              		.loc 7 92 25
 1061 0020 1146     		mov	r1, r2
 1062 0022 7868     		ldr	r0, [r7, #4]
 1063 0024 FFF7FEFF 		bl	_ZNSt8optionalISt4pairIffEEC1ESt9nullopt_t
 1064              	.L43:
  93:Inc/component.hpp ****         }
  94:Inc/component.hpp ****     }
 1065              		.loc 7 94 5
 1066 0028 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccCqaElO.s 			page 100


 1067 002a 0837     		adds	r7, r7, #8
 1068              	.LCFI66:
 1069              		.cfi_def_cfa_offset 8
 1070 002c BD46     		mov	sp, r7
 1071              	.LCFI67:
 1072              		.cfi_def_cfa_register 13
 1073              		@ sp needed
 1074 002e 80BD     		pop	{r7, pc}
 1075              		.cfi_endproc
 1076              	.LFE4875:
 1078              		.section	.text._ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_enga
 1079              		.align	1
 1080              		.weak	_ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_engagedEv
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu fpv4-sp-d16
 1086              	_ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_engagedEv:
 1087              	.LFB4877:
 1088              		.file 8 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional"
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // <optional> -*- C++ -*-
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // Copyright (C) 2013-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** //
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // software; you can redistribute it and/or modify it under the
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // terms of the GNU General Public License as published by the
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // any later version.
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // This library is distributed in the hope that it will be useful,
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // GNU General Public License for more details.
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // 3.1, as published by the Free Software Foundation.
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // You should have received a copy of the GNU General Public License and
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** // <http://www.gnu.org/licenses/>.
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** /** @file include/optional
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****  *  This is a Standard C++ Library header.
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****  */
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #ifndef _GLIBCXX_OPTIONAL
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #define _GLIBCXX_OPTIONAL 1
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #pragma GCC system_header
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #if __cplusplus >= 201703L
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <utility>
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <type_traits>
ARM GAS  /tmp/ccCqaElO.s 			page 101


  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <exception>
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <new>
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <initializer_list>
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <bits/exception_defines.h>
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <bits/functional_hash.h>
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #include <bits/enable_special_members.h>
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #if __cplusplus > 201703L
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** # include <compare>
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #endif
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** {
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   /**
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    *  @addtogroup utilities
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    *  @{
  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    */
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** #define __cpp_lib_optional 201606L
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp>
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     class optional;
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   /// Tag type to disengage optional objects.
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   struct nullopt_t
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   {
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     // Do not user-declare default constructor at all for
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     // optional_value = {} syntax to work.
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     // nullopt_t() = delete;
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     // Used for constructing nullopt.
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     enum class _Construct { _Token };
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     // Must be constexpr for nullopt_t to be literal.
  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     explicit constexpr nullopt_t(_Construct) { }
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   };
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   /// Tag to disengage optional objects.
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   inline constexpr nullopt_t nullopt { nullopt_t::_Construct::_Token };
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   /**
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    *  @brief Exception class thrown when a disengaged optional object is
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    *  dereferenced.
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    *  @ingroup exceptions
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****    */
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   class bad_optional_access : public exception
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   {
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   public:
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     bad_optional_access() { }
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     virtual const char* what() const noexcept override
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     { return "bad optional access"; }
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     virtual ~bad_optional_access() noexcept = default;
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   };
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
ARM GAS  /tmp/ccCqaElO.s 			page 102


  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   void
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   __throw_bad_optional_access()
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   __attribute__((__noreturn__));
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // XXX Does not belong here.
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   inline void
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   __throw_bad_optional_access()
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // This class template manages construction/destruction of
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // the contained value for a std::optional.
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp>
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload_base
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Stored_type = remove_const_t<_Tp>;
 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base() = default;
 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload_base() = default;
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args>
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__tag, std::forward<_Args>(__args)...),
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  _M_engaged(true)
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{ }
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args>
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	_Optional_payload_base(std::initializer_list<_Up> __il,
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			       _Args&&... __args)
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__il, std::forward<_Args>(__args)...),
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  _M_engaged(true)
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{ }
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructor used by _Optional_base copy constructor when the
 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // contained value is not trivially copy constructible.
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base(bool __engaged,
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			     const _Optional_payload_base& __other)
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	if (__other._M_engaged)
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_construct(__other._M_get());
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructor used by _Optional_base move constructor when the
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // contained value is not trivially move constructible.
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base(bool __engaged,
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			     _Optional_payload_base&& __other)
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	if (__other._M_engaged)
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_construct(std::move(__other._M_get()));
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Copy constructor is only used to when the contained value is
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // trivially copy constructible.
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base(const _Optional_payload_base&) = default;
ARM GAS  /tmp/ccCqaElO.s 			page 103


 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Move constructor is only used to when the contained value is
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // trivially copy constructible.
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base(_Optional_payload_base&&) = default;
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base&
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(const _Optional_payload_base&) = default;
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload_base&
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(_Optional_payload_base&&) = default;
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // used to perform non-trivial copy assignment.
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr void
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_copy_assign(const _Optional_payload_base& __other)
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         if (this->_M_engaged && __other._M_engaged)
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****           this->_M_get() = __other._M_get();
 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         else
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  {
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    if (__other._M_engaged)
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      this->_M_construct(__other._M_get());
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    else
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      this->_M_reset();
 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  }
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // used to perform non-trivial move assignment.
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr void
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_move_assign(_Optional_payload_base&& __other)
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       noexcept(__and_v<is_nothrow_move_constructible<_Tp>,
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		       is_nothrow_move_assignable<_Tp>>)
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	if (this->_M_engaged && __other._M_engaged)
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_get() = std::move(__other._M_get());
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	else
 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  {
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    if (__other._M_engaged)
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      this->_M_construct(std::move(__other._M_get()));
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    else
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      this->_M_reset();
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  }
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       struct _Empty_byte { };
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, bool = is_trivially_destructible_v<_Up>>
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	union _Storage
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  constexpr _Storage() noexcept : _M_empty() { }
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  template<typename... _Args>
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    constexpr
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    _Storage(in_place_t, _Args&&... __args)
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : _M_value(std::forward<_Args>(__args)...)
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  template<typename _Vp, typename... _Args>
ARM GAS  /tmp/ccCqaElO.s 			page 104


 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    constexpr
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    _Storage(std::initializer_list<_Vp> __il, _Args&&... __args)
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : _M_value(__il, std::forward<_Args>(__args)...)
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  _Empty_byte _M_empty;
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****           _Up _M_value;
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	};
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	union _Storage<_Up, false>
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  constexpr _Storage() noexcept : _M_empty() { }
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  template<typename... _Args>
 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    constexpr
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    _Storage(in_place_t, _Args&&... __args)
 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : _M_value(std::forward<_Args>(__args)...)
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  template<typename _Vp, typename... _Args>
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    constexpr
 231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    _Storage(std::initializer_list<_Vp> __il, _Args&&... __args)
 232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : _M_value(__il, std::forward<_Args>(__args)...)
 233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  // User-provided destructor is needed when _Up has non-trivial dtor.
 236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  ~_Storage() { }
 237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 238:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  _Empty_byte _M_empty;
 239:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****           _Up _M_value;
 240:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	};
 241:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 242:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Storage<_Stored_type> _M_payload;
 243:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 244:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       bool _M_engaged = false;
 245:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 246:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args>
 247:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         void
 248:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         _M_construct(_Args&&... __args)
 249:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         noexcept(is_nothrow_constructible_v<_Stored_type, _Args...>)
 250:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         {
 251:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****           ::new ((void *) std::__addressof(this->_M_payload))
 252:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****             _Stored_type(std::forward<_Args>(__args)...);
 253:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****           this->_M_engaged = true;
 254:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         }
 255:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 256:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr void
 257:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_destroy() noexcept
 258:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 259:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	_M_engaged = false;
 260:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	_M_payload._M_value.~_Stored_type();
 261:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 262:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 263:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // The _M_get() operations have _M_engaged as a precondition.
 264:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // They exist to access the contained value with the appropriate
 265:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // const-qualification, because _M_payload has had the const removed.
ARM GAS  /tmp/ccCqaElO.s 			page 105


 266:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 267:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp&
 268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_get() noexcept
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_payload._M_value; }
 270:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 271:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp&
 272:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_get() const noexcept
 273:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_payload._M_value; }
 274:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 275:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // _M_reset is a 'safe' operation with no precondition.
 276:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr void
 277:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_reset() noexcept
 278:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 279:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	if (this->_M_engaged)
 280:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  _M_destroy();
 281:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 282:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 283:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 284:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Class template that manages the payload for optionals.
 285:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp,
 286:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    bool /*_HasTrivialDestructor*/ =
 287:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      is_trivially_destructible_v<_Tp>,
 288:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    bool /*_HasTrivialCopy */ =
 289:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      is_trivially_copy_assignable_v<_Tp>
 290:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      && is_trivially_copy_constructible_v<_Tp>,
 291:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    bool /*_HasTrivialMove */ =
 292:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      is_trivially_move_assignable_v<_Tp>
 293:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      && is_trivially_move_constructible_v<_Tp>>
 294:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload;
 295:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 296:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Payload for potentially-constexpr optionals (trivial copy/move/destroy).
 297:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp>
 298:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload<_Tp, true, true, true>
 299:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     : _Optional_payload_base<_Tp>
 300:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Optional_payload_base<_Tp>::_Optional_payload_base;
 302:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload() = default;
 304:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 305:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 306:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Payload for optionals with non-trivial copy construction/assignment.
 307:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp>
 308:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload<_Tp, true, false, true>
 309:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     : _Optional_payload_base<_Tp>
 310:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 311:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Optional_payload_base<_Tp>::_Optional_payload_base;
 312:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 313:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload() = default;
 314:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload() = default;
 315:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(const _Optional_payload&) = default;
 316:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(_Optional_payload&&) = default;
 317:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload& operator=(_Optional_payload&&) = default;
 318:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 319:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Non-trivial copy assignment.
 320:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr
 321:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload&
 322:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(const _Optional_payload& __other)
ARM GAS  /tmp/ccCqaElO.s 			page 106


 323:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 324:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	this->_M_copy_assign(__other);
 325:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return *this;
 326:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 327:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 328:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 329:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Payload for optionals with non-trivial move construction/assignment.
 330:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp>
 331:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload<_Tp, true, true, false>
 332:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     : _Optional_payload_base<_Tp>
 333:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 334:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Optional_payload_base<_Tp>::_Optional_payload_base;
 335:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload() = default;
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload() = default;
 338:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(const _Optional_payload&) = default;
 339:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(_Optional_payload&&) = default;
 340:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload& operator=(const _Optional_payload&) = default;
 341:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 342:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Non-trivial move assignment.
 343:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr
 344:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload&
 345:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(_Optional_payload&& __other)
 346:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       noexcept(__and_v<is_nothrow_move_constructible<_Tp>,
 347:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		       is_nothrow_move_assignable<_Tp>>)
 348:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 349:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	this->_M_move_assign(std::move(__other));
 350:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return *this;
 351:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 352:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 353:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 354:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Payload for optionals with non-trivial copy and move assignment.
 355:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp>
 356:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload<_Tp, true, false, false>
 357:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     : _Optional_payload_base<_Tp>
 358:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Optional_payload_base<_Tp>::_Optional_payload_base;
 360:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload() = default;
 362:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload() = default;
 363:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(const _Optional_payload&) = default;
 364:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(_Optional_payload&&) = default;
 365:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 366:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Non-trivial copy assignment.
 367:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr
 368:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload&
 369:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(const _Optional_payload& __other)
 370:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 371:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	this->_M_copy_assign(__other);
 372:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return *this;
 373:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 374:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 375:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Non-trivial move assignment.
 376:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr
 377:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload&
 378:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(_Optional_payload&& __other)
 379:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       noexcept(__and_v<is_nothrow_move_constructible<_Tp>,
ARM GAS  /tmp/ccCqaElO.s 			page 107


 380:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		       is_nothrow_move_assignable<_Tp>>)
 381:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 382:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	this->_M_move_assign(std::move(__other));
 383:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return *this;
 384:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 385:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 386:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 387:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Payload for optionals with non-trivial destructors.
 388:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template <typename _Tp, bool _Copy, bool _Move>
 389:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_payload<_Tp, false, _Copy, _Move>
 390:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     : _Optional_payload<_Tp, true, false, false>
 391:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 392:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Base class implements all the constructors and assignment operators:
 393:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Optional_payload<_Tp, true, false, false>::_Optional_payload;
 394:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload() = default;
 395:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(const _Optional_payload&) = default;
 396:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload(_Optional_payload&&) = default;
 397:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload& operator=(const _Optional_payload&) = default;
 398:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload& operator=(_Optional_payload&&) = default;
 399:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 400:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Destructor needs to destroy the contained value:
 401:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload() { this->_M_reset(); }
 402:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 403:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 404:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // Common base class for _Optional_base<T> to avoid repeating these
 405:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   // member functions in each specialization.
 406:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp, typename _Dp>
 407:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     class _Optional_base_impl
 408:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 409:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     protected:
 410:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Stored_type = remove_const_t<_Tp>;
 411:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 412:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // The _M_construct operation has !_M_engaged as a precondition
 413:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // while _M_destruct has _M_engaged as a precondition.
 414:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args>
 415:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	void
 416:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	_M_construct(_Args&&... __args)
 417:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	noexcept(is_nothrow_constructible_v<_Stored_type, _Args...>)
 418:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 419:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  ::new
 420:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    (std::__addressof(static_cast<_Dp*>(this)->_M_payload._M_payload))
 421:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    _Stored_type(std::forward<_Args>(__args)...);
 422:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  static_cast<_Dp*>(this)->_M_payload._M_engaged = true;
 423:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 424:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 425:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       void
 426:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_destruct() noexcept
 427:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { static_cast<_Dp*>(this)->_M_payload._M_destroy(); }
 428:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 429:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // _M_reset is a 'safe' operation with no precondition.
 430:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr void
 431:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_reset() noexcept
 432:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { static_cast<_Dp*>(this)->_M_payload._M_reset(); }
 433:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 434:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr bool _M_is_engaged() const noexcept
 1089              		.loc 8 434 22
 1090              		.cfi_startproc
ARM GAS  /tmp/ccCqaElO.s 			page 108


 1091              		@ args = 0, pretend = 0, frame = 8
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
 1094 0000 80B4     		push	{r7}
 1095              	.LCFI68:
 1096              		.cfi_def_cfa_offset 4
 1097              		.cfi_offset 7, -4
 1098 0002 83B0     		sub	sp, sp, #12
 1099              	.LCFI69:
 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              	.LCFI70:
 1103              		.cfi_def_cfa_register 7
 1104 0006 7860     		str	r0, [r7, #4]
 435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
 1105              		.loc 8 435 58
 1106 0008 7B68     		ldr	r3, [r7, #4]
 1107 000a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1108              		.loc 8 435 70
 1109 000c 1846     		mov	r0, r3
 1110 000e 0C37     		adds	r7, r7, #12
 1111              	.LCFI71:
 1112              		.cfi_def_cfa_offset 4
 1113 0010 BD46     		mov	sp, r7
 1114              	.LCFI72:
 1115              		.cfi_def_cfa_register 13
 1116              		@ sp needed
 1117 0012 5DF8047B 		ldr	r7, [sp], #4
 1118              	.LCFI73:
 1119              		.cfi_restore 7
 1120              		.cfi_def_cfa_offset 0
 1121 0016 7047     		bx	lr
 1122              		.cfi_endproc
 1123              	.LFE4877:
 1125              		.section	.text._ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_,"axG",%progbits,_ZNOSt8optionalIS
 1126              		.align	1
 1127              		.weak	_ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu fpv4-sp-d16
 1133              	_ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_:
 1134              	.LFB4876:
 436:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 437:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // The _M_get operations have _M_engaged as a precondition.
 438:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp&
 439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_get() noexcept
 440:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 441:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	__glibcxx_assert(this->_M_is_engaged());
 442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return static_cast<_Dp*>(this)->_M_payload._M_get();
 443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 444:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 445:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp&
 446:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _M_get() const noexcept
 447:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 448:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	__glibcxx_assert(this->_M_is_engaged());
 449:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return static_cast<const _Dp*>(this)->_M_payload._M_get();
ARM GAS  /tmp/ccCqaElO.s 			page 109


 450:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 451:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 452:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 453:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   /**
 454:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * @brief Class template that provides copy/move constructors of optional.
 455:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     *
 456:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * Such a separate base class template is necessary in order to
 457:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * conditionally make copy/move constructors trivial.
 458:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     *
 459:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * When the contained value is trivially copy/move constructible,
 460:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * the copy/move constructors of _Optional_base will invoke the
 461:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * trivial copy/move constructor of _Optional_payload. Otherwise,
 462:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * they will invoke _Optional_payload(bool, const _Optional_payload&)
 463:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * or _Optional_payload(bool, _Optional_payload&&) to initialize
 464:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * the contained value, if copying/moving an engaged optional.
 465:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     *
 466:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * Whether the other special members are trivial is determined by the
 467:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * _Optional_payload<_Tp> specialization used for the _M_payload member.
 468:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     *
 469:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * @see optional, _Enable_special_members
 470:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     */
 471:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp,
 472:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	   bool = is_trivially_copy_constructible_v<_Tp>,
 473:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	   bool = is_trivially_move_constructible_v<_Tp>>
 474:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_base
 475:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       : _Optional_base_impl<_Tp, _Optional_base<_Tp>>
 476:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 477:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for disengaged optionals.
 478:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base() = default;
 479:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 480:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for engaged optionals.
 481:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args,
 482:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       enable_if_t<is_constructible_v<_Tp, _Args&&...>, bool> = false>
 483:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t, _Args&&... __args)
 484:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 485:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     std::forward<_Args>(__args)...) { }
 486:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 487:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args,
 488:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                enable_if_t<is_constructible_v<_Tp,
 489:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      initializer_list<_Up>&,
 490:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      _Args&&...>, bool> = false>
 491:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t,
 492:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           initializer_list<_Up> __il,
 493:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           _Args&&... __args)
 494:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 495:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     __il, std::forward<_Args>(__args)...)
 496:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         { }
 497:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 498:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Copy and move constructors.
 499:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(const _Optional_base& __other)
 500:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__other._M_payload._M_engaged,
 501:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     __other._M_payload)
 502:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { }
 503:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 504:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(_Optional_base&& __other)
 505:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       noexcept(is_nothrow_move_constructible_v<_Tp>)
 506:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__other._M_payload._M_engaged,
ARM GAS  /tmp/ccCqaElO.s 			page 110


 507:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     std::move(__other._M_payload))
 508:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { }
 509:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 510:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Assignment operators.
 511:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(const _Optional_base&) = default;
 512:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(_Optional_base&&) = default;
 513:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 514:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload<_Tp> _M_payload;
 515:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 516:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 517:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp>
 518:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_base<_Tp, false, true>
 519:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       : _Optional_base_impl<_Tp, _Optional_base<_Tp>>
 520:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 521:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for disengaged optionals.
 522:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base() = default;
 523:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 524:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for engaged optionals.
 525:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args,
 526:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       enable_if_t<is_constructible_v<_Tp, _Args&&...>, bool> = false>
 527:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t, _Args&&... __args)
 528:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 529:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     std::forward<_Args>(__args)...) { }
 530:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 531:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args,
 532:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                enable_if_t<is_constructible_v<_Tp,
 533:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      initializer_list<_Up>&,
 534:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      _Args&&...>, bool> = false>
 535:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t,
 536:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           initializer_list<_Up> __il,
 537:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           _Args&&... __args)
 538:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 539:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     __il, std::forward<_Args>(__args)...)
 540:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         { }
 541:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 542:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Copy and move constructors.
 543:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(const _Optional_base& __other)
 544:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__other._M_payload._M_engaged,
 545:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     __other._M_payload)
 546:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { }
 547:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 548:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(_Optional_base&& __other) = default;
 549:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 550:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Assignment operators.
 551:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(const _Optional_base&) = default;
 552:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(_Optional_base&&) = default;
 553:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 554:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload<_Tp> _M_payload;
 555:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 556:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 557:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp>
 558:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_base<_Tp, true, false>
 559:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       : _Optional_base_impl<_Tp, _Optional_base<_Tp>>
 560:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 561:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for disengaged optionals.
 562:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base() = default;
 563:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
ARM GAS  /tmp/ccCqaElO.s 			page 111


 564:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for engaged optionals.
 565:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args,
 566:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       enable_if_t<is_constructible_v<_Tp, _Args&&...>, bool> = false>
 567:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t, _Args&&... __args)
 568:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 569:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     std::forward<_Args>(__args)...) { }
 570:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 571:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args,
 572:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                enable_if_t<is_constructible_v<_Tp,
 573:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      initializer_list<_Up>&,
 574:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      _Args&&...>, bool> = false>
 575:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t,
 576:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           initializer_list<_Up> __il,
 577:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           _Args&&... __args)
 578:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 579:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     __il, std::forward<_Args>(__args)...)
 580:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         { }
 581:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 582:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Copy and move constructors.
 583:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(const _Optional_base& __other) = default;
 584:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 585:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(_Optional_base&& __other)
 586:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       noexcept(is_nothrow_move_constructible_v<_Tp>)
 587:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__other._M_payload._M_engaged,
 588:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     std::move(__other._M_payload))
 589:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { }
 590:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 591:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Assignment operators.
 592:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(const _Optional_base&) = default;
 593:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(_Optional_base&&) = default;
 594:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 595:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload<_Tp> _M_payload;
 596:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 597:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 598:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp>
 599:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     struct _Optional_base<_Tp, true, true>
 600:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       : _Optional_base_impl<_Tp, _Optional_base<_Tp>>
 601:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 602:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for disengaged optionals.
 603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base() = default;
 604:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 605:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Constructors for engaged optionals.
 606:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args,
 607:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       enable_if_t<is_constructible_v<_Tp, _Args&&...>, bool> = false>
 608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t, _Args&&... __args)
 609:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     std::forward<_Args>(__args)...) { }
 611:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 612:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args,
 613:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                enable_if_t<is_constructible_v<_Tp,
 614:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      initializer_list<_Up>&,
 615:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					      _Args&&...>, bool> = false>
 616:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         constexpr explicit _Optional_base(in_place_t,
 617:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           initializer_list<_Up> __il,
 618:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****                                           _Args&&... __args)
 619:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 620:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		     __il, std::forward<_Args>(__args)...)
ARM GAS  /tmp/ccCqaElO.s 			page 112


 621:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         { }
 622:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 623:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Copy and move constructors.
 624:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(const _Optional_base& __other) = default;
 625:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Optional_base(_Optional_base&& __other) = default;
 626:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 627:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Assignment operators.
 628:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(const _Optional_base&) = default;
 629:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_base& operator=(_Optional_base&&) = default;
 630:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 631:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       _Optional_payload<_Tp> _M_payload;
 632:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 633:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 634:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp>
 635:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   class optional;
 636:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 637:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp, typename _Up>
 638:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     using __converts_from_optional =
 639:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       __or_<is_constructible<_Tp, const optional<_Up>&>,
 640:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_constructible<_Tp, optional<_Up>&>,
 641:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_constructible<_Tp, const optional<_Up>&&>,
 642:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_constructible<_Tp, optional<_Up>&&>,
 643:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_convertible<const optional<_Up>&, _Tp>,
 644:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_convertible<optional<_Up>&, _Tp>,
 645:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_convertible<const optional<_Up>&&, _Tp>,
 646:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_convertible<optional<_Up>&&, _Tp>>;
 647:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 648:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp, typename _Up>
 649:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     using __assigns_from_optional =
 650:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       __or_<is_assignable<_Tp&, const optional<_Up>&>,
 651:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_assignable<_Tp&, optional<_Up>&>,
 652:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_assignable<_Tp&, const optional<_Up>&&>,
 653:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    is_assignable<_Tp&, optional<_Up>&&>>;
 654:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 655:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   /**
 656:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     * @brief Class template for optional values.
 657:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     */
 658:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****   template<typename _Tp>
 659:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     class optional
 660:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     : private _Optional_base<_Tp>,
 661:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       private _Enable_copy_move<
 662:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	// Copy constructor.
 663:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	is_copy_constructible_v<_Tp>,
 664:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	// Copy assignment.
 665:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	__and_v<is_copy_constructible<_Tp>, is_copy_assignable<_Tp>>,
 666:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	// Move constructor.
 667:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	is_move_constructible_v<_Tp>,
 668:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	// Move assignment.
 669:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	__and_v<is_move_constructible<_Tp>, is_move_assignable<_Tp>>,
 670:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	// Unique tag type.
 671:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional<_Tp>>
 672:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     {
 673:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       static_assert(!is_same_v<remove_cv_t<_Tp>, nullopt_t>);
 674:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       static_assert(!is_same_v<remove_cv_t<_Tp>, in_place_t>);
 675:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       static_assert(!is_reference_v<_Tp>);
 676:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 677:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     private:
ARM GAS  /tmp/ccCqaElO.s 			page 113


 678:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using _Base = _Optional_base<_Tp>;
 679:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 680:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // SFINAE helpers
 681:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 682:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	using __not_self = __not_<is_same<optional, __remove_cvref_t<_Up>>>;
 683:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 684:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	using __not_tag = __not_<is_same<in_place_t, __remove_cvref_t<_Up>>>;
 685:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Cond>
 686:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	using _Requires = enable_if_t<__and_v<_Cond...>, bool>;
 687:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 688:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     public:
 689:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       using value_type = _Tp;
 690:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 691:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr optional() = default;
 692:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr optional(nullopt_t) noexcept { }
 694:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 695:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Converting constructors for engaged optionals.
 696:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up = _Tp,
 697:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       _Requires<__not_self<_Up>, __not_tag<_Up>,
 698:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 is_constructible<_Tp, _Up&&>,
 699:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 is_convertible<_Up&&, _Tp>> = true>
 700:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr
 701:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(_Up&& __t)
 702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _Base(std::in_place, std::forward<_Up>(__t)) { }
 703:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 704:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up = _Tp,
 705:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       _Requires<__not_self<_Up>, __not_tag<_Up>,
 706:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 is_constructible<_Tp, _Up&&>,
 707:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 __not_<is_convertible<_Up&&, _Tp>>> = false>
 708:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	explicit constexpr
 709:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(_Up&& __t)
 710:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _Base(std::in_place, std::forward<_Up>(__t)) { }
 711:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 712:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up,
 713:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       _Requires<__not_<is_same<_Tp, _Up>>,
 714:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 is_constructible<_Tp, const _Up&>,
 715:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 is_convertible<const _Up&, _Tp>,
 716:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 __not_<__converts_from_optional<_Tp, _Up>>> = true>
 717:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr
 718:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(const optional<_Up>& __t)
 719:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 720:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (__t)
 721:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    emplace(*__t);
 722:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 723:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 724:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up,
 725:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       _Requires<__not_<is_same<_Tp, _Up>>,
 726:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 is_constructible<_Tp, const _Up&>,
 727:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 __not_<is_convertible<const _Up&, _Tp>>,
 728:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			 __not_<__converts_from_optional<_Tp, _Up>>> = false>
 729:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	explicit constexpr
 730:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(const optional<_Up>& __t)
 731:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 732:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (__t)
 733:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    emplace(*__t);
 734:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
ARM GAS  /tmp/ccCqaElO.s 			page 114


 735:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 736:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template <typename _Up,
 737:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		_Requires<__not_<is_same<_Tp, _Up>>,
 738:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			  is_constructible<_Tp, _Up&&>,
 739:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			  is_convertible<_Up&&, _Tp>,
 740:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			  __not_<__converts_from_optional<_Tp, _Up>>> = true>
 741:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr
 742:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(optional<_Up>&& __t)
 743:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 744:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (__t)
 745:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    emplace(std::move(*__t));
 746:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 747:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 748:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template <typename _Up,
 749:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		_Requires<__not_<is_same<_Tp, _Up>>,
 750:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			  is_constructible<_Tp, _Up&&>,
 751:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			  __not_<is_convertible<_Up&&, _Tp>>,
 752:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			  __not_<__converts_from_optional<_Tp, _Up>>> = false>
 753:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	explicit constexpr
 754:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(optional<_Up>&& __t)
 755:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 756:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (__t)
 757:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    emplace(std::move(*__t));
 758:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 759:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 760:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args,
 761:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       _Requires<is_constructible<_Tp, _Args&&...>> = false>
 762:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	explicit constexpr
 763:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(in_place_t, _Args&&... __args)
 764:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _Base(std::in_place, std::forward<_Args>(__args)...) { }
 765:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 766:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args,
 767:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       _Requires<is_constructible<_Tp,
 768:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					  initializer_list<_Up>&,
 769:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					  _Args&&...>> = false>
 770:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	explicit constexpr
 771:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	optional(in_place_t, initializer_list<_Up> __il, _Args&&... __args)
 772:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _Base(std::in_place, __il, std::forward<_Args>(__args)...) { }
 773:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 774:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Assignment operators.
 775:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       optional&
 776:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator=(nullopt_t) noexcept
 777:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 778:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	this->_M_reset();
 779:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return *this;
 780:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 781:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 782:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up = _Tp>
 783:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	enable_if_t<__and_v<__not_self<_Up>,
 784:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    __not_<__and_<is_scalar<_Tp>,
 785:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 					  is_same<_Tp, decay_t<_Up>>>>,
 786:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    is_constructible<_Tp, _Up>,
 787:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    is_assignable<_Tp&, _Up>>,
 788:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		    optional&>
 789:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	operator=(_Up&& __u)
 790:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 791:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (this->_M_is_engaged())
ARM GAS  /tmp/ccCqaElO.s 			page 115


 792:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    this->_M_get() = std::forward<_Up>(__u);
 793:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  else
 794:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    this->_M_construct(std::forward<_Up>(__u));
 795:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 796:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return *this;
 797:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 798:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 799:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 800:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	enable_if_t<__and_v<__not_<is_same<_Tp, _Up>>,
 801:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    is_constructible<_Tp, const _Up&>,
 802:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    is_assignable<_Tp&, _Up>,
 803:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    __not_<__converts_from_optional<_Tp, _Up>>,
 804:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    __not_<__assigns_from_optional<_Tp, _Up>>>,
 805:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		    optional&>
 806:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	operator=(const optional<_Up>& __u)
 807:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 808:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (__u)
 809:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    {
 810:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      if (this->_M_is_engaged())
 811:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		this->_M_get() = *__u;
 812:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      else
 813:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		this->_M_construct(*__u);
 814:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    }
 815:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  else
 816:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    {
 817:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      this->_M_reset();
 818:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    }
 819:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return *this;
 820:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 821:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 822:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 823:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         enable_if_t<__and_v<__not_<is_same<_Tp, _Up>>,
 824:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    is_constructible<_Tp, _Up>,
 825:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    is_assignable<_Tp&, _Up>,
 826:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    __not_<__converts_from_optional<_Tp, _Up>>,
 827:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 			    __not_<__assigns_from_optional<_Tp, _Up>>>,
 828:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		    optional&>
 829:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	operator=(optional<_Up>&& __u)
 830:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 831:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  if (__u)
 832:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    {
 833:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      if (this->_M_is_engaged())
 834:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		this->_M_get() = std::move(*__u);
 835:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      else
 836:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 		this->_M_construct(std::move(*__u));
 837:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    }
 838:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  else
 839:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    {
 840:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	      this->_M_reset();
 841:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    }
 842:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 843:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return *this;
 844:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 845:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 846:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename... _Args>
 847:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	enable_if_t<is_constructible_v<_Tp, _Args&&...>, _Tp&>
 848:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	emplace(_Args&&... __args)
ARM GAS  /tmp/ccCqaElO.s 			page 116


 849:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 850:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_reset();
 851:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_construct(std::forward<_Args>(__args)...);
 852:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return this->_M_get();
 853:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 854:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 855:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up, typename... _Args>
 856:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	enable_if_t<is_constructible_v<_Tp, initializer_list<_Up>&,
 857:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 				       _Args&&...>, _Tp&>
 858:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	emplace(initializer_list<_Up> __il, _Args&&... __args)
 859:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 860:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_reset();
 861:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  this->_M_construct(__il, std::forward<_Args>(__args)...);
 862:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return this->_M_get();
 863:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 864:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 865:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Destructor is implicit, implemented in _Optional_base.
 866:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 867:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Swap.
 868:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       void
 869:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       swap(optional& __other)
 870:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       noexcept(is_nothrow_move_constructible_v<_Tp>
 871:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	       && is_nothrow_swappable_v<_Tp>)
 872:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 873:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	using std::swap;
 874:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 875:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	if (this->_M_is_engaged() && __other._M_is_engaged())
 876:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  swap(this->_M_get(), __other._M_get());
 877:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	else if (this->_M_is_engaged())
 878:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  {
 879:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    __other._M_construct(std::move(this->_M_get()));
 880:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    this->_M_destruct();
 881:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  }
 882:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	else if (__other._M_is_engaged())
 883:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  {
 884:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    this->_M_construct(std::move(__other._M_get()));
 885:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    __other._M_destruct();
 886:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  }
 887:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 888:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 889:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       // Observers.
 890:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp*
 891:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator->() const
 892:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return std::__addressof(this->_M_get()); }
 893:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 894:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp*
 895:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator->()
 896:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return std::__addressof(this->_M_get()); }
 897:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 898:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp&
 899:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator*() const&
 900:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_get(); }
 901:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 902:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp&
 903:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator*()&
 904:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_get(); }
 905:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
ARM GAS  /tmp/ccCqaElO.s 			page 117


 906:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp&&
 907:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator*()&&
 908:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return std::move(this->_M_get()); }
 909:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 910:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp&&
 911:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       operator*() const&&
 912:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return std::move(this->_M_get()); }
 913:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 914:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr explicit operator bool() const noexcept
 915:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_is_engaged(); }
 916:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 917:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr bool has_value() const noexcept
 918:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_is_engaged(); }
 919:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 920:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp&
 921:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       value() const&
 922:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 923:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return this->_M_is_engaged()
 924:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  ? this->_M_get()
 925:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  : (__throw_bad_optional_access(), this->_M_get());
 926:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 927:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 928:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp&
 929:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       value()&
 930:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 931:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return this->_M_is_engaged()
 932:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  ? this->_M_get()
 933:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  : (__throw_bad_optional_access(), this->_M_get());
 934:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 935:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 936:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr _Tp&&
 937:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       value()&&
 938:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 939:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return this->_M_is_engaged()
 940:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  ? std::move(this->_M_get())
 941:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  : (__throw_bad_optional_access(), std::move(this->_M_get()));
 942:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 943:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 944:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       constexpr const _Tp&&
 945:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       value() const&&
 946:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 947:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	return this->_M_is_engaged()
 948:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  ? std::move(this->_M_get())
 949:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  : (__throw_bad_optional_access(), std::move(this->_M_get()));
 950:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 951:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 952:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 953:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr _Tp
 954:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	value_or(_Up&& __u) const&
 955:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 956:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  static_assert(is_copy_constructible_v<_Tp>);
 957:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  static_assert(is_convertible_v<_Up&&, _Tp>);
 958:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 959:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return this->_M_is_engaged()
 960:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    ? this->_M_get() : static_cast<_Tp>(std::forward<_Up>(__u));
 961:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 962:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
ARM GAS  /tmp/ccCqaElO.s 			page 118


 963:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       template<typename _Up>
 964:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	constexpr _Tp
 965:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	value_or(_Up&& __u) &&
 1135              		.loc 8 965 2
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 24
 1138              		@ frame_needed = 1, uses_anonymous_args = 0
 1139 0000 80B5     		push	{r7, lr}
 1140              	.LCFI74:
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 86B0     		sub	sp, sp, #24
 1145              	.LCFI75:
 1146              		.cfi_def_cfa_offset 32
 1147 0004 00AF     		add	r7, sp, #0
 1148              	.LCFI76:
 1149              		.cfi_def_cfa_register 7
 1150 0006 F860     		str	r0, [r7, #12]
 1151 0008 B960     		str	r1, [r7, #8]
 966:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 967:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  static_assert(is_move_constructible_v<_Tp>);
 968:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  static_assert(is_convertible_v<_Up&&, _Tp>);
 969:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 970:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	  return this->_M_is_engaged()
 1152              		.loc 8 970 30
 1153 000a F868     		ldr	r0, [r7, #12]
 1154 000c FFF7FEFF 		bl	_ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_engagedEv
 1155 0010 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    ? std::move(this->_M_get())
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1156              		.loc 8 972 47
 1157 0012 002B     		cmp	r3, #0
 1158 0014 0ED0     		beq	.L47
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    ? std::move(this->_M_get())
 1159              		.loc 8 971 17 discriminator 1
 1160 0016 F868     		ldr	r0, [r7, #12]
 1161 0018 FFF7FEFF 		bl	_ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv
 1162 001c 0346     		mov	r3, r0
 1163 001e 1846     		mov	r0, r3
 1164 0020 FFF7FEFF 		bl	_ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_
 1165 0024 0246     		mov	r2, r0
 1166              		.loc 8 972 47 discriminator 1
 1167 0026 07F11003 		add	r3, r7, #16
 1168 002a 92E80300 		ldm	r2, {r0, r1}
 1169 002e 83E80300 		stm	r3, {r0, r1}
 1170 0032 09E0     		b	.L49
 1171              	.L47:
 1172              		.loc 8 972 42 discriminator 2
 1173 0034 B868     		ldr	r0, [r7, #8]
 1174 0036 FFF7FEFF 		bl	_ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE
 1175 003a 0246     		mov	r2, r0
 1176              		.loc 8 972 47 discriminator 2
 1177 003c 07F11003 		add	r3, r7, #16
 1178 0040 92E80300 		ldm	r2, {r0, r1}
 1179 0044 83E80300 		stm	r3, {r0, r1}
 1180              	.L49:
ARM GAS  /tmp/ccCqaElO.s 			page 119


 1181              		.loc 8 972 47 is_stmt 0
 1182 0048 3A69     		ldr	r2, [r7, #16]	@ float
 1183 004a 7B69     		ldr	r3, [r7, #20]	@ float
 1184 004c 07EE102A 		vmov	s14, r2
 1185 0050 07EE903A 		vmov	s15, r3
 973:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1186              		.loc 8 973 2 is_stmt 1
 1187 0054 B0EE470A 		vmov.f32	s0, s14
 1188 0058 F0EE670A 		vmov.f32	s1, s15
 1189 005c 1837     		adds	r7, r7, #24
 1190              	.LCFI77:
 1191              		.cfi_def_cfa_offset 8
 1192 005e BD46     		mov	sp, r7
 1193              	.LCFI78:
 1194              		.cfi_def_cfa_register 13
 1195              		@ sp needed
 1196 0060 80BD     		pop	{r7, pc}
 1197              		.cfi_endproc
 1198              	.LFE4876:
 1200              		.section	.text._ZN10OutputPortIfE8previousEv,"axG",%progbits,_ZN10OutputPortIfE8previousEv,comdat
 1201              		.align	1
 1202              		.weak	_ZN10OutputPortIfE8previousEv
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu fpv4-sp-d16
 1208              	_ZN10OutputPortIfE8previousEv:
 1209              	.LFB4878:
  88:Inc/component.hpp ****         if (age_ == 1) {
 1210              		.loc 7 88 22
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              	.LCFI79:
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 82B0     		sub	sp, sp, #8
 1220              	.LCFI80:
 1221              		.cfi_def_cfa_offset 16
 1222 0004 00AF     		add	r7, sp, #0
 1223              	.LCFI81:
 1224              		.cfi_def_cfa_register 7
 1225 0006 7860     		str	r0, [r7, #4]
 1226 0008 3960     		str	r1, [r7]
  89:Inc/component.hpp ****             return content_;
 1227              		.loc 7 89 13
 1228 000a 3B68     		ldr	r3, [r7]
 1229 000c 1B68     		ldr	r3, [r3]
  89:Inc/component.hpp ****             return content_;
 1230              		.loc 7 89 9
 1231 000e 012B     		cmp	r3, #1
 1232 0010 06D1     		bne	.L51
  90:Inc/component.hpp ****         } else {
 1233              		.loc 7 90 20
 1234 0012 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccCqaElO.s 			page 120


 1235 0014 0433     		adds	r3, r3, #4
 1236 0016 1946     		mov	r1, r3
 1237 0018 7868     		ldr	r0, [r7, #4]
 1238 001a FFF7FEFF 		bl	_ZNSt8optionalIfEC1IRfLb1EEEOT_
 1239 001e 03E0     		b	.L52
 1240              	.L51:
  92:Inc/component.hpp ****         }
 1241              		.loc 7 92 25
 1242 0020 1146     		mov	r1, r2
 1243 0022 7868     		ldr	r0, [r7, #4]
 1244 0024 FFF7FEFF 		bl	_ZNSt8optionalIfEC1ESt9nullopt_t
 1245              	.L52:
 1246              		.loc 7 94 5
 1247 0028 7868     		ldr	r0, [r7, #4]
 1248 002a 0837     		adds	r7, r7, #8
 1249              	.LCFI82:
 1250              		.cfi_def_cfa_offset 8
 1251 002c BD46     		mov	sp, r7
 1252              	.LCFI83:
 1253              		.cfi_def_cfa_register 13
 1254              		@ sp needed
 1255 002e 80BD     		pop	{r7, pc}
 1256              		.cfi_endproc
 1257              	.LFE4878:
 1259              		.section	.text._ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv,"axG",
 1260              		.align	1
 1261              		.weak	_ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu fpv4-sp-d16
 1267              	_ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv:
 1268              	.LFB4880:
 434:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
 1269              		.loc 8 434 22
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 8
 1272              		@ frame_needed = 1, uses_anonymous_args = 0
 1273              		@ link register save eliminated.
 1274 0000 80B4     		push	{r7}
 1275              	.LCFI84:
 1276              		.cfi_def_cfa_offset 4
 1277              		.cfi_offset 7, -4
 1278 0002 83B0     		sub	sp, sp, #12
 1279              	.LCFI85:
 1280              		.cfi_def_cfa_offset 16
 1281 0004 00AF     		add	r7, sp, #0
 1282              	.LCFI86:
 1283              		.cfi_def_cfa_register 7
 1284 0006 7860     		str	r0, [r7, #4]
 435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1285              		.loc 8 435 58
 1286 0008 7B68     		ldr	r3, [r7, #4]
 1287 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 435:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1288              		.loc 8 435 70
 1289 000c 1846     		mov	r0, r3
ARM GAS  /tmp/ccCqaElO.s 			page 121


 1290 000e 0C37     		adds	r7, r7, #12
 1291              	.LCFI87:
 1292              		.cfi_def_cfa_offset 4
 1293 0010 BD46     		mov	sp, r7
 1294              	.LCFI88:
 1295              		.cfi_def_cfa_register 13
 1296              		@ sp needed
 1297 0012 5DF8047B 		ldr	r7, [sp], #4
 1298              	.LCFI89:
 1299              		.cfi_restore 7
 1300              		.cfi_def_cfa_offset 0
 1301 0016 7047     		bx	lr
 1302              		.cfi_endproc
 1303              	.LFE4880:
 1305              		.section	.text._ZNOSt8optionalIfE8value_orIRfEEfOT_,"axG",%progbits,_ZNOSt8optionalIfE8value_orIRf
 1306              		.align	1
 1307              		.weak	_ZNOSt8optionalIfE8value_orIRfEEfOT_
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1311              		.fpu fpv4-sp-d16
 1313              	_ZNOSt8optionalIfE8value_orIRfEEfOT_:
 1314              	.LFB4879:
 965:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 1315              		.loc 8 965 2
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 8
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319 0000 80B5     		push	{r7, lr}
 1320              	.LCFI90:
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 82B0     		sub	sp, sp, #8
 1325              	.LCFI91:
 1326              		.cfi_def_cfa_offset 16
 1327 0004 00AF     		add	r7, sp, #0
 1328              	.LCFI92:
 1329              		.cfi_def_cfa_register 7
 1330 0006 7860     		str	r0, [r7, #4]
 1331 0008 3960     		str	r1, [r7]
 970:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    ? std::move(this->_M_get())
 1332              		.loc 8 970 30
 1333 000a 7868     		ldr	r0, [r7, #4]
 1334 000c FFF7FEFF 		bl	_ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv
 1335 0010 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1336              		.loc 8 971 6
 1337 0012 002B     		cmp	r3, #0
 1338 0014 09D0     		beq	.L56
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1339              		.loc 8 971 17 discriminator 1
 1340 0016 7868     		ldr	r0, [r7, #4]
 1341 0018 FFF7FEFF 		bl	_ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv
 1342 001c 0346     		mov	r3, r0
 1343 001e 1846     		mov	r0, r3
 1344 0020 FFF7FEFF 		bl	_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_
ARM GAS  /tmp/ccCqaElO.s 			page 122


 1345 0024 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1346              		.loc 8 971 6 discriminator 1
 1347 0026 1B68     		ldr	r3, [r3]	@ float
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1348              		.loc 8 972 47 discriminator 1
 1349 0028 04E0     		b	.L58
 1350              	.L56:
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1351              		.loc 8 972 42 discriminator 2
 1352 002a 3868     		ldr	r0, [r7]
 1353 002c FFF7FEFF 		bl	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
 1354 0030 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1355              		.loc 8 971 6 discriminator 2
 1356 0032 1B68     		ldr	r3, [r3]	@ float
 1357              	.L58:
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1358              		.loc 8 972 47 discriminator 1
 1359 0034 07EE903A 		vmov	s15, r3
 1360              		.loc 8 973 2 discriminator 1
 1361 0038 B0EE670A 		vmov.f32	s0, s15
 1362 003c 0837     		adds	r7, r7, #8
 1363              	.LCFI93:
 1364              		.cfi_def_cfa_offset 8
 1365 003e BD46     		mov	sp, r7
 1366              	.LCFI94:
 1367              		.cfi_def_cfa_register 13
 1368              		@ sp needed
 1369 0040 80BD     		pop	{r7, pc}
 1370              		.cfi_endproc
 1371              	.LFE4879:
 1373              		.section	.text._ZNOSt8optionalIfE8value_orIfEEfOT_,"axG",%progbits,_ZNOSt8optionalIfE8value_orIfEE
 1374              		.align	1
 1375              		.weak	_ZNOSt8optionalIfE8value_orIfEEfOT_
 1376              		.syntax unified
 1377              		.thumb
 1378              		.thumb_func
 1379              		.fpu fpv4-sp-d16
 1381              	_ZNOSt8optionalIfE8value_orIfEEfOT_:
 1382              	.LFB4881:
 965:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{
 1383              		.loc 8 965 2
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 8
 1386              		@ frame_needed = 1, uses_anonymous_args = 0
 1387 0000 80B5     		push	{r7, lr}
 1388              	.LCFI95:
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 7, -8
 1391              		.cfi_offset 14, -4
 1392 0002 82B0     		sub	sp, sp, #8
 1393              	.LCFI96:
 1394              		.cfi_def_cfa_offset 16
 1395 0004 00AF     		add	r7, sp, #0
 1396              	.LCFI97:
 1397              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccCqaElO.s 			page 123


 1398 0006 7860     		str	r0, [r7, #4]
 1399 0008 3960     		str	r1, [r7]
 970:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    ? std::move(this->_M_get())
 1400              		.loc 8 970 30
 1401 000a 7868     		ldr	r0, [r7, #4]
 1402 000c FFF7FEFF 		bl	_ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv
 1403 0010 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1404              		.loc 8 971 6
 1405 0012 002B     		cmp	r3, #0
 1406 0014 09D0     		beq	.L60
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1407              		.loc 8 971 17 discriminator 1
 1408 0016 7868     		ldr	r0, [r7, #4]
 1409 0018 FFF7FEFF 		bl	_ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv
 1410 001c 0346     		mov	r3, r0
 1411 001e 1846     		mov	r0, r3
 1412 0020 FFF7FEFF 		bl	_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_
 1413 0024 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1414              		.loc 8 971 6 discriminator 1
 1415 0026 1B68     		ldr	r3, [r3]	@ float
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1416              		.loc 8 972 47 discriminator 1
 1417 0028 04E0     		b	.L62
 1418              	.L60:
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1419              		.loc 8 972 42 discriminator 2
 1420 002a 3868     		ldr	r0, [r7]
 1421 002c FFF7FEFF 		bl	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
 1422 0030 0346     		mov	r3, r0
 971:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : static_cast<_Tp>(std::forward<_Up>(__u));
 1423              		.loc 8 971 6 discriminator 2
 1424 0032 1B68     		ldr	r3, [r3]	@ float
 1425              	.L62:
 972:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	}
 1426              		.loc 8 972 47 discriminator 1
 1427 0034 07EE903A 		vmov	s15, r3
 1428              		.loc 8 973 2 discriminator 1
 1429 0038 B0EE670A 		vmov.f32	s0, s15
 1430 003c 0837     		adds	r7, r7, #8
 1431              	.LCFI98:
 1432              		.cfi_def_cfa_offset 8
 1433 003e BD46     		mov	sp, r7
 1434              	.LCFI99:
 1435              		.cfi_def_cfa_register 13
 1436              		@ sp needed
 1437 0040 80BD     		pop	{r7, pc}
 1438              		.cfi_endproc
 1439              	.LFE4881:
 1441              		.section	.text._ZNSt4pairIffEC2IfLb1EEERKfOT_,"axG",%progbits,_ZNSt4pairIffEC5IfLb1EEERKfOT_,comda
 1442              		.align	1
 1443              		.weak	_ZNSt4pairIffEC2IfLb1EEERKfOT_
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1447              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccCqaElO.s 			page 124


 1449              	_ZNSt4pairIffEC2IfLb1EEERKfOT_:
 1450              	.LFB4883:
 336:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 1451              		.loc 6 336 18
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 16
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
 1455 0000 80B5     		push	{r7, lr}
 1456              	.LCFI100:
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 7, -8
 1459              		.cfi_offset 14, -4
 1460 0002 84B0     		sub	sp, sp, #16
 1461              	.LCFI101:
 1462              		.cfi_def_cfa_offset 24
 1463 0004 00AF     		add	r7, sp, #0
 1464              	.LCFI102:
 1465              		.cfi_def_cfa_register 7
 1466 0006 F860     		str	r0, [r7, #12]
 1467 0008 B960     		str	r1, [r7, #8]
 1468 000a 7A60     		str	r2, [r7, #4]
 1469              	.LBB3:
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 1470              		.loc 6 337 51
 1471 000c BB68     		ldr	r3, [r7, #8]
 1472 000e 1A68     		ldr	r2, [r3]	@ float
 1473 0010 FB68     		ldr	r3, [r7, #12]
 1474 0012 1A60     		str	r2, [r3]	@ float
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 1475              		.loc 6 337 46
 1476 0014 7868     		ldr	r0, [r7, #4]
 1477 0016 FFF7FEFF 		bl	_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
 1478 001a 0346     		mov	r3, r0
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 1479              		.loc 6 337 51
 1480 001c 1A68     		ldr	r2, [r3]	@ float
 1481 001e FB68     		ldr	r3, [r7, #12]
 1482 0020 5A60     		str	r2, [r3, #4]	@ float
 1483              	.LBE3:
 337:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 1484              		.loc 6 337 55
 1485 0022 FB68     		ldr	r3, [r7, #12]
 1486 0024 1846     		mov	r0, r3
 1487 0026 1037     		adds	r7, r7, #16
 1488              	.LCFI103:
 1489              		.cfi_def_cfa_offset 8
 1490 0028 BD46     		mov	sp, r7
 1491              	.LCFI104:
 1492              		.cfi_def_cfa_register 13
 1493              		@ sp needed
 1494 002a 80BD     		pop	{r7, pc}
 1495              		.cfi_endproc
 1496              	.LFE4883:
 1498              		.weak	_ZNSt4pairIffEC1IfLb1EEERKfOT_
 1499              		.thumb_set _ZNSt4pairIffEC1IfLb1EEERKfOT_,_ZNSt4pairIffEC2IfLb1EEERKfOT_
 1500              		.section	.text._ZN10OutputPortISt4pairIffEEaSES1_,"axG",%progbits,_ZN10OutputPortISt4pairIffEEaSES
 1501              		.align	1
ARM GAS  /tmp/ccCqaElO.s 			page 125


 1502              		.weak	_ZN10OutputPortISt4pairIffEEaSES1_
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu fpv4-sp-d16
 1508              	_ZN10OutputPortISt4pairIffEEaSES1_:
 1509              	.LFB4885:
  52:Inc/component.hpp ****         content_ = value;
 1510              		.loc 7 52 10
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 16
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514 0000 80B5     		push	{r7, lr}
 1515              	.LCFI105:
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 7, -8
 1518              		.cfi_offset 14, -4
 1519 0002 84B0     		sub	sp, sp, #16
 1520              	.LCFI106:
 1521              		.cfi_def_cfa_offset 24
 1522 0004 00AF     		add	r7, sp, #0
 1523              	.LCFI107:
 1524              		.cfi_def_cfa_register 7
 1525 0006 F860     		str	r0, [r7, #12]
 1526 0008 B0EE407A 		vmov.f32	s14, s0
 1527 000c F0EE607A 		vmov.f32	s15, s1
 1528 0010 87ED017A 		vstr.32	s14, [r7, #4]
 1529 0014 C7ED027A 		vstr.32	s15, [r7, #8]
  53:Inc/component.hpp ****         age_ = 0;
 1530              		.loc 7 53 18
 1531 0018 FB68     		ldr	r3, [r7, #12]
 1532 001a 0433     		adds	r3, r3, #4
 1533 001c 3A1D     		adds	r2, r7, #4
 1534 001e 1146     		mov	r1, r2
 1535 0020 1846     		mov	r0, r3
 1536 0022 FFF7FEFF 		bl	_ZNSt4pairIffEaSERKS0_
  54:Inc/component.hpp ****     }
 1537              		.loc 7 54 14
 1538 0026 FB68     		ldr	r3, [r7, #12]
 1539 0028 0022     		movs	r2, #0
 1540 002a 1A60     		str	r2, [r3]
  55:Inc/component.hpp **** 
 1541              		.loc 7 55 5
 1542 002c 00BF     		nop
 1543 002e 1037     		adds	r7, r7, #16
 1544              	.LCFI108:
 1545              		.cfi_def_cfa_offset 8
 1546 0030 BD46     		mov	sp, r7
 1547              	.LCFI109:
 1548              		.cfi_def_cfa_register 13
 1549              		@ sp needed
 1550 0032 80BD     		pop	{r7, pc}
 1551              		.cfi_endproc
 1552              	.LFE4885:
 1554              		.section	.text._ZN10OutputPortIfEaSEf,"axG",%progbits,_ZN10OutputPortIfEaSEf,comdat
 1555              		.align	1
 1556              		.weak	_ZN10OutputPortIfEaSEf
ARM GAS  /tmp/ccCqaElO.s 			page 126


 1557              		.syntax unified
 1558              		.thumb
 1559              		.thumb_func
 1560              		.fpu fpv4-sp-d16
 1562              	_ZN10OutputPortIfEaSEf:
 1563              	.LFB4886:
  52:Inc/component.hpp ****         content_ = value;
 1564              		.loc 7 52 10
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 8
 1567              		@ frame_needed = 1, uses_anonymous_args = 0
 1568              		@ link register save eliminated.
 1569 0000 80B4     		push	{r7}
 1570              	.LCFI110:
 1571              		.cfi_def_cfa_offset 4
 1572              		.cfi_offset 7, -4
 1573 0002 83B0     		sub	sp, sp, #12
 1574              	.LCFI111:
 1575              		.cfi_def_cfa_offset 16
 1576 0004 00AF     		add	r7, sp, #0
 1577              	.LCFI112:
 1578              		.cfi_def_cfa_register 7
 1579 0006 7860     		str	r0, [r7, #4]
 1580 0008 87ED000A 		vstr.32	s0, [r7]
  53:Inc/component.hpp ****         age_ = 0;
 1581              		.loc 7 53 18
 1582 000c 7B68     		ldr	r3, [r7, #4]
 1583 000e 3A68     		ldr	r2, [r7]	@ float
 1584 0010 5A60     		str	r2, [r3, #4]	@ float
  54:Inc/component.hpp ****     }
 1585              		.loc 7 54 14
 1586 0012 7B68     		ldr	r3, [r7, #4]
 1587 0014 0022     		movs	r2, #0
 1588 0016 1A60     		str	r2, [r3]
  55:Inc/component.hpp **** 
 1589              		.loc 7 55 5
 1590 0018 00BF     		nop
 1591 001a 0C37     		adds	r7, r7, #12
 1592              	.LCFI113:
 1593              		.cfi_def_cfa_offset 4
 1594 001c BD46     		mov	sp, r7
 1595              	.LCFI114:
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 001e 5DF8047B 		ldr	r7, [sp], #4
 1599              	.LCFI115:
 1600              		.cfi_restore 7
 1601              		.cfi_def_cfa_offset 0
 1602 0022 7047     		bx	lr
 1603              		.cfi_endproc
 1604              	.LFE4886:
 1606              		.section	.text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place
 1607              		.align	1
 1608              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place_tDpOT_
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
ARM GAS  /tmp/ccCqaElO.s 			page 127


 1612              		.fpu fpv4-sp-d16
 1614              	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place_tDpOT_:
 1615              	.LFB4933:
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : _M_value(std::forward<_Args>(__args)...)
 1616              		.loc 8 204 6
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 16
 1619              		@ frame_needed = 1, uses_anonymous_args = 0
 1620 0000 80B5     		push	{r7, lr}
 1621              	.LCFI116:
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 84B0     		sub	sp, sp, #16
 1626              	.LCFI117:
 1627              		.cfi_def_cfa_offset 24
 1628 0004 00AF     		add	r7, sp, #0
 1629              	.LCFI118:
 1630              		.cfi_def_cfa_register 7
 1631 0006 F860     		str	r0, [r7, #12]
 1632 0008 3972     		strb	r1, [r7, #8]
 1633 000a 7A60     		str	r2, [r7, #4]
 1634              	.LBB4:
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 1635              		.loc 8 205 36
 1636 000c 7868     		ldr	r0, [r7, #4]
 1637 000e FFF7FEFF 		bl	_ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE
 1638 0012 0246     		mov	r2, r0
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 1639              		.loc 8 205 47
 1640 0014 FB68     		ldr	r3, [r7, #12]
 1641 0016 92E80300 		ldm	r2, {r0, r1}
 1642 001a 83E80300 		stm	r3, {r0, r1}
 1643              	.LBE4:
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1644              		.loc 8 206 8
 1645 001e FB68     		ldr	r3, [r7, #12]
 1646 0020 1846     		mov	r0, r3
 1647 0022 1037     		adds	r7, r7, #16
 1648              	.LCFI119:
 1649              		.cfi_def_cfa_offset 8
 1650 0024 BD46     		mov	sp, r7
 1651              	.LCFI120:
 1652              		.cfi_def_cfa_register 13
 1653              		@ sp needed
 1654 0026 80BD     		pop	{r7, pc}
 1655              		.cfi_endproc
 1656              	.LFE4933:
 1658              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1IJRS1_EEESt10in_place_tDpOT_
 1659              		.thumb_set _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1IJRS1_EEESt10in_place_tDp
 1660              		.section	.text._ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE,"axG",%progbits,_ZSt
 1661              		.align	1
 1662              		.weak	_ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1666              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccCqaElO.s 			page 128


 1668              	_ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE:
 1669              	.LFB4935:
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 1670              		.loc 4 76 5
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 8
 1673              		@ frame_needed = 1, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
 1675 0000 80B4     		push	{r7}
 1676              	.LCFI121:
 1677              		.cfi_def_cfa_offset 4
 1678              		.cfi_offset 7, -4
 1679 0002 83B0     		sub	sp, sp, #12
 1680              	.LCFI122:
 1681              		.cfi_def_cfa_offset 16
 1682 0004 00AF     		add	r7, sp, #0
 1683              	.LCFI123:
 1684              		.cfi_def_cfa_register 7
 1685 0006 7860     		str	r0, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 1686              		.loc 4 77 36
 1687 0008 7B68     		ldr	r3, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 1688              		.loc 4 77 39
 1689 000a 1846     		mov	r0, r3
 1690 000c 0C37     		adds	r7, r7, #12
 1691              	.LCFI124:
 1692              		.cfi_def_cfa_offset 4
 1693 000e BD46     		mov	sp, r7
 1694              	.LCFI125:
 1695              		.cfi_def_cfa_register 13
 1696              		@ sp needed
 1697 0010 5DF8047B 		ldr	r7, [sp], #4
 1698              	.LCFI126:
 1699              		.cfi_restore 7
 1700              		.cfi_def_cfa_offset 0
 1701 0014 7047     		bx	lr
 1702              		.cfi_endproc
 1703              	.LFE4935:
 1705              		.section	.text._ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_,"axG",%pro
 1706              		.align	1
 1707              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv4-sp-d16
 1713              	_ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_:
 1714              	.LFB4936:
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__tag, std::forward<_Args>(__args)...),
 1715              		.loc 8 116 2
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 16
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719 0000 B0B5     		push	{r4, r5, r7, lr}
 1720              	.LCFI127:
 1721              		.cfi_def_cfa_offset 16
 1722              		.cfi_offset 4, -16
ARM GAS  /tmp/ccCqaElO.s 			page 129


 1723              		.cfi_offset 5, -12
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 84B0     		sub	sp, sp, #16
 1727              	.LCFI128:
 1728              		.cfi_def_cfa_offset 32
 1729 0004 00AF     		add	r7, sp, #0
 1730              	.LCFI129:
 1731              		.cfi_def_cfa_register 7
 1732 0006 F860     		str	r0, [r7, #12]
 1733 0008 3972     		strb	r1, [r7, #8]
 1734 000a 7A60     		str	r2, [r7, #4]
 1735              	.LBB5:
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{ }
 1736              		.loc 8 118 19
 1737 000c FC68     		ldr	r4, [r7, #12]
 1738 000e 7868     		ldr	r0, [r7, #4]
 1739 0010 FFF7FEFF 		bl	_ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE
 1740 0014 0346     		mov	r3, r0
 1741 0016 1A46     		mov	r2, r3
 1742 0018 2946     		mov	r1, r5
 1743 001a 2046     		mov	r0, r4
 1744 001c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1IJRS1_EEESt10in_place_tDpOT_
 1745 0020 FB68     		ldr	r3, [r7, #12]
 1746 0022 0122     		movs	r2, #1
 1747 0024 1A72     		strb	r2, [r3, #8]
 1748              	.LBE5:
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1749              		.loc 8 119 4
 1750 0026 FB68     		ldr	r3, [r7, #12]
 1751 0028 1846     		mov	r0, r3
 1752 002a 1037     		adds	r7, r7, #16
 1753              	.LCFI130:
 1754              		.cfi_def_cfa_offset 16
 1755 002c BD46     		mov	sp, r7
 1756              	.LCFI131:
 1757              		.cfi_def_cfa_register 13
 1758              		@ sp needed
 1759 002e B0BD     		pop	{r4, r5, r7, pc}
 1760              		.cfi_endproc
 1761              	.LFE4936:
 1763              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEEC1IJRS1_EEESt10in_place_tDpOT_
 1764              		.thumb_set _ZNSt22_Optional_payload_baseISt4pairIffEEC1IJRS1_EEESt10in_place_tDpOT_,_ZNSt22_Option
 1765              		.section	.text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_E
 1766              		.align	1
 1767              		.weak	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_EIJRS1_EEE
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
 1771              		.fpu fpv4-sp-d16
 1773              	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_
 1774              	.LFB4938:
 359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1775              		.loc 8 359 42
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 16
 1778              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccCqaElO.s 			page 130


 1779 0000 90B5     		push	{r4, r7, lr}
 1780              	.LCFI132:
 1781              		.cfi_def_cfa_offset 12
 1782              		.cfi_offset 4, -12
 1783              		.cfi_offset 7, -8
 1784              		.cfi_offset 14, -4
 1785 0002 85B0     		sub	sp, sp, #20
 1786              	.LCFI133:
 1787              		.cfi_def_cfa_offset 32
 1788 0004 00AF     		add	r7, sp, #0
 1789              	.LCFI134:
 1790              		.cfi_def_cfa_register 7
 1791 0006 F860     		str	r0, [r7, #12]
 1792 0008 3972     		strb	r1, [r7, #8]
 1793 000a 7A60     		str	r2, [r7, #4]
 1794              	.LBB6:
 359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1795              		.loc 8 359 42
 1796 000c FB68     		ldr	r3, [r7, #12]
 1797 000e 7A68     		ldr	r2, [r7, #4]
 1798 0010 2146     		mov	r1, r4
 1799 0012 1846     		mov	r0, r3
 1800 0014 FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_
 1801              	.LBE6:
 1802 0018 FB68     		ldr	r3, [r7, #12]
 1803 001a 1846     		mov	r0, r3
 1804 001c 1437     		adds	r7, r7, #20
 1805              	.LCFI135:
 1806              		.cfi_def_cfa_offset 12
 1807 001e BD46     		mov	sp, r7
 1808              	.LCFI136:
 1809              		.cfi_def_cfa_register 13
 1810              		@ sp needed
 1811 0020 90BD     		pop	{r4, r7, pc}
 1812              		.cfi_endproc
 1813              	.LFE4938:
 1815              		.weak	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI1St22_Optional_payload_baseIS1_EIJRS1_EEE
 1816              		.thumb_set _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI1St22_Optional_payload_baseIS1_EIJRS
 1817              		.section	.text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_,"axG",
 1818              		.align	1
 1819              		.weak	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_
 1820              		.syntax unified
 1821              		.thumb
 1822              		.thumb_func
 1823              		.fpu fpv4-sp-d16
 1825              	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_:
 1826              	.LFB4940:
 608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 1827              		.loc 8 608 28
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 16
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831 0000 B0B5     		push	{r4, r5, r7, lr}
 1832              	.LCFI137:
 1833              		.cfi_def_cfa_offset 16
 1834              		.cfi_offset 4, -16
 1835              		.cfi_offset 5, -12
ARM GAS  /tmp/ccCqaElO.s 			page 131


 1836              		.cfi_offset 7, -8
 1837              		.cfi_offset 14, -4
 1838 0002 84B0     		sub	sp, sp, #16
 1839              	.LCFI138:
 1840              		.cfi_def_cfa_offset 32
 1841 0004 00AF     		add	r7, sp, #0
 1842              	.LCFI139:
 1843              		.cfi_def_cfa_register 7
 1844 0006 F860     		str	r0, [r7, #12]
 1845 0008 3972     		strb	r1, [r7, #8]
 1846 000a 7A60     		str	r2, [r7, #4]
 1847              	.LBB7:
 610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1848              		.loc 8 610 38
 1849 000c FC68     		ldr	r4, [r7, #12]
 1850 000e 7868     		ldr	r0, [r7, #4]
 1851 0010 FFF7FEFF 		bl	_ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE
 1852 0014 0346     		mov	r3, r0
 1853 0016 1A46     		mov	r2, r3
 1854 0018 2946     		mov	r1, r5
 1855 001a 2046     		mov	r0, r4
 1856 001c FFF7FEFF 		bl	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI1St22_Optional_payload_baseIS1_EIJRS1_EEESt1
 1857              	.LBE7:
 610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1858              		.loc 8 610 42
 1859 0020 FB68     		ldr	r3, [r7, #12]
 1860 0022 1846     		mov	r0, r3
 1861 0024 1037     		adds	r7, r7, #16
 1862              	.LCFI140:
 1863              		.cfi_def_cfa_offset 16
 1864 0026 BD46     		mov	sp, r7
 1865              	.LCFI141:
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 0028 B0BD     		pop	{r4, r5, r7, pc}
 1869              		.cfi_endproc
 1870              	.LFE4940:
 1872              		.weak	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC1IJRS1_ELb0EEESt10in_place_tDpOT_
 1873              		.thumb_set _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC1IJRS1_ELb0EEESt10in_place_tDpOT_,_ZNSt14_Op
 1874              		.section	.text._ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_,"axG",%progbits,_ZNSt8optionalISt4pairI
 1875              		.align	1
 1876              		.weak	_ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv4-sp-d16
 1882              	_ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_:
 1883              	.LFB4942:
 701:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _Base(std::in_place, std::forward<_Up>(__t)) { }
 1884              		.loc 8 701 2
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 8
 1887              		@ frame_needed = 1, uses_anonymous_args = 0
 1888 0000 B0B5     		push	{r4, r5, r7, lr}
 1889              	.LCFI142:
 1890              		.cfi_def_cfa_offset 16
 1891              		.cfi_offset 4, -16
ARM GAS  /tmp/ccCqaElO.s 			page 132


 1892              		.cfi_offset 5, -12
 1893              		.cfi_offset 7, -8
 1894              		.cfi_offset 14, -4
 1895 0002 82B0     		sub	sp, sp, #8
 1896              	.LCFI143:
 1897              		.cfi_def_cfa_offset 24
 1898 0004 00AF     		add	r7, sp, #0
 1899              	.LCFI144:
 1900              		.cfi_def_cfa_register 7
 1901 0006 7860     		str	r0, [r7, #4]
 1902 0008 3960     		str	r1, [r7]
 1903              	.LBB8:
 702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1904              		.loc 8 702 47
 1905 000a 7C68     		ldr	r4, [r7, #4]
 1906 000c 3868     		ldr	r0, [r7]
 1907 000e FFF7FEFF 		bl	_ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE
 1908 0012 0346     		mov	r3, r0
 1909 0014 1A46     		mov	r2, r3
 1910 0016 2946     		mov	r1, r5
 1911 0018 2046     		mov	r0, r4
 1912 001a FFF7FEFF 		bl	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_
 1913              	.LBE8:
 702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1914              		.loc 8 702 51
 1915 001e 7B68     		ldr	r3, [r7, #4]
 1916 0020 1846     		mov	r0, r3
 1917 0022 0837     		adds	r7, r7, #8
 1918              	.LCFI145:
 1919              		.cfi_def_cfa_offset 16
 1920 0024 BD46     		mov	sp, r7
 1921              	.LCFI146:
 1922              		.cfi_def_cfa_register 13
 1923              		@ sp needed
 1924 0026 B0BD     		pop	{r4, r5, r7, pc}
 1925              		.cfi_endproc
 1926              	.LFE4942:
 1928              		.weak	_ZNSt8optionalISt4pairIffEEC1IRS1_Lb1EEEOT_
 1929              		.thumb_set _ZNSt8optionalISt4pairIffEEC1IRS1_Lb1EEEOT_,_ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_
 1930              		.section	.text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev,"axG",%progbits,_Z
 1931              		.align	1
 1932              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu fpv4-sp-d16
 1938              	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev:
 1939              	.LFB4949:
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1940              		.loc 8 200 14
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 8
 1943              		@ frame_needed = 1, uses_anonymous_args = 0
 1944              		@ link register save eliminated.
 1945 0000 80B4     		push	{r7}
 1946              	.LCFI147:
 1947              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccCqaElO.s 			page 133


 1948              		.cfi_offset 7, -4
 1949 0002 83B0     		sub	sp, sp, #12
 1950              	.LCFI148:
 1951              		.cfi_def_cfa_offset 16
 1952 0004 00AF     		add	r7, sp, #0
 1953              	.LCFI149:
 1954              		.cfi_def_cfa_register 7
 1955 0006 7860     		str	r0, [r7, #4]
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 1956              		.loc 8 200 49
 1957 0008 7B68     		ldr	r3, [r7, #4]
 1958 000a 1846     		mov	r0, r3
 1959 000c 0C37     		adds	r7, r7, #12
 1960              	.LCFI150:
 1961              		.cfi_def_cfa_offset 4
 1962 000e BD46     		mov	sp, r7
 1963              	.LCFI151:
 1964              		.cfi_def_cfa_register 13
 1965              		@ sp needed
 1966 0010 5DF8047B 		ldr	r7, [sp], #4
 1967              	.LCFI152:
 1968              		.cfi_restore 7
 1969              		.cfi_def_cfa_offset 0
 1970 0014 7047     		bx	lr
 1971              		.cfi_endproc
 1972              	.LFE4949:
 1974              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1Ev
 1975              		.thumb_set _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1Ev,_ZNSt22_Optional_paylo
 1976              		.section	.text._ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev,"axG",%progbits,_ZNSt22_Optional_pay
 1977              		.align	1
 1978              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu fpv4-sp-d16
 1984              	_ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev:
 1985              	.LFB4951:
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload_base() = default;
 1986              		.loc 8 111 7
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 8
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 0000 80B5     		push	{r7, lr}
 1991              	.LCFI153:
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 82B0     		sub	sp, sp, #8
 1996              	.LCFI154:
 1997              		.cfi_def_cfa_offset 16
 1998 0004 00AF     		add	r7, sp, #0
 1999              	.LCFI155:
 2000              		.cfi_def_cfa_register 7
 2001 0006 7860     		str	r0, [r7, #4]
 2002              	.LBB9:
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload_base() = default;
 2003              		.loc 8 111 7
ARM GAS  /tmp/ccCqaElO.s 			page 134


 2004 0008 7B68     		ldr	r3, [r7, #4]
 2005 000a 1846     		mov	r0, r3
 2006 000c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1Ev
 2007 0010 7B68     		ldr	r3, [r7, #4]
 2008 0012 0022     		movs	r2, #0
 2009 0014 1A72     		strb	r2, [r3, #8]
 2010              	.LBE9:
 2011 0016 7B68     		ldr	r3, [r7, #4]
 2012 0018 1846     		mov	r0, r3
 2013 001a 0837     		adds	r7, r7, #8
 2014              	.LCFI156:
 2015              		.cfi_def_cfa_offset 8
 2016 001c BD46     		mov	sp, r7
 2017              	.LCFI157:
 2018              		.cfi_def_cfa_register 13
 2019              		@ sp needed
 2020 001e 80BD     		pop	{r7, pc}
 2021              		.cfi_endproc
 2022              	.LFE4951:
 2024              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEEC1Ev
 2025              		.thumb_set _ZNSt22_Optional_payload_baseISt4pairIffEEC1Ev,_ZNSt22_Optional_payload_baseISt4pairIff
 2026              		.section	.text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev,"axG",%progbits,_ZNSt17_Optio
 2027              		.align	1
 2028              		.weak	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev
 2029              		.syntax unified
 2030              		.thumb
 2031              		.thumb_func
 2032              		.fpu fpv4-sp-d16
 2034              	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev:
 2035              	.LFB4953:
 361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload() = default;
 2036              		.loc 8 361 7
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 8
 2039              		@ frame_needed = 1, uses_anonymous_args = 0
 2040 0000 80B5     		push	{r7, lr}
 2041              	.LCFI158:
 2042              		.cfi_def_cfa_offset 8
 2043              		.cfi_offset 7, -8
 2044              		.cfi_offset 14, -4
 2045 0002 82B0     		sub	sp, sp, #8
 2046              	.LCFI159:
 2047              		.cfi_def_cfa_offset 16
 2048 0004 00AF     		add	r7, sp, #0
 2049              	.LCFI160:
 2050              		.cfi_def_cfa_register 7
 2051 0006 7860     		str	r0, [r7, #4]
 2052              	.LBB10:
 361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload() = default;
 2053              		.loc 8 361 7
 2054 0008 7B68     		ldr	r3, [r7, #4]
 2055 000a 1846     		mov	r0, r3
 2056 000c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev
 2057              	.LBE10:
 2058 0010 7B68     		ldr	r3, [r7, #4]
 2059 0012 1846     		mov	r0, r3
 2060 0014 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccCqaElO.s 			page 135


 2061              	.LCFI161:
 2062              		.cfi_def_cfa_offset 8
 2063 0016 BD46     		mov	sp, r7
 2064              	.LCFI162:
 2065              		.cfi_def_cfa_register 13
 2066              		@ sp needed
 2067 0018 80BD     		pop	{r7, pc}
 2068              		.cfi_endproc
 2069              	.LFE4953:
 2071              		.weak	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC1Ev
 2072              		.thumb_set _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC1Ev,_ZNSt17_Optional_payloadISt4pairI
 2073              		.section	.text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev,"axG",%progbits,_ZNSt14_Optional_bas
 2074              		.align	1
 2075              		.weak	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev
 2076              		.syntax unified
 2077              		.thumb
 2078              		.thumb_func
 2079              		.fpu fpv4-sp-d16
 2081              	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev:
 2082              	.LFB4955:
 603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2083              		.loc 8 603 17
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 8
 2086              		@ frame_needed = 1, uses_anonymous_args = 0
 2087 0000 80B5     		push	{r7, lr}
 2088              	.LCFI163:
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 7, -8
 2091              		.cfi_offset 14, -4
 2092 0002 82B0     		sub	sp, sp, #8
 2093              	.LCFI164:
 2094              		.cfi_def_cfa_offset 16
 2095 0004 00AF     		add	r7, sp, #0
 2096              	.LCFI165:
 2097              		.cfi_def_cfa_register 7
 2098 0006 7860     		str	r0, [r7, #4]
 2099              	.LBB11:
 603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2100              		.loc 8 603 17
 2101 0008 7B68     		ldr	r3, [r7, #4]
 2102 000a 1846     		mov	r0, r3
 2103 000c FFF7FEFF 		bl	_ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC1Ev
 2104              	.LBE11:
 2105 0010 7B68     		ldr	r3, [r7, #4]
 2106 0012 1846     		mov	r0, r3
 2107 0014 0837     		adds	r7, r7, #8
 2108              	.LCFI166:
 2109              		.cfi_def_cfa_offset 8
 2110 0016 BD46     		mov	sp, r7
 2111              	.LCFI167:
 2112              		.cfi_def_cfa_register 13
 2113              		@ sp needed
 2114 0018 80BD     		pop	{r7, pc}
 2115              		.cfi_endproc
 2116              	.LFE4955:
 2118              		.weak	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC1Ev
ARM GAS  /tmp/ccCqaElO.s 			page 136


 2119              		.thumb_set _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC1Ev,_ZNSt14_Optional_baseISt4pairIffELb1ELb1
 2120              		.section	.text._ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t,"axG",%progbits,_ZNSt8optionalISt4pairIf
 2121              		.align	1
 2122              		.weak	_ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t
 2123              		.syntax unified
 2124              		.thumb
 2125              		.thumb_func
 2126              		.fpu fpv4-sp-d16
 2128              	_ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t:
 2129              	.LFB4957:
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2130              		.loc 8 693 17
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 8
 2133              		@ frame_needed = 1, uses_anonymous_args = 0
 2134 0000 80B5     		push	{r7, lr}
 2135              	.LCFI168:
 2136              		.cfi_def_cfa_offset 8
 2137              		.cfi_offset 7, -8
 2138              		.cfi_offset 14, -4
 2139 0002 82B0     		sub	sp, sp, #8
 2140              	.LCFI169:
 2141              		.cfi_def_cfa_offset 16
 2142 0004 00AF     		add	r7, sp, #0
 2143              	.LCFI170:
 2144              		.cfi_def_cfa_register 7
 2145 0006 7860     		str	r0, [r7, #4]
 2146 0008 3970     		strb	r1, [r7]
 2147              	.LBB12:
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2148              		.loc 8 693 46
 2149 000a 7B68     		ldr	r3, [r7, #4]
 2150 000c 1846     		mov	r0, r3
 2151 000e FFF7FEFF 		bl	_ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev
 2152              	.LBE12:
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2153              		.loc 8 693 48
 2154 0012 7B68     		ldr	r3, [r7, #4]
 2155 0014 1846     		mov	r0, r3
 2156 0016 0837     		adds	r7, r7, #8
 2157              	.LCFI171:
 2158              		.cfi_def_cfa_offset 8
 2159 0018 BD46     		mov	sp, r7
 2160              	.LCFI172:
 2161              		.cfi_def_cfa_register 13
 2162              		@ sp needed
 2163 001a 80BD     		pop	{r7, pc}
 2164              		.cfi_endproc
 2165              	.LFE4957:
 2167              		.weak	_ZNSt8optionalISt4pairIffEEC1ESt9nullopt_t
 2168              		.thumb_set _ZNSt8optionalISt4pairIffEEC1ESt9nullopt_t,_ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t
 2169              		.section	.text._ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv,"ax
 2170              		.align	1
 2171              		.weak	_ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
ARM GAS  /tmp/ccCqaElO.s 			page 137


 2175              		.fpu fpv4-sp-d16
 2177              	_ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv:
 2178              	.LFB4959:
 439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 2179              		.loc 8 439 7
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 8
 2182              		@ frame_needed = 1, uses_anonymous_args = 0
 2183 0000 80B5     		push	{r7, lr}
 2184              	.LCFI173:
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 7, -8
 2187              		.cfi_offset 14, -4
 2188 0002 82B0     		sub	sp, sp, #8
 2189              	.LCFI174:
 2190              		.cfi_def_cfa_offset 16
 2191 0004 00AF     		add	r7, sp, #0
 2192              	.LCFI175:
 2193              		.cfi_def_cfa_register 7
 2194 0006 7860     		str	r0, [r7, #4]
 442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 2195              		.loc 8 442 51
 2196 0008 7B68     		ldr	r3, [r7, #4]
 2197 000a 1846     		mov	r0, r3
 2198 000c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv
 2199 0010 0346     		mov	r3, r0
 443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2200              		.loc 8 443 7
 2201 0012 1846     		mov	r0, r3
 2202 0014 0837     		adds	r7, r7, #8
 2203              	.LCFI176:
 2204              		.cfi_def_cfa_offset 8
 2205 0016 BD46     		mov	sp, r7
 2206              	.LCFI177:
 2207              		.cfi_def_cfa_register 13
 2208              		@ sp needed
 2209 0018 80BD     		pop	{r7, pc}
 2210              		.cfi_endproc
 2211              	.LFE4959:
 2213              		.section	.text._ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",%progbits,_ZSt7
 2214              		.align	1
 2215              		.weak	_ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2219              		.fpu fpv4-sp-d16
 2221              	_ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE:
 2222              	.LFB4960:
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 2223              		.loc 4 76 5
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 8
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227              		@ link register save eliminated.
 2228 0000 80B4     		push	{r7}
 2229              	.LCFI178:
 2230              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccCqaElO.s 			page 138


 2231              		.cfi_offset 7, -4
 2232 0002 83B0     		sub	sp, sp, #12
 2233              	.LCFI179:
 2234              		.cfi_def_cfa_offset 16
 2235 0004 00AF     		add	r7, sp, #0
 2236              	.LCFI180:
 2237              		.cfi_def_cfa_register 7
 2238 0006 7860     		str	r0, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 2239              		.loc 4 77 36
 2240 0008 7B68     		ldr	r3, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 2241              		.loc 4 77 39
 2242 000a 1846     		mov	r0, r3
 2243 000c 0C37     		adds	r7, r7, #12
 2244              	.LCFI181:
 2245              		.cfi_def_cfa_offset 4
 2246 000e BD46     		mov	sp, r7
 2247              	.LCFI182:
 2248              		.cfi_def_cfa_register 13
 2249              		@ sp needed
 2250 0010 5DF8047B 		ldr	r7, [sp], #4
 2251              	.LCFI183:
 2252              		.cfi_restore 7
 2253              		.cfi_def_cfa_offset 0
 2254 0014 7047     		bx	lr
 2255              		.cfi_endproc
 2256              	.LFE4960:
 2258              		.section	.text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_,"axG",
 2259              		.align	1
 2260              		.weak	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_
 2261              		.syntax unified
 2262              		.thumb
 2263              		.thumb_func
 2264              		.fpu fpv4-sp-d16
 2266              	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_:
 2267              	.LFB4966:
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    : _M_value(std::forward<_Args>(__args)...)
 2268              		.loc 8 204 6
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 16
 2271              		@ frame_needed = 1, uses_anonymous_args = 0
 2272 0000 80B5     		push	{r7, lr}
 2273              	.LCFI184:
 2274              		.cfi_def_cfa_offset 8
 2275              		.cfi_offset 7, -8
 2276              		.cfi_offset 14, -4
 2277 0002 84B0     		sub	sp, sp, #16
 2278              	.LCFI185:
 2279              		.cfi_def_cfa_offset 24
 2280 0004 00AF     		add	r7, sp, #0
 2281              	.LCFI186:
 2282              		.cfi_def_cfa_register 7
 2283 0006 F860     		str	r0, [r7, #12]
 2284 0008 3972     		strb	r1, [r7, #8]
 2285 000a 7A60     		str	r2, [r7, #4]
 2286              	.LBB13:
ARM GAS  /tmp/ccCqaElO.s 			page 139


 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 2287              		.loc 8 205 36
 2288 000c 7868     		ldr	r0, [r7, #4]
 2289 000e FFF7FEFF 		bl	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
 2290 0012 0346     		mov	r3, r0
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	    { }
 2291              		.loc 8 205 47
 2292 0014 1A68     		ldr	r2, [r3]	@ float
 2293 0016 FB68     		ldr	r3, [r7, #12]
 2294 0018 1A60     		str	r2, [r3]	@ float
 2295              	.LBE13:
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2296              		.loc 8 206 8
 2297 001a FB68     		ldr	r3, [r7, #12]
 2298 001c 1846     		mov	r0, r3
 2299 001e 1037     		adds	r7, r7, #16
 2300              	.LCFI187:
 2301              		.cfi_def_cfa_offset 8
 2302 0020 BD46     		mov	sp, r7
 2303              	.LCFI188:
 2304              		.cfi_def_cfa_register 13
 2305              		@ sp needed
 2306 0022 80BD     		pop	{r7, pc}
 2307              		.cfi_endproc
 2308              	.LFE4966:
 2310              		.weak	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1IJRfEEESt10in_place_tDpOT_
 2311              		.thumb_set _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1IJRfEEESt10in_place_tDpOT_,_ZNSt22_Op
 2312              		.section	.text._ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE,"axG",%progbits,_ZSt7forwardIR
 2313              		.align	1
 2314              		.weak	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
 2315              		.syntax unified
 2316              		.thumb
 2317              		.thumb_func
 2318              		.fpu fpv4-sp-d16
 2320              	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE:
 2321              	.LFB4968:
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 2322              		.loc 4 76 5
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 8
 2325              		@ frame_needed = 1, uses_anonymous_args = 0
 2326              		@ link register save eliminated.
 2327 0000 80B4     		push	{r7}
 2328              	.LCFI189:
 2329              		.cfi_def_cfa_offset 4
 2330              		.cfi_offset 7, -4
 2331 0002 83B0     		sub	sp, sp, #12
 2332              	.LCFI190:
 2333              		.cfi_def_cfa_offset 16
 2334 0004 00AF     		add	r7, sp, #0
 2335              	.LCFI191:
 2336              		.cfi_def_cfa_register 7
 2337 0006 7860     		str	r0, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
 2338              		.loc 4 77 36
 2339 0008 7B68     		ldr	r3, [r7, #4]
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h **** 
ARM GAS  /tmp/ccCqaElO.s 			page 140


 2340              		.loc 4 77 39
 2341 000a 1846     		mov	r0, r3
 2342 000c 0C37     		adds	r7, r7, #12
 2343              	.LCFI192:
 2344              		.cfi_def_cfa_offset 4
 2345 000e BD46     		mov	sp, r7
 2346              	.LCFI193:
 2347              		.cfi_def_cfa_register 13
 2348              		@ sp needed
 2349 0010 5DF8047B 		ldr	r7, [sp], #4
 2350              	.LCFI194:
 2351              		.cfi_restore 7
 2352              		.cfi_def_cfa_offset 0
 2353 0014 7047     		bx	lr
 2354              		.cfi_endproc
 2355              	.LFE4968:
 2357              		.section	.text._ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_,"axG",%progbits,_ZNSt2
 2358              		.align	1
 2359              		.weak	_ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_
 2360              		.syntax unified
 2361              		.thumb
 2362              		.thumb_func
 2363              		.fpu fpv4-sp-d16
 2365              	_ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_:
 2366              	.LFB4969:
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _M_payload(__tag, std::forward<_Args>(__args)...),
 2367              		.loc 8 116 2
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 16
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 0000 B0B5     		push	{r4, r5, r7, lr}
 2372              	.LCFI195:
 2373              		.cfi_def_cfa_offset 16
 2374              		.cfi_offset 4, -16
 2375              		.cfi_offset 5, -12
 2376              		.cfi_offset 7, -8
 2377              		.cfi_offset 14, -4
 2378 0002 84B0     		sub	sp, sp, #16
 2379              	.LCFI196:
 2380              		.cfi_def_cfa_offset 32
 2381 0004 00AF     		add	r7, sp, #0
 2382              	.LCFI197:
 2383              		.cfi_def_cfa_register 7
 2384 0006 F860     		str	r0, [r7, #12]
 2385 0008 3972     		strb	r1, [r7, #8]
 2386 000a 7A60     		str	r2, [r7, #4]
 2387              	.LBB14:
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	{ }
 2388              		.loc 8 118 19
 2389 000c FC68     		ldr	r4, [r7, #12]
 2390 000e 7868     		ldr	r0, [r7, #4]
 2391 0010 FFF7FEFF 		bl	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
 2392 0014 0346     		mov	r3, r0
 2393 0016 1A46     		mov	r2, r3
 2394 0018 2946     		mov	r1, r5
 2395 001a 2046     		mov	r0, r4
 2396 001c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1IJRfEEESt10in_place_tDpOT_
ARM GAS  /tmp/ccCqaElO.s 			page 141


 2397 0020 FB68     		ldr	r3, [r7, #12]
 2398 0022 0122     		movs	r2, #1
 2399 0024 1A71     		strb	r2, [r3, #4]
 2400              	.LBE14:
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2401              		.loc 8 119 4
 2402 0026 FB68     		ldr	r3, [r7, #12]
 2403 0028 1846     		mov	r0, r3
 2404 002a 1037     		adds	r7, r7, #16
 2405              	.LCFI198:
 2406              		.cfi_def_cfa_offset 16
 2407 002c BD46     		mov	sp, r7
 2408              	.LCFI199:
 2409              		.cfi_def_cfa_register 13
 2410              		@ sp needed
 2411 002e B0BD     		pop	{r4, r5, r7, pc}
 2412              		.cfi_endproc
 2413              	.LFE4969:
 2415              		.weak	_ZNSt22_Optional_payload_baseIfEC1IJRfEEESt10in_place_tDpOT_
 2416              		.thumb_set _ZNSt22_Optional_payload_baseIfEC1IJRfEEESt10in_place_tDpOT_,_ZNSt22_Optional_payload_b
 2417              		.section	.text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10i
 2418              		.align	1
 2419              		.weak	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10in_place_t
 2420              		.syntax unified
 2421              		.thumb
 2422              		.thumb_func
 2423              		.fpu fpv4-sp-d16
 2425              	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_:
 2426              	.LFB4971:
 301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2427              		.loc 8 301 42
 2428              		.cfi_startproc
 2429              		@ args = 0, pretend = 0, frame = 16
 2430              		@ frame_needed = 1, uses_anonymous_args = 0
 2431 0000 90B5     		push	{r4, r7, lr}
 2432              	.LCFI200:
 2433              		.cfi_def_cfa_offset 12
 2434              		.cfi_offset 4, -12
 2435              		.cfi_offset 7, -8
 2436              		.cfi_offset 14, -4
 2437 0002 85B0     		sub	sp, sp, #20
 2438              	.LCFI201:
 2439              		.cfi_def_cfa_offset 32
 2440 0004 00AF     		add	r7, sp, #0
 2441              	.LCFI202:
 2442              		.cfi_def_cfa_register 7
 2443 0006 F860     		str	r0, [r7, #12]
 2444 0008 3972     		strb	r1, [r7, #8]
 2445 000a 7A60     		str	r2, [r7, #4]
 2446              	.LBB15:
 301:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2447              		.loc 8 301 42
 2448 000c FB68     		ldr	r3, [r7, #12]
 2449 000e 7A68     		ldr	r2, [r7, #4]
 2450 0010 2146     		mov	r1, r4
 2451 0012 1846     		mov	r0, r3
 2452 0014 FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_
ARM GAS  /tmp/ccCqaElO.s 			page 142


 2453              	.LBE15:
 2454 0018 FB68     		ldr	r3, [r7, #12]
 2455 001a 1846     		mov	r0, r3
 2456 001c 1437     		adds	r7, r7, #20
 2457              	.LCFI203:
 2458              		.cfi_def_cfa_offset 12
 2459 001e BD46     		mov	sp, r7
 2460              	.LCFI204:
 2461              		.cfi_def_cfa_register 13
 2462              		@ sp needed
 2463 0020 90BD     		pop	{r4, r7, pc}
 2464              		.cfi_endproc
 2465              	.LFE4971:
 2467              		.weak	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI1St22_Optional_payload_baseIfEIJRfEEESt10in_place_t
 2468              		.thumb_set _ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI1St22_Optional_payload_baseIfEIJRfEEESt10in_pl
 2469              		.section	.text._ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_,"axG",%progbits,_Z
 2470              		.align	1
 2471              		.weak	_ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2475              		.fpu fpv4-sp-d16
 2477              	_ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_:
 2478              	.LFB4973:
 608:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****         : _M_payload(in_place,
 2479              		.loc 8 608 28
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 16
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 B0B5     		push	{r4, r5, r7, lr}
 2484              	.LCFI205:
 2485              		.cfi_def_cfa_offset 16
 2486              		.cfi_offset 4, -16
 2487              		.cfi_offset 5, -12
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 84B0     		sub	sp, sp, #16
 2491              	.LCFI206:
 2492              		.cfi_def_cfa_offset 32
 2493 0004 00AF     		add	r7, sp, #0
 2494              	.LCFI207:
 2495              		.cfi_def_cfa_register 7
 2496 0006 F860     		str	r0, [r7, #12]
 2497 0008 3972     		strb	r1, [r7, #8]
 2498 000a 7A60     		str	r2, [r7, #4]
 2499              	.LBB16:
 610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2500              		.loc 8 610 38
 2501 000c FC68     		ldr	r4, [r7, #12]
 2502 000e 7868     		ldr	r0, [r7, #4]
 2503 0010 FFF7FEFF 		bl	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
 2504 0014 0346     		mov	r3, r0
 2505 0016 1A46     		mov	r2, r3
 2506 0018 2946     		mov	r1, r5
 2507 001a 2046     		mov	r0, r4
 2508 001c FFF7FEFF 		bl	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI1St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpO
 2509              	.LBE16:
ARM GAS  /tmp/ccCqaElO.s 			page 143


 610:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2510              		.loc 8 610 42
 2511 0020 FB68     		ldr	r3, [r7, #12]
 2512 0022 1846     		mov	r0, r3
 2513 0024 1037     		adds	r7, r7, #16
 2514              	.LCFI208:
 2515              		.cfi_def_cfa_offset 16
 2516 0026 BD46     		mov	sp, r7
 2517              	.LCFI209:
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0028 B0BD     		pop	{r4, r5, r7, pc}
 2521              		.cfi_endproc
 2522              	.LFE4973:
 2524              		.weak	_ZNSt14_Optional_baseIfLb1ELb1EEC1IJRfELb0EEESt10in_place_tDpOT_
 2525              		.thumb_set _ZNSt14_Optional_baseIfLb1ELb1EEC1IJRfELb0EEESt10in_place_tDpOT_,_ZNSt14_Optional_baseI
 2526              		.section	.text._ZNSt8optionalIfEC2IRfLb1EEEOT_,"axG",%progbits,_ZNSt8optionalIfEC5IRfLb1EEEOT_,com
 2527              		.align	1
 2528              		.weak	_ZNSt8optionalIfEC2IRfLb1EEEOT_
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu fpv4-sp-d16
 2534              	_ZNSt8optionalIfEC2IRfLb1EEEOT_:
 2535              	.LFB4975:
 701:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 	: _Base(std::in_place, std::forward<_Up>(__t)) { }
 2536              		.loc 8 701 2
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 8
 2539              		@ frame_needed = 1, uses_anonymous_args = 0
 2540 0000 B0B5     		push	{r4, r5, r7, lr}
 2541              	.LCFI210:
 2542              		.cfi_def_cfa_offset 16
 2543              		.cfi_offset 4, -16
 2544              		.cfi_offset 5, -12
 2545              		.cfi_offset 7, -8
 2546              		.cfi_offset 14, -4
 2547 0002 82B0     		sub	sp, sp, #8
 2548              	.LCFI211:
 2549              		.cfi_def_cfa_offset 24
 2550 0004 00AF     		add	r7, sp, #0
 2551              	.LCFI212:
 2552              		.cfi_def_cfa_register 7
 2553 0006 7860     		str	r0, [r7, #4]
 2554 0008 3960     		str	r1, [r7]
 2555              	.LBB17:
 702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2556              		.loc 8 702 47
 2557 000a 7C68     		ldr	r4, [r7, #4]
 2558 000c 3868     		ldr	r0, [r7]
 2559 000e FFF7FEFF 		bl	_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
 2560 0012 0346     		mov	r3, r0
 2561 0014 1A46     		mov	r2, r3
 2562 0016 2946     		mov	r1, r5
 2563 0018 2046     		mov	r0, r4
 2564 001a FFF7FEFF 		bl	_ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_
 2565              	.LBE17:
ARM GAS  /tmp/ccCqaElO.s 			page 144


 702:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2566              		.loc 8 702 51
 2567 001e 7B68     		ldr	r3, [r7, #4]
 2568 0020 1846     		mov	r0, r3
 2569 0022 0837     		adds	r7, r7, #8
 2570              	.LCFI213:
 2571              		.cfi_def_cfa_offset 16
 2572 0024 BD46     		mov	sp, r7
 2573              	.LCFI214:
 2574              		.cfi_def_cfa_register 13
 2575              		@ sp needed
 2576 0026 B0BD     		pop	{r4, r5, r7, pc}
 2577              		.cfi_endproc
 2578              	.LFE4975:
 2580              		.weak	_ZNSt8optionalIfEC1IRfLb1EEEOT_
 2581              		.thumb_set _ZNSt8optionalIfEC1IRfLb1EEEOT_,_ZNSt8optionalIfEC2IRfLb1EEEOT_
 2582              		.section	.text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev,"axG",%progbits,_ZNSt22_Option
 2583              		.align	1
 2584              		.weak	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev
 2585              		.syntax unified
 2586              		.thumb
 2587              		.thumb_func
 2588              		.fpu fpv4-sp-d16
 2590              	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev:
 2591              	.LFB4982:
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2592              		.loc 8 200 14
 2593              		.cfi_startproc
 2594              		@ args = 0, pretend = 0, frame = 8
 2595              		@ frame_needed = 1, uses_anonymous_args = 0
 2596              		@ link register save eliminated.
 2597 0000 80B4     		push	{r7}
 2598              	.LCFI215:
 2599              		.cfi_def_cfa_offset 4
 2600              		.cfi_offset 7, -4
 2601 0002 83B0     		sub	sp, sp, #12
 2602              	.LCFI216:
 2603              		.cfi_def_cfa_offset 16
 2604 0004 00AF     		add	r7, sp, #0
 2605              	.LCFI217:
 2606              		.cfi_def_cfa_register 7
 2607 0006 7860     		str	r0, [r7, #4]
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2608              		.loc 8 200 49
 2609 0008 7B68     		ldr	r3, [r7, #4]
 2610 000a 1846     		mov	r0, r3
 2611 000c 0C37     		adds	r7, r7, #12
 2612              	.LCFI218:
 2613              		.cfi_def_cfa_offset 4
 2614 000e BD46     		mov	sp, r7
 2615              	.LCFI219:
 2616              		.cfi_def_cfa_register 13
 2617              		@ sp needed
 2618 0010 5DF8047B 		ldr	r7, [sp], #4
 2619              	.LCFI220:
 2620              		.cfi_restore 7
 2621              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccCqaElO.s 			page 145


 2622 0014 7047     		bx	lr
 2623              		.cfi_endproc
 2624              	.LFE4982:
 2626              		.weak	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1Ev
 2627              		.thumb_set _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1Ev,_ZNSt22_Optional_payload_baseIfE8_
 2628              		.section	.text._ZNSt22_Optional_payload_baseIfEC2Ev,"axG",%progbits,_ZNSt22_Optional_payload_baseI
 2629              		.align	1
 2630              		.weak	_ZNSt22_Optional_payload_baseIfEC2Ev
 2631              		.syntax unified
 2632              		.thumb
 2633              		.thumb_func
 2634              		.fpu fpv4-sp-d16
 2636              	_ZNSt22_Optional_payload_baseIfEC2Ev:
 2637              	.LFB4984:
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload_base() = default;
 2638              		.loc 8 111 7
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 8
 2641              		@ frame_needed = 1, uses_anonymous_args = 0
 2642 0000 80B5     		push	{r7, lr}
 2643              	.LCFI221:
 2644              		.cfi_def_cfa_offset 8
 2645              		.cfi_offset 7, -8
 2646              		.cfi_offset 14, -4
 2647 0002 82B0     		sub	sp, sp, #8
 2648              	.LCFI222:
 2649              		.cfi_def_cfa_offset 16
 2650 0004 00AF     		add	r7, sp, #0
 2651              	.LCFI223:
 2652              		.cfi_def_cfa_register 7
 2653 0006 7860     		str	r0, [r7, #4]
 2654              	.LBB18:
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       ~_Optional_payload_base() = default;
 2655              		.loc 8 111 7
 2656 0008 7B68     		ldr	r3, [r7, #4]
 2657 000a 1846     		mov	r0, r3
 2658 000c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1Ev
 2659 0010 7B68     		ldr	r3, [r7, #4]
 2660 0012 0022     		movs	r2, #0
 2661 0014 1A71     		strb	r2, [r3, #4]
 2662              	.LBE18:
 2663 0016 7B68     		ldr	r3, [r7, #4]
 2664 0018 1846     		mov	r0, r3
 2665 001a 0837     		adds	r7, r7, #8
 2666              	.LCFI224:
 2667              		.cfi_def_cfa_offset 8
 2668 001c BD46     		mov	sp, r7
 2669              	.LCFI225:
 2670              		.cfi_def_cfa_register 13
 2671              		@ sp needed
 2672 001e 80BD     		pop	{r7, pc}
 2673              		.cfi_endproc
 2674              	.LFE4984:
 2676              		.weak	_ZNSt22_Optional_payload_baseIfEC1Ev
 2677              		.thumb_set _ZNSt22_Optional_payload_baseIfEC1Ev,_ZNSt22_Optional_payload_baseIfEC2Ev
 2678              		.section	.text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev,"axG",%progbits,_ZNSt17_Optional_payloa
 2679              		.align	1
ARM GAS  /tmp/ccCqaElO.s 			page 146


 2680              		.weak	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev
 2681              		.syntax unified
 2682              		.thumb
 2683              		.thumb_func
 2684              		.fpu fpv4-sp-d16
 2686              	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev:
 2687              	.LFB4986:
 303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 2688              		.loc 8 303 7
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 8
 2691              		@ frame_needed = 1, uses_anonymous_args = 0
 2692 0000 80B5     		push	{r7, lr}
 2693              	.LCFI226:
 2694              		.cfi_def_cfa_offset 8
 2695              		.cfi_offset 7, -8
 2696              		.cfi_offset 14, -4
 2697 0002 82B0     		sub	sp, sp, #8
 2698              	.LCFI227:
 2699              		.cfi_def_cfa_offset 16
 2700 0004 00AF     		add	r7, sp, #0
 2701              	.LCFI228:
 2702              		.cfi_def_cfa_register 7
 2703 0006 7860     		str	r0, [r7, #4]
 2704              	.LBB19:
 303:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****     };
 2705              		.loc 8 303 7
 2706 0008 7B68     		ldr	r3, [r7, #4]
 2707 000a 1846     		mov	r0, r3
 2708 000c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseIfEC2Ev
 2709              	.LBE19:
 2710 0010 7B68     		ldr	r3, [r7, #4]
 2711 0012 1846     		mov	r0, r3
 2712 0014 0837     		adds	r7, r7, #8
 2713              	.LCFI229:
 2714              		.cfi_def_cfa_offset 8
 2715 0016 BD46     		mov	sp, r7
 2716              	.LCFI230:
 2717              		.cfi_def_cfa_register 13
 2718              		@ sp needed
 2719 0018 80BD     		pop	{r7, pc}
 2720              		.cfi_endproc
 2721              	.LFE4986:
 2723              		.weak	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC1Ev
 2724              		.thumb_set _ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC1Ev,_ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev
 2725              		.section	.text._ZNSt14_Optional_baseIfLb1ELb1EEC2Ev,"axG",%progbits,_ZNSt14_Optional_baseIfLb1ELb1
 2726              		.align	1
 2727              		.weak	_ZNSt14_Optional_baseIfLb1ELb1EEC2Ev
 2728              		.syntax unified
 2729              		.thumb
 2730              		.thumb_func
 2731              		.fpu fpv4-sp-d16
 2733              	_ZNSt14_Optional_baseIfLb1ELb1EEC2Ev:
 2734              	.LFB4988:
 603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2735              		.loc 8 603 17
 2736              		.cfi_startproc
ARM GAS  /tmp/ccCqaElO.s 			page 147


 2737              		@ args = 0, pretend = 0, frame = 8
 2738              		@ frame_needed = 1, uses_anonymous_args = 0
 2739 0000 80B5     		push	{r7, lr}
 2740              	.LCFI231:
 2741              		.cfi_def_cfa_offset 8
 2742              		.cfi_offset 7, -8
 2743              		.cfi_offset 14, -4
 2744 0002 82B0     		sub	sp, sp, #8
 2745              	.LCFI232:
 2746              		.cfi_def_cfa_offset 16
 2747 0004 00AF     		add	r7, sp, #0
 2748              	.LCFI233:
 2749              		.cfi_def_cfa_register 7
 2750 0006 7860     		str	r0, [r7, #4]
 2751              	.LBB20:
 603:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2752              		.loc 8 603 17
 2753 0008 7B68     		ldr	r3, [r7, #4]
 2754 000a 1846     		mov	r0, r3
 2755 000c FFF7FEFF 		bl	_ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC1Ev
 2756              	.LBE20:
 2757 0010 7B68     		ldr	r3, [r7, #4]
 2758 0012 1846     		mov	r0, r3
 2759 0014 0837     		adds	r7, r7, #8
 2760              	.LCFI234:
 2761              		.cfi_def_cfa_offset 8
 2762 0016 BD46     		mov	sp, r7
 2763              	.LCFI235:
 2764              		.cfi_def_cfa_register 13
 2765              		@ sp needed
 2766 0018 80BD     		pop	{r7, pc}
 2767              		.cfi_endproc
 2768              	.LFE4988:
 2770              		.weak	_ZNSt14_Optional_baseIfLb1ELb1EEC1Ev
 2771              		.thumb_set _ZNSt14_Optional_baseIfLb1ELb1EEC1Ev,_ZNSt14_Optional_baseIfLb1ELb1EEC2Ev
 2772              		.section	.text._ZNSt8optionalIfEC2ESt9nullopt_t,"axG",%progbits,_ZNSt8optionalIfEC5ESt9nullopt_t,c
 2773              		.align	1
 2774              		.weak	_ZNSt8optionalIfEC2ESt9nullopt_t
 2775              		.syntax unified
 2776              		.thumb
 2777              		.thumb_func
 2778              		.fpu fpv4-sp-d16
 2780              	_ZNSt8optionalIfEC2ESt9nullopt_t:
 2781              	.LFB4990:
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2782              		.loc 8 693 17
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 8
 2785              		@ frame_needed = 1, uses_anonymous_args = 0
 2786 0000 80B5     		push	{r7, lr}
 2787              	.LCFI236:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 82B0     		sub	sp, sp, #8
 2792              	.LCFI237:
 2793              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccCqaElO.s 			page 148


 2794 0004 00AF     		add	r7, sp, #0
 2795              	.LCFI238:
 2796              		.cfi_def_cfa_register 7
 2797 0006 7860     		str	r0, [r7, #4]
 2798 0008 3970     		strb	r1, [r7]
 2799              	.LBB21:
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2800              		.loc 8 693 46
 2801 000a 7B68     		ldr	r3, [r7, #4]
 2802 000c 1846     		mov	r0, r3
 2803 000e FFF7FEFF 		bl	_ZNSt14_Optional_baseIfLb1ELb1EEC2Ev
 2804              	.LBE21:
 693:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2805              		.loc 8 693 48
 2806 0012 7B68     		ldr	r3, [r7, #4]
 2807 0014 1846     		mov	r0, r3
 2808 0016 0837     		adds	r7, r7, #8
 2809              	.LCFI239:
 2810              		.cfi_def_cfa_offset 8
 2811 0018 BD46     		mov	sp, r7
 2812              	.LCFI240:
 2813              		.cfi_def_cfa_register 13
 2814              		@ sp needed
 2815 001a 80BD     		pop	{r7, pc}
 2816              		.cfi_endproc
 2817              	.LFE4990:
 2819              		.weak	_ZNSt8optionalIfEC1ESt9nullopt_t
 2820              		.thumb_set _ZNSt8optionalIfEC1ESt9nullopt_t,_ZNSt8optionalIfEC2ESt9nullopt_t
 2821              		.section	.text._ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv,"axG",%progbits
 2822              		.align	1
 2823              		.weak	_ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv
 2824              		.syntax unified
 2825              		.thumb
 2826              		.thumb_func
 2827              		.fpu fpv4-sp-d16
 2829              	_ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv:
 2830              	.LFB4992:
 439:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       {
 2831              		.loc 8 439 7
 2832              		.cfi_startproc
 2833              		@ args = 0, pretend = 0, frame = 8
 2834              		@ frame_needed = 1, uses_anonymous_args = 0
 2835 0000 80B5     		push	{r7, lr}
 2836              	.LCFI241:
 2837              		.cfi_def_cfa_offset 8
 2838              		.cfi_offset 7, -8
 2839              		.cfi_offset 14, -4
 2840 0002 82B0     		sub	sp, sp, #8
 2841              	.LCFI242:
 2842              		.cfi_def_cfa_offset 16
 2843 0004 00AF     		add	r7, sp, #0
 2844              	.LCFI243:
 2845              		.cfi_def_cfa_register 7
 2846 0006 7860     		str	r0, [r7, #4]
 442:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       }
 2847              		.loc 8 442 51
 2848 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccCqaElO.s 			page 149


 2849 000a 1846     		mov	r0, r3
 2850 000c FFF7FEFF 		bl	_ZNSt22_Optional_payload_baseIfE6_M_getEv
 2851 0010 0346     		mov	r3, r0
 443:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2852              		.loc 8 443 7
 2853 0012 1846     		mov	r0, r3
 2854 0014 0837     		adds	r7, r7, #8
 2855              	.LCFI244:
 2856              		.cfi_def_cfa_offset 8
 2857 0016 BD46     		mov	sp, r7
 2858              	.LCFI245:
 2859              		.cfi_def_cfa_register 13
 2860              		@ sp needed
 2861 0018 80BD     		pop	{r7, pc}
 2862              		.cfi_endproc
 2863              	.LFE4992:
 2865              		.section	.text._ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_,"axG",%progbits,_ZSt4moveIRfEONSt
 2866              		.align	1
 2867              		.weak	_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu fpv4-sp-d16
 2873              	_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_:
 2874              	.LFB4993:
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 2875              		.loc 4 101 5
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 8
 2878              		@ frame_needed = 1, uses_anonymous_args = 0
 2879              		@ link register save eliminated.
 2880 0000 80B4     		push	{r7}
 2881              	.LCFI246:
 2882              		.cfi_def_cfa_offset 4
 2883              		.cfi_offset 7, -4
 2884 0002 83B0     		sub	sp, sp, #12
 2885              	.LCFI247:
 2886              		.cfi_def_cfa_offset 16
 2887 0004 00AF     		add	r7, sp, #0
 2888              	.LCFI248:
 2889              		.cfi_def_cfa_register 7
 2890 0006 7860     		str	r0, [r7, #4]
 2891              		.loc 4 102 74
 2892 0008 7B68     		ldr	r3, [r7, #4]
 2893              		.loc 4 102 77
 2894 000a 1846     		mov	r0, r3
 2895 000c 0C37     		adds	r7, r7, #12
 2896              	.LCFI249:
 2897              		.cfi_def_cfa_offset 4
 2898 000e BD46     		mov	sp, r7
 2899              	.LCFI250:
 2900              		.cfi_def_cfa_register 13
 2901              		@ sp needed
 2902 0010 5DF8047B 		ldr	r7, [sp], #4
 2903              	.LCFI251:
 2904              		.cfi_restore 7
 2905              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccCqaElO.s 			page 150


 2906 0014 7047     		bx	lr
 2907              		.cfi_endproc
 2908              	.LFE4993:
 2910              		.section	.text._ZNSt4pairIffEaSERKS0_,"axG",%progbits,_ZNSt4pairIffEaSERKS0_,comdat
 2911              		.align	1
 2912              		.weak	_ZNSt4pairIffEaSERKS0_
 2913              		.syntax unified
 2914              		.thumb
 2915              		.thumb_func
 2916              		.fpu fpv4-sp-d16
 2918              	_ZNSt4pairIffEaSERKS0_:
 2919              	.LFB4994:
 354:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 355:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 356:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 357:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 358:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			  && !_PCCP::template
 359:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 360:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=false>
 361:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	explicit constexpr pair(_U1&& __x, _U2&& __y)
 362:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 363:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 364:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 365:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 366:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 367:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 368:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			  && _PCCFP<_U1, _U2>::template
 369:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 370:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=true>
 371:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	constexpr pair(pair<_U1, _U2>&& __p)
 372:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 373:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 374:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 375:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 376:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 377:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 378:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			  && !_PCCFP<_U1, _U2>::template
 379:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 380:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****                          bool>::type=false>
 381:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	explicit constexpr pair(pair<_U1, _U2>&& __p)
 382:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 383:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 384:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 385:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       template<typename... _Args1, typename... _Args2>
 386:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 387:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
 388:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 
 389:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       _GLIBCXX20_CONSTEXPR pair&
 390:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       operator=(typename conditional<
 2920              		.loc 6 390 7
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 8
 2923              		@ frame_needed = 1, uses_anonymous_args = 0
 2924              		@ link register save eliminated.
 2925 0000 80B4     		push	{r7}
 2926              	.LCFI252:
 2927              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccCqaElO.s 			page 151


 2928              		.cfi_offset 7, -4
 2929 0002 83B0     		sub	sp, sp, #12
 2930              	.LCFI253:
 2931              		.cfi_def_cfa_offset 16
 2932 0004 00AF     		add	r7, sp, #0
 2933              	.LCFI254:
 2934              		.cfi_def_cfa_register 7
 2935 0006 7860     		str	r0, [r7, #4]
 2936 0008 3960     		str	r1, [r7]
 391:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		__and_<is_copy_assignable<_T1>,
 392:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		       is_copy_assignable<_T2>>::value,
 393:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 		const pair&, const __nonesuch&>::type __p)
 394:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       {
 395:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	first = __p.first;
 2937              		.loc 6 395 14
 2938 000a 3B68     		ldr	r3, [r7]
 2939 000c 1A68     		ldr	r2, [r3]	@ float
 2940              		.loc 6 395 8
 2941 000e 7B68     		ldr	r3, [r7, #4]
 2942 0010 1A60     		str	r2, [r3]	@ float
 396:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	second = __p.second;
 2943              		.loc 6 396 15
 2944 0012 3B68     		ldr	r3, [r7]
 2945 0014 5A68     		ldr	r2, [r3, #4]	@ float
 2946              		.loc 6 396 9
 2947 0016 7B68     		ldr	r3, [r7, #4]
 2948 0018 5A60     		str	r2, [r3, #4]	@ float
 397:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h **** 	return *this;
 2949              		.loc 6 397 10
 2950 001a 7B68     		ldr	r3, [r7, #4]
 398:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h ****       }
 2951              		.loc 6 398 7
 2952 001c 1846     		mov	r0, r3
 2953 001e 0C37     		adds	r7, r7, #12
 2954              	.LCFI255:
 2955              		.cfi_def_cfa_offset 4
 2956 0020 BD46     		mov	sp, r7
 2957              	.LCFI256:
 2958              		.cfi_def_cfa_register 13
 2959              		@ sp needed
 2960 0022 5DF8047B 		ldr	r7, [sp], #4
 2961              	.LCFI257:
 2962              		.cfi_restore 7
 2963              		.cfi_def_cfa_offset 0
 2964 0026 7047     		bx	lr
 2965              		.cfi_endproc
 2966              	.LFE4994:
 2968              		.section	.text._ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv,"axG",%progbits,_ZNSt22_Optiona
 2969              		.align	1
 2970              		.weak	_ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv
 2971              		.syntax unified
 2972              		.thumb
 2973              		.thumb_func
 2974              		.fpu fpv4-sp-d16
 2976              	_ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv:
 2977              	.LFB5017:
 268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_payload._M_value; }
ARM GAS  /tmp/ccCqaElO.s 			page 152


 2978              		.loc 8 268 7
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 8
 2981              		@ frame_needed = 1, uses_anonymous_args = 0
 2982              		@ link register save eliminated.
 2983 0000 80B4     		push	{r7}
 2984              	.LCFI258:
 2985              		.cfi_def_cfa_offset 4
 2986              		.cfi_offset 7, -4
 2987 0002 83B0     		sub	sp, sp, #12
 2988              	.LCFI259:
 2989              		.cfi_def_cfa_offset 16
 2990 0004 00AF     		add	r7, sp, #0
 2991              	.LCFI260:
 2992              		.cfi_def_cfa_register 7
 2993 0006 7860     		str	r0, [r7, #4]
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2994              		.loc 8 269 33
 2995 0008 7B68     		ldr	r3, [r7, #4]
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 2996              		.loc 8 269 43
 2997 000a 1846     		mov	r0, r3
 2998 000c 0C37     		adds	r7, r7, #12
 2999              	.LCFI261:
 3000              		.cfi_def_cfa_offset 4
 3001 000e BD46     		mov	sp, r7
 3002              	.LCFI262:
 3003              		.cfi_def_cfa_register 13
 3004              		@ sp needed
 3005 0010 5DF8047B 		ldr	r7, [sp], #4
 3006              	.LCFI263:
 3007              		.cfi_restore 7
 3008              		.cfi_def_cfa_offset 0
 3009 0014 7047     		bx	lr
 3010              		.cfi_endproc
 3011              	.LFE5017:
 3013              		.section	.text._ZNSt22_Optional_payload_baseIfE6_M_getEv,"axG",%progbits,_ZNSt22_Optional_payload_
 3014              		.align	1
 3015              		.weak	_ZNSt22_Optional_payload_baseIfE6_M_getEv
 3016              		.syntax unified
 3017              		.thumb
 3018              		.thumb_func
 3019              		.fpu fpv4-sp-d16
 3021              	_ZNSt22_Optional_payload_baseIfE6_M_getEv:
 3022              	.LFB5018:
 268:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional ****       { return this->_M_payload._M_value; }
 3023              		.loc 8 268 7
 3024              		.cfi_startproc
 3025              		@ args = 0, pretend = 0, frame = 8
 3026              		@ frame_needed = 1, uses_anonymous_args = 0
 3027              		@ link register save eliminated.
 3028 0000 80B4     		push	{r7}
 3029              	.LCFI264:
 3030              		.cfi_def_cfa_offset 4
 3031              		.cfi_offset 7, -4
 3032 0002 83B0     		sub	sp, sp, #12
 3033              	.LCFI265:
ARM GAS  /tmp/ccCqaElO.s 			page 153


 3034              		.cfi_def_cfa_offset 16
 3035 0004 00AF     		add	r7, sp, #0
 3036              	.LCFI266:
 3037              		.cfi_def_cfa_register 7
 3038 0006 7860     		str	r0, [r7, #4]
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 3039              		.loc 8 269 33
 3040 0008 7B68     		ldr	r3, [r7, #4]
 269:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional **** 
 3041              		.loc 8 269 43
 3042 000a 1846     		mov	r0, r3
 3043 000c 0C37     		adds	r7, r7, #12
 3044              	.LCFI267:
 3045              		.cfi_def_cfa_offset 4
 3046 000e BD46     		mov	sp, r7
 3047              	.LCFI268:
 3048              		.cfi_def_cfa_register 13
 3049              		@ sp needed
 3050 0010 5DF8047B 		ldr	r7, [sp], #4
 3051              	.LCFI269:
 3052              		.cfi_restore 7
 3053              		.cfi_def_cfa_offset 0
 3054 0014 7047     		bx	lr
 3055              		.cfi_endproc
 3056              	.LFE5018:
 3058              		.global	_ZTV18OpenLoopController
 3059              		.section	.rodata._ZTV18OpenLoopController,"a"
 3060              		.align	2
 3063              	_ZTV18OpenLoopController:
 3064 0000 00000000 		.word	0
 3065 0004 00000000 		.word	0
 3066 0008 00000000 		.word	_ZN18OpenLoopController6updateEm
 3067              		.text
 3068              	.Letext0:
 3069              		.file 9 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath"
 3070              		.file 10 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_trai
 3071              		.file 11 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debug/deb
 3072              		.file 12 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/exce
 3073              		.file 13 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/tr1/speci
 3074              		.file 14 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/variant"
 3075              		.file 15 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 3076              		.file 16 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 3077              		.file 17 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdlib"
 3078              		.file 18 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/algo
 3079              		.file 19 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/functiona
 3080              		.file 20 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/enab
 3081              		.file 21 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pred
 3082              		.file 22 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stdde
 3083              		.file 23 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_typ
 3084              		.file 24 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 3085              		.file 25 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h"
 3086              		.file 26 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3087              		.file 27 "Inc/user_int.hpp"
 3088              		.file 28 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math.h"
 3089              		.file 29 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 3090              		.file 30 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 3091              		.file 31 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
ARM GAS  /tmp/ccCqaElO.s 			page 154


 3092              		.file 32 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 3093              		.file 33 "Inc/open_loop_controller.hpp"
 3094              		.file 34 "<built-in>"
ARM GAS  /tmp/ccCqaElO.s 			page 155


DEFINED SYMBOLS
                            *ABS*:0000000000000000 open_loop_controller.cpp
     /tmp/ccCqaElO.s:18     .rodata._ZL12one_by_sqrt3:0000000000000000 $d
     /tmp/ccCqaElO.s:21     .rodata._ZL12one_by_sqrt3:0000000000000000 _ZL12one_by_sqrt3
     /tmp/ccCqaElO.s:24     .rodata._ZL12two_by_sqrt3:0000000000000000 $d
     /tmp/ccCqaElO.s:27     .rodata._ZL12two_by_sqrt3:0000000000000000 _ZL12two_by_sqrt3
     /tmp/ccCqaElO.s:30     .rodata._ZL10sqrt3_by_2:0000000000000000 $d
     /tmp/ccCqaElO.s:33     .rodata._ZL10sqrt3_by_2:0000000000000000 _ZL10sqrt3_by_2
     /tmp/ccCqaElO.s:36     .text.fmodf_pos:0000000000000000 $t
     /tmp/ccCqaElO.s:43     .text.fmodf_pos:0000000000000000 fmodf_pos
     /tmp/ccCqaElO.s:96     .text.wrap_pm:0000000000000000 $t
     /tmp/ccCqaElO.s:102    .text.wrap_pm:0000000000000000 wrap_pm
     /tmp/ccCqaElO.s:148    .text.wrap_pm_pi:0000000000000000 $t
     /tmp/ccCqaElO.s:154    .text.wrap_pm_pi:0000000000000000 wrap_pm_pi
     /tmp/ccCqaElO.s:190    .text.wrap_pm_pi:0000000000000024 $d
     /tmp/ccCqaElO.s:195    .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccCqaElO.s:198    .rodata._ZL16OFFSET_TAB_CCMRx:0000000000000000 _ZL16OFFSET_TAB_CCMRx
     /tmp/ccCqaElO.s:201    .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccCqaElO.s:204    .rodata._ZL14SHIFT_TAB_OCxx:0000000000000000 _ZL14SHIFT_TAB_OCxx
     /tmp/ccCqaElO.s:207    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccCqaElO.s:210    .rodata._ZL14SHIFT_TAB_ICxx:0000000000000000 _ZL14SHIFT_TAB_ICxx
     /tmp/ccCqaElO.s:213    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccCqaElO.s:216    .rodata._ZL14SHIFT_TAB_CCxP:0000000000000000 _ZL14SHIFT_TAB_CCxP
     /tmp/ccCqaElO.s:219    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccCqaElO.s:222    .rodata._ZL14SHIFT_TAB_OISx:0000000000000000 _ZL14SHIFT_TAB_OISx
     /tmp/ccCqaElO.s:225    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccCqaElO.s:228    .rodata._ZL19USART_PRESCALER_TAB:0000000000000000 _ZL19USART_PRESCALER_TAB
     /tmp/ccCqaElO.s:242    .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccCqaElO.s:245    .rodata._ZL18CHANNEL_OFFSET_TAB:0000000000000000 _ZL18CHANNEL_OFFSET_TAB
     /tmp/ccCqaElO.s:248    .text._ZSt5clampIfERKT_S2_S2_S2_:0000000000000000 $t
     /tmp/ccCqaElO.s:255    .text._ZSt5clampIfERKT_S2_S2_S2_:0000000000000000 _ZSt5clampIfERKT_S2_S2_S2_
     /tmp/ccCqaElO.s:325    .text._ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_:0000000000000000 $t
     /tmp/ccCqaElO.s:332    .text._ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_:0000000000000000 _ZSt3getILj0EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
     /tmp/ccCqaElO.s:425    .text._ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_:0000000000000000 _ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_
     /tmp/ccCqaElO.s:380    .text._ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E:0000000000000000 _ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E
     /tmp/ccCqaElO.s:373    .text._ZNSt10__pair_getILj0EE10__move_getIffEEOT_OSt4pairIS2_T0_E:0000000000000000 $t
     /tmp/ccCqaElO.s:471    .text._ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE:0000000000000000 _ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE
     /tmp/ccCqaElO.s:418    .text._ZSt4moveIRSt4pairIffEEONSt16remove_referenceIT_E4typeEOS4_:0000000000000000 $t
     /tmp/ccCqaElO.s:464    .text._ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE:0000000000000000 $t
     /tmp/ccCqaElO.s:509    .text._ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_:0000000000000000 $t
     /tmp/ccCqaElO.s:516    .text._ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_:0000000000000000 _ZSt3getILj1EffEONSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeEOS4_
     /tmp/ccCqaElO.s:563    .text._ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E:0000000000000000 _ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E
     /tmp/ccCqaElO.s:556    .text._ZNSt10__pair_getILj1EE10__move_getIffEEOT0_OSt4pairIT_S2_E:0000000000000000 $t
     /tmp/ccCqaElO.s:602    .text._ZN18OpenLoopController6updateEm:0000000000000000 $t
     /tmp/ccCqaElO.s:609    .text._ZN18OpenLoopController6updateEm:0000000000000000 _ZN18OpenLoopController6updateEm
     /tmp/ccCqaElO.s:1026   .text._ZN10OutputPortISt4pairIffEE8previousEv:0000000000000000 _ZN10OutputPortISt4pairIffEE8previousEv
     /tmp/ccCqaElO.s:963    .text._ZNSt4pairIffEC2IffLb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIffEC1IffLb1EEEOT_OT0_
     /tmp/ccCqaElO.s:1133   .text._ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_:0000000000000000 _ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_
     /tmp/ccCqaElO.s:1208   .text._ZN10OutputPortIfE8previousEv:0000000000000000 _ZN10OutputPortIfE8previousEv
     /tmp/ccCqaElO.s:1313   .text._ZNOSt8optionalIfE8value_orIRfEEfOT_:0000000000000000 _ZNOSt8optionalIfE8value_orIRfEEfOT_
     /tmp/ccCqaElO.s:1381   .text._ZNOSt8optionalIfE8value_orIfEEfOT_:0000000000000000 _ZNOSt8optionalIfE8value_orIfEEfOT_
     /tmp/ccCqaElO.s:1449   .text._ZNSt4pairIffEC2IfLb1EEERKfOT_:0000000000000000 _ZNSt4pairIffEC1IfLb1EEERKfOT_
     /tmp/ccCqaElO.s:1508   .text._ZN10OutputPortISt4pairIffEEaSES1_:0000000000000000 _ZN10OutputPortISt4pairIffEEaSES1_
     /tmp/ccCqaElO.s:1562   .text._ZN10OutputPortIfEaSEf:0000000000000000 _ZN10OutputPortIfEaSEf
     /tmp/ccCqaElO.s:951    .text._ZN18OpenLoopController6updateEm:000000000000033c $d
     /tmp/ccCqaElO.s:956    .text._ZNSt4pairIffEC2IffLb1EEEOT_OT0_:0000000000000000 $t
     /tmp/ccCqaElO.s:963    .text._ZNSt4pairIffEC2IffLb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIffEC2IffLb1EEEOT_OT0_
ARM GAS  /tmp/ccCqaElO.s 			page 156


     /tmp/ccCqaElO.s:1019   .text._ZN10OutputPortISt4pairIffEE8previousEv:0000000000000000 $t
     /tmp/ccCqaElO.s:1882   .text._ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_:0000000000000000 _ZNSt8optionalISt4pairIffEEC1IRS1_Lb1EEEOT_
     /tmp/ccCqaElO.s:2128   .text._ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t:0000000000000000 _ZNSt8optionalISt4pairIffEEC1ESt9nullopt_t
     /tmp/ccCqaElO.s:1079   .text._ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_engagedEv:0000000000000000 $t
     /tmp/ccCqaElO.s:1086   .text._ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_engagedEv:0000000000000000 _ZNKSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE13_M_is_engagedEv
     /tmp/ccCqaElO.s:1126   .text._ZNOSt8optionalISt4pairIffEE8value_orIS1_EES1_OT_:0000000000000000 $t
     /tmp/ccCqaElO.s:2177   .text._ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv:0000000000000000 _ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv
     /tmp/ccCqaElO.s:2221   .text._ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE:0000000000000000 _ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE
     /tmp/ccCqaElO.s:1201   .text._ZN10OutputPortIfE8previousEv:0000000000000000 $t
     /tmp/ccCqaElO.s:2534   .text._ZNSt8optionalIfEC2IRfLb1EEEOT_:0000000000000000 _ZNSt8optionalIfEC1IRfLb1EEEOT_
     /tmp/ccCqaElO.s:2780   .text._ZNSt8optionalIfEC2ESt9nullopt_t:0000000000000000 _ZNSt8optionalIfEC1ESt9nullopt_t
     /tmp/ccCqaElO.s:1260   .text._ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv:0000000000000000 $t
     /tmp/ccCqaElO.s:1267   .text._ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv:0000000000000000 _ZNKSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE13_M_is_engagedEv
     /tmp/ccCqaElO.s:1306   .text._ZNOSt8optionalIfE8value_orIRfEEfOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:2829   .text._ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv:0000000000000000 _ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv
     /tmp/ccCqaElO.s:2873   .text._ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_:0000000000000000 _ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_
     /tmp/ccCqaElO.s:2320   .text._ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE:0000000000000000 _ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE
     /tmp/ccCqaElO.s:1374   .text._ZNOSt8optionalIfE8value_orIfEEfOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1442   .text._ZNSt4pairIffEC2IfLb1EEERKfOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1449   .text._ZNSt4pairIffEC2IfLb1EEERKfOT_:0000000000000000 _ZNSt4pairIffEC2IfLb1EEERKfOT_
     /tmp/ccCqaElO.s:1501   .text._ZN10OutputPortISt4pairIffEEaSES1_:0000000000000000 $t
     /tmp/ccCqaElO.s:2918   .text._ZNSt4pairIffEaSERKS0_:0000000000000000 _ZNSt4pairIffEaSERKS0_
     /tmp/ccCqaElO.s:1555   .text._ZN10OutputPortIfEaSEf:0000000000000000 $t
     /tmp/ccCqaElO.s:1607   .text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1614   .text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1668   .text._ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE:0000000000000000 _ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE
     /tmp/ccCqaElO.s:1614   .text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2IJRS1_EEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1IJRS1_EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1661   .text._ZSt7forwardIRSt4pairIffEEOT_RNSt16remove_referenceIS3_E4typeE:0000000000000000 $t
     /tmp/ccCqaElO.s:1706   .text._ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1713   .text._ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1713   .text._ZNSt22_Optional_payload_baseISt4pairIffEEC2IJRS1_EEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEEC1IJRS1_EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1766   .text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1773   .text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_place_tDpOT_:0000000000000000 _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1773   .text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI2St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_place_tDpOT_:0000000000000000 _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI1St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1818   .text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1825   .text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_:0000000000000000 _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1825   .text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2IJRS1_ELb0EEESt10in_place_tDpOT_:0000000000000000 _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC1IJRS1_ELb0EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:1875   .text._ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:1882   .text._ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_:0000000000000000 _ZNSt8optionalISt4pairIffEEC2IRS1_Lb1EEEOT_
     /tmp/ccCqaElO.s:1931   .text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:1938   .text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev
     /tmp/ccCqaElO.s:1938   .text._ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC1Ev
     /tmp/ccCqaElO.s:1977   .text._ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:1984   .text._ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev
     /tmp/ccCqaElO.s:1984   .text._ZNSt22_Optional_payload_baseISt4pairIffEEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEEC1Ev
     /tmp/ccCqaElO.s:2027   .text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:2034   .text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev:0000000000000000 _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev
     /tmp/ccCqaElO.s:2034   .text._ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC2Ev:0000000000000000 _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC1Ev
     /tmp/ccCqaElO.s:2074   .text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:2081   .text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev:0000000000000000 _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev
     /tmp/ccCqaElO.s:2081   .text._ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC2Ev:0000000000000000 _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC1Ev
     /tmp/ccCqaElO.s:2121   .text._ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t:0000000000000000 $t
     /tmp/ccCqaElO.s:2128   .text._ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t:0000000000000000 _ZNSt8optionalISt4pairIffEEC2ESt9nullopt_t
     /tmp/ccCqaElO.s:2170   .text._ZNSt19_Optional_base_implISt4pairIffESt14_Optional_baseIS1_Lb1ELb1EEE6_M_getEv:0000000000000000 $t
     /tmp/ccCqaElO.s:2976   .text._ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv
     /tmp/ccCqaElO.s:2214   .text._ZSt7forwardISt4pairIffEEOT_RNSt16remove_referenceIS2_E4typeE:0000000000000000 $t
     /tmp/ccCqaElO.s:2259   .text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_:0000000000000000 $t
ARM GAS  /tmp/ccCqaElO.s 			page 157


     /tmp/ccCqaElO.s:2266   .text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2266   .text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2IJRfEEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1IJRfEEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2313   .text._ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE:0000000000000000 $t
     /tmp/ccCqaElO.s:2358   .text._ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:2365   .text._ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2365   .text._ZNSt22_Optional_payload_baseIfEC2IJRfEEESt10in_place_tDpOT_:0000000000000000 _ZNSt22_Optional_payload_baseIfEC1IJRfEEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2418   .text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:2425   .text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_:0000000000000000 _ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2425   .text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI2St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_:0000000000000000 _ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI1St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2470   .text._ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:2477   .text._ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_:0000000000000000 _ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2477   .text._ZNSt14_Optional_baseIfLb1ELb1EEC2IJRfELb0EEESt10in_place_tDpOT_:0000000000000000 _ZNSt14_Optional_baseIfLb1ELb1EEC1IJRfELb0EEESt10in_place_tDpOT_
     /tmp/ccCqaElO.s:2527   .text._ZNSt8optionalIfEC2IRfLb1EEEOT_:0000000000000000 $t
     /tmp/ccCqaElO.s:2534   .text._ZNSt8optionalIfEC2IRfLb1EEEOT_:0000000000000000 _ZNSt8optionalIfEC2IRfLb1EEEOT_
     /tmp/ccCqaElO.s:2583   .text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:2590   .text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev
     /tmp/ccCqaElO.s:2590   .text._ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC1Ev
     /tmp/ccCqaElO.s:2629   .text._ZNSt22_Optional_payload_baseIfEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:2636   .text._ZNSt22_Optional_payload_baseIfEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseIfEC2Ev
     /tmp/ccCqaElO.s:2636   .text._ZNSt22_Optional_payload_baseIfEC2Ev:0000000000000000 _ZNSt22_Optional_payload_baseIfEC1Ev
     /tmp/ccCqaElO.s:2679   .text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:2686   .text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev:0000000000000000 _ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev
     /tmp/ccCqaElO.s:2686   .text._ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC2Ev:0000000000000000 _ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC1Ev
     /tmp/ccCqaElO.s:2726   .text._ZNSt14_Optional_baseIfLb1ELb1EEC2Ev:0000000000000000 $t
     /tmp/ccCqaElO.s:2733   .text._ZNSt14_Optional_baseIfLb1ELb1EEC2Ev:0000000000000000 _ZNSt14_Optional_baseIfLb1ELb1EEC2Ev
     /tmp/ccCqaElO.s:2733   .text._ZNSt14_Optional_baseIfLb1ELb1EEC2Ev:0000000000000000 _ZNSt14_Optional_baseIfLb1ELb1EEC1Ev
     /tmp/ccCqaElO.s:2773   .text._ZNSt8optionalIfEC2ESt9nullopt_t:0000000000000000 $t
     /tmp/ccCqaElO.s:2780   .text._ZNSt8optionalIfEC2ESt9nullopt_t:0000000000000000 _ZNSt8optionalIfEC2ESt9nullopt_t
     /tmp/ccCqaElO.s:2822   .text._ZNSt19_Optional_base_implIfSt14_Optional_baseIfLb1ELb1EEE6_M_getEv:0000000000000000 $t
     /tmp/ccCqaElO.s:3021   .text._ZNSt22_Optional_payload_baseIfE6_M_getEv:0000000000000000 _ZNSt22_Optional_payload_baseIfE6_M_getEv
     /tmp/ccCqaElO.s:2866   .text._ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_:0000000000000000 $t
     /tmp/ccCqaElO.s:2911   .text._ZNSt4pairIffEaSERKS0_:0000000000000000 $t
     /tmp/ccCqaElO.s:2969   .text._ZNSt22_Optional_payload_baseISt4pairIffEE6_M_getEv:0000000000000000 $t
     /tmp/ccCqaElO.s:3014   .text._ZNSt22_Optional_payload_baseIfE6_M_getEv:0000000000000000 $t
     /tmp/ccCqaElO.s:3063   .rodata._ZTV18OpenLoopController:0000000000000000 _ZTV18OpenLoopController
     /tmp/ccCqaElO.s:3060   .rodata._ZTV18OpenLoopController:0000000000000000 $d
                           .group:0000000000000000 _ZNSt4pairIffEC5IffLb1EEEOT_OT0_
                           .group:0000000000000000 _ZNSt4pairIffEC5IfLb1EEERKfOT_
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC5IJRS1_EEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEEC5IJRS1_EEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EECI5St22_Optional_payload_baseIS1_EIJRS1_EEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC5IJRS1_ELb0EEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt8optionalISt4pairIffEEC5IRS1_Lb1EEEOT_
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEE8_StorageIS1_Lb1EEC5Ev
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseISt4pairIffEEC5Ev
                           .group:0000000000000000 _ZNSt17_Optional_payloadISt4pairIffELb1ELb0ELb0EEC5Ev
                           .group:0000000000000000 _ZNSt14_Optional_baseISt4pairIffELb1ELb1EEC5Ev
                           .group:0000000000000000 _ZNSt8optionalISt4pairIffEEC5ESt9nullopt_t
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC5IJRfEEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseIfEC5IJRfEEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt17_Optional_payloadIfLb1ELb1ELb1EECI5St22_Optional_payload_baseIfEIJRfEEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt14_Optional_baseIfLb1ELb1EEC5IJRfELb0EEESt10in_place_tDpOT_
                           .group:0000000000000000 _ZNSt8optionalIfEC5IRfLb1EEEOT_
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseIfE8_StorageIfLb1EEC5Ev
                           .group:0000000000000000 _ZNSt22_Optional_payload_baseIfEC5Ev
                           .group:0000000000000000 _ZNSt17_Optional_payloadIfLb1ELb1ELb1EEC5Ev
                           .group:0000000000000000 _ZNSt14_Optional_baseIfLb1ELb1EEC5Ev
ARM GAS  /tmp/ccCqaElO.s 			page 158


                           .group:0000000000000000 _ZNSt8optionalIfEC5ESt9nullopt_t

UNDEFINED SYMBOLS
fmodf
