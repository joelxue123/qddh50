ARM GAS  /tmp/ccyonGYL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32g4xx_ll_opamp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_OPAMP_IsLocked,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_OPAMP_IsLocked:
  26              	.LFB163:
  27              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @file    stm32g4xx_ll_opamp.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief   Header file of OPAMP LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #ifndef STM32G4xx_LL_OPAMP_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define STM32G4xx_LL_OPAMP_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
ARM GAS  /tmp/ccyonGYL.s 			page 2


  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #if defined (OPAMP1) || defined (OPAMP2) || defined (OPAMP3) || defined (OPAMP4) || defined (OPAMP5
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL OPAMP
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Private_Constants OPAMP Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Internal mask for OPAMP trimming of transistors differential pair NMOS     */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* or PMOS.                                                                   */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* To select into literal LL_OPAMP_TRIMMING_x the relevant bits for:          */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* - OPAMP trimming selection of transistors differential pair                */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* - OPAMP trimming values of transistors differential pair                   */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define OPAMP_TRIMMING_SELECT_MASK          (OPAMP_CSR_CALSEL)
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define OPAMP_TRIMMING_VALUE_MASK           (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_TRIMOFFSETP)
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Private_Macros OPAMP Private Macros
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         a register from a register basis from which an offset
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is applied.
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register basis from which the offset is applied.
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG_OFFSET__ Offset to be applied (unit: number of registers).
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Register address
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define __OPAMP_PTR_REG_OFFSET(__REG__, __REG_OFFSET__)                        \
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFSET__) << 2))))
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported types ------------------------------------------------------------*/
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #if defined(USE_FULL_LL_DRIVER)
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_ES_INIT OPAMP Exported Init structure
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
ARM GAS  /tmp/ccyonGYL.s 			page 3


  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Structure definition of some features of OPAMP instance.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** typedef struct
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t PowerMode;                   /*!< Set OPAMP power mode.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_POWE
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t FunctionalMode;              /*!< Set OPAMP functional mode by setting internal connecti
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_FUNC
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              @note If OPAMP is configured in mode PGA, the gain can
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t InputNonInverting;           /*!< Set OPAMP input non-inverting connection.
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_INPU
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t InputInverting;              /*!< Set OPAMP inverting input connection.
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_INPU
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              @note OPAMP inverting input is used with OPAMP in mode
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** } LL_OPAMP_InitTypeDef;
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #endif /* USE_FULL_LL_DRIVER */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported constants --------------------------------------------------------*/
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Constants OPAMP Exported Constants
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_MODE OPAMP mode calibration or functional.
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_FUNCTIONAL        (0x00000000UL)                              /*!< OPAMP func
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_CALIBRATION       (OPAMP_CSR_CALON)                           /*!< OPAMP cali
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_FUNCTIONAL_MODE OPAMP functional mode
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_STANDALONE        (0x00000000UL)                                             
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_FOLLOWER          (OPAMP_CSR_VMSEL_1 | OPAMP_CSR_VMSEL_0)                    
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA               (OPAMP_CSR_VMSEL_1)                                        
ARM GAS  /tmp/ccyonGYL.s 			page 4


 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0           (OPAMP_CSR_PGGAIN_4|OPAMP_CSR_VMSEL_1)                     
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0_BIAS      (OPAMP_CSR_PGGAIN_3|OPAMP_CSR_VMSEL_1)                     
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0_IO1_BIAS  (OPAMP_CSR_PGGAIN_4|OPAMP_CSR_PGGAIN_3|OPAMP_CSR_VMSEL_1)  
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_MODE_PGA_GAIN OPAMP PGA gain (relevant when OPAMP is in functional mode P
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note Gain sign:
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         - is positive if the @ref OPAMP_LL_EC_FUNCTIONAL_MODE configuration is
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *           @ref LL_OPAMP_MODE_PGA or LL_OPAMP_MODE_PGA_IO0
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         - may be positive or negative if the @ref OPAMP_LL_EC_FUNCTIONAL_MODE configuration is
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *           @ref LL_OPAMP_MODE_PGA_IO0_BIAS or LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       see @ref OPAMP_LL_EC_FUNCTIONAL_MODE for more details
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_2_OR_MINUS_1             (0x00000000UL)                                  
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_4_OR_MINUS_3             (                                          OPAMP
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_8_OR_MINUS_7             (                     OPAMP_CSR_PGGAIN_1        
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_16_OR_MINUS_15           (                     OPAMP_CSR_PGGAIN_1 | OPAMP
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_32_OR_MINUS_31           (OPAMP_CSR_PGGAIN_2                             
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_64_OR_MINUS_63           (OPAMP_CSR_PGGAIN_2 |                      OPAMP
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_NONINVERTING OPAMP input non-inverting
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO0         (0x00000000UL)        /*!< OPAMP non inverting input c
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA1  for OPAMP1, PA7  for 
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO1         OPAMP_CSR_VPSEL_0     /*!< OPAMP non inverting input c
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA3  for OPAMP1, PB14 for 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO2         OPAMP_CSR_VPSEL_1     /*!< OPAMP non inverting input c
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA7  for OPAMP1, PB0  for 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO3         OPAMP_CSR_VPSEL       /*!< OPAMP non inverting input c
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PD14 for OPAMP2) */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_DAC         OPAMP_CSR_VPSEL       /*!< OPAMP non inverting input c
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (DAC3_CH1 for OPAMP1, DAC3_
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_INVERTING OPAMP input inverting
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note OPAMP inverting input is used with OPAMP in mode standalone or PGA with negative gain or 
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       Otherwise (OPAMP in mode follower), OPAMP inverting input is not used (not connected to G
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
ARM GAS  /tmp/ccyonGYL.s 			page 5


 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO0         (0x00000000UL)           /*!< OPAMP inverting input conne
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA3  for OPAMP1, PA5  for 
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO1         OPAMP_CSR_VMSEL_0        /*!< OPAMP inverting input conne
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PC5  for OPAMP1, PC5  for 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_CONNECT_NO  OPAMP_CSR_VMSEL_1        /*!< OPAMP inverting input not e
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_NONINVERTING_SECONDARY OPAMP input non-inverting secondary
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO0_SEC         (0x00000000UL)       /*!< OPAMP secondary non inve
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA1  for OPAMP1, PA7  f
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO1_SEC         OPAMP_TCMR_VPSSEL_0  /*!< OPAMP secondary non inve
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA3  for OPAMP1, PB14 f
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO2_SEC         OPAMP_TCMR_VPSSEL_1  /*!< OPAMP secondary non inve
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA7  for OPAMP1, PB0  f
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO3_SEC         OPAMP_TCMR_VPSSEL    /*!< OPAMP secondary non inve
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PD14 for OPAMP2) */
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_DAC_SEC         OPAMP_TCMR_VPSSEL    /*!< OPAMP secondary non inve
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (DAC3_CH1 for OPAMP1, DA
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_INVERTING_SECONDARY OPAMP input inverting secondary
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note OPAMP inverting input is used with OPAMP in mode standalone or PGA with negative gain or 
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       Otherwise (OPAMP in mode follower), OPAMP inverting input is not used (not connected to G
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO0_SEC         (0x00000000UL)          /*!< OPAMP secondary mode is 
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            has been configured by c
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA3  for OPAMP1, PA5  f
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO1_SEC         OPAMP_TCMR_VMSSEL       /*!< OPAMP secondary mode is 
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            has been configured by c
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PC5  for OPAMP1, PC5  f
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_PGA_SEC         (0x00000000UL)          /*!< OPAMP secondary mode is 
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            or @ref LL_OPAMP_SetFunc
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - Not connected if con
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - Connected to VINM0 a
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (see @ref OPAMP_LL_EC_FU
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC    OPAMP_TCMR_VMSSEL       /*!< OPAMP secondary mode is 
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            or @ref LL_OPAMP_SetFunc
ARM GAS  /tmp/ccyonGYL.s 			page 6


 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INTERNAL_OUPUT_MODE OPAMP internal output mode
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INTERNAL_OUPUT_DISABLED       (0x00000000UL)         /*!< OPAMP internal output to
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INTERNAL_OUPUT_ENABLED        OPAMP_CSR_OPAMPINTEN   /*!< OPAMP internal output to
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP1 internal outp
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP2 internal outp
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP3 internal outp
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP4 internal outp
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP5 internal outp
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP6 internal outp
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_MUX_MODE OPAMP inputs multiplexer mode
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note The switch can be controlled either by a single timer or a combination of them,
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       in this case application has to 'ORed' the values below
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       ex LL_OPAMP_INPUT_MUX_TIM1_CH6 | LL_OPAMP_INPUT_MUX_TIM20_CH6
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_DISABLE       (0x00000000UL)         /*!< OPAMP inputs timer controlled 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM1_CH6      OPAMP_TCMR_T1CMEN      /*!< OPAMP inputs timer controlled 
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM8_CH6      OPAMP_TCMR_T8CMEN      /*!< OPAMP inputs timer controlled 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM20_CH6     OPAMP_TCMR_T20CMEN     /*!< OPAMP inputs timer controlled 
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                      Note: On this STM32 series, TI
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_POWER_MODE OPAMP PowerMode
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_NORMALSPEED   (0x00000000UL)         /*!< OPAMP output in normal mode */
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_HIGHSPEED     OPAMP_CSR_HIGHSPEEDEN  /*!< OPAMP output in highspeed mode
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_NORMAL        LL_OPAMP_POWERMODE_NORMALSPEED /*!< OPAMP power mode norma
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_TRIMMING_MODE OPAMP trimming mode
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_FACTORY       (0x00000000UL)           /*!< OPAMP trimming factors set to
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_USER          OPAMP_CSR_USERTRIM      /*!< OPAMP trimming factors set to 
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
ARM GAS  /tmp/ccyonGYL.s 			page 7


 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_TRIMMING_TRANSISTORS_DIFF_PAIR OPAMP trimming of transistors differential
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS_VREF_90PC_VDDA  (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_CALSEL_1 | OPAMP_
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA  (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_CALSEL_1         
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS_VREF_10PC_VDDA  (OPAMP_CSR_TRIMOFFSETP                      | OPAMP_
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA (OPAMP_CSR_TRIMOFFSETP                              
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS          (LL_OPAMP_TRIMMING_NMOS_VREF_90PC_VDDA) /*!< OPAMP trimming
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS          (LL_OPAMP_TRIMMING_PMOS_VREF_10PC_VDDA) /*!< OPAMP trimming
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_HW_DELAYS  Definitions of OPAMP hardware constraints delays
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Only OPAMP peripheral HW delays are defined in OPAMP LL driver driver,
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         not timeout values.
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         For details on delays values, refer to descriptions in source code
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         above each literal definition.
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Delay for OPAMP startup time (transition from state disable to enable).    */
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Note: OPAMP startup time depends on board application environment:         */
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*       impedance connected to OPAMP output.                                 */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*       The delay below is specified under conditions:                       */
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*        - OPAMP in functional mode follower                                 */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*        - load impedance of 4kOhm (min), 50pF (max)                         */
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* parameter "tWAKEUP").                                                      */
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Unit: us                                                                   */
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_DELAY_STARTUP_US         (6)  /*!< Delay for OPAMP startup time */
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported macro ------------------------------------------------------------*/
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Macros OPAMP Exported Macros
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EM_WRITE_READ Common write and read registers macro
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Write a value in OPAMP register
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __INSTANCE__ OPAMP Instance
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register to be written
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __VALUE__ Value to be written in the register
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__V
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Read a value in OPAMP register
ARM GAS  /tmp/ccyonGYL.s 			page 8


 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __INSTANCE__ OPAMP Instance
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register to be read
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Register value
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported functions --------------------------------------------------------*/
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Functions OPAMP Exported Functions
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_CONFIGURATION_OPAMP_INSTANCE Configuration of OPAMP hierarchical scope: O
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP mode calibration or functional.
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP mode corresponds to functional or calibration mode:
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - functional mode: OPAMP operation in standalone, follower, ...
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            Set functional mode using function
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            @ref LL_OPAMP_SetFunctionalMode().
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - calibration mode: offset calibration of the selected
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            transistors differential pair NMOS or PMOS.
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALON          LL_OPAMP_SetMode
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  Mode This parameter can be one of the following values:
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FUNCTIONAL
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_CALIBRATION
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetMode(OPAMP_TypeDef *OPAMPx, uint32_t Mode)
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_CALON, Mode);
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP mode calibration or functional.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP mode corresponds to functional or calibration mode:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - functional mode: OPAMP operation in standalone, follower, ...
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            Set functional mode using function
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            @ref LL_OPAMP_SetFunctionalMode().
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - calibration mode: offset calibration of the selected
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            transistors differential pair NMOS or PMOS.
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALON          LL_OPAMP_GetMode
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FUNCTIONAL
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_CALIBRATION
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetMode(OPAMP_TypeDef *OPAMPx)
ARM GAS  /tmp/ccyonGYL.s 			page 9


 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_CALON));
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP functional mode by setting internal connections.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         OPAMP operation in standalone, follower, ...
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   This function reset bit of calibration mode to ensure
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to be in functional mode, in order to have OPAMP parameters
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (inputs selection, ...) set with the corresponding OPAMP mode
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to be effective.
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_SetFunctionalMode
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  FunctionalMode This parameter can be one of the following values:
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_STANDALONE
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FOLLOWER
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_BIAS
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetFunctionalMode(OPAMP_TypeDef *OPAMPx, uint32_t FunctionalMode)
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Note: Bit OPAMP_CSR_CALON reset to ensure to be in functional mode */
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3 | OPAMP_CSR_VMSEL | OPAMP_CSR_CAL
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP functional mode from setting of internal connections.
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         OPAMP operation in standalone, follower, ...
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_GetFunctionalMode
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_STANDALONE
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FOLLOWER
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_BIAS
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetFunctionalMode(OPAMP_TypeDef *OPAMPx)
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3 | OPAMP_CSR_VMSEL
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP PGA gain.
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode PGA
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetFunctionalMode().
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      PGGAIN         LL_OPAMP_SetPGAGain
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  PGAGain This parameter can be one of the following values:
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_2_OR_MINUS_1
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_4_OR_MINUS_3
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_8_OR_MINUS_7
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_16_OR_MINUS_15
ARM GAS  /tmp/ccyonGYL.s 			page 10


 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_32_OR_MINUS_31
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_64_OR_MINUS_63
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetPGAGain(OPAMP_TypeDef *OPAMPx, uint32_t PGAGain)
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_PGGAIN_2 | OPAMP_CSR_PGGAIN_1 | OPAMP_CSR_PGGAIN_0, PGAGain);
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP PGA gain.
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode PGA
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetFunctionalMode().
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      PGGAIN         LL_OPAMP_GetPGAGain
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_2_OR_MINUS_1
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_4_OR_MINUS_3
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_8_OR_MINUS_7
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_16_OR_MINUS_15
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_32_OR_MINUS_31
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_64_OR_MINUS_63
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetPGAGain(OPAMP_TypeDef *OPAMPx)
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_PGGAIN_2 | OPAMP_CSR_PGGAIN_1 | OPAMP_CSR_PGGAI
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP power mode normal or highspeed.
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP highspeed mode allows output stage to have a better slew rate.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      HIGHSPEEDEN     LL_OPAMP_SetPowerMode
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  PowerMode This parameter can be one of the following values:
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_NORMALSPEED
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_HIGHSPEED
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetPowerMode(OPAMP_TypeDef *OPAMPx, uint32_t PowerMode)
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_HIGHSPEEDEN, PowerMode);
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP power mode normal or highspeed.
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP highspeed mode allows output stage to have a better slew rate.
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      HIGHSPEEDEN     LL_OPAMP_GetPowerMode
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_NORMALSPEED
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_HIGHSPEED
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetPowerMode(OPAMP_TypeDef *OPAMPx)
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_HIGHSPEEDEN));
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
ARM GAS  /tmp/ccyonGYL.s 			page 11


 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_CONFIGURATION_INPUTS Configuration of OPAMP inputs
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP non-inverting input connection.
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VPSEL          LL_OPAMP_SetInputNonInverting
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputNonInverting This parameter can be one of the following values:
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputNonInverting(OPAMP_TypeDef *OPAMPx, uint32_t InputNonInvertin
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_VPSEL, InputNonInverting);
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP non-inverting input connection.
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VPSEL          LL_OPAMP_GetInputNonInverting
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputNonInverting(OPAMP_TypeDef *OPAMPx)
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_VPSEL));
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inverting input connection.
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP inverting input is used with OPAMP in mode standalone
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         or PGA with external capacitors for filtering circuit.
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Otherwise (OPAMP in mode follower), OPAMP inverting input
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is not used (not connected to GPIO pin).
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_SetInputInverting
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputInverting This parameter can be one of the following values:
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_CONNECT_NO
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputInverting(OPAMP_TypeDef *OPAMPx, uint32_t InputInverting)
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Manage cases of OPAMP inverting input not connected (0x10 and 0x11)      */
ARM GAS  /tmp/ccyonGYL.s 			page 12


 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* to not modify OPAMP mode follower or PGA.                                */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Bit OPAMP_CSR_VMSEL_1 is set by OPAMP mode (follower, PGA). */
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, (~(InputInverting >> 1)) & OPAMP_CSR_VMSEL_0, InputInverting);
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inverting input connection.
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_GetInputInverting
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_CONNECT_NO
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputInverting(OPAMP_TypeDef *OPAMPx)
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t input_inverting = READ_BIT(OPAMPx->CSR, OPAMP_CSR_VMSEL);
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Manage cases 0x10 and 0x11 to return the same value: OPAMP inverting     */
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* input not connected.                                                     */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (input_inverting & ~((input_inverting >> 1) & OPAMP_CSR_VMSEL_0));
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP non-inverting input secondary connection.
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VPSSEL         LL_OPAMP_SetInputNonInvertingSecondary
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputNonInverting This parameter can be one of the following values:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0_SEC
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1_SEC
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2_SEC
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3_SEC
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC_SEC
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputNonInvertingSecondary(OPAMP_TypeDef *OPAMPx, uint32_t InputNo
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_VPSSEL, InputNonInverting);
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP non-inverting input secondary connection.
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VPSSEL         LL_OPAMP_GetInputNonInvertingSecondary
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0_SEC
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1_SEC
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2_SEC
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3_SEC
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC_SEC
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputNonInvertingSecondary(OPAMP_TypeDef *OPAMPx)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_VPSSEL));
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
ARM GAS  /tmp/ccyonGYL.s 			page 13


 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inverting input secondary connection.
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP inverting input is used with OPAMP in mode standalone
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         or PGA with external capacitors for filtering circuit.
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Otherwise (OPAMP in mode follower), OPAMP inverting input
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is not used (not connected to GPIO pin).
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VMSSEL         LL_OPAMP_SetInputInvertingSecondary
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputInverting This parameter can be one of the following values:
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0_SEC
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1_SEC
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_PGA_SEC
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputInvertingSecondary(OPAMP_TypeDef *OPAMPx, uint32_t InputInver
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_VMSSEL, InputInverting);
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inverting input secondary connection.
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VMSSEL         LL_OPAMP_GetInputInvertingSecondary
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0_SEC
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1_SEC
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_PGA_SEC
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputInvertingSecondary(OPAMP_TypeDef *OPAMPx)
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_VMSSEL));
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inputs multiplexer mode.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     TCMEN          LL_OPAMP_SetInputsMuxMode
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputsMuxMode This parameter can be one of the following values:
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_DISABLE
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM1_CH6
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM8_CH6
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM20_CH6  (1)
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         On this STM32 series, this value is not available on all devices. Refer to datasheet fo
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputsMuxMode(OPAMP_TypeDef *OPAMPx, uint32_t InputsMuxMode)
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_T1CMEN | OPAMP_TCMR_T8CMEN | OPAMP_TCMR_T20CMEN, InputsMuxMod
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inputs multiplexer mode.
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     TCMEN          LL_OPAMP_GetInputsMuxMode
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_DISABLE
ARM GAS  /tmp/ccyonGYL.s 			page 14


 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM1_CH6
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM8_CH6
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM20_CH6  (1)
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         On this STM32 series, this value is not available on all devices. Refer to datasheet fo
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputsMuxMode(OPAMP_TypeDef *OPAMPx)
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_T1CMEN | OPAMP_TCMR_T8CMEN | OPAMP_TCMR_T20CM
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP internal output.
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP internal output is used to link OPAMP output to ADC input internally.
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPINTEN     LL_OPAMP_SetInternalOutput
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InternalOutput This parameter can be one of the following values:
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_DISABLED
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_ENABLED
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInternalOutput(OPAMP_TypeDef *OPAMPx, uint32_t InternalOutput)
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_OPAMPINTEN, InternalOutput);
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP internal output state.
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPINTEN     LL_OPAMP_GetInternalOutput
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_DISABLED
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_ENABLED
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInternalOutput(OPAMP_TypeDef *OPAMPx)
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return READ_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPINTEN);
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_OPAMP_TRIMMING Configuration and operation of OPAMP trimming
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP trimming mode.
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      USERTRIM       LL_OPAMP_SetTrimmingMode
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TrimmingMode This parameter can be one of the following values:
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_FACTORY
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_USER
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetTrimmingMode(OPAMP_TypeDef *OPAMPx, uint32_t TrimmingMode)
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
ARM GAS  /tmp/ccyonGYL.s 			page 15


 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_USERTRIM, TrimmingMode);
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP trimming mode.
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      USERTRIM       LL_OPAMP_GetTrimmingMode
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_FACTORY
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_USER
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetTrimmingMode(OPAMP_TypeDef *OPAMPx)
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_USERTRIM));
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP offset to calibrate the selected transistors
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS.
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode calibration
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetMode().
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALSEL         LL_OPAMP_SetCalibrationSelection
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TransistorsDiffPair This parameter can be one of the following values:
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS            (1)
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS            (1)
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (1) Default parameters to be used for calibration
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             using two trimming steps (one with each transistors differential
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             pair NMOS and PMOS)
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetCalibrationSelection(OPAMP_TypeDef *OPAMPx, uint32_t TransistorsDi
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Parameter used with mask "OPAMP_TRIMMING_SELECT_MASK" because            */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* containing other bits reserved for other purpose.                        */
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_CALSEL, (TransistorsDiffPair & OPAMP_TRIMMING_SELECT_MASK));
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP offset to calibrate the selected transistors
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS.
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode calibration
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetMode().
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALSEL         LL_OPAMP_GetCalibrationSelection
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS            (1)
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS            (1)
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (1) Default parameters to be used for calibration
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             using two trimming steps (one with each transistors differential
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *             pair NMOS and PMOS)
ARM GAS  /tmp/ccyonGYL.s 			page 16


 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetCalibrationSelection(OPAMP_TypeDef *OPAMPx)
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t CalibrationSelection = (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_CALSEL));
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (CalibrationSelection |
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****           (((CalibrationSelection & OPAMP_CSR_CALSEL_1) == 0UL) ? OPAMP_CSR_TRIMOFFSETP : OPAMP_CSR
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP calibration result of toggling output.
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   This functions returns:
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         0 if OPAMP calibration output is reset
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         1 if OPAMP calibration output is set
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OUTCAL         LL_OPAMP_IsCalibrationOutputSet
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval State of bit (1 or 0).
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_IsCalibrationOutputSet(OPAMP_TypeDef *OPAMPx)
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return ((READ_BIT(OPAMPx->CSR, OPAMP_CSR_OUTCAL) == OPAMP_CSR_OUTCAL) ? 1UL : 0UL);
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP trimming factor for the selected transistors
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS, corresponding to the selected
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         power mode.
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      TRIMOFFSETN    LL_OPAMP_SetTrimmingValue\n
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         CSR      TRIMOFFSETP    LL_OPAMP_SetTrimmingValue
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TransistorsDiffPair This parameter can be one of the following values:
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TrimmingValue 0x00...0x1F
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetTrimmingValue(OPAMP_TypeDef *OPAMPx, uint32_t TransistorsDiffPair,
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                uint32_t TrimmingValue)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR,
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****              (TransistorsDiffPair & OPAMP_TRIMMING_VALUE_MASK),
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****              TrimmingValue << ((TransistorsDiffPair == LL_OPAMP_TRIMMING_NMOS) ? OPAMP_CSR_TRIMOFFS
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP trimming factor for the selected transistors
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         differential pair NMOS or PMOS, corresponding to the selected
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         power mode.
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      TRIMOFFSETN    LL_OPAMP_GetTrimmingValue\n
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         CSR      TRIMOFFSETP    LL_OPAMP_GetTrimmingValue
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TransistorsDiffPair This parameter can be one of the following values:
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_NMOS
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_PMOS
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval 0x0...0x1F
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetTrimmingValue(OPAMP_TypeDef *OPAMPx, uint32_t TransistorsDiffP
ARM GAS  /tmp/ccyonGYL.s 			page 17


 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, (TransistorsDiffPair & OPAMP_TRIMMING_VALUE_MASK))
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                     >> ((TransistorsDiffPair == LL_OPAMP_TRIMMING_NMOS) ? OPAMP_CSR_TRIMOFFSETN_Pos
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_OPERATION Operation on OPAMP instance
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Enable OPAMP instance.
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   After enable from off state, OPAMP requires a delay
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to fulfill wake up time specification.
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Refer to device datasheet, parameter "tWAKEUP".
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPXEN       LL_OPAMP_Enable
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_Enable(OPAMP_TypeDef *OPAMPx)
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   SET_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPxEN);
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Disable OPAMP instance.
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPXEN       LL_OPAMP_Disable
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_Disable(OPAMP_TypeDef *OPAMPx)
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   CLEAR_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPxEN);
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP instance enable state
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (0: OPAMP is disabled, 1: OPAMP is enabled)
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPXEN       LL_OPAMP_IsEnabled
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval State of bit (1 or 0).
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_IsEnabled(OPAMP_TypeDef *OPAMPx)
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return ((READ_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPxEN) == (OPAMP_CSR_OPAMPxEN)) ? 1UL : 0UL);
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Lock OPAMP instance.
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Once locked, OPAMP configuration can be accessed in read-only.
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   The only way to unlock the OPAMP is a device hardware reset.
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      LOCK           LL_OPAMP_Lock
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
ARM GAS  /tmp/ccyonGYL.s 			page 18


 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_Lock(OPAMP_TypeDef *OPAMPx)
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   SET_BIT(OPAMPx->CSR, OPAMP_CSR_LOCK);
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP lock state
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (0: OPAMP is unlocked, 1: OPAMP is locked).
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Once locked, OPAMP configuration can be accessed in read-only.
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   The only way to unlock the OPAMP is a device hardware reset.
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      LOCK           LL_OPAMP_IsLocked
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval State of bit (1 or 0).
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_IsLocked(OPAMP_TypeDef *OPAMPx)
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
  28              		.loc 1 959 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return ((READ_BIT(OPAMPx->CSR, OPAMP_CSR_LOCK) == (OPAMP_CSR_LOCK)) ? 1UL : 0UL);
  44              		.loc 1 960 12
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 1B68     		ldr	r3, [r3]
  47 000c 03F00043 		and	r3, r3, #-2147483648
  48              		.loc 1 960 77
  49 0010 B3F1004F 		cmp	r3, #-2147483648
  50 0014 01D1     		bne	.L2
  51              		.loc 1 960 77 is_stmt 0 discriminator 1
  52 0016 0123     		movs	r3, #1
  53 0018 00E0     		b	.L4
  54              	.L2:
  55              		.loc 1 960 77 discriminator 2
  56 001a 0023     		movs	r3, #0
  57              	.L4:
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
  58              		.loc 1 961 1 is_stmt 1 discriminator 5
  59 001c 1846     		mov	r0, r3
  60 001e 0C37     		adds	r7, r7, #12
  61              	.LCFI3:
  62              		.cfi_def_cfa_offset 4
  63 0020 BD46     		mov	sp, r7
  64              	.LCFI4:
  65              		.cfi_def_cfa_register 13
  66              		@ sp needed
ARM GAS  /tmp/ccyonGYL.s 			page 19


  67 0022 5DF8047B 		ldr	r7, [sp], #4
  68              	.LCFI5:
  69              		.cfi_restore 7
  70              		.cfi_def_cfa_offset 0
  71 0026 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE163:
  75              		.section	.text.LL_OPAMP_IsTimerMuxLocked,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	LL_OPAMP_IsTimerMuxLocked:
  83              	.LFB165:
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Lock OPAMP instance timer controlled mux
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Once locked, OPAMP timer controlled mux configuration can be accessed in read-only.
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   The only way to unlock the OPAMP timer controlled mux is a device hardware reset.
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     LOCK           LL_OPAMP_LockTimerMux
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_LockTimerMux(OPAMP_TypeDef *OPAMPx)
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   SET_BIT(OPAMPx->TCMR, OPAMP_TCMR_LOCK);
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP timer controlled mux lock state
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (0: OPAMP timer controlled mux is unlocked, 1: OPAMP timer controlled mux is locked).
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Once locked, OPAMP timer controlled mux configuration can be accessed in read-only.
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   The only way to unlock the OPAMP timer controlled mux is a device hardware reset.
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     LOCK           LL_OPAMP_IsTimerMuxLocked
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval State of bit (1 or 0).
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_IsTimerMuxLocked(OPAMP_TypeDef *OPAMPx)
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
  84              		.loc 1 986 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI6:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 83B0     		sub	sp, sp, #12
  94              	.LCFI7:
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI8:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return ((READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_LOCK) == (OPAMP_TCMR_LOCK)) ? 1UL : 0UL);
ARM GAS  /tmp/ccyonGYL.s 			page 20


 100              		.loc 1 987 12
 101 0008 7B68     		ldr	r3, [r7, #4]
 102 000a 9B69     		ldr	r3, [r3, #24]
 103 000c 03F00043 		and	r3, r3, #-2147483648
 104              		.loc 1 987 80
 105 0010 B3F1004F 		cmp	r3, #-2147483648
 106 0014 01D1     		bne	.L6
 107              		.loc 1 987 80 is_stmt 0 discriminator 1
 108 0016 0123     		movs	r3, #1
 109 0018 00E0     		b	.L8
 110              	.L6:
 111              		.loc 1 987 80 discriminator 2
 112 001a 0023     		movs	r3, #0
 113              	.L8:
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 114              		.loc 1 988 1 is_stmt 1 discriminator 5
 115 001c 1846     		mov	r0, r3
 116 001e 0C37     		adds	r7, r7, #12
 117              	.LCFI9:
 118              		.cfi_def_cfa_offset 4
 119 0020 BD46     		mov	sp, r7
 120              	.LCFI10:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 0022 5DF8047B 		ldr	r7, [sp], #4
 124              	.LCFI11:
 125              		.cfi_restore 7
 126              		.cfi_def_cfa_offset 0
 127 0026 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE165:
 131              		.section	.text.LL_OPAMP_DeInit,"ax",%progbits
 132              		.align	1
 133              		.global	LL_OPAMP_DeInit
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	LL_OPAMP_DeInit:
 140              	.LFB166:
 141              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @file    stm32g4xx_ll_opamp.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @brief   OPAMP LL module driver
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   ******************************************************************************
ARM GAS  /tmp/ccyonGYL.s 			page 21


  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #if defined(USE_FULL_LL_DRIVER)
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Includes ------------------------------------------------------------------*/
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #include "stm32g4xx_ll_opamp.h"
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #ifdef  USE_FULL_ASSERT
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #include "stm32_assert.h"
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #else
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #define assert_param(expr) ((void)0U)
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #endif
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /** @addtogroup STM32G4xx_LL_Driver
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @{
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #if defined (OPAMP1) || defined (OPAMP2) || defined (OPAMP3) || defined (OPAMP4) || defined (OPAMP5
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /** @addtogroup OPAMP_LL OPAMP
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @{
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Private types -------------------------------------------------------------*/
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Private variables ---------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Private constants ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /** @addtogroup OPAMP_LL_Private_Macros
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Check of parameters for configuration of OPAMP hierarchical scope:         */
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* OPAMP instance.                                                            */
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #define IS_LL_OPAMP_POWER_MODE(__POWER_MODE__)                                 \
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   (   ((__POWER_MODE__) == LL_OPAMP_POWERMODE_NORMALSPEED)                     \
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__POWER_MODE__) == LL_OPAMP_POWERMODE_HIGHSPEED))
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #define IS_LL_OPAMP_FUNCTIONAL_MODE(__FUNCTIONAL_MODE__)                       \
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   (   ((__FUNCTIONAL_MODE__) == LL_OPAMP_MODE_STANDALONE)                      \
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__FUNCTIONAL_MODE__) == LL_OPAMP_MODE_FOLLOWER)                        \
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__FUNCTIONAL_MODE__) == LL_OPAMP_MODE_PGA)                             \
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__FUNCTIONAL_MODE__) == LL_OPAMP_MODE_PGA_IO0)                         \
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__FUNCTIONAL_MODE__) == LL_OPAMP_MODE_PGA_IO0_BIAS)                    \
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__FUNCTIONAL_MODE__) == LL_OPAMP_MODE_PGA_IO0_IO1_BIAS)                \
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   )
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #define IS_LL_OPAMP_INPUT_NONINVERTING(__INPUT_NONINVERTING__)                 \
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   (   ((__INPUT_NONINVERTING__) == LL_OPAMP_INPUT_NONINVERT_IO0)               \
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__INPUT_NONINVERTING__) == LL_OPAMP_INPUT_NONINVERT_IO1)               \
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__INPUT_NONINVERTING__) == LL_OPAMP_INPUT_NONINVERT_IO2)               \
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__INPUT_NONINVERTING__) == LL_OPAMP_INPUT_NONINVERT_IO3)               \
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__INPUT_NONINVERTING__) == LL_OPAMP_INPUT_NONINVERT_DAC)               \
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   )
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** #define IS_LL_OPAMP_INPUT_INVERTING(__INPUT_INVERTING__)                       \
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   (   ((__INPUT_INVERTING__) == LL_OPAMP_INPUT_INVERT_IO0)                     \
ARM GAS  /tmp/ccyonGYL.s 			page 22


  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__INPUT_INVERTING__) == LL_OPAMP_INPUT_INVERT_IO1)                     \
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****    || ((__INPUT_INVERTING__) == LL_OPAMP_INPUT_INVERT_CONNECT_NO)              \
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   )
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /**
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @}
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Private function prototypes -----------------------------------------------*/
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /* Exported functions --------------------------------------------------------*/
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /** @addtogroup OPAMP_LL_Exported_Functions
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @{
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /** @addtogroup OPAMP_LL_EF_Init
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @{
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /**
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @brief  De-initialize registers of the selected OPAMP instance
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *         to their default reset values.
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @note   If comparator is locked, de-initialization by software is
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *         not possible.
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *         The only way to unlock the comparator is a device hardware reset.
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @param  OPAMPx OPAMP instance
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @retval An ErrorStatus enumeration value:
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *          - SUCCESS: OPAMP registers are de-initialized
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *          - ERROR: OPAMP registers are not de-initialized
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** ErrorStatus LL_OPAMP_DeInit(OPAMP_TypeDef *OPAMPx)
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** {
 142              		.loc 2 106 1
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 16
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              	.LCFI12:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 84B0     		sub	sp, sp, #16
 152              	.LCFI13:
 153              		.cfi_def_cfa_offset 24
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI14:
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   ErrorStatus status = SUCCESS;
 158              		.loc 2 107 15
 159 0008 0023     		movs	r3, #0
 160 000a FB73     		strb	r3, [r7, #15]
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Check the parameters */
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   assert_param(IS_OPAMP_ALL_INSTANCE(OPAMPx));
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
ARM GAS  /tmp/ccyonGYL.s 			page 23


 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Note: Hardware constraint (refer to description of this function):       */
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /*       OPAMP instance must not be locked.                                 */
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   if (LL_OPAMP_IsLocked(OPAMPx) == 0UL)
 161              		.loc 2 114 7
 162 000c 7868     		ldr	r0, [r7, #4]
 163 000e FFF7FEFF 		bl	LL_OPAMP_IsLocked
 164 0012 0346     		mov	r3, r0
 165              		.loc 2 114 6
 166 0014 002B     		cmp	r3, #0
 167 0016 03D1     		bne	.L10
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     LL_OPAMP_WriteReg(OPAMPx, CSR, 0x00000000UL);
 168              		.loc 2 116 5
 169 0018 7B68     		ldr	r3, [r7, #4]
 170 001a 0022     		movs	r2, #0
 171 001c 1A60     		str	r2, [r3]
 172 001e 01E0     		b	.L11
 173              	.L10:
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   else
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* OPAMP instance is locked: de-initialization by software is              */
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* not possible.                                                           */
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* The only way to unlock the OPAMP is a device hardware reset.            */
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     status = ERROR;
 174              		.loc 2 123 12
 175 0020 0123     		movs	r3, #1
 176 0022 FB73     		strb	r3, [r7, #15]
 177              	.L11:
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Timer controlled mux mode register reset                                  */
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   if (LL_OPAMP_IsTimerMuxLocked(OPAMPx) == 0UL)
 178              		.loc 2 127 7
 179 0024 7868     		ldr	r0, [r7, #4]
 180 0026 FFF7FEFF 		bl	LL_OPAMP_IsTimerMuxLocked
 181 002a 0346     		mov	r3, r0
 182              		.loc 2 127 6
 183 002c 002B     		cmp	r3, #0
 184 002e 03D1     		bne	.L12
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     LL_OPAMP_WriteReg(OPAMPx, TCMR, 0x00000000UL);
 185              		.loc 2 129 5
 186 0030 7B68     		ldr	r3, [r7, #4]
 187 0032 0022     		movs	r2, #0
 188 0034 9A61     		str	r2, [r3, #24]
 189 0036 06E0     		b	.L13
 190              	.L12:
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   else if (LL_OPAMP_ReadReg(OPAMPx, TCMR) != 0x80000000UL)
 191              		.loc 2 131 12
 192 0038 7B68     		ldr	r3, [r7, #4]
 193 003a 9B69     		ldr	r3, [r3, #24]
 194              		.loc 2 131 11
 195 003c B3F1004F 		cmp	r3, #-2147483648
 196 0040 01D0     		beq	.L13
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
ARM GAS  /tmp/ccyonGYL.s 			page 24


 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* OPAMP instance timer controlled mux is locked configured, deinit error  */
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* The only way to unlock the OPAMP is a device hardware reset.            */
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     status = ERROR;
 197              		.loc 2 135 12
 198 0042 0123     		movs	r3, #1
 199 0044 FB73     		strb	r3, [r7, #15]
 200              	.L13:
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   else
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* OPAMP instance timer controlled mux is locked unconfigured, deinit OK */
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   return status;
 201              		.loc 2 142 10
 202 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** }
 203              		.loc 2 143 1
 204 0048 1846     		mov	r0, r3
 205 004a 1037     		adds	r7, r7, #16
 206              	.LCFI15:
 207              		.cfi_def_cfa_offset 8
 208 004c BD46     		mov	sp, r7
 209              	.LCFI16:
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 004e 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE166:
 216              		.section	.text.LL_OPAMP_Init,"ax",%progbits
 217              		.align	1
 218              		.global	LL_OPAMP_Init
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	LL_OPAMP_Init:
 225              	.LFB167:
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /**
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @brief  Initialize some features of OPAMP instance.
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @note   This function reset bit of calibration mode to ensure
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *         to be in functional mode, in order to have OPAMP parameters
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *         (inputs selection, ...) set with the corresponding OPAMP mode
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *         to be effective.
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @param  OPAMPx OPAMP instance
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @param  OPAMP_InitStruct Pointer to a @ref LL_OPAMP_InitTypeDef structure
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @retval An ErrorStatus enumeration value:
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *          - SUCCESS: OPAMP registers are initialized
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *          - ERROR: OPAMP registers are not initialized
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** ErrorStatus LL_OPAMP_Init(OPAMP_TypeDef *OPAMPx, LL_OPAMP_InitTypeDef *OPAMP_InitStruct)
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** {
 226              		.loc 2 158 1
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 16
 229              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccyonGYL.s 			page 25


 230 0000 80B5     		push	{r7, lr}
 231              	.LCFI17:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI18:
 237              		.cfi_def_cfa_offset 24
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI19:
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 242 0008 3960     		str	r1, [r7]
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   ErrorStatus status = SUCCESS;
 243              		.loc 2 159 15
 244 000a 0023     		movs	r3, #0
 245 000c FB73     		strb	r3, [r7, #15]
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Check the parameters */
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   assert_param(IS_OPAMP_ALL_INSTANCE(OPAMPx));
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   assert_param(IS_LL_OPAMP_POWER_MODE(OPAMP_InitStruct->PowerMode));
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   assert_param(IS_LL_OPAMP_FUNCTIONAL_MODE(OPAMP_InitStruct->FunctionalMode));
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   assert_param(IS_LL_OPAMP_INPUT_NONINVERTING(OPAMP_InitStruct->InputNonInverting));
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Note: OPAMP inverting input can be used with OPAMP in mode standalone    */
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /*       or PGA with external capacitors for filtering circuit.             */
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /*       Otherwise (OPAMP in mode follower), OPAMP inverting input is       */
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /*       not used (not connected to GPIO pin).                              */
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   if (OPAMP_InitStruct->FunctionalMode != LL_OPAMP_MODE_FOLLOWER)
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     assert_param(IS_LL_OPAMP_INPUT_INVERTING(OPAMP_InitStruct->InputInverting));
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Note: Hardware constraint (refer to description of this function):       */
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /*       OPAMP instance must not be locked.                                 */
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   if (LL_OPAMP_IsLocked(OPAMPx) == 0U)
 246              		.loc 2 178 7
 247 000e 7868     		ldr	r0, [r7, #4]
 248 0010 FFF7FEFF 		bl	LL_OPAMP_IsLocked
 249 0014 0346     		mov	r3, r0
 250              		.loc 2 178 6
 251 0016 002B     		cmp	r3, #0
 252 0018 29D1     		bne	.L16
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* Configuration of OPAMP instance :                                      */
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /*  - PowerMode                                                             */
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /*  - Functional mode                                                     */
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /*  - Input non-inverting                                                 */
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /*  - Input inverting                                                     */
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* Note: Bit OPAMP_CSR_CALON reset to ensure to be in functional mode.    */
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     if (OPAMP_InitStruct->FunctionalMode != LL_OPAMP_MODE_FOLLOWER)
 253              		.loc 2 186 25
 254 001a 3B68     		ldr	r3, [r7]
 255 001c 5B68     		ldr	r3, [r3, #4]
 256              		.loc 2 186 8
 257 001e 602B     		cmp	r3, #96
 258 0020 14D0     		beq	.L17
ARM GAS  /tmp/ccyonGYL.s 			page 26


 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     {
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****       MODIFY_REG(OPAMPx->CSR,
 259              		.loc 2 188 7
 260 0022 7B68     		ldr	r3, [r7, #4]
 261 0024 1B68     		ldr	r3, [r3]
 262 0026 23F4C123 		bic	r3, r3, #395264
 263 002a 23F0EC03 		bic	r3, r3, #236
 264 002e 3A68     		ldr	r2, [r7]
 265 0030 1168     		ldr	r1, [r2]
 266 0032 3A68     		ldr	r2, [r7]
 267 0034 5268     		ldr	r2, [r2, #4]
 268 0036 1143     		orrs	r1, r1, r2
 269 0038 3A68     		ldr	r2, [r7]
 270 003a 9268     		ldr	r2, [r2, #8]
 271 003c 1143     		orrs	r1, r1, r2
 272 003e 3A68     		ldr	r2, [r7]
 273 0040 D268     		ldr	r2, [r2, #12]
 274 0042 0A43     		orrs	r2, r2, r1
 275 0044 1A43     		orrs	r2, r2, r3
 276 0046 7B68     		ldr	r3, [r7, #4]
 277 0048 1A60     		str	r2, [r3]
 278 004a 12E0     		b	.L18
 279              	.L17:
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  OPAMP_CSR_HIGHSPEEDEN
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_CALON
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_VMSEL
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_VPSEL
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  ,
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  OPAMP_InitStruct->PowerMode
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_InitStruct->FunctionalMode
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_InitStruct->InputNonInverting
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_InitStruct->InputInverting
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                 );
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     }
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     else
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     {
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****       MODIFY_REG(OPAMPx->CSR,
 280              		.loc 2 203 7
 281 004c 7B68     		ldr	r3, [r7, #4]
 282 004e 1B68     		ldr	r3, [r3]
 283 0050 23F4C123 		bic	r3, r3, #395264
 284 0054 23F0EC03 		bic	r3, r3, #236
 285 0058 3A68     		ldr	r2, [r7]
 286 005a 1168     		ldr	r1, [r2]
 287 005c 3A68     		ldr	r2, [r7]
 288 005e 9268     		ldr	r2, [r2, #8]
 289 0060 0A43     		orrs	r2, r2, r1
 290 0062 1343     		orrs	r3, r3, r2
 291 0064 43F06002 		orr	r2, r3, #96
 292 0068 7B68     		ldr	r3, [r7, #4]
 293 006a 1A60     		str	r2, [r3]
 294 006c 01E0     		b	.L18
 295              	.L16:
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  OPAMP_CSR_HIGHSPEEDEN
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_CALON
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_VMSEL
ARM GAS  /tmp/ccyonGYL.s 			page 27


 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_VPSEL
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  ,
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  OPAMP_InitStruct->PowerMode
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | LL_OPAMP_MODE_FOLLOWER
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                  | OPAMP_InitStruct->InputNonInverting
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****                 );
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     }
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   else
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   {
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     /* Initialization error: OPAMP instance is locked.                        */
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****     status = ERROR;
 296              		.loc 2 219 12
 297 006e 0123     		movs	r3, #1
 298 0070 FB73     		strb	r3, [r7, #15]
 299              	.L18:
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   }
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   return status;
 300              		.loc 2 222 10
 301 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** }
 302              		.loc 2 223 1
 303 0074 1846     		mov	r0, r3
 304 0076 1037     		adds	r7, r7, #16
 305              	.LCFI20:
 306              		.cfi_def_cfa_offset 8
 307 0078 BD46     		mov	sp, r7
 308              	.LCFI21:
 309              		.cfi_def_cfa_register 13
 310              		@ sp needed
 311 007a 80BD     		pop	{r7, pc}
 312              		.cfi_endproc
 313              	.LFE167:
 315              		.section	.text.LL_OPAMP_StructInit,"ax",%progbits
 316              		.align	1
 317              		.global	LL_OPAMP_StructInit
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	LL_OPAMP_StructInit:
 324              	.LFB168:
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** 
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** /**
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @brief Set each @ref LL_OPAMP_InitTypeDef field to default value.
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @param OPAMP_InitStruct pointer to a @ref LL_OPAMP_InitTypeDef structure
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   *                         whose fields will be set to default values.
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   * @retval None
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** void LL_OPAMP_StructInit(LL_OPAMP_InitTypeDef *OPAMP_InitStruct)
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** {
 325              		.loc 2 232 1
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccyonGYL.s 			page 28


 329              		@ link register save eliminated.
 330 0000 80B4     		push	{r7}
 331              	.LCFI22:
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 83B0     		sub	sp, sp, #12
 335              	.LCFI23:
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI24:
 339              		.cfi_def_cfa_register 7
 340 0006 7860     		str	r0, [r7, #4]
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Set OPAMP_InitStruct fields to default values */
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   OPAMP_InitStruct->PowerMode         = LL_OPAMP_POWERMODE_NORMALSPEED;
 341              		.loc 2 234 39
 342 0008 7B68     		ldr	r3, [r7, #4]
 343 000a 0022     		movs	r2, #0
 344 000c 1A60     		str	r2, [r3]
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   OPAMP_InitStruct->FunctionalMode    = LL_OPAMP_MODE_FOLLOWER;
 345              		.loc 2 235 39
 346 000e 7B68     		ldr	r3, [r7, #4]
 347 0010 6022     		movs	r2, #96
 348 0012 5A60     		str	r2, [r3, #4]
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   OPAMP_InitStruct->InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 349              		.loc 2 236 39
 350 0014 7B68     		ldr	r3, [r7, #4]
 351 0016 0022     		movs	r2, #0
 352 0018 9A60     		str	r2, [r3, #8]
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /* Note: Parameter discarded if OPAMP in functional mode follower,          */
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   /*       set anyway to its default value.                                   */
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c ****   OPAMP_InitStruct->InputInverting    = LL_OPAMP_INPUT_INVERT_CONNECT_NO;
 353              		.loc 2 239 39
 354 001a 7B68     		ldr	r3, [r7, #4]
 355 001c 4022     		movs	r2, #64
 356 001e DA60     		str	r2, [r3, #12]
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_opamp.c **** }
 357              		.loc 2 240 1
 358 0020 00BF     		nop
 359 0022 0C37     		adds	r7, r7, #12
 360              	.LCFI25:
 361              		.cfi_def_cfa_offset 4
 362 0024 BD46     		mov	sp, r7
 363              	.LCFI26:
 364              		.cfi_def_cfa_register 13
 365              		@ sp needed
 366 0026 5DF8047B 		ldr	r7, [sp], #4
 367              	.LCFI27:
 368              		.cfi_restore 7
 369              		.cfi_def_cfa_offset 0
 370 002a 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE168:
 374              		.text
 375              	.Letext0:
 376              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 377              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 378              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
ARM GAS  /tmp/ccyonGYL.s 			page 29


 379              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
ARM GAS  /tmp/ccyonGYL.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_ll_opamp.c
     /tmp/ccyonGYL.s:18     .text.LL_OPAMP_IsLocked:0000000000000000 $t
     /tmp/ccyonGYL.s:25     .text.LL_OPAMP_IsLocked:0000000000000000 LL_OPAMP_IsLocked
     /tmp/ccyonGYL.s:76     .text.LL_OPAMP_IsTimerMuxLocked:0000000000000000 $t
     /tmp/ccyonGYL.s:82     .text.LL_OPAMP_IsTimerMuxLocked:0000000000000000 LL_OPAMP_IsTimerMuxLocked
     /tmp/ccyonGYL.s:132    .text.LL_OPAMP_DeInit:0000000000000000 $t
     /tmp/ccyonGYL.s:139    .text.LL_OPAMP_DeInit:0000000000000000 LL_OPAMP_DeInit
     /tmp/ccyonGYL.s:217    .text.LL_OPAMP_Init:0000000000000000 $t
     /tmp/ccyonGYL.s:224    .text.LL_OPAMP_Init:0000000000000000 LL_OPAMP_Init
     /tmp/ccyonGYL.s:316    .text.LL_OPAMP_StructInit:0000000000000000 $t
     /tmp/ccyonGYL.s:323    .text.LL_OPAMP_StructInit:0000000000000000 LL_OPAMP_StructInit

NO UNDEFINED SYMBOLS
