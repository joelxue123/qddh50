ARM GAS  /tmp/ccQFOIc1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"thermistor.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZNK24ThermistorCurrentLimiter17get_current_limitEf,"ax",%progbits
  18              		.align	1
  19              		.global	_ZNK24ThermistorCurrentLimiter17get_current_limitEf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZNK24ThermistorCurrentLimiter17get_current_limitEf:
  27              	.LVL0:
  28              	.LFB4943:
  29              		.file 1 "Src/thermistor.cpp"
   1:Src/thermistor.cpp **** #include "main.h"
   2:Src/thermistor.cpp **** #include "low_level.h"
   3:Src/thermistor.cpp **** #include "thermistor.hpp"
   4:Src/thermistor.cpp **** #include "axis.hpp"
   5:Src/thermistor.cpp **** #include "motor.hpp"
   6:Src/thermistor.cpp **** 
   7:Src/thermistor.cpp **** 
   8:Src/thermistor.cpp **** ThermistorCurrentLimiter::ThermistorCurrentLimiter(uint16_t adc_channel,
   9:Src/thermistor.cpp ****                                                    const float* const coefficients,
  10:Src/thermistor.cpp ****                                                    const float* const aux_coefficients,
  11:Src/thermistor.cpp ****                                                    size_t num_coeffs,
  12:Src/thermistor.cpp ****                                                    const float& temp_limit_lower,
  13:Src/thermistor.cpp ****                                                    const float& temp_limit_upper,
  14:Src/thermistor.cpp ****                                                    const bool& enabled) :
  15:Src/thermistor.cpp ****     adc_channel_(adc_channel),
  16:Src/thermistor.cpp ****     coefficients_(coefficients),
  17:Src/thermistor.cpp ****     aux_coefficients_(aux_coefficients),
  18:Src/thermistor.cpp ****     num_coeffs_(num_coeffs),
  19:Src/thermistor.cpp ****     temperature_(NAN),
  20:Src/thermistor.cpp ****     temp_limit_lower_(temp_limit_lower),
  21:Src/thermistor.cpp ****     temp_limit_upper_(temp_limit_upper),
  22:Src/thermistor.cpp ****     enabled_(enabled),
  23:Src/thermistor.cpp ****     error_(ERROR_NONE)
  24:Src/thermistor.cpp **** {
  25:Src/thermistor.cpp **** }
  26:Src/thermistor.cpp **** 
  27:Src/thermistor.cpp **** void ThermistorCurrentLimiter::update() {
  28:Src/thermistor.cpp ****     float voltage = get_adc_voltage_channel(14);
  29:Src/thermistor.cpp ****     float normalized_voltage = voltage / adc_ref_voltage;
ARM GAS  /tmp/ccQFOIc1.s 			page 2


  30:Src/thermistor.cpp ****     temperature_ = horner_fma(normalized_voltage, coefficients_, num_coeffs_);
  31:Src/thermistor.cpp ****     temperature_int_ = (int32_t)temperature_;
  32:Src/thermistor.cpp ****     voltage = get_adc_voltage_channel(15);
  33:Src/thermistor.cpp ****     normalized_voltage = voltage / adc_ref_voltage;
  34:Src/thermistor.cpp ****     aux_temperature_ = horner_fma(normalized_voltage, aux_coefficients_, num_coeffs_);
  35:Src/thermistor.cpp ****     aux_temperature_int_ = (int32_t)aux_temperature_;
  36:Src/thermistor.cpp **** 
  37:Src/thermistor.cpp **** }
  38:Src/thermistor.cpp **** 
  39:Src/thermistor.cpp **** bool ThermistorCurrentLimiter::do_checks() {
  40:Src/thermistor.cpp ****     if (enabled_ && ( (temperature_ >= temp_limit_upper_ + 1 ) ||  (aux_temperature_ >= temp_limit_
  41:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
  42:Src/thermistor.cpp ****         // Properly cast error flags when combining
  43:Src/thermistor.cpp ****         axis_->error_ = static_cast<Axis::Error>(
  44:Src/thermistor.cpp ****             static_cast<uint32_t>(axis_->error_) | 
  45:Src/thermistor.cpp ****             static_cast<uint32_t>(Axis::ERROR_OVER_TEMP)
  46:Src/thermistor.cpp ****         );
  47:Src/thermistor.cpp ****                 
  48:Src/thermistor.cpp ****         axis_->axis_state_.erro = Axis::ENCOS_ERRO::ENCOS_ERROR_OVER_TEMP;
  49:Src/thermistor.cpp ****         return false;
  50:Src/thermistor.cpp ****     }
  51:Src/thermistor.cpp ****     return true;
  52:Src/thermistor.cpp **** }
  53:Src/thermistor.cpp **** 
  54:Src/thermistor.cpp **** float ThermistorCurrentLimiter::get_current_limit(float base_current_lim) const {
  30              		.loc 1 54 81 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  55:Src/thermistor.cpp ****     if (!enabled_) {
  35              		.loc 1 55 5 view .LVU1
  36              		.loc 1 55 10 is_stmt 0 view .LVU2
  37 0000 C36A     		ldr	r3, [r0, #44]
  38              		.loc 1 55 5 view .LVU3
  39 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  40 0004 43B3     		cbz	r3, .L2
  56:Src/thermistor.cpp ****         return base_current_lim;
  57:Src/thermistor.cpp ****     }
  58:Src/thermistor.cpp **** 
  59:Src/thermistor.cpp ****     float aux_temp_margin = temp_limit_upper_ - aux_temperature_;
  41              		.loc 1 59 5 is_stmt 1 view .LVU4
  42              		.loc 1 59 29 is_stmt 0 view .LVU5
  43 0006 836A     		ldr	r3, [r0, #40]
  44 0008 93ED007A 		vldr.32	s14, [r3]
  45              		.loc 1 59 47 view .LVU6
  46 000c D0ED076A 		vldr.32	s13, [r0, #28]
  47 0010 77EE666A 		vsub.f32	s13, s14, s13
  48              	.LVL1:
  60:Src/thermistor.cpp ****     float fet_temp_margin = temp_limit_upper_ - temperature_;
  49              		.loc 1 60 5 is_stmt 1 view .LVU7
  50              		.loc 1 60 47 is_stmt 0 view .LVU8
  51 0014 D0ED057A 		vldr.32	s15, [r0, #20]
  52 0018 77EE677A 		vsub.f32	s15, s14, s15
  53              	.LVL2:
  61:Src/thermistor.cpp ****     float temp_margin = std::min(aux_temp_margin, fet_temp_margin);
  54              		.loc 1 61 5 is_stmt 1 view .LVU9
ARM GAS  /tmp/ccQFOIc1.s 			page 3


  55              	.LBB41:
  56              	.LBI41:
  57              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_a
   1:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
   3:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** //
   5:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // any later version.
  10:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  11:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  16:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  20:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  25:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** /*
  26:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *
  27:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *
  30:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *
  38:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *
  39:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *
  42:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  */
  50:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  51:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****  */
ARM GAS  /tmp/ccQFOIc1.s 			page 4


  55:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  56:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  59:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #endif
  75:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** # include <compare>
  77:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #endif
  78:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  79:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** {
  81:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
  83:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   /*
  84:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    */
  87:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     inline int
  90:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
  92:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #endif
  95:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	{
  98:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  return 0;
 102:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	}
 103:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       else
 104:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #endif
 105:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     }
 107:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 108:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
ARM GAS  /tmp/ccQFOIc1.s 			page 5


 112:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
 115:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	static void
 117:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	{
 119:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	}
 125:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     };
 126:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 127:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   template<>
 128:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
 130:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	static void
 132:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	{
 134:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	}
 136:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     };
 137:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #endif // C++03
 138:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 139:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   /**
 140:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *
 146:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   */
 149:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     inline void
 152:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
 154:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       // concept requirements
 155:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 160:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 166:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
ARM GAS  /tmp/ccQFOIc1.s 			page 6


 169:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 171:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #else
 180:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** #endif
 184:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     }
 185:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 186:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   /**
 187:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *
 194:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   */
 198:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
 204:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       // concept requirements
 205:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 211:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       return __first2;
 214:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     }
 215:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 
 216:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   /**
 217:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *
 223:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
ARM GAS  /tmp/ccQFOIc1.s 			page 7


 226:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   */
 227:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
  58              		.loc 2 230 5 view .LVU10
  59              	.LBB42:
 231:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
 232:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       // concept requirements
 233:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h **** 	return __b;
 237:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****       return __a;
  60              		.loc 2 237 14 is_stmt 0 view .LVU11
  61 001c F4EEE76A 		vcmpe.f32	s13, s15
  62 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  63 0024 D8BF     		it	le
  64 0026 F0EE667A 		vmovle.f32	s15, s13
  65              	.LVL3:
  66              		.loc 2 237 14 view .LVU12
  67              	.LBE42:
  68              	.LBE41:
  62:Src/thermistor.cpp ****     const float derating_range = temp_limit_upper_ - temp_limit_lower_;
  69              		.loc 1 62 5 is_stmt 1 view .LVU13
  63:Src/thermistor.cpp ****     float thermal_current_lim = base_current_lim * (temp_margin / derating_range);
  70              		.loc 1 63 5 view .LVU14
  62:Src/thermistor.cpp ****     const float derating_range = temp_limit_upper_ - temp_limit_lower_;
  71              		.loc 1 62 54 is_stmt 0 view .LVU15
  72 002a 436A     		ldr	r3, [r0, #36]
  62:Src/thermistor.cpp ****     const float derating_range = temp_limit_upper_ - temp_limit_lower_;
  73              		.loc 1 62 17 view .LVU16
  74 002c D3ED006A 		vldr.32	s13, [r3]
  75              	.LVL4:
  62:Src/thermistor.cpp ****     const float derating_range = temp_limit_upper_ - temp_limit_lower_;
  76              		.loc 1 62 17 view .LVU17
  77 0030 77EE666A 		vsub.f32	s13, s14, s13
  78              	.LVL5:
  79              		.loc 1 63 65 view .LVU18
  80 0034 87EEA67A 		vdiv.f32	s14, s15, s13
  81              	.LVL6:
  82              		.loc 1 63 50 view .LVU19
  83 0038 67EE007A 		vmul.f32	s15, s14, s0
  84              	.LVL7:
  64:Src/thermistor.cpp ****     if (!(thermal_current_lim >= 0.0f)) { // Funny polarity to also catch NaN
  85              		.loc 1 64 5 is_stmt 1 view .LVU20
  86 003c F5EEC07A 		vcmpe.f32	s15, #0
  87 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  65:Src/thermistor.cpp ****         thermal_current_lim = 0.0f;
  88              		.loc 1 65 29 is_stmt 0 view .LVU21
  89 0044 B8BF     		it	lt
  90 0046 DFED057A 		vldrlt.32	s15, .L5
  91              	.LVL8:
  66:Src/thermistor.cpp ****     }
  67:Src/thermistor.cpp **** 
  68:Src/thermistor.cpp ****     return std::min(thermal_current_lim, base_current_lim);
  92              		.loc 1 68 5 is_stmt 1 view .LVU22
ARM GAS  /tmp/ccQFOIc1.s 			page 8


  93              	.LBB43:
  94              	.LBI43:
 230:/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h ****     {
  95              		.loc 2 230 5 view .LVU23
  96              	.LBB44:
  97              		.loc 2 237 14 is_stmt 0 view .LVU24
  98 004a F4EEC07A 		vcmpe.f32	s15, s0
  99 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 100 0052 D8BF     		it	le
 101 0054 B0EE670A 		vmovle.f32	s0, s15
 102              	.LVL9:
 103              	.L2:
 104              		.loc 2 237 14 view .LVU25
 105              	.LBE44:
 106              	.LBE43:
  69:Src/thermistor.cpp **** }
 107              		.loc 1 69 1 view .LVU26
 108 0058 7047     		bx	lr
 109              	.L6:
 110 005a 00BF     		.align	2
 111              	.L5:
 112 005c 00000000 		.word	0
 113              		.cfi_endproc
 114              	.LFE4943:
 116              		.section	.text._ZN24ThermistorCurrentLimiterD2Ev,"axG",%progbits,_ZN24ThermistorCurrentLimiterD5Ev
 117              		.align	1
 118              		.weak	_ZN24ThermistorCurrentLimiterD2Ev
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	_ZN24ThermistorCurrentLimiterD2Ev:
 125              	.LVL10:
 126              	.LFB4947:
 127              		.file 3 "Inc/thermistor.hpp"
   1:Inc/thermistor.hpp **** #ifndef __THERMISTOR_HPP
   2:Inc/thermistor.hpp **** #define __THERMISTOR_HPP
   3:Inc/thermistor.hpp **** 
   4:Inc/thermistor.hpp **** #include "main.h"
   5:Inc/thermistor.hpp **** #include "interfaces.hpp"
   6:Inc/thermistor.hpp **** #include "current_limiter.hpp"
   7:Inc/thermistor.hpp **** 
   8:Inc/thermistor.hpp **** #define THERMISTOR_CURRENT_LIMITER_MAX_TEMP 150.0f
   9:Inc/thermistor.hpp **** #define THERMISTOR_CURRENT_LIMITER_MIN_TEMP -40.0f
  10:Inc/thermistor.hpp **** 
  11:Inc/thermistor.hpp **** #define THERMISTOR_CURRENT_LIMITER_MAX_CURRENT 3.0f
  12:Inc/thermistor.hpp **** 
  13:Inc/thermistor.hpp **** class Axis;
  14:Inc/thermistor.hpp **** 
  15:Inc/thermistor.hpp **** 
  16:Inc/thermistor.hpp **** class ThermistorCurrentLimiter : public CurrentLimiter, public ODriveIntf::ThermistorCurrentLimiter
  17:Inc/thermistor.hpp **** public:
  18:Inc/thermistor.hpp ****     virtual ~ThermistorCurrentLimiter() = default;
 128              		.loc 3 18 13 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQFOIc1.s 			page 9


 132              		@ link register save eliminated.
 133              	.LBB45:
 134              	.LBI45:
 135              		.file 4 "Inc/current_limiter.hpp"
   1:Inc/current_limiter.hpp **** #ifndef __CURRENT_LIMITER_HPP
   2:Inc/current_limiter.hpp **** #define __CURRENT_LIMITER_HPP
   3:Inc/current_limiter.hpp **** 
   4:Inc/current_limiter.hpp **** 
   5:Inc/current_limiter.hpp **** 
   6:Inc/current_limiter.hpp **** class CurrentLimiter {
   7:Inc/current_limiter.hpp **** public:
   8:Inc/current_limiter.hpp ****     virtual ~CurrentLimiter() = default;
 136              		.loc 4 8 13 view .LVU28
 137              		.loc 4 8 13 is_stmt 0 view .LVU29
 138              	.LBE45:
 139              		.loc 3 18 13 view .LVU30
 140 0000 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE4947:
 144              		.weak	_ZN24ThermistorCurrentLimiterD1Ev
 145              		.thumb_set _ZN24ThermistorCurrentLimiterD1Ev,_ZN24ThermistorCurrentLimiterD2Ev
 146              		.section	.text._ZN32OffboardThermistorCurrentLimiterD2Ev,"axG",%progbits,_ZN32OffboardThermistorCu
 147              		.align	1
 148              		.weak	_ZN32OffboardThermistorCurrentLimiterD2Ev
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	_ZN32OffboardThermistorCurrentLimiterD2Ev:
 155              	.LVL11:
 156              	.LFB5106:
  19:Inc/thermistor.hpp **** 
  20:Inc/thermistor.hpp ****     ThermistorCurrentLimiter(uint16_t adc_channel,
  21:Inc/thermistor.hpp ****                              const float* const coefficients,
  22:Inc/thermistor.hpp ****                              const float* const aux_coefficients,
  23:Inc/thermistor.hpp ****                              size_t num_coeffs,
  24:Inc/thermistor.hpp ****                              const float& temp_limit_lower,
  25:Inc/thermistor.hpp ****                              const float& temp_limit_upper,
  26:Inc/thermistor.hpp ****                              const bool& enabled);
  27:Inc/thermistor.hpp **** 
  28:Inc/thermistor.hpp ****     void update();
  29:Inc/thermistor.hpp ****     bool do_checks();
  30:Inc/thermistor.hpp ****     float get_current_limit(float base_current_lim) const override;
  31:Inc/thermistor.hpp **** 
  32:Inc/thermistor.hpp ****     uint16_t adc_channel_;
  33:Inc/thermistor.hpp ****     const float* const coefficients_;
  34:Inc/thermistor.hpp ****     const float* const aux_coefficients_;
  35:Inc/thermistor.hpp ****     const size_t num_coeffs_;
  36:Inc/thermistor.hpp ****     float temperature_;
  37:Inc/thermistor.hpp ****     int32_t temperature_int_;
  38:Inc/thermistor.hpp ****     float aux_temperature_;
  39:Inc/thermistor.hpp ****     int32_t aux_temperature_int_;
  40:Inc/thermistor.hpp ****     const float& temp_limit_lower_;
  41:Inc/thermistor.hpp ****     const float& temp_limit_upper_;
  42:Inc/thermistor.hpp ****     const bool& enabled_;
  43:Inc/thermistor.hpp ****     Error error_;
  44:Inc/thermistor.hpp ****     Axis* axis_ = nullptr; // set by Axis constructor
ARM GAS  /tmp/ccQFOIc1.s 			page 10


  45:Inc/thermistor.hpp **** };
  46:Inc/thermistor.hpp **** 
  47:Inc/thermistor.hpp **** class OnboardThermistorCurrentLimiter : public ThermistorCurrentLimiter, public ODriveIntf::Onboard
  48:Inc/thermistor.hpp **** public:
  49:Inc/thermistor.hpp ****     struct Config_t {
  50:Inc/thermistor.hpp ****         float temp_limit_lower = 100;
  51:Inc/thermistor.hpp ****         float temp_limit_upper = 120;
  52:Inc/thermistor.hpp ****         bool enabled = true;
  53:Inc/thermistor.hpp ****     };
  54:Inc/thermistor.hpp **** 
  55:Inc/thermistor.hpp ****     virtual ~OnboardThermistorCurrentLimiter() = default;
  56:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
  57:Inc/thermistor.hpp **** 
  58:Inc/thermistor.hpp ****     Config_t& config_;
  59:Inc/thermistor.hpp **** };
  60:Inc/thermistor.hpp **** 
  61:Inc/thermistor.hpp **** class OffboardThermistorCurrentLimiter : public ThermistorCurrentLimiter, public ODriveIntf::Offboa
  62:Inc/thermistor.hpp **** public:
  63:Inc/thermistor.hpp ****     static const size_t num_coeffs_ = 4;
  64:Inc/thermistor.hpp **** 
  65:Inc/thermistor.hpp ****     struct Config_t {
  66:Inc/thermistor.hpp ****         float thermistor_poly_coeffs[num_coeffs_];
  67:Inc/thermistor.hpp ****         float thermistor_poly_coeffs2[num_coeffs_];
  68:Inc/thermistor.hpp ****         uint16_t gpio_pin = 4;
  69:Inc/thermistor.hpp ****         float temp_limit_lower = 60;
  70:Inc/thermistor.hpp ****         float temp_limit_upper = 80;
  71:Inc/thermistor.hpp ****         bool enabled = true;
  72:Inc/thermistor.hpp **** 
  73:Inc/thermistor.hpp ****         // custom setters
  74:Inc/thermistor.hpp ****         OffboardThermistorCurrentLimiter* parent;
  75:Inc/thermistor.hpp ****         void set_gpio_pin(uint16_t value) { gpio_pin = value; parent->decode_pin(); }
  76:Inc/thermistor.hpp ****     };
  77:Inc/thermistor.hpp **** 
  78:Inc/thermistor.hpp ****     virtual ~OffboardThermistorCurrentLimiter() = default;
 157              		.loc 3 78 13 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LBB46:
 163              	.LBI46:
  18:Inc/thermistor.hpp **** 
 164              		.loc 3 18 13 view .LVU32
 165              	.LBB47:
 166              	.LBI47:
 167              		.loc 4 8 13 view .LVU33
 168              		.loc 4 8 13 is_stmt 0 view .LVU34
 169              	.LBE47:
 170              	.LBE46:
 171              		.loc 3 78 13 view .LVU35
 172 0000 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE5106:
 176              		.weak	_ZN32OffboardThermistorCurrentLimiterD1Ev
 177              		.thumb_set _ZN32OffboardThermistorCurrentLimiterD1Ev,_ZN32OffboardThermistorCurrentLimiterD2Ev
 178              		.section	.text._ZN31OnboardThermistorCurrentLimiterD2Ev,"axG",%progbits,_ZN31OnboardThermistorCurr
 179              		.align	1
ARM GAS  /tmp/ccQFOIc1.s 			page 11


 180              		.weak	_ZN31OnboardThermistorCurrentLimiterD2Ev
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	_ZN31OnboardThermistorCurrentLimiterD2Ev:
 187              	.LVL12:
 188              	.LFB5110:
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 189              		.loc 3 55 13 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LBB48:
 195              	.LBI48:
  18:Inc/thermistor.hpp **** 
 196              		.loc 3 18 13 view .LVU37
 197              	.LBB49:
 198              	.LBI49:
 199              		.loc 4 8 13 view .LVU38
 200              		.loc 4 8 13 is_stmt 0 view .LVU39
 201              	.LBE49:
 202              	.LBE48:
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 203              		.loc 3 55 13 view .LVU40
 204 0000 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE5110:
 208              		.weak	_ZN31OnboardThermistorCurrentLimiterD1Ev
 209              		.thumb_set _ZN31OnboardThermistorCurrentLimiterD1Ev,_ZN31OnboardThermistorCurrentLimiterD2Ev
 210              		.section	.text._ZN24ThermistorCurrentLimiterD0Ev,"axG",%progbits,_ZN24ThermistorCurrentLimiterD5Ev
 211              		.align	1
 212              		.weak	_ZN24ThermistorCurrentLimiterD0Ev
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	_ZN24ThermistorCurrentLimiterD0Ev:
 219              	.LVL13:
 220              	.LFB4949:
  18:Inc/thermistor.hpp **** 
 221              		.loc 3 18 13 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
  18:Inc/thermistor.hpp **** 
 225              		.loc 3 18 13 is_stmt 0 view .LVU42
 226 0000 10B5     		push	{r4, lr}
 227              	.LCFI0:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 14, -4
 231 0002 0446     		mov	r4, r0
 232              	.LVL14:
 233              	.LBB50:
 234              	.LBI50:
ARM GAS  /tmp/ccQFOIc1.s 			page 12


  18:Inc/thermistor.hpp **** 
 235              		.loc 3 18 13 is_stmt 1 view .LVU43
 236              	.LBB51:
 237              	.LBI51:
 238              		.loc 4 8 13 view .LVU44
 239              		.loc 4 8 13 is_stmt 0 view .LVU45
 240              	.LBE51:
 241              	.LBE50:
  18:Inc/thermistor.hpp **** 
 242              		.loc 3 18 13 view .LVU46
 243 0004 FFF7FEFF 		bl	_ZdlPv
 244              	.LVL15:
  18:Inc/thermistor.hpp **** 
 245              		.loc 3 18 13 view .LVU47
 246 0008 2046     		mov	r0, r4
 247 000a 10BD     		pop	{r4, pc}
  18:Inc/thermistor.hpp **** 
 248              		.loc 3 18 13 view .LVU48
 249              		.cfi_endproc
 250              	.LFE4949:
 252              		.section	.text._ZN31OnboardThermistorCurrentLimiterD0Ev,"axG",%progbits,_ZN31OnboardThermistorCurr
 253              		.align	1
 254              		.weak	_ZN31OnboardThermistorCurrentLimiterD0Ev
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	_ZN31OnboardThermistorCurrentLimiterD0Ev:
 261              	.LVL16:
 262              	.LFB5112:
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 263              		.loc 3 55 13 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 267              		.loc 3 55 13 is_stmt 0 view .LVU50
 268 0000 10B5     		push	{r4, lr}
 269              	.LCFI1:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 273 0002 0446     		mov	r4, r0
 274              	.LVL17:
 275              	.LBB52:
 276              	.LBI52:
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 277              		.loc 3 55 13 is_stmt 1 view .LVU51
 278              	.LBB53:
 279              	.LBI53:
  18:Inc/thermistor.hpp **** 
 280              		.loc 3 18 13 view .LVU52
 281              	.LBB54:
 282              	.LBI54:
 283              		.loc 4 8 13 view .LVU53
 284              		.loc 4 8 13 is_stmt 0 view .LVU54
 285              	.LBE54:
ARM GAS  /tmp/ccQFOIc1.s 			page 13


 286              	.LBE53:
 287              	.LBE52:
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 288              		.loc 3 55 13 view .LVU55
 289 0004 FFF7FEFF 		bl	_ZdlPv
 290              	.LVL18:
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 291              		.loc 3 55 13 view .LVU56
 292 0008 2046     		mov	r0, r4
 293 000a 10BD     		pop	{r4, pc}
  55:Inc/thermistor.hpp ****     OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& hw_config, Config_t& config);
 294              		.loc 3 55 13 view .LVU57
 295              		.cfi_endproc
 296              	.LFE5112:
 298              		.section	.text._ZN32OffboardThermistorCurrentLimiterD0Ev,"axG",%progbits,_ZN32OffboardThermistorCu
 299              		.align	1
 300              		.weak	_ZN32OffboardThermistorCurrentLimiterD0Ev
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	_ZN32OffboardThermistorCurrentLimiterD0Ev:
 307              	.LVL19:
 308              	.LFB5108:
 309              		.loc 3 78 13 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		.loc 3 78 13 is_stmt 0 view .LVU59
 314 0000 10B5     		push	{r4, lr}
 315              	.LCFI2:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 319 0002 0446     		mov	r4, r0
 320              	.LVL20:
 321              	.LBB55:
 322              	.LBI55:
 323              		.loc 3 78 13 is_stmt 1 view .LVU60
 324              	.LBB56:
 325              	.LBI56:
  18:Inc/thermistor.hpp **** 
 326              		.loc 3 18 13 view .LVU61
 327              	.LBB57:
 328              	.LBI57:
 329              		.loc 4 8 13 view .LVU62
 330              		.loc 4 8 13 is_stmt 0 view .LVU63
 331              	.LBE57:
 332              	.LBE56:
 333              	.LBE55:
 334              		.loc 3 78 13 view .LVU64
 335 0004 FFF7FEFF 		bl	_ZdlPv
 336              	.LVL21:
 337              		.loc 3 78 13 view .LVU65
 338 0008 2046     		mov	r0, r4
 339 000a 10BD     		pop	{r4, pc}
 340              		.loc 3 78 13 view .LVU66
ARM GAS  /tmp/ccQFOIc1.s 			page 14


 341              		.cfi_endproc
 342              	.LFE5108:
 344              		.section	.text._ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb,"ax",%progbits
 345              		.align	1
 346              		.global	_ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	_ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb:
 353              	.LVL22:
 354              	.LFB4939:
   8:Src/thermistor.cpp ****                                                    const float* const coefficients,
 355              		.loc 1 8 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 16, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
   8:Src/thermistor.cpp ****                                                    const float* const coefficients,
 360              		.loc 1 8 1 is_stmt 0 view .LVU68
 361 0000 10B4     		push	{r4}
 362              	.LCFI3:
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 4, -4
 365              	.LVL23:
 366              	.LBB58:
 367              	.LBB59:
 368              	.LBI59:
   6:Inc/current_limiter.hpp **** public:
 369              		.loc 4 6 7 is_stmt 1 view .LVU69
   6:Inc/current_limiter.hpp **** public:
 370              		.loc 4 6 7 is_stmt 0 view .LVU70
 371              	.LBE59:
  23:Src/thermistor.cpp **** {
 372              		.loc 1 23 22 view .LVU71
 373 0002 0B4C     		ldr	r4, .L18
 374 0004 0460     		str	r4, [r0]
 375 0006 8180     		strh	r1, [r0, #4]	@ movhi
 376 0008 8260     		str	r2, [r0, #8]
 377 000a C360     		str	r3, [r0, #12]
 378 000c 019B     		ldr	r3, [sp, #4]
 379              	.LVL24:
  23:Src/thermistor.cpp **** {
 380              		.loc 1 23 22 view .LVU72
 381 000e 0361     		str	r3, [r0, #16]
 382 0010 084B     		ldr	r3, .L18+4
 383 0012 4361     		str	r3, [r0, #20]	@ float
 384 0014 029B     		ldr	r3, [sp, #8]
 385 0016 4362     		str	r3, [r0, #36]
 386 0018 039B     		ldr	r3, [sp, #12]
 387 001a 8362     		str	r3, [r0, #40]
 388 001c 049B     		ldr	r3, [sp, #16]
 389 001e C362     		str	r3, [r0, #44]
 390 0020 0023     		movs	r3, #0
 391 0022 80F83030 		strb	r3, [r0, #48]
 392 0026 4363     		str	r3, [r0, #52]
 393              	.LBE58:
ARM GAS  /tmp/ccQFOIc1.s 			page 15


  25:Src/thermistor.cpp **** 
 394              		.loc 1 25 1 view .LVU73
 395 0028 5DF8044B 		ldr	r4, [sp], #4
 396              	.LCFI4:
 397              		.cfi_restore 4
 398              		.cfi_def_cfa_offset 0
 399              	.LVL25:
  25:Src/thermistor.cpp **** 
 400              		.loc 1 25 1 view .LVU74
 401 002c 7047     		bx	lr
 402              	.L19:
 403 002e 00BF     		.align	2
 404              	.L18:
 405 0030 08000000 		.word	.LANCHOR0+8
 406 0034 0000C07F 		.word	2143289344
 407              		.cfi_endproc
 408              	.LFE4939:
 410              		.global	_ZN24ThermistorCurrentLimiterC1EtPKfS1_jRS0_S2_RKb
 411              		.thumb_set _ZN24ThermistorCurrentLimiterC1EtPKfS1_jRS0_S2_RKb,_ZN24ThermistorCurrentLimiterC2EtPKf
 412              		.section	.text._ZN24ThermistorCurrentLimiter6updateEv,"ax",%progbits
 413              		.align	1
 414              		.global	_ZN24ThermistorCurrentLimiter6updateEv
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	_ZN24ThermistorCurrentLimiter6updateEv:
 421              	.LVL26:
 422              	.LFB4941:
  27:Src/thermistor.cpp ****     float voltage = get_adc_voltage_channel(14);
 423              		.loc 1 27 41 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
  27:Src/thermistor.cpp ****     float voltage = get_adc_voltage_channel(14);
 427              		.loc 1 27 41 is_stmt 0 view .LVU76
 428 0000 10B5     		push	{r4, lr}
 429              	.LCFI5:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 4, -8
 432              		.cfi_offset 14, -4
 433 0002 2DED028B 		vpush.64	{d8}
 434              	.LCFI6:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 80, -16
 437              		.cfi_offset 81, -12
 438 0006 0446     		mov	r4, r0
  28:Src/thermistor.cpp ****     float normalized_voltage = voltage / adc_ref_voltage;
 439              		.loc 1 28 5 is_stmt 1 view .LVU77
  28:Src/thermistor.cpp ****     float normalized_voltage = voltage / adc_ref_voltage;
 440              		.loc 1 28 44 is_stmt 0 view .LVU78
 441 0008 0E20     		movs	r0, #14
 442              	.LVL27:
  28:Src/thermistor.cpp ****     float normalized_voltage = voltage / adc_ref_voltage;
 443              		.loc 1 28 44 view .LVU79
 444 000a FFF7FEFF 		bl	get_adc_voltage_channel
 445              	.LVL28:
ARM GAS  /tmp/ccQFOIc1.s 			page 16


  29:Src/thermistor.cpp ****     temperature_ = horner_fma(normalized_voltage, coefficients_, num_coeffs_);
 446              		.loc 1 29 5 is_stmt 1 view .LVU80
  29:Src/thermistor.cpp ****     temperature_ = horner_fma(normalized_voltage, coefficients_, num_coeffs_);
 447              		.loc 1 29 42 is_stmt 0 view .LVU81
 448 000e 104B     		ldr	r3, .L22
 449 0010 93ED008A 		vldr.32	s16, [r3]
 450              	.LVL29:
  30:Src/thermistor.cpp ****     temperature_int_ = (int32_t)temperature_;
 451              		.loc 1 30 5 is_stmt 1 view .LVU82
  30:Src/thermistor.cpp ****     temperature_int_ = (int32_t)temperature_;
 452              		.loc 1 30 30 is_stmt 0 view .LVU83
 453 0014 2169     		ldr	r1, [r4, #16]
 454 0016 A068     		ldr	r0, [r4, #8]
 455 0018 80EE080A 		vdiv.f32	s0, s0, s16
 456              	.LVL30:
  30:Src/thermistor.cpp ****     temperature_int_ = (int32_t)temperature_;
 457              		.loc 1 30 30 view .LVU84
 458 001c FFF7FEFF 		bl	horner_fma
 459              	.LVL31:
  30:Src/thermistor.cpp ****     temperature_int_ = (int32_t)temperature_;
 460              		.loc 1 30 18 view .LVU85
 461 0020 84ED050A 		vstr.32	s0, [r4, #20]
  31:Src/thermistor.cpp ****     voltage = get_adc_voltage_channel(15);
 462              		.loc 1 31 5 is_stmt 1 view .LVU86
  31:Src/thermistor.cpp ****     voltage = get_adc_voltage_channel(15);
 463              		.loc 1 31 24 is_stmt 0 view .LVU87
 464 0024 BDEEC00A 		vcvt.s32.f32	s0, s0
 465 0028 84ED060A 		vstr.32	s0, [r4, #24]	@ int
  32:Src/thermistor.cpp ****     normalized_voltage = voltage / adc_ref_voltage;
 466              		.loc 1 32 5 is_stmt 1 view .LVU88
  32:Src/thermistor.cpp ****     normalized_voltage = voltage / adc_ref_voltage;
 467              		.loc 1 32 38 is_stmt 0 view .LVU89
 468 002c 0F20     		movs	r0, #15
 469 002e FFF7FEFF 		bl	get_adc_voltage_channel
 470              	.LVL32:
  33:Src/thermistor.cpp ****     aux_temperature_ = horner_fma(normalized_voltage, aux_coefficients_, num_coeffs_);
 471              		.loc 1 33 5 is_stmt 1 view .LVU90
  34:Src/thermistor.cpp ****     aux_temperature_int_ = (int32_t)aux_temperature_;
 472              		.loc 1 34 5 view .LVU91
  34:Src/thermistor.cpp ****     aux_temperature_int_ = (int32_t)aux_temperature_;
 473              		.loc 1 34 34 is_stmt 0 view .LVU92
 474 0032 2169     		ldr	r1, [r4, #16]
 475 0034 E068     		ldr	r0, [r4, #12]
 476 0036 80EE080A 		vdiv.f32	s0, s0, s16
 477              	.LVL33:
  34:Src/thermistor.cpp ****     aux_temperature_int_ = (int32_t)aux_temperature_;
 478              		.loc 1 34 34 view .LVU93
 479 003a FFF7FEFF 		bl	horner_fma
 480              	.LVL34:
  34:Src/thermistor.cpp ****     aux_temperature_int_ = (int32_t)aux_temperature_;
 481              		.loc 1 34 22 view .LVU94
 482 003e 84ED070A 		vstr.32	s0, [r4, #28]
  35:Src/thermistor.cpp **** 
 483              		.loc 1 35 5 is_stmt 1 view .LVU95
  35:Src/thermistor.cpp **** 
 484              		.loc 1 35 28 is_stmt 0 view .LVU96
 485 0042 BDEEC00A 		vcvt.s32.f32	s0, s0
ARM GAS  /tmp/ccQFOIc1.s 			page 17


 486 0046 84ED080A 		vstr.32	s0, [r4, #32]	@ int
  37:Src/thermistor.cpp **** 
 487              		.loc 1 37 1 view .LVU97
 488 004a BDEC028B 		vldm	sp!, {d8}
 489              	.LCFI7:
 490              		.cfi_restore 80
 491              		.cfi_restore 81
 492              		.cfi_def_cfa_offset 8
 493 004e 10BD     		pop	{r4, pc}
 494              	.LVL35:
 495              	.L23:
  37:Src/thermistor.cpp **** 
 496              		.loc 1 37 1 view .LVU98
 497              		.align	2
 498              	.L22:
 499 0050 00000000 		.word	adc_ref_voltage
 500              		.cfi_endproc
 501              	.LFE4941:
 503              		.section	.text._ZN24ThermistorCurrentLimiter9do_checksEv,"ax",%progbits
 504              		.align	1
 505              		.global	_ZN24ThermistorCurrentLimiter9do_checksEv
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv4-sp-d16
 511              	_ZN24ThermistorCurrentLimiter9do_checksEv:
 512              	.LVL36:
 513              	.LFB4942:
  39:Src/thermistor.cpp ****     if (enabled_ && ( (temperature_ >= temp_limit_upper_ + 1 ) ||  (aux_temperature_ >= temp_limit_
 514              		.loc 1 39 44 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
  39:Src/thermistor.cpp ****     if (enabled_ && ( (temperature_ >= temp_limit_upper_ + 1 ) ||  (aux_temperature_ >= temp_limit_
 519              		.loc 1 39 44 is_stmt 0 view .LVU100
 520 0000 0346     		mov	r3, r0
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 521              		.loc 1 40 5 is_stmt 1 view .LVU101
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 522              		.loc 1 40 9 is_stmt 0 view .LVU102
 523 0002 C26A     		ldr	r2, [r0, #44]
 524 0004 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 525              	.LVL37:
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 526              		.loc 1 40 5 view .LVU103
 527 0006 18B3     		cbz	r0, .L28
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 528              		.loc 1 40 40 discriminator 1 view .LVU104
 529 0008 9A6A     		ldr	r2, [r3, #40]
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 530              		.loc 1 40 58 discriminator 1 view .LVU105
 531 000a D2ED007A 		vldr.32	s15, [r2]
 532 000e B7EE007A 		vmov.f32	s14, #1.0e+0
 533 0012 77EE877A 		vadd.f32	s15, s15, s14
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 534              		.loc 1 40 18 discriminator 1 view .LVU106
ARM GAS  /tmp/ccQFOIc1.s 			page 18


 535 0016 93ED057A 		vldr.32	s14, [r3, #20]
 536 001a B4EEE77A 		vcmpe.f32	s14, s15
 537 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 538 0022 06DA     		bge	.L26
  40:Src/thermistor.cpp ****         error_ = ERROR_OVER_TEMP;
 539              		.loc 1 40 64 discriminator 2 view .LVU107
 540 0024 93ED077A 		vldr.32	s14, [r3, #28]
 541 0028 F4EEC77A 		vcmpe.f32	s15, s14
 542 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 543 0030 0FD8     		bhi	.L25
 544              	.L26:
  41:Src/thermistor.cpp ****         // Properly cast error flags when combining
 545              		.loc 1 41 9 is_stmt 1 view .LVU108
  41:Src/thermistor.cpp ****         // Properly cast error flags when combining
 546              		.loc 1 41 16 is_stmt 0 view .LVU109
 547 0032 0121     		movs	r1, #1
 548 0034 83F83010 		strb	r1, [r3, #48]
  43:Src/thermistor.cpp ****             static_cast<uint32_t>(axis_->error_) | 
 549              		.loc 1 43 9 is_stmt 1 view .LVU110
  44:Src/thermistor.cpp ****             static_cast<uint32_t>(Axis::ERROR_OVER_TEMP)
 550              		.loc 1 44 35 is_stmt 0 view .LVU111
 551 0038 586B     		ldr	r0, [r3, #52]
  44:Src/thermistor.cpp ****             static_cast<uint32_t>(Axis::ERROR_OVER_TEMP)
 552              		.loc 1 44 50 view .LVU112
 553 003a D0F85C21 		ldr	r2, [r0, #348]
 554 003e 42F48022 		orr	r2, r2, #262144
  43:Src/thermistor.cpp ****             static_cast<uint32_t>(axis_->error_) | 
 555              		.loc 1 43 23 view .LVU113
 556 0042 C0F85C21 		str	r2, [r0, #348]
  48:Src/thermistor.cpp ****         return false;
 557              		.loc 1 48 9 is_stmt 1 view .LVU114
 558 0046 5B6B     		ldr	r3, [r3, #52]
 559              	.LVL38:
  48:Src/thermistor.cpp ****         return false;
 560              		.loc 1 48 33 is_stmt 0 view .LVU115
 561 0048 83F89611 		strb	r1, [r3, #406]
  49:Src/thermistor.cpp ****     }
 562              		.loc 1 49 9 is_stmt 1 view .LVU116
  49:Src/thermistor.cpp ****     }
 563              		.loc 1 49 16 is_stmt 0 view .LVU117
 564 004c 0020     		movs	r0, #0
 565 004e 7047     		bx	lr
 566              	.LVL39:
 567              	.L28:
  51:Src/thermistor.cpp **** }
 568              		.loc 1 51 12 view .LVU118
 569 0050 0120     		movs	r0, #1
 570              	.L25:
  52:Src/thermistor.cpp **** 
 571              		.loc 1 52 1 view .LVU119
 572 0052 7047     		bx	lr
 573              		.cfi_endproc
 574              	.LFE4942:
 576              		.section	.text._ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE
 577              		.align	1
 578              		.global	_ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE
 579              		.syntax unified
ARM GAS  /tmp/ccQFOIc1.s 			page 19


 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	_ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE:
 585              	.LVL40:
 586              	.LFB4950:
  70:Src/thermistor.cpp **** 
  71:Src/thermistor.cpp **** OnboardThermistorCurrentLimiter::OnboardThermistorCurrentLimiter(const ThermistorHardwareConfig_t& 
 587              		.loc 1 71 1 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		.loc 1 71 1 is_stmt 0 view .LVU121
 592 0000 30B5     		push	{r4, r5, lr}
 593              	.LCFI8:
 594              		.cfi_def_cfa_offset 12
 595              		.cfi_offset 4, -12
 596              		.cfi_offset 5, -8
 597              		.cfi_offset 14, -4
 598 0002 85B0     		sub	sp, sp, #20
 599              	.LCFI9:
 600              		.cfi_def_cfa_offset 32
 601 0004 0546     		mov	r5, r0
 602 0006 1446     		mov	r4, r2
 603              	.LBB60:
  72:Src/thermistor.cpp ****     ThermistorCurrentLimiter(hw_config.adc_ch,
  73:Src/thermistor.cpp ****                              hw_config.coeffs,
  74:Src/thermistor.cpp ****                              hw_config.aux_coefficients,
  75:Src/thermistor.cpp ****                              hw_config.num_coeffs,
  76:Src/thermistor.cpp ****                              config.temp_limit_lower,
  77:Src/thermistor.cpp ****                              config.temp_limit_upper,
  78:Src/thermistor.cpp ****                              config.enabled),
 604              		.loc 1 78 37 view .LVU122
 605 0008 02F10803 		add	r3, r2, #8
  79:Src/thermistor.cpp ****     config_(config)
 606              		.loc 1 79 19 view .LVU123
 607 000c 0393     		str	r3, [sp, #12]
  77:Src/thermistor.cpp ****                              config.enabled),
 608              		.loc 1 77 37 view .LVU124
 609 000e 131D     		adds	r3, r2, #4
 610              		.loc 1 79 19 view .LVU125
 611 0010 0293     		str	r3, [sp, #8]
 612 0012 0192     		str	r2, [sp, #4]
 613 0014 8B68     		ldr	r3, [r1, #8]
 614 0016 0093     		str	r3, [sp]
 615 0018 4B68     		ldr	r3, [r1, #4]
 616 001a 0A68     		ldr	r2, [r1]
 617              	.LVL41:
 618              		.loc 1 79 19 view .LVU126
 619 001c 8989     		ldrh	r1, [r1, #12]
 620              	.LVL42:
 621              		.loc 1 79 19 view .LVU127
 622 001e FFF7FEFF 		bl	_ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb
 623              	.LVL43:
 624              		.loc 1 79 19 view .LVU128
 625 0022 034B     		ldr	r3, .L31
 626 0024 2B60     		str	r3, [r5]
ARM GAS  /tmp/ccQFOIc1.s 			page 20


 627 0026 AC63     		str	r4, [r5, #56]
 628              	.LBE60:
  80:Src/thermistor.cpp **** {
  81:Src/thermistor.cpp **** }
 629              		.loc 1 81 1 view .LVU129
 630 0028 2846     		mov	r0, r5
 631 002a 05B0     		add	sp, sp, #20
 632              	.LCFI10:
 633              		.cfi_def_cfa_offset 12
 634              		@ sp needed
 635 002c 30BD     		pop	{r4, r5, pc}
 636              	.LVL44:
 637              	.L32:
 638              		.loc 1 81 1 view .LVU130
 639 002e 00BF     		.align	2
 640              	.L31:
 641 0030 08000000 		.word	_ZTV31OnboardThermistorCurrentLimiter+8
 642              		.cfi_endproc
 643              	.LFE4950:
 645              		.global	_ZN31OnboardThermistorCurrentLimiterC1ERK26ThermistorHardwareConfig_tRNS_8Config_tE
 646              		.thumb_set _ZN31OnboardThermistorCurrentLimiterC1ERK26ThermistorHardwareConfig_tRNS_8Config_tE,_ZN
 647              		.section	.text._ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE,"ax",%progbits
 648              		.align	1
 649              		.global	_ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu fpv4-sp-d16
 655              	_ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE:
 656              	.LVL45:
 657              	.LFB4953:
  82:Src/thermistor.cpp **** 
  83:Src/thermistor.cpp **** OffboardThermistorCurrentLimiter::OffboardThermistorCurrentLimiter(Config_t& config) :
 658              		.loc 1 83 1 is_stmt 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		.loc 1 83 1 is_stmt 0 view .LVU132
 663 0000 30B5     		push	{r4, r5, lr}
 664              	.LCFI11:
 665              		.cfi_def_cfa_offset 12
 666              		.cfi_offset 4, -12
 667              		.cfi_offset 5, -8
 668              		.cfi_offset 14, -4
 669 0002 85B0     		sub	sp, sp, #20
 670              	.LCFI12:
 671              		.cfi_def_cfa_offset 32
 672 0004 0546     		mov	r5, r0
 673 0006 0C46     		mov	r4, r1
 674              	.LBB61:
  84:Src/thermistor.cpp ****     ThermistorCurrentLimiter(UINT16_MAX,
  85:Src/thermistor.cpp ****                              &config.thermistor_poly_coeffs[0],
  86:Src/thermistor.cpp ****                              &config.thermistor_poly_coeffs2[0],
  87:Src/thermistor.cpp ****                              num_coeffs_,
  88:Src/thermistor.cpp ****                              config.temp_limit_lower,
  89:Src/thermistor.cpp ****                              config.temp_limit_upper,
  90:Src/thermistor.cpp ****                              config.enabled),
ARM GAS  /tmp/ccQFOIc1.s 			page 21


 675              		.loc 1 90 37 view .LVU133
 676 0008 01F12C03 		add	r3, r1, #44
  91:Src/thermistor.cpp ****     config_(config)
 677              		.loc 1 91 19 view .LVU134
 678 000c 0393     		str	r3, [sp, #12]
  89:Src/thermistor.cpp ****                              config.enabled),
 679              		.loc 1 89 37 view .LVU135
 680 000e 01F12803 		add	r3, r1, #40
 681              		.loc 1 91 19 view .LVU136
 682 0012 0293     		str	r3, [sp, #8]
  88:Src/thermistor.cpp ****                              config.temp_limit_upper,
 683              		.loc 1 88 37 view .LVU137
 684 0014 01F12403 		add	r3, r1, #36
 685              		.loc 1 91 19 view .LVU138
 686 0018 0193     		str	r3, [sp, #4]
 687 001a 0423     		movs	r3, #4
 688 001c 0093     		str	r3, [sp]
 689 001e 01F11003 		add	r3, r1, #16
 690 0022 0A46     		mov	r2, r1
 691 0024 4FF6FF71 		movw	r1, #65535
 692              	.LVL46:
 693              		.loc 1 91 19 view .LVU139
 694 0028 FFF7FEFF 		bl	_ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb
 695              	.LVL47:
 696              		.loc 1 91 19 view .LVU140
 697 002c 024B     		ldr	r3, .L35
 698 002e 2B60     		str	r3, [r5]
 699 0030 AC63     		str	r4, [r5, #56]
  92:Src/thermistor.cpp **** {
  93:Src/thermistor.cpp ****     decode_pin();
 700              		.loc 1 93 5 is_stmt 1 view .LVU141
 701              	.LBE61:
  94:Src/thermistor.cpp **** }
 702              		.loc 1 94 1 is_stmt 0 view .LVU142
 703 0032 2846     		mov	r0, r5
 704 0034 05B0     		add	sp, sp, #20
 705              	.LCFI13:
 706              		.cfi_def_cfa_offset 12
 707              		@ sp needed
 708 0036 30BD     		pop	{r4, r5, pc}
 709              	.LVL48:
 710              	.L36:
 711              		.loc 1 94 1 view .LVU143
 712              		.align	2
 713              	.L35:
 714 0038 08000000 		.word	_ZTV32OffboardThermistorCurrentLimiter+8
 715              		.cfi_endproc
 716              	.LFE4953:
 718              		.global	_ZN32OffboardThermistorCurrentLimiterC1ERNS_8Config_tE
 719              		.thumb_set _ZN32OffboardThermistorCurrentLimiterC1ERNS_8Config_tE,_ZN32OffboardThermistorCurrentLi
 720              		.section	.text._ZN32OffboardThermistorCurrentLimiter10decode_pinEv,"ax",%progbits
 721              		.align	1
 722              		.global	_ZN32OffboardThermistorCurrentLimiter10decode_pinEv
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccQFOIc1.s 			page 22


 728              	_ZN32OffboardThermistorCurrentLimiter10decode_pinEv:
 729              	.LVL49:
 730              	.LFB4955:
  95:Src/thermistor.cpp **** 
  96:Src/thermistor.cpp **** void OffboardThermistorCurrentLimiter::decode_pin() {
 731              		.loc 1 96 53 is_stmt 1 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
  97:Src/thermistor.cpp **** 
  98:Src/thermistor.cpp **** }
 736              		.loc 1 98 1 is_stmt 0 view .LVU145
 737 0000 7047     		bx	lr
 738              		.cfi_endproc
 739              	.LFE4955:
 741              		.global	_ZTV24ThermistorCurrentLimiter
 742              		.weak	_ZTV31OnboardThermistorCurrentLimiter
 743              		.section	.rodata._ZTV31OnboardThermistorCurrentLimiter,"aG",%progbits,_ZTV31OnboardThermistorCurre
 744              		.align	2
 747              	_ZTV31OnboardThermistorCurrentLimiter:
 748 0000 00000000 		.word	0
 749 0004 00000000 		.word	0
 750 0008 00000000 		.word	_ZN31OnboardThermistorCurrentLimiterD1Ev
 751 000c 00000000 		.word	_ZN31OnboardThermistorCurrentLimiterD0Ev
 752 0010 00000000 		.word	_ZNK24ThermistorCurrentLimiter17get_current_limitEf
 753              		.weak	_ZTV32OffboardThermistorCurrentLimiter
 754              		.section	.rodata._ZTV32OffboardThermistorCurrentLimiter,"aG",%progbits,_ZTV32OffboardThermistorCur
 755              		.align	2
 758              	_ZTV32OffboardThermistorCurrentLimiter:
 759 0000 00000000 		.word	0
 760 0004 00000000 		.word	0
 761 0008 00000000 		.word	_ZN32OffboardThermistorCurrentLimiterD1Ev
 762 000c 00000000 		.word	_ZN32OffboardThermistorCurrentLimiterD0Ev
 763 0010 00000000 		.word	_ZNK24ThermistorCurrentLimiter17get_current_limitEf
 764              		.section	.rodata._ZTV24ThermistorCurrentLimiter,"a"
 765              		.align	2
 766              		.set	.LANCHOR0,. + 0
 769              	_ZTV24ThermistorCurrentLimiter:
 770 0000 00000000 		.word	0
 771 0004 00000000 		.word	0
 772 0008 00000000 		.word	_ZN24ThermistorCurrentLimiterD1Ev
 773 000c 00000000 		.word	_ZN24ThermistorCurrentLimiterD0Ev
 774 0010 00000000 		.word	_ZNK24ThermistorCurrentLimiter17get_current_limitEf
 775              		.text
 776              	.Letext0:
 777              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 778              		.file 6 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 779              		.file 7 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdint.h"
 780              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 781              		.file 9 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/stddef
 782              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 783              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 784              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 785              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 786              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 787              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
ARM GAS  /tmp/ccQFOIc1.s 			page 23


 788              		.file 16 "Inc/mc_type.h"
 789              		.file 17 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath"
 790              		.file 18 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-none-
 791              		.file 19 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_trai
 792              		.file 20 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debug/deb
 793              		.file 21 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 794              		.file 22 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/exce
 795              		.file 23 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/enab
 796              		.file 24 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/optional"
 797              		.file 25 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/tr1/speci
 798              		.file 26 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/variant"
 799              		.file 27 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 800              		.file 28 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/std_
 801              		.file 29 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdlib"
 802              		.file 30 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/algo
 803              		.file 31 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/functiona
 804              		.file 32 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/array"
 805              		.file 33 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_
 806              		.file 34 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/refw
 807              		.file 35 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cstdint"
 808              		.file 36 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pars
 809              		.file 37 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/pred
 810              		.file 38 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 811              		.file 39 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h"
 812              		.file 40 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math.h"
 813              		.file 41 "Inc/main.h"
 814              		.file 42 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 815              		.file 43 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 816              		.file 44 "Inc/interfaces.hpp"
 817              		.file 45 "Inc/task_timer.hpp"
 818              		.file 46 "Inc/component.hpp"
 819              		.file 47 "Inc/utils.hpp"
 820              		.file 48 "Inc/axis.hpp"
 821              		.file 49 "Inc/motor.hpp"
 822              		.file 50 "Inc/low_level.h"
 823              		.file 51 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/new"
 824              		.file 52 "<built-in>"
ARM GAS  /tmp/ccQFOIc1.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 thermistor.cpp
     /tmp/ccQFOIc1.s:18     .text._ZNK24ThermistorCurrentLimiter17get_current_limitEf:0000000000000000 $t
     /tmp/ccQFOIc1.s:26     .text._ZNK24ThermistorCurrentLimiter17get_current_limitEf:0000000000000000 _ZNK24ThermistorCurrentLimiter17get_current_limitEf
     /tmp/ccQFOIc1.s:112    .text._ZNK24ThermistorCurrentLimiter17get_current_limitEf:000000000000005c $d
     /tmp/ccQFOIc1.s:117    .text._ZN24ThermistorCurrentLimiterD2Ev:0000000000000000 $t
     /tmp/ccQFOIc1.s:124    .text._ZN24ThermistorCurrentLimiterD2Ev:0000000000000000 _ZN24ThermistorCurrentLimiterD2Ev
     /tmp/ccQFOIc1.s:124    .text._ZN24ThermistorCurrentLimiterD2Ev:0000000000000000 _ZN24ThermistorCurrentLimiterD1Ev
     /tmp/ccQFOIc1.s:147    .text._ZN32OffboardThermistorCurrentLimiterD2Ev:0000000000000000 $t
     /tmp/ccQFOIc1.s:154    .text._ZN32OffboardThermistorCurrentLimiterD2Ev:0000000000000000 _ZN32OffboardThermistorCurrentLimiterD2Ev
     /tmp/ccQFOIc1.s:154    .text._ZN32OffboardThermistorCurrentLimiterD2Ev:0000000000000000 _ZN32OffboardThermistorCurrentLimiterD1Ev
     /tmp/ccQFOIc1.s:179    .text._ZN31OnboardThermistorCurrentLimiterD2Ev:0000000000000000 $t
     /tmp/ccQFOIc1.s:186    .text._ZN31OnboardThermistorCurrentLimiterD2Ev:0000000000000000 _ZN31OnboardThermistorCurrentLimiterD2Ev
     /tmp/ccQFOIc1.s:186    .text._ZN31OnboardThermistorCurrentLimiterD2Ev:0000000000000000 _ZN31OnboardThermistorCurrentLimiterD1Ev
     /tmp/ccQFOIc1.s:211    .text._ZN24ThermistorCurrentLimiterD0Ev:0000000000000000 $t
     /tmp/ccQFOIc1.s:218    .text._ZN24ThermistorCurrentLimiterD0Ev:0000000000000000 _ZN24ThermistorCurrentLimiterD0Ev
     /tmp/ccQFOIc1.s:253    .text._ZN31OnboardThermistorCurrentLimiterD0Ev:0000000000000000 $t
     /tmp/ccQFOIc1.s:260    .text._ZN31OnboardThermistorCurrentLimiterD0Ev:0000000000000000 _ZN31OnboardThermistorCurrentLimiterD0Ev
     /tmp/ccQFOIc1.s:299    .text._ZN32OffboardThermistorCurrentLimiterD0Ev:0000000000000000 $t
     /tmp/ccQFOIc1.s:306    .text._ZN32OffboardThermistorCurrentLimiterD0Ev:0000000000000000 _ZN32OffboardThermistorCurrentLimiterD0Ev
     /tmp/ccQFOIc1.s:345    .text._ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb:0000000000000000 $t
     /tmp/ccQFOIc1.s:352    .text._ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb:0000000000000000 _ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb
     /tmp/ccQFOIc1.s:405    .text._ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb:0000000000000030 $d
     /tmp/ccQFOIc1.s:352    .text._ZN24ThermistorCurrentLimiterC2EtPKfS1_jRS0_S2_RKb:0000000000000000 _ZN24ThermistorCurrentLimiterC1EtPKfS1_jRS0_S2_RKb
     /tmp/ccQFOIc1.s:413    .text._ZN24ThermistorCurrentLimiter6updateEv:0000000000000000 $t
     /tmp/ccQFOIc1.s:420    .text._ZN24ThermistorCurrentLimiter6updateEv:0000000000000000 _ZN24ThermistorCurrentLimiter6updateEv
     /tmp/ccQFOIc1.s:499    .text._ZN24ThermistorCurrentLimiter6updateEv:0000000000000050 $d
     /tmp/ccQFOIc1.s:504    .text._ZN24ThermistorCurrentLimiter9do_checksEv:0000000000000000 $t
     /tmp/ccQFOIc1.s:511    .text._ZN24ThermistorCurrentLimiter9do_checksEv:0000000000000000 _ZN24ThermistorCurrentLimiter9do_checksEv
     /tmp/ccQFOIc1.s:577    .text._ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE:0000000000000000 $t
     /tmp/ccQFOIc1.s:584    .text._ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE:0000000000000000 _ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE
     /tmp/ccQFOIc1.s:641    .text._ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE:0000000000000030 $d
     /tmp/ccQFOIc1.s:747    .rodata._ZTV31OnboardThermistorCurrentLimiter:0000000000000000 _ZTV31OnboardThermistorCurrentLimiter
     /tmp/ccQFOIc1.s:584    .text._ZN31OnboardThermistorCurrentLimiterC2ERK26ThermistorHardwareConfig_tRNS_8Config_tE:0000000000000000 _ZN31OnboardThermistorCurrentLimiterC1ERK26ThermistorHardwareConfig_tRNS_8Config_tE
     /tmp/ccQFOIc1.s:648    .text._ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE:0000000000000000 $t
     /tmp/ccQFOIc1.s:655    .text._ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE:0000000000000000 _ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE
     /tmp/ccQFOIc1.s:714    .text._ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE:0000000000000038 $d
     /tmp/ccQFOIc1.s:758    .rodata._ZTV32OffboardThermistorCurrentLimiter:0000000000000000 _ZTV32OffboardThermistorCurrentLimiter
     /tmp/ccQFOIc1.s:655    .text._ZN32OffboardThermistorCurrentLimiterC2ERNS_8Config_tE:0000000000000000 _ZN32OffboardThermistorCurrentLimiterC1ERNS_8Config_tE
     /tmp/ccQFOIc1.s:721    .text._ZN32OffboardThermistorCurrentLimiter10decode_pinEv:0000000000000000 $t
     /tmp/ccQFOIc1.s:728    .text._ZN32OffboardThermistorCurrentLimiter10decode_pinEv:0000000000000000 _ZN32OffboardThermistorCurrentLimiter10decode_pinEv
     /tmp/ccQFOIc1.s:769    .rodata._ZTV24ThermistorCurrentLimiter:0000000000000000 _ZTV24ThermistorCurrentLimiter
     /tmp/ccQFOIc1.s:744    .rodata._ZTV31OnboardThermistorCurrentLimiter:0000000000000000 $d
     /tmp/ccQFOIc1.s:755    .rodata._ZTV32OffboardThermistorCurrentLimiter:0000000000000000 $d
     /tmp/ccQFOIc1.s:765    .rodata._ZTV24ThermistorCurrentLimiter:0000000000000000 $d
                           .group:0000000000000000 _ZN24ThermistorCurrentLimiterD5Ev
                           .group:0000000000000000 _ZN32OffboardThermistorCurrentLimiterD5Ev
                           .group:0000000000000000 _ZN31OnboardThermistorCurrentLimiterD5Ev

UNDEFINED SYMBOLS
_ZdlPv
get_adc_voltage_channel
horner_fma
adc_ref_voltage
