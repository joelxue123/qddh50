ARM GAS  /tmp/cccAnoOh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"open_loop.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
  22      04040404 
  22      3838
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
  28      00000800 
  28      0008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
  34      00000800 
  34      0000
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
  40      080A0C0E 
  40      1014
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
  46      04050607 
  46      080A
  47              		.section	.rodata.USART_PRESCALER_TAB,"a"
  48              		.align	2
  51              	USART_PRESCALER_TAB:
  52 0000 01000000 		.word	1
  53 0004 02000000 		.word	2
  54 0008 04000000 		.word	4
  55 000c 06000000 		.word	6
  56 0010 08000000 		.word	8
  57 0014 0A000000 		.word	10
  58 0018 0C000000 		.word	12
  59 001c 10000000 		.word	16
ARM GAS  /tmp/cccAnoOh.s 			page 2


  60 0020 20000000 		.word	32
  61 0024 40000000 		.word	64
  62 0028 80000000 		.word	128
  63 002c 00010000 		.word	256
  64              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  65              		.align	2
  68              	CHANNEL_OFFSET_TAB:
  69 0000 081C3044 		.ascii	"\010\0340DXl"
  69      586C
  70              		.section	.text.OL_Init,"ax",%progbits
  71              		.align	1
  72              		.weak	OL_Init
  73              		.arch armv7e-m
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	OL_Init:
  80              	.LFB1442:
  81              		.file 1 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c"
   1:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /**
   2:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   ******************************************************************************
   3:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @file    open_loop.c
   4:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @brief   This file provides firmware functions that implement the features
   6:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *          of the Open Loop component.
   7:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *
   8:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   ******************************************************************************
   9:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @attention
  10:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *
  11:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  12:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * All rights reserved.</center></h2>
  13:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *
  14:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * This software component is licensed by ST under Ultimate Liberty license
  15:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * the License. You may obtain a copy of the License at:
  17:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *                             www.st.com/SLA0044
  18:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *
  19:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   ******************************************************************************
  20:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @ingroup OpenLoop
  21:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
  22:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   
  23:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /* Includes ------------------------------------------------------------------*/
  24:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #include "open_loop.h"
  25:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
  26:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /** @addtogroup MCSDK
  27:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @{
  28:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
  29:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
  30:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /** @defgroup OpenLoop Open Loop Control
  31:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @brief Open Loop component of the Motor Control SDK
  32:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *
  33:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * Open Loop component allows to run the motor in open loop voltage mode. In that mode, the phase 
  34:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * forced independently from the measured currents. To do so, the routine OL_VqdConditioning() ove
  35:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * voltage command Vdq in the FOC current controller task. The voltage level to apply can be set d
  36:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * user, with OL_UpdateVoltage(), or computed by OL_Calc() if the V/F mode is selected. In that mo
  37:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * level depends on the speed, the slope and the offset selected by the user. 
ARM GAS  /tmp/cccAnoOh.s 			page 3


  38:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *
  39:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @{
  40:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
  41:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
  42:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /* Private defines -----------------------------------------------------------*/
  43:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
  44:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /**
  45:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @brief  Initializes OpenLoop variables.it should be called 
  46:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *         once during Motor Control initialization.
  47:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @param  pHandle: Pointer on Handle structure of OpenLoop feature.
  48:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @param  pVSS: Pointer on virtual speed sensor structure.
  49:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
  50:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** __weak void OL_Init(OpenLoop_Handle_t *pHandle, VirtualSpeedSensor_Handle_t *pVSS)
  51:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** {
  82              		.loc 1 51 1
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87 0000 80B4     		push	{r7}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              	.LCFI1:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI2:
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
  98 0008 3960     		str	r1, [r7]
  52:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
  53:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   if (MC_NULL == pHandle)
  54:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   {
  55:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     /* Nothing to do */
  56:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   }
  57:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   else
  58:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   {
  59:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
  60:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     pHandle->hVoltage = pHandle->hDefaultVoltage;
  99              		.loc 1 60 32
 100 000a 7B68     		ldr	r3, [r7, #4]
 101 000c B3F90020 		ldrsh	r2, [r3]
 102              		.loc 1 60 23
 103 0010 7B68     		ldr	r3, [r7, #4]
 104 0012 1A81     		strh	r2, [r3, #8]	@ movhi
  61:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     pHandle->pVSS = pVSS;
 105              		.loc 1 61 19
 106 0014 7B68     		ldr	r3, [r7, #4]
 107 0016 3A68     		ldr	r2, [r7]
 108 0018 DA60     		str	r2, [r3, #12]
  62:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
  63:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   }
  64:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
  65:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** }
 109              		.loc 1 65 1
 110 001a 00BF     		nop
ARM GAS  /tmp/cccAnoOh.s 			page 4


 111 001c 0C37     		adds	r7, r7, #12
 112              	.LCFI3:
 113              		.cfi_def_cfa_offset 4
 114 001e BD46     		mov	sp, r7
 115              	.LCFI4:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0020 5DF8047B 		ldr	r7, [sp], #4
 119              	.LCFI5:
 120              		.cfi_restore 7
 121              		.cfi_def_cfa_offset 0
 122 0024 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE1442:
 126              		.section	.text.OL_VqdConditioning,"ax",%progbits
 127              		.align	1
 128              		.weak	OL_VqdConditioning
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	OL_VqdConditioning:
 135              	.LFB1443:
  66:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
  67:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /**
  68:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @brief  Sets Vqd according to open loop phase voltage. It should be 
  69:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *         called during current controller task.
  70:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @param  pHandle: Pointer on Handle structure of OpenLoop feature.
  71:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @retval qd_t Vqd conditioned values.
  72:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
  73:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** __weak qd_t OL_VqdConditioning(const OpenLoop_Handle_t *pHandle)
  74:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** {
 136              		.loc 1 74 1
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 16
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 80B4     		push	{r7}
 142              	.LCFI6:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 0002 85B0     		sub	sp, sp, #20
 146              	.LCFI7:
 147              		.cfi_def_cfa_offset 24
 148 0004 00AF     		add	r7, sp, #0
 149              	.LCFI8:
 150              		.cfi_def_cfa_register 7
 151 0006 7860     		str	r0, [r7, #4]
  75:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   qd_t Vqd;
  76:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   Vqd.d = 0;
 152              		.loc 1 76 9
 153 0008 0023     		movs	r3, #0
 154 000a 7B81     		strh	r3, [r7, #10]	@ movhi
  77:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
  78:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   Vqd.q = ((MC_NULL == pHandle) ? 0 : pHandle->hVoltage);
  79:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #else
  80:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   Vqd.q = (pHandle->hVoltage);
ARM GAS  /tmp/cccAnoOh.s 			page 5


 155              		.loc 1 80 19
 156 000c 7B68     		ldr	r3, [r7, #4]
 157 000e B3F90830 		ldrsh	r3, [r3, #8]
 158              		.loc 1 80 9
 159 0012 3B81     		strh	r3, [r7, #8]	@ movhi
  81:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
  82:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   return (Vqd);
 160              		.loc 1 82 10
 161 0014 BB68     		ldr	r3, [r7, #8]
 162 0016 FB60     		str	r3, [r7, #12]
 163 0018 0023     		movs	r3, #0
 164 001a BA89     		ldrh	r2, [r7, #12]
 165 001c 62F30F03 		bfi	r3, r2, #0, #16
 166 0020 FA89     		ldrh	r2, [r7, #14]
 167 0022 62F31F43 		bfi	r3, r2, #16, #16
  83:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** }
 168              		.loc 1 83 1
 169 0026 1846     		mov	r0, r3
 170 0028 1437     		adds	r7, r7, #20
 171              	.LCFI9:
 172              		.cfi_def_cfa_offset 4
 173 002a BD46     		mov	sp, r7
 174              	.LCFI10:
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 002c 5DF8047B 		ldr	r7, [sp], #4
 178              	.LCFI11:
 179              		.cfi_restore 7
 180              		.cfi_def_cfa_offset 0
 181 0030 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE1443:
 185              		.section	.text.OL_Calc,"ax",%progbits
 186              		.align	1
 187              		.weak	OL_Calc
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	OL_Calc:
 194              	.LFB1444:
  84:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
  85:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /**
  86:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @brief  Computes phase voltage to apply according to average mechanical speed (V/F Mode).
  87:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   *         It should be called during background task.
  88:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @param  pHandle: Pointer on Handle structure of OpenLoop feature.
  89:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
  90:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** __weak void OL_Calc(OpenLoop_Handle_t *pHandle)
  91:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** {
 195              		.loc 1 91 1
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              	.LCFI12:
 202              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cccAnoOh.s 			page 6


 203              		.cfi_offset 7, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              	.LCFI13:
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI14:
 209              		.cfi_def_cfa_register 7
 210 0006 7860     		str	r0, [r7, #4]
  92:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
  93:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   if (MC_NULL == pHandle)
  94:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   {
  95:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     /* Nothing to do */
  96:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   }
  97:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   else
  98:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   {
  99:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
 100:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     if (true ==  pHandle->VFMode)
 211              		.loc 1 100 25
 212 0008 7B68     		ldr	r3, [r7, #4]
 213 000a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 214              		.loc 1 100 8
 215 000c 002B     		cmp	r3, #0
 216 000e 30D0     		beq	.L7
 101:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     {
 102:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       /* V/F mode true means enabled */
 103:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       if (pHandle->pVSS->_Super.hAvrMecSpeedUnit >= 0)
 217              		.loc 1 103 18
 218 0010 7B68     		ldr	r3, [r7, #4]
 219 0012 DB68     		ldr	r3, [r3, #12]
 220              		.loc 1 103 32
 221 0014 B3F90C30 		ldrsh	r3, [r3, #12]
 222              		.loc 1 103 10
 223 0018 002B     		cmp	r3, #0
 224 001a 15DB     		blt	.L6
 104:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       {
 105:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****         pHandle->hVoltage = pHandle->hVFOffset + (pHandle->hVFSlope * pHandle->pVSS->_Super.hAvrMec
 225              		.loc 1 105 36
 226 001c 7B68     		ldr	r3, [r7, #4]
 227 001e B3F90430 		ldrsh	r3, [r3, #4]
 228 0022 9AB2     		uxth	r2, r3
 229              		.loc 1 105 58
 230 0024 7B68     		ldr	r3, [r7, #4]
 231 0026 B3F90630 		ldrsh	r3, [r3, #6]
 232 002a 99B2     		uxth	r1, r3
 233              		.loc 1 105 78
 234 002c 7B68     		ldr	r3, [r7, #4]
 235 002e DB68     		ldr	r3, [r3, #12]
 236              		.loc 1 105 92
 237 0030 B3F90C30 		ldrsh	r3, [r3, #12]
 238 0034 9BB2     		uxth	r3, r3
 239              		.loc 1 105 69
 240 0036 11FB03F3 		smulbb	r3, r1, r3
 241 003a 9BB2     		uxth	r3, r3
 242              		.loc 1 105 48
 243 003c 1344     		add	r3, r3, r2
 244 003e 9BB2     		uxth	r3, r3
 245 0040 1AB2     		sxth	r2, r3
ARM GAS  /tmp/cccAnoOh.s 			page 7


 246              		.loc 1 105 27
 247 0042 7B68     		ldr	r3, [r7, #4]
 248 0044 1A81     		strh	r2, [r3, #8]	@ movhi
 106:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 107:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       else
 108:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       {
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****         pHandle->hVoltage = pHandle->hVFOffset - (pHandle->hVFSlope * pHandle->pVSS->_Super.hAvrMec
 110:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 111:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     }
 112:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     else
 113:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     {
 114:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       /* Nothing to do */
 115:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     }
 116:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
 117:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   }
 118:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
 119:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** }
 249              		.loc 1 119 1
 250 0046 14E0     		b	.L7
 251              	.L6:
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 252              		.loc 1 109 36
 253 0048 7B68     		ldr	r3, [r7, #4]
 254 004a B3F90430 		ldrsh	r3, [r3, #4]
 255 004e 9AB2     		uxth	r2, r3
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 256              		.loc 1 109 58
 257 0050 7B68     		ldr	r3, [r7, #4]
 258 0052 B3F90630 		ldrsh	r3, [r3, #6]
 259 0056 99B2     		uxth	r1, r3
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 260              		.loc 1 109 78
 261 0058 7B68     		ldr	r3, [r7, #4]
 262 005a DB68     		ldr	r3, [r3, #12]
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 263              		.loc 1 109 92
 264 005c B3F90C30 		ldrsh	r3, [r3, #12]
 265 0060 9BB2     		uxth	r3, r3
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 266              		.loc 1 109 69
 267 0062 11FB03F3 		smulbb	r3, r1, r3
 268 0066 9BB2     		uxth	r3, r3
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 269              		.loc 1 109 48
 270 0068 D31A     		subs	r3, r2, r3
 271 006a 9BB2     		uxth	r3, r3
 272 006c 1AB2     		sxth	r2, r3
 109:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****       }
 273              		.loc 1 109 27
 274 006e 7B68     		ldr	r3, [r7, #4]
 275 0070 1A81     		strh	r2, [r3, #8]	@ movhi
 276              	.L7:
 277              		.loc 1 119 1
 278 0072 00BF     		nop
 279 0074 0C37     		adds	r7, r7, #12
 280              	.LCFI15:
 281              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cccAnoOh.s 			page 8


 282 0076 BD46     		mov	sp, r7
 283              	.LCFI16:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0078 5DF8047B 		ldr	r7, [sp], #4
 287              	.LCFI17:
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 007c 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE1444:
 294              		.section	.text.OL_VF,"ax",%progbits
 295              		.align	1
 296              		.weak	OL_VF
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	OL_VF:
 303              	.LFB1445:
 120:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** 
 121:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** /**
 122:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @brief  Activates of the Voltage versus Frequency mode (V/F mode).
 123:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @param  pHandle: Pointer on Handle structure of OpenLoop feature.
 124:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   * @param  VFEnabling: Flag to enable the V/F mode.
 125:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   */
 126:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** __weak void OL_VF(OpenLoop_Handle_t *pHandle, bool VFEnabling)
 127:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** {
 304              		.loc 1 127 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 80B4     		push	{r7}
 310              	.LCFI18:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 83B0     		sub	sp, sp, #12
 314              	.LCFI19:
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI20:
 318              		.cfi_def_cfa_register 7
 319 0006 7860     		str	r0, [r7, #4]
 320 0008 0B46     		mov	r3, r1
 321 000a FB70     		strb	r3, [r7, #3]
 128:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
 129:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   if (MC_NULL == pHandle)
 130:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   {
 131:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     /* Nothing to do */
 132:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   }
 133:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   else
 134:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   {
 135:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
 136:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****     pHandle->VFMode = VFEnabling;
 322              		.loc 1 136 21
 323 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccAnoOh.s 			page 9


 324 000e FA78     		ldrb	r2, [r7, #3]
 325 0010 9A70     		strb	r2, [r3, #2]
 137:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #ifdef NULL_PTR_CHECK_OPEN_LOOP
 138:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c ****   }
 139:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** #endif
 140:MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Src/open_loop.c **** }
 326              		.loc 1 140 1
 327 0012 00BF     		nop
 328 0014 0C37     		adds	r7, r7, #12
 329              	.LCFI21:
 330              		.cfi_def_cfa_offset 4
 331 0016 BD46     		mov	sp, r7
 332              	.LCFI22:
 333              		.cfi_def_cfa_register 13
 334              		@ sp needed
 335 0018 5DF8047B 		ldr	r7, [sp], #4
 336              	.LCFI23:
 337              		.cfi_restore 7
 338              		.cfi_def_cfa_offset 0
 339 001c 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE1445:
 343              		.text
 344              	.Letext0:
 345              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 346              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 347              		.file 4 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 348              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 349              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 350              		.file 7 "Inc/mc_type.h"
 351              		.file 8 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 352              		.file 9 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 353              		.file 10 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/open_loop.h"
ARM GAS  /tmp/cccAnoOh.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 open_loop.c
     /tmp/cccAnoOh.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cccAnoOh.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/cccAnoOh.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cccAnoOh.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/cccAnoOh.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cccAnoOh.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/cccAnoOh.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cccAnoOh.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/cccAnoOh.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/cccAnoOh.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/cccAnoOh.s:48     .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/cccAnoOh.s:51     .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB
     /tmp/cccAnoOh.s:65     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cccAnoOh.s:68     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/cccAnoOh.s:71     .text.OL_Init:0000000000000000 $t
     /tmp/cccAnoOh.s:79     .text.OL_Init:0000000000000000 OL_Init
     /tmp/cccAnoOh.s:127    .text.OL_VqdConditioning:0000000000000000 $t
     /tmp/cccAnoOh.s:134    .text.OL_VqdConditioning:0000000000000000 OL_VqdConditioning
     /tmp/cccAnoOh.s:186    .text.OL_Calc:0000000000000000 $t
     /tmp/cccAnoOh.s:193    .text.OL_Calc:0000000000000000 OL_Calc
     /tmp/cccAnoOh.s:295    .text.OL_VF:0000000000000000 $t
     /tmp/cccAnoOh.s:302    .text.OL_VF:0000000000000000 OL_VF

NO UNDEFINED SYMBOLS
