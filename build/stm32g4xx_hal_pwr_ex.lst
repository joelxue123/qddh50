ARM GAS  /tmp/ccpmnMSk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32g4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_GetVoltageRange
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_PWREx_GetVoltageRange:
  27              	.LFB132:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @file    stm32g4xx_hal_pwr_ex.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @attention
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * Copyright (c) 2019 STMicroelectronics.
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * All rights reserved.
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * in the root directory of this software component.
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #include "stm32g4xx_hal.h"
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @addtogroup STM32G4xx_HAL_Driver
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccpmnMSk.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined (STM32G471xx) || defined (STM32G473xx) || defined (STM32G474xx) || defined (STM32G483xx
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTF_AVAILABLE_PINS   0x0000FFFFU /* PF0..PF15 */
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTG_AVAILABLE_PINS   0x000007FFU /* PG0..PG10 */
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #elif defined (STM32G431xx) || defined (STM32G441xx) || defined (STM32GBK1CB) || defined (STM32G491
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTF_AVAILABLE_PINS   0x00000607U /* PF0..PF2 and PF9 and PF10 */
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTG_AVAILABLE_PINS   0x00000400U /* PG10 */
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               0x00010000U    /*!< Mask for interruption yielded by PVM threshol
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              0x00020000U    /*!< Mask for event yielded by PVM threshold cross
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           0x00000001U    /*!< Mask for rising edge set as PVM trigger      
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          0x00000002U    /*!< Mask for falling edge set as PVM trigger     
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50UL   /*!< Time out value for REGLPF and VO
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
ARM GAS  /tmp/ccpmnMSk.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** @verbatim
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****  ===============================================================================
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****  ===============================================================================
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     [..]
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** @endverbatim
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
  29              		.loc 1 110 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
  41              		.loc 1 111 7
  42 0004 0D4B     		ldr	r3, .L5
  43 0006 1B68     		ldr	r3, [r3]
  44 0008 03F4C063 		and	r3, r3, #1536
  45              		.loc 1 111 6
  46 000c B3F5806F 		cmp	r3, #1024
  47 0010 02D1     		bne	.L2
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE2;
  48              		.loc 1 113 12
  49 0012 4FF48063 		mov	r3, #1024
  50 0016 0BE0     		b	.L3
  51              	.L2:
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
  52              		.loc 1 115 12
  53 0018 084B     		ldr	r3, .L5
  54 001a D3F88030 		ldr	r3, [r3, #128]
  55 001e 03F48073 		and	r3, r3, #256
  56              		.loc 1 115 11
  57 0022 B3F5807F 		cmp	r3, #256
ARM GAS  /tmp/ccpmnMSk.s 			page 4


  58 0026 02D1     		bne	.L4
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE1;
  59              		.loc 1 118 12
  60 0028 4FF40073 		mov	r3, #512
  61 002c 00E0     		b	.L3
  62              	.L4:
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
  63              		.loc 1 122 12
  64 002e 0023     		movs	r3, #0
  65              	.L3:
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
  66              		.loc 1 124 1
  67 0030 1846     		mov	r0, r3
  68 0032 BD46     		mov	sp, r7
  69              	.LCFI2:
  70              		.cfi_def_cfa_register 13
  71              		@ sp needed
  72 0034 5DF8047B 		ldr	r7, [sp], #4
  73              	.LCFI3:
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0038 7047     		bx	lr
  77              	.L6:
  78 003a 00BF     		.align	2
  79              	.L5:
  80 003c 00700040 		.word	1073770496
  81              		.cfi_endproc
  82              	.LFE132:
  84              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  85              		.align	1
  86              		.global	HAL_PWREx_ControlVoltageScaling
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	HAL_PWREx_ControlVoltageScaling:
  93              	.LFB133:
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when available, Regulator voltage outpu
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.28 V,
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 170 MHz.
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 150 MHz.
ARM GAS  /tmp/ccpmnMSk.s 			page 5


 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value up to 150 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When moving from Range 1 to Boost Mode Range 1, the system frequency can be increased to
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value up to 170 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
  94              		.loc 1 154 1
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 16
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              	.LCFI4:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 85B0     		sub	sp, sp, #20
 104              	.LCFI5:
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI6:
 108              		.cfi_def_cfa_register 7
 109 0006 7860     		str	r0, [r7, #4]
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
 110              		.loc 1 159 6
 111 0008 7B68     		ldr	r3, [r7, #4]
 112 000a 002B     		cmp	r3, #0
 113 000c 41D1     		bne	.L8
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 114              		.loc 1 162 9
 115 000e 4B4B     		ldr	r3, .L20
 116 0010 1B68     		ldr	r3, [r3]
 117 0012 03F4C063 		and	r3, r3, #1536
 118              		.loc 1 162 8
 119 0016 B3F5806F 		cmp	r3, #1024
 120 001a 31D1     		bne	.L9
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is enabled */
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 121              		.loc 1 165 7
 122 001c 474B     		ldr	r3, .L20
 123 001e D3F88030 		ldr	r3, [r3, #128]
ARM GAS  /tmp/ccpmnMSk.s 			page 6


 124 0022 464A     		ldr	r2, .L20
 125 0024 23F48073 		bic	r3, r3, #256
 126 0028 C2F88030 		str	r3, [r2, #128]
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 127              		.loc 1 168 7
 128 002c 434B     		ldr	r3, .L20
 129 002e 1B68     		ldr	r3, [r3]
 130 0030 23F4C063 		bic	r3, r3, #1536
 131 0034 414A     		ldr	r2, .L20
 132 0036 43F40073 		orr	r3, r3, #512
 133 003a 1360     		str	r3, [r2]
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 134              		.loc 1 171 53
 135 003c 404B     		ldr	r3, .L20+4
 136 003e 1B68     		ldr	r3, [r3]
 137 0040 3222     		movs	r2, #50
 138 0042 02FB03F3 		mul	r3, r2, r3
 139              		.loc 1 171 72
 140 0046 3F4A     		ldr	r2, .L20+8
 141 0048 A2FB0323 		umull	r2, r3, r2, r3
 142 004c 9B0C     		lsrs	r3, r3, #18
 143              		.loc 1 171 23
 144 004e 0133     		adds	r3, r3, #1
 145 0050 FB60     		str	r3, [r7, #12]
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 146              		.loc 1 172 13
 147 0052 02E0     		b	.L10
 148              	.L12:
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         wait_loop_index--;
 149              		.loc 1 174 24
 150 0054 FB68     		ldr	r3, [r7, #12]
 151 0056 013B     		subs	r3, r3, #1
 152 0058 FB60     		str	r3, [r7, #12]
 153              	.L10:
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 154              		.loc 1 172 15
 155 005a 384B     		ldr	r3, .L20
 156 005c 5B69     		ldr	r3, [r3, #20]
 157 005e 03F48063 		and	r3, r3, #1024
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 158              		.loc 1 172 13
 159 0062 B3F5806F 		cmp	r3, #1024
 160 0066 02D1     		bne	.L11
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 161              		.loc 1 172 55 discriminator 1
 162 0068 FB68     		ldr	r3, [r7, #12]
 163 006a 002B     		cmp	r3, #0
 164 006c F2D1     		bne	.L12
 165              	.L11:
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 166              		.loc 1 176 11
ARM GAS  /tmp/ccpmnMSk.s 			page 7


 167 006e 334B     		ldr	r3, .L20
 168 0070 5B69     		ldr	r3, [r3, #20]
 169 0072 03F48063 		and	r3, r3, #1024
 170              		.loc 1 176 10
 171 0076 B3F5806F 		cmp	r3, #1024
 172 007a 58D1     		bne	.L13
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 173              		.loc 1 178 16
 174 007c 0323     		movs	r3, #3
 175 007e 57E0     		b	.L14
 176              	.L9:
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 1 normal or boost mode */
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     else
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Enable Range 1 Boost (no issue if bit already reset) */
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 177              		.loc 1 185 7
 178 0080 2E4B     		ldr	r3, .L20
 179 0082 D3F88030 		ldr	r3, [r3, #128]
 180 0086 2D4A     		ldr	r2, .L20
 181 0088 23F48073 		bic	r3, r3, #256
 182 008c C2F88030 		str	r3, [r2, #128]
 183 0090 4DE0     		b	.L13
 184              	.L8:
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 185              		.loc 1 188 11
 186 0092 7B68     		ldr	r3, [r7, #4]
 187 0094 B3F5007F 		cmp	r3, #512
 188 0098 41D1     		bne	.L15
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 189              		.loc 1 191 9
 190 009a 284B     		ldr	r3, .L20
 191 009c 1B68     		ldr	r3, [r3]
 192 009e 03F4C063 		and	r3, r3, #1536
 193              		.loc 1 191 8
 194 00a2 B3F5806F 		cmp	r3, #1024
 195 00a6 31D1     		bne	.L16
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is disabled */
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 196              		.loc 1 194 7
 197 00a8 244B     		ldr	r3, .L20
 198 00aa D3F88030 		ldr	r3, [r3, #128]
 199 00ae 234A     		ldr	r2, .L20
 200 00b0 43F48073 		orr	r3, r3, #256
 201 00b4 C2F88030 		str	r3, [r2, #128]
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 202              		.loc 1 197 7
ARM GAS  /tmp/ccpmnMSk.s 			page 8


 203 00b8 204B     		ldr	r3, .L20
 204 00ba 1B68     		ldr	r3, [r3]
 205 00bc 23F4C063 		bic	r3, r3, #1536
 206 00c0 1E4A     		ldr	r2, .L20
 207 00c2 43F40073 		orr	r3, r3, #512
 208 00c6 1360     		str	r3, [r2]
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 209              		.loc 1 200 53
 210 00c8 1D4B     		ldr	r3, .L20+4
 211 00ca 1B68     		ldr	r3, [r3]
 212 00cc 3222     		movs	r2, #50
 213 00ce 02FB03F3 		mul	r3, r2, r3
 214              		.loc 1 200 72
 215 00d2 1C4A     		ldr	r2, .L20+8
 216 00d4 A2FB0323 		umull	r2, r3, r2, r3
 217 00d8 9B0C     		lsrs	r3, r3, #18
 218              		.loc 1 200 23
 219 00da 0133     		adds	r3, r3, #1
 220 00dc FB60     		str	r3, [r7, #12]
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 221              		.loc 1 201 13
 222 00de 02E0     		b	.L17
 223              	.L19:
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         wait_loop_index--;
 224              		.loc 1 203 24
 225 00e0 FB68     		ldr	r3, [r7, #12]
 226 00e2 013B     		subs	r3, r3, #1
 227 00e4 FB60     		str	r3, [r7, #12]
 228              	.L17:
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 229              		.loc 1 201 15
 230 00e6 154B     		ldr	r3, .L20
 231 00e8 5B69     		ldr	r3, [r3, #20]
 232 00ea 03F48063 		and	r3, r3, #1024
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 233              		.loc 1 201 13
 234 00ee B3F5806F 		cmp	r3, #1024
 235 00f2 02D1     		bne	.L18
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 236              		.loc 1 201 55 discriminator 1
 237 00f4 FB68     		ldr	r3, [r7, #12]
 238 00f6 002B     		cmp	r3, #0
 239 00f8 F2D1     		bne	.L19
 240              	.L18:
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 241              		.loc 1 205 11
 242 00fa 104B     		ldr	r3, .L20
 243 00fc 5B69     		ldr	r3, [r3, #20]
 244 00fe 03F48063 		and	r3, r3, #1024
 245              		.loc 1 205 10
 246 0102 B3F5806F 		cmp	r3, #1024
 247 0106 12D1     		bne	.L13
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
ARM GAS  /tmp/ccpmnMSk.s 			page 9


 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 248              		.loc 1 207 16
 249 0108 0323     		movs	r3, #3
 250 010a 11E0     		b	.L14
 251              	.L16:
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      /* If current range is range 1 normal or boost mode */
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     else
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Disable Range 1 Boost (no issue if bit already set) */
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 252              		.loc 1 214 7
 253 010c 0B4B     		ldr	r3, .L20
 254 010e D3F88030 		ldr	r3, [r3, #128]
 255 0112 0A4A     		ldr	r2, .L20
 256 0114 43F48073 		orr	r3, r3, #256
 257 0118 C2F88030 		str	r3, [r2, #128]
 258 011c 07E0     		b	.L13
 259              	.L15:
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Set Range 2 */
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 260              		.loc 1 220 5
 261 011e 074B     		ldr	r3, .L20
 262 0120 1B68     		ldr	r3, [r3]
 263 0122 23F4C063 		bic	r3, r3, #1536
 264 0126 054A     		ldr	r2, .L20
 265 0128 43F48063 		orr	r3, r3, #1024
 266 012c 1360     		str	r3, [r2]
 267              	.L13:
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit setting has no effect in Range 2        */
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return HAL_OK;
 268              		.loc 1 225 10
 269 012e 0023     		movs	r3, #0
 270              	.L14:
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 271              		.loc 1 226 1
 272 0130 1846     		mov	r0, r3
 273 0132 1437     		adds	r7, r7, #20
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 4
 276 0134 BD46     		mov	sp, r7
 277              	.LCFI8:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0136 5DF8047B 		ldr	r7, [sp], #4
 281              	.LCFI9:
 282              		.cfi_restore 7
 283              		.cfi_def_cfa_offset 0
 284 013a 7047     		bx	lr
ARM GAS  /tmp/ccpmnMSk.s 			page 10


 285              	.L21:
 286              		.align	2
 287              	.L20:
 288 013c 00700040 		.word	1073770496
 289 0140 00000000 		.word	SystemCoreClock
 290 0144 83DE1B43 		.word	1125899907
 291              		.cfi_endproc
 292              	.LFE133:
 294              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 295              		.align	1
 296              		.global	HAL_PWREx_EnableBatteryCharging
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	HAL_PWREx_EnableBatteryCharging:
 303              	.LFB134:
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT through an internal resistor.
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 304              		.loc 1 239 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 80B4     		push	{r7}
 310              	.LCFI10:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 83B0     		sub	sp, sp, #12
 314              	.LCFI11:
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI12:
 318              		.cfi_def_cfa_register 7
 319 0006 7860     		str	r0, [r7, #4]
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 320              		.loc 1 243 3
 321 0008 094B     		ldr	r3, .L23
 322 000a DB68     		ldr	r3, [r3, #12]
 323 000c 23F40072 		bic	r2, r3, #512
 324 0010 0749     		ldr	r1, .L23
 325 0012 7B68     		ldr	r3, [r7, #4]
 326 0014 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccpmnMSk.s 			page 11


 327 0016 CB60     		str	r3, [r1, #12]
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 328              		.loc 1 246 3
 329 0018 054B     		ldr	r3, .L23
 330 001a DB68     		ldr	r3, [r3, #12]
 331 001c 044A     		ldr	r2, .L23
 332 001e 43F48073 		orr	r3, r3, #256
 333 0022 D360     		str	r3, [r2, #12]
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 334              		.loc 1 247 1
 335 0024 00BF     		nop
 336 0026 0C37     		adds	r7, r7, #12
 337              	.LCFI13:
 338              		.cfi_def_cfa_offset 4
 339 0028 BD46     		mov	sp, r7
 340              	.LCFI14:
 341              		.cfi_def_cfa_register 13
 342              		@ sp needed
 343 002a 5DF8047B 		ldr	r7, [sp], #4
 344              	.LCFI15:
 345              		.cfi_restore 7
 346              		.cfi_def_cfa_offset 0
 347 002e 7047     		bx	lr
 348              	.L24:
 349              		.align	2
 350              	.L23:
 351 0030 00700040 		.word	1073770496
 352              		.cfi_endproc
 353              	.LFE134:
 355              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 356              		.align	1
 357              		.global	HAL_PWREx_DisableBatteryCharging
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu fpv4-sp-d16
 363              	HAL_PWREx_DisableBatteryCharging:
 364              	.LFB135:
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 365              		.loc 1 255 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              	.LCFI16:
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
ARM GAS  /tmp/ccpmnMSk.s 			page 12


 374 0002 00AF     		add	r7, sp, #0
 375              	.LCFI17:
 376              		.cfi_def_cfa_register 7
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 377              		.loc 1 256 3
 378 0004 054B     		ldr	r3, .L26
 379 0006 DB68     		ldr	r3, [r3, #12]
 380 0008 044A     		ldr	r2, .L26
 381 000a 23F48073 		bic	r3, r3, #256
 382 000e D360     		str	r3, [r2, #12]
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 383              		.loc 1 257 1
 384 0010 00BF     		nop
 385 0012 BD46     		mov	sp, r7
 386              	.LCFI18:
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 0014 5DF8047B 		ldr	r7, [sp], #4
 390              	.LCFI19:
 391              		.cfi_restore 7
 392              		.cfi_def_cfa_offset 0
 393 0018 7047     		bx	lr
 394              	.L27:
 395 001a 00BF     		.align	2
 396              	.L26:
 397 001c 00700040 		.word	1073770496
 398              		.cfi_endproc
 399              	.LFE135:
 401              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_PWREx_EnableInternalWakeUpLine
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_PWREx_EnableInternalWakeUpLine:
 410              	.LFB136:
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line.
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 411              		.loc 1 265 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              	.LCFI20:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              	.LCFI21:
 422              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccpmnMSk.s 			page 13


 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 423              		.loc 1 266 3
 424 0004 054B     		ldr	r3, .L29
 425 0006 9B68     		ldr	r3, [r3, #8]
 426 0008 044A     		ldr	r2, .L29
 427 000a 43F40043 		orr	r3, r3, #32768
 428 000e 9360     		str	r3, [r2, #8]
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 429              		.loc 1 267 1
 430 0010 00BF     		nop
 431 0012 BD46     		mov	sp, r7
 432              	.LCFI22:
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0014 5DF8047B 		ldr	r7, [sp], #4
 436              	.LCFI23:
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 0018 7047     		bx	lr
 440              	.L30:
 441 001a 00BF     		.align	2
 442              	.L29:
 443 001c 00700040 		.word	1073770496
 444              		.cfi_endproc
 445              	.LFE136:
 447              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 448              		.align	1
 449              		.global	HAL_PWREx_DisableInternalWakeUpLine
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	HAL_PWREx_DisableInternalWakeUpLine:
 456              	.LFB137:
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line.
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 457              		.loc 1 275 1
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              	.LCFI24:
 464              		.cfi_def_cfa_offset 4
 465              		.cfi_offset 7, -4
 466 0002 00AF     		add	r7, sp, #0
 467              	.LCFI25:
 468              		.cfi_def_cfa_register 7
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 469              		.loc 1 276 3
 470 0004 054B     		ldr	r3, .L32
ARM GAS  /tmp/ccpmnMSk.s 			page 14


 471 0006 9B68     		ldr	r3, [r3, #8]
 472 0008 044A     		ldr	r2, .L32
 473 000a 23F40043 		bic	r3, r3, #32768
 474 000e 9360     		str	r3, [r2, #8]
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 475              		.loc 1 277 1
 476 0010 00BF     		nop
 477 0012 BD46     		mov	sp, r7
 478              	.LCFI26:
 479              		.cfi_def_cfa_register 13
 480              		@ sp needed
 481 0014 5DF8047B 		ldr	r7, [sp], #4
 482              	.LCFI27:
 483              		.cfi_restore 7
 484              		.cfi_def_cfa_offset 0
 485 0018 7047     		bx	lr
 486              	.L33:
 487 001a 00BF     		.align	2
 488              	.L32:
 489 001c 00700040 		.word	1073770496
 490              		.cfi_endproc
 491              	.LFE137:
 493              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 494              		.align	1
 495              		.global	HAL_PWREx_EnableGPIOPullUp
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	HAL_PWREx_EnableGPIOPullUp:
 502              	.LFB138:
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes.
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved.
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_G
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/ccpmnMSk.s 			page 15


 503              		.loc 1 303 1
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 16
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              	.LCFI28:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              	.LCFI29:
 514              		.cfi_def_cfa_offset 24
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI30:
 517              		.cfi_def_cfa_register 7
 518 0006 7860     		str	r0, [r7, #4]
 519 0008 3960     		str	r1, [r7]
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 520              		.loc 1 304 21
 521 000a 0023     		movs	r3, #0
 522 000c FB73     		strb	r3, [r7, #15]
 523 000e 7B68     		ldr	r3, [r7, #4]
 524 0010 062B     		cmp	r3, #6
 525 0012 7ED8     		bhi	.L35
 526 0014 01A2     		adr	r2, .L37
 527 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 528 001a 00BF     		.p2align 2
 529              	.L37:
 530 001c 39000000 		.word	.L43+1
 531 0020 5D000000 		.word	.L42+1
 532 0024 7D000000 		.word	.L41+1
 533 0028 99000000 		.word	.L40+1
 534 002c B5000000 		.word	.L39+1
 535 0030 D1000000 		.word	.L38+1
 536 0034 F9000000 		.word	.L36+1
 537              		.p2align 1
 538              	.L43:
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 539              		.loc 1 312 8
 540 0038 3B4B     		ldr	r3, .L46
 541 003a 1A6A     		ldr	r2, [r3, #32]
 542 003c 3B68     		ldr	r3, [r7]
 543 003e 23F48043 		bic	r3, r3, #16384
 544 0042 3949     		ldr	r1, .L46
 545 0044 1343     		orrs	r3, r3, r2
 546 0046 0B62     		str	r3, [r1, #32]
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 547              		.loc 1 313 8
 548 0048 374B     		ldr	r3, .L46
 549 004a 5A6A     		ldr	r2, [r3, #36]
ARM GAS  /tmp/ccpmnMSk.s 			page 16


 550 004c 3B68     		ldr	r3, [r7]
 551 004e 23F42043 		bic	r3, r3, #40960
 552 0052 DB43     		mvns	r3, r3
 553 0054 3449     		ldr	r1, .L46
 554 0056 1340     		ands	r3, r3, r2
 555 0058 4B62     		str	r3, [r1, #36]
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 556              		.loc 1 314 8
 557 005a 5DE0     		b	.L44
 558              	.L42:
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 559              		.loc 1 316 8
 560 005c 324B     		ldr	r3, .L46
 561 005e 9A6A     		ldr	r2, [r3, #40]
 562 0060 3149     		ldr	r1, .L46
 563 0062 3B68     		ldr	r3, [r7]
 564 0064 1343     		orrs	r3, r3, r2
 565 0066 8B62     		str	r3, [r1, #40]
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 566              		.loc 1 317 8
 567 0068 2F4B     		ldr	r3, .L46
 568 006a DA6A     		ldr	r2, [r3, #44]
 569 006c 3B68     		ldr	r3, [r7]
 570 006e 23F01003 		bic	r3, r3, #16
 571 0072 DB43     		mvns	r3, r3
 572 0074 2C49     		ldr	r1, .L46
 573 0076 1340     		ands	r3, r3, r2
 574 0078 CB62     		str	r3, [r1, #44]
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 575              		.loc 1 318 8
 576 007a 4DE0     		b	.L44
 577              	.L41:
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 578              		.loc 1 320 8
 579 007c 2A4B     		ldr	r3, .L46
 580 007e 1A6B     		ldr	r2, [r3, #48]
 581 0080 2949     		ldr	r1, .L46
 582 0082 3B68     		ldr	r3, [r7]
 583 0084 1343     		orrs	r3, r3, r2
 584 0086 0B63     		str	r3, [r1, #48]
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 585              		.loc 1 321 8
 586 0088 274B     		ldr	r3, .L46
 587 008a 5A6B     		ldr	r2, [r3, #52]
 588 008c 3B68     		ldr	r3, [r7]
 589 008e DB43     		mvns	r3, r3
 590 0090 2549     		ldr	r1, .L46
 591 0092 1340     		ands	r3, r3, r2
 592 0094 4B63     		str	r3, [r1, #52]
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 593              		.loc 1 322 8
 594 0096 3FE0     		b	.L44
 595              	.L40:
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
ARM GAS  /tmp/ccpmnMSk.s 			page 17


 596              		.loc 1 324 8
 597 0098 234B     		ldr	r3, .L46
 598 009a 9A6B     		ldr	r2, [r3, #56]
 599 009c 2249     		ldr	r1, .L46
 600 009e 3B68     		ldr	r3, [r7]
 601 00a0 1343     		orrs	r3, r3, r2
 602 00a2 8B63     		str	r3, [r1, #56]
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 603              		.loc 1 325 8
 604 00a4 204B     		ldr	r3, .L46
 605 00a6 DA6B     		ldr	r2, [r3, #60]
 606 00a8 3B68     		ldr	r3, [r7]
 607 00aa DB43     		mvns	r3, r3
 608 00ac 1E49     		ldr	r1, .L46
 609 00ae 1340     		ands	r3, r3, r2
 610 00b0 CB63     		str	r3, [r1, #60]
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 611              		.loc 1 326 8
 612 00b2 31E0     		b	.L44
 613              	.L39:
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 614              		.loc 1 328 8
 615 00b4 1C4B     		ldr	r3, .L46
 616 00b6 1A6C     		ldr	r2, [r3, #64]
 617 00b8 1B49     		ldr	r1, .L46
 618 00ba 3B68     		ldr	r3, [r7]
 619 00bc 1343     		orrs	r3, r3, r2
 620 00be 0B64     		str	r3, [r1, #64]
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 621              		.loc 1 329 8
 622 00c0 194B     		ldr	r3, .L46
 623 00c2 5A6C     		ldr	r2, [r3, #68]
 624 00c4 3B68     		ldr	r3, [r7]
 625 00c6 DB43     		mvns	r3, r3
 626 00c8 1749     		ldr	r1, .L46
 627 00ca 1340     		ands	r3, r3, r2
 628 00cc 4B64     		str	r3, [r1, #68]
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 629              		.loc 1 330 8
 630 00ce 23E0     		b	.L44
 631              	.L38:
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 632              		.loc 1 332 8
 633 00d0 154B     		ldr	r3, .L46
 634 00d2 9A6C     		ldr	r2, [r3, #72]
 635 00d4 3968     		ldr	r1, [r7]
 636 00d6 40F20763 		movw	r3, #1543
 637 00da 0B40     		ands	r3, r3, r1
 638 00dc 1249     		ldr	r1, .L46
 639 00de 1343     		orrs	r3, r3, r2
 640 00e0 8B64     		str	r3, [r1, #72]
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 641              		.loc 1 333 8
 642 00e2 114B     		ldr	r3, .L46
 643 00e4 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccpmnMSk.s 			page 18


 644 00e6 3968     		ldr	r1, [r7]
 645 00e8 40F20763 		movw	r3, #1543
 646 00ec 0B40     		ands	r3, r3, r1
 647 00ee DB43     		mvns	r3, r3
 648 00f0 0D49     		ldr	r1, .L46
 649 00f2 1340     		ands	r3, r3, r2
 650 00f4 CB64     		str	r3, [r1, #76]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 651              		.loc 1 334 8
 652 00f6 0FE0     		b	.L44
 653              	.L36:
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 654              		.loc 1 336 8
 655 00f8 0B4B     		ldr	r3, .L46
 656 00fa 1A6D     		ldr	r2, [r3, #80]
 657 00fc 3B68     		ldr	r3, [r7]
 658 00fe 03F48063 		and	r3, r3, #1024
 659 0102 0949     		ldr	r1, .L46
 660 0104 1343     		orrs	r3, r3, r2
 661 0106 0B65     		str	r3, [r1, #80]
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 662              		.loc 1 337 8
 663 0108 074B     		ldr	r3, .L46
 664 010a 074A     		ldr	r2, .L46
 665 010c 5B6D     		ldr	r3, [r3, #84]
 666 010e 5365     		str	r3, [r2, #84]
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 667              		.loc 1 338 8
 668 0110 02E0     		b	.L44
 669              	.L35:
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 670              		.loc 1 340 14
 671 0112 0123     		movs	r3, #1
 672 0114 FB73     		strb	r3, [r7, #15]
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 673              		.loc 1 341 7
 674 0116 00BF     		nop
 675              	.L44:
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 676              		.loc 1 344 10
 677 0118 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 678              		.loc 1 345 1
 679 011a 1846     		mov	r0, r3
 680 011c 1437     		adds	r7, r7, #20
 681              	.LCFI31:
 682              		.cfi_def_cfa_offset 4
 683 011e BD46     		mov	sp, r7
 684              	.LCFI32:
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0120 5DF8047B 		ldr	r7, [sp], #4
 688              	.LCFI33:
ARM GAS  /tmp/ccpmnMSk.s 			page 19


 689              		.cfi_restore 7
 690              		.cfi_def_cfa_offset 0
 691 0124 7047     		bx	lr
 692              	.L47:
 693 0126 00BF     		.align	2
 694              	.L46:
 695 0128 00700040 		.word	1073770496
 696              		.cfi_endproc
 697              	.LFE138:
 699              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 700              		.align	1
 701              		.global	HAL_PWREx_DisableGPIOPullUp
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu fpv4-sp-d16
 707              	HAL_PWREx_DisableGPIOPullUp:
 708              	.LFB139:
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_G
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 709              		.loc 1 364 1
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 80B4     		push	{r7}
 715              	.LCFI34:
 716              		.cfi_def_cfa_offset 4
 717              		.cfi_offset 7, -4
 718 0002 85B0     		sub	sp, sp, #20
 719              	.LCFI35:
 720              		.cfi_def_cfa_offset 24
 721 0004 00AF     		add	r7, sp, #0
 722              	.LCFI36:
 723              		.cfi_def_cfa_register 7
 724 0006 7860     		str	r0, [r7, #4]
 725 0008 3960     		str	r1, [r7]
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 726              		.loc 1 365 21
 727 000a 0023     		movs	r3, #0
ARM GAS  /tmp/ccpmnMSk.s 			page 20


 728 000c FB73     		strb	r3, [r7, #15]
 729 000e 7B68     		ldr	r3, [r7, #4]
 730 0010 062B     		cmp	r3, #6
 731 0012 50D8     		bhi	.L49
 732 0014 01A2     		adr	r2, .L51
 733 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 734 001a 00BF     		.p2align 2
 735              	.L51:
 736 001c 39000000 		.word	.L57+1
 737 0020 4D000000 		.word	.L56+1
 738 0024 5D000000 		.word	.L55+1
 739 0028 6D000000 		.word	.L54+1
 740 002c 7D000000 		.word	.L53+1
 741 0030 8D000000 		.word	.L52+1
 742 0034 A3000000 		.word	.L50+1
 743              		.p2align 1
 744              	.L57:
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 745              		.loc 1 373 8
 746 0038 244B     		ldr	r3, .L60
 747 003a 1A6A     		ldr	r2, [r3, #32]
 748 003c 3B68     		ldr	r3, [r7]
 749 003e 23F48043 		bic	r3, r3, #16384
 750 0042 DB43     		mvns	r3, r3
 751 0044 2149     		ldr	r1, .L60
 752 0046 1340     		ands	r3, r3, r2
 753 0048 0B62     		str	r3, [r1, #32]
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 754              		.loc 1 374 8
 755 004a 37E0     		b	.L58
 756              	.L56:
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 757              		.loc 1 376 8
 758 004c 1F4B     		ldr	r3, .L60
 759 004e 9A6A     		ldr	r2, [r3, #40]
 760 0050 3B68     		ldr	r3, [r7]
 761 0052 DB43     		mvns	r3, r3
 762 0054 1D49     		ldr	r1, .L60
 763 0056 1340     		ands	r3, r3, r2
 764 0058 8B62     		str	r3, [r1, #40]
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 765              		.loc 1 377 8
 766 005a 2FE0     		b	.L58
 767              	.L55:
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 768              		.loc 1 379 8
 769 005c 1B4B     		ldr	r3, .L60
 770 005e 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccpmnMSk.s 			page 21


 771 0060 3B68     		ldr	r3, [r7]
 772 0062 DB43     		mvns	r3, r3
 773 0064 1949     		ldr	r1, .L60
 774 0066 1340     		ands	r3, r3, r2
 775 0068 0B63     		str	r3, [r1, #48]
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 776              		.loc 1 380 8
 777 006a 27E0     		b	.L58
 778              	.L54:
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 779              		.loc 1 382 8
 780 006c 174B     		ldr	r3, .L60
 781 006e 9A6B     		ldr	r2, [r3, #56]
 782 0070 3B68     		ldr	r3, [r7]
 783 0072 DB43     		mvns	r3, r3
 784 0074 1549     		ldr	r1, .L60
 785 0076 1340     		ands	r3, r3, r2
 786 0078 8B63     		str	r3, [r1, #56]
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 787              		.loc 1 383 8
 788 007a 1FE0     		b	.L58
 789              	.L53:
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 790              		.loc 1 385 8
 791 007c 134B     		ldr	r3, .L60
 792 007e 1A6C     		ldr	r2, [r3, #64]
 793 0080 3B68     		ldr	r3, [r7]
 794 0082 DB43     		mvns	r3, r3
 795 0084 1149     		ldr	r1, .L60
 796 0086 1340     		ands	r3, r3, r2
 797 0088 0B64     		str	r3, [r1, #64]
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 798              		.loc 1 386 8
 799 008a 17E0     		b	.L58
 800              	.L52:
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 801              		.loc 1 388 8
 802 008c 0F4B     		ldr	r3, .L60
 803 008e 9A6C     		ldr	r2, [r3, #72]
 804 0090 3968     		ldr	r1, [r7]
 805 0092 40F20763 		movw	r3, #1543
 806 0096 0B40     		ands	r3, r3, r1
 807 0098 DB43     		mvns	r3, r3
 808 009a 0C49     		ldr	r1, .L60
 809 009c 1340     		ands	r3, r3, r2
 810 009e 8B64     		str	r3, [r1, #72]
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 811              		.loc 1 389 8
 812 00a0 0CE0     		b	.L58
 813              	.L50:
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 814              		.loc 1 391 8
 815 00a2 0A4B     		ldr	r3, .L60
ARM GAS  /tmp/ccpmnMSk.s 			page 22


 816 00a4 1A6D     		ldr	r2, [r3, #80]
 817 00a6 3B68     		ldr	r3, [r7]
 818 00a8 03F48063 		and	r3, r3, #1024
 819 00ac DB43     		mvns	r3, r3
 820 00ae 0749     		ldr	r1, .L60
 821 00b0 1340     		ands	r3, r3, r2
 822 00b2 0B65     		str	r3, [r1, #80]
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 823              		.loc 1 392 8
 824 00b4 02E0     		b	.L58
 825              	.L49:
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        status = HAL_ERROR;
 826              		.loc 1 394 15
 827 00b6 0123     		movs	r3, #1
 828 00b8 FB73     		strb	r3, [r7, #15]
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 829              		.loc 1 395 8
 830 00ba 00BF     		nop
 831              	.L58:
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 832              		.loc 1 398 10
 833 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 834              		.loc 1 399 1
 835 00be 1846     		mov	r0, r3
 836 00c0 1437     		adds	r7, r7, #20
 837              	.LCFI37:
 838              		.cfi_def_cfa_offset 4
 839 00c2 BD46     		mov	sp, r7
 840              	.LCFI38:
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 00c4 5DF8047B 		ldr	r7, [sp], #4
 844              	.LCFI39:
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 00c8 7047     		bx	lr
 848              	.L61:
 849 00ca 00BF     		.align	2
 850              	.L60:
 851 00cc 00700040 		.word	1073770496
 852              		.cfi_endproc
 853              	.LFE139:
 855              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 856              		.align	1
 857              		.global	HAL_PWREx_EnableGPIOPullDown
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	HAL_PWREx_EnableGPIOPullDown:
 864              	.LFB140:
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccpmnMSk.s 			page 23


 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes.
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved.
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_G
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 865              		.loc 1 425 1
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 16
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870 0000 80B4     		push	{r7}
 871              	.LCFI40:
 872              		.cfi_def_cfa_offset 4
 873              		.cfi_offset 7, -4
 874 0002 85B0     		sub	sp, sp, #20
 875              	.LCFI41:
 876              		.cfi_def_cfa_offset 24
 877 0004 00AF     		add	r7, sp, #0
 878              	.LCFI42:
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 881 0008 3960     		str	r1, [r7]
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 882              		.loc 1 426 21
 883 000a 0023     		movs	r3, #0
 884 000c FB73     		strb	r3, [r7, #15]
 885 000e 7B68     		ldr	r3, [r7, #4]
 886 0010 062B     		cmp	r3, #6
 887 0012 7FD8     		bhi	.L63
 888 0014 01A2     		adr	r2, .L65
 889 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 890 001a 00BF     		.p2align 2
 891              	.L65:
 892 001c 39000000 		.word	.L71+1
 893 0020 5D000000 		.word	.L70+1
 894 0024 7D000000 		.word	.L69+1
 895 0028 99000000 		.word	.L68+1
 896 002c B5000000 		.word	.L67+1
ARM GAS  /tmp/ccpmnMSk.s 			page 24


 897 0030 D1000000 		.word	.L66+1
 898 0034 F9000000 		.word	.L64+1
 899              		.p2align 1
 900              	.L71:
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 901              		.loc 1 434 8
 902 0038 3B4B     		ldr	r3, .L74
 903 003a 5A6A     		ldr	r2, [r3, #36]
 904 003c 3B68     		ldr	r3, [r7]
 905 003e 23F42043 		bic	r3, r3, #40960
 906 0042 3949     		ldr	r1, .L74
 907 0044 1343     		orrs	r3, r3, r2
 908 0046 4B62     		str	r3, [r1, #36]
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 909              		.loc 1 435 8
 910 0048 374B     		ldr	r3, .L74
 911 004a 1A6A     		ldr	r2, [r3, #32]
 912 004c 3B68     		ldr	r3, [r7]
 913 004e 23F48043 		bic	r3, r3, #16384
 914 0052 DB43     		mvns	r3, r3
 915 0054 3449     		ldr	r1, .L74
 916 0056 1340     		ands	r3, r3, r2
 917 0058 0B62     		str	r3, [r1, #32]
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 918              		.loc 1 436 8
 919 005a 5EE0     		b	.L72
 920              	.L70:
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 921              		.loc 1 438 8
 922 005c 324B     		ldr	r3, .L74
 923 005e DA6A     		ldr	r2, [r3, #44]
 924 0060 3B68     		ldr	r3, [r7]
 925 0062 23F01003 		bic	r3, r3, #16
 926 0066 3049     		ldr	r1, .L74
 927 0068 1343     		orrs	r3, r3, r2
 928 006a CB62     		str	r3, [r1, #44]
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 929              		.loc 1 439 8
 930 006c 2E4B     		ldr	r3, .L74
 931 006e 9A6A     		ldr	r2, [r3, #40]
 932 0070 3B68     		ldr	r3, [r7]
 933 0072 DB43     		mvns	r3, r3
 934 0074 2C49     		ldr	r1, .L74
 935 0076 1340     		ands	r3, r3, r2
 936 0078 8B62     		str	r3, [r1, #40]
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 937              		.loc 1 440 8
 938 007a 4EE0     		b	.L72
 939              	.L69:
ARM GAS  /tmp/ccpmnMSk.s 			page 25


 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 940              		.loc 1 442 8
 941 007c 2A4B     		ldr	r3, .L74
 942 007e 5A6B     		ldr	r2, [r3, #52]
 943 0080 2949     		ldr	r1, .L74
 944 0082 3B68     		ldr	r3, [r7]
 945 0084 1343     		orrs	r3, r3, r2
 946 0086 4B63     		str	r3, [r1, #52]
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 947              		.loc 1 443 8
 948 0088 274B     		ldr	r3, .L74
 949 008a 1A6B     		ldr	r2, [r3, #48]
 950 008c 3B68     		ldr	r3, [r7]
 951 008e DB43     		mvns	r3, r3
 952 0090 2549     		ldr	r1, .L74
 953 0092 1340     		ands	r3, r3, r2
 954 0094 0B63     		str	r3, [r1, #48]
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 955              		.loc 1 444 8
 956 0096 40E0     		b	.L72
 957              	.L68:
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 958              		.loc 1 446 8
 959 0098 234B     		ldr	r3, .L74
 960 009a DA6B     		ldr	r2, [r3, #60]
 961 009c 2249     		ldr	r1, .L74
 962 009e 3B68     		ldr	r3, [r7]
 963 00a0 1343     		orrs	r3, r3, r2
 964 00a2 CB63     		str	r3, [r1, #60]
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 965              		.loc 1 447 8
 966 00a4 204B     		ldr	r3, .L74
 967 00a6 9A6B     		ldr	r2, [r3, #56]
 968 00a8 3B68     		ldr	r3, [r7]
 969 00aa DB43     		mvns	r3, r3
 970 00ac 1E49     		ldr	r1, .L74
 971 00ae 1340     		ands	r3, r3, r2
 972 00b0 8B63     		str	r3, [r1, #56]
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 973              		.loc 1 448 8
 974 00b2 32E0     		b	.L72
 975              	.L67:
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 976              		.loc 1 450 8
 977 00b4 1C4B     		ldr	r3, .L74
 978 00b6 5A6C     		ldr	r2, [r3, #68]
 979 00b8 1B49     		ldr	r1, .L74
 980 00ba 3B68     		ldr	r3, [r7]
 981 00bc 1343     		orrs	r3, r3, r2
 982 00be 4B64     		str	r3, [r1, #68]
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 983              		.loc 1 451 8
 984 00c0 194B     		ldr	r3, .L74
 985 00c2 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /tmp/ccpmnMSk.s 			page 26


 986 00c4 3B68     		ldr	r3, [r7]
 987 00c6 DB43     		mvns	r3, r3
 988 00c8 1749     		ldr	r1, .L74
 989 00ca 1340     		ands	r3, r3, r2
 990 00cc 0B64     		str	r3, [r1, #64]
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 991              		.loc 1 452 8
 992 00ce 24E0     		b	.L72
 993              	.L66:
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 994              		.loc 1 454 8
 995 00d0 154B     		ldr	r3, .L74
 996 00d2 DA6C     		ldr	r2, [r3, #76]
 997 00d4 3968     		ldr	r1, [r7]
 998 00d6 40F20763 		movw	r3, #1543
 999 00da 0B40     		ands	r3, r3, r1
 1000 00dc 1249     		ldr	r1, .L74
 1001 00de 1343     		orrs	r3, r3, r2
 1002 00e0 CB64     		str	r3, [r1, #76]
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 1003              		.loc 1 455 8
 1004 00e2 114B     		ldr	r3, .L74
 1005 00e4 9A6C     		ldr	r2, [r3, #72]
 1006 00e6 3968     		ldr	r1, [r7]
 1007 00e8 40F20763 		movw	r3, #1543
 1008 00ec 0B40     		ands	r3, r3, r1
 1009 00ee DB43     		mvns	r3, r3
 1010 00f0 0D49     		ldr	r1, .L74
 1011 00f2 1340     		ands	r3, r3, r2
 1012 00f4 8B64     		str	r3, [r1, #72]
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1013              		.loc 1 456 8
 1014 00f6 10E0     		b	.L72
 1015              	.L64:
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 1016              		.loc 1 458 8
 1017 00f8 0B4B     		ldr	r3, .L74
 1018 00fa 0B4A     		ldr	r2, .L74
 1019 00fc 5B6D     		ldr	r3, [r3, #84]
 1020 00fe 5365     		str	r3, [r2, #84]
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 1021              		.loc 1 459 8
 1022 0100 094B     		ldr	r3, .L74
 1023 0102 1A6D     		ldr	r2, [r3, #80]
 1024 0104 3B68     		ldr	r3, [r7]
 1025 0106 03F48063 		and	r3, r3, #1024
 1026 010a DB43     		mvns	r3, r3
 1027 010c 0649     		ldr	r1, .L74
 1028 010e 1340     		ands	r3, r3, r2
 1029 0110 0B65     		str	r3, [r1, #80]
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1030              		.loc 1 460 8
 1031 0112 02E0     		b	.L72
 1032              	.L63:
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
ARM GAS  /tmp/ccpmnMSk.s 			page 27


 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1033              		.loc 1 462 14
 1034 0114 0123     		movs	r3, #1
 1035 0116 FB73     		strb	r3, [r7, #15]
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1036              		.loc 1 463 7
 1037 0118 00BF     		nop
 1038              	.L72:
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 1039              		.loc 1 466 10
 1040 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1041              		.loc 1 467 1
 1042 011c 1846     		mov	r0, r3
 1043 011e 1437     		adds	r7, r7, #20
 1044              	.LCFI43:
 1045              		.cfi_def_cfa_offset 4
 1046 0120 BD46     		mov	sp, r7
 1047              	.LCFI44:
 1048              		.cfi_def_cfa_register 13
 1049              		@ sp needed
 1050 0122 5DF8047B 		ldr	r7, [sp], #4
 1051              	.LCFI45:
 1052              		.cfi_restore 7
 1053              		.cfi_def_cfa_offset 0
 1054 0126 7047     		bx	lr
 1055              	.L75:
 1056              		.align	2
 1057              	.L74:
 1058 0128 00700040 		.word	1073770496
 1059              		.cfi_endproc
 1060              	.LFE140:
 1062              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 1063              		.align	1
 1064              		.global	HAL_PWREx_DisableGPIOPullDown
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv4-sp-d16
 1070              	HAL_PWREx_DisableGPIOPullDown:
 1071              	.LFB141:
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes.
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_G
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
ARM GAS  /tmp/ccpmnMSk.s 			page 28


 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1072              		.loc 1 486 1
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 16
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 0000 80B4     		push	{r7}
 1078              	.LCFI46:
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 7, -4
 1081 0002 85B0     		sub	sp, sp, #20
 1082              	.LCFI47:
 1083              		.cfi_def_cfa_offset 24
 1084 0004 00AF     		add	r7, sp, #0
 1085              	.LCFI48:
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]
 1088 0008 3960     		str	r1, [r7]
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1089              		.loc 1 487 21
 1090 000a 0023     		movs	r3, #0
 1091 000c FB73     		strb	r3, [r7, #15]
 1092 000e 7B68     		ldr	r3, [r7, #4]
 1093 0010 062B     		cmp	r3, #6
 1094 0012 4DD8     		bhi	.L77
 1095 0014 01A2     		adr	r2, .L79
 1096 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1097 001a 00BF     		.p2align 2
 1098              	.L79:
 1099 001c 39000000 		.word	.L85+1
 1100 0020 4D000000 		.word	.L84+1
 1101 0024 61000000 		.word	.L83+1
 1102 0028 71000000 		.word	.L82+1
 1103 002c 81000000 		.word	.L81+1
 1104 0030 91000000 		.word	.L80+1
 1105 0034 A7000000 		.word	.L78+1
 1106              		.p2align 1
 1107              	.L85:
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 1108              		.loc 1 495 8
 1109 0038 224B     		ldr	r3, .L88
 1110 003a 5A6A     		ldr	r2, [r3, #36]
 1111 003c 3B68     		ldr	r3, [r7]
 1112 003e 23F42043 		bic	r3, r3, #40960
 1113 0042 DB43     		mvns	r3, r3
 1114 0044 1F49     		ldr	r1, .L88
ARM GAS  /tmp/ccpmnMSk.s 			page 29


 1115 0046 1340     		ands	r3, r3, r2
 1116 0048 4B62     		str	r3, [r1, #36]
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1117              		.loc 1 496 8
 1118 004a 34E0     		b	.L86
 1119              	.L84:
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 1120              		.loc 1 498 8
 1121 004c 1D4B     		ldr	r3, .L88
 1122 004e DA6A     		ldr	r2, [r3, #44]
 1123 0050 3B68     		ldr	r3, [r7]
 1124 0052 23F01003 		bic	r3, r3, #16
 1125 0056 DB43     		mvns	r3, r3
 1126 0058 1A49     		ldr	r1, .L88
 1127 005a 1340     		ands	r3, r3, r2
 1128 005c CB62     		str	r3, [r1, #44]
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1129              		.loc 1 499 8
 1130 005e 2AE0     		b	.L86
 1131              	.L83:
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 1132              		.loc 1 501 8
 1133 0060 184B     		ldr	r3, .L88
 1134 0062 5A6B     		ldr	r2, [r3, #52]
 1135 0064 3B68     		ldr	r3, [r7]
 1136 0066 DB43     		mvns	r3, r3
 1137 0068 1649     		ldr	r1, .L88
 1138 006a 1340     		ands	r3, r3, r2
 1139 006c 4B63     		str	r3, [r1, #52]
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1140              		.loc 1 502 8
 1141 006e 22E0     		b	.L86
 1142              	.L82:
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 1143              		.loc 1 504 8
 1144 0070 144B     		ldr	r3, .L88
 1145 0072 DA6B     		ldr	r2, [r3, #60]
 1146 0074 3B68     		ldr	r3, [r7]
 1147 0076 DB43     		mvns	r3, r3
 1148 0078 1249     		ldr	r1, .L88
 1149 007a 1340     		ands	r3, r3, r2
 1150 007c CB63     		str	r3, [r1, #60]
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1151              		.loc 1 505 8
 1152 007e 1AE0     		b	.L86
 1153              	.L81:
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 1154              		.loc 1 507 8
 1155 0080 104B     		ldr	r3, .L88
 1156 0082 5A6C     		ldr	r2, [r3, #68]
 1157 0084 3B68     		ldr	r3, [r7]
 1158 0086 DB43     		mvns	r3, r3
 1159 0088 0E49     		ldr	r1, .L88
ARM GAS  /tmp/ccpmnMSk.s 			page 30


 1160 008a 1340     		ands	r3, r3, r2
 1161 008c 4B64     		str	r3, [r1, #68]
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1162              		.loc 1 508 8
 1163 008e 12E0     		b	.L86
 1164              	.L80:
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 1165              		.loc 1 510 8
 1166 0090 0C4B     		ldr	r3, .L88
 1167 0092 DA6C     		ldr	r2, [r3, #76]
 1168 0094 3968     		ldr	r1, [r7]
 1169 0096 40F20763 		movw	r3, #1543
 1170 009a 0B40     		ands	r3, r3, r1
 1171 009c DB43     		mvns	r3, r3
 1172 009e 0949     		ldr	r1, .L88
 1173 00a0 1340     		ands	r3, r3, r2
 1174 00a2 CB64     		str	r3, [r1, #76]
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1175              		.loc 1 511 8
 1176 00a4 07E0     		b	.L86
 1177              	.L78:
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 1178              		.loc 1 513 8
 1179 00a6 074B     		ldr	r3, .L88
 1180 00a8 064A     		ldr	r2, .L88
 1181 00aa 5B6D     		ldr	r3, [r3, #84]
 1182 00ac 5365     		str	r3, [r2, #84]
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1183              		.loc 1 514 8
 1184 00ae 02E0     		b	.L86
 1185              	.L77:
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1186              		.loc 1 516 14
 1187 00b0 0123     		movs	r3, #1
 1188 00b2 FB73     		strb	r3, [r7, #15]
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1189              		.loc 1 517 7
 1190 00b4 00BF     		nop
 1191              	.L86:
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 1192              		.loc 1 520 10
 1193 00b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1194              		.loc 1 521 1
 1195 00b8 1846     		mov	r0, r3
 1196 00ba 1437     		adds	r7, r7, #20
 1197              	.LCFI49:
 1198              		.cfi_def_cfa_offset 4
 1199 00bc BD46     		mov	sp, r7
 1200              	.LCFI50:
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed
ARM GAS  /tmp/ccpmnMSk.s 			page 31


 1203 00be 5DF8047B 		ldr	r7, [sp], #4
 1204              	.LCFI51:
 1205              		.cfi_restore 7
 1206              		.cfi_def_cfa_offset 0
 1207 00c2 7047     		bx	lr
 1208              	.L89:
 1209              		.align	2
 1210              	.L88:
 1211 00c4 00700040 		.word	1073770496
 1212              		.cfi_endproc
 1213              	.LFE141:
 1215              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1216              		.align	1
 1217              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu fpv4-sp-d16
 1223              	HAL_PWREx_EnablePullUpPullDownConfig:
 1224              	.LFB142:
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher).
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1225              		.loc 1 536 1
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230 0000 80B4     		push	{r7}
 1231              	.LCFI52:
 1232              		.cfi_def_cfa_offset 4
 1233              		.cfi_offset 7, -4
 1234 0002 00AF     		add	r7, sp, #0
 1235              	.LCFI53:
 1236              		.cfi_def_cfa_register 7
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1237              		.loc 1 537 3
 1238 0004 054B     		ldr	r3, .L91
 1239 0006 9B68     		ldr	r3, [r3, #8]
 1240 0008 044A     		ldr	r2, .L91
 1241 000a 43F48063 		orr	r3, r3, #1024
 1242 000e 9360     		str	r3, [r2, #8]
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1243              		.loc 1 538 1
 1244 0010 00BF     		nop
ARM GAS  /tmp/ccpmnMSk.s 			page 32


 1245 0012 BD46     		mov	sp, r7
 1246              	.LCFI54:
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 0014 5DF8047B 		ldr	r7, [sp], #4
 1250              	.LCFI55:
 1251              		.cfi_restore 7
 1252              		.cfi_def_cfa_offset 0
 1253 0018 7047     		bx	lr
 1254              	.L92:
 1255 001a 00BF     		.align	2
 1256              	.L91:
 1257 001c 00700040 		.word	1073770496
 1258              		.cfi_endproc
 1259              	.LFE142:
 1261              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1262              		.align	1
 1263              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	HAL_PWREx_DisablePullUpPullDownConfig:
 1270              	.LFB143:
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1271              		.loc 1 548 1
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 1276 0000 80B4     		push	{r7}
 1277              	.LCFI56:
 1278              		.cfi_def_cfa_offset 4
 1279              		.cfi_offset 7, -4
 1280 0002 00AF     		add	r7, sp, #0
 1281              	.LCFI57:
 1282              		.cfi_def_cfa_register 7
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1283              		.loc 1 549 3
 1284 0004 054B     		ldr	r3, .L94
 1285 0006 9B68     		ldr	r3, [r3, #8]
 1286 0008 044A     		ldr	r2, .L94
 1287 000a 23F48063 		bic	r3, r3, #1024
 1288 000e 9360     		str	r3, [r2, #8]
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1289              		.loc 1 550 1
 1290 0010 00BF     		nop
 1291 0012 BD46     		mov	sp, r7
ARM GAS  /tmp/ccpmnMSk.s 			page 33


 1292              	.LCFI58:
 1293              		.cfi_def_cfa_register 13
 1294              		@ sp needed
 1295 0014 5DF8047B 		ldr	r7, [sp], #4
 1296              	.LCFI59:
 1297              		.cfi_restore 7
 1298              		.cfi_def_cfa_offset 0
 1299 0018 7047     		bx	lr
 1300              	.L95:
 1301 001a 00BF     		.align	2
 1302              	.L94:
 1303 001c 00700040 		.word	1073770496
 1304              		.cfi_endproc
 1305              	.LFE143:
 1307              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1308              		.align	1
 1309              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu fpv4-sp-d16
 1315              	HAL_PWREx_EnableSRAM2ContentRetention:
 1316              	.LFB144:
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1317              		.loc 1 561 1
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322 0000 80B4     		push	{r7}
 1323              	.LCFI60:
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 7, -4
 1326 0002 00AF     		add	r7, sp, #0
 1327              	.LCFI61:
 1328              		.cfi_def_cfa_register 7
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
 1329              		.loc 1 562 3
 1330 0004 054B     		ldr	r3, .L97
 1331 0006 9B68     		ldr	r3, [r3, #8]
 1332 0008 044A     		ldr	r2, .L97
 1333 000a 43F48073 		orr	r3, r3, #256
 1334 000e 9360     		str	r3, [r2, #8]
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1335              		.loc 1 563 1
 1336 0010 00BF     		nop
 1337 0012 BD46     		mov	sp, r7
ARM GAS  /tmp/ccpmnMSk.s 			page 34


 1338              	.LCFI62:
 1339              		.cfi_def_cfa_register 13
 1340              		@ sp needed
 1341 0014 5DF8047B 		ldr	r7, [sp], #4
 1342              	.LCFI63:
 1343              		.cfi_restore 7
 1344              		.cfi_def_cfa_offset 0
 1345 0018 7047     		bx	lr
 1346              	.L98:
 1347 001a 00BF     		.align	2
 1348              	.L97:
 1349 001c 00700040 		.word	1073770496
 1350              		.cfi_endproc
 1351              	.LFE144:
 1353              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1354              		.align	1
 1355              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1359              		.fpu fpv4-sp-d16
 1361              	HAL_PWREx_DisableSRAM2ContentRetention:
 1362              	.LFB145:
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and its content is lost.
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1363              		.loc 1 573 1
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 1, uses_anonymous_args = 0
 1367              		@ link register save eliminated.
 1368 0000 80B4     		push	{r7}
 1369              	.LCFI64:
 1370              		.cfi_def_cfa_offset 4
 1371              		.cfi_offset 7, -4
 1372 0002 00AF     		add	r7, sp, #0
 1373              	.LCFI65:
 1374              		.cfi_def_cfa_register 7
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1375              		.loc 1 574 3
 1376 0004 054B     		ldr	r3, .L100
 1377 0006 9B68     		ldr	r3, [r3, #8]
 1378 0008 044A     		ldr	r2, .L100
 1379 000a 23F48073 		bic	r3, r3, #256
 1380 000e 9360     		str	r3, [r2, #8]
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1381              		.loc 1 575 1
 1382 0010 00BF     		nop
 1383 0012 BD46     		mov	sp, r7
 1384              	.LCFI66:
ARM GAS  /tmp/ccpmnMSk.s 			page 35


 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 0014 5DF8047B 		ldr	r7, [sp], #4
 1388              	.LCFI67:
 1389              		.cfi_restore 7
 1390              		.cfi_def_cfa_offset 0
 1391 0018 7047     		bx	lr
 1392              	.L101:
 1393 001a 00BF     		.align	2
 1394              	.L100:
 1395 001c 00700040 		.word	1073770496
 1396              		.cfi_endproc
 1397              	.LFE145:
 1399              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1400              		.align	1
 1401              		.global	HAL_PWREx_EnablePVM1
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	HAL_PWREx_EnablePVM1:
 1408              	.LFB146:
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDA versus FASTCOMP minimum voltage.
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1409              		.loc 1 586 1
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
 1414 0000 80B4     		push	{r7}
 1415              	.LCFI68:
 1416              		.cfi_def_cfa_offset 4
 1417              		.cfi_offset 7, -4
 1418 0002 00AF     		add	r7, sp, #0
 1419              	.LCFI69:
 1420              		.cfi_def_cfa_register 7
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);
 1421              		.loc 1 587 3
 1422 0004 054B     		ldr	r3, .L103
 1423 0006 5B68     		ldr	r3, [r3, #4]
 1424 0008 044A     		ldr	r2, .L103
 1425 000a 43F01003 		orr	r3, r3, #16
 1426 000e 5360     		str	r3, [r2, #4]
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1427              		.loc 1 588 1
 1428 0010 00BF     		nop
 1429 0012 BD46     		mov	sp, r7
 1430              	.LCFI70:
ARM GAS  /tmp/ccpmnMSk.s 			page 36


 1431              		.cfi_def_cfa_register 13
 1432              		@ sp needed
 1433 0014 5DF8047B 		ldr	r7, [sp], #4
 1434              	.LCFI71:
 1435              		.cfi_restore 7
 1436              		.cfi_def_cfa_offset 0
 1437 0018 7047     		bx	lr
 1438              	.L104:
 1439 001a 00BF     		.align	2
 1440              	.L103:
 1441 001c 00700040 		.word	1073770496
 1442              		.cfi_endproc
 1443              	.LFE146:
 1445              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1446              		.align	1
 1447              		.global	HAL_PWREx_DisablePVM1
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	HAL_PWREx_DisablePVM1:
 1454              	.LFB147:
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDA versus FASTCOMP minimum voltage.
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1455              		.loc 1 595 1
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460 0000 80B4     		push	{r7}
 1461              	.LCFI72:
 1462              		.cfi_def_cfa_offset 4
 1463              		.cfi_offset 7, -4
 1464 0002 00AF     		add	r7, sp, #0
 1465              	.LCFI73:
 1466              		.cfi_def_cfa_register 7
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);
 1467              		.loc 1 596 3
 1468 0004 054B     		ldr	r3, .L106
 1469 0006 5B68     		ldr	r3, [r3, #4]
 1470 0008 044A     		ldr	r2, .L106
 1471 000a 23F01003 		bic	r3, r3, #16
 1472 000e 5360     		str	r3, [r2, #4]
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1473              		.loc 1 597 1
 1474 0010 00BF     		nop
 1475 0012 BD46     		mov	sp, r7
 1476              	.LCFI74:
 1477              		.cfi_def_cfa_register 13
 1478              		@ sp needed
 1479 0014 5DF8047B 		ldr	r7, [sp], #4
 1480              	.LCFI75:
ARM GAS  /tmp/ccpmnMSk.s 			page 37


 1481              		.cfi_restore 7
 1482              		.cfi_def_cfa_offset 0
 1483 0018 7047     		bx	lr
 1484              	.L107:
 1485 001a 00BF     		.align	2
 1486              	.L106:
 1487 001c 00700040 		.word	1073770496
 1488              		.cfi_endproc
 1489              	.LFE147:
 1491              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1492              		.align	1
 1493              		.global	HAL_PWREx_EnablePVM2
 1494              		.syntax unified
 1495              		.thumb
 1496              		.thumb_func
 1497              		.fpu fpv4-sp-d16
 1499              	HAL_PWREx_EnablePVM2:
 1500              	.LFB148:
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDA versus FASTDAC minimum voltage.
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1501              		.loc 1 607 1
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505              		@ link register save eliminated.
 1506 0000 80B4     		push	{r7}
 1507              	.LCFI76:
 1508              		.cfi_def_cfa_offset 4
 1509              		.cfi_offset 7, -4
 1510 0002 00AF     		add	r7, sp, #0
 1511              	.LCFI77:
 1512              		.cfi_def_cfa_register 7
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);
 1513              		.loc 1 608 3
 1514 0004 054B     		ldr	r3, .L109
 1515 0006 5B68     		ldr	r3, [r3, #4]
 1516 0008 044A     		ldr	r2, .L109
 1517 000a 43F02003 		orr	r3, r3, #32
 1518 000e 5360     		str	r3, [r2, #4]
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1519              		.loc 1 609 1
 1520 0010 00BF     		nop
 1521 0012 BD46     		mov	sp, r7
 1522              	.LCFI78:
 1523              		.cfi_def_cfa_register 13
 1524              		@ sp needed
 1525 0014 5DF8047B 		ldr	r7, [sp], #4
 1526              	.LCFI79:
 1527              		.cfi_restore 7
ARM GAS  /tmp/ccpmnMSk.s 			page 38


 1528              		.cfi_def_cfa_offset 0
 1529 0018 7047     		bx	lr
 1530              	.L110:
 1531 001a 00BF     		.align	2
 1532              	.L109:
 1533 001c 00700040 		.word	1073770496
 1534              		.cfi_endproc
 1535              	.LFE148:
 1537              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1538              		.align	1
 1539              		.global	HAL_PWREx_DisablePVM2
 1540              		.syntax unified
 1541              		.thumb
 1542              		.thumb_func
 1543              		.fpu fpv4-sp-d16
 1545              	HAL_PWREx_DisablePVM2:
 1546              	.LFB149:
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDA versus FASTDAC minimum voltage.
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1547              		.loc 1 616 1
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 1, uses_anonymous_args = 0
 1551              		@ link register save eliminated.
 1552 0000 80B4     		push	{r7}
 1553              	.LCFI80:
 1554              		.cfi_def_cfa_offset 4
 1555              		.cfi_offset 7, -4
 1556 0002 00AF     		add	r7, sp, #0
 1557              	.LCFI81:
 1558              		.cfi_def_cfa_register 7
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);
 1559              		.loc 1 617 3
 1560 0004 054B     		ldr	r3, .L112
 1561 0006 5B68     		ldr	r3, [r3, #4]
 1562 0008 044A     		ldr	r2, .L112
 1563 000a 23F02003 		bic	r3, r3, #32
 1564 000e 5360     		str	r3, [r2, #4]
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1565              		.loc 1 618 1
 1566 0010 00BF     		nop
 1567 0012 BD46     		mov	sp, r7
 1568              	.LCFI82:
 1569              		.cfi_def_cfa_register 13
 1570              		@ sp needed
 1571 0014 5DF8047B 		ldr	r7, [sp], #4
 1572              	.LCFI83:
 1573              		.cfi_restore 7
 1574              		.cfi_def_cfa_offset 0
 1575 0018 7047     		bx	lr
 1576              	.L113:
 1577 001a 00BF     		.align	2
ARM GAS  /tmp/ccpmnMSk.s 			page 39


 1578              	.L112:
 1579 001c 00700040 		.word	1073770496
 1580              		.cfi_endproc
 1581              	.LFE149:
 1583              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1584              		.align	1
 1585              		.global	HAL_PWREx_EnablePVM3
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu fpv4-sp-d16
 1591              	HAL_PWREx_EnablePVM3:
 1592              	.LFB150:
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus ADC minimum voltage 1.62V.
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1593              		.loc 1 627 1
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 0
 1596              		@ frame_needed = 1, uses_anonymous_args = 0
 1597              		@ link register save eliminated.
 1598 0000 80B4     		push	{r7}
 1599              	.LCFI84:
 1600              		.cfi_def_cfa_offset 4
 1601              		.cfi_offset 7, -4
 1602 0002 00AF     		add	r7, sp, #0
 1603              	.LCFI85:
 1604              		.cfi_def_cfa_register 7
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);
 1605              		.loc 1 628 3
 1606 0004 054B     		ldr	r3, .L115
 1607 0006 5B68     		ldr	r3, [r3, #4]
 1608 0008 044A     		ldr	r2, .L115
 1609 000a 43F04003 		orr	r3, r3, #64
 1610 000e 5360     		str	r3, [r2, #4]
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1611              		.loc 1 629 1
 1612 0010 00BF     		nop
 1613 0012 BD46     		mov	sp, r7
 1614              	.LCFI86:
 1615              		.cfi_def_cfa_register 13
 1616              		@ sp needed
 1617 0014 5DF8047B 		ldr	r7, [sp], #4
 1618              	.LCFI87:
 1619              		.cfi_restore 7
 1620              		.cfi_def_cfa_offset 0
 1621 0018 7047     		bx	lr
 1622              	.L116:
 1623 001a 00BF     		.align	2
 1624              	.L115:
 1625 001c 00700040 		.word	1073770496
ARM GAS  /tmp/ccpmnMSk.s 			page 40


 1626              		.cfi_endproc
 1627              	.LFE150:
 1629              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1630              		.align	1
 1631              		.global	HAL_PWREx_DisablePVM3
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu fpv4-sp-d16
 1637              	HAL_PWREx_DisablePVM3:
 1638              	.LFB151:
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus ADC minimum voltage 1.62V.
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1639              		.loc 1 636 1
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 1, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
 1644 0000 80B4     		push	{r7}
 1645              	.LCFI88:
 1646              		.cfi_def_cfa_offset 4
 1647              		.cfi_offset 7, -4
 1648 0002 00AF     		add	r7, sp, #0
 1649              	.LCFI89:
 1650              		.cfi_def_cfa_register 7
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);
 1651              		.loc 1 637 3
 1652 0004 054B     		ldr	r3, .L118
 1653 0006 5B68     		ldr	r3, [r3, #4]
 1654 0008 044A     		ldr	r2, .L118
 1655 000a 23F04003 		bic	r3, r3, #64
 1656 000e 5360     		str	r3, [r2, #4]
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1657              		.loc 1 638 1
 1658 0010 00BF     		nop
 1659 0012 BD46     		mov	sp, r7
 1660              	.LCFI90:
 1661              		.cfi_def_cfa_register 13
 1662              		@ sp needed
 1663 0014 5DF8047B 		ldr	r7, [sp], #4
 1664              	.LCFI91:
 1665              		.cfi_restore 7
 1666              		.cfi_def_cfa_offset 0
 1667 0018 7047     		bx	lr
 1668              	.L119:
 1669 001a 00BF     		.align	2
 1670              	.L118:
 1671 001c 00700040 		.word	1073770496
 1672              		.cfi_endproc
 1673              	.LFE151:
 1675              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1676              		.align	1
ARM GAS  /tmp/ccpmnMSk.s 			page 41


 1677              		.global	HAL_PWREx_EnablePVM4
 1678              		.syntax unified
 1679              		.thumb
 1680              		.thumb_func
 1681              		.fpu fpv4-sp-d16
 1683              	HAL_PWREx_EnablePVM4:
 1684              	.LFB152:
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4: VDDA versus OPAMP/DAC minimum voltage 1.8V.
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1685              		.loc 1 646 1
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 0
 1688              		@ frame_needed = 1, uses_anonymous_args = 0
 1689              		@ link register save eliminated.
 1690 0000 80B4     		push	{r7}
 1691              	.LCFI92:
 1692              		.cfi_def_cfa_offset 4
 1693              		.cfi_offset 7, -4
 1694 0002 00AF     		add	r7, sp, #0
 1695              	.LCFI93:
 1696              		.cfi_def_cfa_register 7
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);
 1697              		.loc 1 647 3
 1698 0004 054B     		ldr	r3, .L121
 1699 0006 5B68     		ldr	r3, [r3, #4]
 1700 0008 044A     		ldr	r2, .L121
 1701 000a 43F08003 		orr	r3, r3, #128
 1702 000e 5360     		str	r3, [r2, #4]
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1703              		.loc 1 648 1
 1704 0010 00BF     		nop
 1705 0012 BD46     		mov	sp, r7
 1706              	.LCFI94:
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 0014 5DF8047B 		ldr	r7, [sp], #4
 1710              	.LCFI95:
 1711              		.cfi_restore 7
 1712              		.cfi_def_cfa_offset 0
 1713 0018 7047     		bx	lr
 1714              	.L122:
 1715 001a 00BF     		.align	2
 1716              	.L121:
 1717 001c 00700040 		.word	1073770496
 1718              		.cfi_endproc
 1719              	.LFE152:
 1721              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1722              		.align	1
 1723              		.global	HAL_PWREx_DisablePVM4
 1724              		.syntax unified
 1725              		.thumb
ARM GAS  /tmp/ccpmnMSk.s 			page 42


 1726              		.thumb_func
 1727              		.fpu fpv4-sp-d16
 1729              	HAL_PWREx_DisablePVM4:
 1730              	.LFB153:
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4: VDDA versus OPAMP/DAC minimum voltage 1.8V.
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1731              		.loc 1 655 1
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 0
 1734              		@ frame_needed = 1, uses_anonymous_args = 0
 1735              		@ link register save eliminated.
 1736 0000 80B4     		push	{r7}
 1737              	.LCFI96:
 1738              		.cfi_def_cfa_offset 4
 1739              		.cfi_offset 7, -4
 1740 0002 00AF     		add	r7, sp, #0
 1741              	.LCFI97:
 1742              		.cfi_def_cfa_register 7
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);
 1743              		.loc 1 656 3
 1744 0004 054B     		ldr	r3, .L124
 1745 0006 5B68     		ldr	r3, [r3, #4]
 1746 0008 044A     		ldr	r2, .L124
 1747 000a 23F08003 		bic	r3, r3, #128
 1748 000e 5360     		str	r3, [r2, #4]
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1749              		.loc 1 657 1
 1750 0010 00BF     		nop
 1751 0012 BD46     		mov	sp, r7
 1752              	.LCFI98:
 1753              		.cfi_def_cfa_register 13
 1754              		@ sp needed
 1755 0014 5DF8047B 		ldr	r7, [sp], #4
 1756              	.LCFI99:
 1757              		.cfi_restore 7
 1758              		.cfi_def_cfa_offset 0
 1759 0018 7047     		bx	lr
 1760              	.L125:
 1761 001a 00BF     		.align	2
 1762              	.L124:
 1763 001c 00700040 		.word	1073770496
 1764              		.cfi_endproc
 1765              	.LFE153:
 1767              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1768              		.align	1
 1769              		.global	HAL_PWREx_ConfigPVM
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv4-sp-d16
 1775              	HAL_PWREx_ConfigPVM:
 1776              	.LFB154:
ARM GAS  /tmp/ccpmnMSk.s 			page 43


 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL status
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1777              		.loc 1 675 1
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 16
 1780              		@ frame_needed = 1, uses_anonymous_args = 0
 1781              		@ link register save eliminated.
 1782 0000 80B4     		push	{r7}
 1783              	.LCFI100:
 1784              		.cfi_def_cfa_offset 4
 1785              		.cfi_offset 7, -4
 1786 0002 85B0     		sub	sp, sp, #20
 1787              	.LCFI101:
 1788              		.cfi_def_cfa_offset 24
 1789 0004 00AF     		add	r7, sp, #0
 1790              	.LCFI102:
 1791              		.cfi_def_cfa_register 7
 1792 0006 7860     		str	r0, [r7, #4]
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1793              		.loc 1 676 21
 1794 0008 0023     		movs	r3, #0
 1795 000a FB73     		strb	r3, [r7, #15]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      scan through PVMType to detect which PVMx is set and
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1796              		.loc 1 686 21
 1797 000c 7B68     		ldr	r3, [r7, #4]
 1798 000e 1B68     		ldr	r3, [r3]
 1799              		.loc 1 686 3
 1800 0010 802B     		cmp	r3, #128
 1801 0012 00F0EB80 		beq	.L127
 1802 0016 802B     		cmp	r3, #128
 1803 0018 00F23181 		bhi	.L128
 1804 001c 402B     		cmp	r3, #64
ARM GAS  /tmp/ccpmnMSk.s 			page 44


 1805 001e 00F09C80 		beq	.L129
 1806 0022 402B     		cmp	r3, #64
 1807 0024 00F22B81 		bhi	.L128
 1808 0028 102B     		cmp	r3, #16
 1809 002a 02D0     		beq	.L130
 1810 002c 202B     		cmp	r3, #32
 1811 002e 4AD0     		beq	.L131
 1812 0030 25E1     		b	.L128
 1813              	.L130:
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 1814              		.loc 1 691 7
 1815 0032 974B     		ldr	r3, .L154
 1816 0034 5B6A     		ldr	r3, [r3, #36]
 1817 0036 964A     		ldr	r2, .L154
 1818 0038 23F00803 		bic	r3, r3, #8
 1819 003c 5362     		str	r3, [r2, #36]
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1820              		.loc 1 692 7
 1821 003e 944B     		ldr	r3, .L154
 1822 0040 1B6A     		ldr	r3, [r3, #32]
 1823 0042 934A     		ldr	r2, .L154
 1824 0044 23F00803 		bic	r3, r3, #8
 1825 0048 1362     		str	r3, [r2, #32]
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 1826              		.loc 1 693 7
 1827 004a 914B     		ldr	r3, .L154
 1828 004c DB6A     		ldr	r3, [r3, #44]
 1829 004e 904A     		ldr	r2, .L154
 1830 0050 23F00803 		bic	r3, r3, #8
 1831 0054 D362     		str	r3, [r2, #44]
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1832              		.loc 1 694 7
 1833 0056 8E4B     		ldr	r3, .L154
 1834 0058 9B6A     		ldr	r3, [r3, #40]
 1835 005a 8D4A     		ldr	r2, .L154
 1836 005c 23F00803 		bic	r3, r3, #8
 1837 0060 9362     		str	r3, [r2, #40]
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1838              		.loc 1 697 21
 1839 0062 7B68     		ldr	r3, [r7, #4]
 1840 0064 5B68     		ldr	r3, [r3, #4]
 1841              		.loc 1 697 28
 1842 0066 03F48033 		and	r3, r3, #65536
 1843              		.loc 1 697 9
 1844 006a 002B     		cmp	r3, #0
 1845 006c 05D0     		beq	.L132
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 1846              		.loc 1 699 9
 1847 006e 884B     		ldr	r3, .L154
 1848 0070 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/ccpmnMSk.s 			page 45


 1849 0072 874A     		ldr	r2, .L154
 1850 0074 43F00803 		orr	r3, r3, #8
 1851 0078 1362     		str	r3, [r2, #32]
 1852              	.L132:
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1853              		.loc 1 703 21
 1854 007a 7B68     		ldr	r3, [r7, #4]
 1855 007c 5B68     		ldr	r3, [r3, #4]
 1856              		.loc 1 703 28
 1857 007e 03F40033 		and	r3, r3, #131072
 1858              		.loc 1 703 9
 1859 0082 002B     		cmp	r3, #0
 1860 0084 05D0     		beq	.L133
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 1861              		.loc 1 705 9
 1862 0086 824B     		ldr	r3, .L154
 1863 0088 5B6A     		ldr	r3, [r3, #36]
 1864 008a 814A     		ldr	r2, .L154
 1865 008c 43F00803 		orr	r3, r3, #8
 1866 0090 5362     		str	r3, [r2, #36]
 1867              	.L133:
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1868              		.loc 1 709 21
 1869 0092 7B68     		ldr	r3, [r7, #4]
 1870 0094 5B68     		ldr	r3, [r3, #4]
 1871              		.loc 1 709 28
 1872 0096 03F00103 		and	r3, r3, #1
 1873              		.loc 1 709 9
 1874 009a 002B     		cmp	r3, #0
 1875 009c 05D0     		beq	.L134
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 1876              		.loc 1 711 9
 1877 009e 7C4B     		ldr	r3, .L154
 1878 00a0 9B6A     		ldr	r3, [r3, #40]
 1879 00a2 7B4A     		ldr	r2, .L154
 1880 00a4 43F00803 		orr	r3, r3, #8
 1881 00a8 9362     		str	r3, [r2, #40]
 1882              	.L134:
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1883              		.loc 1 714 21
 1884 00aa 7B68     		ldr	r3, [r7, #4]
 1885 00ac 5B68     		ldr	r3, [r3, #4]
 1886              		.loc 1 714 28
 1887 00ae 03F00203 		and	r3, r3, #2
 1888              		.loc 1 714 9
 1889 00b2 002B     		cmp	r3, #0
 1890 00b4 00F0E680 		beq	.L150
ARM GAS  /tmp/ccpmnMSk.s 			page 46


 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 1891              		.loc 1 716 9
 1892 00b8 754B     		ldr	r3, .L154
 1893 00ba DB6A     		ldr	r3, [r3, #44]
 1894 00bc 744A     		ldr	r2, .L154
 1895 00be 43F00803 		orr	r3, r3, #8
 1896 00c2 D362     		str	r3, [r2, #44]
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1897              		.loc 1 718 7
 1898 00c4 DEE0     		b	.L150
 1899              	.L131:
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
 1900              		.loc 1 724 7
 1901 00c6 724B     		ldr	r3, .L154
 1902 00c8 5B6A     		ldr	r3, [r3, #36]
 1903 00ca 714A     		ldr	r2, .L154
 1904 00cc 23F01003 		bic	r3, r3, #16
 1905 00d0 5362     		str	r3, [r2, #36]
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 1906              		.loc 1 725 7
 1907 00d2 6F4B     		ldr	r3, .L154
 1908 00d4 1B6A     		ldr	r3, [r3, #32]
 1909 00d6 6E4A     		ldr	r2, .L154
 1910 00d8 23F01003 		bic	r3, r3, #16
 1911 00dc 1362     		str	r3, [r2, #32]
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
 1912              		.loc 1 726 7
 1913 00de 6C4B     		ldr	r3, .L154
 1914 00e0 DB6A     		ldr	r3, [r3, #44]
 1915 00e2 6B4A     		ldr	r2, .L154
 1916 00e4 23F01003 		bic	r3, r3, #16
 1917 00e8 D362     		str	r3, [r2, #44]
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1918              		.loc 1 727 7
 1919 00ea 694B     		ldr	r3, .L154
 1920 00ec 9B6A     		ldr	r3, [r3, #40]
 1921 00ee 684A     		ldr	r2, .L154
 1922 00f0 23F01003 		bic	r3, r3, #16
 1923 00f4 9362     		str	r3, [r2, #40]
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1924              		.loc 1 730 21
 1925 00f6 7B68     		ldr	r3, [r7, #4]
 1926 00f8 5B68     		ldr	r3, [r3, #4]
 1927              		.loc 1 730 28
 1928 00fa 03F48033 		and	r3, r3, #65536
 1929              		.loc 1 730 9
 1930 00fe 002B     		cmp	r3, #0
 1931 0100 05D0     		beq	.L137
ARM GAS  /tmp/ccpmnMSk.s 			page 47


 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
 1932              		.loc 1 732 9
 1933 0102 634B     		ldr	r3, .L154
 1934 0104 1B6A     		ldr	r3, [r3, #32]
 1935 0106 624A     		ldr	r2, .L154
 1936 0108 43F01003 		orr	r3, r3, #16
 1937 010c 1362     		str	r3, [r2, #32]
 1938              	.L137:
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1939              		.loc 1 736 21
 1940 010e 7B68     		ldr	r3, [r7, #4]
 1941 0110 5B68     		ldr	r3, [r3, #4]
 1942              		.loc 1 736 28
 1943 0112 03F40033 		and	r3, r3, #131072
 1944              		.loc 1 736 9
 1945 0116 002B     		cmp	r3, #0
 1946 0118 05D0     		beq	.L138
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
 1947              		.loc 1 738 9
 1948 011a 5D4B     		ldr	r3, .L154
 1949 011c 5B6A     		ldr	r3, [r3, #36]
 1950 011e 5C4A     		ldr	r2, .L154
 1951 0120 43F01003 		orr	r3, r3, #16
 1952 0124 5362     		str	r3, [r2, #36]
 1953              	.L138:
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1954              		.loc 1 742 21
 1955 0126 7B68     		ldr	r3, [r7, #4]
 1956 0128 5B68     		ldr	r3, [r3, #4]
 1957              		.loc 1 742 28
 1958 012a 03F00103 		and	r3, r3, #1
 1959              		.loc 1 742 9
 1960 012e 002B     		cmp	r3, #0
 1961 0130 05D0     		beq	.L139
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
 1962              		.loc 1 744 9
 1963 0132 574B     		ldr	r3, .L154
 1964 0134 9B6A     		ldr	r3, [r3, #40]
 1965 0136 564A     		ldr	r2, .L154
 1966 0138 43F01003 		orr	r3, r3, #16
 1967 013c 9362     		str	r3, [r2, #40]
 1968              	.L139:
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1969              		.loc 1 747 21
 1970 013e 7B68     		ldr	r3, [r7, #4]
 1971 0140 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccpmnMSk.s 			page 48


 1972              		.loc 1 747 28
 1973 0142 03F00203 		and	r3, r3, #2
 1974              		.loc 1 747 9
 1975 0146 002B     		cmp	r3, #0
 1976 0148 00F09E80 		beq	.L151
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
 1977              		.loc 1 749 9
 1978 014c 504B     		ldr	r3, .L154
 1979 014e DB6A     		ldr	r3, [r3, #44]
 1980 0150 4F4A     		ldr	r2, .L154
 1981 0152 43F01003 		orr	r3, r3, #16
 1982 0156 D362     		str	r3, [r2, #44]
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1983              		.loc 1 751 7
 1984 0158 96E0     		b	.L151
 1985              	.L129:
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 1986              		.loc 1 756 7
 1987 015a 4D4B     		ldr	r3, .L154
 1988 015c 5B6A     		ldr	r3, [r3, #36]
 1989 015e 4C4A     		ldr	r2, .L154
 1990 0160 23F02003 		bic	r3, r3, #32
 1991 0164 5362     		str	r3, [r2, #36]
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 1992              		.loc 1 757 7
 1993 0166 4A4B     		ldr	r3, .L154
 1994 0168 1B6A     		ldr	r3, [r3, #32]
 1995 016a 494A     		ldr	r2, .L154
 1996 016c 23F02003 		bic	r3, r3, #32
 1997 0170 1362     		str	r3, [r2, #32]
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 1998              		.loc 1 758 7
 1999 0172 474B     		ldr	r3, .L154
 2000 0174 DB6A     		ldr	r3, [r3, #44]
 2001 0176 464A     		ldr	r2, .L154
 2002 0178 23F02003 		bic	r3, r3, #32
 2003 017c D362     		str	r3, [r2, #44]
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 2004              		.loc 1 759 7
 2005 017e 444B     		ldr	r3, .L154
 2006 0180 9B6A     		ldr	r3, [r3, #40]
 2007 0182 434A     		ldr	r2, .L154
 2008 0184 23F02003 		bic	r3, r3, #32
 2009 0188 9362     		str	r3, [r2, #40]
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2010              		.loc 1 762 21
 2011 018a 7B68     		ldr	r3, [r7, #4]
 2012 018c 5B68     		ldr	r3, [r3, #4]
 2013              		.loc 1 762 28
ARM GAS  /tmp/ccpmnMSk.s 			page 49


 2014 018e 03F48033 		and	r3, r3, #65536
 2015              		.loc 1 762 9
 2016 0192 002B     		cmp	r3, #0
 2017 0194 05D0     		beq	.L141
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 2018              		.loc 1 764 9
 2019 0196 3E4B     		ldr	r3, .L154
 2020 0198 1B6A     		ldr	r3, [r3, #32]
 2021 019a 3D4A     		ldr	r2, .L154
 2022 019c 43F02003 		orr	r3, r3, #32
 2023 01a0 1362     		str	r3, [r2, #32]
 2024              	.L141:
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2025              		.loc 1 768 21
 2026 01a2 7B68     		ldr	r3, [r7, #4]
 2027 01a4 5B68     		ldr	r3, [r3, #4]
 2028              		.loc 1 768 28
 2029 01a6 03F40033 		and	r3, r3, #131072
 2030              		.loc 1 768 9
 2031 01aa 002B     		cmp	r3, #0
 2032 01ac 05D0     		beq	.L142
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
 2033              		.loc 1 770 9
 2034 01ae 384B     		ldr	r3, .L154
 2035 01b0 5B6A     		ldr	r3, [r3, #36]
 2036 01b2 374A     		ldr	r2, .L154
 2037 01b4 43F02003 		orr	r3, r3, #32
 2038 01b8 5362     		str	r3, [r2, #36]
 2039              	.L142:
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2040              		.loc 1 774 21
 2041 01ba 7B68     		ldr	r3, [r7, #4]
 2042 01bc 5B68     		ldr	r3, [r3, #4]
 2043              		.loc 1 774 28
 2044 01be 03F00103 		and	r3, r3, #1
 2045              		.loc 1 774 9
 2046 01c2 002B     		cmp	r3, #0
 2047 01c4 05D0     		beq	.L143
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 2048              		.loc 1 776 9
 2049 01c6 324B     		ldr	r3, .L154
 2050 01c8 9B6A     		ldr	r3, [r3, #40]
 2051 01ca 314A     		ldr	r2, .L154
 2052 01cc 43F02003 		orr	r3, r3, #32
 2053 01d0 9362     		str	r3, [r2, #40]
 2054              	.L143:
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccpmnMSk.s 			page 50


 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2055              		.loc 1 779 21
 2056 01d2 7B68     		ldr	r3, [r7, #4]
 2057 01d4 5B68     		ldr	r3, [r3, #4]
 2058              		.loc 1 779 28
 2059 01d6 03F00203 		and	r3, r3, #2
 2060              		.loc 1 779 9
 2061 01da 002B     		cmp	r3, #0
 2062 01dc 56D0     		beq	.L152
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 2063              		.loc 1 781 9
 2064 01de 2C4B     		ldr	r3, .L154
 2065 01e0 DB6A     		ldr	r3, [r3, #44]
 2066 01e2 2B4A     		ldr	r2, .L154
 2067 01e4 43F02003 		orr	r3, r3, #32
 2068 01e8 D362     		str	r3, [r2, #44]
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 2069              		.loc 1 783 7
 2070 01ea 4FE0     		b	.L152
 2071              	.L127:
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
 2072              		.loc 1 787 7
 2073 01ec 284B     		ldr	r3, .L154
 2074 01ee 5B6A     		ldr	r3, [r3, #36]
 2075 01f0 274A     		ldr	r2, .L154
 2076 01f2 23F04003 		bic	r3, r3, #64
 2077 01f6 5362     		str	r3, [r2, #36]
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 2078              		.loc 1 788 7
 2079 01f8 254B     		ldr	r3, .L154
 2080 01fa 1B6A     		ldr	r3, [r3, #32]
 2081 01fc 244A     		ldr	r2, .L154
 2082 01fe 23F04003 		bic	r3, r3, #64
 2083 0202 1362     		str	r3, [r2, #32]
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();
 2084              		.loc 1 789 7
 2085 0204 224B     		ldr	r3, .L154
 2086 0206 DB6A     		ldr	r3, [r3, #44]
 2087 0208 214A     		ldr	r2, .L154
 2088 020a 23F04003 		bic	r3, r3, #64
 2089 020e D362     		str	r3, [r2, #44]
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 2090              		.loc 1 790 7
 2091 0210 1F4B     		ldr	r3, .L154
 2092 0212 9B6A     		ldr	r3, [r3, #40]
 2093 0214 1E4A     		ldr	r2, .L154
 2094 0216 23F04003 		bic	r3, r3, #64
 2095 021a 9362     		str	r3, [r2, #40]
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2096              		.loc 1 793 21
ARM GAS  /tmp/ccpmnMSk.s 			page 51


 2097 021c 7B68     		ldr	r3, [r7, #4]
 2098 021e 5B68     		ldr	r3, [r3, #4]
 2099              		.loc 1 793 28
 2100 0220 03F48033 		and	r3, r3, #65536
 2101              		.loc 1 793 9
 2102 0224 002B     		cmp	r3, #0
 2103 0226 05D0     		beq	.L145
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
 2104              		.loc 1 795 9
 2105 0228 194B     		ldr	r3, .L154
 2106 022a 1B6A     		ldr	r3, [r3, #32]
 2107 022c 184A     		ldr	r2, .L154
 2108 022e 43F04003 		orr	r3, r3, #64
 2109 0232 1362     		str	r3, [r2, #32]
 2110              	.L145:
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2111              		.loc 1 799 21
 2112 0234 7B68     		ldr	r3, [r7, #4]
 2113 0236 5B68     		ldr	r3, [r3, #4]
 2114              		.loc 1 799 28
 2115 0238 03F40033 		and	r3, r3, #131072
 2116              		.loc 1 799 9
 2117 023c 002B     		cmp	r3, #0
 2118 023e 05D0     		beq	.L146
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
 2119              		.loc 1 801 9
 2120 0240 134B     		ldr	r3, .L154
 2121 0242 5B6A     		ldr	r3, [r3, #36]
 2122 0244 124A     		ldr	r2, .L154
 2123 0246 43F04003 		orr	r3, r3, #64
 2124 024a 5362     		str	r3, [r2, #36]
 2125              	.L146:
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2126              		.loc 1 805 21
 2127 024c 7B68     		ldr	r3, [r7, #4]
 2128 024e 5B68     		ldr	r3, [r3, #4]
 2129              		.loc 1 805 28
 2130 0250 03F00103 		and	r3, r3, #1
 2131              		.loc 1 805 9
 2132 0254 002B     		cmp	r3, #0
 2133 0256 05D0     		beq	.L147
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
 2134              		.loc 1 807 9
 2135 0258 0D4B     		ldr	r3, .L154
 2136 025a 9B6A     		ldr	r3, [r3, #40]
 2137 025c 0C4A     		ldr	r2, .L154
 2138 025e 43F04003 		orr	r3, r3, #64
 2139 0262 9362     		str	r3, [r2, #40]
ARM GAS  /tmp/ccpmnMSk.s 			page 52


 2140              	.L147:
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2141              		.loc 1 810 21
 2142 0264 7B68     		ldr	r3, [r7, #4]
 2143 0266 5B68     		ldr	r3, [r3, #4]
 2144              		.loc 1 810 28
 2145 0268 03F00203 		and	r3, r3, #2
 2146              		.loc 1 810 9
 2147 026c 002B     		cmp	r3, #0
 2148 026e 11D0     		beq	.L153
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
 2149              		.loc 1 812 9
 2150 0270 074B     		ldr	r3, .L154
 2151 0272 DB6A     		ldr	r3, [r3, #44]
 2152 0274 064A     		ldr	r2, .L154
 2153 0276 43F04003 		orr	r3, r3, #64
 2154 027a D362     		str	r3, [r2, #44]
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 2155              		.loc 1 814 7
 2156 027c 0AE0     		b	.L153
 2157              	.L128:
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 2158              		.loc 1 817 14
 2159 027e 0123     		movs	r3, #1
 2160 0280 FB73     		strb	r3, [r7, #15]
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 2161              		.loc 1 818 7
 2162 0282 08E0     		b	.L136
 2163              	.L150:
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 2164              		.loc 1 718 7
 2165 0284 00BF     		nop
 2166 0286 06E0     		b	.L136
 2167              	.L151:
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 2168              		.loc 1 751 7
 2169 0288 00BF     		nop
 2170 028a 04E0     		b	.L136
 2171              	.L152:
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2172              		.loc 1 783 7
 2173 028c 00BF     		nop
 2174 028e 02E0     		b	.L136
 2175              	.L155:
 2176              		.align	2
 2177              	.L154:
 2178 0290 00040140 		.word	1073808384
 2179              	.L153:
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2180              		.loc 1 814 7
 2181 0294 00BF     		nop
ARM GAS  /tmp/ccpmnMSk.s 			page 53


 2182              	.L136:
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 2183              		.loc 1 821 10
 2184 0296 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2185              		.loc 1 822 1
 2186 0298 1846     		mov	r0, r3
 2187 029a 1437     		adds	r7, r7, #20
 2188              	.LCFI103:
 2189              		.cfi_def_cfa_offset 4
 2190 029c BD46     		mov	sp, r7
 2191              	.LCFI104:
 2192              		.cfi_def_cfa_register 13
 2193              		@ sp needed
 2194 029e 5DF8047B 		ldr	r7, [sp], #4
 2195              	.LCFI105:
 2196              		.cfi_restore 7
 2197              		.cfi_def_cfa_offset 0
 2198 02a2 7047     		bx	lr
 2199              		.cfi_endproc
 2200              	.LFE154:
 2202              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 2203              		.align	1
 2204              		.global	HAL_PWREx_EnableLowPowerRunMode
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv4-sp-d16
 2210              	HAL_PWREx_EnableLowPowerRunMode:
 2211              	.LFB155:
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2212              		.loc 1 836 1
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 1, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217 0000 80B4     		push	{r7}
 2218              	.LCFI106:
 2219              		.cfi_def_cfa_offset 4
 2220              		.cfi_offset 7, -4
 2221 0002 00AF     		add	r7, sp, #0
 2222              	.LCFI107:
ARM GAS  /tmp/ccpmnMSk.s 			page 54


 2223              		.cfi_def_cfa_register 7
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 2224              		.loc 1 838 3
 2225 0004 054B     		ldr	r3, .L157
 2226 0006 1B68     		ldr	r3, [r3]
 2227 0008 044A     		ldr	r2, .L157
 2228 000a 43F48043 		orr	r3, r3, #16384
 2229 000e 1360     		str	r3, [r2]
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2230              		.loc 1 839 1
 2231 0010 00BF     		nop
 2232 0012 BD46     		mov	sp, r7
 2233              	.LCFI108:
 2234              		.cfi_def_cfa_register 13
 2235              		@ sp needed
 2236 0014 5DF8047B 		ldr	r7, [sp], #4
 2237              	.LCFI109:
 2238              		.cfi_restore 7
 2239              		.cfi_def_cfa_offset 0
 2240 0018 7047     		bx	lr
 2241              	.L158:
 2242 001a 00BF     		.align	2
 2243              	.L157:
 2244 001c 00700040 		.word	1073770496
 2245              		.cfi_endproc
 2246              	.LFE155:
 2248              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 2249              		.align	1
 2250              		.global	HAL_PWREx_DisableLowPowerRunMode
 2251              		.syntax unified
 2252              		.thumb
 2253              		.thumb_func
 2254              		.fpu fpv4-sp-d16
 2256              	HAL_PWREx_DisableLowPowerRunMode:
 2257              	.LFB156:
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2258              		.loc 1 851 1
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 8
 2261              		@ frame_needed = 1, uses_anonymous_args = 0
 2262              		@ link register save eliminated.
 2263 0000 80B4     		push	{r7}
 2264              	.LCFI110:
 2265              		.cfi_def_cfa_offset 4
 2266              		.cfi_offset 7, -4
ARM GAS  /tmp/ccpmnMSk.s 			page 55


 2267 0002 83B0     		sub	sp, sp, #12
 2268              	.LCFI111:
 2269              		.cfi_def_cfa_offset 16
 2270 0004 00AF     		add	r7, sp, #0
 2271              	.LCFI112:
 2272              		.cfi_def_cfa_register 7
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 2273              		.loc 1 855 3
 2274 0006 174B     		ldr	r3, .L165
 2275 0008 1B68     		ldr	r3, [r3]
 2276 000a 164A     		ldr	r2, .L165
 2277 000c 23F48043 		bic	r3, r3, #16384
 2278 0010 1360     		str	r3, [r2]
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000U));
 2279              		.loc 1 858 67
 2280 0012 154B     		ldr	r3, .L165+4
 2281 0014 1B68     		ldr	r3, [r3]
 2282 0016 154A     		ldr	r2, .L165+8
 2283 0018 A2FB0323 		umull	r2, r3, r2, r3
 2284 001c 9B0C     		lsrs	r3, r3, #18
 2285              		.loc 1 858 19
 2286 001e 3222     		movs	r2, #50
 2287 0020 02FB03F3 		mul	r3, r2, r3
 2288 0024 7B60     		str	r3, [r7, #4]
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2289              		.loc 1 859 9
 2290 0026 02E0     		b	.L160
 2291              	.L162:
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     wait_loop_index--;
 2292              		.loc 1 861 20
 2293 0028 7B68     		ldr	r3, [r7, #4]
 2294 002a 013B     		subs	r3, r3, #1
 2295 002c 7B60     		str	r3, [r7, #4]
 2296              	.L160:
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2297              		.loc 1 859 11
 2298 002e 0D4B     		ldr	r3, .L165
 2299 0030 5B69     		ldr	r3, [r3, #20]
 2300 0032 03F40073 		and	r3, r3, #512
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2301              		.loc 1 859 9
 2302 0036 B3F5007F 		cmp	r3, #512
 2303 003a 02D1     		bne	.L161
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2304              		.loc 1 859 53 discriminator 1
 2305 003c 7B68     		ldr	r3, [r7, #4]
 2306 003e 002B     		cmp	r3, #0
 2307 0040 F2D1     		bne	.L162
 2308              	.L161:
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
ARM GAS  /tmp/ccpmnMSk.s 			page 56


 2309              		.loc 1 863 7
 2310 0042 084B     		ldr	r3, .L165
 2311 0044 5B69     		ldr	r3, [r3, #20]
 2312 0046 03F40073 		and	r3, r3, #512
 2313              		.loc 1 863 6
 2314 004a B3F5007F 		cmp	r3, #512
 2315 004e 01D1     		bne	.L163
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 2316              		.loc 1 865 12
 2317 0050 0323     		movs	r3, #3
 2318 0052 00E0     		b	.L164
 2319              	.L163:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return HAL_OK;
 2320              		.loc 1 868 10
 2321 0054 0023     		movs	r3, #0
 2322              	.L164:
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2323              		.loc 1 869 1
 2324 0056 1846     		mov	r0, r3
 2325 0058 0C37     		adds	r7, r7, #12
 2326              	.LCFI113:
 2327              		.cfi_def_cfa_offset 4
 2328 005a BD46     		mov	sp, r7
 2329              	.LCFI114:
 2330              		.cfi_def_cfa_register 13
 2331              		@ sp needed
 2332 005c 5DF8047B 		ldr	r7, [sp], #4
 2333              	.LCFI115:
 2334              		.cfi_restore 7
 2335              		.cfi_def_cfa_offset 0
 2336 0060 7047     		bx	lr
 2337              	.L166:
 2338 0062 00BF     		.align	2
 2339              	.L165:
 2340 0064 00700040 		.word	1073770496
 2341 0068 00000000 		.word	SystemCoreClock
 2342 006c 83DE1B43 		.word	1125899907
 2343              		.cfi_endproc
 2344              	.LFE156:
 2346              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 2347              		.align	1
 2348              		.global	HAL_PWREx_EnterSTOP0Mode
 2349              		.syntax unified
 2350              		.thumb
 2351              		.thumb_func
 2352              		.fpu fpv4-sp-d16
 2354              	HAL_PWREx_EnterSTOP0Mode:
 2355              	.LFB157:
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
ARM GAS  /tmp/ccpmnMSk.s 			page 57


 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the HSI
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and the HSE oscillators are disabled. Some peripherals with the wakeup capability
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is available.
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is set; the HSI oscillator is selected if STOPWUCK is cleared.
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2356              		.loc 1 895 1
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 8
 2359              		@ frame_needed = 1, uses_anonymous_args = 0
 2360              		@ link register save eliminated.
 2361 0000 80B4     		push	{r7}
 2362              	.LCFI116:
 2363              		.cfi_def_cfa_offset 4
 2364              		.cfi_offset 7, -4
 2365 0002 83B0     		sub	sp, sp, #12
 2366              	.LCFI117:
 2367              		.cfi_def_cfa_offset 16
 2368 0004 00AF     		add	r7, sp, #0
 2369              	.LCFI118:
 2370              		.cfi_def_cfa_register 7
 2371 0006 0346     		mov	r3, r0
 2372 0008 FB71     		strb	r3, [r7, #7]
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 2373              		.loc 1 900 3
 2374 000a 104B     		ldr	r3, .L170
 2375 000c 1B68     		ldr	r3, [r3]
 2376 000e 0F4A     		ldr	r2, .L170
 2377 0010 23F00703 		bic	r3, r3, #7
 2378 0014 1360     		str	r3, [r2]
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2379              		.loc 1 903 3
 2380 0016 0E4B     		ldr	r3, .L170+4
 2381 0018 1B69     		ldr	r3, [r3, #16]
 2382 001a 0D4A     		ldr	r2, .L170+4
 2383 001c 43F00403 		orr	r3, r3, #4
 2384 0020 1361     		str	r3, [r2, #16]
ARM GAS  /tmp/ccpmnMSk.s 			page 58


 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2385              		.loc 1 906 5
 2386 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2387 0024 012B     		cmp	r3, #1
 2388 0026 01D1     		bne	.L168
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFI();
 2389              		.loc 1 909 5
 2390              		.syntax unified
 2391              	@ 909 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2392 0028 30BF     		wfi
 2393              	@ 0 "" 2
 2394              		.thumb
 2395              		.syntax unified
 2396 002a 02E0     		b	.L169
 2397              	.L168:
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __SEV();
 2398              		.loc 1 914 5
 2399              		.syntax unified
 2400              	@ 914 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2401 002c 40BF     		sev
 2402              	@ 0 "" 2
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2403              		.loc 1 915 5
 2404              	@ 915 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2405 002e 20BF     		wfe
 2406              	@ 0 "" 2
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2407              		.loc 1 916 5
 2408              	@ 916 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2409 0030 20BF     		wfe
 2410              	@ 0 "" 2
 2411              		.thumb
 2412              		.syntax unified
 2413              	.L169:
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2414              		.loc 1 920 3
 2415 0032 074B     		ldr	r3, .L170+4
 2416 0034 1B69     		ldr	r3, [r3, #16]
 2417 0036 064A     		ldr	r2, .L170+4
 2418 0038 23F00403 		bic	r3, r3, #4
 2419 003c 1361     		str	r3, [r2, #16]
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2420              		.loc 1 921 1
 2421 003e 00BF     		nop
 2422 0040 0C37     		adds	r7, r7, #12
 2423              	.LCFI119:
ARM GAS  /tmp/ccpmnMSk.s 			page 59


 2424              		.cfi_def_cfa_offset 4
 2425 0042 BD46     		mov	sp, r7
 2426              	.LCFI120:
 2427              		.cfi_def_cfa_register 13
 2428              		@ sp needed
 2429 0044 5DF8047B 		ldr	r7, [sp], #4
 2430              	.LCFI121:
 2431              		.cfi_restore 7
 2432              		.cfi_def_cfa_offset 0
 2433 0048 7047     		bx	lr
 2434              	.L171:
 2435 004a 00BF     		.align	2
 2436              	.L170:
 2437 004c 00700040 		.word	1073770496
 2438 0050 00ED00E0 		.word	-536810240
 2439              		.cfi_endproc
 2440              	.LFE157:
 2442              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 2443              		.align	1
 2444              		.global	HAL_PWREx_EnterSTOP1Mode
 2445              		.syntax unified
 2446              		.thumb
 2447              		.thumb_func
 2448              		.fpu fpv4-sp-d16
 2450              	HAL_PWREx_EnterSTOP1Mode:
 2451              	.LFB158:
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the HSI
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and the HSE oscillators are disabled. Some peripherals with the wakeup capability
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is available.
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is set.
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2452              		.loc 1 946 1
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 8
 2455              		@ frame_needed = 1, uses_anonymous_args = 0
 2456              		@ link register save eliminated.
 2457 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccpmnMSk.s 			page 60


 2458              	.LCFI122:
 2459              		.cfi_def_cfa_offset 4
 2460              		.cfi_offset 7, -4
 2461 0002 83B0     		sub	sp, sp, #12
 2462              	.LCFI123:
 2463              		.cfi_def_cfa_offset 16
 2464 0004 00AF     		add	r7, sp, #0
 2465              	.LCFI124:
 2466              		.cfi_def_cfa_register 7
 2467 0006 0346     		mov	r3, r0
 2468 0008 FB71     		strb	r3, [r7, #7]
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 2469              		.loc 1 951 3
 2470 000a 114B     		ldr	r3, .L175
 2471 000c 1B68     		ldr	r3, [r3]
 2472 000e 23F00703 		bic	r3, r3, #7
 2473 0012 0F4A     		ldr	r2, .L175
 2474 0014 43F00103 		orr	r3, r3, #1
 2475 0018 1360     		str	r3, [r2]
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2476              		.loc 1 954 3
 2477 001a 0E4B     		ldr	r3, .L175+4
 2478 001c 1B69     		ldr	r3, [r3, #16]
 2479 001e 0D4A     		ldr	r2, .L175+4
 2480 0020 43F00403 		orr	r3, r3, #4
 2481 0024 1361     		str	r3, [r2, #16]
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2482              		.loc 1 957 5
 2483 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2484 0028 012B     		cmp	r3, #1
 2485 002a 01D1     		bne	.L173
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFI();
 2486              		.loc 1 960 5
 2487              		.syntax unified
 2488              	@ 960 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2489 002c 30BF     		wfi
 2490              	@ 0 "" 2
 2491              		.thumb
 2492              		.syntax unified
 2493 002e 02E0     		b	.L174
 2494              	.L173:
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __SEV();
 2495              		.loc 1 965 5
ARM GAS  /tmp/ccpmnMSk.s 			page 61


 2496              		.syntax unified
 2497              	@ 965 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2498 0030 40BF     		sev
 2499              	@ 0 "" 2
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2500              		.loc 1 966 5
 2501              	@ 966 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2502 0032 20BF     		wfe
 2503              	@ 0 "" 2
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2504              		.loc 1 967 5
 2505              	@ 967 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2506 0034 20BF     		wfe
 2507              	@ 0 "" 2
 2508              		.thumb
 2509              		.syntax unified
 2510              	.L174:
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2511              		.loc 1 971 3
 2512 0036 074B     		ldr	r3, .L175+4
 2513 0038 1B69     		ldr	r3, [r3, #16]
 2514 003a 064A     		ldr	r2, .L175+4
 2515 003c 23F00403 		bic	r3, r3, #4
 2516 0040 1361     		str	r3, [r2, #16]
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2517              		.loc 1 972 1
 2518 0042 00BF     		nop
 2519 0044 0C37     		adds	r7, r7, #12
 2520              	.LCFI125:
 2521              		.cfi_def_cfa_offset 4
 2522 0046 BD46     		mov	sp, r7
 2523              	.LCFI126:
 2524              		.cfi_def_cfa_register 13
 2525              		@ sp needed
 2526 0048 5DF8047B 		ldr	r7, [sp], #4
 2527              	.LCFI127:
 2528              		.cfi_restore 7
 2529              		.cfi_def_cfa_offset 0
 2530 004c 7047     		bx	lr
 2531              	.L176:
 2532 004e 00BF     		.align	2
 2533              	.L175:
 2534 0050 00700040 		.word	1073770496
 2535 0054 00ED00E0 		.word	-536810240
 2536              		.cfi_endproc
 2537              	.LFE158:
 2539              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 2540              		.align	1
 2541              		.global	HAL_PWREx_EnterSHUTDOWNMode
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2545              		.fpu fpv4-sp-d16
 2547              	HAL_PWREx_EnterSHUTDOWNMode:
ARM GAS  /tmp/ccpmnMSk.s 			page 62


 2548              	.LFB159:
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode.
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the LSI and the HSE oscillators are switched
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off.
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is not available.
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2549              		.loc 1 987 1
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 0
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553              		@ link register save eliminated.
 2554 0000 80B4     		push	{r7}
 2555              	.LCFI128:
 2556              		.cfi_def_cfa_offset 4
 2557              		.cfi_offset 7, -4
 2558 0002 00AF     		add	r7, sp, #0
 2559              	.LCFI129:
 2560              		.cfi_def_cfa_register 7
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 2561              		.loc 1 990 3
 2562 0004 094B     		ldr	r3, .L178
 2563 0006 1B68     		ldr	r3, [r3]
 2564 0008 23F00703 		bic	r3, r3, #7
 2565 000c 074A     		ldr	r2, .L178
 2566 000e 43F00403 		orr	r3, r3, #4
 2567 0012 1360     		str	r3, [r2]
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2568              		.loc 1 993 3
 2569 0014 064B     		ldr	r3, .L178+4
 2570 0016 1B69     		ldr	r3, [r3, #16]
 2571 0018 054A     		ldr	r2, .L178+4
 2572 001a 43F00403 		orr	r3, r3, #4
 2573 001e 1361     		str	r3, [r2, #16]
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   __force_stores();
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   __WFI();
 2574              		.loc 1 1000 3
 2575              		.syntax unified
 2576              	@ 1000 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
ARM GAS  /tmp/ccpmnMSk.s 			page 63


 2577 0020 30BF     		wfi
 2578              	@ 0 "" 2
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2579              		.loc 1 1001 1
 2580              		.thumb
 2581              		.syntax unified
 2582 0022 00BF     		nop
 2583 0024 BD46     		mov	sp, r7
 2584              	.LCFI130:
 2585              		.cfi_def_cfa_register 13
 2586              		@ sp needed
 2587 0026 5DF8047B 		ldr	r7, [sp], #4
 2588              	.LCFI131:
 2589              		.cfi_restore 7
 2590              		.cfi_def_cfa_offset 0
 2591 002a 7047     		bx	lr
 2592              	.L179:
 2593              		.align	2
 2594              	.L178:
 2595 002c 00700040 		.word	1073770496
 2596 0030 00ED00E0 		.word	-536810240
 2597              		.cfi_endproc
 2598              	.LFE159:
 2600              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 2601              		.align	1
 2602              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 2603              		.syntax unified
 2604              		.thumb
 2605              		.thumb_func
 2606              		.fpu fpv4-sp-d16
 2608              	HAL_PWREx_PVD_PVM_IRQHandler:
 2609              	.LFB160:
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2610              		.loc 1 1012 1
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 0
 2613              		@ frame_needed = 1, uses_anonymous_args = 0
 2614 0000 80B5     		push	{r7, lr}
 2615              	.LCFI132:
 2616              		.cfi_def_cfa_offset 8
 2617              		.cfi_offset 7, -8
 2618              		.cfi_offset 14, -4
 2619 0002 00AF     		add	r7, sp, #0
 2620              	.LCFI133:
 2621              		.cfi_def_cfa_register 7
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != 0U)
ARM GAS  /tmp/ccpmnMSk.s 			page 64


 2622              		.loc 1 1014 6
 2623 0004 1C4B     		ldr	r3, .L187
 2624 0006 5B69     		ldr	r3, [r3, #20]
 2625 0008 03F48033 		and	r3, r3, #65536
 2626              		.loc 1 1014 5
 2627 000c 002B     		cmp	r3, #0
 2628 000e 05D0     		beq	.L181
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
 2629              		.loc 1 1017 5
 2630 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 2631              		.loc 1 1020 5
 2632 0014 184B     		ldr	r3, .L187
 2633 0016 4FF48032 		mov	r2, #65536
 2634 001a 5A61     		str	r2, [r3, #20]
 2635              	.L181:
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != 0U)
 2636              		.loc 1 1024 6
 2637 001c 164B     		ldr	r3, .L187
 2638 001e 5B6B     		ldr	r3, [r3, #52]
 2639 0020 03F00803 		and	r3, r3, #8
 2640              		.loc 1 1024 5
 2641 0024 002B     		cmp	r3, #0
 2642 0026 04D0     		beq	.L182
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
 2643              		.loc 1 1027 5
 2644 0028 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
 2645              		.loc 1 1030 5
 2646 002c 124B     		ldr	r3, .L187
 2647 002e 0822     		movs	r2, #8
 2648 0030 5A63     		str	r2, [r3, #52]
 2649              	.L182:
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != 0U)
 2650              		.loc 1 1034 6
 2651 0032 114B     		ldr	r3, .L187
 2652 0034 5B6B     		ldr	r3, [r3, #52]
 2653 0036 03F01003 		and	r3, r3, #16
 2654              		.loc 1 1034 5
 2655 003a 002B     		cmp	r3, #0
 2656 003c 04D0     		beq	.L183
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
ARM GAS  /tmp/ccpmnMSk.s 			page 65


1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
 2657              		.loc 1 1037 5
 2658 003e FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
 2659              		.loc 1 1040 5
 2660 0042 0D4B     		ldr	r3, .L187
 2661 0044 1022     		movs	r2, #16
 2662 0046 5A63     		str	r2, [r3, #52]
 2663              	.L183:
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != 0U)
 2664              		.loc 1 1043 6
 2665 0048 0B4B     		ldr	r3, .L187
 2666 004a 5B6B     		ldr	r3, [r3, #52]
 2667 004c 03F02003 		and	r3, r3, #32
 2668              		.loc 1 1043 5
 2669 0050 002B     		cmp	r3, #0
 2670 0052 04D0     		beq	.L184
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
 2671              		.loc 1 1046 5
 2672 0054 FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
 2673              		.loc 1 1049 5
 2674 0058 074B     		ldr	r3, .L187
 2675 005a 2022     		movs	r2, #32
 2676 005c 5A63     		str	r2, [r3, #52]
 2677              	.L184:
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != 0U)
 2678              		.loc 1 1051 6
 2679 005e 064B     		ldr	r3, .L187
 2680 0060 5B6B     		ldr	r3, [r3, #52]
 2681 0062 03F04003 		and	r3, r3, #64
 2682              		.loc 1 1051 5
 2683 0066 002B     		cmp	r3, #0
 2684 0068 04D0     		beq	.L186
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
 2685              		.loc 1 1054 5
 2686 006a FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
 2687              		.loc 1 1057 5
 2688 006e 024B     		ldr	r3, .L187
 2689 0070 4022     		movs	r2, #64
 2690 0072 5A63     		str	r2, [r3, #52]
 2691              	.L186:
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
ARM GAS  /tmp/ccpmnMSk.s 			page 66


1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2692              		.loc 1 1059 1
 2693 0074 00BF     		nop
 2694 0076 80BD     		pop	{r7, pc}
 2695              	.L188:
 2696              		.align	2
 2697              	.L187:
 2698 0078 00040140 		.word	1073808384
 2699              		.cfi_endproc
 2700              	.LFE160:
 2702              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 2703              		.align	1
 2704              		.weak	HAL_PWREx_PVM1Callback
 2705              		.syntax unified
 2706              		.thumb
 2707              		.thumb_func
 2708              		.fpu fpv4-sp-d16
 2710              	HAL_PWREx_PVM1Callback:
 2711              	.LFB161:
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2712              		.loc 1 1068 1
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 1, uses_anonymous_args = 0
 2716              		@ link register save eliminated.
 2717 0000 80B4     		push	{r7}
 2718              	.LCFI134:
 2719              		.cfi_def_cfa_offset 4
 2720              		.cfi_offset 7, -4
 2721 0002 00AF     		add	r7, sp, #0
 2722              	.LCFI135:
 2723              		.cfi_def_cfa_register 7
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2724              		.loc 1 1072 1
 2725 0004 00BF     		nop
 2726 0006 BD46     		mov	sp, r7
 2727              	.LCFI136:
 2728              		.cfi_def_cfa_register 13
 2729              		@ sp needed
 2730 0008 5DF8047B 		ldr	r7, [sp], #4
 2731              	.LCFI137:
 2732              		.cfi_restore 7
 2733              		.cfi_def_cfa_offset 0
 2734 000c 7047     		bx	lr
 2735              		.cfi_endproc
 2736              	.LFE161:
ARM GAS  /tmp/ccpmnMSk.s 			page 67


 2738              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 2739              		.align	1
 2740              		.weak	HAL_PWREx_PVM2Callback
 2741              		.syntax unified
 2742              		.thumb
 2743              		.thumb_func
 2744              		.fpu fpv4-sp-d16
 2746              	HAL_PWREx_PVM2Callback:
 2747              	.LFB162:
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2748              		.loc 1 1081 1
 2749              		.cfi_startproc
 2750              		@ args = 0, pretend = 0, frame = 0
 2751              		@ frame_needed = 1, uses_anonymous_args = 0
 2752              		@ link register save eliminated.
 2753 0000 80B4     		push	{r7}
 2754              	.LCFI138:
 2755              		.cfi_def_cfa_offset 4
 2756              		.cfi_offset 7, -4
 2757 0002 00AF     		add	r7, sp, #0
 2758              	.LCFI139:
 2759              		.cfi_def_cfa_register 7
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2760              		.loc 1 1085 1
 2761 0004 00BF     		nop
 2762 0006 BD46     		mov	sp, r7
 2763              	.LCFI140:
 2764              		.cfi_def_cfa_register 13
 2765              		@ sp needed
 2766 0008 5DF8047B 		ldr	r7, [sp], #4
 2767              	.LCFI141:
 2768              		.cfi_restore 7
 2769              		.cfi_def_cfa_offset 0
 2770 000c 7047     		bx	lr
 2771              		.cfi_endproc
 2772              	.LFE162:
 2774              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 2775              		.align	1
 2776              		.weak	HAL_PWREx_PVM3Callback
 2777              		.syntax unified
 2778              		.thumb
 2779              		.thumb_func
 2780              		.fpu fpv4-sp-d16
 2782              	HAL_PWREx_PVM3Callback:
 2783              	.LFB163:
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
ARM GAS  /tmp/ccpmnMSk.s 			page 68


1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2784              		.loc 1 1093 1
 2785              		.cfi_startproc
 2786              		@ args = 0, pretend = 0, frame = 0
 2787              		@ frame_needed = 1, uses_anonymous_args = 0
 2788              		@ link register save eliminated.
 2789 0000 80B4     		push	{r7}
 2790              	.LCFI142:
 2791              		.cfi_def_cfa_offset 4
 2792              		.cfi_offset 7, -4
 2793 0002 00AF     		add	r7, sp, #0
 2794              	.LCFI143:
 2795              		.cfi_def_cfa_register 7
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2796              		.loc 1 1097 1
 2797 0004 00BF     		nop
 2798 0006 BD46     		mov	sp, r7
 2799              	.LCFI144:
 2800              		.cfi_def_cfa_register 13
 2801              		@ sp needed
 2802 0008 5DF8047B 		ldr	r7, [sp], #4
 2803              	.LCFI145:
 2804              		.cfi_restore 7
 2805              		.cfi_def_cfa_offset 0
 2806 000c 7047     		bx	lr
 2807              		.cfi_endproc
 2808              	.LFE163:
 2810              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 2811              		.align	1
 2812              		.weak	HAL_PWREx_PVM4Callback
 2813              		.syntax unified
 2814              		.thumb
 2815              		.thumb_func
 2816              		.fpu fpv4-sp-d16
 2818              	HAL_PWREx_PVM4Callback:
 2819              	.LFB164:
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2820              		.loc 1 1104 1
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 0
 2823              		@ frame_needed = 1, uses_anonymous_args = 0
 2824              		@ link register save eliminated.
ARM GAS  /tmp/ccpmnMSk.s 			page 69


 2825 0000 80B4     		push	{r7}
 2826              	.LCFI146:
 2827              		.cfi_def_cfa_offset 4
 2828              		.cfi_offset 7, -4
 2829 0002 00AF     		add	r7, sp, #0
 2830              	.LCFI147:
 2831              		.cfi_def_cfa_register 7
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2832              		.loc 1 1108 1
 2833 0004 00BF     		nop
 2834 0006 BD46     		mov	sp, r7
 2835              	.LCFI148:
 2836              		.cfi_def_cfa_register 13
 2837              		@ sp needed
 2838 0008 5DF8047B 		ldr	r7, [sp], #4
 2839              	.LCFI149:
 2840              		.cfi_restore 7
 2841              		.cfi_def_cfa_offset 0
 2842 000c 7047     		bx	lr
 2843              		.cfi_endproc
 2844              	.LFE164:
 2846              		.section	.text.HAL_PWREx_EnableUCPDStandbyMode,"ax",%progbits
 2847              		.align	1
 2848              		.global	HAL_PWREx_EnableUCPDStandbyMode
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
 2852              		.fpu fpv4-sp-d16
 2854              	HAL_PWREx_EnableUCPDStandbyMode:
 2855              	.LFB165:
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_UCPD_STDBY)
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable UCPD configuration memorization in Standby.
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUCPDStandbyMode(void)
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2856              		.loc 1 1116 1
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 1, uses_anonymous_args = 0
 2860              		@ link register save eliminated.
 2861 0000 80B4     		push	{r7}
 2862              	.LCFI150:
 2863              		.cfi_def_cfa_offset 4
 2864              		.cfi_offset 7, -4
 2865 0002 00AF     		add	r7, sp, #0
 2866              	.LCFI151:
 2867              		.cfi_def_cfa_register 7
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Memorize UCPD configuration when entering standby mode */
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 2868              		.loc 1 1118 3
 2869 0004 054B     		ldr	r3, .L194
ARM GAS  /tmp/ccpmnMSk.s 			page 70


 2870 0006 9B68     		ldr	r3, [r3, #8]
 2871 0008 044A     		ldr	r2, .L194
 2872 000a 43F40053 		orr	r3, r3, #8192
 2873 000e 9360     		str	r3, [r2, #8]
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2874              		.loc 1 1119 1
 2875 0010 00BF     		nop
 2876 0012 BD46     		mov	sp, r7
 2877              	.LCFI152:
 2878              		.cfi_def_cfa_register 13
 2879              		@ sp needed
 2880 0014 5DF8047B 		ldr	r7, [sp], #4
 2881              	.LCFI153:
 2882              		.cfi_restore 7
 2883              		.cfi_def_cfa_offset 0
 2884 0018 7047     		bx	lr
 2885              	.L195:
 2886 001a 00BF     		.align	2
 2887              	.L194:
 2888 001c 00700040 		.word	1073770496
 2889              		.cfi_endproc
 2890              	.LFE165:
 2892              		.section	.text.HAL_PWREx_DisableUCPDStandbyMode,"ax",%progbits
 2893              		.align	1
 2894              		.global	HAL_PWREx_DisableUCPDStandbyMode
 2895              		.syntax unified
 2896              		.thumb
 2897              		.thumb_func
 2898              		.fpu fpv4-sp-d16
 2900              	HAL_PWREx_DisableUCPDStandbyMode:
 2901              	.LFB166:
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable UCPD configuration memorization in Standby.
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This function must be called on exiting the Standby mode and before any UCPD
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        configuration update.
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUCPDStandbyMode(void)
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2902              		.loc 1 1128 1
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 0
 2905              		@ frame_needed = 1, uses_anonymous_args = 0
 2906              		@ link register save eliminated.
 2907 0000 80B4     		push	{r7}
 2908              	.LCFI154:
 2909              		.cfi_def_cfa_offset 4
 2910              		.cfi_offset 7, -4
 2911 0002 00AF     		add	r7, sp, #0
 2912              	.LCFI155:
 2913              		.cfi_def_cfa_register 7
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Write 0 immediately after Standby exit when using UCPD,
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      and before writing any UCPD registers */
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 2914              		.loc 1 1131 3
 2915 0004 054B     		ldr	r3, .L197
ARM GAS  /tmp/ccpmnMSk.s 			page 71


 2916 0006 9B68     		ldr	r3, [r3, #8]
 2917 0008 044A     		ldr	r2, .L197
 2918 000a 23F40053 		bic	r3, r3, #8192
 2919 000e 9360     		str	r3, [r2, #8]
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2920              		.loc 1 1132 1
 2921 0010 00BF     		nop
 2922 0012 BD46     		mov	sp, r7
 2923              	.LCFI156:
 2924              		.cfi_def_cfa_register 13
 2925              		@ sp needed
 2926 0014 5DF8047B 		ldr	r7, [sp], #4
 2927              	.LCFI157:
 2928              		.cfi_restore 7
 2929              		.cfi_def_cfa_offset 0
 2930 0018 7047     		bx	lr
 2931              	.L198:
 2932 001a 00BF     		.align	2
 2933              	.L197:
 2934 001c 00700040 		.word	1073770496
 2935              		.cfi_endproc
 2936              	.LFE166:
 2938              		.section	.text.HAL_PWREx_EnableUCPDDeadBattery,"ax",%progbits
 2939              		.align	1
 2940              		.global	HAL_PWREx_EnableUCPDDeadBattery
 2941              		.syntax unified
 2942              		.thumb
 2943              		.thumb_func
 2944              		.fpu fpv4-sp-d16
 2946              	HAL_PWREx_EnableUCPDDeadBattery:
 2947              	.LFB167:
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_UCPD_STDBY */
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_UCPD_DBDIS)
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the USB Type-C dead battery pull-down behavior
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        on UCPDx_CC1 and UCPDx_CC2 pins
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUCPDDeadBattery(void)
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2948              		.loc 1 1142 1
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 0
 2951              		@ frame_needed = 1, uses_anonymous_args = 0
 2952              		@ link register save eliminated.
 2953 0000 80B4     		push	{r7}
 2954              	.LCFI158:
 2955              		.cfi_def_cfa_offset 4
 2956              		.cfi_offset 7, -4
 2957 0002 00AF     		add	r7, sp, #0
 2958              	.LCFI159:
 2959              		.cfi_def_cfa_register 7
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Write 0 to enable the USB Type-C dead battery pull-down behavior */
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 2960              		.loc 1 1144 3
 2961 0004 054B     		ldr	r3, .L200
ARM GAS  /tmp/ccpmnMSk.s 			page 72


 2962 0006 9B68     		ldr	r3, [r3, #8]
 2963 0008 044A     		ldr	r2, .L200
 2964 000a 23F48043 		bic	r3, r3, #16384
 2965 000e 9360     		str	r3, [r2, #8]
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2966              		.loc 1 1145 1
 2967 0010 00BF     		nop
 2968 0012 BD46     		mov	sp, r7
 2969              	.LCFI160:
 2970              		.cfi_def_cfa_register 13
 2971              		@ sp needed
 2972 0014 5DF8047B 		ldr	r7, [sp], #4
 2973              	.LCFI161:
 2974              		.cfi_restore 7
 2975              		.cfi_def_cfa_offset 0
 2976 0018 7047     		bx	lr
 2977              	.L201:
 2978 001a 00BF     		.align	2
 2979              	.L200:
 2980 001c 00700040 		.word	1073770496
 2981              		.cfi_endproc
 2982              	.LFE167:
 2984              		.section	.text.HAL_PWREx_DisableUCPDDeadBattery,"ax",%progbits
 2985              		.align	1
 2986              		.global	HAL_PWREx_DisableUCPDDeadBattery
 2987              		.syntax unified
 2988              		.thumb
 2989              		.thumb_func
 2990              		.fpu fpv4-sp-d16
 2992              	HAL_PWREx_DisableUCPDDeadBattery:
 2993              	.LFB168:
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the USB Type-C dead battery pull-down behavior
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        on UCPDx_CC1 and UCPDx_CC2 pins
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note After exiting reset, the USB Type-C dead battery behavior will be enabled,
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       which may have a pull-down effect on CC1 and CC2 pins.
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       It is recommended to disable it in all cases, either to stop this pull-down
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       or to hand over control to the UCPD (which should therefore be
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       initialized before doing the disable).
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUCPDDeadBattery(void)
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2994              		.loc 1 1158 1
 2995              		.cfi_startproc
 2996              		@ args = 0, pretend = 0, frame = 0
 2997              		@ frame_needed = 1, uses_anonymous_args = 0
 2998              		@ link register save eliminated.
 2999 0000 80B4     		push	{r7}
 3000              	.LCFI162:
 3001              		.cfi_def_cfa_offset 4
 3002              		.cfi_offset 7, -4
 3003 0002 00AF     		add	r7, sp, #0
 3004              	.LCFI163:
 3005              		.cfi_def_cfa_register 7
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Write 1 to disable the USB Type-C dead battery pull-down behavior */
ARM GAS  /tmp/ccpmnMSk.s 			page 73


1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 3006              		.loc 1 1160 3
 3007 0004 054B     		ldr	r3, .L203
 3008 0006 9B68     		ldr	r3, [r3, #8]
 3009 0008 044A     		ldr	r2, .L203
 3010 000a 43F48043 		orr	r3, r3, #16384
 3011 000e 9360     		str	r3, [r2, #8]
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 3012              		.loc 1 1161 1
 3013 0010 00BF     		nop
 3014 0012 BD46     		mov	sp, r7
 3015              	.LCFI164:
 3016              		.cfi_def_cfa_register 13
 3017              		@ sp needed
 3018 0014 5DF8047B 		ldr	r7, [sp], #4
 3019              	.LCFI165:
 3020              		.cfi_restore 7
 3021              		.cfi_def_cfa_offset 0
 3022 0018 7047     		bx	lr
 3023              	.L204:
 3024 001a 00BF     		.align	2
 3025              	.L203:
 3026 001c 00700040 		.word	1073770496
 3027              		.cfi_endproc
 3028              	.LFE168:
 3030              		.text
 3031              	.Letext0:
 3032              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 3033              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3034              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3035              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 3036              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 3037              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 3038              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
ARM GAS  /tmp/ccpmnMSk.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_pwr_ex.c
     /tmp/ccpmnMSk.s:18     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/ccpmnMSk.s:26     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/ccpmnMSk.s:80     .text.HAL_PWREx_GetVoltageRange:000000000000003c $d
     /tmp/ccpmnMSk.s:85     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/ccpmnMSk.s:92     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/ccpmnMSk.s:288    .text.HAL_PWREx_ControlVoltageScaling:000000000000013c $d
     /tmp/ccpmnMSk.s:295    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/ccpmnMSk.s:302    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/ccpmnMSk.s:351    .text.HAL_PWREx_EnableBatteryCharging:0000000000000030 $d
     /tmp/ccpmnMSk.s:356    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/ccpmnMSk.s:363    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/ccpmnMSk.s:397    .text.HAL_PWREx_DisableBatteryCharging:000000000000001c $d
     /tmp/ccpmnMSk.s:402    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccpmnMSk.s:409    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/ccpmnMSk.s:443    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000001c $d
     /tmp/ccpmnMSk.s:448    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccpmnMSk.s:455    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/ccpmnMSk.s:489    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000001c $d
     /tmp/ccpmnMSk.s:494    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
     /tmp/ccpmnMSk.s:501    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/ccpmnMSk.s:530    .text.HAL_PWREx_EnableGPIOPullUp:000000000000001c $d
     /tmp/ccpmnMSk.s:537    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000038 $t
     /tmp/ccpmnMSk.s:695    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000128 $d
     /tmp/ccpmnMSk.s:700    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
     /tmp/ccpmnMSk.s:707    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/ccpmnMSk.s:736    .text.HAL_PWREx_DisableGPIOPullUp:000000000000001c $d
     /tmp/ccpmnMSk.s:743    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000038 $t
     /tmp/ccpmnMSk.s:851    .text.HAL_PWREx_DisableGPIOPullUp:00000000000000cc $d
     /tmp/ccpmnMSk.s:856    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
     /tmp/ccpmnMSk.s:863    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/ccpmnMSk.s:892    .text.HAL_PWREx_EnableGPIOPullDown:000000000000001c $d
     /tmp/ccpmnMSk.s:899    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000038 $t
     /tmp/ccpmnMSk.s:1058   .text.HAL_PWREx_EnableGPIOPullDown:0000000000000128 $d
     /tmp/ccpmnMSk.s:1063   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
     /tmp/ccpmnMSk.s:1070   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/ccpmnMSk.s:1099   .text.HAL_PWREx_DisableGPIOPullDown:000000000000001c $d
     /tmp/ccpmnMSk.s:1106   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000038 $t
     /tmp/ccpmnMSk.s:1211   .text.HAL_PWREx_DisableGPIOPullDown:00000000000000c4 $d
     /tmp/ccpmnMSk.s:1216   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccpmnMSk.s:1223   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/ccpmnMSk.s:1257   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000001c $d
     /tmp/ccpmnMSk.s:1262   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccpmnMSk.s:1269   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
     /tmp/ccpmnMSk.s:1303   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000001c $d
     /tmp/ccpmnMSk.s:1308   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccpmnMSk.s:1315   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/ccpmnMSk.s:1349   .text.HAL_PWREx_EnableSRAM2ContentRetention:000000000000001c $d
     /tmp/ccpmnMSk.s:1354   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccpmnMSk.s:1361   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/ccpmnMSk.s:1395   .text.HAL_PWREx_DisableSRAM2ContentRetention:000000000000001c $d
     /tmp/ccpmnMSk.s:1400   .text.HAL_PWREx_EnablePVM1:0000000000000000 $t
     /tmp/ccpmnMSk.s:1407   .text.HAL_PWREx_EnablePVM1:0000000000000000 HAL_PWREx_EnablePVM1
     /tmp/ccpmnMSk.s:1441   .text.HAL_PWREx_EnablePVM1:000000000000001c $d
     /tmp/ccpmnMSk.s:1446   .text.HAL_PWREx_DisablePVM1:0000000000000000 $t
     /tmp/ccpmnMSk.s:1453   .text.HAL_PWREx_DisablePVM1:0000000000000000 HAL_PWREx_DisablePVM1
ARM GAS  /tmp/ccpmnMSk.s 			page 75


     /tmp/ccpmnMSk.s:1487   .text.HAL_PWREx_DisablePVM1:000000000000001c $d
     /tmp/ccpmnMSk.s:1492   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
     /tmp/ccpmnMSk.s:1499   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
     /tmp/ccpmnMSk.s:1533   .text.HAL_PWREx_EnablePVM2:000000000000001c $d
     /tmp/ccpmnMSk.s:1538   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
     /tmp/ccpmnMSk.s:1545   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
     /tmp/ccpmnMSk.s:1579   .text.HAL_PWREx_DisablePVM2:000000000000001c $d
     /tmp/ccpmnMSk.s:1584   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
     /tmp/ccpmnMSk.s:1591   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
     /tmp/ccpmnMSk.s:1625   .text.HAL_PWREx_EnablePVM3:000000000000001c $d
     /tmp/ccpmnMSk.s:1630   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
     /tmp/ccpmnMSk.s:1637   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
     /tmp/ccpmnMSk.s:1671   .text.HAL_PWREx_DisablePVM3:000000000000001c $d
     /tmp/ccpmnMSk.s:1676   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
     /tmp/ccpmnMSk.s:1683   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
     /tmp/ccpmnMSk.s:1717   .text.HAL_PWREx_EnablePVM4:000000000000001c $d
     /tmp/ccpmnMSk.s:1722   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
     /tmp/ccpmnMSk.s:1729   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
     /tmp/ccpmnMSk.s:1763   .text.HAL_PWREx_DisablePVM4:000000000000001c $d
     /tmp/ccpmnMSk.s:1768   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
     /tmp/ccpmnMSk.s:1775   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
     /tmp/ccpmnMSk.s:2178   .text.HAL_PWREx_ConfigPVM:0000000000000290 $d
     /tmp/ccpmnMSk.s:2181   .text.HAL_PWREx_ConfigPVM:0000000000000294 $t
     /tmp/ccpmnMSk.s:2203   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2210   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/ccpmnMSk.s:2244   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000001c $d
     /tmp/ccpmnMSk.s:2249   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2256   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/ccpmnMSk.s:2340   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000064 $d
     /tmp/ccpmnMSk.s:2347   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2354   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
     /tmp/ccpmnMSk.s:2437   .text.HAL_PWREx_EnterSTOP0Mode:000000000000004c $d
     /tmp/ccpmnMSk.s:2443   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2450   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/ccpmnMSk.s:2534   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000050 $d
     /tmp/ccpmnMSk.s:2540   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2547   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/ccpmnMSk.s:2595   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000002c $d
     /tmp/ccpmnMSk.s:2601   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
     /tmp/ccpmnMSk.s:2608   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/ccpmnMSk.s:2710   .text.HAL_PWREx_PVM1Callback:0000000000000000 HAL_PWREx_PVM1Callback
     /tmp/ccpmnMSk.s:2746   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
     /tmp/ccpmnMSk.s:2782   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
     /tmp/ccpmnMSk.s:2818   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
     /tmp/ccpmnMSk.s:2698   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000078 $d
     /tmp/ccpmnMSk.s:2703   .text.HAL_PWREx_PVM1Callback:0000000000000000 $t
     /tmp/ccpmnMSk.s:2739   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
     /tmp/ccpmnMSk.s:2775   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
     /tmp/ccpmnMSk.s:2811   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t
     /tmp/ccpmnMSk.s:2847   .text.HAL_PWREx_EnableUCPDStandbyMode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2854   .text.HAL_PWREx_EnableUCPDStandbyMode:0000000000000000 HAL_PWREx_EnableUCPDStandbyMode
     /tmp/ccpmnMSk.s:2888   .text.HAL_PWREx_EnableUCPDStandbyMode:000000000000001c $d
     /tmp/ccpmnMSk.s:2893   .text.HAL_PWREx_DisableUCPDStandbyMode:0000000000000000 $t
     /tmp/ccpmnMSk.s:2900   .text.HAL_PWREx_DisableUCPDStandbyMode:0000000000000000 HAL_PWREx_DisableUCPDStandbyMode
     /tmp/ccpmnMSk.s:2934   .text.HAL_PWREx_DisableUCPDStandbyMode:000000000000001c $d
     /tmp/ccpmnMSk.s:2939   .text.HAL_PWREx_EnableUCPDDeadBattery:0000000000000000 $t
     /tmp/ccpmnMSk.s:2946   .text.HAL_PWREx_EnableUCPDDeadBattery:0000000000000000 HAL_PWREx_EnableUCPDDeadBattery
ARM GAS  /tmp/ccpmnMSk.s 			page 76


     /tmp/ccpmnMSk.s:2980   .text.HAL_PWREx_EnableUCPDDeadBattery:000000000000001c $d
     /tmp/ccpmnMSk.s:2985   .text.HAL_PWREx_DisableUCPDDeadBattery:0000000000000000 $t
     /tmp/ccpmnMSk.s:2992   .text.HAL_PWREx_DisableUCPDDeadBattery:0000000000000000 HAL_PWREx_DisableUCPDDeadBattery
     /tmp/ccpmnMSk.s:3026   .text.HAL_PWREx_DisableUCPDDeadBattery:000000000000001c $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
