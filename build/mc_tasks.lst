ARM GAS  /tmp/ccrkArW5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"mc_tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MCboot,"ax",%progbits
  18              		.align	1
  19              		.weak	MCboot
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MCboot:
  27              	.LVL0:
  28              	.LFB1993:
  29              		.file 1 "Src/mc_tasks.c"
   1:Src/mc_tasks.c **** 
   2:Src/mc_tasks.c **** /**
   3:Src/mc_tasks.c ****   ******************************************************************************
   4:Src/mc_tasks.c ****   * @file    mc_tasks.c
   5:Src/mc_tasks.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/mc_tasks.c ****   * @brief   This file implements tasks definition
   7:Src/mc_tasks.c ****   *
   8:Src/mc_tasks.c ****   ******************************************************************************
   9:Src/mc_tasks.c ****   * @attention
  10:Src/mc_tasks.c ****   *
  11:Src/mc_tasks.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  12:Src/mc_tasks.c ****   * All rights reserved.</center></h2>
  13:Src/mc_tasks.c ****   *
  14:Src/mc_tasks.c ****   * This software component is licensed by ST under Ultimate Liberty license
  15:Src/mc_tasks.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:Src/mc_tasks.c ****   * the License. You may obtain a copy of the License at:
  17:Src/mc_tasks.c ****   *                             www.st.com/SLA0044
  18:Src/mc_tasks.c ****   *
  19:Src/mc_tasks.c ****   ******************************************************************************
  20:Src/mc_tasks.c ****   */
  21:Src/mc_tasks.c **** 
  22:Src/mc_tasks.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/mc_tasks.c **** //cstat -MISRAC2012-Rule-21.1
  24:Src/mc_tasks.c **** #include "main.h"
  25:Src/mc_tasks.c **** //cstat +MISRAC2012-Rule-21.1
  26:Src/mc_tasks.c **** #include "mc_type.h"
  27:Src/mc_tasks.c **** #include "mc_math.h"
  28:Src/mc_tasks.c **** #include "motorcontrol.h"
  29:Src/mc_tasks.c **** #include "regular_conversion_manager.h"
ARM GAS  /tmp/ccrkArW5.s 			page 2


  30:Src/mc_tasks.c **** #include "cmsis_os.h"
  31:Src/mc_tasks.c **** #include "mc_interface.h"
  32:Src/mc_tasks.c **** #include "digital_output.h"
  33:Src/mc_tasks.c **** #include "pwm_common.h"
  34:Src/mc_tasks.c **** #include "mc_tasks.h"
  35:Src/mc_tasks.c **** #include "parameters_conversion.h"
  36:Src/mc_tasks.c **** #include "mcp_config.h"
  37:Src/mc_tasks.c **** #include "mc_app_hooks.h"
  38:Src/mc_tasks.c **** #include "freertos_vars.h"
  39:Src/mc_tasks.c **** 
  40:Src/mc_tasks.c **** /* USER CODE BEGIN Includes */
  41:Src/mc_tasks.c **** 
  42:Src/mc_tasks.c **** /* USER CODE END Includes */
  43:Src/mc_tasks.c **** 
  44:Src/mc_tasks.c **** /* USER CODE BEGIN Private define */
  45:Src/mc_tasks.c **** /* Private define ------------------------------------------------------------*/
  46:Src/mc_tasks.c **** /* Un-Comment this macro define in order to activate the smooth
  47:Src/mc_tasks.c ****    braking action on over voltage */
  48:Src/mc_tasks.c **** /* #define  MC.SMOOTH_BRAKING_ACTION_ON_OVERVOLTAGE */
  49:Src/mc_tasks.c **** 
  50:Src/mc_tasks.c **** /* USER CODE END Private define */
  51:Src/mc_tasks.c **** 
  52:Src/mc_tasks.c **** #define VBUS_TEMP_ERR_MASK (MC_OVER_VOLT| MC_UNDER_VOLT| MC_OVER_TEMP)
  53:Src/mc_tasks.c **** /* Private variables----------------------------------------------------------*/
  54:Src/mc_tasks.c **** 
  55:Src/mc_tasks.c **** static uint16_t hMFTaskCounterM1 = 0; //cstat !MISRAC2012-Rule-8.9_a
  56:Src/mc_tasks.c **** static volatile uint16_t hBootCapDelayCounterM1 = ((uint16_t)0);
  57:Src/mc_tasks.c **** static volatile uint16_t hStopPermanencyCounterM1 = ((uint16_t)0);
  58:Src/mc_tasks.c **** static volatile uint8_t bMCBootCompleted = ((uint8_t)0);
  59:Src/mc_tasks.c **** 
  60:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_TICKS          (((uint16_t)SYS_TICK_FREQUENCY * (uint16_t)10) / 1000U)
  61:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_DUTY_CYCLES ((uint32_t)0.000\
  62:Src/mc_tasks.c ****                                       * ((uint32_t)PWM_PERIOD_CYCLES / 2U))
  63:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_TICKS         (((uint16_t)SYS_TICK_FREQUENCY * (uint16_t)10) / 1000U)
  64:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_DUTY_CYCLES ((uint32_t)0\
  65:Src/mc_tasks.c ****                                       * ((uint32_t)PWM_PERIOD_CYCLES2 / 2U))
  66:Src/mc_tasks.c **** 
  67:Src/mc_tasks.c **** /* USER CODE BEGIN Private Variables */
  68:Src/mc_tasks.c **** 
  69:Src/mc_tasks.c **** /* USER CODE END Private Variables */
  70:Src/mc_tasks.c **** 
  71:Src/mc_tasks.c **** /* Private functions ---------------------------------------------------------*/
  72:Src/mc_tasks.c **** void TSK_MediumFrequencyTaskM1(void);
  73:Src/mc_tasks.c **** void TSK_MF_StopProcessing(uint8_t motor);
  74:Src/mc_tasks.c **** MCI_Handle_t *GetMCI(uint8_t bMotor);
  75:Src/mc_tasks.c **** void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount);
  76:Src/mc_tasks.c **** bool TSK_ChargeBootCapDelayHasElapsedM1(void);
  77:Src/mc_tasks.c **** void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount);
  78:Src/mc_tasks.c **** bool TSK_StopPermanencyTimeHasElapsedM1(void);
  79:Src/mc_tasks.c **** void TSK_SafetyTask_PWMOFF(uint8_t motor);
  80:Src/mc_tasks.c **** 
  81:Src/mc_tasks.c **** /* USER CODE BEGIN Private Functions */
  82:Src/mc_tasks.c **** 
  83:Src/mc_tasks.c **** /* USER CODE END Private Functions */
  84:Src/mc_tasks.c **** /**
  85:Src/mc_tasks.c ****   * @brief  It initializes the whole MC core according to user defined
  86:Src/mc_tasks.c ****   *         parameters.
ARM GAS  /tmp/ccrkArW5.s 			page 3


  87:Src/mc_tasks.c ****   * @param  pMCIList pointer to the vector of MCInterface objects that will be
  88:Src/mc_tasks.c ****   *         created and initialized. The vector must have length equal to the
  89:Src/mc_tasks.c ****   *         number of motor drives.
  90:Src/mc_tasks.c ****   */
  91:Src/mc_tasks.c **** __weak void MCboot( MCI_Handle_t* pMCIList[NBR_OF_MOTORS] )
  92:Src/mc_tasks.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
  94:Src/mc_tasks.c **** 
  95:Src/mc_tasks.c ****   /* USER CODE END MCboot 0 */
  96:Src/mc_tasks.c **** 
  97:Src/mc_tasks.c ****   if (MC_NULL == pMCIList)
  34              		.loc 1 97 3 view .LVU1
  35              		.loc 1 97 6 is_stmt 0 view .LVU2
  36 0000 0028     		cmp	r0, #0
  37 0002 41D0     		beq	.L4
  92:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
  38              		.loc 1 92 1 view .LVU3
  39 0004 F0B5     		push	{r4, r5, r6, r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 20
  42              		.cfi_offset 4, -20
  43              		.cfi_offset 5, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0006 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 32
  50              	.LBB34:
  98:Src/mc_tasks.c ****   {
  99:Src/mc_tasks.c ****     /* Nothing to do */
 100:Src/mc_tasks.c ****   }
 101:Src/mc_tasks.c ****   else
 102:Src/mc_tasks.c ****   {
 103:Src/mc_tasks.c **** 
 104:Src/mc_tasks.c ****     bMCBootCompleted = (uint8_t )0;
  51              		.loc 1 104 5 is_stmt 1 view .LVU4
  52              		.loc 1 104 22 is_stmt 0 view .LVU5
  53 0008 204E     		ldr	r6, .L7
  54 000a 0027     		movs	r7, #0
  55 000c 3770     		strb	r7, [r6]
 105:Src/mc_tasks.c **** 
 106:Src/mc_tasks.c ****     /*************************************************/
 107:Src/mc_tasks.c ****     /*    FOC initialization         */
 108:Src/mc_tasks.c ****     /*************************************************/
 109:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
  56              		.loc 1 109 5 is_stmt 1 view .LVU6
  57              		.loc 1 109 18 is_stmt 0 view .LVU7
  58 000e 204C     		ldr	r4, .L7+4
  59 0010 0460     		str	r4, [r0]
 110:Src/mc_tasks.c ****     FOC_Init();
  60              		.loc 1 110 5 is_stmt 1 view .LVU8
  61 0012 FFF7FEFF 		bl	FOC_Init
ARM GAS  /tmp/ccrkArW5.s 			page 4


  62              	.LVL1:
 111:Src/mc_tasks.c **** 
 112:Src/mc_tasks.c ****     //ASPEP_start(&aspepOverUartA);
 113:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 1 */
 114:Src/mc_tasks.c **** 
 115:Src/mc_tasks.c ****     /* USER CODE END MCboot 1 */
 116:Src/mc_tasks.c **** 
 117:Src/mc_tasks.c ****     /******************************************************/
 118:Src/mc_tasks.c ****     /*   PID component initialization: speed regulation   */
 119:Src/mc_tasks.c ****     /******************************************************/
 120:Src/mc_tasks.c ****     PID_HandleInit(&PIDSpeedHandle_M1);
  63              		.loc 1 120 5 view .LVU9
  64 0016 1F48     		ldr	r0, .L7+8
  65 0018 FFF7FEFF 		bl	PID_HandleInit
  66              	.LVL2:
 121:Src/mc_tasks.c **** 
 122:Src/mc_tasks.c ****     /****************************************************/
 123:Src/mc_tasks.c ****     /*   Virtual speed sensor component initialization  */
 124:Src/mc_tasks.c ****     /****************************************************/
 125:Src/mc_tasks.c ****     VSS_Init(&VirtualSpeedSensorM1);
  67              		.loc 1 125 5 view .LVU10
  68 001c 1E48     		ldr	r0, .L7+12
  69 001e FFF7FEFF 		bl	VSS_Init
  70              	.LVL3:
 126:Src/mc_tasks.c **** 
 127:Src/mc_tasks.c ****     /********************************************************/
 128:Src/mc_tasks.c ****     /*   Bus voltage sensor component initialization        */
 129:Src/mc_tasks.c ****     /********************************************************/
 130:Src/mc_tasks.c ****     (void)RCM_RegisterRegConv(&VbusRegConv_M1);
  71              		.loc 1 130 5 view .LVU11
  72 0022 1E48     		ldr	r0, .L7+16
  73 0024 FFF7FEFF 		bl	RCM_RegisterRegConv
  74              	.LVL4:
 131:Src/mc_tasks.c ****     RVBS_Init(&BusVoltageSensor_M1);
  75              		.loc 1 131 5 view .LVU12
  76 0028 1D48     		ldr	r0, .L7+20
  77 002a FFF7FEFF 		bl	RVBS_Init
  78              	.LVL5:
 132:Src/mc_tasks.c **** 
 133:Src/mc_tasks.c ****     /*******************************************************/
 134:Src/mc_tasks.c ****     /*   Temperature measurement component initialization  */
 135:Src/mc_tasks.c ****     /*******************************************************/
 136:Src/mc_tasks.c ****     (void)RCM_RegisterRegConv(&TempRegConv_M1);
  79              		.loc 1 136 5 view .LVU13
  80 002e 1D48     		ldr	r0, .L7+24
  81 0030 FFF7FEFF 		bl	RCM_RegisterRegConv
  82              	.LVL6:
 137:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
  83              		.loc 1 137 5 view .LVU14
  84 0034 1C48     		ldr	r0, .L7+28
  85 0036 FFF7FEFF 		bl	NTC_Init
  86              	.LVL7:
 138:Src/mc_tasks.c **** 
 139:Src/mc_tasks.c ****     Mci[M1].pPerfMeasure = &PerfTraces;
  87              		.loc 1 139 5 view .LVU15
  88              		.loc 1 139 26 is_stmt 0 view .LVU16
  89 003a 1C48     		ldr	r0, .L7+32
ARM GAS  /tmp/ccrkArW5.s 			page 5


  90 003c A062     		str	r0, [r4, #40]
 140:Src/mc_tasks.c ****     MC_Perf_Measure_Init(&PerfTraces);
  91              		.loc 1 140 5 is_stmt 1 view .LVU17
  92 003e FFF7FEFF 		bl	MC_Perf_Measure_Init
  93              	.LVL8:
 141:Src/mc_tasks.c **** 
 142:Src/mc_tasks.c ****     /*************************************************/
 143:Src/mc_tasks.c ****     /*   STSPIN32G4 driver component initialization  */
 144:Src/mc_tasks.c ****     /*************************************************/
 145:Src/mc_tasks.c ****     STSPIN32G4_init(&HdlSTSPING4);
  94              		.loc 1 145 5 view .LVU18
  95 0042 1B4C     		ldr	r4, .L7+36
  96 0044 2046     		mov	r0, r4
  97 0046 FFF7FEFF 		bl	STSPIN32G4_init
  98              	.LVL9:
 146:Src/mc_tasks.c ****     STSPIN32G4_reset(&HdlSTSPING4);
  99              		.loc 1 146 5 view .LVU19
 100 004a 2046     		mov	r0, r4
 101 004c FFF7FEFF 		bl	STSPIN32G4_reset
 102              	.LVL10:
 147:Src/mc_tasks.c ****     STSPIN32G4_setVCC(&HdlSTSPING4, (STSPIN32G4_confVCC){.voltage = _12V,
 103              		.loc 1 147 5 view .LVU20
 104              		.loc 1 147 57 is_stmt 0 view .LVU21
 105 0050 0323     		movs	r3, #3
 106 0052 8DF80030 		strb	r3, [sp]
 107 0056 0125     		movs	r5, #1
 108 0058 8DF80150 		strb	r5, [sp, #1]
 109 005c 8DF80270 		strb	r7, [sp, #2]
 110              		.loc 1 147 5 view .LVU22
 111 0060 0099     		ldr	r1, [sp]
 112 0062 2046     		mov	r0, r4
 113 0064 FFF7FEFF 		bl	STSPIN32G4_setVCC
 114              	.LVL11:
 148:Src/mc_tasks.c ****                                                          .useNFAULT = true,
 149:Src/mc_tasks.c ****                                                          .useREADY = false });
 150:Src/mc_tasks.c ****     STSPIN32G4_setVDSP(&HdlSTSPING4, (STSPIN32G4_confVDSP){.deglitchTime = _4us,
 115              		.loc 1 150 5 is_stmt 1 view .LVU23
 116              		.loc 1 150 59 is_stmt 0 view .LVU24
 117 0068 8DF80450 		strb	r5, [sp, #4]
 118 006c 8DF80550 		strb	r5, [sp, #5]
 119              		.loc 1 150 5 view .LVU25
 120 0070 0199     		ldr	r1, [sp, #4]
 121 0072 2046     		mov	r0, r4
 122 0074 FFF7FEFF 		bl	STSPIN32G4_setVDSP
 123              	.LVL12:
 151:Src/mc_tasks.c ****                                                            .useNFAULT = true });
 152:Src/mc_tasks.c ****     STSPIN32G4_clearFaults(&HdlSTSPING4);
 124              		.loc 1 152 5 is_stmt 1 view .LVU26
 125 0078 2046     		mov	r0, r4
 126 007a FFF7FEFF 		bl	STSPIN32G4_clearFaults
 127              	.LVL13:
 153:Src/mc_tasks.c **** 
 154:Src/mc_tasks.c ****     /* Applicative hook in MCBoot() */
 155:Src/mc_tasks.c ****     MC_APP_BootHook();
 128              		.loc 1 155 5 view .LVU27
 129 007e FFF7FEFF 		bl	MC_APP_BootHook
 130              	.LVL14:
ARM GAS  /tmp/ccrkArW5.s 			page 6


 156:Src/mc_tasks.c **** 
 157:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 2 */
 158:Src/mc_tasks.c **** 
 159:Src/mc_tasks.c ****     /* USER CODE END MCboot 2 */
 160:Src/mc_tasks.c **** 
 161:Src/mc_tasks.c ****     bMCBootCompleted = 1U;
 131              		.loc 1 161 5 view .LVU28
 132              		.loc 1 161 22 is_stmt 0 view .LVU29
 133 0082 3570     		strb	r5, [r6]
 134              	.LBE34:
 162:Src/mc_tasks.c ****   }
 163:Src/mc_tasks.c **** }
 135              		.loc 1 163 1 view .LVU30
 136 0084 03B0     		add	sp, sp, #12
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 20
 139              		@ sp needed
 140 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 141              	.LVL15:
 142              	.L4:
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 0
 145              		.cfi_restore 4
 146              		.cfi_restore 5
 147              		.cfi_restore 6
 148              		.cfi_restore 7
 149              		.cfi_restore 14
 150              		.loc 1 163 1 view .LVU31
 151 0088 7047     		bx	lr
 152              	.L8:
 153 008a 00BF     		.align	2
 154              	.L7:
 155 008c 00000000 		.word	.LANCHOR0
 156 0090 00000000 		.word	Mci
 157 0094 00000000 		.word	PIDSpeedHandle_M1
 158 0098 00000000 		.word	VirtualSpeedSensorM1
 159 009c 00000000 		.word	VbusRegConv_M1
 160 00a0 00000000 		.word	BusVoltageSensor_M1
 161 00a4 00000000 		.word	TempRegConv_M1
 162 00a8 00000000 		.word	TempSensor_M1
 163 00ac 00000000 		.word	PerfTraces
 164 00b0 00000000 		.word	HdlSTSPING4
 165              		.cfi_endproc
 166              	.LFE1993:
 168              		.section	.text.MC_StartMotorOpenLoop,"ax",%progbits
 169              		.align	1
 170              		.global	MC_StartMotorOpenLoop
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	MC_StartMotorOpenLoop:
 177              	.LVL16:
 178              	.LFB1994:
 164:Src/mc_tasks.c **** 
 165:Src/mc_tasks.c **** 
 166:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccrkArW5.s 			page 7


 167:Src/mc_tasks.c **** 
 168:Src/mc_tasks.c **** 
 169:Src/mc_tasks.c **** 
 170:Src/mc_tasks.c **** /**
 171:Src/mc_tasks.c ****  * @brief  Starts motor in open-loop mode with specified voltage
 172:Src/mc_tasks.c ****  * @param  voltage_q Q-axis voltage (0-16000, typical start ~5000)
 173:Src/mc_tasks.c ****  * @param  voltage_d D-axis voltage (normally 0)
 174:Src/mc_tasks.c ****  * @param  frequency_hz Electrical frequency in Hz
 175:Src/mc_tasks.c ****  * @retval true if command accepted, false otherwise
 176:Src/mc_tasks.c ****  */
 177:Src/mc_tasks.c **** bool MC_StartMotorOpenLoop(int16_t voltage_q, int16_t voltage_d, uint16_t frequency_hz)
 178:Src/mc_tasks.c **** {
 179              		.loc 1 178 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 178 1 is_stmt 0 view .LVU33
 184 0000 38B5     		push	{r3, r4, r5, lr}
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 3, -16
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 191 0002 0546     		mov	r5, r0
 192 0004 0C46     		mov	r4, r1
 179:Src/mc_tasks.c ****   MCI_Handle_t *pMCI = &Mci[M1];
 193              		.loc 1 179 3 is_stmt 1 view .LVU34
 194              	.LVL17:
 180:Src/mc_tasks.c ****   bool ret = false;
 195              		.loc 1 180 3 view .LVU35
 181:Src/mc_tasks.c ****   PWMC_Handle_t *pHandle =  pwmcHandle[M1];
 196              		.loc 1 181 3 view .LVU36
 182:Src/mc_tasks.c **** 
 183:Src/mc_tasks.c **** 
 184:Src/mc_tasks.c ****   if (IDLE == MCI_GetSTMState(pMCI))
 197              		.loc 1 184 3 view .LVU37
 198              		.loc 1 184 15 is_stmt 0 view .LVU38
 199 0006 0748     		ldr	r0, .L14
 200              	.LVL18:
 201              		.loc 1 184 15 view .LVU39
 202 0008 FFF7FEFF 		bl	MCI_GetSTMState
 203              	.LVL19:
 204              		.loc 1 184 6 view .LVU40
 205 000c 08B1     		cbz	r0, .L13
 180:Src/mc_tasks.c ****   PWMC_Handle_t *pHandle =  pwmcHandle[M1];
 206              		.loc 1 180 8 view .LVU41
 207 000e 0020     		movs	r0, #0
 208              	.LVL20:
 209              	.L10:
 185:Src/mc_tasks.c ****   {
 186:Src/mc_tasks.c ****     
 187:Src/mc_tasks.c ****     // Start motor (triggers state transitions)
 188:Src/mc_tasks.c ****     ret = MCI_StartMotor(pMCI);
 189:Src/mc_tasks.c ****     
 190:Src/mc_tasks.c ****     if (ret)
 191:Src/mc_tasks.c ****     {
ARM GAS  /tmp/ccrkArW5.s 			page 8


 192:Src/mc_tasks.c **** 
 193:Src/mc_tasks.c ****       FOCVars[M1].Vqd.q = voltage_q;
 194:Src/mc_tasks.c ****       FOCVars[M1].Vqd.d = voltage_d;
 195:Src/mc_tasks.c **** 
 196:Src/mc_tasks.c ****     }
 197:Src/mc_tasks.c ****   }
 198:Src/mc_tasks.c ****   
 199:Src/mc_tasks.c ****   return ret;
 210              		.loc 1 199 3 is_stmt 1 view .LVU42
 200:Src/mc_tasks.c **** }
 211              		.loc 1 200 1 is_stmt 0 view .LVU43
 212 0010 38BD     		pop	{r3, r4, r5, pc}
 213              	.LVL21:
 214              	.L13:
 188:Src/mc_tasks.c ****     
 215              		.loc 1 188 5 is_stmt 1 view .LVU44
 188:Src/mc_tasks.c ****     
 216              		.loc 1 188 11 is_stmt 0 view .LVU45
 217 0012 0448     		ldr	r0, .L14
 218 0014 FFF7FEFF 		bl	MCI_StartMotor
 219              	.LVL22:
 190:Src/mc_tasks.c ****     {
 220              		.loc 1 190 5 is_stmt 1 view .LVU46
 190:Src/mc_tasks.c ****     {
 221              		.loc 1 190 8 is_stmt 0 view .LVU47
 222 0018 0028     		cmp	r0, #0
 223 001a F9D0     		beq	.L10
 193:Src/mc_tasks.c ****       FOCVars[M1].Vqd.d = voltage_d;
 224              		.loc 1 193 7 is_stmt 1 view .LVU48
 193:Src/mc_tasks.c ****       FOCVars[M1].Vqd.d = voltage_d;
 225              		.loc 1 193 25 is_stmt 0 view .LVU49
 226 001c 024B     		ldr	r3, .L14+4
 227 001e DD82     		strh	r5, [r3, #22]	@ movhi
 194:Src/mc_tasks.c **** 
 228              		.loc 1 194 7 is_stmt 1 view .LVU50
 194:Src/mc_tasks.c **** 
 229              		.loc 1 194 25 is_stmt 0 view .LVU51
 230 0020 1C83     		strh	r4, [r3, #24]	@ movhi
 231 0022 F5E7     		b	.L10
 232              	.L15:
 233              		.align	2
 234              	.L14:
 235 0024 00000000 		.word	Mci
 236 0028 00000000 		.word	FOCVars
 237              		.cfi_endproc
 238              	.LFE1994:
 240              		.section	.text.MC_RunMotorControlTasks,"ax",%progbits
 241              		.align	1
 242              		.weak	MC_RunMotorControlTasks
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu fpv4-sp-d16
 248              	MC_RunMotorControlTasks:
 249              	.LFB1995:
 201:Src/mc_tasks.c **** 
 202:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccrkArW5.s 			page 9


 203:Src/mc_tasks.c **** 
 204:Src/mc_tasks.c **** 
 205:Src/mc_tasks.c **** 
 206:Src/mc_tasks.c **** /**
 207:Src/mc_tasks.c ****  * @brief Runs all the Tasks of the Motor Control cockpit
 208:Src/mc_tasks.c ****  *
 209:Src/mc_tasks.c ****  * This function is to be called periodically at least at the Medium Frequency task
 210:Src/mc_tasks.c ****  * rate (It is typically called on the Systick interrupt). Exact invokation rate is
 211:Src/mc_tasks.c ****  * the Speed regulator execution rate set in the Motor Contorl Workbench.
 212:Src/mc_tasks.c ****  *
 213:Src/mc_tasks.c ****  * The following tasks are executed in this order:
 214:Src/mc_tasks.c ****  *
 215:Src/mc_tasks.c ****  * - Medium Frequency Tasks of each motors.
 216:Src/mc_tasks.c ****  * - Safety Task.
 217:Src/mc_tasks.c ****  * - Power Factor Correction Task (if enabled).
 218:Src/mc_tasks.c ****  * - User Interface task.
 219:Src/mc_tasks.c ****  */
 220:Src/mc_tasks.c **** __weak void MC_RunMotorControlTasks(void)
 221:Src/mc_tasks.c **** {
 250              		.loc 1 221 1 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254 0000 38B5     		push	{r3, r4, r5, lr}
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 3, -16
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 5, -8
 260              		.cfi_offset 14, -4
 222:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 261              		.loc 1 222 3 view .LVU53
 262              		.loc 1 222 10 is_stmt 0 view .LVU54
 263 0002 234B     		ldr	r3, .L24
 264 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265              		.loc 1 222 6 view .LVU55
 266 0006 BBB1     		cbz	r3, .L16
 223:Src/mc_tasks.c ****   {
 224:Src/mc_tasks.c ****     /* Nothing to do */
 225:Src/mc_tasks.c ****   }
 226:Src/mc_tasks.c ****   else
 227:Src/mc_tasks.c ****   {
 228:Src/mc_tasks.c ****     /* ** Medium Frequency Tasks ** */
 229:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 230:Src/mc_tasks.c **** 
 231:Src/mc_tasks.c **** /* USER CODE END MC_Scheduler 0 */
 232:Src/mc_tasks.c **** 
 233:Src/mc_tasks.c ****     if(hMFTaskCounterM1 > 0u)
 267              		.loc 1 233 5 is_stmt 1 view .LVU56
 268              		.loc 1 233 25 is_stmt 0 view .LVU57
 269 0008 224B     		ldr	r3, .L24+4
 270 000a 1B88     		ldrh	r3, [r3]
 271              		.loc 1 233 7 view .LVU58
 272 000c ABB1     		cbz	r3, .L18
 234:Src/mc_tasks.c ****     {
 235:Src/mc_tasks.c ****       hMFTaskCounterM1--;
 273              		.loc 1 235 7 is_stmt 1 view .LVU59
ARM GAS  /tmp/ccrkArW5.s 			page 10


 274              		.loc 1 235 23 is_stmt 0 view .LVU60
 275 000e 013B     		subs	r3, r3, #1
 276 0010 204A     		ldr	r2, .L24+4
 277 0012 1380     		strh	r3, [r2]	@ movhi
 278              	.L19:
 236:Src/mc_tasks.c ****     }
 237:Src/mc_tasks.c ****     else
 238:Src/mc_tasks.c ****     {
 239:Src/mc_tasks.c **** 
 240:Src/mc_tasks.c ****       MC_BG_Perf_Measure_Start(&PerfTraces, MEASURE_TSK_MediumFrequencyTaskM1);
 241:Src/mc_tasks.c ****       TSK_MediumFrequencyTaskM1();
 242:Src/mc_tasks.c **** 
 243:Src/mc_tasks.c ****   MC_BG_Perf_Measure_Stop(&PerfTraces, MEASURE_TSK_MediumFrequencyTaskM1);
 244:Src/mc_tasks.c ****       /* Applicative hook at end of Medium Frequency for Motor 1 */
 245:Src/mc_tasks.c ****       MC_APP_PostMediumFrequencyHook_M1();
 246:Src/mc_tasks.c **** 
 247:Src/mc_tasks.c ****       MCP_Over_UartA.rxBuffer = MCP_Over_UartA.pTransportLayer->fRXPacketProcess(MCP_Over_UartA.pTr
 248:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 249:Src/mc_tasks.c ****       if ( 0U == MCP_Over_UartA.rxBuffer)
 250:Src/mc_tasks.c ****       {
 251:Src/mc_tasks.c ****         /* Nothing to do */
 252:Src/mc_tasks.c ****       }
 253:Src/mc_tasks.c ****       else
 254:Src/mc_tasks.c ****       {
 255:Src/mc_tasks.c ****         /* Synchronous answer */
 256:Src/mc_tasks.c ****         if (0U == MCP_Over_UartA.pTransportLayer->fGetBuffer(MCP_Over_UartA.pTransportLayer,
 257:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 258:Src/mc_tasks.c ****                                                      MCTL_SYNC))
 259:Src/mc_tasks.c ****         {
 260:Src/mc_tasks.c ****           /* No buffer available to build the answer ... should not occur */
 261:Src/mc_tasks.c ****         }
 262:Src/mc_tasks.c ****         else
 263:Src/mc_tasks.c ****         {
 264:Src/mc_tasks.c ****           MCP_ReceivedPacket(&MCP_Over_UartA);
 265:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 266:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 267:Src/mc_tasks.c ****           /* No buffer available to build the answer ... should not occur */
 268:Src/mc_tasks.c ****         }
 269:Src/mc_tasks.c ****       }
 270:Src/mc_tasks.c **** 
 271:Src/mc_tasks.c ****       /* USER CODE BEGIN MC_Scheduler 1 */
 272:Src/mc_tasks.c **** 
 273:Src/mc_tasks.c ****       /* USER CODE END MC_Scheduler 1 */
 274:Src/mc_tasks.c **** 
 275:Src/mc_tasks.c ****       hMFTaskCounterM1 = (uint16_t)MF_TASK_OCCURENCE_TICKS;
 276:Src/mc_tasks.c ****     }
 277:Src/mc_tasks.c ****     if(hBootCapDelayCounterM1 > 0U)
 279              		.loc 1 277 5 is_stmt 1 view .LVU61
 280              		.loc 1 277 31 is_stmt 0 view .LVU62
 281 0014 204B     		ldr	r3, .L24+8
 282 0016 1B88     		ldrh	r3, [r3]
 283 0018 9BB2     		uxth	r3, r3
 284              		.loc 1 277 7 view .LVU63
 285 001a 23B1     		cbz	r3, .L21
 278:Src/mc_tasks.c ****     {
 279:Src/mc_tasks.c ****       hBootCapDelayCounterM1--;
 286              		.loc 1 279 7 is_stmt 1 view .LVU64
ARM GAS  /tmp/ccrkArW5.s 			page 11


 287              		.loc 1 279 29 is_stmt 0 view .LVU65
 288 001c 1E4A     		ldr	r2, .L24+8
 289 001e 1388     		ldrh	r3, [r2]
 290 0020 013B     		subs	r3, r3, #1
 291 0022 9BB2     		uxth	r3, r3
 292 0024 1380     		strh	r3, [r2]	@ movhi
 293              	.L21:
 280:Src/mc_tasks.c ****     }
 281:Src/mc_tasks.c ****     else
 282:Src/mc_tasks.c ****     {
 283:Src/mc_tasks.c ****       /* Nothing to do */
 284:Src/mc_tasks.c ****     }
 294              		.loc 1 284 5 is_stmt 1 view .LVU66
 285:Src/mc_tasks.c ****     if(hStopPermanencyCounterM1 > 0U)
 295              		.loc 1 285 5 view .LVU67
 296              		.loc 1 285 33 is_stmt 0 view .LVU68
 297 0026 1D4B     		ldr	r3, .L24+12
 298 0028 1B88     		ldrh	r3, [r3]
 299 002a 9BB2     		uxth	r3, r3
 300              		.loc 1 285 7 view .LVU69
 301 002c 23B1     		cbz	r3, .L16
 286:Src/mc_tasks.c ****     {
 287:Src/mc_tasks.c ****       hStopPermanencyCounterM1--;
 302              		.loc 1 287 7 is_stmt 1 view .LVU70
 303              		.loc 1 287 31 is_stmt 0 view .LVU71
 304 002e 1B4A     		ldr	r2, .L24+12
 305 0030 1388     		ldrh	r3, [r2]
 306 0032 013B     		subs	r3, r3, #1
 307 0034 9BB2     		uxth	r3, r3
 308 0036 1380     		strh	r3, [r2]	@ movhi
 288:Src/mc_tasks.c ****     }
 289:Src/mc_tasks.c ****     else
 290:Src/mc_tasks.c ****     {
 291:Src/mc_tasks.c ****       /* Nothing to do */
 292:Src/mc_tasks.c ****     }
 309              		.loc 1 292 5 is_stmt 1 view .LVU72
 310              	.L16:
 293:Src/mc_tasks.c **** 
 294:Src/mc_tasks.c ****   /* USER CODE BEGIN MC_Scheduler 2 */
 295:Src/mc_tasks.c **** 
 296:Src/mc_tasks.c ****   /* USER CODE END MC_Scheduler 2 */
 297:Src/mc_tasks.c ****   }
 298:Src/mc_tasks.c **** }
 311              		.loc 1 298 1 is_stmt 0 view .LVU73
 312 0038 38BD     		pop	{r3, r4, r5, pc}
 313              	.L18:
 240:Src/mc_tasks.c ****       TSK_MediumFrequencyTaskM1();
 314              		.loc 1 240 7 is_stmt 1 view .LVU74
 315 003a 194C     		ldr	r4, .L24+16
 316 003c 0121     		movs	r1, #1
 317 003e 2046     		mov	r0, r4
 318 0040 FFF7FEFF 		bl	MC_BG_Perf_Measure_Start
 319              	.LVL23:
 241:Src/mc_tasks.c **** 
 320              		.loc 1 241 7 view .LVU75
 321 0044 FFF7FEFF 		bl	TSK_MediumFrequencyTaskM1
 322              	.LVL24:
ARM GAS  /tmp/ccrkArW5.s 			page 12


 243:Src/mc_tasks.c ****       /* Applicative hook at end of Medium Frequency for Motor 1 */
 323              		.loc 1 243 3 view .LVU76
 324 0048 0121     		movs	r1, #1
 325 004a 2046     		mov	r0, r4
 326 004c FFF7FEFF 		bl	MC_BG_Perf_Measure_Stop
 327              	.LVL25:
 245:Src/mc_tasks.c **** 
 328              		.loc 1 245 7 view .LVU77
 329 0050 FFF7FEFF 		bl	MC_APP_PostMediumFrequencyHook_M1
 330              	.LVL26:
 247:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 331              		.loc 1 247 7 view .LVU78
 247:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 332              		.loc 1 247 47 is_stmt 0 view .LVU79
 333 0054 134C     		ldr	r4, .L24+20
 334 0056 2146     		mov	r1, r4
 335 0058 51F80C0B 		ldr	r0, [r1], #12
 247:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 336              		.loc 1 247 33 view .LVU80
 337 005c 8368     		ldr	r3, [r0, #8]
 338 005e 9847     		blx	r3
 339              	.LVL27:
 247:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 340              		.loc 1 247 31 view .LVU81
 341 0060 6060     		str	r0, [r4, #4]
 249:Src/mc_tasks.c ****       {
 342              		.loc 1 249 7 is_stmt 1 view .LVU82
 249:Src/mc_tasks.c ****       {
 343              		.loc 1 249 10 is_stmt 0 view .LVU83
 344 0062 30B1     		cbz	r0, .L20
 256:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 345              		.loc 1 256 9 is_stmt 1 view .LVU84
 256:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 346              		.loc 1 256 33 is_stmt 0 view .LVU85
 347 0064 2146     		mov	r1, r4
 348 0066 51F8080B 		ldr	r0, [r1], #8
 256:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 349              		.loc 1 256 19 view .LVU86
 350 006a 0368     		ldr	r3, [r0]
 351 006c 0A22     		movs	r2, #10
 352 006e 9847     		blx	r3
 353              	.LVL28:
 256:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 354              		.loc 1 256 12 view .LVU87
 355 0070 18B9     		cbnz	r0, .L23
 356              	.L20:
 275:Src/mc_tasks.c ****     }
 357              		.loc 1 275 7 is_stmt 1 view .LVU88
 275:Src/mc_tasks.c ****     }
 358              		.loc 1 275 24 is_stmt 0 view .LVU89
 359 0072 084B     		ldr	r3, .L24+4
 360 0074 0122     		movs	r2, #1
 361 0076 1A80     		strh	r2, [r3]	@ movhi
 362 0078 CCE7     		b	.L19
 363              	.L23:
 264:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 364              		.loc 1 264 11 is_stmt 1 view .LVU90
ARM GAS  /tmp/ccrkArW5.s 			page 13


 365 007a 2046     		mov	r0, r4
 366 007c FFF7FEFF 		bl	MCP_ReceivedPacket
 367              	.LVL29:
 265:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 368              		.loc 1 265 11 view .LVU91
 265:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 369              		.loc 1 265 25 is_stmt 0 view .LVU92
 370 0080 2068     		ldr	r0, [r4]
 265:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 371              		.loc 1 265 11 view .LVU93
 372 0082 4568     		ldr	r5, [r0, #4]
 373 0084 0A23     		movs	r3, #10
 374 0086 E289     		ldrh	r2, [r4, #14]
 375 0088 A168     		ldr	r1, [r4, #8]
 376 008a A847     		blx	r5
 377              	.LVL30:
 378 008c F1E7     		b	.L20
 379              	.L25:
 380 008e 00BF     		.align	2
 381              	.L24:
 382 0090 00000000 		.word	.LANCHOR0
 383 0094 00000000 		.word	.LANCHOR1
 384 0098 00000000 		.word	.LANCHOR2
 385 009c 00000000 		.word	.LANCHOR3
 386 00a0 00000000 		.word	PerfTraces
 387 00a4 00000000 		.word	MCP_Over_UartA
 388              		.cfi_endproc
 389              	.LFE1995:
 391              		.section	.text.TSK_SetChargeBootCapDelayM1,"ax",%progbits
 392              		.align	1
 393              		.weak	TSK_SetChargeBootCapDelayM1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv4-sp-d16
 399              	TSK_SetChargeBootCapDelayM1:
 400              	.LVL31:
 401              	.LFB1996:
 299:Src/mc_tasks.c **** 
 300:Src/mc_tasks.c **** /**
 301:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the delay required
 302:Src/mc_tasks.c ****   *         for drivers boot capacitors charging of motor 1.
 303:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted.
 304:Src/mc_tasks.c ****   * @retval void
 305:Src/mc_tasks.c ****   */
 306:Src/mc_tasks.c **** __weak void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount)
 307:Src/mc_tasks.c **** {
 402              		.loc 1 307 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 308:Src/mc_tasks.c ****    hBootCapDelayCounterM1 = hTickCount;
 407              		.loc 1 308 4 view .LVU95
 408              		.loc 1 308 27 is_stmt 0 view .LVU96
 409 0000 014B     		ldr	r3, .L27
 410 0002 1880     		strh	r0, [r3]	@ movhi
ARM GAS  /tmp/ccrkArW5.s 			page 14


 309:Src/mc_tasks.c **** }
 411              		.loc 1 309 1 view .LVU97
 412 0004 7047     		bx	lr
 413              	.L28:
 414 0006 00BF     		.align	2
 415              	.L27:
 416 0008 00000000 		.word	.LANCHOR2
 417              		.cfi_endproc
 418              	.LFE1996:
 420              		.section	.text.TSK_ChargeBootCapDelayHasElapsedM1,"ax",%progbits
 421              		.align	1
 422              		.weak	TSK_ChargeBootCapDelayHasElapsedM1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	TSK_ChargeBootCapDelayHasElapsedM1:
 429              	.LFB1997:
 310:Src/mc_tasks.c **** 
 311:Src/mc_tasks.c **** /**
 312:Src/mc_tasks.c ****   * @brief  Use this function to know whether the time required to charge boot
 313:Src/mc_tasks.c ****   *         capacitors of motor 1 has elapsed.
 314:Src/mc_tasks.c ****   * @param  none
 315:Src/mc_tasks.c ****   * @retval bool true if time has elapsed, false otherwise.
 316:Src/mc_tasks.c ****   */
 317:Src/mc_tasks.c **** __weak bool TSK_ChargeBootCapDelayHasElapsedM1(void)
 318:Src/mc_tasks.c **** {
 430              		.loc 1 318 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 319:Src/mc_tasks.c ****   bool retVal = false;
 435              		.loc 1 319 3 view .LVU99
 436              	.LVL32:
 320:Src/mc_tasks.c ****   if (((uint16_t)0) == hBootCapDelayCounterM1)
 437              		.loc 1 320 3 view .LVU100
 438              		.loc 1 320 21 is_stmt 0 view .LVU101
 439 0000 034B     		ldr	r3, .L30
 440 0002 1888     		ldrh	r0, [r3]
 441 0004 80B2     		uxth	r0, r0
 442              	.LVL33:
 321:Src/mc_tasks.c ****   {
 322:Src/mc_tasks.c ****     retVal = true;
 323:Src/mc_tasks.c ****   }
 324:Src/mc_tasks.c ****   return (retVal);
 443              		.loc 1 324 3 is_stmt 1 view .LVU102
 325:Src/mc_tasks.c **** }
 444              		.loc 1 325 1 is_stmt 0 view .LVU103
 445 0006 B0FA80F0 		clz	r0, r0
 446              	.LVL34:
 447              		.loc 1 325 1 view .LVU104
 448 000a 4009     		lsrs	r0, r0, #5
 449 000c 7047     		bx	lr
 450              	.L31:
 451 000e 00BF     		.align	2
 452              	.L30:
ARM GAS  /tmp/ccrkArW5.s 			page 15


 453 0010 00000000 		.word	.LANCHOR2
 454              		.cfi_endproc
 455              	.LFE1997:
 457              		.section	.text.TSK_SetStopPermanencyTimeM1,"ax",%progbits
 458              		.align	1
 459              		.weak	TSK_SetStopPermanencyTimeM1
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv4-sp-d16
 465              	TSK_SetStopPermanencyTimeM1:
 466              	.LVL35:
 467              	.LFB1998:
 326:Src/mc_tasks.c **** 
 327:Src/mc_tasks.c **** /**
 328:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the permanency
 329:Src/mc_tasks.c ****   *         time in STOP state of motor 1.
 330:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted.
 331:Src/mc_tasks.c ****   * @retval void
 332:Src/mc_tasks.c ****   */
 333:Src/mc_tasks.c **** __weak void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount)
 334:Src/mc_tasks.c **** {
 468              		.loc 1 334 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 335:Src/mc_tasks.c ****   hStopPermanencyCounterM1 = hTickCount;
 473              		.loc 1 335 3 view .LVU106
 474              		.loc 1 335 28 is_stmt 0 view .LVU107
 475 0000 014B     		ldr	r3, .L33
 476 0002 1880     		strh	r0, [r3]	@ movhi
 336:Src/mc_tasks.c **** }
 477              		.loc 1 336 1 view .LVU108
 478 0004 7047     		bx	lr
 479              	.L34:
 480 0006 00BF     		.align	2
 481              	.L33:
 482 0008 00000000 		.word	.LANCHOR3
 483              		.cfi_endproc
 484              	.LFE1998:
 486              		.section	.text.TSK_StopPermanencyTimeHasElapsedM1,"ax",%progbits
 487              		.align	1
 488              		.weak	TSK_StopPermanencyTimeHasElapsedM1
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	TSK_StopPermanencyTimeHasElapsedM1:
 495              	.LFB1999:
 337:Src/mc_tasks.c **** 
 338:Src/mc_tasks.c **** /**
 339:Src/mc_tasks.c ****   * @brief  Use this function to know whether the permanency time in STOP state
 340:Src/mc_tasks.c ****   *         of motor 1 has elapsed.
 341:Src/mc_tasks.c ****   * @param  none
 342:Src/mc_tasks.c ****   * @retval bool true if time is elapsed, false otherwise.
 343:Src/mc_tasks.c ****   */
ARM GAS  /tmp/ccrkArW5.s 			page 16


 344:Src/mc_tasks.c **** __weak bool TSK_StopPermanencyTimeHasElapsedM1(void)
 345:Src/mc_tasks.c **** {
 496              		.loc 1 345 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 346:Src/mc_tasks.c ****   bool retVal = false;
 501              		.loc 1 346 3 view .LVU110
 502              	.LVL36:
 347:Src/mc_tasks.c ****   if (((uint16_t)0) == hStopPermanencyCounterM1)
 503              		.loc 1 347 3 view .LVU111
 504              		.loc 1 347 21 is_stmt 0 view .LVU112
 505 0000 034B     		ldr	r3, .L36
 506 0002 1888     		ldrh	r0, [r3]
 507 0004 80B2     		uxth	r0, r0
 508              	.LVL37:
 348:Src/mc_tasks.c ****   {
 349:Src/mc_tasks.c ****     retVal = true;
 350:Src/mc_tasks.c ****   }
 351:Src/mc_tasks.c ****   return (retVal);
 509              		.loc 1 351 3 is_stmt 1 view .LVU113
 352:Src/mc_tasks.c **** }
 510              		.loc 1 352 1 is_stmt 0 view .LVU114
 511 0006 B0FA80F0 		clz	r0, r0
 512              	.LVL38:
 513              		.loc 1 352 1 view .LVU115
 514 000a 4009     		lsrs	r0, r0, #5
 515 000c 7047     		bx	lr
 516              	.L37:
 517 000e 00BF     		.align	2
 518              	.L36:
 519 0010 00000000 		.word	.LANCHOR3
 520              		.cfi_endproc
 521              	.LFE1999:
 523              		.section	.text.TSK_HighFrequencyTask,"ax",%progbits
 524              		.align	1
 525              		.weak	TSK_HighFrequencyTask
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	TSK_HighFrequencyTask:
 532              	.LFB2000:
 353:Src/mc_tasks.c **** 
 354:Src/mc_tasks.c **** #if defined (CCMRAM)
 355:Src/mc_tasks.c **** #if defined (__ICCARM__)
 356:Src/mc_tasks.c **** #pragma location = ".ccmram"
 357:Src/mc_tasks.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 358:Src/mc_tasks.c **** __attribute__((section (".ccmram")))
 359:Src/mc_tasks.c **** #endif
 360:Src/mc_tasks.c **** #endif
 361:Src/mc_tasks.c **** 
 362:Src/mc_tasks.c **** /**
 363:Src/mc_tasks.c ****   * @brief  Executes the Motor Control duties that require a high frequency rate and a precise timi
 364:Src/mc_tasks.c ****   *
 365:Src/mc_tasks.c ****   *  This is mainly the FOC current control loop. It is executed depending on the state of the Moto
ARM GAS  /tmp/ccrkArW5.s 			page 17


 366:Src/mc_tasks.c ****   * subsystem (see the state machine(s)).
 367:Src/mc_tasks.c ****   *
 368:Src/mc_tasks.c ****   * @retval Number of the  motor instance which FOC loop was executed.
 369:Src/mc_tasks.c ****   */
 370:Src/mc_tasks.c **** __weak uint8_t TSK_HighFrequencyTask(void)
 371:Src/mc_tasks.c **** {
 533              		.loc 1 371 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 08B5     		push	{r3, lr}
 538              	.LCFI6:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
 372:Src/mc_tasks.c ****   uint8_t bMotorNbr;
 542              		.loc 1 372 3 view .LVU117
 373:Src/mc_tasks.c ****   bMotorNbr = 0;
 543              		.loc 1 373 3 view .LVU118
 544              	.LVL39:
 374:Src/mc_tasks.c **** 
 375:Src/mc_tasks.c ****   MC_Perf_Measure_Start(&PerfTraces, MEASURE_TSK_HighFrequencyTaskM1);
 545              		.loc 1 375 3 view .LVU119
 546              	.LBB35:
 547              	.LBI35:
 548              		.file 2 "Inc/mc_perf.h"
   1:Inc/mc_perf.h **** /**
   2:Inc/mc_perf.h ****   ******************************************************************************
   3:Inc/mc_perf.h ****   * @file    mc_perf.h
   4:Inc/mc_perf.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:Inc/mc_perf.h ****   * @brief   Execution time measurement definitions
   6:Inc/mc_perf.h ****   ******************************************************************************
   7:Inc/mc_perf.h ****   * @attention
   8:Inc/mc_perf.h ****   *
   9:Inc/mc_perf.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  10:Inc/mc_perf.h ****   * All rights reserved.</center></h2>
  11:Inc/mc_perf.h ****   *
  12:Inc/mc_perf.h ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Inc/mc_perf.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Inc/mc_perf.h ****   * the License. You may obtain a copy of the License at:
  15:Inc/mc_perf.h ****   *                             www.st.com/SLA0044
  16:Inc/mc_perf.h ****   *
  17:Inc/mc_perf.h ****   ******************************************************************************
  18:Inc/mc_perf.h ****   */
  19:Inc/mc_perf.h **** #ifndef MC_PERF_H
  20:Inc/mc_perf.h **** #define MC_PERF_H
  21:Inc/mc_perf.h **** 
  22:Inc/mc_perf.h **** typedef enum
  23:Inc/mc_perf.h **** {
  24:Inc/mc_perf.h ****   MEASURE_TSK_HighFrequencyTaskM1,
  25:Inc/mc_perf.h ****   MEASURE_TSK_MediumFrequencyTaskM1,
  26:Inc/mc_perf.h **** /*  Others functions to measure to be added here. */
  27:Inc/mc_perf.h **** } MC_PERF_FUNCTIONS_LIST_t;
  28:Inc/mc_perf.h **** 
  29:Inc/mc_perf.h **** /* Define max number of traces according to the list defined in MC_PERF_FUNCTIONS_LIST_t */
  30:Inc/mc_perf.h **** #define  MC_PERF_NB_TRACES  2U
  31:Inc/mc_perf.h **** 
ARM GAS  /tmp/ccrkArW5.s 			page 18


  32:Inc/mc_perf.h **** /* DWT (Data Watchpoint and Trace) registers, only exists on ARM Cortex with a DWT unit */
  33:Inc/mc_perf.h **** /* The DWT is usually implemented in Cortex-M3 or higher, but not on Cortex-M0(+) (ie not present o
  34:Inc/mc_perf.h **** 
  35:Inc/mc_perf.h **** typedef struct
  36:Inc/mc_perf.h **** {
  37:Inc/mc_perf.h ****     uint32_t  StartMeasure;
  38:Inc/mc_perf.h ****     uint32_t  DeltaTimeInCycle;
  39:Inc/mc_perf.h ****     uint32_t  min;
  40:Inc/mc_perf.h ****     uint32_t  max;
  41:Inc/mc_perf.h **** } Perf_Handle_t;
  42:Inc/mc_perf.h **** 
  43:Inc/mc_perf.h **** typedef struct
  44:Inc/mc_perf.h **** {
  45:Inc/mc_perf.h ****     bool   BG_Task_OnGoing;
  46:Inc/mc_perf.h ****     uint32_t  AccHighFreqTasksCnt;
  47:Inc/mc_perf.h ****     Perf_Handle_t MC_Perf_TraceLog[MC_PERF_NB_TRACES];
  48:Inc/mc_perf.h **** } MC_Perf_Handle_t;
  49:Inc/mc_perf.h **** 
  50:Inc/mc_perf.h **** void MC_Perf_Measure_Init(MC_Perf_Handle_t *pHandle);
  51:Inc/mc_perf.h **** void MC_Perf_Clear(MC_Perf_Handle_t *pHandle,uint8_t bMotor);
  52:Inc/mc_perf.h **** void MC_BG_Perf_Measure_Start(MC_Perf_Handle_t *pHandle, uint8_t i);
  53:Inc/mc_perf.h **** void MC_Perf_Measure_Stop(MC_Perf_Handle_t *pHandle, uint8_t i);
  54:Inc/mc_perf.h **** void MC_BG_Perf_Measure_Stop(MC_Perf_Handle_t *pHandle, uint8_t i);
  55:Inc/mc_perf.h **** 
  56:Inc/mc_perf.h **** float_t MC_Perf_GetCPU_Load(const MC_Perf_Handle_t *pHandle);
  57:Inc/mc_perf.h **** float_t MC_Perf_GetMaxCPU_Load(const MC_Perf_Handle_t *pHandle);
  58:Inc/mc_perf.h **** float_t MC_Perf_GetMinCPU_Load(const MC_Perf_Handle_t *pHandle);
  59:Inc/mc_perf.h **** 
  60:Inc/mc_perf.h **** /**
  61:Inc/mc_perf.h ****  * @brief  Start the measure of a code section called in foreground.
  62:Inc/mc_perf.h ****  * @param  pHandle: handler of the performance measurement component.
  63:Inc/mc_perf.h ****  * @param  CodeSection: code section to measure.
  64:Inc/mc_perf.h ****  */
  65:Inc/mc_perf.h **** static inline void MC_Perf_Measure_Start(MC_Perf_Handle_t *pHandle, uint8_t CodeSection)
 549              		.loc 2 65 20 view .LVU120
 550              	.LBB36:
  66:Inc/mc_perf.h **** {
  67:Inc/mc_perf.h **** #ifdef NULL_PTR_CHECK_MC_PERF
  68:Inc/mc_perf.h ****   if (MC_NULL == pHandle)
  69:Inc/mc_perf.h ****   {
  70:Inc/mc_perf.h ****     /* Nothing to do */
  71:Inc/mc_perf.h ****   }
  72:Inc/mc_perf.h ****   else
  73:Inc/mc_perf.h ****   {
  74:Inc/mc_perf.h **** #endif
  75:Inc/mc_perf.h ****     uint32_t StartMeasure = DWT->CYCCNT;
 551              		.loc 2 75 5 view .LVU121
 552              		.loc 2 75 14 is_stmt 0 view .LVU122
 553 0002 064B     		ldr	r3, .L40
 554 0004 5A68     		ldr	r2, [r3, #4]
 555              	.LVL40:
  76:Inc/mc_perf.h ****     pHandle->MC_Perf_TraceLog[CodeSection].StartMeasure = StartMeasure;
 556              		.loc 2 76 5 is_stmt 1 view .LVU123
 557              		.loc 2 76 57 is_stmt 0 view .LVU124
 558 0006 064B     		ldr	r3, .L40+4
 559 0008 9A60     		str	r2, [r3, #8]
 560              	.LVL41:
ARM GAS  /tmp/ccrkArW5.s 			page 19


 561              		.loc 2 76 57 view .LVU125
 562              	.LBE36:
 563              	.LBE35:
 376:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 0 */
 377:Src/mc_tasks.c **** 
 378:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 0 */
 379:Src/mc_tasks.c ****   FOC_HighFrequencyTask(bMotorNbr);
 564              		.loc 1 379 3 is_stmt 1 view .LVU126
 565 000a 0020     		movs	r0, #0
 566 000c FFF7FEFF 		bl	FOC_HighFrequencyTask
 567              	.LVL42:
 380:Src/mc_tasks.c **** 
 381:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 1 */
 382:Src/mc_tasks.c **** 
 383:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 1 */
 384:Src/mc_tasks.c **** 
 385:Src/mc_tasks.c ****   GLOBAL_TIMESTAMP++;
 568              		.loc 1 385 3 view .LVU127
 569              		.loc 1 385 19 is_stmt 0 view .LVU128
 570 0010 044A     		ldr	r2, .L40+8
 571 0012 1368     		ldr	r3, [r2]
 572 0014 0133     		adds	r3, r3, #1
 573 0016 1360     		str	r3, [r2]
 386:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 574              		.loc 1 386 3 is_stmt 1 view .LVU129
 387:Src/mc_tasks.c ****   {
 388:Src/mc_tasks.c ****     /* Nothing to do */
 389:Src/mc_tasks.c ****   }
 390:Src/mc_tasks.c ****   else
 391:Src/mc_tasks.c ****   {
 392:Src/mc_tasks.c ****    // MCPA_dataLog (&MCPA_UART_A);
 393:Src/mc_tasks.c ****   }
 575              		.loc 1 393 3 view .LVU130
 394:Src/mc_tasks.c **** 
 395:Src/mc_tasks.c ****  // MC_Perf_Measure_Stop(&PerfTraces, MEASURE_TSK_HighFrequencyTaskM1);
 396:Src/mc_tasks.c ****   return (bMotorNbr);
 576              		.loc 1 396 3 view .LVU131
 397:Src/mc_tasks.c **** 
 398:Src/mc_tasks.c **** }
 577              		.loc 1 398 1 is_stmt 0 view .LVU132
 578 0018 0020     		movs	r0, #0
 579 001a 08BD     		pop	{r3, pc}
 580              	.L41:
 581              		.align	2
 582              	.L40:
 583 001c 001000E0 		.word	-536866816
 584 0020 00000000 		.word	PerfTraces
 585 0024 00000000 		.word	GLOBAL_TIMESTAMP
 586              		.cfi_endproc
 587              	.LFE2000:
 589              		.section	.text.TSK_SafetyTask,"ax",%progbits
 590              		.align	1
 591              		.weak	TSK_SafetyTask
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccrkArW5.s 			page 20


 597              	TSK_SafetyTask:
 598              	.LFB2001:
 399:Src/mc_tasks.c **** 
 400:Src/mc_tasks.c **** /**
 401:Src/mc_tasks.c ****   * @brief  Executes safety checks (e.g. bus voltage and temperature) for all drive instances.
 402:Src/mc_tasks.c ****   *
 403:Src/mc_tasks.c ****   * Faults flags are updated here.
 404:Src/mc_tasks.c ****   */
 405:Src/mc_tasks.c **** __weak void TSK_SafetyTask(void)
 406:Src/mc_tasks.c **** {
 599              		.loc 1 406 1 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603 0000 08B5     		push	{r3, lr}
 604              	.LCFI7:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 3, -8
 607              		.cfi_offset 14, -4
 407:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
 408:Src/mc_tasks.c **** 
 409:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 0 */
 410:Src/mc_tasks.c ****   if (1U == bMCBootCompleted)
 608              		.loc 1 410 3 view .LVU134
 609              		.loc 1 410 10 is_stmt 0 view .LVU135
 610 0002 054B     		ldr	r3, .L46
 611 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 612 0006 DBB2     		uxtb	r3, r3
 613              		.loc 1 410 6 view .LVU136
 614 0008 012B     		cmp	r3, #1
 615 000a 00D0     		beq	.L45
 616              	.L42:
 411:Src/mc_tasks.c ****   {
 412:Src/mc_tasks.c ****     SCC_CheckOC_RL(&SCC);
 413:Src/mc_tasks.c ****    // TSK_SafetyTask_PWMOFF(M1);
 414:Src/mc_tasks.c ****     /* User conversion execution */
 415:Src/mc_tasks.c **** //    RCM_ExecUserConv();
 416:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
 417:Src/mc_tasks.c **** 
 418:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 1 */
 419:Src/mc_tasks.c ****   }
 420:Src/mc_tasks.c ****   else
 421:Src/mc_tasks.c ****   {
 422:Src/mc_tasks.c ****     /* Nothing to do */
 423:Src/mc_tasks.c ****   }
 424:Src/mc_tasks.c **** }
 617              		.loc 1 424 1 view .LVU137
 618 000c 08BD     		pop	{r3, pc}
 619              	.L45:
 412:Src/mc_tasks.c ****    // TSK_SafetyTask_PWMOFF(M1);
 620              		.loc 1 412 5 is_stmt 1 view .LVU138
 621 000e 0348     		ldr	r0, .L46+4
 622 0010 FFF7FEFF 		bl	SCC_CheckOC_RL
 623              	.LVL43:
 423:Src/mc_tasks.c **** }
 624              		.loc 1 423 3 view .LVU139
 625              		.loc 1 424 1 is_stmt 0 view .LVU140
ARM GAS  /tmp/ccrkArW5.s 			page 21


 626 0014 FAE7     		b	.L42
 627              	.L47:
 628 0016 00BF     		.align	2
 629              	.L46:
 630 0018 00000000 		.word	.LANCHOR0
 631 001c 00000000 		.word	SCC
 632              		.cfi_endproc
 633              	.LFE2001:
 635              		.section	.text.TSK_SafetyTask_PWMOFF,"ax",%progbits
 636              		.align	1
 637              		.weak	TSK_SafetyTask_PWMOFF
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv4-sp-d16
 643              	TSK_SafetyTask_PWMOFF:
 644              	.LVL44:
 645              	.LFB2002:
 425:Src/mc_tasks.c **** 
 426:Src/mc_tasks.c **** /**
 427:Src/mc_tasks.c ****   * @brief  Safety task implementation if  MC.M1_ON_OVER_VOLTAGE == TURN_OFF_PWM.
 428:Src/mc_tasks.c ****   * @param  bMotor Motor reference number defined
 429:Src/mc_tasks.c ****   *         \link Motors_reference_number here \endlink.
 430:Src/mc_tasks.c ****   */
 431:Src/mc_tasks.c **** __weak void TSK_SafetyTask_PWMOFF(uint8_t bMotor)
 432:Src/mc_tasks.c **** {
 646              		.loc 1 432 1 is_stmt 1 view -0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		.loc 1 432 1 is_stmt 0 view .LVU142
 651 0000 38B5     		push	{r3, r4, r5, lr}
 652              	.LCFI8:
 653              		.cfi_def_cfa_offset 16
 654              		.cfi_offset 3, -16
 655              		.cfi_offset 4, -12
 656              		.cfi_offset 5, -8
 657              		.cfi_offset 14, -4
 433:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 0 */
 434:Src/mc_tasks.c **** 
 435:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 0 */
 436:Src/mc_tasks.c ****   uint16_t CodeReturn = MC_NO_ERROR;
 658              		.loc 1 436 3 is_stmt 1 view .LVU143
 659              	.LVL45:
 437:Src/mc_tasks.c ****   uint8_t lbmotor = M1;
 660              		.loc 1 437 3 view .LVU144
 438:Src/mc_tasks.c ****   const uint16_t errMask[NBR_OF_MOTORS] = {VBUS_TEMP_ERR_MASK};
 661              		.loc 1 438 3 view .LVU145
 439:Src/mc_tasks.c ****   /* Check for fault if FW protection is activated. It returns MC_OVER_TEMP or MC_NO_ERROR */
 440:Src/mc_tasks.c ****   if (M1 == bMotor)
 662              		.loc 1 440 3 view .LVU146
 663              		.loc 1 440 6 is_stmt 0 view .LVU147
 664 0002 0546     		mov	r5, r0
 665 0004 90B1     		cbz	r0, .L54
 441:Src/mc_tasks.c ****   {
 442:Src/mc_tasks.c ****     uint16_t rawValueM1 = RCM_ExecRegularConv(&TempRegConv_M1);
 443:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
ARM GAS  /tmp/ccrkArW5.s 			page 22


 444:Src/mc_tasks.c ****   }
 445:Src/mc_tasks.c ****   else
 446:Src/mc_tasks.c ****   {
 447:Src/mc_tasks.c ****     /* Nothing to do */
 448:Src/mc_tasks.c ****   }
 666              		.loc 1 448 3 is_stmt 1 view .LVU148
 449:Src/mc_tasks.c **** 
 450:Src/mc_tasks.c **** /* Due to warning array subscript 1 is above array bounds of PWMC_Handle_t *[1] [-Warray-bounds] */
 451:Src/mc_tasks.c ****    CodeReturn |= PWMC_IsFaultOccurred(pwmcHandle[lbmotor]);     /* check for fault. It return MC_OV
 667              		.loc 1 451 4 view .LVU149
 668              		.loc 1 451 18 is_stmt 0 view .LVU150
 669 0006 234B     		ldr	r3, .L57
 670 0008 1868     		ldr	r0, [r3]
 671              	.LVL46:
 672              		.loc 1 451 18 view .LVU151
 673 000a FFF7FEFF 		bl	PWMC_IsFaultOccurred
 674              	.LVL47:
 675 000e 0146     		mov	r1, r0
 676              	.LVL48:
 452:Src/mc_tasks.c ****                                                      (for STM32F30x can return MC_OVER_VOLT in case
 453:Src/mc_tasks.c **** 
 454:Src/mc_tasks.c ****   if (M1 == bMotor)
 677              		.loc 1 454 3 is_stmt 1 view .LVU152
 678              	.L52:
 455:Src/mc_tasks.c ****   {
 456:Src/mc_tasks.c ****     uint16_t rawValueM1 =  RCM_ExecRegularConv(&VbusRegConv_M1);
 457:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 458:Src/mc_tasks.c ****   }
 459:Src/mc_tasks.c ****   else
 460:Src/mc_tasks.c ****   {
 461:Src/mc_tasks.c ****     /* Nothing to do */
 462:Src/mc_tasks.c ****   }
 679              		.loc 1 462 3 view .LVU153
 463:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[bMotor], CodeReturn, ~CodeReturn); /* Process faults */
 680              		.loc 1 463 3 view .LVU154
 681 0010 2C23     		movs	r3, #44
 682 0012 214C     		ldr	r4, .L57+4
 683 0014 03FB0544 		mla	r4, r3, r5, r4
 684 0018 CA43     		mvns	r2, r1
 685 001a 92B2     		uxth	r2, r2
 686 001c 2046     		mov	r0, r4
 687 001e FFF7FEFF 		bl	MCI_FaultProcessing
 688              	.LVL49:
 464:Src/mc_tasks.c **** 
 465:Src/mc_tasks.c ****   if (MCI_GetFaultState(&Mci[bMotor]) != (uint32_t)MC_NO_FAULTS)
 689              		.loc 1 465 3 view .LVU155
 690              		.loc 1 465 7 is_stmt 0 view .LVU156
 691 0022 2046     		mov	r0, r4
 692 0024 FFF7FEFF 		bl	MCI_GetFaultState
 693              	.LVL50:
 694              		.loc 1 465 6 view .LVU157
 695 0028 E0B9     		cbnz	r0, .L55
 696              	.LVL51:
 697              	.L48:
 466:Src/mc_tasks.c ****   {
 467:Src/mc_tasks.c ****       SCC_Stop(&SCC);
 468:Src/mc_tasks.c ****       OTT_Stop(&OTT);
ARM GAS  /tmp/ccrkArW5.s 			page 23


 469:Src/mc_tasks.c ****     PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
 470:Src/mc_tasks.c ****     if (MCPA_UART_A.Mark != 0U)
 471:Src/mc_tasks.c ****     {
 472:Src/mc_tasks.c ****       MCPA_flushDataLog (&MCPA_UART_A);
 473:Src/mc_tasks.c ****     }
 474:Src/mc_tasks.c ****     else
 475:Src/mc_tasks.c ****     {
 476:Src/mc_tasks.c ****       /* Nothing to do */
 477:Src/mc_tasks.c ****     }
 478:Src/mc_tasks.c ****     FOC_Clear(bMotor);
 479:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
 480:Src/mc_tasks.c **** 
 481:Src/mc_tasks.c ****     /* USER CODE END TSK_SafetyTask_PWMOFF 1 */
 482:Src/mc_tasks.c ****   }
 483:Src/mc_tasks.c ****   else
 484:Src/mc_tasks.c ****   {
 485:Src/mc_tasks.c ****     /* No errors */
 486:Src/mc_tasks.c ****   }
 487:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 3 */
 488:Src/mc_tasks.c **** 
 489:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 3 */
 490:Src/mc_tasks.c **** }
 698              		.loc 1 490 1 view .LVU158
 699 002a 38BD     		pop	{r3, r4, r5, pc}
 700              	.LVL52:
 701              	.L54:
 702              	.LBB37:
 442:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 703              		.loc 1 442 5 is_stmt 1 view .LVU159
 442:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 704              		.loc 1 442 27 is_stmt 0 view .LVU160
 705 002c 1B48     		ldr	r0, .L57+8
 706              	.LVL53:
 442:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 707              		.loc 1 442 27 view .LVU161
 708 002e FFF7FEFF 		bl	RCM_ExecRegularConv
 709              	.LVL54:
 710 0032 0146     		mov	r1, r0
 711              	.LVL55:
 443:Src/mc_tasks.c ****   }
 712              		.loc 1 443 5 is_stmt 1 view .LVU162
 443:Src/mc_tasks.c ****   }
 713              		.loc 1 443 37 is_stmt 0 view .LVU163
 714 0034 1A48     		ldr	r0, .L57+12
 715 0036 FFF7FEFF 		bl	NTC_CalcAvTemp
 716              	.LVL56:
 443:Src/mc_tasks.c ****   }
 717              		.loc 1 443 37 view .LVU164
 718 003a 0446     		mov	r4, r0
 719              	.LVL57:
 443:Src/mc_tasks.c ****   }
 720              		.loc 1 443 37 view .LVU165
 721              	.LBE37:
 448:Src/mc_tasks.c **** 
 722              		.loc 1 448 3 is_stmt 1 view .LVU166
 451:Src/mc_tasks.c ****                                                      (for STM32F30x can return MC_OVER_VOLT in case
 723              		.loc 1 451 4 view .LVU167
ARM GAS  /tmp/ccrkArW5.s 			page 24


 451:Src/mc_tasks.c ****                                                      (for STM32F30x can return MC_OVER_VOLT in case
 724              		.loc 1 451 18 is_stmt 0 view .LVU168
 725 003c 154B     		ldr	r3, .L57
 726 003e 1868     		ldr	r0, [r3]
 727 0040 FFF7FEFF 		bl	PWMC_IsFaultOccurred
 728              	.LVL58:
 729              	.LBB38:
 443:Src/mc_tasks.c ****   }
 730              		.loc 1 443 35 view .LVU169
 731 0044 04F00E04 		and	r4, r4, #14
 732              	.LVL59:
 443:Src/mc_tasks.c ****   }
 733              		.loc 1 443 35 view .LVU170
 734              	.LBE38:
 451:Src/mc_tasks.c ****                                                      (for STM32F30x can return MC_OVER_VOLT in case
 735              		.loc 1 451 15 view .LVU171
 736 0048 40EA0401 		orr	r1, r0, r4
 737 004c 8CB2     		uxth	r4, r1
 738              	.LVL60:
 454:Src/mc_tasks.c ****   {
 739              		.loc 1 454 3 is_stmt 1 view .LVU172
 740              	.LBB39:
 456:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 741              		.loc 1 456 5 view .LVU173
 456:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 742              		.loc 1 456 28 is_stmt 0 view .LVU174
 743 004e 1548     		ldr	r0, .L57+16
 744 0050 FFF7FEFF 		bl	RCM_ExecRegularConv
 745              	.LVL61:
 746 0054 0146     		mov	r1, r0
 747              	.LVL62:
 457:Src/mc_tasks.c ****   }
 748              		.loc 1 457 5 is_stmt 1 view .LVU175
 457:Src/mc_tasks.c ****   }
 749              		.loc 1 457 37 is_stmt 0 view .LVU176
 750 0056 1448     		ldr	r0, .L57+20
 751 0058 FFF7FEFF 		bl	RVBS_CalcAvVbus
 752              	.LVL63:
 457:Src/mc_tasks.c ****   }
 753              		.loc 1 457 35 view .LVU177
 754 005c 00F00E01 		and	r1, r0, #14
 457:Src/mc_tasks.c ****   }
 755              		.loc 1 457 16 view .LVU178
 756 0060 2143     		orrs	r1, r1, r4
 757              	.LVL64:
 457:Src/mc_tasks.c ****   }
 758              		.loc 1 457 16 view .LVU179
 759              	.LBE39:
 760 0062 D5E7     		b	.L52
 761              	.LVL65:
 762              	.L55:
 467:Src/mc_tasks.c ****       OTT_Stop(&OTT);
 763              		.loc 1 467 7 is_stmt 1 view .LVU180
 764 0064 1148     		ldr	r0, .L57+24
 765 0066 FFF7FEFF 		bl	SCC_Stop
 766              	.LVL66:
 468:Src/mc_tasks.c ****     PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
ARM GAS  /tmp/ccrkArW5.s 			page 25


 767              		.loc 1 468 7 view .LVU181
 768 006a 1148     		ldr	r0, .L57+28
 769 006c FFF7FEFF 		bl	OTT_Stop
 770              	.LVL67:
 469:Src/mc_tasks.c ****     if (MCPA_UART_A.Mark != 0U)
 771              		.loc 1 469 5 view .LVU182
 772 0070 084B     		ldr	r3, .L57
 773 0072 53F82500 		ldr	r0, [r3, r5, lsl #2]
 774 0076 FFF7FEFF 		bl	PWMC_SwitchOffPWM
 775              	.LVL68:
 470:Src/mc_tasks.c ****     {
 776              		.loc 1 470 5 view .LVU183
 470:Src/mc_tasks.c ****     {
 777              		.loc 1 470 20 is_stmt 0 view .LVU184
 778 007a 0E4B     		ldr	r3, .L57+32
 470:Src/mc_tasks.c ****     {
 779              		.loc 1 470 8 view .LVU185
 780 007c 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 781 0080 1BB9     		cbnz	r3, .L56
 782              	.L51:
 477:Src/mc_tasks.c ****     FOC_Clear(bMotor);
 783              		.loc 1 477 5 is_stmt 1 view .LVU186
 478:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
 784              		.loc 1 478 5 view .LVU187
 785 0082 2846     		mov	r0, r5
 786 0084 FFF7FEFF 		bl	FOC_Clear
 787              	.LVL69:
 486:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 3 */
 788              		.loc 1 486 3 view .LVU188
 789              		.loc 1 490 1 is_stmt 0 view .LVU189
 790 0088 CFE7     		b	.L48
 791              	.LVL70:
 792              	.L56:
 472:Src/mc_tasks.c ****     }
 793              		.loc 1 472 7 is_stmt 1 view .LVU190
 794 008a 0A48     		ldr	r0, .L57+32
 795 008c FFF7FEFF 		bl	MCPA_flushDataLog
 796              	.LVL71:
 797 0090 F7E7     		b	.L51
 798              	.L58:
 799 0092 00BF     		.align	2
 800              	.L57:
 801 0094 00000000 		.word	pwmcHandle
 802 0098 00000000 		.word	Mci
 803 009c 00000000 		.word	TempRegConv_M1
 804 00a0 00000000 		.word	TempSensor_M1
 805 00a4 00000000 		.word	VbusRegConv_M1
 806 00a8 00000000 		.word	BusVoltageSensor_M1
 807 00ac 00000000 		.word	SCC
 808 00b0 00000000 		.word	OTT
 809 00b4 00000000 		.word	MCPA_UART_A
 810              		.cfi_endproc
 811              	.LFE2002:
 813              		.section	.text.TSK_HardwareFaultTask,"ax",%progbits
 814              		.align	1
 815              		.weak	TSK_HardwareFaultTask
 816              		.syntax unified
ARM GAS  /tmp/ccrkArW5.s 			page 26


 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	TSK_HardwareFaultTask:
 822              	.LFB2003:
 491:Src/mc_tasks.c **** 
 492:Src/mc_tasks.c **** /**
 493:Src/mc_tasks.c ****   * @brief  Puts the Motor Control subsystem in in safety conditions on a Hard Fault
 494:Src/mc_tasks.c ****   *
 495:Src/mc_tasks.c ****   *  This function is to be executed when a general hardware failure has been detected
 496:Src/mc_tasks.c ****   * by the microcontroller and is used to put the system in safety condition.
 497:Src/mc_tasks.c ****   */
 498:Src/mc_tasks.c **** __weak void TSK_HardwareFaultTask(void)
 499:Src/mc_tasks.c **** {
 823              		.loc 1 499 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827 0000 08B5     		push	{r3, lr}
 828              	.LCFI9:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 3, -8
 831              		.cfi_offset 14, -4
 500:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 0 */
 501:Src/mc_tasks.c **** 
 502:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 0 */
 503:Src/mc_tasks.c ****   SCC_Stop(&SCC);
 832              		.loc 1 503 3 view .LVU192
 833 0002 0748     		ldr	r0, .L61
 834 0004 FFF7FEFF 		bl	SCC_Stop
 835              	.LVL72:
 504:Src/mc_tasks.c ****   OTT_Stop(&OTT);
 836              		.loc 1 504 3 view .LVU193
 837 0008 0648     		ldr	r0, .L61+4
 838 000a FFF7FEFF 		bl	OTT_Stop
 839              	.LVL73:
 505:Src/mc_tasks.c ****    FOC_Clear(M1);
 840              		.loc 1 505 4 view .LVU194
 841 000e 0020     		movs	r0, #0
 842 0010 FFF7FEFF 		bl	FOC_Clear
 843              	.LVL74:
 506:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[M1], MC_SW_ERROR, 0);
 844              		.loc 1 506 3 view .LVU195
 845 0014 0022     		movs	r2, #0
 846 0016 8021     		movs	r1, #128
 847 0018 0348     		ldr	r0, .L61+8
 848 001a FFF7FEFF 		bl	MCI_FaultProcessing
 849              	.LVL75:
 507:Src/mc_tasks.c **** 
 508:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 1 */
 509:Src/mc_tasks.c **** 
 510:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 1 */
 511:Src/mc_tasks.c **** }
 850              		.loc 1 511 1 is_stmt 0 view .LVU196
 851 001e 08BD     		pop	{r3, pc}
 852              	.L62:
 853              		.align	2
ARM GAS  /tmp/ccrkArW5.s 			page 27


 854              	.L61:
 855 0020 00000000 		.word	SCC
 856 0024 00000000 		.word	OTT
 857 0028 00000000 		.word	Mci
 858              		.cfi_endproc
 859              	.LFE2003:
 861              		.section	.text.startMediumFrequencyTask,"ax",%progbits
 862              		.align	1
 863              		.global	startMediumFrequencyTask
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv4-sp-d16
 869              	startMediumFrequencyTask:
 870              	.LVL76:
 871              	.LFB2004:
 512:Src/mc_tasks.c **** 
 513:Src/mc_tasks.c **** /* startMediumFrequencyTask function */
 514:Src/mc_tasks.c **** void startMediumFrequencyTask(void const * argument)
 515:Src/mc_tasks.c **** {
 872              		.loc 1 515 1 is_stmt 1 view -0
 873              		.cfi_startproc
 874              		@ Volatile: function does not return.
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		.loc 1 515 1 is_stmt 0 view .LVU198
 878 0000 08B5     		push	{r3, lr}
 879              	.LCFI10:
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 3, -8
 882              		.cfi_offset 14, -4
 516:Src/mc_tasks.c ****   /* USER CODE BEGIN MF task 1 */
 517:Src/mc_tasks.c ****   MX_FREERTOS_Init();
 883              		.loc 1 517 3 is_stmt 1 view .LVU199
 884 0002 FFF7FEFF 		bl	MX_FREERTOS_Init
 885              	.LVL77:
 518:Src/mc_tasks.c **** 
 519:Src/mc_tasks.c ****   vTaskDelay(100);
 886              		.loc 1 519 3 view .LVU200
 887 0006 6420     		movs	r0, #100
 888 0008 FFF7FEFF 		bl	vTaskDelay
 889              	.LVL78:
 520:Src/mc_tasks.c ****   MC_StartMotorOpenLoop(5000, 0, 30); // Higher voltage and frequency for reliable start
 890              		.loc 1 520 3 view .LVU201
 891 000c 1E22     		movs	r2, #30
 892 000e 0021     		movs	r1, #0
 893 0010 41F28830 		movw	r0, #5000
 894 0014 FFF7FEFF 		bl	MC_StartMotorOpenLoop
 895              	.LVL79:
 521:Src/mc_tasks.c **** 
 522:Src/mc_tasks.c ****   /* Infinite loop */
 523:Src/mc_tasks.c ****   for(;;)
 524:Src/mc_tasks.c ****   {
 525:Src/mc_tasks.c ****     /* Delay of 500us */
 526:Src/mc_tasks.c ****     vTaskDelay(1);
 896              		.loc 1 526 5 is_stmt 0 view .LVU202
 897 0018 0124     		movs	r4, #1
ARM GAS  /tmp/ccrkArW5.s 			page 28


 898              	.L64:
 523:Src/mc_tasks.c ****   {
 899              		.loc 1 523 3 is_stmt 1 discriminator 1 view .LVU203
 900              		.loc 1 526 5 discriminator 1 view .LVU204
 901 001a 2046     		mov	r0, r4
 902 001c FFF7FEFF 		bl	vTaskDelay
 903              	.LVL80:
 527:Src/mc_tasks.c **** 
 528:Src/mc_tasks.c ****     /* Buffer is ready by the HW layer to be processed */
 529:Src/mc_tasks.c ****     /* NO DMA interrupt */
 530:Src/mc_tasks.c ****     // if (LL_DMA_IsActiveFlag_TC(DMA_RX_A, DMACH_RX_A))
 531:Src/mc_tasks.c ****     // {
 532:Src/mc_tasks.c ****     //   LL_DMA_ClearFlag_TC(DMA_RX_A, DMACH_RX_A);
 533:Src/mc_tasks.c ****     //   ASPEP_HWDataReceivedIT(&aspepOverUartA);
 534:Src/mc_tasks.c ****     // }
 535:Src/mc_tasks.c ****     // else
 536:Src/mc_tasks.c ****     // {
 537:Src/mc_tasks.c ****     //   /* Nothing to do */
 538:Src/mc_tasks.c ****     // }
 539:Src/mc_tasks.c **** 
 540:Src/mc_tasks.c **** 
 541:Src/mc_tasks.c ****                 /* Process packet */
 542:Src/mc_tasks.c ****     
 543:Src/mc_tasks.c ****     MC_RunMotorControlTasks();
 904              		.loc 1 543 5 discriminator 1 view .LVU205
 905 0020 FFF7FEFF 		bl	MC_RunMotorControlTasks
 906              	.LVL81:
 523:Src/mc_tasks.c ****   {
 907              		.loc 1 523 8 discriminator 1 view .LVU206
 908 0024 F9E7     		b	.L64
 909              		.cfi_endproc
 910              	.LFE2004:
 912              		.section	.text.StartSafetyTask,"ax",%progbits
 913              		.align	1
 914              		.global	StartSafetyTask
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	StartSafetyTask:
 921              	.LVL82:
 922              	.LFB2005:
 544:Src/mc_tasks.c ****   }
 545:Src/mc_tasks.c ****   /* USER CODE END MF task 1 */
 546:Src/mc_tasks.c **** }
 547:Src/mc_tasks.c **** 
 548:Src/mc_tasks.c **** /* startSafetyTask function */
 549:Src/mc_tasks.c **** void StartSafetyTask(void const * argument)
 550:Src/mc_tasks.c **** {
 923              		.loc 1 550 1 view -0
 924              		.cfi_startproc
 925              		@ Volatile: function does not return.
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              		.loc 1 550 1 is_stmt 0 view .LVU208
 929 0000 08B5     		push	{r3, lr}
 930              	.LCFI11:
ARM GAS  /tmp/ccrkArW5.s 			page 29


 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 3, -8
 933              		.cfi_offset 14, -4
 551:Src/mc_tasks.c ****   /* USER CODE BEGIN SF task 1 */
 552:Src/mc_tasks.c ****   /* Infinite loop */
 553:Src/mc_tasks.c ****   for(;;)
 554:Src/mc_tasks.c ****   {
 555:Src/mc_tasks.c ****     /* Delay of 500us */
 556:Src/mc_tasks.c ****     vTaskDelay(1);
 934              		.loc 1 556 5 view .LVU209
 935 0002 0124     		movs	r4, #1
 936              	.LVL83:
 937              	.L67:
 553:Src/mc_tasks.c ****   {
 938              		.loc 1 553 3 is_stmt 1 discriminator 1 view .LVU210
 939              		.loc 1 556 5 discriminator 1 view .LVU211
 940 0004 2046     		mov	r0, r4
 941 0006 FFF7FEFF 		bl	vTaskDelay
 942              	.LVL84:
 557:Src/mc_tasks.c ****     TSK_SafetyTask();
 943              		.loc 1 557 5 discriminator 1 view .LVU212
 944 000a FFF7FEFF 		bl	TSK_SafetyTask
 945              	.LVL85:
 553:Src/mc_tasks.c ****   {
 946              		.loc 1 553 8 discriminator 1 view .LVU213
 947 000e F9E7     		b	.L67
 948              		.cfi_endproc
 949              	.LFE2005:
 951              		.section	.text.UI_HandleStartStopButton_cb,"ax",%progbits
 952              		.align	1
 953              		.weak	UI_HandleStartStopButton_cb
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 957              		.fpu fpv4-sp-d16
 959              	UI_HandleStartStopButton_cb:
 960              	.LFB2006:
 558:Src/mc_tasks.c ****   }
 559:Src/mc_tasks.c ****   /* USER CODE END SF task 1 */
 560:Src/mc_tasks.c **** }
 561:Src/mc_tasks.c **** 
 562:Src/mc_tasks.c **** __weak void UI_HandleStartStopButton_cb (void)
 563:Src/mc_tasks.c **** {
 961              		.loc 1 563 1 view -0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965 0000 08B5     		push	{r3, lr}
 966              	.LCFI12:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 3, -8
 969              		.cfi_offset 14, -4
 564:Src/mc_tasks.c **** /* USER CODE BEGIN START_STOP_BTN */
 565:Src/mc_tasks.c ****   if (IDLE == MC_GetSTMStateMotor1())
 970              		.loc 1 565 3 view .LVU215
 971              		.loc 1 565 15 is_stmt 0 view .LVU216
 972 0002 FFF7FEFF 		bl	MC_GetSTMStateMotor1
ARM GAS  /tmp/ccrkArW5.s 			page 30


 973              	.LVL86:
 974              		.loc 1 565 6 view .LVU217
 975 0006 10B9     		cbnz	r0, .L70
 566:Src/mc_tasks.c ****   {
 567:Src/mc_tasks.c ****     /* Ramp parameters should be tuned for the actual motor */
 568:Src/mc_tasks.c ****     (void)MC_StartMotor1();
 976              		.loc 1 568 5 is_stmt 1 view .LVU218
 977              		.loc 1 568 11 is_stmt 0 view .LVU219
 978 0008 FFF7FEFF 		bl	MC_StartMotor1
 979              	.LVL87:
 980              	.L69:
 569:Src/mc_tasks.c ****   }
 570:Src/mc_tasks.c ****   else
 571:Src/mc_tasks.c ****   {
 572:Src/mc_tasks.c ****     (void)MC_StopMotor1();
 573:Src/mc_tasks.c ****   }
 574:Src/mc_tasks.c **** /* USER CODE END START_STOP_BTN */
 575:Src/mc_tasks.c **** }
 981              		.loc 1 575 1 view .LVU220
 982 000c 08BD     		pop	{r3, pc}
 983              	.L70:
 572:Src/mc_tasks.c ****   }
 984              		.loc 1 572 5 is_stmt 1 view .LVU221
 572:Src/mc_tasks.c ****   }
 985              		.loc 1 572 11 is_stmt 0 view .LVU222
 986 000e FFF7FEFF 		bl	MC_StopMotor1
 987              	.LVL88:
 988              		.loc 1 575 1 view .LVU223
 989 0012 FBE7     		b	.L69
 990              		.cfi_endproc
 991              	.LFE2006:
 993              		.section	.text.mc_lock_pins,"ax",%progbits
 994              		.align	1
 995              		.weak	mc_lock_pins
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu fpv4-sp-d16
 1001              	mc_lock_pins:
 1002              	.LFB2007:
 576:Src/mc_tasks.c **** 
 577:Src/mc_tasks.c ****  /**
 578:Src/mc_tasks.c ****   * @brief  Locks GPIO pins used for Motor Control to prevent accidental reconfiguration.
 579:Src/mc_tasks.c ****   */
 580:Src/mc_tasks.c **** __weak void mc_lock_pins (void)
 581:Src/mc_tasks.c **** {
 1003              		.loc 1 581 1 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 64
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008 0000 30B4     		push	{r4, r5}
 1009              	.LCFI13:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 4, -8
 1012              		.cfi_offset 5, -4
 1013 0002 90B0     		sub	sp, sp, #64
ARM GAS  /tmp/ccrkArW5.s 			page 31


 1014              	.LCFI14:
 1015              		.cfi_def_cfa_offset 72
 582:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_TEMPERATURE_GPIO_Port, M1_TEMPERATURE_Pin);
 1016              		.loc 1 582 1 view .LVU225
 1017              	.LVL89:
 1018              	.LBB40:
 1019              	.LBI40:
 1020              		.file 3 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/ccrkArW5.s 			page 32


  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
ARM GAS  /tmp/ccrkArW5.s 			page 33


 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/ccrkArW5.s 			page 34


 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/ccrkArW5.s 			page 35


 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  /tmp/ccrkArW5.s 			page 36


 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
ARM GAS  /tmp/ccrkArW5.s 			page 37


 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
ARM GAS  /tmp/ccrkArW5.s 			page 38


 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
ARM GAS  /tmp/ccrkArW5.s 			page 39


 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  /tmp/ccrkArW5.s 			page 40


 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
ARM GAS  /tmp/ccrkArW5.s 			page 41


 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
ARM GAS  /tmp/ccrkArW5.s 			page 42


 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
ARM GAS  /tmp/ccrkArW5.s 			page 43


 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         next reset.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         (control and alternate function registers).
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 1021              		.loc 3 719 22 view .LVU226
 1022              	.LBB41:
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   __IO uint32_t temp;
 1023              		.loc 3 721 3 view .LVU227
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1024              		.loc 3 722 3 view .LVU228
 1025 0004 444A     		ldr	r2, .L75
 1026 0006 454B     		ldr	r3, .L75+4
 1027 0008 D361     		str	r3, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1028              		.loc 3 723 3 view .LVU229
 1029 000a 1021     		movs	r1, #16
 1030 000c D161     		str	r1, [r2, #28]
ARM GAS  /tmp/ccrkArW5.s 			page 44


 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1031              		.loc 3 724 3 view .LVU230
 1032 000e D361     		str	r3, [r2, #28]
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 1033              		.loc 3 726 3 view .LVU231
 1034              		.loc 3 726 10 is_stmt 0 view .LVU232
 1035 0010 D369     		ldr	r3, [r2, #28]
 1036              		.loc 3 726 8 view .LVU233
 1037 0012 0F93     		str	r3, [sp, #60]
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1038              		.loc 3 727 3 is_stmt 1 view .LVU234
 1039 0014 0F9B     		ldr	r3, [sp, #60]
 1040              	.LVL90:
 1041              		.loc 3 727 3 is_stmt 0 view .LVU235
 1042              	.LBE41:
 1043              	.LBE40:
 583:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_BUS_VOLTAGE_GPIO_Port, M1_BUS_VOLTAGE_Pin);
 1044              		.loc 1 583 1 is_stmt 1 view .LVU236
 1045              	.LBB42:
 1046              	.LBI42:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1047              		.loc 3 719 22 view .LVU237
 1048              	.LBB43:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1049              		.loc 3 721 3 view .LVU238
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1050              		.loc 3 722 3 view .LVU239
 1051 0016 4FF09043 		mov	r3, #1207959552
 1052 001a 4FF00111 		mov	r1, #65537
 1053 001e D961     		str	r1, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1054              		.loc 3 723 3 view .LVU240
 1055 0020 0120     		movs	r0, #1
 1056 0022 D861     		str	r0, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1057              		.loc 3 724 3 view .LVU241
 1058 0024 D961     		str	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1059              		.loc 3 726 3 view .LVU242
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1060              		.loc 3 726 10 is_stmt 0 view .LVU243
 1061 0026 DC69     		ldr	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1062              		.loc 3 726 8 view .LVU244
 1063 0028 0E94     		str	r4, [sp, #56]
 1064              		.loc 3 727 3 is_stmt 1 view .LVU245
 1065 002a 0E9C     		ldr	r4, [sp, #56]
 1066              	.LVL91:
 1067              		.loc 3 727 3 is_stmt 0 view .LVU246
 1068              	.LBE43:
 1069              	.LBE42:
 584:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_V_GPIO_Port, M1_CURR_SHUNT_V_Pin);
 1070              		.loc 1 584 1 is_stmt 1 view .LVU247
 1071              	.LBB44:
 1072              	.LBI44:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
ARM GAS  /tmp/ccrkArW5.s 			page 45


 1073              		.loc 3 719 22 view .LVU248
 1074              	.LBB45:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1075              		.loc 3 721 3 view .LVU249
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1076              		.loc 3 722 3 view .LVU250
 1077 002c 3C4C     		ldr	r4, .L75+8
 1078 002e DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1079              		.loc 3 723 3 view .LVU251
 1080 0030 8025     		movs	r5, #128
 1081 0032 DD61     		str	r5, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1082              		.loc 3 724 3 view .LVU252
 1083 0034 DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1084              		.loc 3 726 3 view .LVU253
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1085              		.loc 3 726 10 is_stmt 0 view .LVU254
 1086 0036 DC69     		ldr	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1087              		.loc 3 726 8 view .LVU255
 1088 0038 0D94     		str	r4, [sp, #52]
 1089              		.loc 3 727 3 is_stmt 1 view .LVU256
 1090 003a 0D9C     		ldr	r4, [sp, #52]
 1091              	.LVL92:
 1092              		.loc 3 727 3 is_stmt 0 view .LVU257
 1093              	.LBE45:
 1094              	.LBE44:
 585:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_U_GPIO_Port, M1_CURR_SHUNT_U_Pin);
 1095              		.loc 1 585 1 is_stmt 1 view .LVU258
 1096              	.LBB46:
 1097              	.LBI46:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1098              		.loc 3 719 22 view .LVU259
 1099              	.LBB47:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1100              		.loc 3 721 3 view .LVU260
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1101              		.loc 3 722 3 view .LVU261
 1102 003c 394C     		ldr	r4, .L75+12
 1103 003e DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1104              		.loc 3 723 3 view .LVU262
 1105 0040 0225     		movs	r5, #2
 1106 0042 DD61     		str	r5, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1107              		.loc 3 724 3 view .LVU263
 1108 0044 DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1109              		.loc 3 726 3 view .LVU264
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1110              		.loc 3 726 10 is_stmt 0 view .LVU265
 1111 0046 DC69     		ldr	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1112              		.loc 3 726 8 view .LVU266
 1113 0048 0C94     		str	r4, [sp, #48]
ARM GAS  /tmp/ccrkArW5.s 			page 46


 1114              		.loc 3 727 3 is_stmt 1 view .LVU267
 1115 004a 0C9C     		ldr	r4, [sp, #48]
 1116              	.LVL93:
 1117              		.loc 3 727 3 is_stmt 0 view .LVU268
 1118              	.LBE47:
 1119              	.LBE46:
 586:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP1_EXT_GAIN_GPIO_Port, M1_OPAMP1_EXT_GAIN_Pin);
 1120              		.loc 1 586 1 is_stmt 1 view .LVU269
 1121              	.LBB48:
 1122              	.LBI48:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1123              		.loc 3 719 22 view .LVU270
 1124              	.LBB49:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1125              		.loc 3 721 3 view .LVU271
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1126              		.loc 3 722 3 view .LVU272
 1127 004c 364C     		ldr	r4, .L75+16
 1128 004e DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1129              		.loc 3 723 3 view .LVU273
 1130 0050 0825     		movs	r5, #8
 1131 0052 DD61     		str	r5, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1132              		.loc 3 724 3 view .LVU274
 1133 0054 DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1134              		.loc 3 726 3 view .LVU275
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1135              		.loc 3 726 10 is_stmt 0 view .LVU276
 1136 0056 DC69     		ldr	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1137              		.loc 3 726 8 view .LVU277
 1138 0058 0B94     		str	r4, [sp, #44]
 1139              		.loc 3 727 3 is_stmt 1 view .LVU278
 1140 005a 0B9C     		ldr	r4, [sp, #44]
 1141              	.LVL94:
 1142              		.loc 3 727 3 is_stmt 0 view .LVU279
 1143              	.LBE49:
 1144              	.LBE48:
 587:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP1_OUT_GPIO_Port, M1_OPAMP1_OUT_Pin);
 1145              		.loc 1 587 1 is_stmt 1 view .LVU280
 1146              	.LBB50:
 1147              	.LBI50:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1148              		.loc 3 719 22 view .LVU281
 1149              	.LBB51:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1150              		.loc 3 721 3 view .LVU282
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1151              		.loc 3 722 3 view .LVU283
 1152 005c 334C     		ldr	r4, .L75+20
 1153 005e DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1154              		.loc 3 723 3 view .LVU284
 1155 0060 0425     		movs	r5, #4
 1156 0062 DD61     		str	r5, [r3, #28]
ARM GAS  /tmp/ccrkArW5.s 			page 47


 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1157              		.loc 3 724 3 view .LVU285
 1158 0064 DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1159              		.loc 3 726 3 view .LVU286
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1160              		.loc 3 726 10 is_stmt 0 view .LVU287
 1161 0066 DC69     		ldr	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1162              		.loc 3 726 8 view .LVU288
 1163 0068 0A94     		str	r4, [sp, #40]
 1164              		.loc 3 727 3 is_stmt 1 view .LVU289
 1165 006a 0A9C     		ldr	r4, [sp, #40]
 1166              	.LVL95:
 1167              		.loc 3 727 3 is_stmt 0 view .LVU290
 1168              	.LBE51:
 1169              	.LBE50:
 588:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP2_OUT_GPIO_Port, M1_OPAMP2_OUT_Pin);
 1170              		.loc 1 588 1 is_stmt 1 view .LVU291
 1171              	.LBB52:
 1172              	.LBI52:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1173              		.loc 3 719 22 view .LVU292
 1174              	.LBB53:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1175              		.loc 3 721 3 view .LVU293
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1176              		.loc 3 722 3 view .LVU294
 1177 006c 304C     		ldr	r4, .L75+24
 1178 006e DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1179              		.loc 3 723 3 view .LVU295
 1180 0070 4025     		movs	r5, #64
 1181 0072 DD61     		str	r5, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1182              		.loc 3 724 3 view .LVU296
 1183 0074 DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1184              		.loc 3 726 3 view .LVU297
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1185              		.loc 3 726 10 is_stmt 0 view .LVU298
 1186 0076 DB69     		ldr	r3, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1187              		.loc 3 726 8 view .LVU299
 1188 0078 0993     		str	r3, [sp, #36]
 1189              		.loc 3 727 3 is_stmt 1 view .LVU300
 1190 007a 099B     		ldr	r3, [sp, #36]
 1191              	.LVL96:
 1192              		.loc 3 727 3 is_stmt 0 view .LVU301
 1193              	.LBE53:
 1194              	.LBE52:
 589:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP2_EXT_GAIN_GPIO_Port, M1_OPAMP2_EXT_GAIN_Pin);
 1195              		.loc 1 589 1 is_stmt 1 view .LVU302
 1196              	.LBB54:
 1197              	.LBI54:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1198              		.loc 3 719 22 view .LVU303
ARM GAS  /tmp/ccrkArW5.s 			page 48


 1199              	.LBB55:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1200              		.loc 3 721 3 view .LVU304
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1201              		.loc 3 722 3 view .LVU305
 1202 007c 2D4B     		ldr	r3, .L75+28
 1203 007e D361     		str	r3, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1204              		.loc 3 723 3 view .LVU306
 1205 0080 2024     		movs	r4, #32
 1206 0082 D461     		str	r4, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1207              		.loc 3 724 3 view .LVU307
 1208 0084 D361     		str	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1209              		.loc 3 726 3 view .LVU308
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1210              		.loc 3 726 10 is_stmt 0 view .LVU309
 1211 0086 D369     		ldr	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1212              		.loc 3 726 8 view .LVU310
 1213 0088 0893     		str	r3, [sp, #32]
 1214              		.loc 3 727 3 is_stmt 1 view .LVU311
 1215 008a 089B     		ldr	r3, [sp, #32]
 1216              	.LVL97:
 1217              		.loc 3 727 3 is_stmt 0 view .LVU312
 1218              	.LBE55:
 1219              	.LBE54:
 590:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_W_GPIO_Port, M1_CURR_SHUNT_W_Pin);
 1220              		.loc 1 590 1 is_stmt 1 view .LVU313
 1221              	.LBB56:
 1222              	.LBI56:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1223              		.loc 3 719 22 view .LVU314
 1224              	.LBB57:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1225              		.loc 3 721 3 view .LVU315
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1226              		.loc 3 722 3 view .LVU316
 1227 008c 2A4B     		ldr	r3, .L75+32
 1228 008e D961     		str	r1, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1229              		.loc 3 723 3 view .LVU317
 1230 0090 D861     		str	r0, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1231              		.loc 3 724 3 view .LVU318
 1232 0092 D961     		str	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1233              		.loc 3 726 3 view .LVU319
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1234              		.loc 3 726 10 is_stmt 0 view .LVU320
 1235 0094 DB69     		ldr	r3, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1236              		.loc 3 726 8 view .LVU321
 1237 0096 0793     		str	r3, [sp, #28]
 1238              		.loc 3 727 3 is_stmt 1 view .LVU322
 1239 0098 079B     		ldr	r3, [sp, #28]
ARM GAS  /tmp/ccrkArW5.s 			page 49


 1240              	.LVL98:
 1241              		.loc 3 727 3 is_stmt 0 view .LVU323
 1242              	.LBE57:
 1243              	.LBE56:
 591:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UH_GPIO_Port, M1_PWM_UH_Pin);
 1244              		.loc 1 591 1 is_stmt 1 view .LVU324
 1245              	.LBB58:
 1246              	.LBI58:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1247              		.loc 3 719 22 view .LVU325
 1248              	.LBB59:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1249              		.loc 3 721 3 view .LVU326
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1250              		.loc 3 722 3 view .LVU327
 1251 009a 284B     		ldr	r3, .L75+36
 1252 009c 4FF48132 		mov	r2, #66048
 1253 00a0 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1254              		.loc 3 723 3 view .LVU328
 1255 00a2 4FF40071 		mov	r1, #512
 1256 00a6 D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1257              		.loc 3 724 3 view .LVU329
 1258 00a8 DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1259              		.loc 3 726 3 view .LVU330
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1260              		.loc 3 726 10 is_stmt 0 view .LVU331
 1261 00aa DA69     		ldr	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1262              		.loc 3 726 8 view .LVU332
 1263 00ac 0692     		str	r2, [sp, #24]
 1264              		.loc 3 727 3 is_stmt 1 view .LVU333
 1265 00ae 069A     		ldr	r2, [sp, #24]
 1266              	.LVL99:
 1267              		.loc 3 727 3 is_stmt 0 view .LVU334
 1268              	.LBE59:
 1269              	.LBE58:
 592:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VH_GPIO_Port, M1_PWM_VH_Pin);
 1270              		.loc 1 592 1 is_stmt 1 view .LVU335
 1271              	.LBB60:
 1272              	.LBI60:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1273              		.loc 3 719 22 view .LVU336
 1274              	.LBB61:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1275              		.loc 3 721 3 view .LVU337
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1276              		.loc 3 722 3 view .LVU338
 1277 00b0 4FF48432 		mov	r2, #67584
 1278 00b4 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1279              		.loc 3 723 3 view .LVU339
 1280 00b6 4FF40061 		mov	r1, #2048
 1281 00ba D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
ARM GAS  /tmp/ccrkArW5.s 			page 50


 1282              		.loc 3 724 3 view .LVU340
 1283 00bc DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1284              		.loc 3 726 3 view .LVU341
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1285              		.loc 3 726 10 is_stmt 0 view .LVU342
 1286 00be DA69     		ldr	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1287              		.loc 3 726 8 view .LVU343
 1288 00c0 0592     		str	r2, [sp, #20]
 1289              		.loc 3 727 3 is_stmt 1 view .LVU344
 1290 00c2 059A     		ldr	r2, [sp, #20]
 1291              	.LVL100:
 1292              		.loc 3 727 3 is_stmt 0 view .LVU345
 1293              	.LBE61:
 1294              	.LBE60:
 593:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VL_GPIO_Port, M1_PWM_VL_Pin);
 1295              		.loc 1 593 1 is_stmt 1 view .LVU346
 1296              	.LBB62:
 1297              	.LBI62:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1298              		.loc 3 719 22 view .LVU347
 1299              	.LBB63:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1300              		.loc 3 721 3 view .LVU348
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1301              		.loc 3 722 3 view .LVU349
 1302 00c4 4FF48232 		mov	r2, #66560
 1303 00c8 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1304              		.loc 3 723 3 view .LVU350
 1305 00ca 4FF48061 		mov	r1, #1024
 1306 00ce D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1307              		.loc 3 724 3 view .LVU351
 1308 00d0 DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1309              		.loc 3 726 3 view .LVU352
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1310              		.loc 3 726 10 is_stmt 0 view .LVU353
 1311 00d2 DA69     		ldr	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1312              		.loc 3 726 8 view .LVU354
 1313 00d4 0492     		str	r2, [sp, #16]
 1314              		.loc 3 727 3 is_stmt 1 view .LVU355
 1315 00d6 049A     		ldr	r2, [sp, #16]
 1316              	.LVL101:
 1317              		.loc 3 727 3 is_stmt 0 view .LVU356
 1318              	.LBE63:
 1319              	.LBE62:
 594:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WH_GPIO_Port, M1_PWM_WH_Pin);
 1320              		.loc 1 594 1 is_stmt 1 view .LVU357
 1321              	.LBB64:
 1322              	.LBI64:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1323              		.loc 3 719 22 view .LVU358
 1324              	.LBB65:
ARM GAS  /tmp/ccrkArW5.s 			page 51


 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1325              		.loc 3 721 3 view .LVU359
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1326              		.loc 3 722 3 view .LVU360
 1327 00d8 4FF49032 		mov	r2, #73728
 1328 00dc DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1329              		.loc 3 723 3 view .LVU361
 1330 00de 4FF40051 		mov	r1, #8192
 1331 00e2 D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1332              		.loc 3 724 3 view .LVU362
 1333 00e4 DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1334              		.loc 3 726 3 view .LVU363
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1335              		.loc 3 726 10 is_stmt 0 view .LVU364
 1336 00e6 DA69     		ldr	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1337              		.loc 3 726 8 view .LVU365
 1338 00e8 0392     		str	r2, [sp, #12]
 1339              		.loc 3 727 3 is_stmt 1 view .LVU366
 1340 00ea 039A     		ldr	r2, [sp, #12]
 1341              	.LVL102:
 1342              		.loc 3 727 3 is_stmt 0 view .LVU367
 1343              	.LBE65:
 1344              	.LBE64:
 595:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WL_GPIO_Port, M1_PWM_WL_Pin);
 1345              		.loc 1 595 1 is_stmt 1 view .LVU368
 1346              	.LBB66:
 1347              	.LBI66:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1348              		.loc 3 719 22 view .LVU369
 1349              	.LBB67:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1350              		.loc 3 721 3 view .LVU370
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1351              		.loc 3 722 3 view .LVU371
 1352 00ec 4FF48832 		mov	r2, #69632
 1353 00f0 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1354              		.loc 3 723 3 view .LVU372
 1355 00f2 4FF48051 		mov	r1, #4096
 1356 00f6 D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1357              		.loc 3 724 3 view .LVU373
 1358 00f8 DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1359              		.loc 3 726 3 view .LVU374
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1360              		.loc 3 726 10 is_stmt 0 view .LVU375
 1361 00fa DA69     		ldr	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1362              		.loc 3 726 8 view .LVU376
 1363 00fc 0292     		str	r2, [sp, #8]
 1364              		.loc 3 727 3 is_stmt 1 view .LVU377
 1365 00fe 029A     		ldr	r2, [sp, #8]
ARM GAS  /tmp/ccrkArW5.s 			page 52


 1366              	.LVL103:
 1367              		.loc 3 727 3 is_stmt 0 view .LVU378
 1368              	.LBE67:
 1369              	.LBE66:
 596:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UL_GPIO_Port, M1_PWM_UL_Pin);
 1370              		.loc 1 596 1 is_stmt 1 view .LVU379
 1371              	.LBB68:
 1372              	.LBI68:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1373              		.loc 3 719 22 view .LVU380
 1374              	.LBB69:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1375              		.loc 3 721 3 view .LVU381
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 1376              		.loc 3 722 3 view .LVU382
 1377 0100 0F4A     		ldr	r2, .L75+40
 1378 0102 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 1379              		.loc 3 723 3 view .LVU383
 1380 0104 4FF48071 		mov	r1, #256
 1381 0108 D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 1382              		.loc 3 724 3 view .LVU384
 1383 010a DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1384              		.loc 3 726 3 view .LVU385
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1385              		.loc 3 726 10 is_stmt 0 view .LVU386
 1386 010c DB69     		ldr	r3, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 1387              		.loc 3 726 8 view .LVU387
 1388 010e 0193     		str	r3, [sp, #4]
 1389              		.loc 3 727 3 is_stmt 1 view .LVU388
 1390 0110 019B     		ldr	r3, [sp, #4]
 1391              	.LVL104:
 1392              		.loc 3 727 3 is_stmt 0 view .LVU389
 1393              	.LBE69:
 1394              	.LBE68:
 597:Src/mc_tasks.c **** }
 1395              		.loc 1 597 1 view .LVU390
 1396 0112 10B0     		add	sp, sp, #64
 1397              	.LCFI15:
 1398              		.cfi_def_cfa_offset 8
 1399              		@ sp needed
 1400 0114 30BC     		pop	{r4, r5}
 1401              	.LCFI16:
 1402              		.cfi_restore 5
 1403              		.cfi_restore 4
 1404              		.cfi_def_cfa_offset 0
 1405 0116 7047     		bx	lr
 1406              	.L76:
 1407              		.align	2
 1408              	.L75:
 1409 0118 00080048 		.word	1207961600
 1410 011c 10000100 		.word	65552
 1411 0120 80000100 		.word	65664
 1412 0124 02000100 		.word	65538
ARM GAS  /tmp/ccrkArW5.s 			page 53


 1413 0128 08000100 		.word	65544
 1414 012c 04000100 		.word	65540
 1415 0130 40000100 		.word	65600
 1416 0134 20000100 		.word	65568
 1417 0138 00040048 		.word	1207960576
 1418 013c 00100048 		.word	1207963648
 1419 0140 00010100 		.word	65792
 1420              		.cfi_endproc
 1421              	.LFE2007:
 1423              		.section	.bss.bMCBootCompleted,"aw",%nobits
 1424              		.set	.LANCHOR0,. + 0
 1427              	bMCBootCompleted:
 1428 0000 00       		.space	1
 1429              		.section	.bss.hBootCapDelayCounterM1,"aw",%nobits
 1430              		.align	1
 1431              		.set	.LANCHOR2,. + 0
 1434              	hBootCapDelayCounterM1:
 1435 0000 0000     		.space	2
 1436              		.section	.bss.hMFTaskCounterM1,"aw",%nobits
 1437              		.align	1
 1438              		.set	.LANCHOR1,. + 0
 1441              	hMFTaskCounterM1:
 1442 0000 0000     		.space	2
 1443              		.section	.bss.hStopPermanencyCounterM1,"aw",%nobits
 1444              		.align	1
 1445              		.set	.LANCHOR3,. + 0
 1448              	hStopPermanencyCounterM1:
 1449 0000 0000     		.space	2
 1450              		.text
 1451              	.Letext0:
 1452              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1453              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1454              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 1455              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1456              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1457              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1458              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1459              		.file 11 "Inc/mc_type.h"
 1460              		.file 12 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 1461              		.file 13 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 1462              		.file 14 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 1463              		.file 15 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 1464              		.file 16 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 1465              		.file 17 "Inc/pwm_curr_fdbk.h"
 1466              		.file 18 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
 1467              		.file 19 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 1468              		.file 20 "Inc/mc_interface.h"
 1469              		.file 21 "Inc/regular_conversion_manager.h"
 1470              		.file 22 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 1471              		.file 23 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 1472              		.file 24 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/stspin32g4.h"
 1473              		.file 25 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
 1474              		.file 26 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 1475              		.file 27 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h"
 1476              		.file 28 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 1477              		.file 29 "Inc/hall_speed_pos_fdbk.h"
 1478              		.file 30 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_hall_tuning.h"
ARM GAS  /tmp/ccrkArW5.s 			page 54


 1479              		.file 31 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h"
 1480              		.file 32 "Inc/mc_config_common.h"
 1481              		.file 33 "Inc/mc_config.h"
 1482              		.file 34 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 1483              		.file 35 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcp.h"
 1484              		.file 36 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcpa.h"
 1485              		.file 37 "Inc/mcp_config.h"
 1486              		.file 38 "Inc/mc_api.h"
 1487              		.file 39 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1488              		.file 40 "Inc/freertos_vars.h"
 1489              		.file 41 "Inc/mc_tasks.h"
 1490              		.file 42 "Inc/mc_app_hooks.h"
ARM GAS  /tmp/ccrkArW5.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mc_tasks.c
     /tmp/ccrkArW5.s:18     .text.MCboot:0000000000000000 $t
     /tmp/ccrkArW5.s:26     .text.MCboot:0000000000000000 MCboot
     /tmp/ccrkArW5.s:155    .text.MCboot:000000000000008c $d
     /tmp/ccrkArW5.s:169    .text.MC_StartMotorOpenLoop:0000000000000000 $t
     /tmp/ccrkArW5.s:176    .text.MC_StartMotorOpenLoop:0000000000000000 MC_StartMotorOpenLoop
     /tmp/ccrkArW5.s:235    .text.MC_StartMotorOpenLoop:0000000000000024 $d
     /tmp/ccrkArW5.s:241    .text.MC_RunMotorControlTasks:0000000000000000 $t
     /tmp/ccrkArW5.s:248    .text.MC_RunMotorControlTasks:0000000000000000 MC_RunMotorControlTasks
     /tmp/ccrkArW5.s:382    .text.MC_RunMotorControlTasks:0000000000000090 $d
     /tmp/ccrkArW5.s:392    .text.TSK_SetChargeBootCapDelayM1:0000000000000000 $t
     /tmp/ccrkArW5.s:399    .text.TSK_SetChargeBootCapDelayM1:0000000000000000 TSK_SetChargeBootCapDelayM1
     /tmp/ccrkArW5.s:416    .text.TSK_SetChargeBootCapDelayM1:0000000000000008 $d
     /tmp/ccrkArW5.s:421    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000000 $t
     /tmp/ccrkArW5.s:428    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000000 TSK_ChargeBootCapDelayHasElapsedM1
     /tmp/ccrkArW5.s:453    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000010 $d
     /tmp/ccrkArW5.s:458    .text.TSK_SetStopPermanencyTimeM1:0000000000000000 $t
     /tmp/ccrkArW5.s:465    .text.TSK_SetStopPermanencyTimeM1:0000000000000000 TSK_SetStopPermanencyTimeM1
     /tmp/ccrkArW5.s:482    .text.TSK_SetStopPermanencyTimeM1:0000000000000008 $d
     /tmp/ccrkArW5.s:487    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000000 $t
     /tmp/ccrkArW5.s:494    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000000 TSK_StopPermanencyTimeHasElapsedM1
     /tmp/ccrkArW5.s:519    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000010 $d
     /tmp/ccrkArW5.s:524    .text.TSK_HighFrequencyTask:0000000000000000 $t
     /tmp/ccrkArW5.s:531    .text.TSK_HighFrequencyTask:0000000000000000 TSK_HighFrequencyTask
     /tmp/ccrkArW5.s:583    .text.TSK_HighFrequencyTask:000000000000001c $d
     /tmp/ccrkArW5.s:590    .text.TSK_SafetyTask:0000000000000000 $t
     /tmp/ccrkArW5.s:597    .text.TSK_SafetyTask:0000000000000000 TSK_SafetyTask
     /tmp/ccrkArW5.s:630    .text.TSK_SafetyTask:0000000000000018 $d
     /tmp/ccrkArW5.s:636    .text.TSK_SafetyTask_PWMOFF:0000000000000000 $t
     /tmp/ccrkArW5.s:643    .text.TSK_SafetyTask_PWMOFF:0000000000000000 TSK_SafetyTask_PWMOFF
     /tmp/ccrkArW5.s:801    .text.TSK_SafetyTask_PWMOFF:0000000000000094 $d
     /tmp/ccrkArW5.s:814    .text.TSK_HardwareFaultTask:0000000000000000 $t
     /tmp/ccrkArW5.s:821    .text.TSK_HardwareFaultTask:0000000000000000 TSK_HardwareFaultTask
     /tmp/ccrkArW5.s:855    .text.TSK_HardwareFaultTask:0000000000000020 $d
     /tmp/ccrkArW5.s:862    .text.startMediumFrequencyTask:0000000000000000 $t
     /tmp/ccrkArW5.s:869    .text.startMediumFrequencyTask:0000000000000000 startMediumFrequencyTask
     /tmp/ccrkArW5.s:913    .text.StartSafetyTask:0000000000000000 $t
     /tmp/ccrkArW5.s:920    .text.StartSafetyTask:0000000000000000 StartSafetyTask
     /tmp/ccrkArW5.s:952    .text.UI_HandleStartStopButton_cb:0000000000000000 $t
     /tmp/ccrkArW5.s:959    .text.UI_HandleStartStopButton_cb:0000000000000000 UI_HandleStartStopButton_cb
     /tmp/ccrkArW5.s:994    .text.mc_lock_pins:0000000000000000 $t
     /tmp/ccrkArW5.s:1001   .text.mc_lock_pins:0000000000000000 mc_lock_pins
     /tmp/ccrkArW5.s:1409   .text.mc_lock_pins:0000000000000118 $d
     /tmp/ccrkArW5.s:1427   .bss.bMCBootCompleted:0000000000000000 bMCBootCompleted
     /tmp/ccrkArW5.s:1428   .bss.bMCBootCompleted:0000000000000000 $d
     /tmp/ccrkArW5.s:1430   .bss.hBootCapDelayCounterM1:0000000000000000 $d
     /tmp/ccrkArW5.s:1434   .bss.hBootCapDelayCounterM1:0000000000000000 hBootCapDelayCounterM1
     /tmp/ccrkArW5.s:1437   .bss.hMFTaskCounterM1:0000000000000000 $d
     /tmp/ccrkArW5.s:1441   .bss.hMFTaskCounterM1:0000000000000000 hMFTaskCounterM1
     /tmp/ccrkArW5.s:1444   .bss.hStopPermanencyCounterM1:0000000000000000 $d
     /tmp/ccrkArW5.s:1448   .bss.hStopPermanencyCounterM1:0000000000000000 hStopPermanencyCounterM1

UNDEFINED SYMBOLS
FOC_Init
PID_HandleInit
VSS_Init
ARM GAS  /tmp/ccrkArW5.s 			page 56


RCM_RegisterRegConv
RVBS_Init
NTC_Init
MC_Perf_Measure_Init
STSPIN32G4_init
STSPIN32G4_reset
STSPIN32G4_setVCC
STSPIN32G4_setVDSP
STSPIN32G4_clearFaults
MC_APP_BootHook
Mci
PIDSpeedHandle_M1
VirtualSpeedSensorM1
VbusRegConv_M1
BusVoltageSensor_M1
TempRegConv_M1
TempSensor_M1
PerfTraces
HdlSTSPING4
MCI_GetSTMState
MCI_StartMotor
FOCVars
MC_BG_Perf_Measure_Start
TSK_MediumFrequencyTaskM1
MC_BG_Perf_Measure_Stop
MC_APP_PostMediumFrequencyHook_M1
MCP_ReceivedPacket
MCP_Over_UartA
FOC_HighFrequencyTask
GLOBAL_TIMESTAMP
SCC_CheckOC_RL
SCC
PWMC_IsFaultOccurred
MCI_FaultProcessing
MCI_GetFaultState
RCM_ExecRegularConv
NTC_CalcAvTemp
RVBS_CalcAvVbus
SCC_Stop
OTT_Stop
PWMC_SwitchOffPWM
FOC_Clear
MCPA_flushDataLog
pwmcHandle
OTT
MCPA_UART_A
MX_FREERTOS_Init
vTaskDelay
MC_GetSTMStateMotor1
MC_StartMotor1
MC_StopMotor1
