ARM GAS  /tmp/ccSlfBPZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"mc_tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004\00488"
  22      04040404 
  22      3838
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\010"
  28      00000800 
  28      0008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000\000"
  34      00000800 
  34      0000
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\024"
  40      080A0C0E 
  40      1014
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\012"
  46      04050607 
  46      080A
  47              		.section	.text.LL_GPIO_LockPin,"ax",%progbits
  48              		.align	1
  49              		.arch armv7e-m
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	LL_GPIO_LockPin:
  56              	.LFB862:
  57              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
ARM GAS  /tmp/ccSlfBPZ.s 			page 2


   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
ARM GAS  /tmp/ccSlfBPZ.s 			page 3


  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
ARM GAS  /tmp/ccSlfBPZ.s 			page 4


 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
ARM GAS  /tmp/ccSlfBPZ.s 			page 5


 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
ARM GAS  /tmp/ccSlfBPZ.s 			page 6


 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
ARM GAS  /tmp/ccSlfBPZ.s 			page 7


 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/ccSlfBPZ.s 			page 8


 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  /tmp/ccSlfBPZ.s 			page 9


 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
ARM GAS  /tmp/ccSlfBPZ.s 			page 10


 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  /tmp/ccSlfBPZ.s 			page 11


 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
ARM GAS  /tmp/ccSlfBPZ.s 			page 12


 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
ARM GAS  /tmp/ccSlfBPZ.s 			page 13


 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
ARM GAS  /tmp/ccSlfBPZ.s 			page 14


 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         next reset.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         (control and alternate function registers).
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  58              		.loc 1 720 1
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 16
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0000 80B4     		push	{r7}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0002 85B0     		sub	sp, sp, #20
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 24
  70 0004 00AF     		add	r7, sp, #0
  71              	.LCFI2:
  72              		.cfi_def_cfa_register 7
  73 0006 7860     		str	r0, [r7, #4]
  74 0008 3960     		str	r1, [r7]
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   __IO uint32_t temp;
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
  75              		.loc 1 722 3
  76 000a 3B68     		ldr	r3, [r7]
  77 000c 43F48032 		orr	r2, r3, #65536
ARM GAS  /tmp/ccSlfBPZ.s 			page 15


  78 0010 7B68     		ldr	r3, [r7, #4]
  79 0012 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
  80              		.loc 1 723 3
  81 0014 7B68     		ldr	r3, [r7, #4]
  82 0016 3A68     		ldr	r2, [r7]
  83 0018 DA61     		str	r2, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
  84              		.loc 1 724 3
  85 001a 3B68     		ldr	r3, [r7]
  86 001c 43F48032 		orr	r2, r3, #65536
  87 0020 7B68     		ldr	r3, [r7, #4]
  88 0022 DA61     		str	r2, [r3, #28]
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
  89              		.loc 1 726 10
  90 0024 7B68     		ldr	r3, [r7, #4]
  91 0026 DB69     		ldr	r3, [r3, #28]
  92              		.loc 1 726 8
  93 0028 FB60     		str	r3, [r7, #12]
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
  94              		.loc 1 727 3
  95 002a FB68     		ldr	r3, [r7, #12]
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
  96              		.loc 1 728 1
  97 002c 00BF     		nop
  98 002e 1437     		adds	r7, r7, #20
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 4
 101 0030 BD46     		mov	sp, r7
 102              	.LCFI4:
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0032 5DF8047B 		ldr	r7, [sp], #4
 106              	.LCFI5:
 107              		.cfi_restore 7
 108              		.cfi_def_cfa_offset 0
 109 0036 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE862:
 113              		.section	.rodata.USART_PRESCALER_TAB,"a"
 114              		.align	2
 117              	USART_PRESCALER_TAB:
 118 0000 01000000 		.word	1
 119 0004 02000000 		.word	2
 120 0008 04000000 		.word	4
 121 000c 06000000 		.word	6
 122 0010 08000000 		.word	8
 123 0014 0A000000 		.word	10
 124 0018 0C000000 		.word	12
 125 001c 10000000 		.word	16
 126 0020 20000000 		.word	32
 127 0024 40000000 		.word	64
 128 0028 80000000 		.word	128
 129 002c 00010000 		.word	256
 130              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
 131              		.align	2
ARM GAS  /tmp/ccSlfBPZ.s 			page 16


 134              	CHANNEL_OFFSET_TAB:
 135 0000 081C3044 		.ascii	"\010\0340DXl"
 135      586C
 136              		.section	.text.MC_Perf_Measure_Start,"ax",%progbits
 137              		.align	1
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	MC_Perf_Measure_Start:
 144              	.LFB1456:
 145              		.file 2 "Inc/mc_perf.h"
   1:Inc/mc_perf.h **** /**
   2:Inc/mc_perf.h ****   ******************************************************************************
   3:Inc/mc_perf.h ****   * @file    mc_perf.h
   4:Inc/mc_perf.h ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:Inc/mc_perf.h ****   * @brief   Execution time measurement definitions
   6:Inc/mc_perf.h ****   ******************************************************************************
   7:Inc/mc_perf.h ****   * @attention
   8:Inc/mc_perf.h ****   *
   9:Inc/mc_perf.h ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  10:Inc/mc_perf.h ****   * All rights reserved.</center></h2>
  11:Inc/mc_perf.h ****   *
  12:Inc/mc_perf.h ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Inc/mc_perf.h ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Inc/mc_perf.h ****   * the License. You may obtain a copy of the License at:
  15:Inc/mc_perf.h ****   *                             www.st.com/SLA0044
  16:Inc/mc_perf.h ****   *
  17:Inc/mc_perf.h ****   ******************************************************************************
  18:Inc/mc_perf.h ****   */
  19:Inc/mc_perf.h **** #ifndef MC_PERF_H
  20:Inc/mc_perf.h **** #define MC_PERF_H
  21:Inc/mc_perf.h **** 
  22:Inc/mc_perf.h **** typedef enum
  23:Inc/mc_perf.h **** {
  24:Inc/mc_perf.h ****   MEASURE_TSK_HighFrequencyTaskM1,
  25:Inc/mc_perf.h ****   MEASURE_TSK_MediumFrequencyTaskM1,
  26:Inc/mc_perf.h **** /*  Others functions to measure to be added here. */
  27:Inc/mc_perf.h **** } MC_PERF_FUNCTIONS_LIST_t;
  28:Inc/mc_perf.h **** 
  29:Inc/mc_perf.h **** /* Define max number of traces according to the list defined in MC_PERF_FUNCTIONS_LIST_t */
  30:Inc/mc_perf.h **** #define  MC_PERF_NB_TRACES  2U
  31:Inc/mc_perf.h **** 
  32:Inc/mc_perf.h **** /* DWT (Data Watchpoint and Trace) registers, only exists on ARM Cortex with a DWT unit */
  33:Inc/mc_perf.h **** /* The DWT is usually implemented in Cortex-M3 or higher, but not on Cortex-M0(+) (ie not present o
  34:Inc/mc_perf.h **** 
  35:Inc/mc_perf.h **** typedef struct
  36:Inc/mc_perf.h **** {
  37:Inc/mc_perf.h ****     uint32_t  StartMeasure;
  38:Inc/mc_perf.h ****     uint32_t  DeltaTimeInCycle;
  39:Inc/mc_perf.h ****     uint32_t  min;
  40:Inc/mc_perf.h ****     uint32_t  max;
  41:Inc/mc_perf.h **** } Perf_Handle_t;
  42:Inc/mc_perf.h **** 
  43:Inc/mc_perf.h **** typedef struct
  44:Inc/mc_perf.h **** {
  45:Inc/mc_perf.h ****     bool   BG_Task_OnGoing;
ARM GAS  /tmp/ccSlfBPZ.s 			page 17


  46:Inc/mc_perf.h ****     uint32_t  AccHighFreqTasksCnt;
  47:Inc/mc_perf.h ****     Perf_Handle_t MC_Perf_TraceLog[MC_PERF_NB_TRACES];
  48:Inc/mc_perf.h **** } MC_Perf_Handle_t;
  49:Inc/mc_perf.h **** 
  50:Inc/mc_perf.h **** void MC_Perf_Measure_Init(MC_Perf_Handle_t *pHandle);
  51:Inc/mc_perf.h **** void MC_Perf_Clear(MC_Perf_Handle_t *pHandle,uint8_t bMotor);
  52:Inc/mc_perf.h **** void MC_BG_Perf_Measure_Start(MC_Perf_Handle_t *pHandle, uint8_t i);
  53:Inc/mc_perf.h **** void MC_Perf_Measure_Stop(MC_Perf_Handle_t *pHandle, uint8_t i);
  54:Inc/mc_perf.h **** void MC_BG_Perf_Measure_Stop(MC_Perf_Handle_t *pHandle, uint8_t i);
  55:Inc/mc_perf.h **** 
  56:Inc/mc_perf.h **** float_t MC_Perf_GetCPU_Load(const MC_Perf_Handle_t *pHandle);
  57:Inc/mc_perf.h **** float_t MC_Perf_GetMaxCPU_Load(const MC_Perf_Handle_t *pHandle);
  58:Inc/mc_perf.h **** float_t MC_Perf_GetMinCPU_Load(const MC_Perf_Handle_t *pHandle);
  59:Inc/mc_perf.h **** 
  60:Inc/mc_perf.h **** /**
  61:Inc/mc_perf.h ****  * @brief  Start the measure of a code section called in foreground.
  62:Inc/mc_perf.h ****  * @param  pHandle: handler of the performance measurement component.
  63:Inc/mc_perf.h ****  * @param  CodeSection: code section to measure.
  64:Inc/mc_perf.h ****  */
  65:Inc/mc_perf.h **** static inline void MC_Perf_Measure_Start(MC_Perf_Handle_t *pHandle, uint8_t CodeSection)
  66:Inc/mc_perf.h **** {
 146              		.loc 2 66 1
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 16
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151 0000 80B4     		push	{r7}
 152              	.LCFI6:
 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 7, -4
 155 0002 85B0     		sub	sp, sp, #20
 156              	.LCFI7:
 157              		.cfi_def_cfa_offset 24
 158 0004 00AF     		add	r7, sp, #0
 159              	.LCFI8:
 160              		.cfi_def_cfa_register 7
 161 0006 7860     		str	r0, [r7, #4]
 162 0008 0B46     		mov	r3, r1
 163 000a FB70     		strb	r3, [r7, #3]
  67:Inc/mc_perf.h **** #ifdef NULL_PTR_CHECK_MC_PERF
  68:Inc/mc_perf.h ****   if (MC_NULL == pHandle)
  69:Inc/mc_perf.h ****   {
  70:Inc/mc_perf.h ****     /* Nothing to do */
  71:Inc/mc_perf.h ****   }
  72:Inc/mc_perf.h ****   else
  73:Inc/mc_perf.h ****   {
  74:Inc/mc_perf.h **** #endif
  75:Inc/mc_perf.h ****     uint32_t StartMeasure = DWT->CYCCNT;
 164              		.loc 2 75 32
 165 000c 074B     		ldr	r3, .L3
 166              		.loc 2 75 14
 167 000e 5B68     		ldr	r3, [r3, #4]
 168 0010 FB60     		str	r3, [r7, #12]
  76:Inc/mc_perf.h ****     pHandle->MC_Perf_TraceLog[CodeSection].StartMeasure = StartMeasure;
 169              		.loc 2 76 43
 170 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 171              		.loc 2 76 57
ARM GAS  /tmp/ccSlfBPZ.s 			page 18


 172 0014 7A68     		ldr	r2, [r7, #4]
 173 0016 1B01     		lsls	r3, r3, #4
 174 0018 1344     		add	r3, r3, r2
 175 001a 0833     		adds	r3, r3, #8
 176 001c FA68     		ldr	r2, [r7, #12]
 177 001e 1A60     		str	r2, [r3]
  77:Inc/mc_perf.h **** #ifdef NULL_PTR_CHECK_MC_PERF
  78:Inc/mc_perf.h ****   }
  79:Inc/mc_perf.h **** #endif
  80:Inc/mc_perf.h **** }
 178              		.loc 2 80 1
 179 0020 00BF     		nop
 180 0022 1437     		adds	r7, r7, #20
 181              	.LCFI9:
 182              		.cfi_def_cfa_offset 4
 183 0024 BD46     		mov	sp, r7
 184              	.LCFI10:
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0026 5DF8047B 		ldr	r7, [sp], #4
 188              	.LCFI11:
 189              		.cfi_restore 7
 190              		.cfi_def_cfa_offset 0
 191 002a 7047     		bx	lr
 192              	.L4:
 193              		.align	2
 194              	.L3:
 195 002c 001000E0 		.word	-536866816
 196              		.cfi_endproc
 197              	.LFE1456:
 199              		.section	.bss.hMFTaskCounterM1,"aw",%nobits
 200              		.align	1
 203              	hMFTaskCounterM1:
 204 0000 0000     		.space	2
 205              		.section	.bss.hBootCapDelayCounterM1,"aw",%nobits
 206              		.align	1
 209              	hBootCapDelayCounterM1:
 210 0000 0000     		.space	2
 211              		.section	.bss.hStopPermanencyCounterM1,"aw",%nobits
 212              		.align	1
 215              	hStopPermanencyCounterM1:
 216 0000 0000     		.space	2
 217              		.section	.bss.bMCBootCompleted,"aw",%nobits
 220              	bMCBootCompleted:
 221 0000 00       		.space	1
 222              		.section	.rodata
 223              		.align	2
 224              	.LC0:
 225 0000 03       		.byte	3
 226 0001 01       		.byte	1
 227 0002 00       		.byte	0
 228 0003 00       		.align	2
 229              	.LC1:
 230 0004 01       		.byte	1
 231 0005 01       		.byte	1
 232              		.section	.text.MCboot,"ax",%progbits
 233              		.align	1
ARM GAS  /tmp/ccSlfBPZ.s 			page 19


 234              		.weak	MCboot
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	MCboot:
 241              	.LFB1872:
 242              		.file 3 "Src/mc_tasks.c"
   1:Src/mc_tasks.c **** 
   2:Src/mc_tasks.c **** /**
   3:Src/mc_tasks.c ****   ******************************************************************************
   4:Src/mc_tasks.c ****   * @file    mc_tasks.c
   5:Src/mc_tasks.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/mc_tasks.c ****   * @brief   This file implements tasks definition
   7:Src/mc_tasks.c ****   *
   8:Src/mc_tasks.c ****   ******************************************************************************
   9:Src/mc_tasks.c ****   * @attention
  10:Src/mc_tasks.c ****   *
  11:Src/mc_tasks.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  12:Src/mc_tasks.c ****   * All rights reserved.</center></h2>
  13:Src/mc_tasks.c ****   *
  14:Src/mc_tasks.c ****   * This software component is licensed by ST under Ultimate Liberty license
  15:Src/mc_tasks.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:Src/mc_tasks.c ****   * the License. You may obtain a copy of the License at:
  17:Src/mc_tasks.c ****   *                             www.st.com/SLA0044
  18:Src/mc_tasks.c ****   *
  19:Src/mc_tasks.c ****   ******************************************************************************
  20:Src/mc_tasks.c ****   */
  21:Src/mc_tasks.c **** 
  22:Src/mc_tasks.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/mc_tasks.c **** //cstat -MISRAC2012-Rule-21.1
  24:Src/mc_tasks.c **** #include "main.h"
  25:Src/mc_tasks.c **** //cstat +MISRAC2012-Rule-21.1
  26:Src/mc_tasks.c **** #include "mc_type.h"
  27:Src/mc_tasks.c **** #include "mc_math.h"
  28:Src/mc_tasks.c **** #include "motorcontrol.h"
  29:Src/mc_tasks.c **** #include "regular_conversion_manager.h"
  30:Src/mc_tasks.c **** #include "cmsis_os.h"
  31:Src/mc_tasks.c **** #include "mc_interface.h"
  32:Src/mc_tasks.c **** #include "digital_output.h"
  33:Src/mc_tasks.c **** #include "pwm_common.h"
  34:Src/mc_tasks.c **** #include "mc_tasks.h"
  35:Src/mc_tasks.c **** #include "parameters_conversion.h"
  36:Src/mc_tasks.c **** #include "mcp_config.h"
  37:Src/mc_tasks.c **** #include "mc_app_hooks.h"
  38:Src/mc_tasks.c **** 
  39:Src/mc_tasks.c **** /* USER CODE BEGIN Includes */
  40:Src/mc_tasks.c **** 
  41:Src/mc_tasks.c **** /* USER CODE END Includes */
  42:Src/mc_tasks.c **** 
  43:Src/mc_tasks.c **** /* USER CODE BEGIN Private define */
  44:Src/mc_tasks.c **** /* Private define ------------------------------------------------------------*/
  45:Src/mc_tasks.c **** /* Un-Comment this macro define in order to activate the smooth
  46:Src/mc_tasks.c ****    braking action on over voltage */
  47:Src/mc_tasks.c **** /* #define  MC.SMOOTH_BRAKING_ACTION_ON_OVERVOLTAGE */
  48:Src/mc_tasks.c **** 
  49:Src/mc_tasks.c **** /* USER CODE END Private define */
ARM GAS  /tmp/ccSlfBPZ.s 			page 20


  50:Src/mc_tasks.c **** 
  51:Src/mc_tasks.c **** #define VBUS_TEMP_ERR_MASK (MC_OVER_VOLT| MC_UNDER_VOLT| MC_OVER_TEMP)
  52:Src/mc_tasks.c **** /* Private variables----------------------------------------------------------*/
  53:Src/mc_tasks.c **** 
  54:Src/mc_tasks.c **** static uint16_t hMFTaskCounterM1 = 0; //cstat !MISRAC2012-Rule-8.9_a
  55:Src/mc_tasks.c **** static volatile uint16_t hBootCapDelayCounterM1 = ((uint16_t)0);
  56:Src/mc_tasks.c **** static volatile uint16_t hStopPermanencyCounterM1 = ((uint16_t)0);
  57:Src/mc_tasks.c **** static volatile uint8_t bMCBootCompleted = ((uint8_t)0);
  58:Src/mc_tasks.c **** 
  59:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_TICKS          (((uint16_t)SYS_TICK_FREQUENCY * (uint16_t)10) / 1000U)
  60:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_DUTY_CYCLES ((uint32_t)0.000\
  61:Src/mc_tasks.c ****                                       * ((uint32_t)PWM_PERIOD_CYCLES / 2U))
  62:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_TICKS         (((uint16_t)SYS_TICK_FREQUENCY * (uint16_t)10) / 1000U)
  63:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_DUTY_CYCLES ((uint32_t)0\
  64:Src/mc_tasks.c ****                                       * ((uint32_t)PWM_PERIOD_CYCLES2 / 2U))
  65:Src/mc_tasks.c **** 
  66:Src/mc_tasks.c **** /* USER CODE BEGIN Private Variables */
  67:Src/mc_tasks.c **** 
  68:Src/mc_tasks.c **** /* USER CODE END Private Variables */
  69:Src/mc_tasks.c **** 
  70:Src/mc_tasks.c **** /* Private functions ---------------------------------------------------------*/
  71:Src/mc_tasks.c **** void TSK_MediumFrequencyTaskM1(void);
  72:Src/mc_tasks.c **** void TSK_MF_StopProcessing(uint8_t motor);
  73:Src/mc_tasks.c **** MCI_Handle_t *GetMCI(uint8_t bMotor);
  74:Src/mc_tasks.c **** void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount);
  75:Src/mc_tasks.c **** bool TSK_ChargeBootCapDelayHasElapsedM1(void);
  76:Src/mc_tasks.c **** void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount);
  77:Src/mc_tasks.c **** bool TSK_StopPermanencyTimeHasElapsedM1(void);
  78:Src/mc_tasks.c **** void TSK_SafetyTask_PWMOFF(uint8_t motor);
  79:Src/mc_tasks.c **** 
  80:Src/mc_tasks.c **** /* USER CODE BEGIN Private Functions */
  81:Src/mc_tasks.c **** 
  82:Src/mc_tasks.c **** /* USER CODE END Private Functions */
  83:Src/mc_tasks.c **** /**
  84:Src/mc_tasks.c ****   * @brief  It initializes the whole MC core according to user defined
  85:Src/mc_tasks.c ****   *         parameters.
  86:Src/mc_tasks.c ****   * @param  pMCIList pointer to the vector of MCInterface objects that will be
  87:Src/mc_tasks.c ****   *         created and initialized. The vector must have length equal to the
  88:Src/mc_tasks.c ****   *         number of motor drives.
  89:Src/mc_tasks.c ****   */
  90:Src/mc_tasks.c **** __weak void MCboot( MCI_Handle_t* pMCIList[NBR_OF_MOTORS] )
  91:Src/mc_tasks.c **** {
 243              		.loc 3 91 1
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              	.LCFI12:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 84B0     		sub	sp, sp, #16
 253              	.LCFI13:
 254              		.cfi_def_cfa_offset 24
 255 0004 00AF     		add	r7, sp, #0
 256              	.LCFI14:
 257              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccSlfBPZ.s 			page 21


 258 0006 7860     		str	r0, [r7, #4]
  92:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
  93:Src/mc_tasks.c **** 
  94:Src/mc_tasks.c ****   /* USER CODE END MCboot 0 */
  95:Src/mc_tasks.c **** 
  96:Src/mc_tasks.c ****   if (MC_NULL == pMCIList)
 259              		.loc 3 96 6
 260 0008 7B68     		ldr	r3, [r7, #4]
 261 000a 002B     		cmp	r3, #0
 262 000c 44D0     		beq	.L7
 263              	.LBB2:
  97:Src/mc_tasks.c ****   {
  98:Src/mc_tasks.c ****     /* Nothing to do */
  99:Src/mc_tasks.c ****   }
 100:Src/mc_tasks.c ****   else
 101:Src/mc_tasks.c ****   {
 102:Src/mc_tasks.c **** 
 103:Src/mc_tasks.c ****     bMCBootCompleted = (uint8_t )0;
 264              		.loc 3 103 22
 265 000e 244B     		ldr	r3, .L8
 266 0010 0022     		movs	r2, #0
 267 0012 1A70     		strb	r2, [r3]
 104:Src/mc_tasks.c **** 
 105:Src/mc_tasks.c ****     /*************************************************/
 106:Src/mc_tasks.c ****     /*    FOC initialization         */
 107:Src/mc_tasks.c ****     /*************************************************/
 108:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
 268              		.loc 3 108 18
 269 0014 7B68     		ldr	r3, [r7, #4]
 270 0016 234A     		ldr	r2, .L8+4
 271 0018 1A60     		str	r2, [r3]
 109:Src/mc_tasks.c ****     FOC_Init();
 272              		.loc 3 109 5
 273 001a FFF7FEFF 		bl	FOC_Init
 110:Src/mc_tasks.c **** 
 111:Src/mc_tasks.c ****     ASPEP_start(&aspepOverUartA);
 274              		.loc 3 111 5
 275 001e 2248     		ldr	r0, .L8+8
 276 0020 FFF7FEFF 		bl	ASPEP_start
 112:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 1 */
 113:Src/mc_tasks.c **** 
 114:Src/mc_tasks.c ****     /* USER CODE END MCboot 1 */
 115:Src/mc_tasks.c **** 
 116:Src/mc_tasks.c ****     /******************************************************/
 117:Src/mc_tasks.c ****     /*   PID component initialization: speed regulation   */
 118:Src/mc_tasks.c ****     /******************************************************/
 119:Src/mc_tasks.c ****     PID_HandleInit(&PIDSpeedHandle_M1);
 277              		.loc 3 119 5
 278 0024 2148     		ldr	r0, .L8+12
 279 0026 FFF7FEFF 		bl	PID_HandleInit
 120:Src/mc_tasks.c **** 
 121:Src/mc_tasks.c ****     /****************************************************/
 122:Src/mc_tasks.c ****     /*   Virtual speed sensor component initialization  */
 123:Src/mc_tasks.c ****     /****************************************************/
 124:Src/mc_tasks.c ****     VSS_Init(&VirtualSpeedSensorM1);
 280              		.loc 3 124 5
 281 002a 2148     		ldr	r0, .L8+16
ARM GAS  /tmp/ccSlfBPZ.s 			page 22


 282 002c FFF7FEFF 		bl	VSS_Init
 125:Src/mc_tasks.c **** 
 126:Src/mc_tasks.c ****     /********************************************************/
 127:Src/mc_tasks.c ****     /*   Bus voltage sensor component initialization        */
 128:Src/mc_tasks.c ****     /********************************************************/
 129:Src/mc_tasks.c ****     (void)RCM_RegisterRegConv(&VbusRegConv_M1);
 283              		.loc 3 129 5
 284 0030 2048     		ldr	r0, .L8+20
 285 0032 FFF7FEFF 		bl	RCM_RegisterRegConv
 130:Src/mc_tasks.c ****     RVBS_Init(&BusVoltageSensor_M1);
 286              		.loc 3 130 5
 287 0036 2048     		ldr	r0, .L8+24
 288 0038 FFF7FEFF 		bl	RVBS_Init
 131:Src/mc_tasks.c **** 
 132:Src/mc_tasks.c ****     /*******************************************************/
 133:Src/mc_tasks.c ****     /*   Temperature measurement component initialization  */
 134:Src/mc_tasks.c ****     /*******************************************************/
 135:Src/mc_tasks.c ****     (void)RCM_RegisterRegConv(&TempRegConv_M1);
 289              		.loc 3 135 5
 290 003c 1F48     		ldr	r0, .L8+28
 291 003e FFF7FEFF 		bl	RCM_RegisterRegConv
 136:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
 292              		.loc 3 136 5
 293 0042 1F48     		ldr	r0, .L8+32
 294 0044 FFF7FEFF 		bl	NTC_Init
 137:Src/mc_tasks.c **** 
 138:Src/mc_tasks.c ****     Mci[M1].pPerfMeasure = &PerfTraces;
 295              		.loc 3 138 26
 296 0048 164B     		ldr	r3, .L8+4
 297 004a 1E4A     		ldr	r2, .L8+36
 298 004c 9A62     		str	r2, [r3, #40]
 139:Src/mc_tasks.c ****     MC_Perf_Measure_Init(&PerfTraces);
 299              		.loc 3 139 5
 300 004e 1D48     		ldr	r0, .L8+36
 301 0050 FFF7FEFF 		bl	MC_Perf_Measure_Init
 140:Src/mc_tasks.c **** 
 141:Src/mc_tasks.c ****     /*************************************************/
 142:Src/mc_tasks.c ****     /*   STSPIN32G4 driver component initialization  */
 143:Src/mc_tasks.c ****     /*************************************************/
 144:Src/mc_tasks.c ****     STSPIN32G4_init(&HdlSTSPING4);
 302              		.loc 3 144 5
 303 0054 1C48     		ldr	r0, .L8+40
 304 0056 FFF7FEFF 		bl	STSPIN32G4_init
 145:Src/mc_tasks.c ****     STSPIN32G4_reset(&HdlSTSPING4);
 305              		.loc 3 145 5
 306 005a 1B48     		ldr	r0, .L8+40
 307 005c FFF7FEFF 		bl	STSPIN32G4_reset
 146:Src/mc_tasks.c ****     STSPIN32G4_setVCC(&HdlSTSPING4, (STSPIN32G4_confVCC){.voltage = _12V,
 308              		.loc 3 146 57
 309 0060 1A4A     		ldr	r2, .L8+44
 310 0062 07F10C03 		add	r3, r7, #12
 311 0066 1268     		ldr	r2, [r2]
 312 0068 1146     		mov	r1, r2	@ movhi
 313 006a 1980     		strh	r1, [r3]	@ movhi
 314 006c 0233     		adds	r3, r3, #2
 315 006e 120C     		lsrs	r2, r2, #16
 316 0070 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccSlfBPZ.s 			page 23


 317              		.loc 3 146 5
 318 0072 F968     		ldr	r1, [r7, #12]
 319 0074 1448     		ldr	r0, .L8+40
 320 0076 FFF7FEFF 		bl	STSPIN32G4_setVCC
 147:Src/mc_tasks.c ****                                                          .useNFAULT = true,
 148:Src/mc_tasks.c ****                                                          .useREADY = false });
 149:Src/mc_tasks.c ****     STSPIN32G4_setVDSP(&HdlSTSPING4, (STSPIN32G4_confVDSP){.deglitchTime = _4us,
 321              		.loc 3 149 59
 322 007a 154B     		ldr	r3, .L8+48
 323 007c 1B88     		ldrh	r3, [r3]	@ movhi
 324 007e 3B81     		strh	r3, [r7, #8]	@ movhi
 325              		.loc 3 149 5
 326 0080 B968     		ldr	r1, [r7, #8]
 327 0082 1148     		ldr	r0, .L8+40
 328 0084 FFF7FEFF 		bl	STSPIN32G4_setVDSP
 150:Src/mc_tasks.c ****                                                            .useNFAULT = true });
 151:Src/mc_tasks.c ****     STSPIN32G4_clearFaults(&HdlSTSPING4);
 329              		.loc 3 151 5
 330 0088 0F48     		ldr	r0, .L8+40
 331 008a FFF7FEFF 		bl	STSPIN32G4_clearFaults
 152:Src/mc_tasks.c **** 
 153:Src/mc_tasks.c ****     /* Applicative hook in MCBoot() */
 154:Src/mc_tasks.c ****     MC_APP_BootHook();
 332              		.loc 3 154 5
 333 008e FFF7FEFF 		bl	MC_APP_BootHook
 155:Src/mc_tasks.c **** 
 156:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 2 */
 157:Src/mc_tasks.c **** 
 158:Src/mc_tasks.c ****     /* USER CODE END MCboot 2 */
 159:Src/mc_tasks.c **** 
 160:Src/mc_tasks.c ****     bMCBootCompleted = 1U;
 334              		.loc 3 160 22
 335 0092 034B     		ldr	r3, .L8
 336 0094 0122     		movs	r2, #1
 337 0096 1A70     		strb	r2, [r3]
 338              	.L7:
 339              	.LBE2:
 161:Src/mc_tasks.c ****   }
 162:Src/mc_tasks.c **** }
 340              		.loc 3 162 1
 341 0098 00BF     		nop
 342 009a 1037     		adds	r7, r7, #16
 343              	.LCFI15:
 344              		.cfi_def_cfa_offset 8
 345 009c BD46     		mov	sp, r7
 346              	.LCFI16:
 347              		.cfi_def_cfa_register 13
 348              		@ sp needed
 349 009e 80BD     		pop	{r7, pc}
 350              	.L9:
 351              		.align	2
 352              	.L8:
 353 00a0 00000000 		.word	bMCBootCompleted
 354 00a4 00000000 		.word	Mci
 355 00a8 00000000 		.word	aspepOverUartA
 356 00ac 00000000 		.word	PIDSpeedHandle_M1
 357 00b0 00000000 		.word	VirtualSpeedSensorM1
ARM GAS  /tmp/ccSlfBPZ.s 			page 24


 358 00b4 00000000 		.word	VbusRegConv_M1
 359 00b8 00000000 		.word	BusVoltageSensor_M1
 360 00bc 00000000 		.word	TempRegConv_M1
 361 00c0 00000000 		.word	TempSensor_M1
 362 00c4 00000000 		.word	PerfTraces
 363 00c8 00000000 		.word	HdlSTSPING4
 364 00cc 00000000 		.word	.LC0
 365 00d0 04000000 		.word	.LC1
 366              		.cfi_endproc
 367              	.LFE1872:
 369              		.section	.text.MC_StartMotorOpenLoop,"ax",%progbits
 370              		.align	1
 371              		.global	MC_StartMotorOpenLoop
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	MC_StartMotorOpenLoop:
 378              	.LFB1873:
 163:Src/mc_tasks.c **** 
 164:Src/mc_tasks.c **** 
 165:Src/mc_tasks.c **** 
 166:Src/mc_tasks.c **** 
 167:Src/mc_tasks.c **** 
 168:Src/mc_tasks.c **** 
 169:Src/mc_tasks.c **** /**
 170:Src/mc_tasks.c ****  * @brief  Starts motor in open-loop mode with specified voltage
 171:Src/mc_tasks.c ****  * @param  voltage_q Q-axis voltage (0-16000, typical start ~5000)
 172:Src/mc_tasks.c ****  * @param  voltage_d D-axis voltage (normally 0)
 173:Src/mc_tasks.c ****  * @param  frequency_hz Electrical frequency in Hz
 174:Src/mc_tasks.c ****  * @retval true if command accepted, false otherwise
 175:Src/mc_tasks.c ****  */
 176:Src/mc_tasks.c **** bool MC_StartMotorOpenLoop(int16_t voltage_q, int16_t voltage_d, uint16_t frequency_hz)
 177:Src/mc_tasks.c **** {
 379              		.loc 3 177 1
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 24
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI17:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 86B0     		sub	sp, sp, #24
 389              	.LCFI18:
 390              		.cfi_def_cfa_offset 32
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI19:
 393              		.cfi_def_cfa_register 7
 394 0006 0346     		mov	r3, r0
 395 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 396 000a 0B46     		mov	r3, r1	@ movhi
 397 000c BB80     		strh	r3, [r7, #4]	@ movhi
 398 000e 1346     		mov	r3, r2	@ movhi
 399 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 178:Src/mc_tasks.c ****   MCI_Handle_t *pMCI = &Mci[M1];
 400              		.loc 3 178 17
ARM GAS  /tmp/ccSlfBPZ.s 			page 25


 401 0012 104B     		ldr	r3, .L13
 402 0014 3B61     		str	r3, [r7, #16]
 179:Src/mc_tasks.c ****   bool ret = false;
 403              		.loc 3 179 8
 404 0016 0023     		movs	r3, #0
 405 0018 FB75     		strb	r3, [r7, #23]
 180:Src/mc_tasks.c ****   PWMC_Handle_t *pHandle =  pwmcHandle[M1];
 406              		.loc 3 180 18
 407 001a 0F4B     		ldr	r3, .L13+4
 408 001c 1B68     		ldr	r3, [r3]
 409 001e FB60     		str	r3, [r7, #12]
 181:Src/mc_tasks.c **** 
 182:Src/mc_tasks.c **** 
 183:Src/mc_tasks.c ****   if (IDLE == MCI_GetSTMState(pMCI))
 410              		.loc 3 183 15
 411 0020 3869     		ldr	r0, [r7, #16]
 412 0022 FFF7FEFF 		bl	MCI_GetSTMState
 413 0026 0346     		mov	r3, r0
 414              		.loc 3 183 6
 415 0028 002B     		cmp	r3, #0
 416 002a 0DD1     		bne	.L11
 184:Src/mc_tasks.c ****   {
 185:Src/mc_tasks.c ****     
 186:Src/mc_tasks.c ****     // Start motor (triggers state transitions)
 187:Src/mc_tasks.c ****     ret = MCI_StartMotor(pMCI);
 417              		.loc 3 187 11
 418 002c 3869     		ldr	r0, [r7, #16]
 419 002e FFF7FEFF 		bl	MCI_StartMotor
 420 0032 0346     		mov	r3, r0
 421 0034 FB75     		strb	r3, [r7, #23]
 188:Src/mc_tasks.c ****     
 189:Src/mc_tasks.c ****     if (ret)
 422              		.loc 3 189 8
 423 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 424 0038 002B     		cmp	r3, #0
 425 003a 05D0     		beq	.L11
 190:Src/mc_tasks.c ****     {
 191:Src/mc_tasks.c **** 
 192:Src/mc_tasks.c ****       FOCVars[M1].Vqd.q = voltage_q;
 426              		.loc 3 192 25
 427 003c 074A     		ldr	r2, .L13+8
 428 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 429 0040 D382     		strh	r3, [r2, #22]	@ movhi
 193:Src/mc_tasks.c ****       FOCVars[M1].Vqd.d = voltage_d;
 430              		.loc 3 193 25
 431 0042 064A     		ldr	r2, .L13+8
 432 0044 BB88     		ldrh	r3, [r7, #4]	@ movhi
 433 0046 1383     		strh	r3, [r2, #24]	@ movhi
 434              	.L11:
 194:Src/mc_tasks.c **** 
 195:Src/mc_tasks.c ****     }
 196:Src/mc_tasks.c ****   }
 197:Src/mc_tasks.c ****   
 198:Src/mc_tasks.c ****   return ret;
 435              		.loc 3 198 10
 436 0048 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 199:Src/mc_tasks.c **** }
ARM GAS  /tmp/ccSlfBPZ.s 			page 26


 437              		.loc 3 199 1
 438 004a 1846     		mov	r0, r3
 439 004c 1837     		adds	r7, r7, #24
 440              	.LCFI20:
 441              		.cfi_def_cfa_offset 8
 442 004e BD46     		mov	sp, r7
 443              	.LCFI21:
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 0050 80BD     		pop	{r7, pc}
 447              	.L14:
 448 0052 00BF     		.align	2
 449              	.L13:
 450 0054 00000000 		.word	Mci
 451 0058 00000000 		.word	pwmcHandle
 452 005c 00000000 		.word	FOCVars
 453              		.cfi_endproc
 454              	.LFE1873:
 456              		.section	.text.MC_RunMotorControlTasks,"ax",%progbits
 457              		.align	1
 458              		.weak	MC_RunMotorControlTasks
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu fpv4-sp-d16
 464              	MC_RunMotorControlTasks:
 465              	.LFB1874:
 200:Src/mc_tasks.c **** 
 201:Src/mc_tasks.c **** 
 202:Src/mc_tasks.c **** 
 203:Src/mc_tasks.c **** 
 204:Src/mc_tasks.c **** 
 205:Src/mc_tasks.c **** /**
 206:Src/mc_tasks.c ****  * @brief Runs all the Tasks of the Motor Control cockpit
 207:Src/mc_tasks.c ****  *
 208:Src/mc_tasks.c ****  * This function is to be called periodically at least at the Medium Frequency task
 209:Src/mc_tasks.c ****  * rate (It is typically called on the Systick interrupt). Exact invokation rate is
 210:Src/mc_tasks.c ****  * the Speed regulator execution rate set in the Motor Contorl Workbench.
 211:Src/mc_tasks.c ****  *
 212:Src/mc_tasks.c ****  * The following tasks are executed in this order:
 213:Src/mc_tasks.c ****  *
 214:Src/mc_tasks.c ****  * - Medium Frequency Tasks of each motors.
 215:Src/mc_tasks.c ****  * - Safety Task.
 216:Src/mc_tasks.c ****  * - Power Factor Correction Task (if enabled).
 217:Src/mc_tasks.c ****  * - User Interface task.
 218:Src/mc_tasks.c ****  */
 219:Src/mc_tasks.c **** __weak void MC_RunMotorControlTasks(void)
 220:Src/mc_tasks.c **** {
 466              		.loc 3 220 1
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 98B5     		push	{r3, r4, r7, lr}
 471              	.LCFI22:
 472              		.cfi_def_cfa_offset 16
 473              		.cfi_offset 3, -16
 474              		.cfi_offset 4, -12
ARM GAS  /tmp/ccSlfBPZ.s 			page 27


 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 00AF     		add	r7, sp, #0
 478              	.LCFI23:
 479              		.cfi_def_cfa_register 7
 221:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 480              		.loc 3 221 10
 481 0004 314B     		ldr	r3, .L22
 482 0006 1B78     		ldrb	r3, [r3]
 483 0008 DBB2     		uxtb	r3, r3
 484              		.loc 3 221 6
 485 000a 002B     		cmp	r3, #0
 486 000c 5CD0     		beq	.L21
 222:Src/mc_tasks.c ****   {
 223:Src/mc_tasks.c ****     /* Nothing to do */
 224:Src/mc_tasks.c ****   }
 225:Src/mc_tasks.c ****   else
 226:Src/mc_tasks.c ****   {
 227:Src/mc_tasks.c ****     /* ** Medium Frequency Tasks ** */
 228:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 229:Src/mc_tasks.c **** 
 230:Src/mc_tasks.c **** /* USER CODE END MC_Scheduler 0 */
 231:Src/mc_tasks.c **** 
 232:Src/mc_tasks.c ****     if(hMFTaskCounterM1 > 0u)
 487              		.loc 3 232 25
 488 000e 304B     		ldr	r3, .L22+4
 489 0010 1B88     		ldrh	r3, [r3]
 490              		.loc 3 232 7
 491 0012 002B     		cmp	r3, #0
 492 0014 06D0     		beq	.L17
 233:Src/mc_tasks.c ****     {
 234:Src/mc_tasks.c ****       hMFTaskCounterM1--;
 493              		.loc 3 234 23
 494 0016 2E4B     		ldr	r3, .L22+4
 495 0018 1B88     		ldrh	r3, [r3]
 496 001a 013B     		subs	r3, r3, #1
 497 001c 9AB2     		uxth	r2, r3
 498 001e 2C4B     		ldr	r3, .L22+4
 499 0020 1A80     		strh	r2, [r3]	@ movhi
 500 0022 39E0     		b	.L18
 501              	.L17:
 235:Src/mc_tasks.c ****     }
 236:Src/mc_tasks.c ****     else
 237:Src/mc_tasks.c ****     {
 238:Src/mc_tasks.c **** 
 239:Src/mc_tasks.c ****       MC_BG_Perf_Measure_Start(&PerfTraces, MEASURE_TSK_MediumFrequencyTaskM1);
 502              		.loc 3 239 7
 503 0024 0121     		movs	r1, #1
 504 0026 2B48     		ldr	r0, .L22+8
 505 0028 FFF7FEFF 		bl	MC_BG_Perf_Measure_Start
 240:Src/mc_tasks.c ****       TSK_MediumFrequencyTaskM1();
 506              		.loc 3 240 7
 507 002c FFF7FEFF 		bl	TSK_MediumFrequencyTaskM1
 241:Src/mc_tasks.c **** 
 242:Src/mc_tasks.c ****   MC_BG_Perf_Measure_Stop(&PerfTraces, MEASURE_TSK_MediumFrequencyTaskM1);
 508              		.loc 3 242 3
 509 0030 0121     		movs	r1, #1
ARM GAS  /tmp/ccSlfBPZ.s 			page 28


 510 0032 2848     		ldr	r0, .L22+8
 511 0034 FFF7FEFF 		bl	MC_BG_Perf_Measure_Stop
 243:Src/mc_tasks.c ****       /* Applicative hook at end of Medium Frequency for Motor 1 */
 244:Src/mc_tasks.c ****       MC_APP_PostMediumFrequencyHook_M1();
 512              		.loc 3 244 7
 513 0038 FFF7FEFF 		bl	MC_APP_PostMediumFrequencyHook_M1
 245:Src/mc_tasks.c **** 
 246:Src/mc_tasks.c ****       MCP_Over_UartA.rxBuffer = MCP_Over_UartA.pTransportLayer->fRXPacketProcess(MCP_Over_UartA.pTr
 514              		.loc 3 246 47
 515 003c 264B     		ldr	r3, .L22+12
 516 003e 1B68     		ldr	r3, [r3]
 517              		.loc 3 246 63
 518 0040 9B68     		ldr	r3, [r3, #8]
 519              		.loc 3 246 33
 520 0042 254A     		ldr	r2, .L22+12
 521 0044 1268     		ldr	r2, [r2]
 522 0046 2549     		ldr	r1, .L22+16
 523 0048 1046     		mov	r0, r2
 524 004a 9847     		blx	r3
 525              	.LVL0:
 526 004c 0346     		mov	r3, r0
 527              		.loc 3 246 31
 528 004e 224A     		ldr	r2, .L22+12
 529 0050 5360     		str	r3, [r2, #4]
 247:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 248:Src/mc_tasks.c ****       if ( 0U == MCP_Over_UartA.rxBuffer)
 530              		.loc 3 248 32
 531 0052 214B     		ldr	r3, .L22+12
 532 0054 5B68     		ldr	r3, [r3, #4]
 533              		.loc 3 248 10
 534 0056 002B     		cmp	r3, #0
 535 0058 1BD0     		beq	.L19
 249:Src/mc_tasks.c ****       {
 250:Src/mc_tasks.c ****         /* Nothing to do */
 251:Src/mc_tasks.c ****       }
 252:Src/mc_tasks.c ****       else
 253:Src/mc_tasks.c ****       {
 254:Src/mc_tasks.c ****         /* Synchronous answer */
 255:Src/mc_tasks.c ****         if (0U == MCP_Over_UartA.pTransportLayer->fGetBuffer(MCP_Over_UartA.pTransportLayer,
 536              		.loc 3 255 33
 537 005a 1F4B     		ldr	r3, .L22+12
 538 005c 1B68     		ldr	r3, [r3]
 539              		.loc 3 255 49
 540 005e 1B68     		ldr	r3, [r3]
 541              		.loc 3 255 19
 542 0060 1D4A     		ldr	r2, .L22+12
 543 0062 1068     		ldr	r0, [r2]
 544 0064 0A22     		movs	r2, #10
 545 0066 1E49     		ldr	r1, .L22+20
 546 0068 9847     		blx	r3
 547              	.LVL1:
 548 006a 0346     		mov	r3, r0
 549              		.loc 3 255 16
 550 006c 83F00103 		eor	r3, r3, #1
 551 0070 DBB2     		uxtb	r3, r3
 552              		.loc 3 255 12
 553 0072 002B     		cmp	r3, #0
ARM GAS  /tmp/ccSlfBPZ.s 			page 29


 554 0074 0DD1     		bne	.L19
 256:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 257:Src/mc_tasks.c ****                                                      MCTL_SYNC))
 258:Src/mc_tasks.c ****         {
 259:Src/mc_tasks.c ****           /* No buffer available to build the answer ... should not occur */
 260:Src/mc_tasks.c ****         }
 261:Src/mc_tasks.c ****         else
 262:Src/mc_tasks.c ****         {
 263:Src/mc_tasks.c ****           MCP_ReceivedPacket(&MCP_Over_UartA);
 555              		.loc 3 263 11
 556 0076 1848     		ldr	r0, .L22+12
 557 0078 FFF7FEFF 		bl	MCP_ReceivedPacket
 264:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 558              		.loc 3 264 25
 559 007c 164B     		ldr	r3, .L22+12
 560 007e 1B68     		ldr	r3, [r3]
 561              		.loc 3 264 41
 562 0080 5C68     		ldr	r4, [r3, #4]
 563              		.loc 3 264 11
 564 0082 154B     		ldr	r3, .L22+12
 565 0084 1868     		ldr	r0, [r3]
 566              		.loc 3 264 101
 567 0086 144B     		ldr	r3, .L22+12
 568 0088 9968     		ldr	r1, [r3, #8]
 569              		.loc 3 264 11
 570 008a 134B     		ldr	r3, .L22+12
 571 008c DA89     		ldrh	r2, [r3, #14]
 572 008e 0A23     		movs	r3, #10
 573 0090 A047     		blx	r4
 574              	.LVL2:
 575              	.L19:
 265:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 266:Src/mc_tasks.c ****           /* No buffer available to build the answer ... should not occur */
 267:Src/mc_tasks.c ****         }
 268:Src/mc_tasks.c ****       }
 269:Src/mc_tasks.c **** 
 270:Src/mc_tasks.c ****       /* USER CODE BEGIN MC_Scheduler 1 */
 271:Src/mc_tasks.c **** 
 272:Src/mc_tasks.c ****       /* USER CODE END MC_Scheduler 1 */
 273:Src/mc_tasks.c **** 
 274:Src/mc_tasks.c ****       hMFTaskCounterM1 = (uint16_t)MF_TASK_OCCURENCE_TICKS;
 576              		.loc 3 274 24
 577 0092 0F4B     		ldr	r3, .L22+4
 578 0094 0122     		movs	r2, #1
 579 0096 1A80     		strh	r2, [r3]	@ movhi
 580              	.L18:
 275:Src/mc_tasks.c ****     }
 276:Src/mc_tasks.c ****     if(hBootCapDelayCounterM1 > 0U)
 581              		.loc 3 276 31
 582 0098 124B     		ldr	r3, .L22+24
 583 009a 1B88     		ldrh	r3, [r3]	@ movhi
 584 009c 9BB2     		uxth	r3, r3
 585              		.loc 3 276 7
 586 009e 002B     		cmp	r3, #0
 587 00a0 06D0     		beq	.L20
 277:Src/mc_tasks.c ****     {
 278:Src/mc_tasks.c ****       hBootCapDelayCounterM1--;
ARM GAS  /tmp/ccSlfBPZ.s 			page 30


 588              		.loc 3 278 29
 589 00a2 104B     		ldr	r3, .L22+24
 590 00a4 1B88     		ldrh	r3, [r3]	@ movhi
 591 00a6 9BB2     		uxth	r3, r3
 592 00a8 013B     		subs	r3, r3, #1
 593 00aa 9AB2     		uxth	r2, r3
 594 00ac 0D4B     		ldr	r3, .L22+24
 595 00ae 1A80     		strh	r2, [r3]	@ movhi
 596              	.L20:
 279:Src/mc_tasks.c ****     }
 280:Src/mc_tasks.c ****     else
 281:Src/mc_tasks.c ****     {
 282:Src/mc_tasks.c ****       /* Nothing to do */
 283:Src/mc_tasks.c ****     }
 284:Src/mc_tasks.c ****     if(hStopPermanencyCounterM1 > 0U)
 597              		.loc 3 284 33
 598 00b0 0D4B     		ldr	r3, .L22+28
 599 00b2 1B88     		ldrh	r3, [r3]	@ movhi
 600 00b4 9BB2     		uxth	r3, r3
 601              		.loc 3 284 7
 602 00b6 002B     		cmp	r3, #0
 603 00b8 06D0     		beq	.L21
 285:Src/mc_tasks.c ****     {
 286:Src/mc_tasks.c ****       hStopPermanencyCounterM1--;
 604              		.loc 3 286 31
 605 00ba 0B4B     		ldr	r3, .L22+28
 606 00bc 1B88     		ldrh	r3, [r3]	@ movhi
 607 00be 9BB2     		uxth	r3, r3
 608 00c0 013B     		subs	r3, r3, #1
 609 00c2 9AB2     		uxth	r2, r3
 610 00c4 084B     		ldr	r3, .L22+28
 611 00c6 1A80     		strh	r2, [r3]	@ movhi
 612              	.L21:
 287:Src/mc_tasks.c ****     }
 288:Src/mc_tasks.c ****     else
 289:Src/mc_tasks.c ****     {
 290:Src/mc_tasks.c ****       /* Nothing to do */
 291:Src/mc_tasks.c ****     }
 292:Src/mc_tasks.c **** 
 293:Src/mc_tasks.c ****   /* USER CODE BEGIN MC_Scheduler 2 */
 294:Src/mc_tasks.c **** 
 295:Src/mc_tasks.c ****   /* USER CODE END MC_Scheduler 2 */
 296:Src/mc_tasks.c ****   }
 297:Src/mc_tasks.c **** }
 613              		.loc 3 297 1
 614 00c8 00BF     		nop
 615 00ca 98BD     		pop	{r3, r4, r7, pc}
 616              	.L23:
 617              		.align	2
 618              	.L22:
 619 00cc 00000000 		.word	bMCBootCompleted
 620 00d0 00000000 		.word	hMFTaskCounterM1
 621 00d4 00000000 		.word	PerfTraces
 622 00d8 00000000 		.word	MCP_Over_UartA
 623 00dc 0C000000 		.word	MCP_Over_UartA+12
 624 00e0 08000000 		.word	MCP_Over_UartA+8
 625 00e4 00000000 		.word	hBootCapDelayCounterM1
ARM GAS  /tmp/ccSlfBPZ.s 			page 31


 626 00e8 00000000 		.word	hStopPermanencyCounterM1
 627              		.cfi_endproc
 628              	.LFE1874:
 630              		.section	.text.TSK_SetChargeBootCapDelayM1,"ax",%progbits
 631              		.align	1
 632              		.weak	TSK_SetChargeBootCapDelayM1
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	TSK_SetChargeBootCapDelayM1:
 639              	.LFB1875:
 298:Src/mc_tasks.c **** 
 299:Src/mc_tasks.c **** /**
 300:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the delay required
 301:Src/mc_tasks.c ****   *         for drivers boot capacitors charging of motor 1.
 302:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted.
 303:Src/mc_tasks.c ****   * @retval void
 304:Src/mc_tasks.c ****   */
 305:Src/mc_tasks.c **** __weak void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount)
 306:Src/mc_tasks.c **** {
 640              		.loc 3 306 1
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              	.LCFI24:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0002 83B0     		sub	sp, sp, #12
 650              	.LCFI25:
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
 653              	.LCFI26:
 654              		.cfi_def_cfa_register 7
 655 0006 0346     		mov	r3, r0
 656 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 307:Src/mc_tasks.c ****    hBootCapDelayCounterM1 = hTickCount;
 657              		.loc 3 307 27
 658 000a 044A     		ldr	r2, .L25
 659 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 660 000e 1380     		strh	r3, [r2]	@ movhi
 308:Src/mc_tasks.c **** }
 661              		.loc 3 308 1
 662 0010 00BF     		nop
 663 0012 0C37     		adds	r7, r7, #12
 664              	.LCFI27:
 665              		.cfi_def_cfa_offset 4
 666 0014 BD46     		mov	sp, r7
 667              	.LCFI28:
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 0016 5DF8047B 		ldr	r7, [sp], #4
 671              	.LCFI29:
 672              		.cfi_restore 7
 673              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccSlfBPZ.s 			page 32


 674 001a 7047     		bx	lr
 675              	.L26:
 676              		.align	2
 677              	.L25:
 678 001c 00000000 		.word	hBootCapDelayCounterM1
 679              		.cfi_endproc
 680              	.LFE1875:
 682              		.section	.text.TSK_ChargeBootCapDelayHasElapsedM1,"ax",%progbits
 683              		.align	1
 684              		.weak	TSK_ChargeBootCapDelayHasElapsedM1
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv4-sp-d16
 690              	TSK_ChargeBootCapDelayHasElapsedM1:
 691              	.LFB1876:
 309:Src/mc_tasks.c **** 
 310:Src/mc_tasks.c **** /**
 311:Src/mc_tasks.c ****   * @brief  Use this function to know whether the time required to charge boot
 312:Src/mc_tasks.c ****   *         capacitors of motor 1 has elapsed.
 313:Src/mc_tasks.c ****   * @param  none
 314:Src/mc_tasks.c ****   * @retval bool true if time has elapsed, false otherwise.
 315:Src/mc_tasks.c ****   */
 316:Src/mc_tasks.c **** __weak bool TSK_ChargeBootCapDelayHasElapsedM1(void)
 317:Src/mc_tasks.c **** {
 692              		.loc 3 317 1
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
 698              	.LCFI30:
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 83B0     		sub	sp, sp, #12
 702              	.LCFI31:
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              	.LCFI32:
 706              		.cfi_def_cfa_register 7
 318:Src/mc_tasks.c ****   bool retVal = false;
 707              		.loc 3 318 8
 708 0006 0023     		movs	r3, #0
 709 0008 FB71     		strb	r3, [r7, #7]
 319:Src/mc_tasks.c ****   if (((uint16_t)0) == hBootCapDelayCounterM1)
 710              		.loc 3 319 21
 711 000a 074B     		ldr	r3, .L30
 712 000c 1B88     		ldrh	r3, [r3]	@ movhi
 713 000e 9BB2     		uxth	r3, r3
 714              		.loc 3 319 6
 715 0010 002B     		cmp	r3, #0
 716 0012 01D1     		bne	.L28
 320:Src/mc_tasks.c ****   {
 321:Src/mc_tasks.c ****     retVal = true;
 717              		.loc 3 321 12
 718 0014 0123     		movs	r3, #1
 719 0016 FB71     		strb	r3, [r7, #7]
ARM GAS  /tmp/ccSlfBPZ.s 			page 33


 720              	.L28:
 322:Src/mc_tasks.c ****   }
 323:Src/mc_tasks.c ****   return (retVal);
 721              		.loc 3 323 10
 722 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 324:Src/mc_tasks.c **** }
 723              		.loc 3 324 1
 724 001a 1846     		mov	r0, r3
 725 001c 0C37     		adds	r7, r7, #12
 726              	.LCFI33:
 727              		.cfi_def_cfa_offset 4
 728 001e BD46     		mov	sp, r7
 729              	.LCFI34:
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
 732 0020 5DF8047B 		ldr	r7, [sp], #4
 733              	.LCFI35:
 734              		.cfi_restore 7
 735              		.cfi_def_cfa_offset 0
 736 0024 7047     		bx	lr
 737              	.L31:
 738 0026 00BF     		.align	2
 739              	.L30:
 740 0028 00000000 		.word	hBootCapDelayCounterM1
 741              		.cfi_endproc
 742              	.LFE1876:
 744              		.section	.text.TSK_SetStopPermanencyTimeM1,"ax",%progbits
 745              		.align	1
 746              		.weak	TSK_SetStopPermanencyTimeM1
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv4-sp-d16
 752              	TSK_SetStopPermanencyTimeM1:
 753              	.LFB1877:
 325:Src/mc_tasks.c **** 
 326:Src/mc_tasks.c **** /**
 327:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the permanency
 328:Src/mc_tasks.c ****   *         time in STOP state of motor 1.
 329:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted.
 330:Src/mc_tasks.c ****   * @retval void
 331:Src/mc_tasks.c ****   */
 332:Src/mc_tasks.c **** __weak void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount)
 333:Src/mc_tasks.c **** {
 754              		.loc 3 333 1
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 8
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759 0000 80B4     		push	{r7}
 760              	.LCFI36:
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 7, -4
 763 0002 83B0     		sub	sp, sp, #12
 764              	.LCFI37:
 765              		.cfi_def_cfa_offset 16
 766 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccSlfBPZ.s 			page 34


 767              	.LCFI38:
 768              		.cfi_def_cfa_register 7
 769 0006 0346     		mov	r3, r0
 770 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 334:Src/mc_tasks.c ****   hStopPermanencyCounterM1 = hTickCount;
 771              		.loc 3 334 28
 772 000a 044A     		ldr	r2, .L33
 773 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 774 000e 1380     		strh	r3, [r2]	@ movhi
 335:Src/mc_tasks.c **** }
 775              		.loc 3 335 1
 776 0010 00BF     		nop
 777 0012 0C37     		adds	r7, r7, #12
 778              	.LCFI39:
 779              		.cfi_def_cfa_offset 4
 780 0014 BD46     		mov	sp, r7
 781              	.LCFI40:
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 0016 5DF8047B 		ldr	r7, [sp], #4
 785              	.LCFI41:
 786              		.cfi_restore 7
 787              		.cfi_def_cfa_offset 0
 788 001a 7047     		bx	lr
 789              	.L34:
 790              		.align	2
 791              	.L33:
 792 001c 00000000 		.word	hStopPermanencyCounterM1
 793              		.cfi_endproc
 794              	.LFE1877:
 796              		.section	.text.TSK_StopPermanencyTimeHasElapsedM1,"ax",%progbits
 797              		.align	1
 798              		.weak	TSK_StopPermanencyTimeHasElapsedM1
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu fpv4-sp-d16
 804              	TSK_StopPermanencyTimeHasElapsedM1:
 805              	.LFB1878:
 336:Src/mc_tasks.c **** 
 337:Src/mc_tasks.c **** /**
 338:Src/mc_tasks.c ****   * @brief  Use this function to know whether the permanency time in STOP state
 339:Src/mc_tasks.c ****   *         of motor 1 has elapsed.
 340:Src/mc_tasks.c ****   * @param  none
 341:Src/mc_tasks.c ****   * @retval bool true if time is elapsed, false otherwise.
 342:Src/mc_tasks.c ****   */
 343:Src/mc_tasks.c **** __weak bool TSK_StopPermanencyTimeHasElapsedM1(void)
 344:Src/mc_tasks.c **** {
 806              		.loc 3 344 1
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              	.LCFI42:
 813              		.cfi_def_cfa_offset 4
 814              		.cfi_offset 7, -4
ARM GAS  /tmp/ccSlfBPZ.s 			page 35


 815 0002 83B0     		sub	sp, sp, #12
 816              	.LCFI43:
 817              		.cfi_def_cfa_offset 16
 818 0004 00AF     		add	r7, sp, #0
 819              	.LCFI44:
 820              		.cfi_def_cfa_register 7
 345:Src/mc_tasks.c ****   bool retVal = false;
 821              		.loc 3 345 8
 822 0006 0023     		movs	r3, #0
 823 0008 FB71     		strb	r3, [r7, #7]
 346:Src/mc_tasks.c ****   if (((uint16_t)0) == hStopPermanencyCounterM1)
 824              		.loc 3 346 21
 825 000a 074B     		ldr	r3, .L38
 826 000c 1B88     		ldrh	r3, [r3]	@ movhi
 827 000e 9BB2     		uxth	r3, r3
 828              		.loc 3 346 6
 829 0010 002B     		cmp	r3, #0
 830 0012 01D1     		bne	.L36
 347:Src/mc_tasks.c ****   {
 348:Src/mc_tasks.c ****     retVal = true;
 831              		.loc 3 348 12
 832 0014 0123     		movs	r3, #1
 833 0016 FB71     		strb	r3, [r7, #7]
 834              	.L36:
 349:Src/mc_tasks.c ****   }
 350:Src/mc_tasks.c ****   return (retVal);
 835              		.loc 3 350 10
 836 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 351:Src/mc_tasks.c **** }
 837              		.loc 3 351 1
 838 001a 1846     		mov	r0, r3
 839 001c 0C37     		adds	r7, r7, #12
 840              	.LCFI45:
 841              		.cfi_def_cfa_offset 4
 842 001e BD46     		mov	sp, r7
 843              	.LCFI46:
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 0020 5DF8047B 		ldr	r7, [sp], #4
 847              	.LCFI47:
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 0024 7047     		bx	lr
 851              	.L39:
 852 0026 00BF     		.align	2
 853              	.L38:
 854 0028 00000000 		.word	hStopPermanencyCounterM1
 855              		.cfi_endproc
 856              	.LFE1878:
 858              		.section	.text.TSK_HighFrequencyTask,"ax",%progbits
 859              		.align	1
 860              		.weak	TSK_HighFrequencyTask
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv4-sp-d16
 866              	TSK_HighFrequencyTask:
ARM GAS  /tmp/ccSlfBPZ.s 			page 36


 867              	.LFB1879:
 352:Src/mc_tasks.c **** 
 353:Src/mc_tasks.c **** #if defined (CCMRAM)
 354:Src/mc_tasks.c **** #if defined (__ICCARM__)
 355:Src/mc_tasks.c **** #pragma location = ".ccmram"
 356:Src/mc_tasks.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 357:Src/mc_tasks.c **** __attribute__((section (".ccmram")))
 358:Src/mc_tasks.c **** #endif
 359:Src/mc_tasks.c **** #endif
 360:Src/mc_tasks.c **** 
 361:Src/mc_tasks.c **** /**
 362:Src/mc_tasks.c ****   * @brief  Executes the Motor Control duties that require a high frequency rate and a precise timi
 363:Src/mc_tasks.c ****   *
 364:Src/mc_tasks.c ****   *  This is mainly the FOC current control loop. It is executed depending on the state of the Moto
 365:Src/mc_tasks.c ****   * subsystem (see the state machine(s)).
 366:Src/mc_tasks.c ****   *
 367:Src/mc_tasks.c ****   * @retval Number of the  motor instance which FOC loop was executed.
 368:Src/mc_tasks.c ****   */
 369:Src/mc_tasks.c **** __weak uint8_t TSK_HighFrequencyTask(void)
 370:Src/mc_tasks.c **** {
 868              		.loc 3 370 1
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 8
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872 0000 80B5     		push	{r7, lr}
 873              	.LCFI48:
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 7, -8
 876              		.cfi_offset 14, -4
 877 0002 82B0     		sub	sp, sp, #8
 878              	.LCFI49:
 879              		.cfi_def_cfa_offset 16
 880 0004 00AF     		add	r7, sp, #0
 881              	.LCFI50:
 882              		.cfi_def_cfa_register 7
 371:Src/mc_tasks.c ****   uint8_t bMotorNbr;
 372:Src/mc_tasks.c ****   bMotorNbr = 0;
 883              		.loc 3 372 13
 884 0006 0023     		movs	r3, #0
 885 0008 FB71     		strb	r3, [r7, #7]
 373:Src/mc_tasks.c **** 
 374:Src/mc_tasks.c ****   MC_Perf_Measure_Start(&PerfTraces, MEASURE_TSK_HighFrequencyTaskM1);
 886              		.loc 3 374 3
 887 000a 0021     		movs	r1, #0
 888 000c 0E48     		ldr	r0, .L43
 889 000e FFF7FEFF 		bl	MC_Perf_Measure_Start
 375:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 0 */
 376:Src/mc_tasks.c **** 
 377:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 0 */
 378:Src/mc_tasks.c ****   FOC_HighFrequencyTask(bMotorNbr);
 890              		.loc 3 378 3
 891 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 892 0014 1846     		mov	r0, r3
 893 0016 FFF7FEFF 		bl	FOC_HighFrequencyTask
 379:Src/mc_tasks.c **** 
 380:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 1 */
 381:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccSlfBPZ.s 			page 37


 382:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 1 */
 383:Src/mc_tasks.c **** 
 384:Src/mc_tasks.c ****   GLOBAL_TIMESTAMP++;
 894              		.loc 3 384 19
 895 001a 0C4B     		ldr	r3, .L43+4
 896 001c 1B68     		ldr	r3, [r3]
 897 001e 0133     		adds	r3, r3, #1
 898 0020 0A4A     		ldr	r2, .L43+4
 899 0022 1360     		str	r3, [r2]
 385:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 900              		.loc 3 385 24
 901 0024 0A4B     		ldr	r3, .L43+8
 902 0026 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 903              		.loc 3 385 6
 904 002a 002B     		cmp	r3, #0
 905 002c 02D0     		beq	.L41
 386:Src/mc_tasks.c ****   {
 387:Src/mc_tasks.c ****     /* Nothing to do */
 388:Src/mc_tasks.c ****   }
 389:Src/mc_tasks.c ****   else
 390:Src/mc_tasks.c ****   {
 391:Src/mc_tasks.c ****     MCPA_dataLog (&MCPA_UART_A);
 906              		.loc 3 391 5
 907 002e 0848     		ldr	r0, .L43+8
 908 0030 FFF7FEFF 		bl	MCPA_dataLog
 909              	.L41:
 392:Src/mc_tasks.c ****   }
 393:Src/mc_tasks.c **** 
 394:Src/mc_tasks.c ****   MC_Perf_Measure_Stop(&PerfTraces, MEASURE_TSK_HighFrequencyTaskM1);
 910              		.loc 3 394 3
 911 0034 0021     		movs	r1, #0
 912 0036 0448     		ldr	r0, .L43
 913 0038 FFF7FEFF 		bl	MC_Perf_Measure_Stop
 395:Src/mc_tasks.c ****   return (bMotorNbr);
 914              		.loc 3 395 10
 915 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 396:Src/mc_tasks.c **** 
 397:Src/mc_tasks.c **** }
 916              		.loc 3 397 1
 917 003e 1846     		mov	r0, r3
 918 0040 0837     		adds	r7, r7, #8
 919              	.LCFI51:
 920              		.cfi_def_cfa_offset 8
 921 0042 BD46     		mov	sp, r7
 922              	.LCFI52:
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 0044 80BD     		pop	{r7, pc}
 926              	.L44:
 927 0046 00BF     		.align	2
 928              	.L43:
 929 0048 00000000 		.word	PerfTraces
 930 004c 00000000 		.word	GLOBAL_TIMESTAMP
 931 0050 00000000 		.word	MCPA_UART_A
 932              		.cfi_endproc
 933              	.LFE1879:
 935              		.section	.text.TSK_SafetyTask,"ax",%progbits
ARM GAS  /tmp/ccSlfBPZ.s 			page 38


 936              		.align	1
 937              		.weak	TSK_SafetyTask
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu fpv4-sp-d16
 943              	TSK_SafetyTask:
 944              	.LFB1880:
 398:Src/mc_tasks.c **** 
 399:Src/mc_tasks.c **** /**
 400:Src/mc_tasks.c ****   * @brief  Executes safety checks (e.g. bus voltage and temperature) for all drive instances.
 401:Src/mc_tasks.c ****   *
 402:Src/mc_tasks.c ****   * Faults flags are updated here.
 403:Src/mc_tasks.c ****   */
 404:Src/mc_tasks.c **** __weak void TSK_SafetyTask(void)
 405:Src/mc_tasks.c **** {
 945              		.loc 3 405 1
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949 0000 80B5     		push	{r7, lr}
 950              	.LCFI53:
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 00AF     		add	r7, sp, #0
 955              	.LCFI54:
 956              		.cfi_def_cfa_register 7
 406:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
 407:Src/mc_tasks.c **** 
 408:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 0 */
 409:Src/mc_tasks.c ****   if (1U == bMCBootCompleted)
 957              		.loc 3 409 10
 958 0004 044B     		ldr	r3, .L48
 959 0006 1B78     		ldrb	r3, [r3]
 960 0008 DBB2     		uxtb	r3, r3
 961              		.loc 3 409 6
 962 000a 012B     		cmp	r3, #1
 963 000c 02D1     		bne	.L47
 410:Src/mc_tasks.c ****   {
 411:Src/mc_tasks.c ****     SCC_CheckOC_RL(&SCC);
 964              		.loc 3 411 5
 965 000e 0348     		ldr	r0, .L48+4
 966 0010 FFF7FEFF 		bl	SCC_CheckOC_RL
 967              	.L47:
 412:Src/mc_tasks.c ****    // TSK_SafetyTask_PWMOFF(M1);
 413:Src/mc_tasks.c ****     /* User conversion execution */
 414:Src/mc_tasks.c **** //    RCM_ExecUserConv();
 415:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
 416:Src/mc_tasks.c **** 
 417:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 1 */
 418:Src/mc_tasks.c ****   }
 419:Src/mc_tasks.c ****   else
 420:Src/mc_tasks.c ****   {
 421:Src/mc_tasks.c ****     /* Nothing to do */
 422:Src/mc_tasks.c ****   }
 423:Src/mc_tasks.c **** }
ARM GAS  /tmp/ccSlfBPZ.s 			page 39


 968              		.loc 3 423 1
 969 0014 00BF     		nop
 970 0016 80BD     		pop	{r7, pc}
 971              	.L49:
 972              		.align	2
 973              	.L48:
 974 0018 00000000 		.word	bMCBootCompleted
 975 001c 00000000 		.word	SCC
 976              		.cfi_endproc
 977              	.LFE1880:
 979              		.section	.text.TSK_SafetyTask_PWMOFF,"ax",%progbits
 980              		.align	1
 981              		.weak	TSK_SafetyTask_PWMOFF
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 985              		.fpu fpv4-sp-d16
 987              	TSK_SafetyTask_PWMOFF:
 988              	.LFB1881:
 424:Src/mc_tasks.c **** 
 425:Src/mc_tasks.c **** /**
 426:Src/mc_tasks.c ****   * @brief  Safety task implementation if  MC.M1_ON_OVER_VOLTAGE == TURN_OFF_PWM.
 427:Src/mc_tasks.c ****   * @param  bMotor Motor reference number defined
 428:Src/mc_tasks.c ****   *         \link Motors_reference_number here \endlink.
 429:Src/mc_tasks.c ****   */
 430:Src/mc_tasks.c **** __weak void TSK_SafetyTask_PWMOFF(uint8_t bMotor)
 431:Src/mc_tasks.c **** {
 989              		.loc 3 431 1
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 24
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 90B5     		push	{r4, r7, lr}
 994              	.LCFI55:
 995              		.cfi_def_cfa_offset 12
 996              		.cfi_offset 4, -12
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 87B0     		sub	sp, sp, #28
 1000              	.LCFI56:
 1001              		.cfi_def_cfa_offset 40
 1002 0004 00AF     		add	r7, sp, #0
 1003              	.LCFI57:
 1004              		.cfi_def_cfa_register 7
 1005 0006 0346     		mov	r3, r0
 1006 0008 FB71     		strb	r3, [r7, #7]
 432:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 0 */
 433:Src/mc_tasks.c **** 
 434:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 0 */
 435:Src/mc_tasks.c ****   uint16_t CodeReturn = MC_NO_ERROR;
 1007              		.loc 3 435 12
 1008 000a 0023     		movs	r3, #0
 1009 000c FB82     		strh	r3, [r7, #22]	@ movhi
 436:Src/mc_tasks.c ****   uint8_t lbmotor = M1;
 1010              		.loc 3 436 11
 1011 000e 0023     		movs	r3, #0
 1012 0010 7B75     		strb	r3, [r7, #21]
 437:Src/mc_tasks.c ****   const uint16_t errMask[NBR_OF_MOTORS] = {VBUS_TEMP_ERR_MASK};
ARM GAS  /tmp/ccSlfBPZ.s 			page 40


 1013              		.loc 3 437 18
 1014 0012 0E23     		movs	r3, #14
 1015 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 438:Src/mc_tasks.c ****   /* Check for fault if FW protection is activated. It returns MC_OVER_TEMP or MC_NO_ERROR */
 439:Src/mc_tasks.c ****   if (M1 == bMotor)
 1016              		.loc 3 439 6
 1017 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1018 0018 002B     		cmp	r3, #0
 1019 001a 19D1     		bne	.L51
 1020              	.LBB3:
 440:Src/mc_tasks.c ****   {
 441:Src/mc_tasks.c ****     uint16_t rawValueM1 = RCM_ExecRegularConv(&TempRegConv_M1);
 1021              		.loc 3 441 27
 1022 001c 3C48     		ldr	r0, .L56
 1023 001e FFF7FEFF 		bl	RCM_ExecRegularConv
 1024 0022 0346     		mov	r3, r0
 1025 0024 7B82     		strh	r3, [r7, #18]	@ movhi
 442:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(&TempSensor_M1, rawValueM1);
 1026              		.loc 3 442 26
 1027 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1028 0028 5B00     		lsls	r3, r3, #1
 1029 002a 07F11802 		add	r2, r7, #24
 1030 002e 1344     		add	r3, r3, r2
 1031 0030 33F80C4C 		ldrh	r4, [r3, #-12]
 1032              		.loc 3 442 37
 1033 0034 7B8A     		ldrh	r3, [r7, #18]
 1034 0036 1946     		mov	r1, r3
 1035 0038 3648     		ldr	r0, .L56+4
 1036 003a FFF7FEFF 		bl	NTC_CalcAvTemp
 1037 003e 0346     		mov	r3, r0
 1038              		.loc 3 442 35
 1039 0040 2340     		ands	r3, r3, r4
 1040 0042 9BB2     		uxth	r3, r3
 1041              		.loc 3 442 16
 1042 0044 1AB2     		sxth	r2, r3
 1043 0046 B7F91630 		ldrsh	r3, [r7, #22]
 1044 004a 1343     		orrs	r3, r3, r2
 1045 004c 1BB2     		sxth	r3, r3
 1046 004e FB82     		strh	r3, [r7, #22]	@ movhi
 1047              	.L51:
 1048              	.LBE3:
 443:Src/mc_tasks.c ****   }
 444:Src/mc_tasks.c ****   else
 445:Src/mc_tasks.c ****   {
 446:Src/mc_tasks.c ****     /* Nothing to do */
 447:Src/mc_tasks.c ****   }
 448:Src/mc_tasks.c **** 
 449:Src/mc_tasks.c **** /* Due to warning array subscript 1 is above array bounds of PWMC_Handle_t *[1] [-Warray-bounds] */
 450:Src/mc_tasks.c ****    CodeReturn |= PWMC_IsFaultOccurred(pwmcHandle[lbmotor]);     /* check for fault. It return MC_OV
 1049              		.loc 3 450 18
 1050 0050 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1051 0052 314A     		ldr	r2, .L56+8
 1052 0054 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1053 0058 1846     		mov	r0, r3
 1054 005a FFF7FEFF 		bl	PWMC_IsFaultOccurred
 1055 005e 0346     		mov	r3, r0
 1056 0060 1A46     		mov	r2, r3
ARM GAS  /tmp/ccSlfBPZ.s 			page 41


 1057              		.loc 3 450 15
 1058 0062 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1059 0064 1343     		orrs	r3, r3, r2
 1060 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 451:Src/mc_tasks.c ****                                                      (for STM32F30x can return MC_OVER_VOLT in case
 452:Src/mc_tasks.c **** 
 453:Src/mc_tasks.c ****   if (M1 == bMotor)
 1061              		.loc 3 453 6
 1062 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1063 006a 002B     		cmp	r3, #0
 1064 006c 19D1     		bne	.L52
 1065              	.LBB4:
 454:Src/mc_tasks.c ****   {
 455:Src/mc_tasks.c ****     uint16_t rawValueM1 =  RCM_ExecRegularConv(&VbusRegConv_M1);
 1066              		.loc 3 455 28
 1067 006e 2B48     		ldr	r0, .L56+12
 1068 0070 FFF7FEFF 		bl	RCM_ExecRegularConv
 1069 0074 0346     		mov	r3, r0
 1070 0076 3B82     		strh	r3, [r7, #16]	@ movhi
 456:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1, rawValueM1);
 1071              		.loc 3 456 26
 1072 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 007a 5B00     		lsls	r3, r3, #1
 1074 007c 07F11802 		add	r2, r7, #24
 1075 0080 1344     		add	r3, r3, r2
 1076 0082 33F80C4C 		ldrh	r4, [r3, #-12]
 1077              		.loc 3 456 37
 1078 0086 3B8A     		ldrh	r3, [r7, #16]
 1079 0088 1946     		mov	r1, r3
 1080 008a 2548     		ldr	r0, .L56+16
 1081 008c FFF7FEFF 		bl	RVBS_CalcAvVbus
 1082 0090 0346     		mov	r3, r0
 1083              		.loc 3 456 35
 1084 0092 2340     		ands	r3, r3, r4
 1085 0094 9BB2     		uxth	r3, r3
 1086              		.loc 3 456 16
 1087 0096 1AB2     		sxth	r2, r3
 1088 0098 B7F91630 		ldrsh	r3, [r7, #22]
 1089 009c 1343     		orrs	r3, r3, r2
 1090 009e 1BB2     		sxth	r3, r3
 1091 00a0 FB82     		strh	r3, [r7, #22]	@ movhi
 1092              	.L52:
 1093              	.LBE4:
 457:Src/mc_tasks.c ****   }
 458:Src/mc_tasks.c ****   else
 459:Src/mc_tasks.c ****   {
 460:Src/mc_tasks.c ****     /* Nothing to do */
 461:Src/mc_tasks.c ****   }
 462:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[bMotor], CodeReturn, ~CodeReturn); /* Process faults */
 1094              		.loc 3 462 27
 1095 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1096              		.loc 3 462 3
 1097 00a4 2C22     		movs	r2, #44
 1098 00a6 02FB03F3 		mul	r3, r2, r3
 1099 00aa 1E4A     		ldr	r2, .L56+20
 1100 00ac 9818     		adds	r0, r3, r2
 1101 00ae FB8A     		ldrh	r3, [r7, #22]	@ movhi
ARM GAS  /tmp/ccSlfBPZ.s 			page 42


 1102 00b0 DB43     		mvns	r3, r3
 1103 00b2 9AB2     		uxth	r2, r3
 1104 00b4 FB8A     		ldrh	r3, [r7, #22]
 1105 00b6 1946     		mov	r1, r3
 1106 00b8 FFF7FEFF 		bl	MCI_FaultProcessing
 463:Src/mc_tasks.c **** 
 464:Src/mc_tasks.c ****   if (MCI_GetFaultState(&Mci[bMotor]) != (uint32_t)MC_NO_FAULTS)
 1107              		.loc 3 464 29
 1108 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1109              		.loc 3 464 7
 1110 00be 2C22     		movs	r2, #44
 1111 00c0 02FB03F3 		mul	r3, r2, r3
 1112 00c4 174A     		ldr	r2, .L56+20
 1113 00c6 1344     		add	r3, r3, r2
 1114 00c8 1846     		mov	r0, r3
 1115 00ca FFF7FEFF 		bl	MCI_GetFaultState
 1116 00ce 0346     		mov	r3, r0
 1117              		.loc 3 464 6
 1118 00d0 002B     		cmp	r3, #0
 1119 00d2 18D0     		beq	.L55
 465:Src/mc_tasks.c ****   {
 466:Src/mc_tasks.c ****       SCC_Stop(&SCC);
 1120              		.loc 3 466 7
 1121 00d4 1448     		ldr	r0, .L56+24
 1122 00d6 FFF7FEFF 		bl	SCC_Stop
 467:Src/mc_tasks.c ****       OTT_Stop(&OTT);
 1123              		.loc 3 467 7
 1124 00da 1448     		ldr	r0, .L56+28
 1125 00dc FFF7FEFF 		bl	OTT_Stop
 468:Src/mc_tasks.c ****     PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
 1126              		.loc 3 468 5
 1127 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1128 00e2 0D4A     		ldr	r2, .L56+8
 1129 00e4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1130 00e8 1846     		mov	r0, r3
 1131 00ea FFF7FEFF 		bl	PWMC_SwitchOffPWM
 469:Src/mc_tasks.c ****     if (MCPA_UART_A.Mark != 0U)
 1132              		.loc 3 469 20
 1133 00ee 104B     		ldr	r3, .L56+32
 1134 00f0 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 1135              		.loc 3 469 8
 1136 00f4 002B     		cmp	r3, #0
 1137 00f6 02D0     		beq	.L54
 470:Src/mc_tasks.c ****     {
 471:Src/mc_tasks.c ****       MCPA_flushDataLog (&MCPA_UART_A);
 1138              		.loc 3 471 7
 1139 00f8 0D48     		ldr	r0, .L56+32
 1140 00fa FFF7FEFF 		bl	MCPA_flushDataLog
 1141              	.L54:
 472:Src/mc_tasks.c ****     }
 473:Src/mc_tasks.c ****     else
 474:Src/mc_tasks.c ****     {
 475:Src/mc_tasks.c ****       /* Nothing to do */
 476:Src/mc_tasks.c ****     }
 477:Src/mc_tasks.c ****     FOC_Clear(bMotor);
 1142              		.loc 3 477 5
 1143 00fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccSlfBPZ.s 			page 43


 1144 0100 1846     		mov	r0, r3
 1145 0102 FFF7FEFF 		bl	FOC_Clear
 1146              	.L55:
 478:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
 479:Src/mc_tasks.c **** 
 480:Src/mc_tasks.c ****     /* USER CODE END TSK_SafetyTask_PWMOFF 1 */
 481:Src/mc_tasks.c ****   }
 482:Src/mc_tasks.c ****   else
 483:Src/mc_tasks.c ****   {
 484:Src/mc_tasks.c ****     /* No errors */
 485:Src/mc_tasks.c ****   }
 486:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 3 */
 487:Src/mc_tasks.c **** 
 488:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 3 */
 489:Src/mc_tasks.c **** }
 1147              		.loc 3 489 1
 1148 0106 00BF     		nop
 1149 0108 1C37     		adds	r7, r7, #28
 1150              	.LCFI58:
 1151              		.cfi_def_cfa_offset 12
 1152 010a BD46     		mov	sp, r7
 1153              	.LCFI59:
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 010c 90BD     		pop	{r4, r7, pc}
 1157              	.L57:
 1158 010e 00BF     		.align	2
 1159              	.L56:
 1160 0110 00000000 		.word	TempRegConv_M1
 1161 0114 00000000 		.word	TempSensor_M1
 1162 0118 00000000 		.word	pwmcHandle
 1163 011c 00000000 		.word	VbusRegConv_M1
 1164 0120 00000000 		.word	BusVoltageSensor_M1
 1165 0124 00000000 		.word	Mci
 1166 0128 00000000 		.word	SCC
 1167 012c 00000000 		.word	OTT
 1168 0130 00000000 		.word	MCPA_UART_A
 1169              		.cfi_endproc
 1170              	.LFE1881:
 1172              		.section	.text.TSK_HardwareFaultTask,"ax",%progbits
 1173              		.align	1
 1174              		.weak	TSK_HardwareFaultTask
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu fpv4-sp-d16
 1180              	TSK_HardwareFaultTask:
 1181              	.LFB1882:
 490:Src/mc_tasks.c **** 
 491:Src/mc_tasks.c **** /**
 492:Src/mc_tasks.c ****   * @brief  Puts the Motor Control subsystem in in safety conditions on a Hard Fault
 493:Src/mc_tasks.c ****   *
 494:Src/mc_tasks.c ****   *  This function is to be executed when a general hardware failure has been detected
 495:Src/mc_tasks.c ****   * by the microcontroller and is used to put the system in safety condition.
 496:Src/mc_tasks.c ****   */
 497:Src/mc_tasks.c **** __weak void TSK_HardwareFaultTask(void)
 498:Src/mc_tasks.c **** {
ARM GAS  /tmp/ccSlfBPZ.s 			page 44


 1182              		.loc 3 498 1
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186 0000 80B5     		push	{r7, lr}
 1187              	.LCFI60:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 00AF     		add	r7, sp, #0
 1192              	.LCFI61:
 1193              		.cfi_def_cfa_register 7
 499:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 0 */
 500:Src/mc_tasks.c **** 
 501:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 0 */
 502:Src/mc_tasks.c ****   SCC_Stop(&SCC);
 1194              		.loc 3 502 3
 1195 0004 0748     		ldr	r0, .L59
 1196 0006 FFF7FEFF 		bl	SCC_Stop
 503:Src/mc_tasks.c ****   OTT_Stop(&OTT);
 1197              		.loc 3 503 3
 1198 000a 0748     		ldr	r0, .L59+4
 1199 000c FFF7FEFF 		bl	OTT_Stop
 504:Src/mc_tasks.c ****    FOC_Clear(M1);
 1200              		.loc 3 504 4
 1201 0010 0020     		movs	r0, #0
 1202 0012 FFF7FEFF 		bl	FOC_Clear
 505:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[M1], MC_SW_ERROR, 0);
 1203              		.loc 3 505 3
 1204 0016 0022     		movs	r2, #0
 1205 0018 8021     		movs	r1, #128
 1206 001a 0448     		ldr	r0, .L59+8
 1207 001c FFF7FEFF 		bl	MCI_FaultProcessing
 506:Src/mc_tasks.c **** 
 507:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 1 */
 508:Src/mc_tasks.c **** 
 509:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 1 */
 510:Src/mc_tasks.c **** }
 1208              		.loc 3 510 1
 1209 0020 00BF     		nop
 1210 0022 80BD     		pop	{r7, pc}
 1211              	.L60:
 1212              		.align	2
 1213              	.L59:
 1214 0024 00000000 		.word	SCC
 1215 0028 00000000 		.word	OTT
 1216 002c 00000000 		.word	Mci
 1217              		.cfi_endproc
 1218              	.LFE1882:
 1220              		.section	.text.startMediumFrequencyTask,"ax",%progbits
 1221              		.align	1
 1222              		.global	startMediumFrequencyTask
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1226              		.fpu fpv4-sp-d16
 1228              	startMediumFrequencyTask:
ARM GAS  /tmp/ccSlfBPZ.s 			page 45


 1229              	.LFB1883:
 511:Src/mc_tasks.c **** 
 512:Src/mc_tasks.c **** /* startMediumFrequencyTask function */
 513:Src/mc_tasks.c **** void startMediumFrequencyTask(void const * argument)
 514:Src/mc_tasks.c **** {
 1230              		.loc 3 514 1
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 8
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
 1234 0000 80B5     		push	{r7, lr}
 1235              	.LCFI62:
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 7, -8
 1238              		.cfi_offset 14, -4
 1239 0002 82B0     		sub	sp, sp, #8
 1240              	.LCFI63:
 1241              		.cfi_def_cfa_offset 16
 1242 0004 00AF     		add	r7, sp, #0
 1243              	.LCFI64:
 1244              		.cfi_def_cfa_register 7
 1245 0006 7860     		str	r0, [r7, #4]
 515:Src/mc_tasks.c ****   /* USER CODE BEGIN MF task 1 */
 516:Src/mc_tasks.c **** 
 517:Src/mc_tasks.c ****   vTaskDelay(100);
 1246              		.loc 3 517 3
 1247 0008 6420     		movs	r0, #100
 1248 000a FFF7FEFF 		bl	vTaskDelay
 518:Src/mc_tasks.c ****   MC_StartMotorOpenLoop(5000, 0, 30); // Higher voltage and frequency for reliable start
 1249              		.loc 3 518 3
 1250 000e 1E22     		movs	r2, #30
 1251 0010 0021     		movs	r1, #0
 1252 0012 41F28830 		movw	r0, #5000
 1253 0016 FFF7FEFF 		bl	MC_StartMotorOpenLoop
 1254              	.L62:
 519:Src/mc_tasks.c **** 
 520:Src/mc_tasks.c ****   /* Infinite loop */
 521:Src/mc_tasks.c ****   for(;;)
 522:Src/mc_tasks.c ****   {
 523:Src/mc_tasks.c ****     /* Delay of 500us */
 524:Src/mc_tasks.c ****     vTaskDelay(1);
 1255              		.loc 3 524 5 discriminator 1
 1256 001a 0120     		movs	r0, #1
 1257 001c FFF7FEFF 		bl	vTaskDelay
 525:Src/mc_tasks.c **** 
 526:Src/mc_tasks.c ****     /* Buffer is ready by the HW layer to be processed */
 527:Src/mc_tasks.c ****     /* NO DMA interrupt */
 528:Src/mc_tasks.c ****     // if (LL_DMA_IsActiveFlag_TC(DMA_RX_A, DMACH_RX_A))
 529:Src/mc_tasks.c ****     // {
 530:Src/mc_tasks.c ****     //   LL_DMA_ClearFlag_TC(DMA_RX_A, DMACH_RX_A);
 531:Src/mc_tasks.c ****     //   ASPEP_HWDataReceivedIT(&aspepOverUartA);
 532:Src/mc_tasks.c ****     // }
 533:Src/mc_tasks.c ****     // else
 534:Src/mc_tasks.c ****     // {
 535:Src/mc_tasks.c ****     //   /* Nothing to do */
 536:Src/mc_tasks.c ****     // }
 537:Src/mc_tasks.c **** 
 538:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccSlfBPZ.s 			page 46


 539:Src/mc_tasks.c ****                 /* Process packet */
 540:Src/mc_tasks.c ****     
 541:Src/mc_tasks.c ****     MC_RunMotorControlTasks();
 1258              		.loc 3 541 5 discriminator 1
 1259 0020 FFF7FEFF 		bl	MC_RunMotorControlTasks
 524:Src/mc_tasks.c **** 
 1260              		.loc 3 524 5 discriminator 1
 1261 0024 F9E7     		b	.L62
 1262              		.cfi_endproc
 1263              	.LFE1883:
 1265              		.section	.text.StartSafetyTask,"ax",%progbits
 1266              		.align	1
 1267              		.global	StartSafetyTask
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1271              		.fpu fpv4-sp-d16
 1273              	StartSafetyTask:
 1274              	.LFB1884:
 542:Src/mc_tasks.c ****   }
 543:Src/mc_tasks.c ****   /* USER CODE END MF task 1 */
 544:Src/mc_tasks.c **** }
 545:Src/mc_tasks.c **** 
 546:Src/mc_tasks.c **** /* startSafetyTask function */
 547:Src/mc_tasks.c **** void StartSafetyTask(void const * argument)
 548:Src/mc_tasks.c **** {
 1275              		.loc 3 548 1
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 8
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              	.LCFI65:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 82B0     		sub	sp, sp, #8
 1285              	.LCFI66:
 1286              		.cfi_def_cfa_offset 16
 1287 0004 00AF     		add	r7, sp, #0
 1288              	.LCFI67:
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
 1291              	.L64:
 549:Src/mc_tasks.c ****   /* USER CODE BEGIN SF task 1 */
 550:Src/mc_tasks.c ****   /* Infinite loop */
 551:Src/mc_tasks.c ****   for(;;)
 552:Src/mc_tasks.c ****   {
 553:Src/mc_tasks.c ****     /* Delay of 500us */
 554:Src/mc_tasks.c ****     vTaskDelay(1);
 1292              		.loc 3 554 5 discriminator 1
 1293 0008 0120     		movs	r0, #1
 1294 000a FFF7FEFF 		bl	vTaskDelay
 555:Src/mc_tasks.c ****     TSK_SafetyTask();
 1295              		.loc 3 555 5 discriminator 1
 1296 000e FFF7FEFF 		bl	TSK_SafetyTask
 554:Src/mc_tasks.c ****     TSK_SafetyTask();
 1297              		.loc 3 554 5 discriminator 1
ARM GAS  /tmp/ccSlfBPZ.s 			page 47


 1298 0012 F9E7     		b	.L64
 1299              		.cfi_endproc
 1300              	.LFE1884:
 1302              		.section	.text.UI_HandleStartStopButton_cb,"ax",%progbits
 1303              		.align	1
 1304              		.weak	UI_HandleStartStopButton_cb
 1305              		.syntax unified
 1306              		.thumb
 1307              		.thumb_func
 1308              		.fpu fpv4-sp-d16
 1310              	UI_HandleStartStopButton_cb:
 1311              	.LFB1885:
 556:Src/mc_tasks.c ****   }
 557:Src/mc_tasks.c ****   /* USER CODE END SF task 1 */
 558:Src/mc_tasks.c **** }
 559:Src/mc_tasks.c **** 
 560:Src/mc_tasks.c **** __weak void UI_HandleStartStopButton_cb (void)
 561:Src/mc_tasks.c **** {
 1312              		.loc 3 561 1
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              	.LCFI68:
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 00AF     		add	r7, sp, #0
 1322              	.LCFI69:
 1323              		.cfi_def_cfa_register 7
 562:Src/mc_tasks.c **** /* USER CODE BEGIN START_STOP_BTN */
 563:Src/mc_tasks.c ****   if (IDLE == MC_GetSTMStateMotor1())
 1324              		.loc 3 563 15
 1325 0004 FFF7FEFF 		bl	MC_GetSTMStateMotor1
 1326 0008 0346     		mov	r3, r0
 1327              		.loc 3 563 6
 1328 000a 002B     		cmp	r3, #0
 1329 000c 02D1     		bne	.L66
 564:Src/mc_tasks.c ****   {
 565:Src/mc_tasks.c ****     /* Ramp parameters should be tuned for the actual motor */
 566:Src/mc_tasks.c ****     (void)MC_StartMotor1();
 1330              		.loc 3 566 11
 1331 000e FFF7FEFF 		bl	MC_StartMotor1
 567:Src/mc_tasks.c ****   }
 568:Src/mc_tasks.c ****   else
 569:Src/mc_tasks.c ****   {
 570:Src/mc_tasks.c ****     (void)MC_StopMotor1();
 571:Src/mc_tasks.c ****   }
 572:Src/mc_tasks.c **** /* USER CODE END START_STOP_BTN */
 573:Src/mc_tasks.c **** }
 1332              		.loc 3 573 1
 1333 0012 01E0     		b	.L68
 1334              	.L66:
 570:Src/mc_tasks.c ****   }
 1335              		.loc 3 570 11
 1336 0014 FFF7FEFF 		bl	MC_StopMotor1
 1337              	.L68:
ARM GAS  /tmp/ccSlfBPZ.s 			page 48


 1338              		.loc 3 573 1
 1339 0018 00BF     		nop
 1340 001a 80BD     		pop	{r7, pc}
 1341              		.cfi_endproc
 1342              	.LFE1885:
 1344              		.section	.text.mc_lock_pins,"ax",%progbits
 1345              		.align	1
 1346              		.weak	mc_lock_pins
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1350              		.fpu fpv4-sp-d16
 1352              	mc_lock_pins:
 1353              	.LFB1886:
 574:Src/mc_tasks.c **** 
 575:Src/mc_tasks.c ****  /**
 576:Src/mc_tasks.c ****   * @brief  Locks GPIO pins used for Motor Control to prevent accidental reconfiguration.
 577:Src/mc_tasks.c ****   */
 578:Src/mc_tasks.c **** __weak void mc_lock_pins (void)
 579:Src/mc_tasks.c **** {
 1354              		.loc 3 579 1
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358 0000 80B5     		push	{r7, lr}
 1359              	.LCFI70:
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 00AF     		add	r7, sp, #0
 1364              	.LCFI71:
 1365              		.cfi_def_cfa_register 7
 580:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_TEMPERATURE_GPIO_Port, M1_TEMPERATURE_Pin);
 1366              		.loc 3 580 1
 1367 0004 1021     		movs	r1, #16
 1368 0006 2448     		ldr	r0, .L70
 1369 0008 FFF7FEFF 		bl	LL_GPIO_LockPin
 581:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_BUS_VOLTAGE_GPIO_Port, M1_BUS_VOLTAGE_Pin);
 1370              		.loc 3 581 1
 1371 000c 0121     		movs	r1, #1
 1372 000e 4FF09040 		mov	r0, #1207959552
 1373 0012 FFF7FEFF 		bl	LL_GPIO_LockPin
 582:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_V_GPIO_Port, M1_CURR_SHUNT_V_Pin);
 1374              		.loc 3 582 1
 1375 0016 8021     		movs	r1, #128
 1376 0018 4FF09040 		mov	r0, #1207959552
 1377 001c FFF7FEFF 		bl	LL_GPIO_LockPin
 583:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_U_GPIO_Port, M1_CURR_SHUNT_U_Pin);
 1378              		.loc 3 583 1
 1379 0020 0221     		movs	r1, #2
 1380 0022 4FF09040 		mov	r0, #1207959552
 1381 0026 FFF7FEFF 		bl	LL_GPIO_LockPin
 584:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP1_EXT_GAIN_GPIO_Port, M1_OPAMP1_EXT_GAIN_Pin);
 1382              		.loc 3 584 1
 1383 002a 0821     		movs	r1, #8
 1384 002c 4FF09040 		mov	r0, #1207959552
 1385 0030 FFF7FEFF 		bl	LL_GPIO_LockPin
ARM GAS  /tmp/ccSlfBPZ.s 			page 49


 585:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP1_OUT_GPIO_Port, M1_OPAMP1_OUT_Pin);
 1386              		.loc 3 585 1
 1387 0034 0421     		movs	r1, #4
 1388 0036 4FF09040 		mov	r0, #1207959552
 1389 003a FFF7FEFF 		bl	LL_GPIO_LockPin
 586:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP2_OUT_GPIO_Port, M1_OPAMP2_OUT_Pin);
 1390              		.loc 3 586 1
 1391 003e 4021     		movs	r1, #64
 1392 0040 4FF09040 		mov	r0, #1207959552
 1393 0044 FFF7FEFF 		bl	LL_GPIO_LockPin
 587:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP2_EXT_GAIN_GPIO_Port, M1_OPAMP2_EXT_GAIN_Pin);
 1394              		.loc 3 587 1
 1395 0048 2021     		movs	r1, #32
 1396 004a 1348     		ldr	r0, .L70
 1397 004c FFF7FEFF 		bl	LL_GPIO_LockPin
 588:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_W_GPIO_Port, M1_CURR_SHUNT_W_Pin);
 1398              		.loc 3 588 1
 1399 0050 0121     		movs	r1, #1
 1400 0052 1248     		ldr	r0, .L70+4
 1401 0054 FFF7FEFF 		bl	LL_GPIO_LockPin
 589:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UH_GPIO_Port, M1_PWM_UH_Pin);
 1402              		.loc 3 589 1
 1403 0058 4FF40071 		mov	r1, #512
 1404 005c 1048     		ldr	r0, .L70+8
 1405 005e FFF7FEFF 		bl	LL_GPIO_LockPin
 590:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VH_GPIO_Port, M1_PWM_VH_Pin);
 1406              		.loc 3 590 1
 1407 0062 4FF40061 		mov	r1, #2048
 1408 0066 0E48     		ldr	r0, .L70+8
 1409 0068 FFF7FEFF 		bl	LL_GPIO_LockPin
 591:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VL_GPIO_Port, M1_PWM_VL_Pin);
 1410              		.loc 3 591 1
 1411 006c 4FF48061 		mov	r1, #1024
 1412 0070 0B48     		ldr	r0, .L70+8
 1413 0072 FFF7FEFF 		bl	LL_GPIO_LockPin
 592:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WH_GPIO_Port, M1_PWM_WH_Pin);
 1414              		.loc 3 592 1
 1415 0076 4FF40051 		mov	r1, #8192
 1416 007a 0948     		ldr	r0, .L70+8
 1417 007c FFF7FEFF 		bl	LL_GPIO_LockPin
 593:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WL_GPIO_Port, M1_PWM_WL_Pin);
 1418              		.loc 3 593 1
 1419 0080 4FF48051 		mov	r1, #4096
 1420 0084 0648     		ldr	r0, .L70+8
 1421 0086 FFF7FEFF 		bl	LL_GPIO_LockPin
 594:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UL_GPIO_Port, M1_PWM_UL_Pin);
 1422              		.loc 3 594 1
 1423 008a 4FF48071 		mov	r1, #256
 1424 008e 0448     		ldr	r0, .L70+8
 1425 0090 FFF7FEFF 		bl	LL_GPIO_LockPin
 595:Src/mc_tasks.c **** }
 1426              		.loc 3 595 1
 1427 0094 00BF     		nop
 1428 0096 80BD     		pop	{r7, pc}
 1429              	.L71:
 1430              		.align	2
 1431              	.L70:
ARM GAS  /tmp/ccSlfBPZ.s 			page 50


 1432 0098 00080048 		.word	1207961600
 1433 009c 00040048 		.word	1207960576
 1434 00a0 00100048 		.word	1207963648
 1435              		.cfi_endproc
 1436              	.LFE1886:
 1438              		.text
 1439              	.Letext0:
 1440              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 1441              		.file 5 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1442              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 1443              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1444              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1445              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1446              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1447              		.file 11 "Inc/mc_type.h"
 1448              		.file 12 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 1449              		.file 13 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 1450              		.file 14 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 1451              		.file 15 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 1452              		.file 16 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 1453              		.file 17 "Inc/pwm_curr_fdbk.h"
 1454              		.file 18 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
 1455              		.file 19 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 1456              		.file 20 "Inc/mc_interface.h"
 1457              		.file 21 "Inc/regular_conversion_manager.h"
 1458              		.file 22 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 1459              		.file 23 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 1460              		.file 24 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/stspin32g4.h"
 1461              		.file 25 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
 1462              		.file 26 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 1463              		.file 27 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_one_touch_tuning.h"
 1464              		.file 28 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 1465              		.file 29 "Inc/hall_speed_pos_fdbk.h"
 1466              		.file 30 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_hall_tuning.h"
 1467              		.file 31 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mp_self_com_ctrl.h"
 1468              		.file 32 "Inc/mc_config_common.h"
 1469              		.file 33 "Inc/mc_config.h"
 1470              		.file 34 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 1471              		.file 35 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcp.h"
 1472              		.file 36 "Inc/aspep.h"
 1473              		.file 37 "MCSDK_v6.3.2-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcpa.h"
 1474              		.file 38 "Inc/mcp_config.h"
ARM GAS  /tmp/ccSlfBPZ.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mc_tasks.c
     /tmp/ccSlfBPZ.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccSlfBPZ.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/ccSlfBPZ.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccSlfBPZ.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/ccSlfBPZ.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccSlfBPZ.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/ccSlfBPZ.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccSlfBPZ.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/ccSlfBPZ.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccSlfBPZ.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/ccSlfBPZ.s:48     .text.LL_GPIO_LockPin:0000000000000000 $t
     /tmp/ccSlfBPZ.s:55     .text.LL_GPIO_LockPin:0000000000000000 LL_GPIO_LockPin
     /tmp/ccSlfBPZ.s:114    .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccSlfBPZ.s:117    .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB
     /tmp/ccSlfBPZ.s:131    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccSlfBPZ.s:134    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccSlfBPZ.s:137    .text.MC_Perf_Measure_Start:0000000000000000 $t
     /tmp/ccSlfBPZ.s:143    .text.MC_Perf_Measure_Start:0000000000000000 MC_Perf_Measure_Start
     /tmp/ccSlfBPZ.s:195    .text.MC_Perf_Measure_Start:000000000000002c $d
     /tmp/ccSlfBPZ.s:200    .bss.hMFTaskCounterM1:0000000000000000 $d
     /tmp/ccSlfBPZ.s:203    .bss.hMFTaskCounterM1:0000000000000000 hMFTaskCounterM1
     /tmp/ccSlfBPZ.s:206    .bss.hBootCapDelayCounterM1:0000000000000000 $d
     /tmp/ccSlfBPZ.s:209    .bss.hBootCapDelayCounterM1:0000000000000000 hBootCapDelayCounterM1
     /tmp/ccSlfBPZ.s:212    .bss.hStopPermanencyCounterM1:0000000000000000 $d
     /tmp/ccSlfBPZ.s:215    .bss.hStopPermanencyCounterM1:0000000000000000 hStopPermanencyCounterM1
     /tmp/ccSlfBPZ.s:220    .bss.bMCBootCompleted:0000000000000000 bMCBootCompleted
     /tmp/ccSlfBPZ.s:221    .bss.bMCBootCompleted:0000000000000000 $d
     /tmp/ccSlfBPZ.s:223    .rodata:0000000000000000 $d
     /tmp/ccSlfBPZ.s:233    .text.MCboot:0000000000000000 $t
     /tmp/ccSlfBPZ.s:240    .text.MCboot:0000000000000000 MCboot
     /tmp/ccSlfBPZ.s:353    .text.MCboot:00000000000000a0 $d
     /tmp/ccSlfBPZ.s:370    .text.MC_StartMotorOpenLoop:0000000000000000 $t
     /tmp/ccSlfBPZ.s:377    .text.MC_StartMotorOpenLoop:0000000000000000 MC_StartMotorOpenLoop
     /tmp/ccSlfBPZ.s:450    .text.MC_StartMotorOpenLoop:0000000000000054 $d
     /tmp/ccSlfBPZ.s:457    .text.MC_RunMotorControlTasks:0000000000000000 $t
     /tmp/ccSlfBPZ.s:464    .text.MC_RunMotorControlTasks:0000000000000000 MC_RunMotorControlTasks
     /tmp/ccSlfBPZ.s:619    .text.MC_RunMotorControlTasks:00000000000000cc $d
     /tmp/ccSlfBPZ.s:631    .text.TSK_SetChargeBootCapDelayM1:0000000000000000 $t
     /tmp/ccSlfBPZ.s:638    .text.TSK_SetChargeBootCapDelayM1:0000000000000000 TSK_SetChargeBootCapDelayM1
     /tmp/ccSlfBPZ.s:678    .text.TSK_SetChargeBootCapDelayM1:000000000000001c $d
     /tmp/ccSlfBPZ.s:683    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000000 $t
     /tmp/ccSlfBPZ.s:690    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000000 TSK_ChargeBootCapDelayHasElapsedM1
     /tmp/ccSlfBPZ.s:740    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000028 $d
     /tmp/ccSlfBPZ.s:745    .text.TSK_SetStopPermanencyTimeM1:0000000000000000 $t
     /tmp/ccSlfBPZ.s:752    .text.TSK_SetStopPermanencyTimeM1:0000000000000000 TSK_SetStopPermanencyTimeM1
     /tmp/ccSlfBPZ.s:792    .text.TSK_SetStopPermanencyTimeM1:000000000000001c $d
     /tmp/ccSlfBPZ.s:797    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000000 $t
     /tmp/ccSlfBPZ.s:804    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000000 TSK_StopPermanencyTimeHasElapsedM1
     /tmp/ccSlfBPZ.s:854    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000028 $d
     /tmp/ccSlfBPZ.s:859    .text.TSK_HighFrequencyTask:0000000000000000 $t
     /tmp/ccSlfBPZ.s:866    .text.TSK_HighFrequencyTask:0000000000000000 TSK_HighFrequencyTask
     /tmp/ccSlfBPZ.s:929    .text.TSK_HighFrequencyTask:0000000000000048 $d
     /tmp/ccSlfBPZ.s:936    .text.TSK_SafetyTask:0000000000000000 $t
     /tmp/ccSlfBPZ.s:943    .text.TSK_SafetyTask:0000000000000000 TSK_SafetyTask
     /tmp/ccSlfBPZ.s:974    .text.TSK_SafetyTask:0000000000000018 $d
ARM GAS  /tmp/ccSlfBPZ.s 			page 52


     /tmp/ccSlfBPZ.s:980    .text.TSK_SafetyTask_PWMOFF:0000000000000000 $t
     /tmp/ccSlfBPZ.s:987    .text.TSK_SafetyTask_PWMOFF:0000000000000000 TSK_SafetyTask_PWMOFF
     /tmp/ccSlfBPZ.s:1160   .text.TSK_SafetyTask_PWMOFF:0000000000000110 $d
     /tmp/ccSlfBPZ.s:1173   .text.TSK_HardwareFaultTask:0000000000000000 $t
     /tmp/ccSlfBPZ.s:1180   .text.TSK_HardwareFaultTask:0000000000000000 TSK_HardwareFaultTask
     /tmp/ccSlfBPZ.s:1214   .text.TSK_HardwareFaultTask:0000000000000024 $d
     /tmp/ccSlfBPZ.s:1221   .text.startMediumFrequencyTask:0000000000000000 $t
     /tmp/ccSlfBPZ.s:1228   .text.startMediumFrequencyTask:0000000000000000 startMediumFrequencyTask
     /tmp/ccSlfBPZ.s:1266   .text.StartSafetyTask:0000000000000000 $t
     /tmp/ccSlfBPZ.s:1273   .text.StartSafetyTask:0000000000000000 StartSafetyTask
     /tmp/ccSlfBPZ.s:1303   .text.UI_HandleStartStopButton_cb:0000000000000000 $t
     /tmp/ccSlfBPZ.s:1310   .text.UI_HandleStartStopButton_cb:0000000000000000 UI_HandleStartStopButton_cb
     /tmp/ccSlfBPZ.s:1345   .text.mc_lock_pins:0000000000000000 $t
     /tmp/ccSlfBPZ.s:1352   .text.mc_lock_pins:0000000000000000 mc_lock_pins
     /tmp/ccSlfBPZ.s:1432   .text.mc_lock_pins:0000000000000098 $d

UNDEFINED SYMBOLS
FOC_Init
ASPEP_start
PID_HandleInit
VSS_Init
RCM_RegisterRegConv
RVBS_Init
NTC_Init
MC_Perf_Measure_Init
STSPIN32G4_init
STSPIN32G4_reset
STSPIN32G4_setVCC
STSPIN32G4_setVDSP
STSPIN32G4_clearFaults
MC_APP_BootHook
Mci
aspepOverUartA
PIDSpeedHandle_M1
VirtualSpeedSensorM1
VbusRegConv_M1
BusVoltageSensor_M1
TempRegConv_M1
TempSensor_M1
PerfTraces
HdlSTSPING4
MCI_GetSTMState
MCI_StartMotor
pwmcHandle
FOCVars
MC_BG_Perf_Measure_Start
TSK_MediumFrequencyTaskM1
MC_BG_Perf_Measure_Stop
MC_APP_PostMediumFrequencyHook_M1
MCP_ReceivedPacket
MCP_Over_UartA
FOC_HighFrequencyTask
MCPA_dataLog
MC_Perf_Measure_Stop
GLOBAL_TIMESTAMP
MCPA_UART_A
SCC_CheckOC_RL
ARM GAS  /tmp/ccSlfBPZ.s 			page 53


SCC
RCM_ExecRegularConv
NTC_CalcAvTemp
PWMC_IsFaultOccurred
RVBS_CalcAvVbus
MCI_FaultProcessing
MCI_GetFaultState
SCC_Stop
OTT_Stop
PWMC_SwitchOffPWM
MCPA_flushDataLog
FOC_Clear
OTT
vTaskDelay
MC_GetSTMStateMotor1
MC_StartMotor1
MC_StopMotor1
